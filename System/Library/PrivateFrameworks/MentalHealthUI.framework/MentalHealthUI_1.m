uint64_t sub_2417B7B0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_2418A90B4();
  sub_2417B7B48();
  return sub_2417B680C((uint64_t)&a1[*(int *)(v2 + 44)]);
}

void sub_2417B7B48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F510)
  {
    sub_24172570C(255, &qword_25714F518, (uint64_t (*)(uint64_t))sub_2417B7BC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_241778460();
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F510);
  }
}

void sub_2417B7BC8()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714F520)
  {
    sub_241728250(255, &qword_25714F528, sub_2417B7C50, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    sub_2417B82B0();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714F520);
  }
}

void sub_2417B7C50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_25714F530)
  {
    sub_241728250(255, &qword_25714F538, sub_2417B7D20, (void (*)(uint64_t))sub_2417B80A0);
    v3 = v2;
    sub_24174184C();
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_2417B81EC();
    v7[3] = sub_24172159C((unint64_t *)&qword_25714CB40, (uint64_t (*)(uint64_t))sub_24174184C, MEMORY[0x24BEE30C8]);
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF2800], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714F530);
  }
}

void sub_2417B7D20(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714F540)
  {
    sub_2417B7D94();
    v5[0] = v2;
    v5[1] = sub_2417B8020();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2150], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714F540);
  }
}

void sub_2417B7D94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F548)
  {
    sub_2417B7E10();
    sub_2417B7FC0(255, (unint64_t *)&qword_25714C1F8, (unint64_t *)&qword_25714C200, MEMORY[0x24BDF1948]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F548);
  }
}

void sub_2417B7E10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F550)
  {
    sub_24172570C(255, &qword_25714F558, (uint64_t (*)(uint64_t))sub_2417B7EA8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417406BC(&qword_25714F588, &qword_25714F558, (uint64_t (*)(uint64_t))sub_2417B7EA8);
    v0 = sub_2418A972C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F550);
  }
}

void sub_2417B7EA8()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714F560)
  {
    sub_2417B7F10();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714F560);
  }
}

void sub_2417B7F10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F568)
  {
    sub_241721CBC(255, &qword_25714F570, sub_2417B7FA4);
    sub_2417B7FC0(255, (unint64_t *)&qword_25714F580, &qword_254391080, MEMORY[0x24BEE1768]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F568);
  }
}

void sub_2417B7FA4(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714F578, (void (*)(uint64_t))sub_241728808);
}

void sub_2417B7FC0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_24172887C(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v5 = sub_2418A9090();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_2417B8020()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714F590;
  if (!qword_25714F590)
  {
    sub_2417B7D94();
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714F598, (uint64_t (*)(uint64_t))sub_2417B7E10, MEMORY[0x24BDF4498]);
    v3[1] = sub_24172858C();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714F590);
  }
  return result;
}

void sub_2417B80A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F5A0)
  {
    sub_2417B8118();
    sub_24172159C(&qword_25714F5C0, (uint64_t (*)(uint64_t))sub_2417B8118, MEMORY[0x24BDEF780]);
    v0 = sub_2418A8F4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F5A0);
  }
}

void sub_2417B8118()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F5A8)
  {
    sub_2417B8190();
    sub_24172159C((unint64_t *)&qword_25714F5B8, (uint64_t (*)(uint64_t))sub_2417B8190, MEMORY[0x24BDEECA0]);
    v0 = sub_2418A8DD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F5A8);
  }
}

void sub_2417B8190()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F5B0)
  {
    v0 = sub_2418A8C04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F5B0);
  }
}

unint64_t sub_2417B81EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_25714F5C8;
  if (!qword_25714F5C8)
  {
    sub_241728250(255, &qword_25714F538, sub_2417B7D20, (void (*)(uint64_t))sub_2417B80A0);
    v2 = v1;
    sub_2417B7D94();
    v4[2] = v3;
    v4[3] = sub_2417B8020();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_24172159C(&qword_25714F5D0, (uint64_t (*)(uint64_t))sub_2417B80A0, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_25714F5C8);
  }
  return result;
}

void sub_2417B82B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F5D8)
  {
    sub_241728250(255, &qword_25714F528, sub_2417B7C50, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    sub_24172887C(255, &qword_25714F5E0, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F5D8);
  }
}

uint64_t sub_2417B834C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241728250(0, &qword_25714F528, sub_2417B7C50, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417B83A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417B82B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417B83F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 160);
  v3 = *(_QWORD *)(a1 + 168);
  v4 = *(_BYTE *)(a1 + 176);
  sub_2417289EC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2417289EC(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_2417B84CC()
{
  return sub_24172159C(&qword_25714F5E8, (uint64_t (*)(uint64_t))sub_2417B84F8, MEMORY[0x24BDEBE40]);
}

void sub_2417B84F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F5F0)
  {
    sub_24172570C(255, &qword_25714F518, (uint64_t (*)(uint64_t))sub_2417B7BC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417406BC(&qword_25714F5F8, &qword_25714F518, (uint64_t (*)(uint64_t))sub_2417B7BC8);
    v0 = sub_2418A8610();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F5F0);
  }
}

uint64_t MentalWellbeingNotificationSettingsView.init(settingsModel:assessmentsSettingModel:navigationTitleText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;
  char v11;
  uint64_t v12;

  sub_2418A96C0();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)a5 = sub_241728CF8;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = sub_2417B8664;
  *(_QWORD *)(a5 + 32) = result;
  *(_BYTE *)(a5 + 40) = 0;
  *(_QWORD *)(a5 + 48) = a3;
  *(_QWORD *)(a5 + 56) = a4;
  *(_BYTE *)(a5 + 64) = v11;
  *(_QWORD *)(a5 + 72) = v12;
  return result;
}

uint64_t sub_2417B8640()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_2417B8664()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t MentalWellbeingNotificationSettingsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _OWORD v32[3];
  __int128 v33;
  __int128 v34;

  v25 = a1;
  v2 = sub_2418A8DFC();
  v23 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417B88B8();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417B8A7C(0);
  v13 = v12;
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v1[3];
  v32[2] = v1[2];
  v33 = v17;
  v34 = v1[4];
  v18 = v1[1];
  v32[0] = *v1;
  v32[1] = v18;
  v26 = v32;
  sub_2417B894C(0);
  sub_24172159C(&qword_25714F638, (uint64_t (*)(uint64_t))sub_2417B894C, MEMORY[0x24BDF5428]);
  sub_2418A9240();
  sub_2418A8DF0();
  v19 = sub_24172159C(&qword_25714F648, (uint64_t (*)(uint64_t))sub_2417B88B8, MEMORY[0x24BDF1A30]);
  v20 = MEMORY[0x24BDEF958];
  sub_2418A9558();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v31 = v33;
  v27 = v7;
  v28 = v2;
  v29 = v19;
  v30 = v20;
  swift_getOpaqueTypeConformance2();
  sub_241721040();
  sub_2418A93A8();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v13);
}

void sub_2417B88B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F600)
  {
    sub_2417B894C(255);
    sub_24172159C(&qword_25714F638, (uint64_t (*)(uint64_t))sub_2417B894C, MEMORY[0x24BDF5428]);
    v0 = sub_2418A924C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F600);
  }
}

void sub_2417B894C(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714F608, (uint64_t (*)(uint64_t))sub_2417B8968, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417B8968()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714F610)
  {
    sub_24172570C(255, &qword_25714F618, (uint64_t (*)(uint64_t))sub_2417B89E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714F610);
  }
}

void sub_2417B89E4(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714F620, (uint64_t (*)(uint64_t))sub_2417B8A00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417B8A00()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714F628)
  {
    sub_24172887C(255, &qword_25714F630, (uint64_t)&type metadata for LinkToMindSettingsButton, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714F628);
  }
}

void sub_2417B8A7C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_25714F640)
  {
    sub_2417B88B8();
    v5[0] = v2;
    v5[1] = sub_2418A8DFC();
    v5[2] = sub_24172159C(&qword_25714F648, (uint64_t (*)(uint64_t))sub_2417B88B8, MEMORY[0x24BDF1A30]);
    v5[3] = MEMORY[0x24BDEF958];
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF3A80], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714F640);
  }
}

_QWORD *sub_2417B8B2C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD *result;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  Swift::Bool v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;
  _BYTE v27[128];
  _QWORD v28[16];
  __int128 v29;
  _BYTE v30[96];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _OWORD v36[8];
  _BYTE v37[128];
  __int128 v38;
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend(result, sel_isiPad);

    if ((v6 & 1) != 0)
    {
      sub_2417B95A4(&v29);
    }
    else
    {
      sub_2417B92F4(a1);
      type metadata accessor for NotificationSettingsModel();
      sub_24172159C((unint64_t *)&qword_25714D020, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsModel, (uint64_t)&protocol conformance descriptor for NotificationSettingsModel);
      sub_2418A8550();
      sub_2417B9364(a1);
      sub_2417EB188((uint64_t)&v38);
      sub_2417B92F4(a1);
      v7 = (void *)sub_2418A8550();
      sub_2417B9364(a1);
      v8 = NotificationSettingsModel.shouldShowMindfulnessSettingsButton()();

      v9 = 0;
      v10 = 0;
      if (v8)
      {
        if (qword_25714B958 != -1)
          swift_once();
        v11 = (id)qword_25715E110;
        swift_bridgeObjectRetain();
        v9 = sub_2418A7EFC();
        v10 = v12;
        swift_bridgeObjectRelease();

      }
      v29 = v38;
      v30[0] = v39 & 1;
      *(_OWORD *)&v30[8] = v40;
      *(_OWORD *)&v30[24] = v41;
      *(_OWORD *)&v30[40] = v42;
      *(_OWORD *)&v30[56] = v43;
      *(_OWORD *)&v30[72] = v44;
      *(_QWORD *)&v30[88] = v45;
      *(_QWORD *)&v31 = v9;
      *((_QWORD *)&v31 + 1) = v10;
      nullsub_1(&v29);
    }
    sub_2417B93D4((uint64_t)&v29, (uint64_t)v37);
    sub_2417B92F4(a1);
    type metadata accessor for AssessmentsSettingsModel();
    sub_24172159C(qword_25714F650, (uint64_t (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel, (uint64_t)&protocol conformance descriptor for AssessmentsSettingsModel);
    sub_2418A8550();
    type metadata accessor for NotificationSettingsModel();
    sub_24172159C((unint64_t *)&qword_25714D020, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsModel, (uint64_t)&protocol conformance descriptor for NotificationSettingsModel);
    sub_2418A8550();
    v36[0] = *(_OWORD *)(a1 + 64);
    sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
    sub_2418A96E4();
    sub_2417B9364(a1);
    v13 = v29;
    v26 = v30[0];
    v14 = sub_2418A8760();
    v16 = v15;
    v17 = sub_2418A8760();
    v19 = v18;
    sub_2417B93D4((uint64_t)v37, (uint64_t)v27);
    sub_2417B93D4((uint64_t)v27, (uint64_t)v28);
    sub_2417B93D4((uint64_t)v28, (uint64_t)&v29);
    *(_QWORD *)&v32 = v14;
    *((_QWORD *)&v32 + 1) = v16;
    *(_QWORD *)&v33 = v17;
    *((_QWORD *)&v33 + 1) = v19;
    v34 = v13;
    LOBYTE(v35) = v26;
    *((_QWORD *)&v35 + 1) = &unk_2511AC2F8;
    v20 = *(_OWORD *)&v30[64];
    a2[4] = *(_OWORD *)&v30[48];
    a2[5] = v20;
    v21 = v31;
    a2[6] = *(_OWORD *)&v30[80];
    a2[7] = v21;
    v22 = *(_OWORD *)v30;
    *a2 = v29;
    a2[1] = v22;
    v23 = *(_OWORD *)&v30[32];
    a2[2] = *(_OWORD *)&v30[16];
    a2[3] = v23;
    v24 = v33;
    a2[8] = v32;
    a2[9] = v24;
    v25 = v35;
    a2[10] = v34;
    a2[11] = v25;
    sub_2417B94BC(v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2417B9430);
    sub_2417B93D4((uint64_t)v27, (uint64_t)v36);
    return sub_2417B94BC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2417B9518);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_2417B8F30@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_2417B8B2C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2417B8F38()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_2417B8F4C(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain();
}

uint64_t destroy for MentalWellbeingNotificationSettingsView(uint64_t a1)
{
  sub_241728DF8();
  sub_241784C24(*(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for MentalWellbeingNotificationSettingsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_241728DF0();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[3];
  v8 = (void *)a2[4];
  v9 = *((_BYTE *)a2 + 40);
  sub_2417B8F4C(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v10 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MentalWellbeingNotificationSettingsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  void *v11;
  char v12;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_241728DF0();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_241728DF8();
  v7 = a2[3];
  v8 = (void *)a2[4];
  v9 = *((_BYTE *)a2 + 40);
  sub_2417B8F4C(v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(void **)(a1 + 32);
  v12 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  sub_241784C24(v10, v11, v12);
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MentalWellbeingNotificationSettingsView(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_241728DF8();
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(void **)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v5;
  sub_241784C24(v6, v7, v8);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MentalWellbeingNotificationSettingsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MentalWellbeingNotificationSettingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MentalWellbeingNotificationSettingsView()
{
  return &type metadata for MentalWellbeingNotificationSettingsView;
}

uint64_t sub_2417B9238()
{
  sub_2417B8A7C(255);
  sub_2417B88B8();
  sub_2418A8DFC();
  sub_24172159C(&qword_25714F648, (uint64_t (*)(uint64_t))sub_2417B88B8, MEMORY[0x24BDF1A30]);
  swift_getOpaqueTypeConformance2();
  sub_241721040();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417B92F4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(void **)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 40);
  sub_241728DF0();
  sub_2417B8F4C(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2417B9364(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(void **)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 40);
  sub_241728DF8();
  sub_241784C24(v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_2417B93D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_25714F618, (uint64_t (*)(uint64_t))sub_2417B89E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417B9430(uint64_t a1, void *a2)
{
  id v3;
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    v3 = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

_QWORD *sub_2417B94BC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

uint64_t sub_2417B9518(uint64_t a1, void *a2)
{
  uint64_t result;

  if (a2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_2417B95A4(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

_QWORD *sub_2417B95BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    v5 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    sub_241725CAC(0);
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A8EB0();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v13 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v14 = (char *)v7 + v13;
      v15 = (char *)v8 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_2417B9768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  sub_241725CAC(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_2417B9838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  sub_241725CAC(0);
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    v11 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v12 = (char *)v6 + v11;
    v13 = (char *)v7 + v11;
    v14 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2417B99B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_24172588C((uint64_t)a1 + v7, (uint64_t (*)(_QWORD))sub_241725CAC);
    sub_241725CAC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_2417B9B48(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  sub_241725CAC(0);
  v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v14 = &v6[v13];
    v15 = &v7[v13];
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2417B9C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    sub_24172588C(a1 + v7, (uint64_t (*)(_QWORD))sub_241725CAC);
    sub_241725CAC(0);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      v15 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417B9E18()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417B9E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714C0E0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_2417B9EB8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417B9EC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714C0E0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for IntroPhaseContent()
{
  uint64_t result;

  result = qword_25714F6B0;
  if (!qword_25714F6B0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417B9F8C()
{
  unint64_t v0;

  sub_241725CAC(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2417BA00C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417BA01C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t KeyPath;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _BYTE *v158;
  int *v159;
  int *v160;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  _BYTE *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  __int128 v191;
  uint64_t v192;
  char v193;
  __int128 v194;
  uint64_t v195;
  _UNKNOWN **v196;
  uint64_t (*v197)();
  uint64_t v198;
  char v199[8];
  __int128 v200;
  uint64_t v201;
  char v202;
  uint64_t (*v203)@<X0>(uint64_t@<X8>);
  uint64_t v204;

  v181 = a2;
  v3 = type metadata accessor for IntroPhaseContent();
  v163 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v164 = v5;
  v166 = (uint64_t)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174DAC0(0, v6, v7, v8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v168 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417869B0(0, &qword_25714E2C0, v12);
  v167 = v13;
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v170 = (uint64_t)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v169 = (uint64_t)&v162 - v18;
  sub_2417BB2F8(0);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v180 = (uint64_t *)((char *)&v162 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v21, v23);
  v179 = (uint64_t)&v162 - v24;
  v175 = type metadata accessor for IntroPhaseBulletView();
  MEMORY[0x24BDAC7A8](v175, v25);
  v27 = (char *)&v162 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417869B0(0, &qword_25714F710, v28);
  v185 = v29;
  v31 = MEMORY[0x24BDAC7A8](v29, v30);
  v178 = (uint64_t)&v162 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v186 = (uint64_t)&v162 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v176 = (uint64_t)&v162 - v38;
  MEMORY[0x24BDAC7A8](v37, v39);
  v188 = (uint64_t)&v162 - v40;
  sub_241786A34(0);
  MEMORY[0x24BDAC7A8](v41, v42);
  v173 = (uint64_t *)((char *)&v162 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v171 = type metadata accessor for IntroPhaseHeaderText();
  MEMORY[0x24BDAC7A8](v171, v44);
  v46 = (uint64_t *)((char *)&v162 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417869B0(0, &qword_25714F708, v47);
  v172 = v48;
  v50 = MEMORY[0x24BDAC7A8](v48, v49);
  v52 = (char *)&v162 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v50, v53);
  v189 = (uint64_t)&v162 - v54;
  v55 = type metadata accessor for IntroPhaseSpecs();
  v57 = MEMORY[0x24BDAC7A8](v55, v56);
  v184 = (uint64_t)&v162 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v57, v59);
  v61 = (char *)&v162 - v60;
  v177 = sub_2418A90E4();
  v62 = *(int *)(v3 + 24);
  v165 = a1;
  v190 = a1 + v62;
  sub_241861064((uint64_t)v61);
  v174 = v55;
  sub_2418A879C();
  sub_24172588C((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  sub_2418A84A8();
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v70 = v69;
  if (qword_25714B958 != -1)
    swift_once();
  v71 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v72 = sub_2418A7EFC();
  v74 = v73;
  swift_bridgeObjectRelease();

  KeyPath = swift_getKeyPath();
  v76 = v173;
  *v173 = KeyPath;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v183 = v77;
  swift_storeEnumTagMultiPayload();
  v78 = swift_getKeyPath();
  v79 = v171;
  *(uint64_t *)((char *)v46 + *(int *)(v171 + 24)) = v78;
  sub_241725CAC(0);
  v182 = v80;
  swift_storeEnumTagMultiPayload();
  *v46 = v72;
  v46[1] = v74;
  sub_241731B4C((uint64_t)v76, (uint64_t)v46 + *(int *)(v79 + 20), (uint64_t (*)(_QWORD))sub_241786A34);
  LOBYTE(v74) = sub_2418A90E4();
  v81 = v184;
  sub_241861064(v184);
  sub_24172588C(v81, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  sub_2418A84A8();
  v83 = v82;
  v85 = v84;
  v87 = v86;
  v89 = v88;
  sub_2417289A8((uint64_t)v46, (uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseHeaderText);
  v90 = &v52[*(int *)(v172 + 36)];
  *v90 = v74;
  *((_QWORD *)v90 + 1) = v83;
  *((_QWORD *)v90 + 2) = v85;
  *((_QWORD *)v90 + 3) = v87;
  *((_QWORD *)v90 + 4) = v89;
  v90[40] = 0;
  sub_24172588C((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseHeaderText);
  v187 = v52;
  sub_2417BB3B0((uint64_t)v52, v189, &qword_25714F708, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
  v91 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v92 = sub_2418A7EFC();
  v94 = v93;
  swift_bridgeObjectRelease();

  v95 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v96 = sub_2418A7EFC();
  v98 = v97;
  swift_bridgeObjectRelease();

  *v76 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v99 = swift_getKeyPath();
  v100 = v175;
  *(_QWORD *)&v27[*(int *)(v175 + 32)] = v99;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v27 = v92;
  *((_QWORD *)v27 + 1) = v94;
  *((_QWORD *)v27 + 2) = v96;
  *((_QWORD *)v27 + 3) = v98;
  v27[32] = 7;
  sub_241731B4C((uint64_t)v76, (uint64_t)&v27[*(int *)(v100 + 28)], (uint64_t (*)(_QWORD))sub_241786A34);
  LOBYTE(v96) = sub_2418A90E4();
  sub_241861064(v81);
  sub_24172588C(v81, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  sub_2418A84A8();
  v102 = v101;
  v104 = v103;
  v106 = v105;
  v108 = v107;
  v109 = v176;
  sub_2417289A8((uint64_t)v27, v176, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseBulletView);
  v110 = v109 + *(int *)(v185 + 36);
  *(_BYTE *)v110 = v96;
  *(_QWORD *)(v110 + 8) = v102;
  *(_QWORD *)(v110 + 16) = v104;
  *(_QWORD *)(v110 + 24) = v106;
  *(_QWORD *)(v110 + 32) = v108;
  *(_BYTE *)(v110 + 40) = 0;
  sub_24172588C((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseBulletView);
  sub_2417BB3B0(v109, v188, &qword_25714F710, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  v111 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v112 = sub_2418A7EFC();
  v172 = v113;
  swift_bridgeObjectRelease();

  v114 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v115 = sub_2418A7EFC();
  v117 = v116;
  swift_bridgeObjectRelease();

  *v76 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v27[*(int *)(v100 + 32)] = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v118 = v172;
  *(_QWORD *)v27 = v112;
  *((_QWORD *)v27 + 1) = v118;
  *((_QWORD *)v27 + 2) = v115;
  *((_QWORD *)v27 + 3) = v117;
  v27[32] = 1;
  sub_241731B4C((uint64_t)v76, (uint64_t)&v27[*(int *)(v100 + 28)], (uint64_t (*)(_QWORD))sub_241786A34);
  LOBYTE(v100) = sub_2418A90E4();
  v119 = v184;
  sub_241861064(v184);
  sub_24172588C(v119, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  sub_2418A84A8();
  v121 = v120;
  v123 = v122;
  v125 = v124;
  v127 = v126;
  sub_2417289A8((uint64_t)v27, v109, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseBulletView);
  v128 = v109 + *(int *)(v185 + 36);
  *(_BYTE *)v128 = v100;
  *(_QWORD *)(v128 + 8) = v121;
  *(_QWORD *)(v128 + 16) = v123;
  *(_QWORD *)(v128 + 24) = v125;
  *(_QWORD *)(v128 + 32) = v127;
  *(_BYTE *)(v128 + 40) = 0;
  sub_24172588C((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseBulletView);
  v129 = v186;
  sub_2417BB3B0(v109, v186, &qword_25714F710, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_241861064(v119);
  v130 = v174;
  LOBYTE(v92) = sub_2418A879C();
  sub_24172588C(v119, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  v131 = v109;
  v132 = v129;
  if ((v92 & 1) != 0)
  {
    sub_241861064(v119);
    sub_24172588C(v119, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
    v195 = v130;
    v196 = &off_2511B4130;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v194);
    sub_241861064((uint64_t)boxed_opaque_existential_1);
    v134 = v129;
    v135 = v166;
    sub_2417289A8(v165, v166, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseContent);
    v136 = (*(unsigned __int8 *)(v163 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80);
    v137 = swift_allocObject();
    sub_241731B4C(v135, v137 + v136, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseContent);
    v197 = 0;
    LOBYTE(v198) = 1;
    sub_24172887C(0, (unint64_t *)&qword_25714D7D0, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2418A9840();
    v200 = v191;
    v201 = v192;
    v202 = v193;
    sub_24174DE50(&v194, (uint64_t)v199);
    v197 = sub_2417BB588;
    v198 = v137;
    v203 = sub_2417BB070;
    v204 = 0;
    *(_QWORD *)&v194 = &unk_2511AB450;
    sub_2417739BC((uint64_t)&unk_2511AC330);
    sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_241731AEC();
    sub_2418A9D50();
    swift_bridgeObjectRelease();
    sub_24172835C(0, (unint64_t *)&qword_25714CE48, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ActionButton);
    sub_24177E0AC();
    v138 = (uint64_t)v168;
    v132 = v134;
    sub_2418A9450();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_2417AEBAC((uint64_t)&v197);
    LOBYTE(v137) = sub_2418A90F0();
    sub_241861064(v119);
    sub_24172588C(v119, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
    sub_2418A84A8();
    v140 = v139;
    v142 = v141;
    v144 = v143;
    v146 = v145;
    v147 = v170;
    sub_2417289A8(v138, v170, (uint64_t (*)(_QWORD))sub_24174DAC0);
    v148 = v147 + *(int *)(v167 + 36);
    *(_BYTE *)v148 = v137;
    *(_QWORD *)(v148 + 8) = v140;
    *(_QWORD *)(v148 + 16) = v142;
    *(_QWORD *)(v148 + 24) = v144;
    *(_QWORD *)(v148 + 32) = v146;
    *(_BYTE *)(v148 + 40) = 0;
    sub_24172588C(v138, (uint64_t (*)(_QWORD))sub_24174DAC0);
    v149 = v169;
    sub_2417BB3B0(v147, v169, &qword_25714E2C0, (void (*)(uint64_t))sub_24174DAC0);
    sub_2417BB3FC(v149, v147, &qword_25714E2C0, (void (*)(uint64_t))sub_24174DAC0);
    v150 = (uint64_t)v180;
    *v180 = 0x4038000000000000;
    *(_BYTE *)(v150 + 8) = 0;
    sub_2417BB330();
    sub_2417BB3FC(v147, v150 + *(int *)(v151 + 48), &qword_25714E2C0, (void (*)(uint64_t))sub_24174DAC0);
    sub_2417BB448(v149, &qword_25714E2C0, (void (*)(uint64_t))sub_24174DAC0);
    sub_2417BB448(v147, &qword_25714E2C0, (void (*)(uint64_t))sub_24174DAC0);
    sub_2417BB314(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v150, 0, 1, v152);
    v153 = v179;
    sub_241731B4C(v150, v179, (uint64_t (*)(_QWORD))sub_2417BB2F8);
  }
  else
  {
    sub_2417BB314(0);
    v153 = v179;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 56))(v179, 1, 1, v154);
    v150 = (uint64_t)v180;
  }
  v155 = (uint64_t)v187;
  sub_2417BB3FC(v189, (uint64_t)v187, &qword_25714F708, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
  v156 = v188;
  sub_2417BB3FC(v188, v131, &qword_25714F710, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  v157 = v178;
  sub_2417BB3FC(v132, v178, &qword_25714F710, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_2417289A8(v153, v150, (uint64_t (*)(_QWORD))sub_2417BB2F8);
  v158 = v181;
  *v181 = v177;
  *((_QWORD *)v158 + 1) = v64;
  *((_QWORD *)v158 + 2) = v66;
  *((_QWORD *)v158 + 3) = v68;
  *((_QWORD *)v158 + 4) = v70;
  v158[40] = 0;
  sub_2417BB228();
  v160 = v159;
  sub_2417BB3FC(v155, (uint64_t)&v158[v159[12]], &qword_25714F708, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
  sub_2417BB3FC(v131, (uint64_t)&v158[v160[16]], &qword_25714F710, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_2417BB3FC(v157, (uint64_t)&v158[v160[20]], &qword_25714F710, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_2417289A8(v150, (uint64_t)&v158[v160[24]], (uint64_t (*)(_QWORD))sub_2417BB2F8);
  sub_24172588C(v153, (uint64_t (*)(_QWORD))sub_2417BB2F8);
  sub_2417BB448(v186, &qword_25714F710, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_2417BB448(v156, &qword_25714F710, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_2417BB448(v189, &qword_25714F708, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
  sub_24172588C(v150, (uint64_t (*)(_QWORD))sub_2417BB2F8);
  sub_2417BB448(v157, &qword_25714F710, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_2417BB448(v131, &qword_25714F710, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  return sub_2417BB448((uint64_t)v187, &qword_25714F708, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
}

uint64_t sub_2417BB070@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_25714B958 != -1)
    swift_once();
  v2 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  sub_241721040();
  result = sub_2418A92D0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_2417BB168@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2418A8C58();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_2417BB1A8();
  return sub_2417BA01C(v1, (_BYTE *)(a1 + *(int *)(v3 + 44)));
}

void sub_2417BB1A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F6F0)
  {
    sub_2417BB20C(255);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F6F0);
  }
}

void sub_2417BB20C(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714F6F8, (uint64_t (*)(uint64_t))sub_2417BB228, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417BB228()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_25714F700)
  {
    sub_24172835C(255, &qword_25714F220, (uint64_t)&type metadata for StateOfMindHeaderImage, MEMORY[0x24BDECC80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_2417869B0(255, &qword_25714F708, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
    sub_2417869B0(255, &qword_25714F710, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
    sub_2417BB2F8(255);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_25714F700);
  }
}

void sub_2417BB2F8(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714F718, (uint64_t (*)(uint64_t))sub_2417BB314, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2417BB314(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714F720, (uint64_t (*)(uint64_t))sub_2417BB330, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417BB330()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714F728)
  {
    sub_2417869B0(255, &qword_25714E2C0, (void (*)(uint64_t))sub_24174DAC0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714F728);
  }
}

uint64_t sub_2417BB3B0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2417869B0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_2417BB3FC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2417869B0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2417BB448(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2417869B0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2417BB484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for IntroPhaseContent();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 24);
  sub_241725CAC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v6 = v3 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v7 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2417BB588()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IntroPhaseContent() - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 16))();
}

uint64_t sub_2417BB5C4()
{
  return sub_24172159C(&qword_25714F730, (uint64_t (*)(uint64_t))sub_2417BB5F0, MEMORY[0x24BDF4700]);
}

void sub_2417BB5F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F738)
  {
    sub_2417BB20C(255);
    sub_24172159C((unint64_t *)&unk_25714F740, (uint64_t (*)(uint64_t))sub_2417BB20C, MEMORY[0x24BDF5428]);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F738);
  }
}

uint64_t sub_2417BB668(void *a1)
{
  int v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t result;
  _QWORD *v28;
  uint64_t v29;

  v1 = 0;
  v2 = 0;
  v3 = (char *)MEMORY[0x24BEE4AF8];
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (2)
  {
    v5 = 0;
    v29 = v2 + 1;
    do
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_24180325C(0, v4[2] + 1, 1, v4);
      v7 = v4[2];
      v6 = v4[3];
      if (v7 >= v6 >> 1)
        v4 = sub_24180325C((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
      *(float *)&v8 = (float)((float)((float)v5 / 15.0) + (float)((float)v5 / 15.0)) + -1.0;
      *((float *)&v8 + 1) = (float)((float)((float)v2 / 15.0) + (float)((float)v2 / 15.0)) + -1.0;
      v4[2] = v7 + 1;
      *(_OWORD *)&v4[2 * v7 + 4] = v8;
      if ((unint64_t)v2 > 0xE || (unint64_t)v5 >= 0xF)
      {
        v9 = MEMORY[0x24BEE4AF8];
        v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      }
      else
      {
        sub_2417BBB68();
        v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_2418D5760;
        *(_DWORD *)(v9 + 32) = v1 + v5;
        *(_DWORD *)(v9 + 36) = v1 + v5 + 1;
        v10 = v1 + v5 + 17;
        *(_DWORD *)(v9 + 40) = v10;
        *(_DWORD *)(v9 + 44) = v1 + v5;
        v11 = 6;
        *(_DWORD *)(v9 + 48) = v10;
        *(_DWORD *)(v9 + 52) = v1 + v5 + 16;
      }
      v12 = *((_QWORD *)v3 + 2);
      v13 = v12 + v11;
      if (__OFADD__(v12, v11))
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      if ((_DWORD)isUniquelyReferenced_nonNull_native && v13 <= *((_QWORD *)v3 + 3) >> 1)
      {
        if (!*(_QWORD *)(v9 + 16))
          goto LABEL_4;
      }
      else
      {
        if (v12 <= v13)
          v15 = v12 + v11;
        else
          v15 = v12;
        v3 = sub_24180301C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
        if (!*(_QWORD *)(v9 + 16))
        {
LABEL_4:
          if (v11)
            goto LABEL_36;
          goto LABEL_5;
        }
      }
      v16 = *((_QWORD *)v3 + 2);
      if ((*((_QWORD *)v3 + 3) >> 1) - v16 < v11)
        goto LABEL_37;
      v17 = &v3[4 * v16 + 32];
      if (v9 + 32 < (unint64_t)&v17[4 * v11] && (unint64_t)v17 < v9 + 32 + 4 * v11)
        goto LABEL_41;
      memcpy(v17, (const void *)(v9 + 32), 4 * v11);
      if (v11)
      {
        v19 = *((_QWORD *)v3 + 2);
        v20 = __OFADD__(v19, v11);
        v21 = v19 + v11;
        if (v20)
          goto LABEL_38;
        *((_QWORD *)v3 + 2) = v21;
      }
LABEL_5:
      ++v5;
      swift_bridgeObjectRelease();
    }
    while (v5 != 16);
    v1 += 16;
    ++v2;
    if (v29 != 16)
      continue;
    break;
  }
  v22 = v4[2];
  v28[4] = v22;
  v28[5] = *((_QWORD *)v3 + 2);
  if (v22 >> 58)
    goto LABEL_39;
  v23 = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v4 + 4, 32 * v22, 0);
  swift_bridgeObjectRelease();
  v28[6] = v23;
  swift_unknownObjectRelease();
  v24 = v28[5];
  if ((unint64_t)(v24 - 0x2000000000000000) >> 62 == 3)
  {
    v25 = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v3 + 32, 4 * v24, 0);
    swift_bridgeObjectRelease();
    v28[7] = v25;
    return swift_unknownObjectRelease();
  }
LABEL_40:
  __break(1u);
LABEL_41:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_2417BB9B4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QuadMesh()
{
  return objc_opt_self();
}

id sub_2417BBA00()
{
  id v0;
  id v1;
  id v2;
  id result;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD770]), sel_init);
  v1 = objc_msgSend(v0, sel_attributes);
  v2 = objc_msgSend(v0, sel_layouts);
  result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = result;
  objc_msgSend(result, sel_setFormat_, 30);

  result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = result;
  objc_msgSend(result, sel_setOffset_, 0);

  result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = result;
  objc_msgSend(result, sel_setBufferIndex_, 0);

  result = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);
  if (result)
  {
    v7 = result;
    objc_msgSend(result, sel_setStride_, 16);

    return v0;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_2417BBB68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F890[0])
  {
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, qword_25714F890);
  }
}

uint64_t sub_2417BBBBC()
{
  return swift_allocateGenericValueMetadata();
}

void sub_2417BBBC4()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2417BBC88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_QWORD *)(a1 + 56) = a2[7];
    v7 = a2[10];
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    v8 = *(int *)(a3 + 60);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 80) = v7;
    sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A87B4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

uint64_t sub_2417BBE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 60);
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_2417BBEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v7 = *(int *)(a3 + 60);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + 80) = v6;
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A87B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2417BBFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 60);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
    v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4(a1 + v8, (uint64_t)&qword_25714DEB8, (uint64_t)MEMORY[0x24BDECF50], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714DEB8, v11, v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A87B4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2417BC18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v4 = *(int *)(a3 + 60);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A87B4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2417BC278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 60);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
    v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4(a1 + v6, (uint64_t)&qword_25714DEB8, (uint64_t)MEMORY[0x24BDECF50], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714DEB8, v9, v10);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A87B4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417BC3DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417BC3E8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714DF58, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 60)], a2, v8);
  }
}

uint64_t sub_2417BC47C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2417BC488(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714DF58, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 60)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TagPicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TagPicker);
}

uint64_t sub_2417BC520()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_2417BC554(void *a1)
{
  id v1;
  id v2;
  void *v3;
  double v4;
  id v5;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  v2 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v3 = v2;
  v4 = 0.6;
  if (v1 == (id)2)
    v4 = 0.12;
  v5 = objc_msgSend(v2, sel_colorWithAlphaComponent_, v4);

  return v5;
}

id sub_2417BC5DC(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  v2 = (void *)objc_opt_self();
  if (v1 == (id)2)
  {
    v3 = objc_msgSend(v2, sel_whiteColor);
    v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.8);
  }
  else
  {
    v3 = objc_msgSend(v2, sel_blackColor);
    v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.4);
  }
  v5 = v4;

  return v5;
}

id sub_2417BC680(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  v2 = (void *)objc_opt_self();
  if (v1 != (id)2)
    return objc_msgSend(v2, sel_whiteColor);
  v3 = objc_msgSend(v2, sel_blackColor);
  v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.8);

  return v4;
}

id sub_2417BC718(void *a1)
{
  id v1;
  void *v2;
  char **v3;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  v2 = (void *)objc_opt_self();
  v3 = &selRef_whiteColor;
  if (v1 != (id)2)
    v3 = &selRef_blackColor;
  return objc_msgSend(v2, *v3);
}

uint64_t sub_2417BC770()
{
  uint64_t v0;
  uint64_t v2;

  sub_2418A9F0C();
  v0 = sub_2418A984C();
  MEMORY[0x24269C00C](&v2, v0);
  return v2;
}

uint64_t sub_2417BC7C8()
{
  sub_2418A9F0C();
  sub_2418A984C();
  return sub_2418A9810();
}

uint64_t sub_2417BC820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double v20;
  double v21;
  double *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  _QWORD v34[6];

  v28 = a2;
  sub_2417BDE04();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_2418A9F0C();
  sub_241728250(255, &qword_25714F930, sub_2417BDEA0, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v7 = v6;
  v8 = MEMORY[0x24269D47C](MEMORY[0x24BEE12D8], v5);
  v9 = *(_QWORD *)(a1 + 24);
  v34[1] = v5;
  v34[2] = v4;
  v34[3] = v7;
  v34[4] = v8;
  v34[5] = v9;
  v10 = sub_2418A98A0();
  sub_24172159C(&qword_25714F9A8, (uint64_t (*)(uint64_t))sub_2417BDE04, MEMORY[0x24BDEB998]);
  v11 = sub_2418A86E8();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v27 - v18;
  v20 = *(double *)(v2 + 40);
  v21 = *(double *)(v2 + 48);
  v22 = (double *)swift_allocObject();
  *((_QWORD *)v22 + 2) = v4;
  *((_QWORD *)v22 + 3) = v9;
  v22[4] = v20;
  v22[5] = v21;
  v30 = v4;
  v31 = v9;
  v32 = v2;
  sub_2417BCA54((uint64_t)sub_2417BE344, (uint64_t)v29, v4, v9, (uint64_t)v16, v20, v21);
  swift_release();
  v23 = sub_24172159C(&qword_25714F9B0, (uint64_t (*)(uint64_t))sub_2417BDE04, MEMORY[0x24BDEB9A8]);
  v34[0] = sub_2417BE350();
  v24 = MEMORY[0x24269D47C](MEMORY[0x24BDF4A08], v10, v34);
  v33[0] = v23;
  v33[1] = v24;
  MEMORY[0x24269D47C](MEMORY[0x24BDEC550], v11, v33);
  sub_2417DA924((uint64_t)v16, v11, (uint64_t)v19);
  v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  v25(v16, v11);
  sub_2417D8FF8((uint64_t)v19, v11, v28);
  return ((uint64_t (*)(char *, uint64_t))v25)(v19, v11);
}

uint64_t sub_2417BCA54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v18[8];

  *(double *)&v18[6] = a6;
  *(double *)&v18[7] = a7;
  v12 = sub_2418A9F0C();
  sub_241728250(255, &qword_25714F930, sub_2417BDEA0, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v18[1] = v12;
  v18[2] = a3;
  v18[3] = v13;
  v18[4] = MEMORY[0x24269D47C](MEMORY[0x24BEE12D8], v12);
  v18[5] = a4;
  v14 = sub_2418A98A0();
  v15 = sub_2417BDE5C();
  v18[0] = sub_2417BE350();
  v16 = MEMORY[0x24269D47C](MEMORY[0x24BDF4A08], v14, v18);
  return sub_241779DEC(a1, a2, (uint64_t)&type metadata for TagLayout, v14, v15, v16, a5);
}

uint64_t sub_2417BCB50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v37 = a5;
  v32 = type metadata accessor for TagPicker(0, a2, a3, a4);
  v8 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v9);
  v11 = (char *)&KeyPath - v10;
  v12 = sub_2418A9F0C();
  v35 = v12;
  sub_241728250(255, &qword_25714F930, sub_2417BDEA0, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v14 = v13;
  v34 = v13;
  v33 = MEMORY[0x24269D47C](MEMORY[0x24BEE12D8], v12);
  v41 = v12;
  v42 = a2;
  v43 = v14;
  v44 = v33;
  v45 = a3;
  v15 = sub_2418A98A0();
  v36 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&KeyPath - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v31 = (uint64_t)&KeyPath - v21;
  v41 = *a1;
  v38 = a2;
  v39 = a3;
  KeyPath = swift_getKeyPath();
  v22 = v32;
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v11, a1, v32);
  v23 = v8;
  v24 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a2;
  *(_QWORD *)(v25 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v25 + v24, v11, v22);
  v26 = sub_2417BE350();
  swift_bridgeObjectRetain();
  sub_2418A9888();
  v40 = v26;
  MEMORY[0x24269D47C](MEMORY[0x24BDF4A08], v15, &v40);
  v27 = v31;
  sub_2417DA924((uint64_t)v19, v15, v31);
  v28 = *(void (**)(char *, uint64_t))(v36 + 8);
  v28(v19, v15);
  sub_2417D8FF8(v27, v15, v37);
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(v27, v15);
}

uint64_t sub_2417BCDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  int *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(uint64_t);
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char v154;
  char v155;
  char v156;
  void *aBlock;
  uint64_t v158;
  id (*v159)(uint64_t, void *);
  void *v160;
  id (*v161)(void *);
  uint64_t v162;

  v148 = a5;
  v147 = sub_2418A8C28();
  v146 = *(_QWORD *)(v147 - 8);
  v10 = MEMORY[0x24BDAC7A8](v147, v9);
  v145 = (char *)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v135 = v13;
  v138 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TagPicker(0, a3, a4, v14);
  v133 = *(_QWORD *)(v15 - 8);
  v131 = *(_QWORD *)(v133 + 64);
  MEMORY[0x24BDAC7A8](v15, v16);
  v132 = (char *)&v120 - v17;
  sub_2417BE048();
  v128 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v129 = (uint64_t)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_2418A87B4();
  v124 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127, v21);
  v125 = (uint64_t)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2418A91E0();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = v23;
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728250(0, &qword_25714F950, (void (*)(uint64_t))sub_2417BDFCC, (void (*)(uint64_t))sub_2417BE048);
  v126 = v29;
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)&v120 - v31;
  sub_2417BDF30();
  v149 = v33;
  MEMORY[0x24BDAC7A8](v33, v34);
  v130 = (uint64_t)&v120 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417BDEBC(0);
  v137 = v36;
  v136 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v37);
  v134 = (char *)&v120 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417BDEA0(0);
  v143 = v39;
  MEMORY[0x24BDAC7A8](v39, v40);
  v144 = (char *)&v120 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728250(0, &qword_25714F930, v42, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  MEMORY[0x24BDAC7A8](v43, v44);
  v142 = (char *)&v120 - v45;
  v150 = v15;
  aBlock = (void *)sub_2417BC770();
  v141 = a3;
  v46 = sub_2418A9F0C();
  MEMORY[0x24269D47C](MEMORY[0x24BEE12C8], v46);
  v140 = a4;
  v153 = sub_2418A9E7C();
  swift_bridgeObjectRelease();
  v47 = *(uint64_t (**)(uint64_t))(a2 + 56);
  v151 = a2;
  v152 = a1;
  aBlock = (void *)v47(a1);
  v158 = v48;
  sub_241721040();
  v49 = sub_2418A92D0();
  v51 = v50;
  LOBYTE(a1) = v52 & 1;
  sub_2418A912C();
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v28, *MEMORY[0x24BDF17C8], v25);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v25);
  v53 = sub_2418A9294();
  v55 = v54;
  v57 = v56;
  swift_release();
  sub_2417289EC(v49, v51, a1);
  swift_bridgeObjectRelease();
  v58 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  if ((v153 & 1) != 0)
  {
    v161 = sub_2417BC680;
    v162 = 0;
    aBlock = (void *)MEMORY[0x24BDAC760];
    v158 = 1107296256;
    v59 = &block_descriptor_6;
  }
  else
  {
    v161 = sub_2417BC718;
    v162 = 0;
    aBlock = (void *)MEMORY[0x24BDAC760];
    v158 = 1107296256;
    v59 = &block_descriptor_4;
  }
  v159 = sub_2417D168C;
  v160 = v59;
  v60 = _Block_copy(&aBlock);
  v61 = objc_msgSend(v58, sel_initWithDynamicProvider_, v60);
  _Block_release(v60);
  swift_release();
  MEMORY[0x24269BDB4](v61);
  v122 = sub_2418A9264();
  v121 = v62;
  LOBYTE(v60) = v63;
  v123 = v64;
  swift_release();
  sub_2417289EC(v53, v55, v57 & 1);
  swift_bridgeObjectRelease();
  v65 = sub_2418A9114();
  v66 = v151;
  v67 = v125;
  sub_241861A34(v125);
  sub_2418A879C();
  v68 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
  v69 = v127;
  v68(v67, v127);
  sub_2418A84A8();
  v71 = v70;
  v73 = v72;
  v75 = v74;
  v77 = v76;
  v78 = sub_2418A90CC();
  v79 = v66;
  sub_241861A34(v67);
  sub_2418A879C();
  v68(v67, v69);
  sub_2418A84A8();
  v81 = v80;
  v83 = v82;
  v85 = v84;
  v87 = v86;
  v156 = v60 & 1;
  v155 = 0;
  v154 = 0;
  v88 = sub_2418A9960();
  v90 = v89;
  LOBYTE(v60) = v153 & 1;
  v91 = v129;
  sub_2417BD92C(v153 & 1, v129);
  v92 = (uint64_t *)(v91 + *(int *)(v128 + 36));
  *v92 = v88;
  v92[1] = v90;
  sub_2417289A8(v91, (uint64_t)&v32[*(int *)(v126 + 36)], (uint64_t (*)(_QWORD))sub_2417BE048);
  v93 = v121;
  *(_QWORD *)v32 = v122;
  *((_QWORD *)v32 + 1) = v93;
  v32[16] = v156;
  *((_QWORD *)v32 + 3) = v123;
  v32[32] = v65;
  *((_QWORD *)v32 + 5) = v71;
  *((_QWORD *)v32 + 6) = v73;
  *((_QWORD *)v32 + 7) = v75;
  *((_QWORD *)v32 + 8) = v77;
  v32[72] = v155;
  v32[80] = v78;
  *((_QWORD *)v32 + 11) = v81;
  *((_QWORD *)v32 + 12) = v83;
  *((_QWORD *)v32 + 13) = v85;
  *((_QWORD *)v32 + 14) = v87;
  v32[120] = v154;
  sub_24172588C(v91, (uint64_t (*)(_QWORD))sub_2417BE048);
  v94 = v130;
  sub_2417BE604((uint64_t)v32, v130);
  v95 = v94 + v149[9];
  *(_QWORD *)v95 = 0;
  *(_BYTE *)(v95 + 8) = (_BYTE)v60;
  sub_241784BA4((uint64_t)v32, (uint64_t)&qword_25714F950, (uint64_t)sub_2417BDFCC, (uint64_t)sub_2417BE048, (uint64_t (*)(_QWORD))sub_241728250);
  v96 = v133;
  v97 = v132;
  v98 = v79;
  v99 = v150;
  (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v132, v98, v150);
  v100 = v139;
  v101 = v138;
  v102 = v141;
  (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v138, v152, v141);
  v103 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  v104 = (v131 + *(unsigned __int8 *)(v100 + 80) + v103) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
  v105 = swift_allocObject();
  v106 = v140;
  *(_QWORD *)(v105 + 16) = v102;
  *(_QWORD *)(v105 + 24) = v106;
  (*(void (**)(unint64_t, char *, uint64_t))(v96 + 32))(v105 + v103, v97, v99);
  (*(void (**)(unint64_t, char *, uint64_t))(v100 + 32))(v105 + v104, v101, v102);
  v107 = sub_2417BE154();
  v108 = v134;
  v109 = v149;
  sub_2418A9354();
  swift_release();
  sub_24172588C(v94, (uint64_t (*)(_QWORD))sub_2417BDF30);
  (*(void (**)(uint64_t))(v151 + 72))(v152);
  aBlock = &unk_2511AB450;
  v110 = swift_bridgeObjectRetain();
  sub_2417739BC(v110);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  aBlock = v109;
  v158 = v107;
  swift_getOpaqueTypeConformance2();
  v111 = (uint64_t)v144;
  v112 = v137;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v108, v112);
  if ((v153 & 1) != 0)
  {
    v113 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88];
    sub_24172570C(0, &qword_25714F9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v114 = v146;
    v115 = swift_allocObject();
    *(_OWORD *)(v115 + 16) = xmmword_2418D1940;
    sub_2418A8C10();
    sub_2418A8C1C();
    aBlock = (void *)v115;
    sub_24172159C(&qword_25714F9D0, v113, MEMORY[0x24BDEEDA8]);
    sub_24172570C(0, &qword_25714F9D8, v113, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2417BE860();
    v116 = v145;
    v117 = v147;
    sub_2418AA248();
  }
  else
  {
    v116 = v145;
    sub_2418A8C1C();
    v117 = v147;
    v114 = v146;
  }
  sub_2417BE3F0();
  v118 = (uint64_t)v142;
  sub_2418A9444();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v116, v117);
  sub_24172588C(v111, (uint64_t (*)(_QWORD))sub_2417BDEA0);
  return sub_2417BE804(v118, v148);
}

uint64_t sub_2417BD92C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t aBlock;
  uint64_t v23;
  id (*v24)(uint64_t, void *);
  void *v25;
  id (*v26)(void *);
  uint64_t v27;

  v4 = sub_2418A9864();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417BE0C0();
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *MEMORY[0x24BDEEB68];
  v14 = sub_2418A8BE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v7, v13, v14);
  v15 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  if ((a1 & 1) != 0)
  {
    v26 = sub_2417BC5DC;
    v27 = 0;
    aBlock = MEMORY[0x24BDAC760];
    v23 = 1107296256;
    v16 = &block_descriptor_12;
  }
  else
  {
    v26 = sub_2417BC554;
    v27 = 0;
    aBlock = MEMORY[0x24BDAC760];
    v23 = 1107296256;
    v16 = &block_descriptor_9;
  }
  v24 = sub_2417D168C;
  v25 = v16;
  v17 = _Block_copy(&aBlock);
  v18 = objc_msgSend(v15, sel_initWithDynamicProvider_, v17, aBlock, v23);
  _Block_release(v17);
  swift_release();
  v19 = MEMORY[0x24269BDB4](v18);
  v20 = MEMORY[0x24BDF48E8];
  sub_2417289A8((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(_QWORD))MEMORY[0x24BDF48E8]);
  *(_QWORD *)&v12[*(int *)(v9 + 52)] = v19;
  *(_WORD *)&v12[*(int *)(v9 + 56)] = 256;
  sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))v20);
  return sub_2417BE960((uint64_t)v12, a2);
}

uint64_t sub_2417BDB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TagPicker(0, v11, v12, v12);
  v29 = sub_2417BC770();
  v13 = sub_2418A9F0C();
  MEMORY[0x24269D47C](MEMORY[0x24BEE12C8], v13);
  v14 = sub_2418A9E7C();
  v15 = swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](v15, v16);
    *(&v27 - 4) = a3;
    *(&v27 - 3) = a4;
    *(&v27 - 2) = a2;
    v18 = *(_QWORD *)(a1 + 16);
    v19 = *(_QWORD *)(a1 + 24);
    v29 = *(_QWORD *)(a1 + 8);
    v17 = v29;
    v30 = v18;
    v31 = v19;
    v20 = sub_2418A984C();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    MEMORY[0x24269C00C](&v32, v20);
    MEMORY[0x24269D47C](MEMORY[0x24BEE12B8], v13);
    MEMORY[0x24269D47C](MEMORY[0x24BEE12E8], v13);
    sub_2418A9FCC();
    v29 = v17;
    v30 = v18;
    v31 = v19;
    v28 = v32;
    sub_2418A9810();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else if (*(_BYTE *)(a1 + 32) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, a3);
    v22 = *(_QWORD *)(a1 + 8);
    v23 = *(_QWORD *)(a1 + 16);
    v24 = *(_QWORD *)(a1 + 24);
    v29 = v22;
    v30 = v23;
    v31 = v24;
    v25 = sub_2418A984C();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    MEMORY[0x24269C00C](&v32, v25);
    sub_2418A9F00();
    v29 = v22;
    v30 = v23;
    v31 = v24;
    v28 = v32;
    sub_2418A9810();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else
  {
    sub_2417BE8C0(a3, a3);
    swift_allocObject();
    sub_2418A9ED0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v26, a2, a3);
    return sub_2417BC7C8();
  }
}

void sub_2417BDE04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F920)
  {
    sub_2417BDE5C();
    v0 = sub_2418A85A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F920);
  }
}

unint64_t sub_2417BDE5C()
{
  unint64_t result;

  result = qword_25714F928;
  if (!qword_25714F928)
  {
    result = MEMORY[0x24269D47C](&unk_2418D3E0C, &type metadata for TagLayout);
    atomic_store(result, (unint64_t *)&qword_25714F928);
  }
  return result;
}

void sub_2417BDEA0(uint64_t a1)
{
  sub_241728250(a1, &qword_25714F938, sub_2417BDEBC, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_2417BDEBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714F940)
  {
    sub_2417BDF30();
    v5[0] = v2;
    v5[1] = sub_2417BE154();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2550], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714F940);
  }
}

void sub_2417BDF30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F948)
  {
    sub_241728250(255, &qword_25714F950, (void (*)(uint64_t))sub_2417BDFCC, (void (*)(uint64_t))sub_2417BE048);
    sub_24172835C(255, &qword_25714C790, MEMORY[0x24BEE1328], MEMORY[0x24BEE1340], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEEBF0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F948);
  }
}

void sub_2417BDFCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F958)
  {
    sub_24172835C(255, &qword_25714E030, MEMORY[0x24BDF1FA8], MEMORY[0x24BDECC80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F958);
  }
}

void sub_2417BE048()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F960)
  {
    sub_2417BE0C0();
    sub_24172159C(&qword_25714F978, (uint64_t (*)(uint64_t))sub_2417BE0C0, MEMORY[0x24BDEB358]);
    v0 = sub_2418A8D18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F960);
  }
}

void sub_2417BE0C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F968)
  {
    sub_2418A9864();
    sub_24172159C(&qword_25714F970, (uint64_t (*)(uint64_t))MEMORY[0x24BDF48E8], MEMORY[0x24BDF48D8]);
    v0 = sub_2418A84CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F968);
  }
}

unint64_t sub_2417BE154()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714F980;
  if (!qword_25714F980)
  {
    sub_2417BDF30();
    v2 = v1;
    v3[0] = sub_2417BE1BC();
    v3[1] = sub_241740590();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714F980);
  }
  return result;
}

unint64_t sub_2417BE1BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714F988;
  if (!qword_25714F988)
  {
    sub_241728250(255, &qword_25714F950, (void (*)(uint64_t))sub_2417BDFCC, (void (*)(uint64_t))sub_2417BE048);
    v2 = v1;
    v3[0] = sub_2417BE25C();
    v3[1] = sub_24172159C(&qword_25714F9A0, (uint64_t (*)(uint64_t))sub_2417BE048, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714F988);
  }
  return result;
}

unint64_t sub_2417BE25C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714F990;
  if (!qword_25714F990)
  {
    sub_2417BDFCC();
    v2 = v1;
    v3[0] = sub_2417BE2C4();
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714F990);
  }
  return result;
}

unint64_t sub_2417BE2C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25714F998;
  if (!qword_25714F998)
  {
    sub_24172835C(255, &qword_25714E030, MEMORY[0x24BDF1FA8], MEMORY[0x24BDECC80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25714F998);
  }
  return result;
}

uint64_t sub_2417BE344@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2417BCB50(*(uint64_t **)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

unint64_t sub_2417BE350()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25714F9B8;
  if (!qword_25714F9B8)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
    sub_241728250(255, &qword_25714F930, sub_2417BDEA0, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v3 = v2;
    v4[0] = sub_2417BE3F0();
    v4[1] = sub_24172159C(&qword_25714C550, v1, MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v4);
    atomic_store(result, (unint64_t *)&qword_25714F9B8);
  }
  return result;
}

unint64_t sub_2417BE3F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_25714F9C0;
  if (!qword_25714F9C0)
  {
    sub_2417BDEA0(255);
    v2 = v1;
    sub_2417BDF30();
    v4[2] = v3;
    v4[3] = sub_2417BE154();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_25714F9C0);
  }
  return result;
}

uint64_t sub_2417BE494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = type metadata accessor for TagPicker(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v7 = v4 + ((v6 + 32) & ~v6) + *(int *)(v5 + 60);
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2417BE584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TagPicker(0, v6, v7, a2) - 8) + 80);
  return sub_2417BCDB4(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_2417BE604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241728250(0, &qword_25714F950, (void (*)(uint64_t))sub_2417BDFCC, (void (*)(uint64_t))sub_2417BE048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417BE660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for TagPicker(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(v5 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v12 = v4 + v8 + *(int *)(v6 + 60);
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2418A87B4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v4 + ((v8 + v9 + v11) & ~v11), v5);
  return swift_deallocObject();
}

uint64_t sub_2417BE798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(type metadata accessor for TagPicker(0, v5, v6, a4) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_2417BDB0C(v4 + v8, v4 + ((v8 + *(_QWORD *)(v7 + 64) + v9) & ~v9), v5, v6);
}

uint64_t sub_2417BE804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241728250(0, &qword_25714F930, sub_2417BDEA0, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2417BE860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714F9E0;
  if (!qword_25714F9E0)
  {
    sub_24172570C(255, &qword_25714F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25714F9E0);
  }
  return result;
}

void sub_2417BE8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    sub_24172887C(0, (unint64_t *)&qword_25714D510, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  else
    sub_2418AA4B8();
}

uint64_t sub_2417BE928()
{
  return sub_2418A9DA4() & 1;
}

uint64_t sub_2417BE960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417BE0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417BE9A4()
{
  return swift_deallocObject();
}

uint64_t sub_2417BE9B4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[6];

  v1 = *a1;
  v2 = a1[1];
  sub_2417BDE04();
  v3 = sub_2418A9F0C();
  sub_241728250(255, &qword_25714F930, sub_2417BDEA0, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v10[1] = v3;
  v10[2] = v1;
  v10[3] = v4;
  v10[4] = MEMORY[0x24269D47C](MEMORY[0x24BEE12D8], v3);
  v10[5] = v2;
  v5 = sub_2418A98A0();
  sub_24172159C(&qword_25714F9A8, (uint64_t (*)(uint64_t))sub_2417BDE04, MEMORY[0x24BDEB998]);
  v6 = sub_2418A86E8();
  v7 = sub_24172159C(&qword_25714F9B0, (uint64_t (*)(uint64_t))sub_2417BDE04, MEMORY[0x24BDEB9A8]);
  v10[0] = sub_2417BE350();
  v9[0] = v7;
  v9[1] = MEMORY[0x24269D47C](MEMORY[0x24BDF4A08], v5, v10);
  return MEMORY[0x24269D47C](MEMORY[0x24BDEC550], v6, v9);
}

uint64_t *sub_2417BEAF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(uint64_t *, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v85 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      v84 = v8;
      v83 = v6;
      if (v85(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = (char *)v4 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v13, v14, v15);
      *((_BYTE *)v4 + v11[6]) = *((_BYTE *)a2 + v11[6]);
      v17 = v11[7];
      v18 = (char *)v4 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_2418A84E4();
      v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v82(v18, v19, v20);
      v21 = v11[8];
      v22 = (char *)v4 + v21;
      v23 = (char *)a2 + v21;
      if (v85((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v22, v23, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v22, 0, 1, v7);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = (char *)v4 + v26;
      v28 = (char *)a2 + v26;
      if (v85((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v27, v28, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v27, 0, 1, v7);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = (char *)v4 + v31;
      v33 = (char *)a2 + v31;
      if (v85((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v32, v33, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v32, 0, 1, v7);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = (char *)v4 + v36;
      v38 = (char *)a2 + v36;
      if (v85((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v37, v38, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v37, 0, 1, v7);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = (char *)v4 + v41;
      v43 = (char *)a2 + v41;
      if (v85((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v42, v43, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v42, 0, 1, v7);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v82(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = (char *)v4 + v46;
      v48 = (char *)a2 + v46;
      if (v85((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v84;
      }
      else
      {
        v50 = v84;
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v47, v48, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v47, 0, 1, v7);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = (char *)v4 + v52;
      v54 = (char *)a2 + v52;
      if (v85((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = (char *)v4 + v57;
      v59 = (char *)a2 + v57;
      if (v85((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = (char *)v4 + v62;
      v64 = (char *)a2 + v62;
      if (v85((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = (char *)v4 + v67;
      v69 = (char *)a2 + v67;
      if (v85((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = (char *)v4 + v72;
      v74 = (char *)a2 + v72;
      if (v85((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      v6 = v83;
    }
    else
    {
      *v4 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    v77 = *(int *)(v6 + 20);
    v78 = (char *)v4 + v77;
    v79 = (char *)a2 + v77;
    v80 = *((_QWORD *)v79 + 1);
    *(_QWORD *)v78 = *(_QWORD *)v79;
    *((_QWORD *)v78 + 1) = v80;
    v78[16] = v79[16];
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2417BF4BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v34)(uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_2418A8EB0();
    v3 = *(_QWORD *)(v2 - 8);
    v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    v5 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v6 = a1 + v5[5];
    v7 = sub_2418A87B4();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v8(v6, v7);
    v9 = a1 + v5[7];
    v10 = sub_2418A84E4();
    v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v34(v9, v10);
    v11 = a1 + v5[8];
    if (!v4(v11, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v2);
    v12 = _s6StylesV8TimelineVMa(0);
    v8(v11 + *(int *)(v12 + 20), v7);
    v13 = a1 + v5[9];
    if (!v4(v13, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v2);
    v14 = _s6StylesV6NoDataVMa(0);
    v8(v13 + *(int *)(v14 + 20), v7);
    v15 = a1 + v5[10];
    if (!v4(v15, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
    v16 = _s6StylesV11PlaceholderVMa(0);
    v8(v15 + *(int *)(v16 + 20), v7);
    v17 = a1 + v5[11];
    if (!v4(v17, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v2);
    v18 = _s6StylesV6SymbolVMa(0);
    v8(v17 + *(int *)(v18 + 20), v7);
    v19 = a1 + v5[12];
    if (!v4(v19, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    v20 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v8(v19 + *(int *)(v20 + 20), v7);
    v34(v19 + *(int *)(v20 + 28), v10);
    v21 = a1 + v5[13];
    if (!v4(v21, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v2);
    v22 = _s6StylesV5EmptyVMa(0);
    v8(v21 + *(int *)(v22 + 20), v7);
    v23 = a1 + v5[14];
    if (!v4(v23, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v23, v2);
    v24 = _s6StylesV5DailyVMa(0);
    v8(v23 + *(int *)(v24 + 20), v7);
    v25 = a1 + v5[15];
    if (!v4(v25, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v25, v2);
    v26 = _s6StylesV9MomentaryVMa(0);
    v8(v25 + *(int *)(v26 + 20), v7);
    v27 = a1 + v5[16];
    if (!v4(v27, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v2);
    v28 = _s6StylesV6HeaderVMa(0);
    v8(v27 + *(int *)(v28 + 20), v7);
    v29 = a1 + v5[17];
    if (!v4(v29, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v29, v2);
    v30 = _s6StylesV11ChartButtonVMa(0);
    v8(v29 + *(int *)(v30 + 20), v7);
    v31 = a1 + v5[18];
    if (!v4(v31, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v31, v2);
    v32 = _s6StylesV15LogButtonFooterVMa(0);
    v8(v31 + *(int *)(v32 + 20), v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_release();
}

_QWORD *sub_2417BF8FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(_QWORD *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v83 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
    v82 = v7;
    if (v83(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v80(v16, v17, v18);
    v19 = v9[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v83((_QWORD *)((char *)a2 + v19), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v81 = a3;
    if (v83((_QWORD *)((char *)a2 + v24), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v83((_QWORD *)((char *)a2 + v29), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v30, 0, 1, v6);
    }
    v33 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    v34 = v9[11];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v83((_QWORD *)((char *)a2 + v34), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v35, 0, 1, v6);
    }
    v38 = _s6StylesV6SymbolVMa(0);
    v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    v39 = v9[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    if (v83((_QWORD *)((char *)a2 + v39), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v40, v41, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v40, 0, 1, v6);
    }
    v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v80(&v40[v43[7]], &v41[v43[7]], v18);
    v44 = v9[13];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v83((_QWORD *)((char *)a2 + v44), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v82;
    }
    else
    {
      v48 = v82;
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v45, v46, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v45, 0, 1, v6);
    }
    v49 = _s6StylesV5EmptyVMa(0);
    v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    v50 = v9[14];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    if (v83((_QWORD *)((char *)a2 + v50), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    v54 = _s6StylesV5DailyVMa(0);
    v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v9[15];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v83((_QWORD *)((char *)a2 + v55), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v81;
    v59 = _s6StylesV9MomentaryVMa(0);
    v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    v60 = v9[16];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    if (v83((_QWORD *)((char *)a2 + v60), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    v64 = _s6StylesV6HeaderVMa(0);
    v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    v65 = v9[17];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    if (v83((_QWORD *)((char *)a2 + v65), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    v69 = _s6StylesV11ChartButtonVMa(0);
    v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    v70 = v9[18];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    if (v83((_QWORD *)((char *)a2 + v70), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    v74 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v75 = *(int *)(a3 + 20);
  v76 = (char *)a1 + v75;
  v77 = (char *)a2 + v75;
  v78 = *((_QWORD *)v77 + 1);
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *((_QWORD *)v76 + 1) = v78;
  v76[16] = v77[16];
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_2417C029C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(_QWORD *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A8EB0();
      v7 = *(_QWORD *)(v6 - 8);
      v82 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
      v80 = a3;
      v81 = v7;
      if (v82(a2, 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2418A87B4();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
      v15 = v9[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_2418A84E4();
      v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v79(v16, v17, v18);
      v19 = v9[8];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (v82((_QWORD *)((char *)a2 + v19), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v20, v21, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v20, 0, 1, v6);
      }
      v23 = _s6StylesV8TimelineVMa(0);
      v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      v24 = v9[9];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      if (v82((_QWORD *)((char *)a2 + v24), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v25, v26, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v25, 0, 1, v6);
      }
      v28 = _s6StylesV6NoDataVMa(0);
      v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      v29 = v9[10];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      if (v82((_QWORD *)((char *)a2 + v29), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v30, v31, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v30, 0, 1, v6);
      }
      v33 = _s6StylesV11PlaceholderVMa(0);
      v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
      v34 = v9[11];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      if (v82((_QWORD *)((char *)a2 + v34), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v35, v36, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v35, 0, 1, v6);
      }
      v38 = _s6StylesV6SymbolVMa(0);
      v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
      v39 = v9[12];
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      if (v82((_QWORD *)((char *)a2 + v39), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v40, v41, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v40, 0, 1, v6);
      }
      v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v14(&v40[v43[5]], &v41[v43[5]], v13);
      v40[v43[6]] = v41[v43[6]];
      v79(&v40[v43[7]], &v41[v43[7]], v18);
      v44 = v9[13];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      if (v82((_QWORD *)((char *)a2 + v44), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v81;
      }
      else
      {
        v48 = v81;
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v45, v46, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v45, 0, 1, v6);
      }
      v49 = _s6StylesV5EmptyVMa(0);
      v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      v50 = v9[14];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      if (v82((_QWORD *)((char *)a2 + v50), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
      }
      v54 = _s6StylesV5DailyVMa(0);
      v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v9[15];
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      if (v82((_QWORD *)((char *)a2 + v55), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
      }
      v59 = _s6StylesV9MomentaryVMa(0);
      v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
      v60 = v9[16];
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      if (v82((_QWORD *)((char *)a2 + v60), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
      }
      v64 = _s6StylesV6HeaderVMa(0);
      v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
      v65 = v9[17];
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      if (v82((_QWORD *)((char *)a2 + v65), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
      }
      v69 = _s6StylesV11ChartButtonVMa(0);
      v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
      v70 = v9[18];
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      if (v82((_QWORD *)((char *)a2 + v70), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
      }
      v74 = _s6StylesV15LogButtonFooterVMa(0);
      v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
      a3 = v80;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v75 = *(int *)(a3 + 20);
  v76 = (char *)a1 + v75;
  v77 = (char *)a2 + v75;
  *(_QWORD *)((char *)a1 + v75) = *(_QWORD *)((char *)a2 + v75);
  swift_retain();
  swift_release();
  *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
  swift_retain();
  swift_release();
  v76[16] = v77[16];
  return a1;
}

char *sub_2417C0C60(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    v83 = v9;
    if (v84(a2, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2418A87B4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    v17 = v11[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_2418A84E4();
    v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
    v81(v18, v19, v20);
    v21 = v11[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (v84(&a2[v21], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v22, v23, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v22, 0, 1, v8);
    }
    v25 = _s6StylesV8TimelineVMa(0);
    v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    v26 = v11[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v82 = a3;
    if (v84(&a2[v26], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v27, v28, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v27, 0, 1, v8);
    }
    v30 = _s6StylesV6NoDataVMa(0);
    v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    v31 = v11[10];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (v84(&a2[v31], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v32, v33, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v32, 0, 1, v8);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    v36 = v11[11];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if (v84(&a2[v36], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v37, v38, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v37, 0, 1, v8);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    v41 = v11[12];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v84(&a2[v41], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v42, v43, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v42, 0, 1, v8);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v16(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v81(&v42[v45[7]], &v43[v45[7]], v20);
    v46 = v11[13];
    v47 = &a1[v46];
    v48 = &a2[v46];
    if (v84(&a2[v46], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = v83;
    }
    else
    {
      v50 = v83;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v47, v48, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v47, 0, 1, v8);
    }
    v51 = _s6StylesV5EmptyVMa(0);
    v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    v52 = v11[14];
    v53 = &a1[v52];
    v54 = &a2[v52];
    if (v84(&a2[v52], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    v56 = _s6StylesV5DailyVMa(0);
    v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = v11[15];
    v58 = &a1[v57];
    v59 = &a2[v57];
    if (v84(&a2[v57], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v82;
    v61 = _s6StylesV9MomentaryVMa(0);
    v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    v62 = v11[16];
    v63 = &a1[v62];
    v64 = &a2[v62];
    if (v84(&a2[v62], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    v66 = _s6StylesV6HeaderVMa(0);
    v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    v67 = v11[17];
    v68 = &a1[v67];
    v69 = &a2[v67];
    if (v84(&a2[v67], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    v71 = _s6StylesV11ChartButtonVMa(0);
    v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    v72 = v11[18];
    v73 = &a1[v72];
    v74 = &a2[v72];
    if (v84(&a2[v72], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    v76 = _s6StylesV15LogButtonFooterVMa(0);
    v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v77 = *(int *)(a3 + 20);
  v78 = &a1[v77];
  v79 = &a2[v77];
  *(_OWORD *)v78 = *(_OWORD *)v79;
  v78[16] = v79[16];
  return a1;
}

char *sub_2417C15F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A8EB0();
      v9 = *(_QWORD *)(v8 - 8);
      v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      v82 = a3;
      v83 = v9;
      if (v84(a2, 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      v17 = v11[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_2418A84E4();
      v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
      v81(v18, v19, v20);
      v21 = v11[8];
      v22 = &a1[v21];
      v23 = &a2[v21];
      if (v84(&a2[v21], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v22, v23, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v22, 0, 1, v8);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = &a1[v26];
      v28 = &a2[v26];
      if (v84(&a2[v26], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v27, v28, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v27, 0, 1, v8);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = &a1[v31];
      v33 = &a2[v31];
      if (v84(&a2[v31], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v32, v33, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v32, 0, 1, v8);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = &a1[v36];
      v38 = &a2[v36];
      if (v84(&a2[v36], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v37, v38, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v37, 0, 1, v8);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = &a1[v41];
      v43 = &a2[v41];
      if (v84(&a2[v41], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v42, v43, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v42, 0, 1, v8);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v81(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = &a1[v46];
      v48 = &a2[v46];
      if (v84(&a2[v46], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v83;
      }
      else
      {
        v50 = v83;
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v47, v48, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v47, 0, 1, v8);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = &a1[v52];
      v54 = &a2[v52];
      if (v84(&a2[v52], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = &a1[v57];
      v59 = &a2[v57];
      if (v84(&a2[v57], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = &a1[v62];
      v64 = &a2[v62];
      if (v84(&a2[v62], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = &a1[v67];
      v69 = &a2[v67];
      if (v84(&a2[v67], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = &a1[v72];
      v74 = &a2[v72];
      if (v84(&a2[v72], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      a3 = v82;
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  v77 = *(int *)(a3 + 20);
  v78 = &a1[v77];
  v79 = &a2[v77];
  *(_QWORD *)&a1[v77] = *(_QWORD *)v79;
  swift_release();
  *((_QWORD *)v78 + 1) = *((_QWORD *)v79 + 1);
  swift_release();
  v78[16] = v79[16];
  return a1;
}

uint64_t sub_2417C1FA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417C1FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2417C2044()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2417C2050(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
}

uint64_t _s15LogButtonFooterVMa()
{
  uint64_t result;

  result = qword_25714FA40;
  if (!qword_25714FA40)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417C2120()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2417C21A8()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_2417C21B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (**v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t KeyPath;
  uint64_t *v65;
  uint64_t (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  id result;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (**v150)(char *, uint64_t);
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v2 = v1;
  v132 = a1;
  v130 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x24BDAC7A8](v130, v3);
  v131 = (uint64_t)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2418A84FC();
  v152 = *(_QWORD *)(v5 - 8);
  v153 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v151 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = _s6StylesV15LogButtonFooterVMa(0);
  MEMORY[0x24BDAC7A8](v144, v8);
  v142 = (uint64_t)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v11 = MEMORY[0x24BDAC7A8](v155, v10);
  v129 = (uint64_t)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v154 = (uint64_t)&v124 - v15;
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (void (**)(char *, uint64_t))((char *)&v124 - v17);
  v148 = sub_2418A8910();
  v146 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148, v19);
  v145 = (char *)&v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_2418A8C40();
  v150 = *(void (***)(char *, uint64_t))(v136 - 8);
  MEMORY[0x24BDAC7A8](v136, v21);
  v23 = (char *)&v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = _s15LogButtonFooterVMa();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  MEMORY[0x24BDAC7A8](v24, v27);
  sub_24173EDE8();
  v134 = v28;
  v135 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)&v124 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C2FB8(0);
  v140 = v32;
  v139 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)&v124 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C308C(0);
  v137 = v36;
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)&v124 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C30B0(0);
  v138 = v40;
  MEMORY[0x24BDAC7A8](v40, v41);
  v133 = (char *)&v124 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C3158();
  v141 = v43;
  MEMORY[0x24BDAC7A8](v43, v44);
  v147 = (uint64_t)&v124 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C31BC(0);
  v143 = v46;
  MEMORY[0x24BDAC7A8](v46, v47);
  v149 = (uint64_t)&v124 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C31D8(0);
  v124 = v49;
  MEMORY[0x24BDAC7A8](v49, v50);
  v126 = (uint64_t)&v124 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C31F4(0);
  v125 = v52;
  MEMORY[0x24BDAC7A8](v52, v53);
  v128 = (uint64_t)&v124 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C3210(0);
  MEMORY[0x24BDAC7A8](v55, v56);
  v127 = (uint64_t)&v124 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417289A8(v2, (uint64_t)&v124 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))_s15LogButtonFooterVMa);
  v58 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v59 = swift_allocObject() + v58;
  sub_241731B4C((uint64_t)&v124 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v59, (uint64_t (*)(_QWORD))_s15LogButtonFooterVMa);
  v156 = v2;
  sub_2417C2F5C();
  sub_24173EE68();
  sub_2418A9708();
  sub_2418A8C34();
  sub_24172159C(&qword_25714CA20, (uint64_t (*)(uint64_t))sub_24173EDE8, MEMORY[0x24BDF43B0]);
  sub_24172159C(&qword_25714FA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEDC8], MEMORY[0x24BDEEDB8]);
  v60 = v134;
  v61 = v136;
  sub_2418A930C();
  v150[1](v23, v61);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v31, v60);
  sub_241860D60((uint64_t)v18);
  v62 = v142;
  sub_2417289A8((uint64_t)v18 + *(int *)(v155 + 72), v142, _s6StylesV15LogButtonFooterVMa);
  v150 = v18;
  sub_24172588C((uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles);
  LOBYTE(v31) = sub_2418A879C();
  sub_24172588C(v62, _s6StylesV15LogButtonFooterVMa);
  v63 = v145;
  if ((v31 & 1) != 0)
    sub_2418A88F8();
  else
    sub_2418A8904();
  KeyPath = swift_getKeyPath();
  v65 = (uint64_t *)&v39[*(int *)(v137 + 36)];
  v66 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008];
  sub_24172570C(0, &qword_25714FA90, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDCA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  v68 = v146;
  v69 = v148;
  (*(void (**)(char *, char *, uint64_t))(v146 + 16))((char *)v65 + *(int *)(v67 + 28), v63, v148);
  *v65 = KeyPath;
  v70 = v139;
  v71 = v140;
  (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v39, v35, v140);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v63, v69);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v35, v71);
  v72 = v151;
  v73 = v152;
  v74 = v153;
  (*(void (**)(char *, _QWORD, uint64_t))(v152 + 104))(v151, *MEMORY[0x24BDEB498], v153);
  v75 = swift_getKeyPath();
  v76 = (uint64_t)v133;
  v77 = (uint64_t *)&v133[*(int *)(v138 + 36)];
  sub_24172570C(0, &qword_25714FAA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB4A0], v66);
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))((char *)v77 + *(int *)(v78 + 28), v72, v74);
  *v77 = v75;
  sub_2417289A8((uint64_t)v39, v76, (uint64_t (*)(_QWORD))sub_2417C308C);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v74);
  sub_24172588C((uint64_t)v39, (uint64_t (*)(_QWORD))sub_2417C308C);
  v79 = sub_2418A95DC();
  v80 = swift_getKeyPath();
  v81 = v147;
  sub_2417289A8(v76, v147, (uint64_t (*)(_QWORD))sub_2417C30B0);
  v82 = (uint64_t *)(v81 + *(int *)(v141 + 36));
  *v82 = v80;
  v82[1] = v79;
  sub_24172588C(v76, (uint64_t (*)(_QWORD))sub_2417C30B0);
  LOBYTE(v79) = sub_2418A90E4();
  v83 = (uint64_t)v150;
  sub_241860D60((uint64_t)v150);
  sub_24172588C(v83, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A84A8();
  v85 = v84;
  v87 = v86;
  v89 = v88;
  v91 = v90;
  v92 = v149;
  sub_2417289A8(v81, v149, (uint64_t (*)(_QWORD))sub_2417C3158);
  v93 = v92 + *(int *)(v143 + 36);
  *(_BYTE *)v93 = v79;
  *(_QWORD *)(v93 + 8) = v85;
  *(_QWORD *)(v93 + 16) = v87;
  *(_QWORD *)(v93 + 24) = v89;
  *(_QWORD *)(v93 + 32) = v91;
  *(_BYTE *)(v93 + 40) = 0;
  sub_24172588C(v81, (uint64_t (*)(_QWORD))sub_2417C3158);
  v94 = sub_2418A90F0();
  v95 = v154;
  sub_241860D60(v154);
  sub_24172588C(v95, type metadata accessor for StateOfMindTimeline.Styles);
  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v97 = result;
    MobileGestalt_get_homeButtonType();

    sub_2418A84A8();
    v99 = v98;
    v101 = v100;
    v103 = v102;
    v105 = v104;
    v106 = v126;
    sub_2417289A8(v92, v126, (uint64_t (*)(_QWORD))sub_2417C31BC);
    v107 = v106 + *(int *)(v124 + 36);
    *(_BYTE *)v107 = v94;
    *(_QWORD *)(v107 + 8) = v99;
    *(_QWORD *)(v107 + 16) = v101;
    *(_QWORD *)(v107 + 24) = v103;
    *(_QWORD *)(v107 + 32) = v105;
    *(_BYTE *)(v107 + 40) = 0;
    sub_24172588C(v92, (uint64_t (*)(_QWORD))sub_2417C31BC);
    v108 = sub_2418A90CC();
    v109 = v129;
    sub_241860D60(v129);
    v110 = v131;
    sub_2417289A8(v109 + *(int *)(v155 + 48), v131, type metadata accessor for StateOfMindTimeline.Styles.Entry);
    sub_24172588C(v109, type metadata accessor for StateOfMindTimeline.Styles);
    if (*(_BYTE *)(v110 + *(int *)(v130 + 24)) == 1 && (sub_2418A879C() & 1) == 0)
      sub_24185F5A8();
    sub_24172588C(v110, type metadata accessor for StateOfMindTimeline.Styles.Entry);
    sub_2418A84A8();
    v112 = v111;
    v114 = v113;
    v116 = v115;
    v118 = v117;
    v119 = v128;
    sub_2417289A8(v106, v128, (uint64_t (*)(_QWORD))sub_2417C31D8);
    v120 = v119 + *(int *)(v125 + 36);
    *(_BYTE *)v120 = v108;
    *(_QWORD *)(v120 + 8) = v112;
    *(_QWORD *)(v120 + 16) = v114;
    *(_QWORD *)(v120 + 24) = v116;
    *(_QWORD *)(v120 + 32) = v118;
    *(_BYTE *)(v120 + 40) = 0;
    sub_24172588C(v106, (uint64_t (*)(_QWORD))sub_2417C31D8);
    v121 = sub_2418A9960();
    v122 = v127;
    sub_24185E42C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v127, 0.0, 1, 0.0, 1, v121, v123);
    sub_24172588C(v119, (uint64_t (*)(_QWORD))sub_2417C31F4);
    return (id)sub_241731B4C(v122, v132, (uint64_t (*)(_QWORD))sub_2417C3210);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2417C2C94()
{
  _s15LogButtonFooterVMa();
  sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  return sub_2418A9810();
}

double sub_2417C2D10@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  __int128 v42;

  v2 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v6 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v7 = sub_2418A7EFC();
  v9 = v8;
  swift_bridgeObjectRelease();

  v30 = v7;
  v31 = v9;
  sub_241721040();
  v10 = sub_2418A92D0();
  v12 = v11;
  LOBYTE(v9) = v13;
  v15 = v14;
  sub_241860D60((uint64_t)v5);
  sub_24172588C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9960();
  sub_2418A88E0();
  v16 = v30;
  v17 = v31;
  v18 = v32;
  v19 = v33;
  v20 = v34;
  v21 = v35;
  v22 = v36;
  v23 = v37;
  v24 = v38;
  v25 = v39;
  v26 = v40;
  v27 = v41;
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v12;
  *(_BYTE *)(a1 + 16) = v9 & 1;
  *(_QWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 32) = v16;
  *(_BYTE *)(a1 + 40) = v17;
  *(_QWORD *)(a1 + 48) = v18;
  *(_BYTE *)(a1 + 56) = v19;
  *(_QWORD *)(a1 + 64) = v20;
  *(_BYTE *)(a1 + 72) = v21;
  *(_QWORD *)(a1 + 80) = v22;
  *(_BYTE *)(a1 + 88) = v23;
  *(_QWORD *)(a1 + 96) = v24;
  *(_BYTE *)(a1 + 104) = v25;
  *(_QWORD *)(a1 + 112) = v26;
  *(_BYTE *)(a1 + 120) = v27;
  result = *(double *)&v42;
  *(_OWORD *)(a1 + 128) = v42;
  return result;
}

void sub_2417C2F5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C9B0)
  {
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C9B0);
  }
}

void sub_2417C2FB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_25714FA78)
  {
    sub_24173EDE8();
    v3 = v2;
    v4 = sub_2418A8C40();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEEDC8];
    v8[0] = v3;
    v8[1] = v4;
    v8[2] = sub_24172159C(&qword_25714CA20, (uint64_t (*)(uint64_t))sub_24173EDE8, MEMORY[0x24BDF43B0]);
    v8[3] = sub_24172159C(&qword_25714FA80, v5, MEMORY[0x24BDEEDB8]);
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF22B8], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_25714FA78);
  }
}

void sub_2417C308C(uint64_t a1)
{
  sub_2417C30D4(a1, &qword_25714FA88, sub_2417C2FB8, &qword_25714FA90, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDCA8]);
}

void sub_2417C30B0(uint64_t a1)
{
  sub_2417C30D4(a1, &qword_25714FA98, sub_2417C308C, &qword_25714FAA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB4A0]);
}

void sub_2417C30D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    sub_24172570C(255, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v8 = sub_2418A87FC();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_2417C3158()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714FAA8)
  {
    sub_2417C30B0(255);
    sub_24173EF74();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714FAA8);
  }
}

void sub_2417C31BC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714FAB0, (void (*)(uint64_t))sub_2417C3158);
}

void sub_2417C31D8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714FAB8, sub_2417C31BC);
}

void sub_2417C31F4(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714FAC0, sub_2417C31D8);
}

void sub_2417C3210(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714FAC8, sub_2417C31F4);
}

uint64_t sub_2417C322C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(_s15LogButtonFooterVMa() - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = sub_2418A8EB0();
    v4 = *(_QWORD *)(v3 - 8);
    v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (!v5(v2, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    v6 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v7 = v2 + v6[5];
    v8 = sub_2418A87B4();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v7, v8);
    v10 = v2 + v6[7];
    v11 = sub_2418A84E4();
    v35 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v35(v10, v11);
    v12 = v2 + v6[8];
    if (!v5(v12, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v3);
    v13 = _s6StylesV8TimelineVMa(0);
    v9(v12 + *(int *)(v13 + 20), v8);
    v14 = v2 + v6[9];
    if (!v5(v14, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v3);
    v15 = _s6StylesV6NoDataVMa(0);
    v9(v14 + *(int *)(v15 + 20), v8);
    v16 = v2 + v6[10];
    if (!v5(v16, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v16, v3);
    v17 = _s6StylesV11PlaceholderVMa(0);
    v9(v16 + *(int *)(v17 + 20), v8);
    v18 = v2 + v6[11];
    if (!v5(v18, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v18, v3);
    v19 = _s6StylesV6SymbolVMa(0);
    v9(v18 + *(int *)(v19 + 20), v8);
    v20 = v2 + v6[12];
    if (!v5(v20, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v20, v3);
    v21 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v9(v20 + *(int *)(v21 + 20), v8);
    v35(v20 + *(int *)(v21 + 28), v11);
    v22 = v2 + v6[13];
    if (!v5(v22, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v22, v3);
    v23 = _s6StylesV5EmptyVMa(0);
    v9(v22 + *(int *)(v23 + 20), v8);
    v24 = v2 + v6[14];
    if (!v5(v24, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v24, v3);
    v25 = _s6StylesV5DailyVMa(0);
    v9(v24 + *(int *)(v25 + 20), v8);
    v26 = v2 + v6[15];
    if (!v5(v26, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v26, v3);
    v27 = _s6StylesV9MomentaryVMa(0);
    v9(v26 + *(int *)(v27 + 20), v8);
    v28 = v2 + v6[16];
    if (!v5(v28, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v28, v3);
    v29 = _s6StylesV6HeaderVMa(0);
    v9(v28 + *(int *)(v29 + 20), v8);
    v30 = v2 + v6[17];
    if (!v5(v30, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v30, v3);
    v31 = _s6StylesV11ChartButtonVMa(0);
    v9(v30 + *(int *)(v31 + 20), v8);
    v32 = v2 + v6[18];
    if (!v5(v32, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v32, v3);
    v33 = _s6StylesV15LogButtonFooterVMa(0);
    v9(v32 + *(int *)(v33 + 20), v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2417C36B0()
{
  _s15LogButtonFooterVMa();
  return sub_2417C2C94();
}

double sub_2417C36DC@<D0>(uint64_t a1@<X8>)
{
  return sub_2417C2D10(a1);
}

uint64_t sub_2417C36E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A8AFC();
  *a1 = result;
  return result;
}

uint64_t sub_2417C370C()
{
  swift_retain();
  return sub_2418A8B08();
}

uint64_t sub_2417C3734()
{
  return sub_2418A8A00();
}

uint64_t sub_2417C3754()
{
  return sub_2418A8A00();
}

uint64_t sub_2417C3774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2417C3788(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDEDCA8], MEMORY[0x24BDEE140]);
}

uint64_t sub_2417C3788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_2417C3804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2417C3788(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDEDCA8], MEMORY[0x24BDEE140]);
}

uint64_t sub_2417C3828()
{
  return sub_2418A8964();
}

uint64_t sub_2417C3848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2417C3788(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDEB4A0], MEMORY[0x24BDEDF10]);
}

uint64_t sub_2417C386C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A8AFC();
  *a1 = result;
  return result;
}

uint64_t sub_2417C3894()
{
  swift_retain();
  return sub_2418A8B08();
}

uint64_t sub_2417C38BC()
{
  return sub_241721DF8(&qword_25714FAD0, (uint64_t (*)(uint64_t))sub_2417C3210, sub_2417C38F0, MEMORY[0x24BDEDBB8]);
}

uint64_t sub_2417C38F0()
{
  return sub_241721DF8(&qword_25714FAD8, (uint64_t (*)(uint64_t))sub_2417C31F4, sub_2417C3914, MEMORY[0x24BDECC60]);
}

uint64_t sub_2417C3914()
{
  return sub_241721DF8(&qword_25714FAE0, (uint64_t (*)(uint64_t))sub_2417C31D8, sub_2417C3938, MEMORY[0x24BDECC60]);
}

uint64_t sub_2417C3938()
{
  return sub_241721DF8(&qword_25714FAE8, (uint64_t (*)(uint64_t))sub_2417C31BC, (uint64_t (*)(void))sub_2417C395C, MEMORY[0x24BDECC60]);
}

unint64_t sub_2417C395C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714FAF0;
  if (!qword_25714FAF0)
  {
    sub_2417C3158();
    v2 = v1;
    v3[0] = sub_2417C39DC();
    v3[1] = sub_24172159C((unint64_t *)&qword_25714C9E8, (uint64_t (*)(uint64_t))sub_24173EF74, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714FAF0);
  }
  return result;
}

unint64_t sub_2417C39DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714FAF8;
  if (!qword_25714FAF8)
  {
    sub_2417C30B0(255);
    v2 = v1;
    v3[0] = sub_2417C3A5C();
    v3[1] = sub_2417C3B60(&qword_25714FB10, &qword_25714FAA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB4A0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714FAF8);
  }
  return result;
}

unint64_t sub_2417C3A5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  _QWORD v7[6];

  result = qword_25714FB00;
  if (!qword_25714FB00)
  {
    sub_2417C308C(255);
    v2 = v1;
    sub_24173EDE8();
    v4 = v3;
    v5 = sub_2418A8C40();
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEEDC8];
    v7[2] = v4;
    v7[3] = v5;
    v7[4] = sub_24172159C(&qword_25714CA20, (uint64_t (*)(uint64_t))sub_24173EDE8, MEMORY[0x24BDF43B0]);
    v7[5] = sub_24172159C(&qword_25714FA80, v6, MEMORY[0x24BDEEDB8]);
    v7[0] = swift_getOpaqueTypeConformance2();
    v7[1] = sub_2417C3B60(&qword_25714FB08, &qword_25714FA90, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDCA8]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v7);
    atomic_store(result, (unint64_t *)&qword_25714FB00);
  }
  return result;
}

uint64_t sub_2417C3B60(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_24172570C(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF1028], v5);
    atomic_store(result, a1);
  }
  return result;
}

id sub_2417C3BF4(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  objc_class *v23;

  v15 = sub_2418A8100();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a8, 1, v15) != 1)
  {
    v17 = (void *)sub_2418A80AC();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a8, v15);
  }
  v18 = sub_2418A8238();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(a9, 1, v18) != 1)
  {
    v20 = (void *)sub_2418A81CC();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a9, v18);
  }
  v21 = objc_msgSend(objc_allocWithZone(v23), sel_initWithHealthStore_primaryDisplayType_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_, a1, a2, a3, a4, a5, a6, a7, v17, v20, a10);

  return v21;
}

id sub_2417C44AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StateOfMindChartViewController()
{
  return objc_opt_self();
}

id sub_2417C44FC(uint64_t a1, uint64_t a2)
{
  return sub_2417C5130(a2);
}

void sub_2417C4504()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  int v30;
  id v31;
  id v32;
  char *v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t ObjectType;
  uint64_t v42;
  id v43[3];

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_2417C55D4(0, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v36 - v4;
  v6 = sub_2418A8100();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2418A8340();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  v16 = sub_2418A8334();
  v17 = sub_2418AA05C();
  if (os_log_type_enabled(v16, v17))
  {
    v37 = v11;
    v18 = swift_slowAlloc();
    v39 = v6;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v36 = v12;
    v21 = v20;
    v43[0] = (id)v20;
    v38 = v7;
    *(_DWORD *)v19 = 136446210;
    v40 = v5;
    v22 = sub_2418AA5D8();
    v42 = sub_24176024C(v22, v23, (uint64_t *)v43);
    v5 = v40;
    v7 = v38;
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v16, v17, "[%{public}s] Tapped on current value view date", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v21, -1, -1);
    v24 = v19;
    v6 = v39;
    MEMORY[0x24269D548](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v37);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  v25 = objc_msgSend(v1, sel_healthStore);
  v26 = objc_msgSend(v1, sel_primaryGraphViewController);
  v27 = objc_msgSend(v26, sel_graphView);

  v28 = objc_msgSend(v27, sel_effectiveVisibleRangeCadence);
  v29 = objc_msgSend(v28, sel_minValue);

  if (!v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_8;
  }
  v43[0] = v29;
  v30 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, v30 ^ 1u, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_8:
    sub_2418A80F4();
    sub_2417C566C((uint64_t)v5, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
LABEL_9:
  v31 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v31, sel_verticalSizeClass);

  v32 = objc_allocWithZone((Class)type metadata accessor for StateOfMindCalendarViewController());
  v33 = (char *)StateOfMindCalendarViewController.init(healthStore:dateToFocusOn:verticalSizeClass:)(v25, (uint64_t)v10);
  v34 = &v33[qword_25715E1B8];
  swift_beginAccess();
  *((_QWORD *)v34 + 1) = &off_2511B02E0;
  swift_unknownObjectWeakAssign();
  v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A718]), sel_initWithRootViewController_, v33);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v35, 1, 0);

}

id sub_2417C4970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v10;
  void *v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  objc_class *v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;

  v11 = v10;
  v34 = a7;
  v35 = a4;
  v36 = a5;
  v37 = a6;
  v32 = a2;
  v33 = a3;
  sub_2417C55D4(0, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v32 - v16;
  v18 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2417C55D4(0, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v32 - v21;
  sub_2417C5620(a8, (uint64_t)&v32 - v21, (unint64_t *)&qword_25714F360, v18);
  v23 = sub_2418A8100();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
  {
    v25 = (void *)sub_2418A80AC();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
  }
  sub_2417C5620(a9, (uint64_t)v17, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  v26 = sub_2418A8238();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v17, 1, v26) != 1)
  {
    v28 = (void *)sub_2418A81CC();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v26);
  }
  v29 = (objc_class *)type metadata accessor for StateOfMindChartViewController();
  v38.receiver = v11;
  v38.super_class = v29;
  v30 = objc_msgSendSuper2(&v38, sel_initWithHealthStore_primaryDisplayType_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_, a1, v32, v33, v35, v36, v37, v34, v25, v28, a10);

  sub_2417C566C(a9, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  sub_2417C566C(a8, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  return v30;
}

id sub_2417C4B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  objc_class *v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  objc_super v40;

  v12 = v11;
  v35 = a7;
  v36 = a8;
  v38 = a5;
  v39 = a6;
  v37 = a4;
  v33 = a2;
  v34 = a3;
  sub_2417C55D4(0, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v32 - v15;
  v17 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2417C55D4(0, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v32 - v20;
  sub_241762EFC(0, (unint64_t *)&qword_25714FB48);
  sub_241762EFC(0, &qword_25714FB50);
  sub_2417C54A4();
  v22 = (void *)sub_2418A9D14();
  swift_bridgeObjectRelease();
  sub_2417C5620(a9, (uint64_t)v21, (unint64_t *)&qword_25714F360, v17);
  v23 = sub_2418A8100();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23) != 1)
  {
    v25 = (void *)sub_2418A80AC();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
  }
  sub_2417C5620(a10, (uint64_t)v16, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  v26 = sub_2418A8238();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v16, 1, v26) != 1)
  {
    v28 = (void *)sub_2418A81CC();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v26);
  }
  v29 = (objc_class *)type metadata accessor for StateOfMindChartViewController();
  v40.receiver = v12;
  v40.super_class = v29;
  v30 = objc_msgSendSuper2(&v40, sel_initWithTimeScopeRanges_healthStore_primaryDisplayType_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_, v22, v33, v34, v37, v38, v39, v35, v36, v25, v28, a11);

  sub_2417C566C(a10, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  sub_2417C566C(a9, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  return v30;
}

id sub_2417C4E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  objc_class *v30;
  id v31;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  objc_super v41;
  _QWORD v42[3];
  uint64_t v43;

  v34 = a2;
  v35 = a7;
  v36 = a8;
  v38 = a5;
  v39 = a6;
  v37 = a4;
  sub_2417C55D4(0, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v33 - v16;
  sub_2417C5440();
  v18 = (void *)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  if (a3)
  {
    sub_241762EFC(0, &qword_25714FB60);
    v19 = (void *)sub_2418A9EAC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  v40 = a10;
  sub_2417C54FC(a10, (uint64_t)v42);
  v20 = v43;
  if (v43)
  {
    v21 = __swift_project_boxed_opaque_existential_1(v42, v43);
    v22 = *(_QWORD *)(v20 - 8);
    MEMORY[0x24BDAC7A8](v21, v21);
    v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v24);
    v25 = sub_2418AA4D0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  else
  {
    v25 = 0;
  }
  sub_2417C5620(a11, (uint64_t)v17, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  v26 = sub_2418A8238();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v17, 1, v26) != 1)
  {
    v28 = (void *)sub_2418A81CC();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v26);
  }
  if (a13)
  {
    sub_241762EFC(0, (unint64_t *)&qword_25714FB48);
    sub_241762EFC(0, &qword_25714FB50);
    sub_2417C54A4();
    v29 = (void *)sub_2418A9D14();
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = 0;
  }
  v30 = (objc_class *)type metadata accessor for StateOfMindChartViewController();
  v41.receiver = v33;
  v41.super_class = v30;
  v31 = objc_msgSendSuper2(&v41, sel_initWithStackedDisplayTypes_primaryDisplayTypeStackIndex_stackedDisplayTypeHeights_healthStore_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_timeScopeRanges_, v18, v34, v19, v37, v38, v39, v35, v36, a9, v25, v28, a12, v29);

  swift_unknownObjectRelease();
  sub_2417C566C(a11, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  sub_2417C5598(v40);
  return v31;
}

id sub_2417C5130(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v4 = sub_2418A8100();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2418A8340();
  v29 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v13 = sub_2418A8334();
  v14 = sub_2418AA05C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v26 = v9;
    v16 = v15;
    v25 = swift_slowAlloc();
    v31 = v25;
    *(_DWORD *)v16 = 136446466;
    v17 = sub_2418AA5D8();
    ObjectType = (uint64_t)v1;
    v30 = sub_24176024C(v17, v18, &v31);
    v27 = a1;
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    sub_2417C53F8();
    v19 = sub_2418AA4AC();
    v30 = sub_24176024C(v19, v20, &v31);
    v2 = (void *)ObjectType;
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    _os_log_impl(&dword_24171C000, v13, v14, "[%{public}s] Scrolling to date: %{public}s", (uint8_t *)v16, 0x16u);
    v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x24269D548](v21, -1, -1);
    MEMORY[0x24269D548](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v26);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v9);
  }
  v22 = (void *)sub_2418A80AC();
  objc_msgSend(v2, sel_scrollToDate_withVisibleAlignment_, v22, 3);

  return objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

unint64_t sub_2417C53F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257154530;
  if (!qword_257154530)
  {
    v1 = sub_2418A8100();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDCE988], v1);
    atomic_store(result, (unint64_t *)&qword_257154530);
  }
  return result;
}

void sub_2417C5440()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D520)
  {
    sub_241762EFC(255, (unint64_t *)&qword_257152CA0);
    v0 = sub_2418A9F0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D520);
  }
}

unint64_t sub_2417C54A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714FB58;
  if (!qword_25714FB58)
  {
    v1 = sub_241762EFC(255, (unint64_t *)&qword_25714FB48);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25714FB58);
  }
  return result;
}

uint64_t sub_2417C54FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417C5540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2417C5540()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152DC0)
  {
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152DC0);
  }
}

uint64_t sub_2417C5598(uint64_t a1)
{
  uint64_t v2;

  sub_2417C5540();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2417C55D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2418AA1E8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2417C5620(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2417C55D4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2417C566C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2417C55D4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2417C56A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t *v13;
  uint64_t *v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = sub_2418A8100();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v20 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for MomentaryDatePickerFullView();
  v11 = (uint64_t *)(a3 + v10[8]);
  *v11 = swift_getKeyPath();
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v13 = (uint64_t *)(a3 + v10[9]);
  *v13 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], v12);
  swift_storeEnumTagMultiPayload();
  v14 = (uint64_t *)(a3 + v10[10]);
  *v14 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v12);
  swift_storeEnumTagMultiPayload();
  sub_2417289A8(a1, a3, (uint64_t (*)(_QWORD))sub_2417C7F00);
  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870];
  sub_24173F288(a2, a3 + v10[5], (uint64_t)qword_25714EE48, (uint64_t)v6, (uint64_t)MEMORY[0x24BDF4870], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_24172570C);
  sub_24172570C(0, qword_25714EE48, v6, v15);
  MEMORY[0x24269C00C]();
  sub_241784BA4(a2, (uint64_t)qword_25714EE48, (uint64_t)v6, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_24172570C);
  sub_24172588C(a1, (uint64_t (*)(_QWORD))sub_2417C7F00);
  v16 = a3 + v10[6];
  sub_24172570C(0, qword_25714ECD8, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v16 + *(int *)(v17 + 28)) = 0;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(v16, v9, v21);
  v19 = a3 + v10[7];
  *(_BYTE *)v19 = 1;
  *(_QWORD *)(v19 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for MomentaryDatePickerFullView()
{
  uint64_t result;

  result = qword_25714FBD0;
  if (!qword_25714FBD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2417C5940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t OpaqueTypeConformance2;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;

  v70 = a2;
  v3 = sub_2418A8DFC();
  v71 = *(_QWORD *)(v3 - 8);
  v72 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v69 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_2418A8B44();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60, v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417CA170();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417CA0C8(0);
  v16 = v15;
  v56 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C9FFC(0);
  v63 = v20;
  v59 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v21);
  v57 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C9EC8(0);
  v65 = v23;
  v62 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v24);
  v61 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C9D70(0);
  v66 = *(_QWORD *)(v26 - 8);
  v67 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v64 = (char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = a1;
  v73 = a1;
  sub_2417CA204(0);
  sub_24172159C(&qword_25714FD10, (uint64_t (*)(uint64_t))sub_2417CA204, MEMORY[0x24BDF5428]);
  sub_2418A9240();
  if (qword_25714B958 != -1)
    swift_once();
  v29 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v30 = sub_2418A7EFC();
  v32 = v31;
  swift_bridgeObjectRelease();

  v74 = v30;
  v75 = v32;
  v33 = sub_24172159C(&qword_25714FD18, (uint64_t (*)(uint64_t))sub_2417CA170, MEMORY[0x24BDF1A30]);
  v34 = sub_241721040();
  v35 = MEMORY[0x24BEE0D00];
  sub_2418A93A8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v36 = v58;
  v37 = v60;
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v8, *MEMORY[0x24BDEE5F0], v60);
  v74 = v10;
  v75 = v35;
  v76 = v33;
  v77 = v34;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v39 = v57;
  sub_2418A948C();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
  v40 = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v19, v16);
  MEMORY[0x24BDAC7A8](v40, v41);
  sub_2417CA9FC(0);
  v43 = v42;
  v74 = v16;
  v75 = OpaqueTypeConformance2;
  v44 = swift_getOpaqueTypeConformance2();
  v45 = sub_24172159C(&qword_25714FD50, (uint64_t (*)(uint64_t))sub_2417CA9FC, MEMORY[0x24BDEF170]);
  v46 = v61;
  v47 = v63;
  sub_2418A9528();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v47);
  v74 = v47;
  v75 = v43;
  v76 = v44;
  v77 = v45;
  v48 = swift_getOpaqueTypeConformance2();
  v50 = v64;
  v49 = v65;
  sub_2418A9474();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v46, v49);
  v51 = v69;
  sub_2418A8DF0();
  v74 = v49;
  v75 = v48;
  swift_getOpaqueTypeConformance2();
  v52 = v67;
  v53 = v72;
  sub_2418A9558();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v51, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v50, v52);
}

uint64_t sub_2417C5EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;

  v40 = a2;
  sub_24172570C(0, &qword_25714FCD8, (uint64_t (*)(uint64_t))sub_2417CA77C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v39 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v38 = (uint64_t *)((char *)&v38 - v8);
  sub_2417CA340(0, &qword_25714FC70, (uint64_t (*)(uint64_t))sub_2417CA3C0, &qword_25714FCD0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v38 - v11;
  sub_2417CA2A4();
  v14 = v13;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)&v38 - v20;
  *(_QWORD *)v12 = sub_2418A8B8C();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  sub_2417CADD4(0, &qword_25714FD60, sub_2417CA3C0);
  sub_2417C664C(a1, (uint64_t)&v12[*(int *)(v22 + 44)]);
  v23 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v24 = MEMORY[0x24269BDB4](v23);
  sub_24173F288((uint64_t)v12, (uint64_t)v18, (uint64_t)&qword_25714FC70, (uint64_t)sub_2417CA3C0, (uint64_t)&qword_25714FCD0, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_2417CA340);
  *(_QWORD *)&v18[*(int *)(v14 + 36)] = v24;
  sub_241784BA4((uint64_t)v12, (uint64_t)&qword_25714FC70, (uint64_t)sub_2417CA3C0, (uint64_t)&qword_25714FCD0, (uint64_t (*)(_QWORD))sub_2417CA340);
  sub_241731B4C((uint64_t)v18, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_2417CA2A4);
  v25 = a1 + *(int *)(type metadata accessor for MomentaryDatePickerFullView() + 28);
  v26 = *(_BYTE *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v41 = v26;
  v42 = v27;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  if (v43 == 1)
  {
    v28 = sub_2418A8B8C();
    v29 = (uint64_t)v38;
    *v38 = v28;
    *(_QWORD *)(v29 + 8) = 0;
    *(_BYTE *)(v29 + 16) = 1;
    sub_2417CADD4(0, &qword_25714FD68, sub_2417CA798);
    sub_2417C7298(a1, (_QWORD *)(v29 + *(int *)(v30 + 44)));
    sub_2417CA77C(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v29, 0, 1, v31);
  }
  else
  {
    sub_2417CA77C(0);
    v29 = (uint64_t)v38;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v38, 1, 1, v32);
  }
  sub_2417289A8((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_2417CA2A4);
  v33 = MEMORY[0x24BEE1C68];
  v34 = v39;
  sub_24173F288(v29, v39, (uint64_t)&qword_25714FCD8, (uint64_t)sub_2417CA77C, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_24172570C);
  v35 = v40;
  sub_2417289A8((uint64_t)v18, v40, (uint64_t (*)(_QWORD))sub_2417CA2A4);
  sub_2417CA220();
  sub_24173F288(v34, v35 + *(int *)(v36 + 48), (uint64_t)&qword_25714FCD8, (uint64_t)sub_2417CA77C, (uint64_t)v33, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_24172570C);
  sub_241784BA4(v29, (uint64_t)&qword_25714FCD8, (uint64_t)sub_2417CA77C, (uint64_t)v33, (uint64_t (*)(_QWORD))sub_24172570C);
  sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2417CA2A4);
  sub_241784BA4(v34, (uint64_t)&qword_25714FCD8, (uint64_t)sub_2417CA77C, (uint64_t)v33, (uint64_t (*)(_QWORD))sub_24172570C);
  return sub_24172588C((uint64_t)v18, (uint64_t (*)(_QWORD))sub_2417CA2A4);
}

uint64_t sub_2417C6270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v50 = a1;
  v61 = a2;
  sub_2417CAA18();
  v60 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v59 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417CAB48();
  v7 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  v58 = v7;
  MEMORY[0x24BDAC7A8](v6, v8);
  v54 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417CAAB4(0, &qword_25714FD30, v10, sub_2417CACEC);
  v55 = *(_QWORD *)(v11 - 8);
  v56 = v11;
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v52 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v53 = (char *)&v50 - v16;
  v17 = sub_2418A8DB4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_2417802C8();
  v20 = v19;
  v21 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417CAAB4(0, (unint64_t *)&qword_25714DF20, v25, sub_2417CAB2C);
  v51 = v26;
  v27 = *(_QWORD *)(v26 - 8);
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v31 = (char *)&v50 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v32);
  v34 = (char *)&v50 - v33;
  sub_2418A8D6C();
  v63 = a1;
  v35 = MEMORY[0x24BDF4398];
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v37 = v36;
  v38 = sub_2417A50FC((unint64_t *)&qword_25714C590, (unint64_t *)&qword_25714C580, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v35, MEMORY[0x24BDF43B0]);
  sub_2418A8580();
  v39 = sub_2417CAB2C();
  MEMORY[0x24269B628](v24, v20, v39);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  v40 = v51;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v34, v31, v51);
  sub_2418A8D78();
  v62 = v50;
  sub_2417CAC30(0);
  v64 = v37;
  v65 = v38;
  swift_getOpaqueTypeConformance2();
  v41 = v54;
  sub_2418A8580();
  v42 = sub_2417CACEC();
  v43 = v52;
  v44 = v57;
  MEMORY[0x24269B628](v41, v57, v42);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v44);
  v46 = v55;
  v45 = v56;
  v47 = v53;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v53, v43, v56);
  v48 = &v59[*(int *)(v60 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v59, v34, v40);
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v48, v47, v45);
  sub_2418A8C70();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v34, v40);
}

uint64_t sub_2417C664C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char v68;
  void (*v69)(char *, uint64_t);
  void *v70;
  char **v71;
  id v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v108 = a1;
  v3 = sub_2418A84E4();
  v111 = *(_QWORD *)(v3 - 8);
  v112 = v3;
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v110 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v109 = (uint64_t)&v87 - v8;
  v9 = sub_2418A8FDC();
  v101 = *(_QWORD *)(v9 - 8);
  v102 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v99 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2418A8910();
  v95 = *(_QWORD *)(v12 - 8);
  v96 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for MomentaryDatePickerFullView();
  v87 = *(_QWORD *)(v97 - 8);
  v16 = *(_QWORD *)(v87 + 64);
  MEMORY[0x24BDAC7A8](v97, v17);
  sub_2417CA604();
  v93 = v18;
  v92 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417CA5A0();
  v94 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417CA4C4(0);
  v104 = *(_QWORD *)(v26 - 8);
  v105 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v103 = (char *)&v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417CA448();
  v100 = v29;
  v31 = MEMORY[0x24BDAC7A8](v29, v30);
  v107 = (uint64_t)&v87 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v98 = (char *)&v87 - v35;
  MEMORY[0x24BDAC7A8](v34, v36);
  v106 = (uint64_t)&v87 - v37;
  if (qword_25714B958 != -1)
    swift_once();
  v38 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v39 = sub_2418A7EFC();
  v41 = v40;
  swift_bridgeObjectRelease();

  v113 = v39;
  v114 = v41;
  sub_241721040();
  v42 = sub_2418A92D0();
  v44 = v43;
  v46 = v45 & 1;
  LODWORD(v113) = sub_2418A8E68();
  v90 = sub_2418A9270();
  v89 = v47;
  v88 = v48;
  v91 = v49;
  sub_2417289EC(v42, v44, v46);
  swift_bridgeObjectRelease();
  sub_2417289A8(v108, (uint64_t)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for MomentaryDatePickerFullView);
  v50 = (*(unsigned __int8 *)(v87 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  v51 = swift_allocObject();
  v52 = sub_241731B4C((uint64_t)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v51 + v50, (uint64_t (*)(_QWORD))type metadata accessor for MomentaryDatePickerFullView);
  MEMORY[0x24BDAC7A8](v52, v53);
  sub_2417CA684();
  sub_241728434(&qword_25714FCB0, (uint64_t (*)(uint64_t))sub_2417CA684, (uint64_t (*)(void))sub_24174B7AC, (uint64_t (*)(void))sub_241728524);
  sub_2418A9708();
  sub_2418A88F8();
  KeyPath = swift_getKeyPath();
  v55 = (uint64_t *)&v25[*(int *)(v94 + 36)];
  sub_2417CA728(0);
  v58 = v95;
  v57 = v96;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))((char *)v55 + *(int *)(v56 + 28), v15, v96);
  *v55 = KeyPath;
  v59 = v92;
  v60 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v25, v21, v93);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v57);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v21, v60);
  v61 = v99;
  sub_2418A8FD0();
  sub_241728434(&qword_25714FCB8, (uint64_t (*)(uint64_t))sub_2417CA5A0, sub_2417CA744, sub_2417CA760);
  sub_24172159C((unint64_t *)&qword_25714FCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8], MEMORY[0x24BDF0D88]);
  v62 = v102;
  v63 = v103;
  sub_2418A930C();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v61, v62);
  sub_24172588C((uint64_t)v25, (uint64_t (*)(_QWORD))sub_2417CA5A0);
  v64 = v109;
  sub_241861034(v109);
  v66 = v110;
  v65 = v111;
  v67 = v112;
  (*(void (**)(char *, _QWORD, uint64_t))(v111 + 104))(v110, *MEMORY[0x24BDEB3F0], v112);
  v68 = sub_2418A84D8();
  v69 = *(void (**)(char *, uint64_t))(v65 + 8);
  v69(v66, v67);
  v69((char *)v64, v67);
  v70 = (void *)objc_opt_self();
  v71 = &selRef_tertiarySystemBackgroundColor;
  if ((v68 & 1) == 0)
    v71 = &selRef_secondarySystemBackgroundColor;
  v72 = objc_msgSend(v70, *v71);
  v73 = v88 & 1;
  v74 = MEMORY[0x24269BDB4](v72);
  v75 = swift_getKeyPath();
  v113 = v74;
  swift_retain();
  v76 = sub_2418A8628();
  v78 = v104;
  v77 = v105;
  v79 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v98, v63, v105);
  swift_release();
  v80 = (uint64_t *)(v79 + *(int *)(v100 + 36));
  *v80 = v75;
  v80[1] = v76;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v63, v77);
  v81 = v106;
  sub_241731B4C(v79, v106, (uint64_t (*)(_QWORD))sub_2417CA448);
  v82 = v107;
  sub_2417289A8(v81, v107, (uint64_t (*)(_QWORD))sub_2417CA448);
  v83 = v90;
  v84 = v89;
  *(_QWORD *)a2 = v90;
  *(_QWORD *)(a2 + 8) = v84;
  *(_BYTE *)(a2 + 16) = v73;
  *(_QWORD *)(a2 + 24) = v91;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  sub_2417CA3DC();
  sub_2417289A8(v82, a2 + *(int *)(v85 + 64), (uint64_t (*)(_QWORD))sub_2417CA448);
  sub_241728A50(v83, v84, v73);
  swift_bridgeObjectRetain();
  sub_24172588C(v81, (uint64_t (*)(_QWORD))sub_2417CA448);
  sub_24172588C(v82, (uint64_t (*)(_QWORD))sub_2417CA448);
  sub_2417289EC(v83, v84, v73);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2417C6DF8()
{
  sub_2418A99A8();
  sub_2418A8700();
  return swift_release();
}

uint64_t sub_2417C6E58()
{
  type metadata accessor for MomentaryDatePickerFullView();
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  swift_retain();
  sub_2418A96CC();
  sub_2418A96D8();
  return swift_release();
}

uint64_t sub_2417C6F20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;
  uint64_t result;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v53 = a2;
  v54 = a1;
  v2 = sub_2418A8034();
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_2418A7FF8();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48, v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2418A8004();
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2418A807C();
  v14 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (char *)&v43 - v21;
  MEMORY[0x24BDAC7A8](v20, v23);
  v25 = (char *)&v43 - v24;
  v49 = sub_2418A8100();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49, v26);
  v28 = (char *)&v43 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for MomentaryDatePickerFullView();
  sub_24172570C(0, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  v29 = sub_2418A96CC();
  MEMORY[0x24269A530](v29);
  sub_2418A7FEC();
  sub_2418A7FE0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v48);
  sub_2418A7FB0();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v45);
  v30 = *(void (**)(char *, uint64_t))(v14 + 8);
  v30(v18, v13);
  sub_2418A8028();
  sub_2418A8064();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v5, v52);
  v30(v22, v13);
  sub_24172159C(&qword_25714F118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
  sub_2418A80E8();
  v30(v25, v13);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v49);
  v55 = v57;
  v56 = v58;
  sub_241721040();
  v31 = sub_2418A92D0();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v38 = (char *)(v54 + *(int *)(v50 + 28));
  v39 = *v38;
  v40 = *((_QWORD *)v38 + 1);
  LOBYTE(v57) = v39;
  v58 = v40;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  if (v55 == 1)
    result = sub_2418A95DC();
  else
    result = sub_2418A9630();
  v42 = v53;
  *v53 = v31;
  v42[1] = v33;
  *((_BYTE *)v42 + 16) = v35 & 1;
  v42[3] = v37;
  *((_WORD *)v42 + 16) = 257;
  v42[5] = result;
  return result;
}

uint64_t sub_2417C7298@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  _QWORD v52[2];
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char v66;
  uint64_t v67;
  uint64_t v68;

  v65 = a2;
  v3 = sub_2418A8DCC();
  v4 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  v64 = v4;
  MEMORY[0x24BDAC7A8](v3, v5);
  v62 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A8D48();
  MEMORY[0x24BDAC7A8](v7, v8);
  v60 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C7F00();
  MEMORY[0x24BDAC7A8](v10, v11);
  v56 = (uint64_t)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24BDAC7A8](v14, v15);
  v54 = (char *)v52 - v16;
  sub_24172835C(0, &qword_25714EDC0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDEB018]);
  v18 = v17;
  v55 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)v52 - v20;
  sub_2417CA940(0);
  v58 = v22;
  v61 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v23);
  v53 = (char *)v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417CA81C(0);
  v26 = v25;
  v59 = *(_QWORD *)(v25 - 8);
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v30 = (char *)v52 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v31);
  v57 = (char *)v52 - v32;
  sub_2418A8BC8();
  v52[1] = v33;
  type metadata accessor for MomentaryDatePickerFullView();
  sub_24172570C(0, qword_25714ECD8, v13, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  sub_2417289A8(a1, v56, (uint64_t (*)(_QWORD))sub_2417C7F00);
  sub_2418A8D3C();
  sub_2418A849C();
  v34 = sub_2417A50FC((unint64_t *)&qword_25714EDC8, &qword_25714EDC0, MEMORY[0x24BDEB018], MEMORY[0x24BDEB028]);
  v35 = v53;
  sub_2418A9348();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v18);
  v36 = v62;
  sub_2418A8DC0();
  v67 = v18;
  v68 = v34;
  swift_getOpaqueTypeConformance2();
  sub_24172159C(&qword_25714EDD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF760], MEMORY[0x24BDEF750]);
  v37 = v58;
  v38 = v63;
  sub_2418A9384();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v38);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v37);
  v39 = v59;
  v40 = v57;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v57, v30, v26);
  LOBYTE(v67) = 1;
  v41 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v42 = v39;
  v41(v30, v40, v26);
  v66 = 1;
  v43 = v67;
  v44 = v65;
  *v65 = 0;
  *((_BYTE *)v44 + 8) = v43;
  v45 = (char *)v44;
  sub_2417CA7B4();
  v47 = v46;
  v41(&v45[*(int *)(v46 + 48)], v30, v26);
  v48 = &v45[*(int *)(v47 + 64)];
  v49 = v66;
  *(_QWORD *)v48 = 0;
  v48[8] = v49;
  v50 = *(void (**)(char *, uint64_t))(v42 + 8);
  v50(v40, v26);
  return ((uint64_t (*)(char *, uint64_t))v50)(v30, v26);
}

uint64_t sub_2417C76F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v2 = type metadata accessor for MomentaryDatePickerFullView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  if (qword_25714B958 != -1)
    swift_once();
  v6 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v7 = sub_2418A7EFC();
  v9 = v8;
  swift_bridgeObjectRelease();

  v13[0] = v7;
  v13[1] = v9;
  sub_2417289A8(a1, (uint64_t)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for MomentaryDatePickerFullView);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  sub_241731B4C((uint64_t)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for MomentaryDatePickerFullView);
  sub_241721040();
  return sub_2418A9714();
}

uint64_t sub_2417C7888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_2418A8658();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MomentaryDatePickerFullView();
  sub_2418612BC((uint64_t)v4);
  sub_2418A864C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_2417C7920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19[4];

  v19[0] = a1;
  v19[1] = a2;
  v2 = type metadata accessor for MomentaryDatePickerFullView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v19 - v10;
  if (qword_25714B958 != -1)
    swift_once();
  v12 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v13 = sub_2418A7EFC();
  v15 = v14;
  swift_bridgeObjectRelease();

  v19[2] = v13;
  v19[3] = v15;
  sub_2417289A8(v19[0], (uint64_t)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for MomentaryDatePickerFullView);
  v16 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v17 = swift_allocObject();
  sub_241731B4C((uint64_t)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(_QWORD))type metadata accessor for MomentaryDatePickerFullView);
  sub_241721040();
  sub_2418A9714();
  sub_2417A50FC((unint64_t *)&qword_25714C590, (unint64_t *)&qword_25714C580, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398], MEMORY[0x24BDF43B0]);
  sub_2418A9498();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_2417C7B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;

  v16 = sub_2418A8658();
  v0 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2418A8100();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v6 = *(_QWORD *)(v4 - 8);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v15 - v12;
  type metadata accessor for MomentaryDatePickerFullView();
  sub_24172570C(0, qword_25714ECD8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v13, v4);
  sub_24172570C(0, qword_25714EE48, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  sub_2418A9810();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v4);
  sub_2418612BC((uint64_t)v3);
  sub_2418A864C();
  return (*(uint64_t (**)(char *, uint64_t))(v0 + 8))(v3, v16);
}

uint64_t sub_2417C7CD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v36 = a1;
  sub_2417C9A14();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v1;
  sub_2417C9BD4(0);
  v35 = v8;
  sub_2417C9D70(255);
  v34 = v9;
  v10 = sub_2418A8DFC();
  sub_2417C9EC8(255);
  v12 = v11;
  sub_2417C9FFC(255);
  v14 = v13;
  sub_2417CA9FC(255);
  v16 = v15;
  sub_2417CA0C8(255);
  v18 = v17;
  sub_2417CA170();
  v20 = v19;
  v21 = sub_24172159C(&qword_25714FD18, (uint64_t (*)(uint64_t))sub_2417CA170, MEMORY[0x24BDF1A30]);
  v22 = sub_241721040();
  v38 = v20;
  v39 = MEMORY[0x24BEE0D00];
  v40 = v21;
  v41 = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v38 = v18;
  v39 = OpaqueTypeConformance2;
  v24 = swift_getOpaqueTypeConformance2();
  v25 = sub_24172159C(&qword_25714FD50, (uint64_t (*)(uint64_t))sub_2417CA9FC, MEMORY[0x24BDEF170]);
  v38 = v14;
  v39 = v16;
  v40 = v24;
  v41 = v25;
  v26 = swift_getOpaqueTypeConformance2();
  v38 = v12;
  v39 = v26;
  v27 = swift_getOpaqueTypeConformance2();
  v38 = v34;
  v39 = v10;
  v40 = v27;
  v41 = MEMORY[0x24BDEF958];
  swift_getOpaqueTypeConformance2();
  sub_2418A8814();
  KeyPath = swift_getKeyPath();
  v29 = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v36, v7, v3);
  sub_2417CAD18();
  v31 = (uint64_t *)(v29 + *(int *)(v30 + 36));
  *v31 = KeyPath;
  v31[1] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void sub_2417C7F00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714FB68)
  {
    sub_2418A8100();
    sub_24172159C((unint64_t *)&qword_25714FB70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v0 = sub_2418A9D8C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714FB68);
  }
}

uint64_t *sub_2417C7F78(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2418A8100();
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v9(a1, a2, v7);
    sub_2417C7F00();
    v9((uint64_t *)((char *)a1 + *(int *)(v10 + 36)), (uint64_t *)((char *)a2 + *(int *)(v10 + 36)), v7);
    v11 = a3[5];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (char *)a2 + v11;
    v14 = *(uint64_t *)((char *)a2 + v11 + 8);
    *v12 = *(uint64_t *)((char *)a2 + v11);
    v12[1] = v14;
    sub_24172570C(0, qword_25714EE48, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v16 = *(int *)(v15 + 32);
    v17 = (char *)v12 + v16;
    v18 = &v13[v16];
    swift_retain();
    swift_retain();
    v9((uint64_t *)v17, (uint64_t *)v18, v7);
    v19 = a3[6];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v9((uint64_t *)((char *)a1 + v19), (uint64_t *)((char *)a2 + v19), v7);
    sub_24172570C(0, qword_25714ECD8, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    *(_QWORD *)&v20[*(int *)(v22 + 28)] = *(_QWORD *)&v21[*(int *)(v22 + 28)];
    v23 = a3[7];
    v24 = a3[8];
    v25 = (char *)a1 + v23;
    v26 = (char *)a2 + v23;
    *v25 = *v26;
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    v27 = (uint64_t *)((char *)a1 + v24);
    v28 = (uint64_t *)((char *)a2 + v24);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v31 = a3[9];
    v32 = (uint64_t *)((char *)a1 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v34 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      *v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v35 = a3[10];
    v36 = (uint64_t *)((char *)a1 + v35);
    v37 = (uint64_t *)((char *)a2 + v35);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v38 = sub_2418A8EB0();
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v39 + 16))(v36, v37, v38);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      v41 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v42 = (char *)v36 + v41;
      v43 = (char *)v37 + v41;
      v44 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
    }
    else
    {
      *v36 = *v37;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2417C8344(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_2418A8100();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  sub_2417C7F00();
  v6(a1 + *(int *)(v7 + 36), v4);
  v8 = a1 + a2[5];
  swift_release();
  swift_release();
  sub_24172570C(0, qword_25714EE48, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v6(v8 + *(int *)(v9 + 32), v4);
  v6(a1 + a2[6], v4);
  sub_24172570C(0, qword_25714ECD8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  swift_release();
  swift_release();
  v10 = a1 + a2[8];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  v12 = a1 + a2[9];
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  v14 = a1 + a2[10];
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v15 = sub_2418A8EB0();
  v16 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  v17 = v14 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
  v18 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t sub_2417C85C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v6 = sub_2418A8100();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v8(a1, a2, v6);
  sub_2417C7F00();
  v8(a1 + *(int *)(v9 + 36), a2 + *(int *)(v9 + 36), v6);
  v10 = a3[5];
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a2 + v10 + 8);
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = v13;
  sub_24172570C(0, qword_25714EE48, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v15 = *(int *)(v14 + 32);
  v16 = (char *)v11 + v15;
  v17 = v12 + v15;
  swift_retain();
  swift_retain();
  v8((uint64_t)v16, v17, v6);
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v8(a1 + v18, a2 + v18, v6);
  sub_24172570C(0, qword_25714ECD8, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v19 + *(int *)(v21 + 28)) = *(_QWORD *)(v20 + *(int *)(v21 + 28));
  v22 = a3[7];
  v23 = a3[8];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  v26 = (_QWORD *)(a1 + v23);
  v27 = (_QWORD *)(a2 + v23);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else
  {
    *v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v29 = a3[9];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v32 = sub_2418A8658();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  }
  else
  {
    *v30 = *v31;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v33 = a3[10];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v36 = sub_2418A8EB0();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    v39 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v40 = (char *)v34 + v39;
    v41 = (char *)v35 + v39;
    v42 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  }
  else
  {
    *v34 = *v35;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2417C8960(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v6 = sub_2418A8100();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v8(a1, a2, v6);
  sub_2417C7F00();
  v8(a1 + *(int *)(v9 + 36), a2 + *(int *)(v9 + 36), v6);
  v10 = a3[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_retain();
  swift_release();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_retain();
  swift_release();
  sub_24172570C(0, qword_25714EE48, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v8(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v6);
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v8(a1 + v14, a2 + v14, v6);
  sub_24172570C(0, qword_25714ECD8, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v15 + *(int *)(v17 + 28)) = *(_QWORD *)(v16 + *(int *)(v17 + 28));
  swift_retain();
  swift_release();
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v21 = a3[8];
    v22 = (_QWORD *)(a1 + v21);
    v23 = (_QWORD *)(a2 + v21);
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4(a1 + v21, (uint64_t)&unk_257154F20, (uint64_t)MEMORY[0x24BDEB418], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v24, v25);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v22, v23, v26);
    }
    else
    {
      *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v27 = a3[9];
    v28 = (_QWORD *)(a1 + v27);
    v29 = (_QWORD *)(a2 + v27);
    v30 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038];
    sub_241784BA4(a1 + v27, (uint64_t)&qword_25714C2E0, (uint64_t)MEMORY[0x24BDEC038], (uint64_t)v25, (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714C2E0, v30, v25);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
    }
    else
    {
      *v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v32 = a3[10];
    v33 = (_QWORD *)(a1 + v32);
    v34 = (_QWORD *)(a2 + v32);
    v35 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4(a1 + v32, (uint64_t)&qword_25714F150, (uint64_t)type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v35);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v36 = sub_2418A8EB0();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v37 + 16))(v33, v34, v36);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
      }
      v39 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v40 = (char *)v33 + v39;
      v41 = (char *)v34 + v39;
      v42 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
    }
    else
    {
      *v33 = *v34;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2417C8D9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v6 = sub_2418A8100();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v8(a1, a2, v6);
  sub_2417C7F00();
  v8(a1 + *(int *)(v9 + 36), a2 + *(int *)(v9 + 36), v6);
  v10 = a3[5];
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a2 + v10 + 8);
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = v13;
  sub_24172570C(0, qword_25714EE48, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v8((uint64_t)v11 + *(int *)(v14 + 32), v12 + *(int *)(v14 + 32), v6);
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v8(a1 + v15, a2 + v15, v6);
  sub_24172570C(0, qword_25714ECD8, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v16 + *(int *)(v18 + 28)) = *(_QWORD *)(v17 + *(int *)(v18 + 28));
  v19 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v25 = a3[9];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v29 = v28;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = sub_2418A8658();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v26, v27, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  v31 = a3[10];
  v32 = (char *)(a1 + v31);
  v33 = (char *)(a2 + v31);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v35 = v34;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v36 = sub_2418A8EB0();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v33, 1, v36))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v32, v33, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v32, 0, 1, v36);
    }
    v39 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v40 = &v32[v39];
    v41 = &v33[v39];
    v42 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2417C90F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;

  v6 = sub_2418A8100();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v8(a1, a2, v6);
  sub_2417C7F00();
  v8(a1 + *(int *)(v9 + 36), a2 + *(int *)(v9 + 36), v6);
  v10 = a3[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_release();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_release();
  sub_24172570C(0, qword_25714EE48, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v8(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v6);
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v8(a1 + v14, a2 + v14, v6);
  sub_24172570C(0, qword_25714ECD8, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v15 + *(int *)(v17 + 28)) = *(_QWORD *)(v16 + *(int *)(v17 + 28));
  swift_release();
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  swift_release();
  if (a1 != a2)
  {
    v21 = a3[8];
    v22 = (void *)(a1 + v21);
    v23 = (const void *)(a2 + v21);
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4(a1 + v21, (uint64_t)&unk_257154F20, (uint64_t)MEMORY[0x24BDEB418], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v24, v25);
    v27 = v26;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v22, v23, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    v29 = a3[9];
    v30 = (void *)(a1 + v29);
    v31 = (const void *)(a2 + v29);
    v32 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038];
    sub_241784BA4(a1 + v29, (uint64_t)&qword_25714C2E0, (uint64_t)MEMORY[0x24BDEC038], (uint64_t)v25, (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714C2E0, v32, v25);
    v34 = v33;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v35 = sub_2418A8658();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v30, v31, v35);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    v36 = a3[10];
    v37 = (char *)(a1 + v36);
    v38 = (char *)(a2 + v36);
    v39 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4(a1 + v36, (uint64_t)&qword_25714F150, (uint64_t)type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v39);
    v41 = v40;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v42 = sub_2418A8EB0();
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v37, v38, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
      }
      v45 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v46 = &v37[v45];
      v47 = &v38[v45];
      v48 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417C9508()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417C9514(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_2417C7F00();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  sub_24172570C(0, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  v10 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v13;
    v12 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    v10 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v16;
      v12 = a3[8];
    }
    else
    {
      sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
      v10 = *(_QWORD *)(v17 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        v11 = v17;
        v12 = a3[9];
      }
      else
      {
        sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
        v11 = v18;
        v10 = *(_QWORD *)(v18 - 8);
        v12 = a3[10];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v14 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_2417C96D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2417C96E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_2417C7F00();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_24172570C(0, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        if (a3 == 2147483646)
        {
          *(_QWORD *)(a1 + a4[7] + 8) = a2;
          return;
        }
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[9];
          }
          else
          {
            sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[10];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  v11(v12, a2, a2, v10);
}

void sub_2417C9890()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_2417C7F00();
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
      if (v2 <= 0x3F)
      {
        sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
        if (v3 <= 0x3F)
        {
          sub_24172570C(319, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
          if (v4 <= 0x3F)
          {
            sub_24172570C(319, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t sub_2417C9A04()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2417C9A14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714FC20)
  {
    sub_2418A8754();
    sub_2417C9BD4(255);
    sub_2417C9D70(255);
    sub_2418A8DFC();
    sub_2417C9EC8(255);
    sub_2417C9FFC(255);
    sub_2417CA9FC(255);
    sub_2417CA0C8(255);
    sub_2417CA170();
    sub_24172159C(&qword_25714FD18, (uint64_t (*)(uint64_t))sub_2417CA170, MEMORY[0x24BDF1A30]);
    sub_241721040();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_24172159C(&qword_25714FD50, (uint64_t (*)(uint64_t))sub_2417CA9FC, MEMORY[0x24BDEF170]);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    v0 = sub_2418A8820();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714FC20);
  }
}

void sub_2417C9BD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_25714FC28)
  {
    sub_2417C9D70(255);
    v3 = v2;
    v4 = sub_2418A8DFC();
    sub_2417C9EC8(255);
    sub_2417C9FFC(255);
    sub_2417CA9FC(255);
    sub_2417CA0C8(255);
    sub_2417CA170();
    sub_24172159C(&qword_25714FD18, (uint64_t (*)(uint64_t))sub_2417CA170, MEMORY[0x24BDF1A30]);
    sub_241721040();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_24172159C(&qword_25714FD50, (uint64_t (*)(uint64_t))sub_2417CA9FC, MEMORY[0x24BDEF170]);
    swift_getOpaqueTypeConformance2();
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = swift_getOpaqueTypeConformance2();
    v7[3] = MEMORY[0x24BDEF958];
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF3A80], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714FC28);
  }
}

void sub_2417C9D70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_25714FC30)
  {
    sub_2417C9EC8(255);
    v3 = v2;
    sub_2417C9FFC(255);
    sub_2417CA9FC(255);
    sub_2417CA0C8(255);
    sub_2417CA170();
    sub_24172159C(&qword_25714FD18, (uint64_t (*)(uint64_t))sub_2417CA170, MEMORY[0x24BDF1A30]);
    sub_241721040();
    swift_getOpaqueTypeConformance2();
    v6[2] = swift_getOpaqueTypeConformance2();
    v6[3] = sub_24172159C(&qword_25714FD50, (uint64_t (*)(uint64_t))sub_2417CA9FC, MEMORY[0x24BDEF170]);
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF32F0], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714FC30);
  }
}

void sub_2417C9EC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_25714FC38)
  {
    sub_2417C9FFC(255);
    v3 = v2;
    sub_2417CA9FC(255);
    v5 = v4;
    sub_2417CA0C8(255);
    sub_2417CA170();
    sub_24172159C(&qword_25714FD18, (uint64_t (*)(uint64_t))sub_2417CA170, MEMORY[0x24BDF1A30]);
    sub_241721040();
    swift_getOpaqueTypeConformance2();
    v8[0] = v3;
    v8[1] = v5;
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = sub_24172159C(&qword_25714FD50, (uint64_t (*)(uint64_t))sub_2417CA9FC, MEMORY[0x24BDEF170]);
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF3858], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_25714FC38);
  }
}

void sub_2417C9FFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_25714FC40)
  {
    sub_2417CA0C8(255);
    v3 = v2;
    sub_2417CA170();
    v6[2] = sub_24172159C(&qword_25714FD18, (uint64_t (*)(uint64_t))sub_2417CA170, MEMORY[0x24BDF1A30]);
    v6[3] = sub_241721040();
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF33A8], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714FC40);
  }
}

void sub_2417CA0C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_25714FC48)
  {
    sub_2417CA170();
    v3 = v2;
    v4 = sub_24172159C(&qword_25714FD18, (uint64_t (*)(uint64_t))sub_2417CA170, MEMORY[0x24BDF1A30]);
    v5 = sub_241721040();
    v8[0] = v3;
    v8[1] = MEMORY[0x24BEE0D00];
    v8[2] = v4;
    v8[3] = v5;
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF28C0], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_25714FC48);
  }
}

void sub_2417CA170()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714FC50)
  {
    sub_2417CA204(255);
    sub_24172159C(&qword_25714FD10, (uint64_t (*)(uint64_t))sub_2417CA204, MEMORY[0x24BDF5428]);
    v0 = sub_2418A924C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714FC50);
  }
}

void sub_2417CA204(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714FC58, (uint64_t (*)(uint64_t))sub_2417CA220, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417CA220()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714FC60)
  {
    sub_2417CA2A4();
    sub_24172570C(255, &qword_25714FCD8, (uint64_t (*)(uint64_t))sub_2417CA77C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714FC60);
  }
}

void sub_2417CA2A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714FC68)
  {
    sub_2417CA340(255, &qword_25714FC70, (uint64_t (*)(uint64_t))sub_2417CA3C0, &qword_25714FCD0);
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714FC68);
  }
}

void sub_2417CA340(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_24172159C(a4, a3, MEMORY[0x24BDF5428]);
    v7 = sub_2418A972C();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_2417CA3C0(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714FC78, (uint64_t (*)(uint64_t))sub_2417CA3DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417CA3DC()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714FC80)
  {
    sub_2417CA448();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714FC80);
  }
}

void sub_2417CA448()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714FC88)
  {
    sub_2417CA4C4(255);
    sub_2417B7FC0(255, (unint64_t *)&qword_25714D398, &qword_25714D3A0, MEMORY[0x24BDEBF80]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714FC88);
  }
}

void sub_2417CA4C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_25714FC90)
  {
    sub_2417CA5A0();
    v3 = v2;
    v4 = sub_2418A8FDC();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8];
    v8[0] = v3;
    v8[1] = v4;
    v8[2] = sub_241728434(&qword_25714FCB8, (uint64_t (*)(uint64_t))sub_2417CA5A0, sub_2417CA744, sub_2417CA760);
    v8[3] = sub_24172159C((unint64_t *)&qword_25714FCC8, v5, MEMORY[0x24BDF0D88]);
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF22B8], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_25714FC90);
  }
}

void sub_2417CA5A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714FC98)
  {
    sub_2417CA604();
    sub_2417CA728(255);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714FC98);
  }
}

void sub_2417CA604()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714FCA0)
  {
    sub_2417CA684();
    sub_241728434(&qword_25714FCB0, (uint64_t (*)(uint64_t))sub_2417CA684, (uint64_t (*)(void))sub_24174B7AC, (uint64_t (*)(void))sub_241728524);
    v0 = sub_2418A9720();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714FCA0);
  }
}

void sub_2417CA684()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714FCA8)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714CD98, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEDBA0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714FCA8);
  }
}

void sub_2417CA728(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714FA90, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDCA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
}

uint64_t sub_2417CA744()
{
  return sub_24172159C(&qword_25714FCC0, (uint64_t (*)(uint64_t))sub_2417CA604, MEMORY[0x24BDF43B0]);
}

uint64_t sub_2417CA760()
{
  return sub_24172159C(&qword_25714FB08, (uint64_t (*)(uint64_t))sub_2417CA728, MEMORY[0x24BDF1028]);
}

void sub_2417CA77C(uint64_t a1)
{
  sub_2417CA340(a1, &qword_25714FCE0, (uint64_t (*)(uint64_t))sub_2417CA798, &qword_25714FD08);
}

void sub_2417CA798(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714FCE8, (uint64_t (*)(uint64_t))sub_2417CA7B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417CA7B4()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714FCF0)
  {
    sub_2417CA81C(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714FCF0);
  }
}

void sub_2417CA81C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_25714FCF8)
  {
    sub_2417CA940(255);
    v3 = v2;
    v4 = sub_2418A8DCC();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF760];
    v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEB018];
    sub_24172835C(255, &qword_25714EDC0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDEB018]);
    sub_2417A50FC((unint64_t *)&qword_25714EDC8, &qword_25714EDC0, v6, MEMORY[0x24BDEB028]);
    v9[0] = v3;
    v9[1] = v4;
    v9[2] = swift_getOpaqueTypeConformance2();
    v9[3] = sub_24172159C(&qword_25714EDD0, v5, MEMORY[0x24BDEF750]);
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF27D8], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_25714FCF8);
  }
}

void sub_2417CA940(uint64_t a1)
{
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!qword_25714FD00)
  {
    v2 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEB018];
    sub_24172835C(255, &qword_25714EDC0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDEB018]);
    v6[0] = v3;
    v6[1] = sub_2417A50FC((unint64_t *)&qword_25714EDC8, &qword_25714EDC0, v2, MEMORY[0x24BDEB028]);
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF2528], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714FD00);
  }
}

void sub_2417CA9FC(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714FD20, (uint64_t (*)(uint64_t))sub_2417CAA18, MEMORY[0x24BDEF158]);
}

void sub_2417CAA18()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714FD28)
  {
    sub_2417CAAB4(255, (unint64_t *)&qword_25714DF20, (uint64_t (*)(uint64_t))sub_2417802C8, sub_2417CAB2C);
    sub_2417CAAB4(255, &qword_25714FD30, (uint64_t (*)(uint64_t))sub_2417CAB48, sub_2417CACEC);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714FD28);
  }
}

void sub_2417CAAB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  if (!*a2)
  {
    v9[0] = a3(255);
    v9[1] = a4();
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDEFA90], 0);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2417CAB2C()
{
  return sub_24172159C(&qword_25714DF30, (uint64_t (*)(uint64_t))sub_2417802C8, MEMORY[0x24BDEB848]);
}

void sub_2417CAB48()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25714FD38)
  {
    sub_2417CAC30(255);
    v0 = MEMORY[0x24BDF4398];
    sub_24172835C(255, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    sub_2417A50FC((unint64_t *)&qword_25714C590, (unint64_t *)&qword_25714C580, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v0, MEMORY[0x24BDF43B0]);
    swift_getOpaqueTypeConformance2();
    v1 = sub_2418A858C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25714FD38);
  }
}

void sub_2417CAC30(uint64_t a1)
{
  uint64_t (*v2)(void);
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!qword_25714FD40)
  {
    v2 = MEMORY[0x24BDF4398];
    sub_24172835C(255, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    v6[0] = v3;
    v6[1] = sub_2417A50FC((unint64_t *)&qword_25714C590, (unint64_t *)&qword_25714C580, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v2, MEMORY[0x24BDF43B0]);
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF3488], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714FD40);
  }
}

uint64_t sub_2417CACEC()
{
  return sub_24172159C(&qword_25714FD48, (uint64_t (*)(uint64_t))sub_2417CAB48, MEMORY[0x24BDEB848]);
}

uint64_t sub_2417CAD08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417C5940(*(_QWORD *)(v1 + 16), a1);
}

void sub_2417CAD18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714FD58)
  {
    sub_2417C9A14();
    sub_2417B7FC0(255, (unint64_t *)&qword_25714C9D0, (unint64_t *)&qword_25714C9D8, MEMORY[0x24BDF3E48]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714FD58);
  }
}

uint64_t sub_2417CAD94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417C5EA0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2417CAD9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417C6270(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2417CADA4()
{
  uint64_t v0;

  return sub_2417C76F8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2417CADAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417C7920(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2417CADB8()
{
  return sub_2417CB0EC((uint64_t (*)(uint64_t))sub_2417C7B48);
}

uint64_t sub_2417CADC8()
{
  return sub_2417CB0EC((uint64_t (*)(uint64_t))sub_2417C7888);
}

void sub_2417CADD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2418A86E8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for MomentaryDatePickerFullView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_2418A8100();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(v3, v4);
  sub_2417C7F00();
  v6(v3 + *(int *)(v7 + 36), v4);
  v8 = v3 + v1[5];
  swift_release();
  swift_release();
  sub_24172570C(0, qword_25714EE48, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v6(v8 + *(int *)(v9 + 32), v4);
  v6(v3 + v1[6], v4);
  sub_24172570C(0, qword_25714ECD8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  swift_release();
  swift_release();
  v10 = v3 + v1[8];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  v12 = v3 + v1[9];
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  v14 = v3 + v1[10];
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2418A8EB0();
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = v14 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v18 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2417CB0E0()
{
  return sub_2417CB0EC((uint64_t (*)(uint64_t))sub_2417C6DF8);
}

uint64_t sub_2417CB0EC(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MomentaryDatePickerFullView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_2417CB128@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2417C6F20(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2417CB140()
{
  return sub_2417C6E58();
}

uint64_t sub_2417CB158()
{
  return sub_241728434(&qword_25714FD70, (uint64_t (*)(uint64_t))sub_2417CAD18, sub_2417CB18C, (uint64_t (*)(void))sub_241741D94);
}

uint64_t sub_2417CB18C()
{
  return sub_24172159C(&qword_25714FD78, (uint64_t (*)(uint64_t))sub_2417C9A14, MEMORY[0x24BDED358]);
}

uint64_t NotificationSOMSettingsView.init(settingsModel:navigationTitleText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)a4 = sub_2417B8664;
  *(_QWORD *)(a4 + 8) = result;
  *(_BYTE *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = a3;
  return result;
}

uint64_t sub_2417CB208()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t NotificationSOMSettingsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[24];

  v24 = a1;
  v2 = sub_2418A8DFC();
  v22 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417CB458();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417CB57C(0);
  v13 = v12;
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v1[1];
  v31 = *v1;
  *(_OWORD *)v32 = v17;
  *(_QWORD *)&v32[16] = *((_QWORD *)v1 + 4);
  v25 = &v31;
  sub_24172570C(0, &qword_25714F618, (uint64_t (*)(uint64_t))sub_2417B89E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2417CB4EC();
  sub_2418A9240();
  sub_2418A8DF0();
  v18 = sub_24172159C(&qword_25714FDA0, (uint64_t (*)(uint64_t))sub_2417CB458, MEMORY[0x24BDF1A30]);
  v19 = MEMORY[0x24BDEF958];
  sub_2418A9558();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v30 = *(_OWORD *)&v32[8];
  v26 = v7;
  v27 = v2;
  v28 = v18;
  v29 = v19;
  swift_getOpaqueTypeConformance2();
  sub_241721040();
  sub_2418A93A8();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v16, v13);
}

void sub_2417CB458()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714FD80)
  {
    sub_24172570C(255, &qword_25714F618, (uint64_t (*)(uint64_t))sub_2417B89E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2417CB4EC();
    v0 = sub_2418A924C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714FD80);
  }
}

unint64_t sub_2417CB4EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_25714FD88;
  if (!qword_25714FD88)
  {
    sub_24172570C(255, &qword_25714F618, (uint64_t (*)(uint64_t))sub_2417B89E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v2 = v1;
    v3 = sub_24172159C(&qword_25714FD90, (uint64_t (*)(uint64_t))sub_2417B89E4, MEMORY[0x24BDF5428]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5578], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_25714FD88);
  }
  return result;
}

void sub_2417CB57C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_25714FD98)
  {
    sub_2417CB458();
    v5[0] = v2;
    v5[1] = sub_2418A8DFC();
    v5[2] = sub_24172159C(&qword_25714FDA0, (uint64_t (*)(uint64_t))sub_2417CB458, MEMORY[0x24BDF1A30]);
    v5[3] = MEMORY[0x24BDEF958];
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF3A80], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714FD98);
  }
}

id sub_2417CB62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id result;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  Swift::Bool v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[128];
  __int128 v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend(result, sel_isiPad);

    if ((v6 & 1) != 0)
    {
      sub_2417B95A4(&v13);
    }
    else
    {
      sub_2417CBB58(a1);
      type metadata accessor for NotificationSettingsModel();
      sub_24172159C((unint64_t *)&qword_25714D020, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsModel, (uint64_t)&protocol conformance descriptor for NotificationSettingsModel);
      sub_2418A8550();
      sub_2417CBB94(a1);
      sub_2417EB188((uint64_t)&v24);
      sub_2417CBB58(a1);
      v7 = (void *)sub_2418A8550();
      sub_2417CBB94(a1);
      v8 = NotificationSettingsModel.shouldShowMindfulnessSettingsButton()();

      v9 = 0;
      v10 = 0;
      if (v8)
      {
        if (qword_25714B958 != -1)
          swift_once();
        v11 = (id)qword_25715E110;
        swift_bridgeObjectRetain();
        v9 = sub_2418A7EFC();
        v10 = v12;
        swift_bridgeObjectRelease();

      }
      v13 = v24;
      v14 = v25 & 1;
      v15 = v26;
      v16 = v27;
      v17 = v28;
      v18 = v29;
      v19 = v30;
      v20 = v31;
      v21 = v9;
      v22 = v10;
      nullsub_1(&v13);
    }
    sub_2417B93D4((uint64_t)&v13, (uint64_t)v23);
    return (id)sub_2417B93D4((uint64_t)v23, a2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2417CB87C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417CB62C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2417CB884()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for NotificationSOMSettingsView(uint64_t a1)
{
  sub_241784C24(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotificationSOMSettingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_2417B8F4C(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NotificationSOMSettingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;

  v4 = *(_QWORD *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_2417B8F4C(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_241784C24(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NotificationSOMSettingsView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(void **)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_241784C24(v5, v6, v7);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationSOMSettingsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationSOMSettingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSOMSettingsView()
{
  return &type metadata for NotificationSOMSettingsView;
}

uint64_t sub_2417CBA9C()
{
  sub_2417CB57C(255);
  sub_2417CB458();
  sub_2418A8DFC();
  sub_24172159C(&qword_25714FDA0, (uint64_t (*)(uint64_t))sub_2417CB458, MEMORY[0x24BDF1A30]);
  swift_getOpaqueTypeConformance2();
  sub_241721040();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417CBB58(uint64_t a1)
{
  sub_2417B8F4C(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2417CBB94(uint64_t a1)
{
  sub_241784C24(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return a1;
}

void sub_2417CBBD0(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2417CBBD8()
{
  sub_2417CBE84();
  return sub_2418A870C();
}

BOOL static StateOfMindTimelinePresentationContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StateOfMindTimelinePresentationContext.hash(into:)()
{
  return sub_2418AA578();
}

uint64_t StateOfMindTimelinePresentationContext.hashValue.getter()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

uint64_t EnvironmentValues.stateOfMindTimelinePresentationContext.getter()
{
  sub_2417CBCE0();
  return sub_2418A8B2C();
}

unint64_t sub_2417CBCE0()
{
  unint64_t result;

  result = qword_25714FDA8;
  if (!qword_25714FDA8)
  {
    result = MEMORY[0x24269D47C](&unk_2418D5CCC, &type metadata for StateOfMindTimelinePresentationContextKey);
    atomic_store(result, (unint64_t *)&qword_25714FDA8);
  }
  return result;
}

uint64_t sub_2417CBD24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2417CBCE0();
  result = sub_2418A8B2C();
  *a1 = v3;
  return result;
}

uint64_t sub_2417CBD70()
{
  sub_2417CBCE0();
  return sub_2418A8B38();
}

uint64_t EnvironmentValues.stateOfMindTimelinePresentationContext.setter()
{
  sub_2417CBCE0();
  return sub_2418A8B38();
}

uint64_t (*EnvironmentValues.stateOfMindTimelinePresentationContext.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = sub_2417CBCE0();
  sub_2418A8B2C();
  return sub_2417CBE4C;
}

uint64_t sub_2417CBE4C(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_2418A8B38();
}

unint64_t sub_2417CBE84()
{
  unint64_t result;

  result = qword_25714FDB0;
  if (!qword_25714FDB0)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindTimelinePresentationContext, &type metadata for StateOfMindTimelinePresentationContext);
    atomic_store(result, (unint64_t *)&qword_25714FDB0);
  }
  return result;
}

uint64_t sub_2417CBEC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2417CBCE0();
  result = sub_2418A8B2C();
  *a1 = v3;
  return result;
}

uint64_t sub_2417CBF14()
{
  sub_2417CBCE0();
  return sub_2418A8B38();
}

uint64_t storeEnumTagSinglePayload for StateOfMindTimelinePresentationContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2417CBFA8 + 4 * byte_2418D5BF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2417CBFDC + 4 * asc_2418D5BF0[v4]))();
}

uint64_t sub_2417CBFDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2417CBFE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2417CBFECLL);
  return result;
}

uint64_t sub_2417CBFF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2417CC000);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2417CC004(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2417CC00C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindTimelinePresentationContext()
{
  return &type metadata for StateOfMindTimelinePresentationContext;
}

ValueMetadata *type metadata accessor for StateOfMindTimelinePresentationContextKey()
{
  return &type metadata for StateOfMindTimelinePresentationContextKey;
}

uint64_t sub_2417CC038()
{
  sub_2418A8A24();
  type metadata accessor for AssociationSelectionPhaseSpecs();
  return sub_2418A89A0();
}

uint64_t type metadata accessor for AssociationSelectionPhaseSpecs()
{
  uint64_t result;

  result = qword_25714FE10;
  if (!qword_25714FE10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2417CC0A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417CC0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  sub_2417790D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_2418A87B4();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2417CC128()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417CC134(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_2417790D8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_2418A87B4();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

id sub_2417CC1B0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  char *v7;
  void *v8;
  int homeButtonType;
  uint64_t v10;

  v3 = type metadata accessor for AssociationSelectionPhaseSpecs();
  result = (id)MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      v8 = result;
      homeButtonType = MobileGestalt_get_homeButtonType();

      sub_2417289A8(v1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
      if (homeButtonType == 2)
      {
        sub_2418A879C();
        return (id)sub_2417A1114((uint64_t)v7);
      }
      else
      {
        return (id)sub_2417A1114((uint64_t)v7);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2417CC290()
{
  void *v0;
  id v1;
  id v2;
  _QWORD *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  _QWORD v10[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_secondarySystemGroupedBackgroundColor);
  v2 = objc_msgSend(v0, sel_tertiarySystemGroupedBackgroundColor);
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = 0;
  v3[3] = v2;
  v3[4] = 0;
  v3[5] = v1;
  v4 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  v10[4] = sub_2417D1680;
  v10[5] = v3;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_2417D168C;
  v10[3] = &block_descriptor_5;
  v5 = _Block_copy(v10);
  v6 = v2;
  v7 = v1;
  v8 = objc_msgSend(v4, sel_initWithDynamicProvider_, v5);
  _Block_release(v5);

  swift_release();
  return MEMORY[0x24269BE5C](v8);
}

void StateOfMindTimeline.Styles.Entry.viewHeight.getter()
{
  id v0;
  void *v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v0, sel_isiPad);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2417CC430@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE v15[14];
  char v16[2];

  v2 = sub_2418A84E4();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_2418A87B4();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2417790D8();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2418A8A24();
  sub_2418A89A0();
  sub_2417CBCE0();
  sub_2418A8B2C();
  v16[0] = v16[1];
  sub_2418A894C();
  return sub_2417CC554((uint64_t)v13, (uint64_t)v9, v16, (uint64_t)v5, a1);
}

uint64_t sub_2417CC554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v40;
  uint64_t v41;
  uint64_t v43;

  v9 = *a3;
  v10 = sub_2418A8EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a5, 1, 1, v10);
  sub_2417D16F4(a1, a5);
  v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
  v12 = a5 + v11[5];
  v13 = sub_2418A87B4();
  v43 = *(_QWORD *)(v13 - 8);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
  v14(v12, a2, v13);
  *(_BYTE *)(a5 + v11[6]) = v9;
  v15 = a5 + v11[7];
  v16 = sub_2418A84E4();
  v41 = *(_QWORD *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v15, a4, v16);
  v17 = a5 + v11[8];
  sub_24177912C(a1, v17);
  v18 = _s6StylesV8TimelineVMa(0);
  v14(v17 + *(int *)(v18 + 20), a2, v13);
  v19 = a5 + v11[9];
  sub_24177912C(a1, v19);
  v20 = _s6StylesV6NoDataVMa(0);
  v14(v19 + *(int *)(v20 + 20), a2, v13);
  v40 = v9;
  *(_BYTE *)(v19 + *(int *)(v20 + 24)) = v9;
  v21 = a5 + v11[10];
  sub_24177912C(a1, v21);
  v22 = _s6StylesV11PlaceholderVMa(0);
  v14(v21 + *(int *)(v22 + 20), a2, v13);
  v23 = a5 + v11[11];
  sub_24177912C(a1, v23);
  v24 = _s6StylesV6SymbolVMa(0);
  v14(v23 + *(int *)(v24 + 20), a2, v13);
  v25 = a5 + v11[12];
  sub_24177912C(a1, v25);
  v26 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v14(v25 + v26[5], a2, v13);
  *(_BYTE *)(v25 + v26[6]) = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v25 + v26[7], a4, v16);
  v27 = a5 + v11[13];
  sub_24177912C(a1, v27);
  v28 = _s6StylesV5EmptyVMa(0);
  v14(v27 + *(int *)(v28 + 20), a2, v13);
  *(_BYTE *)(v27 + *(int *)(v28 + 24)) = v40;
  v29 = a5 + v11[14];
  sub_24177912C(a1, v29);
  v30 = _s6StylesV5DailyVMa(0);
  v14(v29 + *(int *)(v30 + 20), a2, v13);
  *(_BYTE *)(v29 + *(int *)(v30 + 24)) = v40;
  v31 = a5 + v11[15];
  sub_24177912C(a1, v31);
  v32 = _s6StylesV9MomentaryVMa(0);
  v14(v31 + *(int *)(v32 + 20), a2, v13);
  v33 = a5 + v11[16];
  sub_24177912C(a1, v33);
  v34 = _s6StylesV6HeaderVMa(0);
  v14(v33 + *(int *)(v34 + 20), a2, v13);
  v35 = a5 + v11[17];
  sub_24177912C(a1, v35);
  v36 = _s6StylesV11ChartButtonVMa(0);
  v14(v35 + *(int *)(v36 + 20), a2, v13);
  v37 = a5 + v11[18];
  sub_2417D1738(a1, v37);
  v38 = v37 + *(int *)(_s6StylesV15LogButtonFooterVMa(0) + 20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v38, a2, v13);
}

double StateOfMindTimeline.Styles.Entry.tallViewHeight.getter()
{
  return 490.0;
}

double StateOfMindTimeline.Styles.Entry.shortViewHeight.getter()
{
  return 462.0;
}

void static StateOfMindTimeline.Styles.Entry.estimatedViewHeight.getter()
{
  id v0;
  void *v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v0, sel_isiPad);

  }
  else
  {
    __break(1u);
  }
}

double static StateOfMindTimeline.Styles.Entry.tallViewHeightEstimate.getter()
{
  return 621.0;
}

double static StateOfMindTimeline.Styles.Entry.shortViewHeightEstimate.getter()
{
  return 597.0;
}

uint64_t *_s6StylesVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  unsigned int (*v80)(uint64_t *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2418A8EB0();
    v8 = *(_QWORD *)(v7 - 8);
    v80 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v80(a2, 1, v7))
    {
      sub_2417790D8();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2418A87B4();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v16 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_2418A84E4();
    v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v78(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    if (v80((uint64_t *)((char *)a2 + v20), 1, v7))
    {
      sub_2417790D8();
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    }
    v24 = _s6StylesV8TimelineVMa(0);
    v15(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
    v25 = a3[9];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v79 = v8;
    if (v80((uint64_t *)((char *)a2 + v25), 1, v7))
    {
      sub_2417790D8();
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v26, v27, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v26, 0, 1, v7);
    }
    v29 = _s6StylesV6NoDataVMa(0);
    v15(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
    v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
    v30 = a3[10];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    if (v80((uint64_t *)((char *)a2 + v30), 1, v7))
    {
      sub_2417790D8();
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      v34 = v79;
    }
    else
    {
      v34 = v79;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v31, v32, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v31, 0, 1, v7);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v15(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v14);
    v36 = a3[11];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    if (v80((uint64_t *)((char *)a2 + v36), 1, v7))
    {
      sub_2417790D8();
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v37, v38, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v7);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v15(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v14);
    v41 = a3[12];
    v42 = (char *)a1 + v41;
    v43 = (char *)a2 + v41;
    if (v80((uint64_t *)((char *)a2 + v41), 1, v7))
    {
      sub_2417790D8();
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v42, v43, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v42, 0, 1, v7);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v15(&v42[v45[5]], &v43[v45[5]], v14);
    v42[v45[6]] = v43[v45[6]];
    v78(&v42[v45[7]], &v43[v45[7]], v19);
    v46 = a3[13];
    v47 = (char *)a1 + v46;
    v48 = (char *)a2 + v46;
    if (v80((uint64_t *)((char *)a2 + v46), 1, v7))
    {
      sub_2417790D8();
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = v79;
    }
    else
    {
      v50 = v79;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v47, v48, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v47, 0, 1, v7);
    }
    v51 = _s6StylesV5EmptyVMa(0);
    v15(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v14);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    v52 = a3[14];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    if (v80((uint64_t *)((char *)a2 + v52), 1, v7))
    {
      sub_2417790D8();
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
    }
    v56 = _s6StylesV5DailyVMa(0);
    v15(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v14);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = a3[15];
    v58 = (char *)a1 + v57;
    v59 = (char *)a2 + v57;
    if (v80((uint64_t *)((char *)a2 + v57), 1, v7))
    {
      sub_2417790D8();
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
    }
    v61 = _s6StylesV9MomentaryVMa(0);
    v15(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v14);
    v62 = a3[16];
    v63 = (char *)a1 + v62;
    v64 = (char *)a2 + v62;
    if (v80((uint64_t *)((char *)a2 + v62), 1, v7))
    {
      sub_2417790D8();
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
    }
    v66 = _s6StylesV6HeaderVMa(0);
    v15(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v14);
    v67 = a3[17];
    v68 = (char *)a1 + v67;
    v69 = (char *)a2 + v67;
    if (v80((uint64_t *)((char *)a2 + v67), 1, v7))
    {
      sub_2417790D8();
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
    }
    v71 = _s6StylesV11ChartButtonVMa(0);
    v15(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v14);
    v72 = a3[18];
    v73 = (char *)a1 + v72;
    v74 = (char *)a2 + v72;
    if (v80((uint64_t *)v74, 1, v7))
    {
      sub_2417790D8();
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
    }
    v76 = _s6StylesV15LogButtonFooterVMa(0);
    v15(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v14);
  }
  return a1;
}

uint64_t _s6StylesV8TimelineVMa(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257150528);
}

uint64_t _s6StylesV6NoDataVMa(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257150490);
}

uint64_t _s6StylesV11PlaceholderVMa(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257150400);
}

uint64_t _s6StylesV6SymbolVMa(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257150370);
}

uint64_t type metadata accessor for StateOfMindTimeline.Styles.Entry(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_25714FF68);
}

uint64_t _s6StylesV5EmptyVMa(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_2571502D8);
}

uint64_t _s6StylesV5DailyVMa(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257150240);
}

uint64_t _s6StylesV9MomentaryVMa(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_2571501B0);
}

uint64_t _s6StylesV6HeaderVMa(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257150120);
}

uint64_t _s6StylesV11ChartButtonVMa(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257150090);
}

uint64_t _s6StylesV15LogButtonFooterVMa(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257150000);
}

uint64_t _s6StylesVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(uint64_t, uint64_t);

  v4 = sub_2418A8EB0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + a2[5];
  v8 = sub_2418A87B4();
  v35 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v35(v7, v8);
  v9 = a1 + a2[7];
  v10 = sub_2418A84E4();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v12 = a1 + a2[8];
  if (!v6(v12, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v4);
  v13 = _s6StylesV8TimelineVMa(0);
  v35(v12 + *(int *)(v13 + 20), v8);
  v14 = a1 + a2[9];
  if (!v6(v14, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v4);
  v15 = _s6StylesV6NoDataVMa(0);
  v35(v14 + *(int *)(v15 + 20), v8);
  v16 = a1 + a2[10];
  if (!v6(v16, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v16, v4);
  v17 = _s6StylesV11PlaceholderVMa(0);
  v35(v16 + *(int *)(v17 + 20), v8);
  v18 = a1 + a2[11];
  if (!v6(v18, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v4);
  v19 = _s6StylesV6SymbolVMa(0);
  v35(v18 + *(int *)(v19 + 20), v8);
  v20 = a1 + a2[12];
  if (!v6(v20, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v20, v4);
  v21 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v35(v20 + *(int *)(v21 + 20), v8);
  v11(v20 + *(int *)(v21 + 28), v10);
  v22 = a1 + a2[13];
  if (!v6(v22, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v22, v4);
  v23 = _s6StylesV5EmptyVMa(0);
  v35(v22 + *(int *)(v23 + 20), v8);
  v24 = a1 + a2[14];
  if (!v6(v24, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v4);
  v25 = _s6StylesV5DailyVMa(0);
  v35(v24 + *(int *)(v25 + 20), v8);
  v26 = a1 + a2[15];
  if (!v6(v26, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v26, v4);
  v27 = _s6StylesV9MomentaryVMa(0);
  v35(v26 + *(int *)(v27 + 20), v8);
  v28 = a1 + a2[16];
  if (!v6(v28, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v28, v4);
  v29 = _s6StylesV6HeaderVMa(0);
  v35(v28 + *(int *)(v29 + 20), v8);
  v30 = a1 + a2[17];
  if (!v6(v30, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v30, v4);
  v31 = _s6StylesV11ChartButtonVMa(0);
  v35(v30 + *(int *)(v31 + 20), v8);
  v32 = a1 + a2[18];
  if (!v6(v32, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v32, v4);
  v33 = v32 + *(int *)(_s6StylesV15LogButtonFooterVMa(0) + 20);
  return ((uint64_t (*)(uint64_t, uint64_t))v35)(v33, v8);
}

char *_s6StylesVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v78(a2, 1, v6))
  {
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2418A87B4();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v10, v11, v12);
  v14 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_2418A84E4();
  v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v76(v15, v16, v17);
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v78(&a2[v18], 1, v6))
  {
    sub_2417790D8();
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  v22 = _s6StylesV8TimelineVMa(0);
  v13(&v19[*(int *)(v22 + 20)], &v20[*(int *)(v22 + 20)], v12);
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v77 = v7;
  if (v78(&a2[v23], 1, v6))
  {
    sub_2417790D8();
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v24, v25, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v24, 0, 1, v6);
  }
  v27 = _s6StylesV6NoDataVMa(0);
  v13(&v24[*(int *)(v27 + 20)], &v25[*(int *)(v27 + 20)], v12);
  v24[*(int *)(v27 + 24)] = v25[*(int *)(v27 + 24)];
  v28 = a3[10];
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v78(&a2[v28], 1, v6))
  {
    sub_2417790D8();
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    v32 = v77;
  }
  else
  {
    v32 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v29, v30, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v29, 0, 1, v6);
  }
  v33 = _s6StylesV11PlaceholderVMa(0);
  v13(&v29[*(int *)(v33 + 20)], &v30[*(int *)(v33 + 20)], v12);
  v34 = a3[11];
  v35 = &a1[v34];
  v36 = &a2[v34];
  if (v78(&a2[v34], 1, v6))
  {
    sub_2417790D8();
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v35, v36, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v6);
  }
  v38 = _s6StylesV6SymbolVMa(0);
  v13(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v12);
  v39 = a3[12];
  v40 = &a1[v39];
  v41 = &a2[v39];
  if (v78(&a2[v39], 1, v6))
  {
    sub_2417790D8();
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v40, v41, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v40, 0, 1, v6);
  }
  v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v13(&v40[v43[5]], &v41[v43[5]], v12);
  v40[v43[6]] = v41[v43[6]];
  v76(&v40[v43[7]], &v41[v43[7]], v17);
  v44 = a3[13];
  v45 = &a1[v44];
  v46 = &a2[v44];
  if (v78(&a2[v44], 1, v6))
  {
    sub_2417790D8();
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    v48 = v77;
  }
  else
  {
    v48 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v45, v46, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v45, 0, 1, v6);
  }
  v49 = _s6StylesV5EmptyVMa(0);
  v13(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v12);
  v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
  v50 = a3[14];
  v51 = &a1[v50];
  v52 = &a2[v50];
  if (v78(&a2[v50], 1, v6))
  {
    sub_2417790D8();
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
  }
  v54 = _s6StylesV5DailyVMa(0);
  v13(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v12);
  v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
  v55 = a3[15];
  v56 = &a1[v55];
  v57 = &a2[v55];
  if (v78(&a2[v55], 1, v6))
  {
    sub_2417790D8();
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
  }
  v59 = _s6StylesV9MomentaryVMa(0);
  v13(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v12);
  v60 = a3[16];
  v61 = &a1[v60];
  v62 = &a2[v60];
  if (v78(&a2[v60], 1, v6))
  {
    sub_2417790D8();
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
  }
  v64 = _s6StylesV6HeaderVMa(0);
  v13(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v12);
  v65 = a3[17];
  v66 = &a1[v65];
  v67 = &a2[v65];
  if (v78(&a2[v65], 1, v6))
  {
    sub_2417790D8();
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
  }
  v69 = _s6StylesV11ChartButtonVMa(0);
  v13(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v12);
  v70 = a3[18];
  v71 = &a1[v70];
  v72 = &a2[v70];
  if (v78(v72, 1, v6))
  {
    sub_2417790D8();
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
  }
  v74 = _s6StylesV15LogButtonFooterVMa(0);
  v13(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v12);
  return a1;
}

char *_s6StylesVwca(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v97 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2418A87B4();
  v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24);
  v98(v13, v14, v15);
  a1[a3[6]] = a2[a3[6]];
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_2418A84E4();
  v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24);
  v96(v17, v18, v19);
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = v8(&a1[v20], 1, v6);
  v24 = v8(v22, 1, v6);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v21, v22, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v21, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v21, v6);
LABEL_12:
    sub_2417790D8();
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v21, v22, v6);
LABEL_13:
  v26 = _s6StylesV8TimelineVMa(0);
  v98(&v21[*(int *)(v26 + 20)], &v22[*(int *)(v26 + 20)], v15);
  v27 = a3[9];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = v8(&a1[v27], 1, v6);
  v31 = v8(v29, 1, v6);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v28, v29, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v28, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v28, v6);
LABEL_18:
    sub_2417790D8();
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v28, v29, v6);
LABEL_19:
  v33 = _s6StylesV6NoDataVMa(0);
  v98(&v28[*(int *)(v33 + 20)], &v29[*(int *)(v33 + 20)], v15);
  v28[*(int *)(v33 + 24)] = v29[*(int *)(v33 + 24)];
  v34 = a3[10];
  v35 = &a1[v34];
  v36 = &a2[v34];
  LODWORD(v33) = v8(&a1[v34], 1, v6);
  v37 = v8(v36, 1, v6);
  if ((_DWORD)v33)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v35, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v35, v6);
LABEL_24:
    sub_2417790D8();
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v35, v36, v6);
LABEL_25:
  v39 = _s6StylesV11PlaceholderVMa(0);
  v98(&v35[*(int *)(v39 + 20)], &v36[*(int *)(v39 + 20)], v15);
  v40 = a3[11];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = v8(&a1[v40], 1, v6);
  v44 = v8(v42, 1, v6);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v41, v42, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v41, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v41, v6);
LABEL_30:
    sub_2417790D8();
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v41, v42, v6);
LABEL_31:
  v46 = _s6StylesV6SymbolVMa(0);
  v98(&v41[*(int *)(v46 + 20)], &v42[*(int *)(v46 + 20)], v15);
  v47 = a3[12];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = v8(&a1[v47], 1, v6);
  v51 = v8(v49, 1, v6);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v48, v49, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v48, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v48, v6);
LABEL_36:
    sub_2417790D8();
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v48, v49, v6);
LABEL_37:
  v53 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v98(&v48[v53[5]], &v49[v53[5]], v15);
  v48[v53[6]] = v49[v53[6]];
  v96(&v48[v53[7]], &v49[v53[7]], v19);
  v54 = a3[13];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = v8(&a1[v54], 1, v6);
  v58 = v8(v56, 1, v6);
  if (v57)
  {
    v59 = v97;
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v55, v56, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v55, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  v59 = v97;
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v55, v6);
LABEL_42:
    sub_2417790D8();
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v55, v56, v6);
LABEL_43:
  v61 = _s6StylesV5EmptyVMa(0);
  v98(&v55[*(int *)(v61 + 20)], &v56[*(int *)(v61 + 20)], v15);
  v55[*(int *)(v61 + 24)] = v56[*(int *)(v61 + 24)];
  v62 = a3[14];
  v63 = &a1[v62];
  v64 = &a2[v62];
  LODWORD(v61) = v8(&a1[v62], 1, v6);
  v65 = v8(v64, 1, v6);
  if ((_DWORD)v61)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v63, v64, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v63, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v63, v6);
LABEL_48:
    sub_2417790D8();
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v63, v64, v6);
LABEL_49:
  v67 = _s6StylesV5DailyVMa(0);
  v98(&v63[*(int *)(v67 + 20)], &v64[*(int *)(v67 + 20)], v15);
  v63[*(int *)(v67 + 24)] = v64[*(int *)(v67 + 24)];
  v68 = a3[15];
  v69 = &a1[v68];
  v70 = &a2[v68];
  LODWORD(v67) = v8(&a1[v68], 1, v6);
  v71 = v8(v70, 1, v6);
  if ((_DWORD)v67)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v69, v70, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v69, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v69, v6);
LABEL_54:
    sub_2417790D8();
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v69, v70, v6);
LABEL_55:
  v73 = _s6StylesV9MomentaryVMa(0);
  v98(&v69[*(int *)(v73 + 20)], &v70[*(int *)(v73 + 20)], v15);
  v74 = a3[16];
  v75 = &a1[v74];
  v76 = &a2[v74];
  v77 = v8(&a1[v74], 1, v6);
  v78 = v8(v76, 1, v6);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v75, v76, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v75, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v75, v6);
LABEL_60:
    sub_2417790D8();
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v75, v76, v6);
LABEL_61:
  v80 = _s6StylesV6HeaderVMa(0);
  v98(&v75[*(int *)(v80 + 20)], &v76[*(int *)(v80 + 20)], v15);
  v81 = a3[17];
  v82 = &a1[v81];
  v83 = &a2[v81];
  v84 = v8(&a1[v81], 1, v6);
  v85 = v8(v83, 1, v6);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v82, v83, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v82, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v82, v6);
LABEL_66:
    sub_2417790D8();
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v82, v83, v6);
LABEL_67:
  v87 = _s6StylesV11ChartButtonVMa(0);
  v98(&v82[*(int *)(v87 + 20)], &v83[*(int *)(v87 + 20)], v15);
  v88 = a3[18];
  v89 = &a1[v88];
  v90 = &a2[v88];
  v91 = v8(&a1[v88], 1, v6);
  v92 = v8(v90, 1, v6);
  if (!v91)
  {
    if (!v92)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v89, v90, v6);
      goto LABEL_73;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v89, v6);
    goto LABEL_72;
  }
  if (v92)
  {
LABEL_72:
    sub_2417790D8();
    memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v89, v90, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v89, 0, 1, v6);
LABEL_73:
  v94 = _s6StylesV15LogButtonFooterVMa(0);
  v98(&v89[*(int *)(v94 + 20)], &v90[*(int *)(v94 + 20)], v15);
  return a1;
}

char *_s6StylesVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v78(a2, 1, v6))
  {
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2418A87B4();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v14 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_2418A84E4();
  v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v76(v15, v16, v17);
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v78(&a2[v18], 1, v6))
  {
    sub_2417790D8();
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  v22 = _s6StylesV8TimelineVMa(0);
  v13(&v19[*(int *)(v22 + 20)], &v20[*(int *)(v22 + 20)], v12);
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v77 = v7;
  if (v78(&a2[v23], 1, v6))
  {
    sub_2417790D8();
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v24, v25, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v24, 0, 1, v6);
  }
  v27 = _s6StylesV6NoDataVMa(0);
  v13(&v24[*(int *)(v27 + 20)], &v25[*(int *)(v27 + 20)], v12);
  v24[*(int *)(v27 + 24)] = v25[*(int *)(v27 + 24)];
  v28 = a3[10];
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v78(&a2[v28], 1, v6))
  {
    sub_2417790D8();
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    v32 = v77;
  }
  else
  {
    v32 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v29, v30, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v29, 0, 1, v6);
  }
  v33 = _s6StylesV11PlaceholderVMa(0);
  v13(&v29[*(int *)(v33 + 20)], &v30[*(int *)(v33 + 20)], v12);
  v34 = a3[11];
  v35 = &a1[v34];
  v36 = &a2[v34];
  if (v78(&a2[v34], 1, v6))
  {
    sub_2417790D8();
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v35, v36, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v6);
  }
  v38 = _s6StylesV6SymbolVMa(0);
  v13(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v12);
  v39 = a3[12];
  v40 = &a1[v39];
  v41 = &a2[v39];
  if (v78(&a2[v39], 1, v6))
  {
    sub_2417790D8();
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v40, v41, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v40, 0, 1, v6);
  }
  v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v13(&v40[v43[5]], &v41[v43[5]], v12);
  v40[v43[6]] = v41[v43[6]];
  v76(&v40[v43[7]], &v41[v43[7]], v17);
  v44 = a3[13];
  v45 = &a1[v44];
  v46 = &a2[v44];
  if (v78(&a2[v44], 1, v6))
  {
    sub_2417790D8();
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    v48 = v77;
  }
  else
  {
    v48 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v45, v46, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v45, 0, 1, v6);
  }
  v49 = _s6StylesV5EmptyVMa(0);
  v13(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v12);
  v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
  v50 = a3[14];
  v51 = &a1[v50];
  v52 = &a2[v50];
  if (v78(&a2[v50], 1, v6))
  {
    sub_2417790D8();
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v51, v52, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
  }
  v54 = _s6StylesV5DailyVMa(0);
  v13(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v12);
  v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
  v55 = a3[15];
  v56 = &a1[v55];
  v57 = &a2[v55];
  if (v78(&a2[v55], 1, v6))
  {
    sub_2417790D8();
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v56, v57, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
  }
  v59 = _s6StylesV9MomentaryVMa(0);
  v13(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v12);
  v60 = a3[16];
  v61 = &a1[v60];
  v62 = &a2[v60];
  if (v78(&a2[v60], 1, v6))
  {
    sub_2417790D8();
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v61, v62, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
  }
  v64 = _s6StylesV6HeaderVMa(0);
  v13(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v12);
  v65 = a3[17];
  v66 = &a1[v65];
  v67 = &a2[v65];
  if (v78(&a2[v65], 1, v6))
  {
    sub_2417790D8();
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v66, v67, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
  }
  v69 = _s6StylesV11ChartButtonVMa(0);
  v13(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v12);
  v70 = a3[18];
  v71 = &a1[v70];
  v72 = &a2[v70];
  if (v78(v72, 1, v6))
  {
    sub_2417790D8();
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v71, v72, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
  }
  v74 = _s6StylesV15LogButtonFooterVMa(0);
  v13(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v12);
  return a1;
}

char *_s6StylesVwta(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v97 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2418A87B4();
  v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v98(v13, v14, v15);
  v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_2418A84E4();
  v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40);
  v96(v17, v18, v19);
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = v8(&a1[v20], 1, v6);
  v24 = v8(v22, 1, v6);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v21, v22, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v21, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v21, v6);
LABEL_12:
    sub_2417790D8();
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 40))(v21, v22, v6);
LABEL_13:
  v26 = _s6StylesV8TimelineVMa(0);
  v98(&v21[*(int *)(v26 + 20)], &v22[*(int *)(v26 + 20)], v15);
  v27 = a3[9];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = v8(&a1[v27], 1, v6);
  v31 = v8(v29, 1, v6);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v28, v29, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v28, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v28, v6);
LABEL_18:
    sub_2417790D8();
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 40))(v28, v29, v6);
LABEL_19:
  v33 = _s6StylesV6NoDataVMa(0);
  v98(&v28[*(int *)(v33 + 20)], &v29[*(int *)(v33 + 20)], v15);
  v28[*(int *)(v33 + 24)] = v29[*(int *)(v33 + 24)];
  v34 = a3[10];
  v35 = &a1[v34];
  v36 = &a2[v34];
  LODWORD(v33) = v8(&a1[v34], 1, v6);
  v37 = v8(v36, 1, v6);
  if ((_DWORD)v33)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v35, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v35, v6);
LABEL_24:
    sub_2417790D8();
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 40))(v35, v36, v6);
LABEL_25:
  v39 = _s6StylesV11PlaceholderVMa(0);
  v98(&v35[*(int *)(v39 + 20)], &v36[*(int *)(v39 + 20)], v15);
  v40 = a3[11];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = v8(&a1[v40], 1, v6);
  v44 = v8(v42, 1, v6);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v41, v42, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v41, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v41, v6);
LABEL_30:
    sub_2417790D8();
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 40))(v41, v42, v6);
LABEL_31:
  v46 = _s6StylesV6SymbolVMa(0);
  v98(&v41[*(int *)(v46 + 20)], &v42[*(int *)(v46 + 20)], v15);
  v47 = a3[12];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = v8(&a1[v47], 1, v6);
  v51 = v8(v49, 1, v6);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v48, v49, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v48, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v48, v6);
LABEL_36:
    sub_2417790D8();
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 40))(v48, v49, v6);
LABEL_37:
  v53 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v98(&v48[v53[5]], &v49[v53[5]], v15);
  v48[v53[6]] = v49[v53[6]];
  v96(&v48[v53[7]], &v49[v53[7]], v19);
  v54 = a3[13];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = v8(&a1[v54], 1, v6);
  v58 = v8(v56, 1, v6);
  if (v57)
  {
    v59 = v97;
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v55, v56, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v55, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  v59 = v97;
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v55, v6);
LABEL_42:
    sub_2417790D8();
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 40))(v55, v56, v6);
LABEL_43:
  v61 = _s6StylesV5EmptyVMa(0);
  v98(&v55[*(int *)(v61 + 20)], &v56[*(int *)(v61 + 20)], v15);
  v55[*(int *)(v61 + 24)] = v56[*(int *)(v61 + 24)];
  v62 = a3[14];
  v63 = &a1[v62];
  v64 = &a2[v62];
  LODWORD(v61) = v8(&a1[v62], 1, v6);
  v65 = v8(v64, 1, v6);
  if ((_DWORD)v61)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v63, v64, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v63, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v63, v6);
LABEL_48:
    sub_2417790D8();
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v63, v64, v6);
LABEL_49:
  v67 = _s6StylesV5DailyVMa(0);
  v98(&v63[*(int *)(v67 + 20)], &v64[*(int *)(v67 + 20)], v15);
  v63[*(int *)(v67 + 24)] = v64[*(int *)(v67 + 24)];
  v68 = a3[15];
  v69 = &a1[v68];
  v70 = &a2[v68];
  LODWORD(v67) = v8(&a1[v68], 1, v6);
  v71 = v8(v70, 1, v6);
  if ((_DWORD)v67)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v69, v70, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v69, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v69, v6);
LABEL_54:
    sub_2417790D8();
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v69, v70, v6);
LABEL_55:
  v73 = _s6StylesV9MomentaryVMa(0);
  v98(&v69[*(int *)(v73 + 20)], &v70[*(int *)(v73 + 20)], v15);
  v74 = a3[16];
  v75 = &a1[v74];
  v76 = &a2[v74];
  v77 = v8(&a1[v74], 1, v6);
  v78 = v8(v76, 1, v6);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v75, v76, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v75, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v75, v6);
LABEL_60:
    sub_2417790D8();
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v75, v76, v6);
LABEL_61:
  v80 = _s6StylesV6HeaderVMa(0);
  v98(&v75[*(int *)(v80 + 20)], &v76[*(int *)(v80 + 20)], v15);
  v81 = a3[17];
  v82 = &a1[v81];
  v83 = &a2[v81];
  v84 = v8(&a1[v81], 1, v6);
  v85 = v8(v83, 1, v6);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v82, v83, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v82, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v82, v6);
LABEL_66:
    sub_2417790D8();
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v82, v83, v6);
LABEL_67:
  v87 = _s6StylesV11ChartButtonVMa(0);
  v98(&v82[*(int *)(v87 + 20)], &v83[*(int *)(v87 + 20)], v15);
  v88 = a3[18];
  v89 = &a1[v88];
  v90 = &a2[v88];
  v91 = v8(&a1[v88], 1, v6);
  v92 = v8(v90, 1, v6);
  if (!v91)
  {
    if (!v92)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v89, v90, v6);
      goto LABEL_73;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v89, v6);
    goto LABEL_72;
  }
  if (v92)
  {
LABEL_72:
    sub_2417790D8();
    memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v89, v90, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v89, 0, 1, v6);
LABEL_73:
  v94 = _s6StylesV15LogButtonFooterVMa(0);
  v98(&v89[*(int *)(v94 + 20)], &v90[*(int *)(v94 + 20)], v15);
  return a1;
}

uint64_t _s6StylesVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417CFB7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_2417790D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = sub_2418A87B4();
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 254)
  {
    v14 = sub_2418A84E4();
    v10 = *(_QWORD *)(v14 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v14;
      v12 = a3[7];
    }
    else
    {
      v15 = _s6StylesV8TimelineVMa(0);
      v10 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        v11 = v15;
        v12 = a3[8];
      }
      else
      {
        v16 = _s6StylesV6NoDataVMa(0);
        v10 = *(_QWORD *)(v16 - 8);
        if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
        {
          v11 = v16;
          v12 = a3[9];
        }
        else
        {
          v17 = _s6StylesV11PlaceholderVMa(0);
          v10 = *(_QWORD *)(v17 - 8);
          if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
          {
            v11 = v17;
            v12 = a3[10];
          }
          else
          {
            v18 = _s6StylesV6SymbolVMa(0);
            v10 = *(_QWORD *)(v18 - 8);
            if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
            {
              v11 = v18;
              v12 = a3[11];
            }
            else
            {
              v19 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
              v10 = *(_QWORD *)(v19 - 8);
              if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
              {
                v11 = v19;
                v12 = a3[12];
              }
              else
              {
                v20 = _s6StylesV5EmptyVMa(0);
                v10 = *(_QWORD *)(v20 - 8);
                if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
                {
                  v11 = v20;
                  v12 = a3[13];
                }
                else
                {
                  v21 = _s6StylesV5DailyVMa(0);
                  v10 = *(_QWORD *)(v21 - 8);
                  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
                  {
                    v11 = v21;
                    v12 = a3[14];
                  }
                  else
                  {
                    v22 = _s6StylesV9MomentaryVMa(0);
                    v10 = *(_QWORD *)(v22 - 8);
                    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
                    {
                      v11 = v22;
                      v12 = a3[15];
                    }
                    else
                    {
                      v23 = _s6StylesV6HeaderVMa(0);
                      v10 = *(_QWORD *)(v23 - 8);
                      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
                      {
                        v11 = v23;
                        v12 = a3[16];
                      }
                      else
                      {
                        v24 = _s6StylesV11ChartButtonVMa(0);
                        v10 = *(_QWORD *)(v24 - 8);
                        if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
                        {
                          v11 = v24;
                          v12 = a3[17];
                        }
                        else
                        {
                          v11 = _s6StylesV15LogButtonFooterVMa(0);
                          v10 = *(_QWORD *)(v11 - 8);
                          v12 = a3[18];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(unsigned __int8 *)(a1 + a3[6]);
  if (v13 >= 2)
    return v13 - 1;
  else
    return 0;
}

uint64_t _s6StylesVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417CFDD8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_2417790D8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_2418A87B4();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 254)
      {
        *(_BYTE *)(a1 + a4[6]) = a2 + 1;
        return result;
      }
      v16 = sub_2418A84E4();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v17 = _s6StylesV8TimelineVMa(0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          v18 = _s6StylesV6NoDataVMa(0);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[9];
          }
          else
          {
            v19 = _s6StylesV11PlaceholderVMa(0);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[10];
            }
            else
            {
              v20 = _s6StylesV6SymbolVMa(0);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[11];
              }
              else
              {
                v21 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[12];
                }
                else
                {
                  v22 = _s6StylesV5EmptyVMa(0);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[13];
                  }
                  else
                  {
                    v23 = _s6StylesV5DailyVMa(0);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[14];
                    }
                    else
                    {
                      v24 = _s6StylesV9MomentaryVMa(0);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[15];
                      }
                      else
                      {
                        v25 = _s6StylesV6HeaderVMa(0);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[16];
                        }
                        else
                        {
                          v26 = _s6StylesV11ChartButtonVMa(0);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[17];
                          }
                          else
                          {
                            v10 = _s6StylesV15LogButtonFooterVMa(0);
                            v14 = *(_QWORD *)(v10 - 8);
                            v15 = a4[18];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for StateOfMindTimeline.Styles(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_25714FEA0);
}

void sub_2417D003C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  sub_2417790D8();
  if (v0 <= 0x3F)
  {
    sub_2418A87B4();
    if (v1 <= 0x3F)
    {
      sub_2418A84E4();
      if (v2 <= 0x3F)
      {
        _s6StylesV8TimelineVMa(319);
        if (v3 <= 0x3F)
        {
          _s6StylesV6NoDataVMa(319);
          if (v4 <= 0x3F)
          {
            _s6StylesV11PlaceholderVMa(319);
            if (v5 <= 0x3F)
            {
              _s6StylesV6SymbolVMa(319);
              if (v6 <= 0x3F)
              {
                type metadata accessor for StateOfMindTimeline.Styles.Entry(319);
                if (v7 <= 0x3F)
                {
                  _s6StylesV5EmptyVMa(319);
                  if (v8 <= 0x3F)
                  {
                    _s6StylesV5DailyVMa(319);
                    if (v9 <= 0x3F)
                    {
                      _s6StylesV9MomentaryVMa(319);
                      if (v10 <= 0x3F)
                      {
                        _s6StylesV6HeaderVMa(319);
                        if (v11 <= 0x3F)
                        {
                          _s6StylesV11ChartButtonVMa(319);
                          if (v12 <= 0x3F)
                          {
                            _s6StylesV15LogButtonFooterVMa(319);
                            if (v13 <= 0x3F)
                              swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *_s6StylesV5EntryVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2418A8EB0();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_2417790D8();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t _s6StylesV5EntryVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_2418A8EB0();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_2418A87B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

char *_s6StylesV5EntryVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2418A84E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

char *_s6StylesV5EntryVwca(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[6]] = a2[a3[6]];
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_2418A84E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

char *_s6StylesV5EntryVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2418A84E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

char *_s6StylesV5EntryVwta(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_2418A84E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t _s6StylesV5EntryVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D08CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  sub_2417790D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = sub_2418A87B4();
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 254)
  {
    v11 = sub_2418A84E4();
    v10 = *(_QWORD *)(v11 - 8);
    v12 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(unsigned __int8 *)(a1 + a3[6]);
  if (v13 >= 2)
    return v13 - 1;
  else
    return 0;
}

uint64_t _s6StylesV5EntryVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D099C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  sub_2417790D8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_2418A87B4();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 254)
      {
        *(_BYTE *)(a1 + a4[6]) = a2 + 1;
        return result;
      }
      v10 = sub_2418A84E4();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2417D0A60()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2417790D8();
  if (v0 <= 0x3F)
  {
    sub_2418A87B4();
    if (v1 <= 0x3F)
    {
      sub_2418A84E4();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_2417D0B20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0B30()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0B44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0B54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0B64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0B74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0B84()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0B94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0BB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0BC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0BDC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0BEC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0BFC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0C0C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0C1C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D0C2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *sub_2417D0C3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2418A8EB0();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_2417790D8();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

char *sub_2417D0D4C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2417D0E30(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2417D0F60(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2417D1044(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_2417D1174()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_11Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  sub_2417790D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_2418A87B4();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

uint64_t sub_2417D1228()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_12Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_2417790D8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_2418A87B4();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

void sub_2417D12DC()
{
  unint64_t v0;
  unint64_t v1;

  sub_2417790D8();
  if (v0 <= 0x3F)
  {
    sub_2418A87B4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2417D1368()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  sub_2417790D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_2418A87B4();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2417D13EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_4Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_2417790D8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_2418A87B4();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2417D1478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_2418A84E4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A894C();
  v5 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  v6 = *MEMORY[0x24BDEB3F0];
  v7 = (void *)objc_opt_self();
  if (v5 == v6)
    return MEMORY[0x24269BDB4](objc_msgSend(v7, sel_secondarySystemGroupedBackgroundColor));
  v8 = MEMORY[0x24269BDB4](objc_msgSend(v7, sel_systemGroupedBackgroundColor));
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v8;
}

id sub_2417D1568(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v12;

  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
  {
    v9 = a2;
    if (!a2)
      v9 = a3;
    v10 = a2;
    if (objc_msgSend(a1, sel_accessibilityContrast) != (id)1)
    {
LABEL_5:

      return a3;
    }
  }
  else
  {
    v9 = a4;
    if (!a4)
      v9 = a5;
    v12 = a4;
    a3 = a5;
    if (objc_msgSend(a1, sel_accessibilityContrast) != (id)1)
      goto LABEL_5;
  }
  return v9;
}

uint64_t sub_2417D1644()
{
  id *v0;

  return swift_deallocObject();
}

id sub_2417D1680(void *a1)
{
  void **v1;

  return sub_2417D1568(a1, v1[2], v1[3], v1[4], v1[5]);
}

id sub_2417D168C(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_2417D16F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417790D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417D1738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417790D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_2417D177C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v7 = a2[7];
    v8 = *(int *)(a3 + 36);
    v9 = (uint64_t *)((char *)a2 + v8);
    v10 = (_QWORD *)(a1 + v8);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v7;
    sub_2417768DC(0);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v10, v9, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      }
      v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v16 = (char *)v10 + v15;
      v17 = (char *)v9 + v15;
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *v10 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_2417D1950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  sub_2417768DC(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_2417D1A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(int *)(a3 + 36);
  v8 = (_QWORD *)(a2 + v7);
  v9 = (_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  sub_2417768DC(0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v9, v8, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v14 = (char *)v9 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v9 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2417D1BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 36);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_24172588C(a1 + v7, (uint64_t (*)(_QWORD))sub_2417768DC);
    sub_2417768DC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2417D1DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 36);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  sub_2417768DC(0);
  v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v14 = &v6[v13];
    v15 = &v7[v13];
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2417D1F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 36);
    v7 = (char *)(a1 + v6);
    v8 = (char *)(a2 + v6);
    sub_24172588C(a1 + v6, (uint64_t (*)(_QWORD))sub_2417768DC);
    sub_2417768DC(0);
    v10 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v15 = &v7[v14];
      v16 = &v8[v14];
      v17 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417D20E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D20F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_2417D2188()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D2194(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LabelsSelectionPhaseContent()
{
  uint64_t result;

  result = qword_2571505B8;
  if (!qword_2571505B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417D225C()
{
  unint64_t v0;

  sub_2417768DC(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2417D2304()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417D2314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)();
  uint64_t *boxed_opaque_existential_1;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  uint64_t v141;
  char v142;
  void *v143;
  __int128 v144;
  uint64_t v145;
  _UNKNOWN **v146;
  uint64_t (*v147)();
  uint64_t v148;
  uint64_t v149[3];
  __int128 v150;
  uint64_t v151;
  char v152;
  uint64_t (*v153)@<X0>(uint64_t@<X8>);
  uint64_t v154;

  v137 = a2;
  v3 = type metadata accessor for LabelsSelectionPhaseContent();
  v122 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v123 = v5;
  v124 = (uint64_t)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174DAC0(0, v6, v7, v8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v126 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241786A20(0);
  v133 = v12;
  v134 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v125 = (uint64_t)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241786A04(0);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v136 = (uint64_t)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v19);
  v132 = (uint64_t)&v121 - v20;
  sub_2417D2E70(0);
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v135 = (uint64_t)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v129 = (uint64_t *)((char *)&v121 - v27);
  MEMORY[0x24BDAC7A8](v26, v28);
  v139 = (uint64_t)&v121 - v29;
  v130 = type metadata accessor for AssociationSelectionPhaseSpecs();
  v31 = MEMORY[0x24BDAC7A8](v130, v30);
  v33 = (uint64_t *)((char *)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v31, v34);
  v36 = (char *)&v121 - v35;
  sub_241786A34(0);
  MEMORY[0x24BDAC7A8](v37, v38);
  v40 = (uint64_t *)((char *)&v121 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = type metadata accessor for ValenceSelectionSummary();
  MEMORY[0x24BDAC7A8](v41, v42);
  v44 = (char *)&v121 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24178699C(0);
  v127 = v45;
  MEMORY[0x24BDAC7A8](v45, v46);
  v48 = (char *)&v121 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241786988(0);
  v128 = v49;
  v51 = MEMORY[0x24BDAC7A8](v49, v50);
  v131 = (uint64_t)&v121 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x24BDAC7A8](v51, v53);
  v56 = (char *)&v121 - v55;
  MEMORY[0x24BDAC7A8](v54, v57);
  v138 = (uint64_t)&v121 - v58;
  v59 = *(double *)a1;
  v60 = *(_BYTE *)(a1 + 40);
  *v40 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  *(double *)v44 = v59;
  *((_QWORD *)v44 + 1) = MEMORY[0x24BEE4AF8];
  v44[16] = v60;
  v61 = (uint64_t *)&v44[*(int *)(v41 + 28)];
  *v61 = swift_getKeyPath();
  sub_2417768DC(0);
  swift_storeEnumTagMultiPayload();
  sub_241731B4C((uint64_t)v40, (uint64_t)&v44[*(int *)(v41 + 32)], (uint64_t (*)(_QWORD))sub_241786A34);
  LOBYTE(v61) = sub_2418A90F0();
  sub_241861594((uint64_t)v36);
  sub_24172588C((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A84A8();
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v69 = v68;
  sub_2417289A8((uint64_t)v44, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionSummary);
  v70 = &v48[*(int *)(v127 + 36)];
  *v70 = (char)v61;
  *((_QWORD *)v70 + 1) = v63;
  *((_QWORD *)v70 + 2) = v65;
  *((_QWORD *)v70 + 3) = v67;
  *((_QWORD *)v70 + 4) = v69;
  v70[40] = 0;
  sub_24172588C((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionSummary);
  LOBYTE(v61) = sub_2418A90E4();
  sub_241861594((uint64_t)v33);
  sub_2417CC1B0(*(_BYTE *)(a1 + 40));
  sub_24172588C((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A84A8();
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v78 = v77;
  sub_2417289A8((uint64_t)v48, (uint64_t)v56, (uint64_t (*)(_QWORD))sub_24178699C);
  v79 = &v56[*(int *)(v128 + 36)];
  *v79 = (char)v61;
  *((_QWORD *)v79 + 1) = v72;
  *((_QWORD *)v79 + 2) = v74;
  *((_QWORD *)v79 + 3) = v76;
  *((_QWORD *)v79 + 4) = v78;
  v79[40] = 0;
  sub_24172588C((uint64_t)v48, (uint64_t (*)(_QWORD))sub_24178699C);
  sub_241731B4C((uint64_t)v56, v138, (uint64_t (*)(_QWORD))sub_241786988);
  v80 = sub_2418A8C64();
  v81 = v129;
  *v129 = v80;
  v81[1] = 0;
  *((_BYTE *)v81 + 16) = 0;
  sub_241731B94(0, &qword_257150628, (void (*)(uint64_t))type metadata accessor for LabelsPicker);
  v83 = (uint64_t)v81 + *(int *)(v82 + 44);
  v84 = *(double *)a1;
  v85 = *(_QWORD *)(a1 + 8);
  v143 = *(void **)(a1 + 16);
  v144 = *(_OWORD *)(a1 + 24);
  sub_24172570C(0, &qword_257150630, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  swift_bridgeObjectRetain();
  v86 = v130;
  sub_2418A9828();
  sub_241892750(v85, (uint64_t)v147, v148, v149[0], v83, v84);
  sub_241731B4C((uint64_t)v81, v139, (uint64_t (*)(_QWORD))sub_2417D2E70);
  sub_241861594((uint64_t)v33);
  LOBYTE(v83) = sub_2418A879C();
  v129 = v33;
  sub_24172588C((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  if ((v83 & 1) != 0)
  {
    v87 = *(uint64_t (**)())a1;
    v145 = v86;
    v146 = &off_2511B05C8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v143);
    sub_241861594((uint64_t)boxed_opaque_existential_1);
    v89 = v124;
    sub_2417289A8(a1, v124, (uint64_t (*)(_QWORD))type metadata accessor for LabelsSelectionPhaseContent);
    v90 = (*(unsigned __int8 *)(v122 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
    v91 = swift_allocObject();
    sub_241731B4C(v89, v91 + v90, (uint64_t (*)(_QWORD))type metadata accessor for LabelsSelectionPhaseContent);
    v147 = v87;
    LOBYTE(v148) = 0;
    sub_24172887C(0, (unint64_t *)&qword_25714D7D0, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2418A9840();
    v150 = v140;
    v151 = v141;
    v152 = v142;
    sub_24174DE50((__int128 *)&v143, (uint64_t)v149);
    v147 = sub_2417D2FBC;
    v148 = v91;
    v153 = sub_2417AE5A0;
    v154 = 0;
    v143 = &unk_2511AB450;
    sub_2417739BC((uint64_t)&unk_2511AC360);
    sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_241731AEC();
    sub_2418A9D50();
    swift_bridgeObjectRelease();
    sub_24174DB24(0, v92, v93, v94);
    sub_24172159C((unint64_t *)&qword_25714CE58, (uint64_t (*)(uint64_t))sub_24174DB24, (uint64_t)&unk_2418DA5E8);
    v95 = (uint64_t)v126;
    sub_2418A9450();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_24172588C((uint64_t)&v147, (uint64_t (*)(_QWORD))sub_24174DB24);
    v96 = sub_2418A90E4();
    v97 = v129;
    sub_241861594((uint64_t)v129);
    sub_24172588C((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_2418A84A8();
    v99 = v98;
    v101 = v100;
    v103 = v102;
    v105 = v104;
    v106 = v125;
    sub_2417289A8(v95, v125, (uint64_t (*)(_QWORD))sub_24174DAC0);
    v107 = v133;
    v108 = v106 + *(int *)(v133 + 36);
    *(_BYTE *)v108 = v96;
    *(_QWORD *)(v108 + 8) = v99;
    *(_QWORD *)(v108 + 16) = v101;
    *(_QWORD *)(v108 + 24) = v103;
    *(_QWORD *)(v108 + 32) = v105;
    *(_BYTE *)(v108 + 40) = 0;
    sub_24172588C(v95, (uint64_t (*)(_QWORD))sub_24174DAC0);
    v109 = v132;
    sub_241731B4C(v106, v132, (uint64_t (*)(_QWORD))sub_241786A20);
    v110 = 0;
    v111 = v107;
  }
  else
  {
    v110 = 1;
    v109 = v132;
    v111 = v133;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56))(v109, v110, 1, v111);
  v112 = v138;
  v113 = v131;
  sub_2417289A8(v138, v131, (uint64_t (*)(_QWORD))sub_241786988);
  v114 = v139;
  v115 = v135;
  sub_2417289A8(v139, v135, (uint64_t (*)(_QWORD))sub_2417D2E70);
  v116 = v136;
  sub_2417289A8(v109, v136, (uint64_t (*)(_QWORD))sub_241786A04);
  v117 = v137;
  sub_2417289A8(v113, v137, (uint64_t (*)(_QWORD))sub_241786988);
  sub_2417D2DEC();
  v119 = v118;
  sub_2417289A8(v115, v117 + *(int *)(v118 + 48), (uint64_t (*)(_QWORD))sub_2417D2E70);
  sub_2417289A8(v116, v117 + *(int *)(v119 + 64), (uint64_t (*)(_QWORD))sub_241786A04);
  sub_24172588C(v109, (uint64_t (*)(_QWORD))sub_241786A04);
  sub_24172588C(v114, (uint64_t (*)(_QWORD))sub_2417D2E70);
  sub_24172588C(v112, (uint64_t (*)(_QWORD))sub_241786988);
  sub_24172588C(v116, (uint64_t (*)(_QWORD))sub_241786A04);
  sub_24172588C(v115, (uint64_t (*)(_QWORD))sub_2417D2E70);
  return sub_24172588C(v113, (uint64_t (*)(_QWORD))sub_241786988);
}

uint64_t sub_2417D2D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2418A8C58();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_241731B94(0, &qword_257150600, sub_2417D2DD0);
  return sub_2417D2314(v1, a1 + *(int *)(v3 + 44));
}

void sub_2417D2DD0(uint64_t a1)
{
  sub_24172570C(a1, &qword_257150608, (uint64_t (*)(uint64_t))sub_2417D2DEC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417D2DEC()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_257150610)
  {
    sub_241786988(255);
    sub_2417D2E70(255);
    sub_241786A04(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_257150610);
  }
}

void sub_2417D2E70(uint64_t a1)
{
  sub_2417D3048(a1, &qword_257150618, (uint64_t (*)(uint64_t))type metadata accessor for LabelsPicker, &qword_257150620, (uint64_t)&unk_2418DB068);
}

uint64_t sub_2417D2EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for LabelsSelectionPhaseContent();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 36);
  sub_2417768DC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v6 = v3 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v7 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2417D2FBC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LabelsSelectionPhaseContent() - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 48))();
}

uint64_t sub_2417D2FF8()
{
  return sub_24172159C(&qword_257150638, (uint64_t (*)(uint64_t))sub_2417D3024, MEMORY[0x24BDF4700]);
}

void sub_2417D3024(uint64_t a1)
{
  sub_2417D3048(a1, &qword_257150640, (uint64_t (*)(uint64_t))sub_2417D2DD0, &qword_257150648, MEMORY[0x24BDF5428]);
}

void sub_2417D3048(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_24172159C(a4, a3, a5);
    v9 = sub_2418A97EC();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2417D30C8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, char a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t *v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;

  v32 = a6;
  v13 = sub_2418A8100();
  v34 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v33 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v32 - v18;
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  *(_QWORD *)a7 = sub_2418A8760();
  *(_QWORD *)(a7 + 8) = v20;
  *(_QWORD *)(a7 + 16) = a1;
  *(_QWORD *)(a7 + 24) = a2;
  *(_BYTE *)(a7 + 32) = a3;
  *(_BYTE *)(a7 + 33) = a4;
  v21 = v32;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = v21;
  v22 = (int *)type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  v23 = (uint64_t *)(a7 + v22[8]);
  *v23 = swift_getKeyPath();
  v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v25 = (uint64_t *)(a7 + v22[9]);
  *v25 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v24);
  swift_storeEnumTagMultiPayload();
  v26 = (uint64_t *)(a7 + v22[10]);
  *v26 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v24);
  swift_storeEnumTagMultiPayload();
  v27 = v22[11];
  v35 = 1;
  type metadata accessor for __HKStateOfMindReflectiveInterval(0);
  sub_2418A96C0();
  *(_OWORD *)(a7 + v27) = v36;
  sub_2418A8088();
  v28 = v34;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v33, v19, v13);
  sub_2418A96C0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v13);
  v29 = a7 + v22[13];
  LOBYTE(v35) = 1;
  result = sub_2418A96C0();
  v31 = *((_QWORD *)&v36 + 1);
  *(_BYTE *)v29 = v36;
  *(_QWORD *)(v29 + 8) = v31;
  return result;
}

uint64_t type metadata accessor for ReflectiveIntervalSelectionPhase_iOS()
{
  uint64_t result;

  result = qword_2571506B0;
  if (!qword_2571506B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2417D3394@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t inited;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v8 = sub_2418A84E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24180F814(21, a4);
  sub_24172887C(0, &qword_257150748, MEMORY[0x24BDF4D20], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D5FA0;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 32) = sub_24182F490(1, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 40) = sub_24182F490(2, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 48) = sub_24182F490(3, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 56) = sub_24182F490(4, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 64) = sub_24182F490(5, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 72) = sub_24182F490(6, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 80) = sub_24182F490(7, v12);
  sub_2417D6A0C(inited, (uint64_t)&unk_2511ABFE0, a2, a3, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_2417D359C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (**v61)();
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;

  v81 = a1;
  v2 = sub_2418A84E4();
  v79 = *(_QWORD *)(v2 - 8);
  v80 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v78 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v5, v6);
  v74 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  v8 = *(_QWORD *)(v77 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v77, v10);
  sub_2417D6868(0);
  v12 = v11;
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_257150718, v16);
  v70 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v66 - v19;
  sub_2417D68E0();
  v71 = v21;
  MEMORY[0x24BDAC7A8](v21, v22);
  v72 = (uint64_t)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_257150728, v24);
  v73 = v25;
  MEMORY[0x24BDAC7A8](v25, v26);
  v76 = (uint64_t)&v66 - v27;
  sub_2417D697C();
  MEMORY[0x24BDAC7A8](v28, v29);
  v75 = (uint64_t)&v66 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 33) == 1)
  {
    sub_2417D3BDC(&v85);
    v32 = v85.n128_u64[1];
    v31 = v85.n128_u64[0];
    v33 = v86;
    v34 = v87;
    v35 = v88;
    v36 = v89;
    v37 = v90;
    v38 = v91;
    v39 = v92;
  }
  else
  {
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v39 = 0;
    v38 = 0uLL;
  }
  *(_QWORD *)v15 = v31;
  *((_QWORD *)v15 + 1) = v32;
  *((_QWORD *)v15 + 2) = v33;
  *((_QWORD *)v15 + 3) = v34;
  *((_QWORD *)v15 + 4) = v35;
  *((_QWORD *)v15 + 5) = v36;
  *((_QWORD *)v15 + 6) = v37;
  *(_OWORD *)(v15 + 56) = v38;
  *((_QWORD *)v15 + 9) = v39;
  sub_2417D3DBC((uint64_t)&v15[*(int *)(v12 + 36)]);
  v40 = (uint64_t *)&v15[*(int *)(v12 + 40)];
  *v40 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  sub_2417289A8(v1, (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  v41 = *(unsigned __int8 *)(v8 + 80);
  v42 = (v41 + 16) & ~v41;
  v67 = v42;
  v69 = v42 + v9;
  v68 = v41 | 7;
  v43 = swift_allocObject();
  sub_241731B4C((uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v43 + v42, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  v82 = 0;
  swift_retain();
  v44 = MEMORY[0x24BEE1328];
  sub_2418A96C0();
  v45 = v1;
  v46 = v83;
  v47 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v84;
  sub_2417289A8((uint64_t)v15, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_2417D6868);
  swift_release();
  v49 = &v20[*(int *)(v70 + 36)];
  *(_QWORD *)v49 = sub_2417D6A00;
  *((_QWORD *)v49 + 1) = v43;
  v49[16] = v46;
  *((_QWORD *)v49 + 3) = v48;
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_2417D6868);
  v50 = v77;
  v51 = v74;
  sub_241861F08(v74);
  sub_24172588C(v51, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  v52 = sub_2418A999C();
  v53 = v1 + *(int *)(v50 + 52);
  v54 = *(_BYTE *)v53;
  v55 = *(_QWORD *)(v53 + 8);
  v83 = v54;
  v84 = v55;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, v44, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  LOBYTE(v48) = v82;
  v56 = v72;
  sub_24177371C((uint64_t)v20, v72, &qword_257150718, sub_2417D6868);
  v57 = v56 + *(int *)(v71 + 36);
  *(_QWORD *)v57 = v52;
  *(_BYTE *)(v57 + 8) = v48;
  sub_241773520((uint64_t)v20, &qword_257150718, sub_2417D6868);
  sub_2417289A8(v1, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  v58 = swift_allocObject();
  v59 = v67;
  sub_241731B4C((uint64_t)v47, v58 + v67, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  v60 = v76;
  sub_2417289A8(v56, v76, (uint64_t (*)(_QWORD))sub_2417D68E0);
  v61 = (uint64_t (**)())(v60 + *(int *)(v73 + 36));
  *v61 = sub_2417D6E74;
  v61[1] = (uint64_t (*)())v58;
  v61[2] = 0;
  v61[3] = 0;
  sub_24172588C(v56, (uint64_t (*)(_QWORD))sub_2417D68E0);
  v62 = v78;
  sub_241861034(v78);
  sub_2417289A8(v45, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  v63 = swift_allocObject();
  sub_241731B4C((uint64_t)v47, v63 + v59, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  v64 = v75;
  sub_2417D3394(v62, (void (*)(void))sub_2417D6EC0, v75, 0.0);
  (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v62, v80);
  sub_241773520(v60, &qword_257150728, (void (*)(uint64_t))sub_2417D68E0);
  swift_release();
  return sub_241731B4C(v64, v81, (uint64_t (*)(_QWORD))sub_2417D697C);
}

__n128 sub_2417D3BDC@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 result;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  char v17;
  __n128 v18;
  unint64_t v19;
  unsigned __int8 v20;

  v3 = type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  if (qword_25714B958 != -1)
    swift_once();
  v7 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v8 = sub_2418A7EFC();
  v10 = v9;
  swift_bridgeObjectRelease();

  sub_2417289A8(v1, (uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  sub_241731B4C((uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  v16 = 0;
  v17 = 0;
  sub_24172887C(0, (unint64_t *)&qword_25714D7D0, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2418A9840();
  result = v18;
  v14 = v19;
  v15 = v20;
  a1->n128_u64[0] = v8;
  a1->n128_u64[1] = v10;
  a1[1] = result;
  a1[2].n128_u64[0] = v14;
  a1[2].n128_u8[8] = v15;
  a1[3].n128_u64[0] = 0x747475427478654ELL;
  a1[3].n128_u64[1] = 0xEA00000000006E6FLL;
  a1[4].n128_u64[0] = (unint64_t)sub_2417D6F04;
  a1[4].n128_u64[1] = v12;
  return result;
}

uint64_t sub_2417D3DBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  int *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _BYTE v26[12];
  int v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v3 = type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = &v26[-v10];
  v31 = *(_OWORD *)(v1 + *(int *)(v3 + 44));
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_24172570C(0, &qword_257150738, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  v30 = v32;
  v29 = v33;
  sub_24172570C(0, qword_25714ECD8, v7, v12);
  sub_2418A96E4();
  v13 = v1 + *(int *)(v3 + 52);
  v14 = *(_BYTE *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  LOBYTE(v31) = v14;
  *((_QWORD *)&v31 + 1) = v15;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], v12);
  sub_2418A96E4();
  v28 = *((_QWORD *)&v32 + 1);
  v16 = v32;
  v27 = v33;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v17 = v32;
  sub_2417289A8(v1, (uint64_t)&v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  v18 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v19 = swift_allocObject();
  sub_241731B4C((uint64_t)&v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v19 + v18, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  KeyPath = swift_getKeyPath();
  v21 = (int *)type metadata accessor for ReflectiveIntervalsSelectionPhaseContent();
  *(_QWORD *)(a1 + v21[9]) = KeyPath;
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)a1 = v30;
  *(_QWORD *)(a1 + 16) = v29;
  result = sub_2417D6FB4((uint64_t)v11, a1 + v21[5]);
  v23 = a1 + v21[6];
  v24 = v28;
  *(_QWORD *)v23 = v16;
  *(_QWORD *)(v23 + 8) = v24;
  *(_BYTE *)(v23 + 16) = v27;
  *(_QWORD *)(a1 + v21[7]) = v17;
  v25 = (_QWORD *)(a1 + v21[8]);
  *v25 = sub_2417D6F04;
  v25[1] = v19;
  return result;
}

uint64_t sub_2417D40A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  _QWORD v14[2];
  __int128 v15;

  v2 = sub_2418A8100();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)v14 - v9;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v11 = v15;
  v15 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhase_iOS() + 44));
  v14[1] = v11;
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_24172570C(0, &qword_257150738, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96D8();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v7, v10, v2);
  sub_24172570C(0, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v12);
  sub_2418A96D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
}

uint64_t sub_2417D428C()
{
  uint64_t v0;

  type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  v0 = MEMORY[0x24BEE1328];
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96D8();
  sub_24172887C(0, (unint64_t *)&qword_257155000, v0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  return sub_2418A9810();
}

uint64_t sub_2417D4354(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_2418A84E4();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v30 - v9;
  type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  sub_241861034((uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v7, *MEMORY[0x24BDEB3F0], v2);
  v11 = sub_2418A84D8();
  v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v7, v2);
  v12(v10, v2);
  if ((v11 & 1) != 0)
  {
    v31 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_24183D670(0, 0, 0);
    v13 = v31;
    v14 = *(_QWORD *)(a1 + 16);
    if (v14)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_2418A9624();
      v15 = sub_2418A9900();
      v17 = v16;
      swift_release();
      v19 = *(_QWORD *)(v13 + 16);
      v18 = *(_QWORD *)(v13 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_24183D670(v18 > 1, v19 + 1, 1);
        v13 = v31;
      }
      *(_QWORD *)(v13 + 16) = v19 + 1;
      v20 = v13 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      v21 = v14 - 1;
      if (v21)
      {
        v23 = 16 * v19;
        v24 = v19 + 2;
        v25 = (uint64_t *)(a1 + 56);
        do
        {
          v26 = *(v25 - 1);
          v27 = *v25;
          v28 = *(_QWORD *)(v13 + 24);
          v31 = v13;
          swift_retain();
          if (v24 - 1 >= v28 >> 1)
          {
            sub_24183D670(v28 > 1, v24, 1);
            v13 = v31;
          }
          *(_QWORD *)(v13 + 16) = v24;
          v29 = v13 + v23;
          *(_QWORD *)(v29 + 48) = v26;
          *(_QWORD *)(v29 + 56) = v27;
          v23 += 16;
          ++v24;
          v25 += 2;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x24269C114](v13);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *sub_2417D45B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  char v66;
  uint64_t v67;
  void *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void *v77;
  char *v78;
  uint64_t (*v79)(uint64_t);
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t KeyPath;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 aBlock;
  uint64_t (*v111)(uint64_t);
  void *v112;
  uint64_t (*v113)();
  uint64_t v114;
  uint64_t v115;

  v95 = sub_2418A9A44();
  v106 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95, v1);
  v105 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2418A9A68();
  v103 = *(_QWORD *)(v3 - 8);
  v104 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v102 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  v101 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109, v6);
  v108 = v7;
  v92 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v8, v9);
  v97 = (uint64_t)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_2418A9A38();
  v100 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91, v11);
  v99 = (char **)((char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v107 = sub_2418A9A80();
  v98 = *(_QWORD *)(v107 - 8);
  v14 = MEMORY[0x24BDAC7A8](v107, v13);
  v96 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v93 = (char *)&v82 - v17;
  KeyPath = sub_2418A8238();
  v88 = *(_QWORD *)(KeyPath - 8);
  MEMORY[0x24BDAC7A8](KeyPath, v18);
  v87 = (uint64_t)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_2418A8100();
  v20 = *(_QWORD *)(v90 - 8);
  v22 = MEMORY[0x24BDAC7A8](v90, v21);
  v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v22, v25);
  v28 = (char *)&v82 - v27;
  v30 = MEMORY[0x24BDAC7A8](v26, v29);
  v32 = (char *)&v82 - v31;
  MEMORY[0x24BDAC7A8](v30, v33);
  v35 = (char *)&v82 - v34;
  v36 = *(_QWORD *)(v0 + 16);
  v37 = *(_QWORD *)(v0 + 24);
  v94 = v0;
  v38 = *(_BYTE *)(v0 + 32);
  *(_QWORD *)&aBlock = v36;
  *((_QWORD *)&aBlock + 1) = v37;
  LOBYTE(v111) = v38;
  sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  result = MEMORY[0x24269C00C](&v115);
  if ((v115 & 1) == 0)
  {
    v84 = v32;
    v82 = v24;
    v83 = v28;
    v85 = v35;
    v86 = v20;
    *(_QWORD *)&aBlock = v36;
    *((_QWORD *)&aBlock + 1) = v37;
    LOBYTE(v111) = v38;
    LOBYTE(v115) = 1;
    sub_2418A9810();
    v40 = v94;
    v41 = *(int *)(v109 + 44);
    aBlock = *(_OWORD *)(v94 + v41);
    sub_24172570C(0, &qword_257150738, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    swift_retain();
    sub_2418A96CC();
    v42 = v115;
    swift_getKeyPath();
    swift_getKeyPath();
    *(_QWORD *)&aBlock = v42;
    sub_2418A8424();
    aBlock = *(_OWORD *)(v40 + v41);
    sub_2418A96CC();
    if (v115 == 2)
    {
      swift_retain();
      v54 = v87;
      sub_241862158(v87);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      v55 = (uint64_t)v82;
      sub_2418A8418();
      swift_release();
      swift_release();
      swift_release();
      v56 = sub_2418A8178();
      v57 = v90;
      v58 = v86;
      v59 = v85;
      v60 = (uint64_t)v83;
      if ((v56 & 1) != 0)
        (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v83, v55, v90);
      else
        sub_241847894(v55, (uint64_t)v83);
      v61 = KeyPath;
      v62 = v55;
      v63 = v40;
      v64 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v64(v62, v57);
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v54, v61);
      swift_getKeyPath();
      swift_getKeyPath();
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v59, v60, v57);
      swift_retain();
      sub_2418A8424();
      v64(v60, v57);
      v40 = v63;
      v43 = v107;
      v44 = v93;
      v45 = (uint64_t)v92;
      v46 = v91;
    }
    else
    {
      v43 = v107;
      v44 = v93;
      v45 = (uint64_t)v92;
      v46 = v91;
      if (v115 != 1)
      {
LABEL_10:
        swift_retain();
        sub_241794684(2, 0);
        swift_release();
        sub_241762EFC(0, &qword_257150740);
        objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_setAnimationsEnabled_, 0);
        v65 = v40 + *(int *)(v109 + 52);
        v66 = *(_BYTE *)v65;
        v67 = *(_QWORD *)(v65 + 8);
        LOBYTE(aBlock) = v66;
        *((_QWORD *)&aBlock + 1) = v67;
        LOBYTE(v115) = 0;
        sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
        sub_2418A96D8();
        sub_241762EFC(0, (unint64_t *)&qword_2543915E8);
        v68 = (void *)sub_2418AA0D4();
        v69 = v96;
        sub_2418A9A74();
        v70 = v97;
        sub_241861F08(v97);
        sub_24172588C(v70, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
        v72 = v99;
        v71 = v100;
        *v99 = 400;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v71 + 104))(v72, *MEMORY[0x24BEE5410], v46);
        MEMORY[0x24269C294](v69, v72);
        (*(void (**)(_QWORD *, uint64_t))(v71 + 8))(v72, v46);
        v73 = *(void (**)(char *, uint64_t))(v98 + 8);
        v73(v69, v43);
        sub_2417289A8(v40, v45, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
        v74 = v43;
        v75 = (*(unsigned __int8 *)(v101 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
        v76 = swift_allocObject();
        sub_241731B4C(v45, v76 + v75, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
        v113 = sub_2417D6F14;
        v114 = v76;
        *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
        *((_QWORD *)&aBlock + 1) = 1107296256;
        v111 = sub_2417599E8;
        v112 = &block_descriptor_6;
        v77 = _Block_copy(&aBlock);
        swift_release();
        v78 = v102;
        sub_2418A9A5C();
        *(_QWORD *)&aBlock = MEMORY[0x24BEE4AF8];
        v79 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
        sub_24172159C((unint64_t *)&unk_25714F340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        sub_24172570C(0, &qword_25714D438, v79, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
        sub_24175D3CC();
        v80 = v105;
        v81 = v95;
        sub_2418AA248();
        MEMORY[0x24269C8C4](v44, v78, v80, v77);
        _Block_release(v77);

        (*(void (**)(char *, uint64_t))(v106 + 8))(v80, v81);
        (*(void (**)(char *, uint64_t))(v103 + 8))(v78, v104);
        return (_QWORD *)((uint64_t (*)(char *, uint64_t))v73)(v44, v74);
      }
      sub_24172570C(0, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
      swift_retain();
      v47 = v85;
      sub_2418A96CC();
      KeyPath = swift_getKeyPath();
      swift_getKeyPath();
      v48 = v44;
      v49 = v45;
      v50 = v86;
      v51 = v90;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v84, v47, v90);
      swift_retain();
      sub_2418A8424();
      v52 = *(void (**)(char *, uint64_t))(v50 + 8);
      v45 = v49;
      v44 = v48;
      v53 = v47;
      v43 = v107;
      v52(v53, v51);
    }
    swift_release();
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_2417D4F34()
{
  return sub_2418A8A9C();
}

uint64_t sub_2417D4F54()
{
  return sub_2418A8A9C();
}

uint64_t sub_2417D4F74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2418A8238();
  MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_2418A8AA8();
}

uint64_t sub_2417D4FF4()
{
  sub_2418A8A24();
  type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  return sub_2418A89A0();
}

uint64_t sub_2417D502C()
{
  sub_2418A8A24();
  type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  return sub_2418A89A0();
}

uint64_t sub_2417D506C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    v9 = a2[6];
    v10 = a3[8];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8238();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[9];
    v16 = (_QWORD *)(v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2418A8EB0();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v21 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v22 = (char *)v16 + v21;
      v23 = (char *)v17 + v21;
      v24 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v25 = a3[10];
    v26 = (_QWORD *)(v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v29 = a3[11];
    v30 = a3[12];
    v31 = (_QWORD *)(v4 + v29);
    v32 = (uint64_t *)((char *)a2 + v29);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = v4 + v30;
    v35 = (uint64_t)a2 + v30;
    v36 = sub_2418A8100();
    v37 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
    swift_retain();
    v38(v34, v35, v36);
    sub_24172570C(0, qword_25714ECD8, v37, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    *(_QWORD *)(v34 + *(int *)(v39 + 28)) = *(_QWORD *)(v35 + *(int *)(v39 + 28));
    v40 = a3[13];
    v41 = v4 + v40;
    v42 = (uint64_t)a2 + v40;
    *(_BYTE *)v41 = *(_BYTE *)v42;
    *(_QWORD *)(v41 + 8) = *(_QWORD *)(v42 + 8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2417D53F4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + a2[8];
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8238();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + a2[9];
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A8EB0();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v9 = v6 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v10 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  v11 = a1 + a2[10];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  swift_release();
  v13 = a1 + a2[12];
  v14 = sub_2418A8100();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  sub_24172570C(0, qword_25714ECD8, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  swift_release();
  return swift_release();
}

uint64_t sub_2417D5628(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = a3[8];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A8238();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = a3[9];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_2418A8EB0();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v19 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v20 = (char *)v14 + v19;
    v21 = (char *)v15 + v19;
    v22 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  else
  {
    *v24 = *v25;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v27 = a3[11];
  v28 = a3[12];
  v29 = (_QWORD *)(a1 + v27);
  v30 = (_QWORD *)(a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = a1 + v28;
  v33 = a2 + v28;
  v34 = sub_2418A8100();
  v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
  swift_retain();
  v36(v32, v33, v34);
  sub_24172570C(0, qword_25714ECD8, v35, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v32 + *(int *)(v37 + 28)) = *(_QWORD *)(v33 + *(int *)(v37 + 28));
  v38 = a3[13];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_BYTE *)v39 = *(_BYTE *)v40;
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2417D5988(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[8];
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8];
    sub_24172B778(a1 + v7, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8]);
    sub_24172570C(0, &qword_25714F248, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8238();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v12 = a3[9];
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_24172B778(a1 + v12, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2418A8EB0();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v18 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v19 = (char *)v13 + v18;
      v20 = (char *)v14 + v18;
      v21 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v22 = a3[10];
    v23 = (_QWORD *)(a1 + v22);
    v24 = (_QWORD *)(a2 + v22);
    v25 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778(a1 + v22, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v25, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v23, v24, v26);
    }
    else
    {
      *v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v27 = a3[11];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_retain();
  swift_release();
  v30 = a3[12];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_2418A8100();
  v34 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  sub_24172570C(0, qword_25714ECD8, v34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v31 + *(int *)(v35 + 28)) = *(_QWORD *)(v32 + *(int *)(v35 + 28));
  swift_retain();
  swift_release();
  v36 = a3[13];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_BYTE *)v37 = *(_BYTE *)v38;
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2417D5D8C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A8238();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[9];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v17 = v16;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_2418A8EB0();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v14, v15, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
    }
    v21 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v22 = &v14[v21];
    v23 = &v15[v21];
    v24 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  v25 = a3[10];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v29 = v28;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v26, v27, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  v31 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_2418A8100();
  v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  sub_24172570C(0, qword_25714ECD8, v35, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v32 + *(int *)(v36 + 28)) = *(_QWORD *)(v33 + *(int *)(v36 + 28));
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_2417D6098(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[8];
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8];
    sub_24172B778(a1 + v7, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8]);
    sub_24172570C(0, &qword_25714F248, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8238();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    v14 = a3[9];
    v15 = (char *)(a1 + v14);
    v16 = (char *)(a2 + v14);
    sub_24172B778(a1 + v14, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2418A8EB0();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      v22 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v23 = &v15[v22];
      v24 = &v16[v22];
      v25 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    v26 = a3[10];
    v27 = (void *)(a1 + v26);
    v28 = (const void *)(a2 + v26);
    v29 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778(a1 + v26, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v29, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v31 = v30;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v27, v28, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
  }
  v33 = a3[11];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_release();
  v38 = a3[12];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = sub_2418A8100();
  v42 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
  sub_24172570C(0, qword_25714ECD8, v42, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v39 + *(int *)(v43 + 28)) = *(_QWORD *)(v40 + *(int *)(v43 + 28));
  swift_release();
  v44 = a3[13];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_BYTE *)v45 = *(_BYTE *)v46;
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
  swift_release();
  return a1;
}

uint64_t sub_2417D6460()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D646C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_257150650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[8];
    }
    else
    {
      sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[9];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[10];
        }
        else
        {
          sub_24172570C(0, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a3[12];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2417D65B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417D65C0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_257150650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[8];
    }
    else
    {
      sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[9];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[10];
        }
        else
        {
          sub_24172570C(0, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a4[12];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2417D6704()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_24172570C(319, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
      {
        sub_24172570C(319, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_2417D6854()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2417D6868(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_257150708)
  {
    v2 = type metadata accessor for ReflectiveIntervalsSelectionPhaseContent();
    v3 = sub_24172159C(&qword_257150710, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalsSelectionPhaseContent, (uint64_t)&unk_2418D52E0);
    v5 = type metadata accessor for StateOfMindEntryPhase_iOS(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_257150708);
  }
}

void sub_2417D68E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150720)
  {
    sub_241721CBC(255, &qword_257150718, sub_2417D6868);
    sub_24172835C(255, &qword_25714C790, MEMORY[0x24BEE1328], MEMORY[0x24BEE1340], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEEBF0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150720);
  }
}

void sub_2417D697C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150730)
  {
    sub_241721CBC(255, &qword_257150728, (void (*)(uint64_t))sub_2417D68E0);
    sub_2417782FC(255);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150730);
  }
}

uint64_t sub_2417D6A00()
{
  return sub_2417D6E80(sub_2417D40A4);
}

__n128 sub_2417D6A0C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  double v12;
  int64_t v13;
  uint64_t v14;
  double *v16;
  unint64_t v17;
  double v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __n128 result;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;

  v7 = v6;
  v12 = a6 - a5;
  v13 = *(_QWORD *)(a2 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v29 = MEMORY[0x24BEE4AF8];
    sub_24183D590(0, v13, 0);
    v14 = v29;
    v16 = (double *)(a2 + 32);
    v17 = *(_QWORD *)(v29 + 16);
    do
    {
      v18 = *v16;
      v28 = v14;
      v19 = *(_QWORD *)(v14 + 24);
      if (v17 >= v19 >> 1)
        sub_24183D590(v19 > 1, v17 + 1, 1);
      *(_QWORD *)(v14 + 16) = v17 + 1;
      *(double *)(v14 + 8 * v17 + 32) = (v18 - a5) / v12;
      ++v16;
      ++v17;
      --v13;
    }
    while (v13);
    v7 = v6;
  }
  sub_24182FB0C(a1, v14);
  a3();
  swift_bridgeObjectRelease();
  sub_2418A99FC();
  sub_2418A9A08();
  sub_2418A873C();
  v20 = sub_2418A9960();
  v22 = v21;
  v23 = sub_2418A882C();
  v24 = sub_2418A90D8();
  sub_24177371C(v7, a4, &qword_257150728, (void (*)(uint64_t))sub_2417D68E0);
  swift_bridgeObjectRelease();
  sub_2417D697C();
  v26 = a4 + *(int *)(v25 + 36);
  *(_QWORD *)v26 = v28;
  result = v30;
  *(__n128 *)(v26 + 8) = v30;
  *(_QWORD *)(v26 + 24) = v31;
  *(_QWORD *)(v26 + 32) = v32;
  *(_QWORD *)(v26 + 40) = v23;
  *(_BYTE *)(v26 + 48) = v24;
  *(_QWORD *)(v26 + 56) = v20;
  *(_QWORD *)(v26 + 64) = v22;
  return result;
}

uint64_t objectdestroyTm_10()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);

  v1 = (int *)type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = v2 + v1[8];
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8238();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  v5 = v2 + v1[9];
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v8 = v5 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v9 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = v2 + v1[10];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  v12 = v2 + v1[12];
  v13 = sub_2418A8100();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  sub_24172570C(0, qword_25714ECD8, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2417D6E74()
{
  return sub_2417D6E80((uint64_t (*)(uint64_t))sub_2417D428C);
}

uint64_t sub_2417D6E80(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReflectiveIntervalSelectionPhase_iOS() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_2417D6EC0(uint64_t a1)
{
  type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  return sub_2417D4354(a1);
}

uint64_t sub_2417D6F14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReflectiveIntervalSelectionPhase_iOS() - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 40))();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

_QWORD *sub_2417D6F7C()
{
  type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  return sub_2417D45B4();
}

uint64_t sub_2417D6FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2417D7014()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150750;
  if (!qword_257150750)
  {
    sub_2417D697C();
    v2 = v1;
    v3[0] = sub_2417D7094();
    v3[1] = sub_24172159C(&qword_25714DBA8, (uint64_t (*)(uint64_t))sub_2417782FC, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150750);
  }
  return result;
}

unint64_t sub_2417D7094()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150758;
  if (!qword_257150758)
  {
    sub_241721CBC(255, &qword_257150728, (void (*)(uint64_t))sub_2417D68E0);
    v2 = v1;
    v3[0] = sub_2417D7114();
    v3[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150758);
  }
  return result;
}

unint64_t sub_2417D7114()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150760;
  if (!qword_257150760)
  {
    sub_2417D68E0();
    v2 = v1;
    v3[0] = sub_2417D717C();
    v3[1] = sub_241740590();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150760);
  }
  return result;
}

unint64_t sub_2417D717C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150768;
  if (!qword_257150768)
  {
    sub_241721CBC(255, &qword_257150718, sub_2417D6868);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257150770, (uint64_t (*)(uint64_t))sub_2417D6868, (uint64_t)&unk_2418D2338);
    v3[1] = sub_2417D7214();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150768);
  }
  return result;
}

unint64_t sub_2417D7214()
{
  unint64_t result;

  result = qword_257150778;
  if (!qword_257150778)
  {
    result = MEMORY[0x24269D47C](&unk_2418D95E4, &type metadata for OnFirstAppear);
    atomic_store(result, (unint64_t *)&qword_257150778);
  }
  return result;
}

uint64_t destroy for AddCustomReminderRow(uint64_t a1)
{

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AddCustomReminderRow(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AddCustomReminderRow(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AddCustomReminderRow(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedAssessmentInformationalContent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedAssessmentInformationalContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AddCustomReminderRow()
{
  return &type metadata for AddCustomReminderRow;
}

uint64_t sub_2417D74D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417D74E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;

  v24 = a1;
  sub_2417D7ED8();
  v3 = v2;
  v21 = *((_QWORD *)v2 - 1);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417D7F34(0);
  v8 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  v23 = v8;
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  v13 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v1 + 48);
  v25 = v1;
  sub_2417D801C(v1);
  sub_2418A9708();
  v30 = *(_OWORD *)(v1 + 40);
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  v14 = swift_allocObject();
  v15 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v14 + 64) = *(_QWORD *)(v1 + 48);
  sub_2417D801C(v1);
  v16 = type metadata accessor for CustomReminderView(0);
  v19 = sub_24172159C((unint64_t *)&qword_25714C590, (uint64_t (*)(uint64_t))sub_2417D7ED8, MEMORY[0x24BDF43B0]);
  v20 = sub_24172159C(&qword_25714CFF0, type metadata accessor for CustomReminderView, (uint64_t)&unk_2418D4F88);
  sub_2418A94D4();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, void *))(v21 + 8))(v6, v3);
  v26 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC390);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v26 = v3;
  v27 = v16;
  v28 = v19;
  v29 = v20;
  swift_getOpaqueTypeConformance2();
  v17 = v22;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v11, v17);
}

uint64_t sub_2417D781C(__int128 *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  char v10;
  BOOL v11;
  __int128 v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;

  v15 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = *((id *)&v15 + 1);
  sub_2418A8418();
  swift_release();
  swift_release();
  sub_2417D8118((uint64_t)&v15);
  if (v9 == 1)
  {
    v3 = *((_QWORD *)a1 + 3);
    v5 = *((_BYTE *)a1 + 32);
    *(_QWORD *)&v12 = *((_QWORD *)a1 + 2);
    v4 = v12;
    sub_24174DDB4((uint64_t)&v12);
    sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
    v7 = v6;
    swift_retain();
    MEMORY[0x24269C00C](&v14, v7);
    *(_QWORD *)&v9 = v4;
    *((_QWORD *)&v9 + 1) = v3;
    v10 = v5;
    v13 = (v14 & 1) == 0;
    sub_2418A9810();
    sub_241793C9C((uint64_t)&v12);
    return swift_release();
  }
  else
  {
    v9 = *(__int128 *)((char *)a1 + 40);
    v12 = *(__int128 *)((char *)a1 + 40);
    sub_2417D8140((uint64_t)&v9 + 8, (uint64_t)&v14);
    sub_24174DDB4((uint64_t)&v14);
    sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
    sub_2418A96CC();
    v12 = v9;
    v11 = !v13;
    sub_2418A96D8();
    return sub_2417D81F0((uint64_t)&v9);
  }
}

uint64_t sub_2417D79D0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  __int128 v24;

  if (qword_25714B958 != -1)
    swift_once();
  v4 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v5 = sub_2418A7EFC();
  v7 = v6;
  swift_bridgeObjectRelease();

  *(_QWORD *)&v24 = v5;
  *((_QWORD *)&v24 + 1) = v7;
  sub_241721040();
  v8 = sub_2418A92D0();
  v10 = v9;
  v12 = v11;
  v24 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v13 = *((id *)&v24 + 1);
  sub_2418A8418();
  swift_release();
  swift_release();
  sub_2417D8118((uint64_t)&v24);
  if (v23 == 1)
    sub_2418A8E74();
  else
    sub_2418A8E68();
  v14 = v12 & 1;
  v15 = sub_2418A9270();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  sub_2417289EC(v8, v10, v14);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v19 & 1;
  *(_QWORD *)(a2 + 24) = v21;
  return result;
}

uint64_t sub_2417D7BB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  void *v24;
  _BYTE *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;

  sub_2417D80B8(0, &qword_25714C0D8, MEMORY[0x24BDEB580]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (uint64_t *)&v34[-v6];
  v8 = sub_2418A8100();
  v39 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v38 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = &v34[-v13];
  v15 = type metadata accessor for CustomReminderModel();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = &v34[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v23 = &v34[-v22];
  v24 = *(void **)(a1 + 8);
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  *((_WORD *)v23 + 8) = 257;
  v25 = &v34[*(int *)(v21 + 32) - v22];
  v26 = sub_2418A7EC0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = v24;
  sub_2418A80D0();
  v40 = *(_OWORD *)(a1 + 40);
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  v36 = v42;
  v37 = v41;
  v35 = v43;
  *v7 = swift_getKeyPath();
  sub_2417D80B8(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for NotificationSettingsModel();
  sub_24172159C((unint64_t *)&qword_25714D020, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsModel, (uint64_t)&protocol conformance descriptor for NotificationSettingsModel);
  *a2 = sub_2418A8760();
  a2[1] = v28;
  v29 = type metadata accessor for CustomReminderView(0);
  sub_2417A76A8((uint64_t)v23, (uint64_t)v19);
  sub_2418A96C0();
  sub_2417A76EC((uint64_t)v23);
  v30 = v39;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 16))(v38, v14, v8);
  sub_2418A96C0();
  (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v14, v8);
  v31 = (char *)a2 + *(int *)(v29 + 28);
  v32 = v36;
  *(_QWORD *)v31 = v37;
  *((_QWORD *)v31 + 1) = v32;
  v31[16] = v35;
  return sub_241751234((uint64_t)v7, (uint64_t)a2 + *(int *)(v29 + 32));
}

uint64_t sub_2417D7E98@<X0>(uint64_t a1@<X8>)
{
  return sub_2417D74E0(a1);
}

void sub_2417D7ED8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C580)
  {
    v0 = sub_2418A9720();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C580);
  }
}

void sub_2417D7F34(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_257150780)
  {
    sub_2417D7ED8();
    v5[0] = v2;
    v5[1] = type metadata accessor for CustomReminderView(255);
    v5[2] = sub_24172159C((unint64_t *)&qword_25714C590, (uint64_t (*)(uint64_t))sub_2417D7ED8, MEMORY[0x24BDF43B0]);
    v5[3] = sub_24172159C(&qword_25714CFF0, type metadata accessor for CustomReminderView, (uint64_t)&unk_2418D4F88);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF3650], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257150780);
  }
}

uint64_t sub_2417D800C()
{
  uint64_t v0;

  return sub_2417D781C((__int128 *)(v0 + 16));
}

uint64_t sub_2417D8014@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417D79D0(*(__int128 **)(v1 + 16), a1);
}

uint64_t sub_2417D801C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 8);
  swift_retain();
  v3 = v2;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t objectdestroyTm_11()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2417D80A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2417D7BB4(v1 + 16, a1);
}

void sub_2417D80B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2418A84E4();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2417D8118(uint64_t a1)
{

  return a1;
}

uint64_t sub_2417D8140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417D8184();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2417D8184()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150788)
  {
    sub_24172887C(255, &qword_257150790, MEMORY[0x24BEE1328], MEMORY[0x24BDEB3A8]);
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150788);
  }
}

uint64_t sub_2417D81F0(uint64_t a1)
{
  swift_release();
  return a1;
}

unint64_t sub_2417D821C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_257150798;
  if (!qword_257150798)
  {
    sub_2417D8320();
    v2 = v1;
    sub_2417D7ED8();
    v4[2] = v3;
    v4[3] = type metadata accessor for CustomReminderView(255);
    v4[4] = sub_24172159C((unint64_t *)&qword_25714C590, (uint64_t (*)(uint64_t))sub_2417D7ED8, MEMORY[0x24BDF43B0]);
    v4[5] = sub_24172159C(&qword_25714CFF0, type metadata accessor for CustomReminderView, (uint64_t)&unk_2418D4F88);
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257150798);
  }
  return result;
}

void sub_2417D8320()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571507A0[0])
  {
    sub_2417D7F34(255);
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, qword_2571507A0);
  }
}

uint64_t sub_2417D8384()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2417D838C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_2417D8450(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v30;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = *(_DWORD *)(v3 + 80);
  v6 = a3[2];
  v5 = a3[3];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v3 + 64) + v8;
  v10 = *(_QWORD *)(v5 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v7 + 64) + v11;
  v13 = *(_QWORD *)(v10 + 64) + 7;
  v14 = v8 | v4 | v11;
  if (v14 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v3 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || ((((v13 + ((v12 + ((v9 + ((v4 + 1) & ~v4)) & ~v8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v25 = (uint64_t *)(v17 + ((v14 & 0xF8 ^ 0x1F8) & (v14 + 16)));
  }
  else
  {
    v18 = ~v8;
    v19 = ~v11;
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v30 = v5;
    v20 = ((unint64_t)a1 + v4 + 1) & ~v4;
    v21 = ((unint64_t)a2 + v4 + 1) & ~v4;
    (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v20, v21);
    v22 = (v20 + v9) & v18;
    v23 = (v21 + v9) & v18;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v22, v23, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))((v22 + v12) & v19, (v23 + v12) & v19, v30);
    v24 = (_QWORD *)((v13 + ((v22 + v12) & v19)) & 0xFFFFFFFFFFFFFFF8);
    v25 = a1;
    v26 = (_QWORD *)((v13 + ((v23 + v12) & v19)) & 0xFFFFFFFFFFFFFFF8);
    *v24 = *v26;
    v24[1] = v26[1];
    v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    v28 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v27 = *v28;
    v27[1] = v28[1];
    swift_retain();
  }
  swift_retain();
  return v25;
}

uint64_t sub_2417D8624(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(a2[4] - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v4);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(a2[2] - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  (*(void (**)(unint64_t))(*(_QWORD *)(a2[3] - 8) + 8))((v7
                                                                             + *(_QWORD *)(v6 + 64)
                                                                             + *(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8)
                                                                                                  + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80));
  swift_release();
  return swift_release();
}

_BYTE *sub_2417D86E0(_BYTE *a1, _BYTE *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;

  *a1 = *a2;
  v5 = *(_QWORD *)(a3[4] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(a3[2] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v13, v14);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(a3[3] - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64) + 7;
  v22 = (_QWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v22[1] = v23[1];
  v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_retain();
  swift_retain();
  return a1;
}

_BYTE *sub_2417D8808(_BYTE *a1, _BYTE *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;

  *a1 = *a2;
  v5 = *(_QWORD *)(a3[4] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(a3[2] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v13, v14);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(a3[3] - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 24))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64) + 7;
  v22 = (_QWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_retain();
  swift_release();
  v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_retain();
  swift_release();
  return a1;
}

_BYTE *sub_2417D8944(_BYTE *a1, _BYTE *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;

  *a1 = *a2;
  v5 = *(_QWORD *)(a3[4] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(a3[2] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v13, v14);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(a3[3] - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64) + 7;
  v22 = (_OWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_OWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  *(_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_BYTE *sub_2417D8A48(_BYTE *a1, _BYTE *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;

  *a1 = *a2;
  v5 = *(_QWORD *)(a3[4] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(a3[2] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v13, v14);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(a3[3] - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 40))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64) + 7;
  v22 = (_QWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_release();
  v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_release();
  return a1;
}

uint64_t sub_2417D8B74(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  unint64_t v26;
  int v27;

  v4 = a3[4];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v8 = a3[2];
  v7 = a3[3];
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v6 <= v10)
    v11 = *(_DWORD *)(v9 + 84);
  else
    v11 = *(_DWORD *)(v5 + 84);
  v12 = *(_QWORD *)(v7 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  if (v11 <= v13)
    v11 = *(_DWORD *)(v12 + 84);
  if (v11 <= 0x7FFFFFFE)
    v11 = 2147483646;
  if (!a2)
    return 0;
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = *(_QWORD *)(v5 + 64);
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = *(_QWORD *)(v9 + 64) + v17;
  v19 = *(_QWORD *)(v12 + 64) + 7;
  if (v11 < a2)
  {
    if (((((((v19 + ((v18 + ((v15 + v16 + ((v14 + 1) & ~v14)) & ~v16)) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v20 = 2;
    else
      v20 = a2 - v11 + 1;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v22 = v21;
    else
      v22 = 0;
    __asm { BR              X22 }
  }
  v24 = (a1 + v14 + 1) & ~v14;
  if (v6 == v11)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v13 = *(unsigned int *)(v5 + 84);
    v7 = v4;
    return v25(v24, v13, v7);
  }
  v24 = (v24 + v15 + v16) & ~v16;
  if (v10 == v11)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v13 = *(unsigned int *)(v9 + 84);
    v7 = v8;
    return v25(v24, v13, v7);
  }
  v24 = (v18 + v24) & ~v17;
  if ((_DWORD)v13 == v11)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v25(v24, v13, v7);
  }
  v26 = *(_QWORD *)(((v19 + v24) & 0xFFFFFFFFFFFFF8) + 8);
  if (v26 >= 0xFFFFFFFF)
    LODWORD(v26) = -1;
  v27 = v26 - 1;
  if (v27 < 0)
    v27 = -1;
  return (v27 + 1);
}

void sub_2417D8D60(unsigned int *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  unsigned int v13;

  v5 = *(_QWORD *)(a4[4] - 8);
  v7 = a4[2];
  v6 = a4[3];
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v8 + 84))
    v9 = *(_DWORD *)(v8 + 84);
  else
    v9 = *(_DWORD *)(v5 + 84);
  v10 = *(_QWORD *)(v6 - 8);
  if (v9 <= *(_DWORD *)(v10 + 84))
    v9 = *(_DWORD *)(v10 + 84);
  if (v9 <= 0x7FFFFFFE)
    v9 = 2147483646;
  if (v9 >= a3)
  {
    v12 = 0;
    if (a2 <= v9)
      goto LABEL_20;
  }
  else
  {
    if (((((*(_DWORD *)(v10 + 64)
           + 7
           + ((*(_DWORD *)(v8 + 64)
             + *(unsigned __int8 *)(v10 + 80)
             + ((*(_DWORD *)(v5 + 64)
               + *(unsigned __int8 *)(v8 + 80)
               + ((*(unsigned __int8 *)(v5 + 80) + 1) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v8 + 80))) & ~*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v11 = a3 - v9 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 < 2)
      v12 = 0;
    if (a2 <= v9)
LABEL_20:
      __asm { BR              X24 }
  }
  if (((((*(_DWORD *)(v10 + 64)
         + 7
         + ((*(_DWORD *)(v8 + 64)
           + *(unsigned __int8 *)(v10 + 80)
           + ((*(_DWORD *)(v5 + 64)
             + *(unsigned __int8 *)(v8 + 80)
             + ((*(unsigned __int8 *)(v5 + 80) + 1) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v8 + 80))) & ~*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v13 = ~v9 + a2;
    bzero(a1, ((((*(_QWORD *)(v10 + 64)+ 7+ ((*(_QWORD *)(v8 + 64)+ *(unsigned __int8 *)(v10 + 80)+ ((*(_QWORD *)(v5 + 64)+ *(unsigned __int8 *)(v8 + 80)+ ((*(unsigned __int8 *)(v5 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v13;
  }
  __asm { BR              X10 }
}

void sub_2417D8EC8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2417D8F94);
}

void sub_2417D8ED0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2417D8ED8);
  JUMPOUT(0x2417D8F94);
}

void sub_2417D8F20()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2417D8F94);
}

void sub_2417D8F28()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2417D8F94);
}

void sub_2417D8F30(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (a2)
  {
    if (v3 != v4 && v2 != v4)
      JUMPOUT(0x2417D8F3CLL);
    JUMPOUT(0x2417D8F50);
  }
  JUMPOUT(0x2417D8F94);
}

void type metadata accessor for ScrollableWithPinnedFooter()
{
  JUMPOUT(0x24269D3E0);
}

uint64_t sub_2417D8FBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417D8FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_2417D9010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_2418AA1E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

void sub_2417D904C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v21 = a1;
  v20 = a9;
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *))(v19 + 16))((char *)&v20 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = a5;
  v31 = a6;
  v32 = a7;
  v33 = a8;
  v34 = a10;
  v35 = a11;
  v36 = v11;
  v22 = a5;
  v23 = a6;
  v24 = a7;
  v25 = a8;
  v26 = a10;
  v27 = a11;
  v28 = a3;
  v29 = a4;
  sub_2417D92A8(v21, v20);
}

uint64_t sub_2417D914C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *);
  uint64_t v10;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *))(v5 + 16);
  v8(v7);
  ((void (*)(uint64_t, char *, uint64_t))v8)(a3, v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a2);
}

uint64_t sub_2417D91E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v6 = *(_QWORD *)(a3 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1, a2);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void (*)(void))MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)&v17 - v12;
  v11();
  v14 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v14(v13, v9, a3);
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v9, a3);
  v14(a4, v13, a3);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, a3);
}

void sub_2417D92A8(char a1@<W0>, _BYTE *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for ScrollableWithPinnedFooter();
}

double sub_2417D9308(int *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double *v10;
  double result;
  double v12;
  uint64_t v13;

  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v1 + a1[17], v4, v5);
  v8 = v3(v7);
  v2(v8);
  v9 = (double *)(v1 + a1[20]);
  sub_2418A96C0();
  *v9 = v12;
  *((_QWORD *)v9 + 1) = v13;
  v10 = (double *)(v1 + a1[21]);
  sub_2418A96C0();
  result = v12;
  *v10 = v12;
  *((_QWORD *)v10 + 1) = v13;
  return result;
}

uint64_t sub_2417D93C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  void (*v56)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[2];
  _QWORD v102[2];
  _QWORD v103[2];
  uint64_t v104;
  _QWORD v105[2];
  _QWORD v106[5];

  v82 = a3;
  v4 = *(_QWORD *)(*(a1 - 1) + 64);
  v78 = *(a1 - 1);
  v79 = v4;
  v5 = MEMORY[0x24BDAC7A8](a1, a2);
  v77 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = *(_QWORD *)(v5 + 16);
  sub_2417DA310();
  v7 = sub_2418A87FC();
  v8 = a1[5];
  v81 = sub_24177AEFC();
  v106[0] = v8;
  v106[1] = v81;
  v9 = v8;
  v61 = v8;
  v65 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v7, v106);
  v10 = sub_2418A84B4();
  v69 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v64 = (char *)&v59 - v12;
  sub_24172835C(255, &qword_257150828, MEMORY[0x24BEE0D00], MEMORY[0x24BEE0D10], MEMORY[0x24BDF06E0]);
  v13 = sub_2418A87FC();
  v76 = *(_QWORD *)(v13 - 8);
  v73 = v13;
  MEMORY[0x24BDAC7A8](v13, v13);
  v84 = (char *)&v59 - v14;
  v15 = sub_2418A87FC();
  v80 = *(_QWORD *)(v15 - 8);
  v66 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v70 = (char *)&v59 - v17;
  v18 = a1[3];
  sub_24172835C(255, &qword_257150830, MEMORY[0x24BDEBF80], MEMORY[0x24BDEBF68], MEMORY[0x24BDF06B8]);
  v62 = v18;
  v19 = sub_2418A87FC();
  v20 = sub_2418AA1E8();
  v21 = a1[6];
  v22 = sub_2417DA368();
  v105[0] = v21;
  v105[1] = v22;
  v104 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v19, v105);
  v72 = v20;
  v68 = MEMORY[0x24269D47C](MEMORY[0x24BDF5578], v20, &v104);
  v74 = sub_2418A8BF8();
  v63 = sub_2418A87FC();
  v75 = *(_QWORD *)(v63 - 8);
  v24 = MEMORY[0x24BDAC7A8](v63, v23);
  v67 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v26);
  v71 = (char *)&v59 - v27;
  v28 = v85;
  v94 = v85;
  v95 = v18;
  v83 = a1[4];
  v96 = v83;
  v97 = v9;
  v29 = a1[7];
  v59 = v21;
  v60 = v29;
  v98 = v21;
  v99 = v29;
  v30 = v21;
  v31 = v86;
  v100 = v86;
  sub_2418A90C0();
  v32 = v64;
  sub_2418A84C0();
  v106[2] = sub_2418AA5D8();
  v106[3] = v33;
  sub_2418A9E40();
  v34 = MEMORY[0x24269D47C](MEMORY[0x24BDEB238], v10);
  sub_2418A9378();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v32, v10);
  v36 = v77;
  v35 = v78;
  (*(void (**)(char *, uint64_t, _QWORD *))(v78 + 16))(v77, v31, a1);
  v37 = v35;
  v38 = (*(unsigned __int8 *)(v35 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v39 = (char *)swift_allocObject();
  v40 = v62;
  *((_QWORD *)v39 + 2) = v28;
  *((_QWORD *)v39 + 3) = v40;
  v41 = v61;
  *((_QWORD *)v39 + 4) = v83;
  *((_QWORD *)v39 + 5) = v41;
  *((_QWORD *)v39 + 6) = v30;
  v42 = v60;
  *((_QWORD *)v39 + 7) = v60;
  (*(void (**)(char *, char *, _QWORD *))(v37 + 32))(&v39[v38], v36, a1);
  v43 = sub_2417DA3EC();
  v103[0] = v34;
  v103[1] = v43;
  v44 = MEMORY[0x24BDED308];
  v45 = v73;
  v46 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v73, v103);
  sub_24173EB88();
  v47 = v70;
  v48 = v84;
  sub_2418A93C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v48, v45);
  v87 = v85;
  v88 = v40;
  v89 = v83;
  v90 = v41;
  v91 = v59;
  v92 = v42;
  v93 = v86;
  sub_2418A8C58();
  v102[0] = v46;
  v102[1] = v81;
  v49 = v66;
  v58 = MEMORY[0x24269D47C](v44, v66, v102);
  v50 = v67;
  sub_2418A9360();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v47, v49);
  v51 = MEMORY[0x24269D47C](MEMORY[0x24BDEEC88], v74);
  v101[0] = v58;
  v101[1] = v51;
  v52 = v63;
  MEMORY[0x24269D47C](v44, v63, v101);
  v53 = v75;
  v54 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
  v55 = v71;
  v54(v71, v50, v52);
  v56 = *(void (**)(char *, uint64_t))(v53 + 8);
  v56(v50, v52);
  v54(v82, v55, v52);
  return ((uint64_t (*)(char *, uint64_t))v56)(v55, v52);
}

void sub_2417D9990()
{
  type metadata accessor for ScrollableWithPinnedFooter();
}

uint64_t sub_2417D99EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, _BYTE *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  _BYTE v47[96];

  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1, a2);
  v10 = &v47[-v9];
  v11 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v5 - 224) = v11;
  MEMORY[0x24BDAC7A8](v8, v12);
  v14 = &v47[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v5 - 240) = v14;
  sub_2417DA310();
  v15 = sub_2418A87FC();
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v5 - 184) = v15;
  *(_QWORD *)(v5 - 176) = v16;
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  *(_QWORD *)(v5 - 232) = &v47[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18, v20);
  *(_QWORD *)(v5 - 192) = &v47[-v21];
  v22 = *(_QWORD *)(v5 - 160);
  v23 = v22 + *(int *)(a1 + 72);
  v24 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16);
  v25 = v14;
  v26 = v3;
  *(_QWORD *)(v5 - 272) = v3;
  v24(v25, v23, v3);
  v27 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
  *(_QWORD *)(v5 - 248) = v27;
  v28 = v10;
  v27(v10, v22, a1);
  v29 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v30 = (char *)swift_allocObject();
  *((_QWORD *)v30 + 2) = v26;
  *((_QWORD *)v30 + 3) = v4;
  v31 = *(_QWORD *)(v5 - 200);
  *((_QWORD *)v30 + 4) = v2;
  *((_QWORD *)v30 + 5) = v31;
  v33 = *(_QWORD *)(v5 - 216);
  v32 = *(_QWORD *)(v5 - 208);
  *((_QWORD *)v30 + 6) = v32;
  *((_QWORD *)v30 + 7) = v33;
  v34 = *(void (**)(char *, _BYTE *, uint64_t))(v7 + 32);
  v34(&v30[v29], v28, a1);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 - 248))(v28, *(_QWORD *)(v5 - 160), a1);
  v35 = (char *)swift_allocObject();
  v36 = *(_QWORD *)(v5 - 272);
  v37 = *(_QWORD *)(v5 - 264);
  *((_QWORD *)v35 + 2) = v36;
  *((_QWORD *)v35 + 3) = v37;
  *((_QWORD *)v35 + 4) = *(_QWORD *)(v5 - 256);
  *((_QWORD *)v35 + 5) = v31;
  *((_QWORD *)v35 + 6) = v32;
  *((_QWORD *)v35 + 7) = v33;
  v34(&v35[v29], v28, a1);
  sub_24173EB88();
  v38 = *(_QWORD *)(v5 - 240);
  v39 = *(_QWORD *)(v5 - 232);
  sub_2418A93C0();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 224) + 8))(v38, v36);
  v40 = sub_24177AEFC();
  *(_QWORD *)(v5 - 152) = v31;
  *(_QWORD *)(v5 - 144) = v40;
  v41 = *(_QWORD *)(v5 - 184);
  MEMORY[0x24269D47C](MEMORY[0x24BDED308], v41, v5 - 152);
  v42 = *(_QWORD *)(v5 - 176);
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16);
  v44 = *(_QWORD *)(v5 - 192);
  v43(v44, v39, v41);
  v45 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v45(v39, v41);
  v43(*(_QWORD *)(v5 - 168), v44, v41);
  return ((uint64_t (*)(uint64_t, uint64_t))v45)(v44, v41);
}

void sub_2417D9C9C(CGFloat *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  _QWORD v16[2];
  CGRect v17;

  v2 = sub_2418A8D60();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = sub_2418AA5D8();
  v16[1] = v7;
  sub_2418A9E40();
  sub_2418A8EC8();
  swift_bridgeObjectRelease();
  sub_2418A867C();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v17.origin.x = v9;
  v17.origin.y = v11;
  v17.size.width = v13;
  v17.size.height = v15;
  *a1 = CGRectGetMaxY(v17);
}

void sub_2417D9DD0()
{
  type metadata accessor for ScrollableWithPinnedFooter();
}

uint64_t sub_2417D9E04()
{
  sub_2417DA460();
  return sub_2418A96D8();
}

void sub_2417D9E48()
{
  type metadata accessor for ScrollableWithPinnedFooter();
}

uint64_t sub_2417D9E7C()
{
  sub_2417DA460();
  return sub_2418A96D8();
}

uint64_t sub_2417D9EC0@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  _QWORD v44[3];

  v31 = a5;
  v32 = a7;
  v34 = a8;
  v35 = a6;
  v30 = a4;
  sub_24172835C(255, &qword_257150830, MEMORY[0x24BDEBF80], MEMORY[0x24BDEBF68], MEMORY[0x24BDF06B8]);
  v11 = a3;
  v12 = sub_2418A87FC();
  v33 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  MEMORY[0x24BDAC7A8](v14, v15);
  v16 = sub_2418AA1E8();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v30 - v23;
  if (*a1 == 1)
  {
    v36 = a2;
    v37 = v11;
    v38 = v30;
    v39 = v31;
    v31 = v17;
    v40 = v35;
    v41 = v32;
    type metadata accessor for ScrollableWithPinnedFooter();
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v21, 1, 1, v12);
  v25 = sub_2417DA368();
  v44[0] = v35;
  v44[1] = v25;
  MEMORY[0x24269D47C](MEMORY[0x24BDED308], v12, v44);
  v26 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v26(v24, v21, v16);
  v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  v27(v21, v16);
  v28 = sub_2417DA368();
  v43[0] = v35;
  v43[1] = v28;
  v42 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v12, v43);
  MEMORY[0x24269D47C](MEMORY[0x24BDF5578], v16, &v42);
  v26(v34, v24, v16);
  return ((uint64_t (*)(char *, uint64_t))v27)(v24, v16);
}

uint64_t sub_2417DA1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_2417DA26C() & 1) != 0)
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + *(int *)(a1 + 68), v4);
  else
    v9[1] = sub_2418A960C();
  return sub_2418A8628();
}

uint64_t sub_2417DA26C()
{
  sub_2417DA460();
  sub_2418A96CC();
  sub_2418A96CC();
  return 0;
}

void sub_2417DA310()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DC50)
  {
    sub_24173EB88();
    v0 = sub_2418A8F04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DC50);
  }
}

unint64_t sub_2417DA368()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257150838;
  if (!qword_257150838)
  {
    sub_24172835C(255, &qword_257150830, MEMORY[0x24BDEBF80], MEMORY[0x24BDEBF68], MEMORY[0x24BDF06B8]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF06D0], v1);
    atomic_store(result, (unint64_t *)&qword_257150838);
  }
  return result;
}

uint64_t sub_2417DA3D0()
{
  return sub_2417DA704((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2417D9990);
}

void sub_2417DA3E0()
{
  sub_2417DA660();
}

unint64_t sub_2417DA3EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257150840;
  if (!qword_257150840)
  {
    sub_24172835C(255, &qword_257150828, MEMORY[0x24BEE0D00], MEMORY[0x24BEE0D10], MEMORY[0x24BDF06E0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF06F0], v1);
    atomic_store(result, (unint64_t *)&qword_257150840);
  }
  return result;
}

uint64_t sub_2417DA454()
{
  return sub_2417DA704((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2417D9EC0);
}

void sub_2417DA460()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150848)
  {
    v0 = sub_2418A96F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150848);
  }
}

void sub_2417DA4B8()
{
  type metadata accessor for ScrollableWithPinnedFooter();
}

void sub_2417DA504()
{
  CGFloat *v0;

  sub_2417D9C9C(v0);
}

void objectdestroyTm_12()
{
  type metadata accessor for ScrollableWithPinnedFooter();
}

uint64_t sub_2417DA598(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v6 = v2 + ((v5 + 64) & ~v5);
  (*(void (**)(uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6 + a1[17]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v6 + a1[18], v1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6 + a1[19], v3);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_2417DA654()
{
  sub_2417DA660();
}

void sub_2417DA660()
{
  type metadata accessor for ScrollableWithPinnedFooter();
}

uint64_t sub_2417DA6A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v11(v1, v2 + ((v9 + 64) & ~v9), v3, v4, v5, v6, v7, v8);
}

uint64_t sub_2417DA6F8()
{
  return sub_2417DA704((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2417D914C);
}

uint64_t sub_2417DA704(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_2417DA71C@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_2417D91E0(v1[8], v1[9], v1[3], a1);
}

uint64_t sub_2417DA730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  uint64_t v17;
  _QWORD v18[2];
  _QWORD v19[2];

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  sub_2417DA310();
  v3 = sub_2418A87FC();
  v4 = sub_24177AEFC();
  v19[0] = v1;
  v19[1] = v4;
  v5 = MEMORY[0x24BDED308];
  MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v19);
  v6 = sub_2418A84B4();
  sub_24172835C(255, &qword_257150828, MEMORY[0x24BEE0D00], MEMORY[0x24BEE0D10], MEMORY[0x24BDF06E0]);
  v7 = sub_2418A87FC();
  v8 = sub_2418A87FC();
  sub_24172835C(255, &qword_257150830, MEMORY[0x24BDEBF80], MEMORY[0x24BDEBF68], MEMORY[0x24BDF06B8]);
  v9 = sub_2418A87FC();
  v10 = sub_2418AA1E8();
  v18[0] = v2;
  v18[1] = sub_2417DA368();
  v17 = MEMORY[0x24269D47C](v5, v9, v18);
  MEMORY[0x24269D47C](MEMORY[0x24BDF5578], v10, &v17);
  v11 = sub_2418A8BF8();
  v12 = sub_2418A87FC();
  v16[0] = MEMORY[0x24269D47C](MEMORY[0x24BDEB238], v6);
  v16[1] = sub_2417DA3EC();
  v15[0] = MEMORY[0x24269D47C](v5, v7, v16);
  v15[1] = v4;
  v14[0] = MEMORY[0x24269D47C](v5, v8, v15);
  v14[1] = MEMORY[0x24269D47C](MEMORY[0x24BDEEC88], v11);
  return MEMORY[0x24269D47C](v5, v12, v14);
}

BOOL static StateOfMindEntryPresentationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StateOfMindEntryPresentationStyle.hash(into:)()
{
  return sub_2418AA578();
}

uint64_t StateOfMindEntryPresentationStyle.hashValue.getter()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

unint64_t sub_2417DA9B0()
{
  unint64_t result;

  result = qword_257150850;
  if (!qword_257150850)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindEntryPresentationStyle, &type metadata for StateOfMindEntryPresentationStyle);
    atomic_store(result, (unint64_t *)&qword_257150850);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StateOfMindEntryPresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2417DAA40 + 4 * byte_2418D63C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2417DAA74 + 4 * byte_2418D63C0[v4]))();
}

uint64_t sub_2417DAA74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2417DAA7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2417DAA84);
  return result;
}

uint64_t sub_2417DAA90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2417DAA98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2417DAA9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2417DAAA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryPresentationStyle()
{
  return &type metadata for StateOfMindEntryPresentationStyle;
}

_QWORD *sub_2417DAAC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A8EB0();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v14 = (char *)v7 + v13;
      v15 = (char *)v8 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_2417DAC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_2417DAD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    v11 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v12 = (char *)v6 + v11;
    v13 = (char *)v7 + v11;
    v14 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2417DAEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60(a1 + v6, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v14 = (char *)v7 + v13;
      v15 = (char *)v8 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2417DB064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8EB0();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v5, v6, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    v12 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v13 = &v5[v12];
    v14 = &v6[v12];
    v15 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2417DB1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60(a1 + v7, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v10);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      v16 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417DB374()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417DB380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_2417DB414()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417DB420(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ValenceSelectionTitleText()
{
  uint64_t result;

  result = qword_2571508B0;
  if (!qword_2571508B0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417DB4E8()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2417DB57C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417DB590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v27)(uint64_t);
  uint64_t (*v28)(uint64_t, uint64_t);
  char v29;
  uint64_t (*v30)(uint64_t);
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t (*v32)(uint64_t);
  void (*v33)(char *, uint64_t);
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v36;

  v1 = v0;
  v2 = sub_2418A8EB0();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241779078();
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, (unint64_t *)&qword_25714BFF0, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)&v36 - v20;
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v36 - v23;
  sub_24177912C(v1, (uint64_t)&v36 - v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v21, *MEMORY[0x24BDEFEF0], v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v21, 0, 1, v2);
  v25 = (uint64_t)&v12[*(int *)(v9 + 48)];
  sub_24177912C((uint64_t)v24, (uint64_t)v12);
  sub_24177912C((uint64_t)v21, v25);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v26((uint64_t)v12, 1, v2) != 1)
  {
    sub_24177912C((uint64_t)v12, (uint64_t)v17);
    if (v26(v25, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v7, v25, v2);
      v32 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8];
      sub_24172159C(qword_25714DBB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], MEMORY[0x24BDEFF08]);
      v29 = sub_2418A9DA4();
      v33 = *(void (**)(char *, uint64_t))(v4 + 8);
      v33(v7, v2);
      v34 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
      sub_24173FC60((uint64_t)v21, (unint64_t *)&qword_25714BFF0, v32, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      sub_24173FC60((uint64_t)v24, (unint64_t *)&qword_25714BFF0, v32, v34);
      v33(v17, v2);
      sub_24173FC60((uint64_t)v12, (unint64_t *)&qword_25714BFF0, v32, v34);
      return v29 & 1;
    }
    v30 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8];
    v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    sub_24173FC60((uint64_t)v21, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_24173FC60((uint64_t)v24, (unint64_t *)&qword_25714BFF0, v30, v31);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v2);
    goto LABEL_6;
  }
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8];
  v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_24173FC60((uint64_t)v21, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_24173FC60((uint64_t)v24, (unint64_t *)&qword_25714BFF0, v27, v28);
  if (v26(v25, 1, v2) != 1)
  {
LABEL_6:
    sub_24172588C((uint64_t)v12, (uint64_t (*)(_QWORD))sub_241779078);
    v29 = 0;
    return v29 & 1;
  }
  sub_24173FC60((uint64_t)v12, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v29 = 1;
  return v29 & 1;
}

uint64_t sub_2417DB908(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  unsigned int *v20;
  uint64_t v21;
  char v22;
  unsigned int *v23;
  uint64_t v25;

  v2 = sub_2418A91E0();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v5, v8);
  v11 = (char *)&v25 - v10;
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = (char *)&v25 - v14;
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v25 - v17;
  if ((a1 & 1) != 0)
  {
    sub_2418A91C8();
    type metadata accessor for ValenceSelectionPhaseSpecs();
    v19 = sub_2418A879C();
    v20 = (unsigned int *)MEMORY[0x24BDF17C8];
    if ((v19 & 1) == 0)
      v20 = (unsigned int *)MEMORY[0x24BDF17D0];
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v15, *v20, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v18, v15, v2);
    v21 = sub_2418A91F8();
  }
  else
  {
    sub_2418A9168();
    type metadata accessor for ValenceSelectionPhaseSpecs();
    v22 = sub_2418A879C();
    v23 = (unsigned int *)MEMORY[0x24BDF17C8];
    if ((v22 & 1) == 0)
      v23 = (unsigned int *)MEMORY[0x24BDF17D0];
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v7, *v23, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v7, v2);
    v21 = sub_2418A91F8();
    v18 = v11;
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v18, v2);
  return v21;
}

uint64_t sub_2417DBACC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _DWORD *v67;
  uint64_t KeyPath;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, _QWORD, uint64_t);
  char v77;
  void (*v78)(uint64_t, uint64_t);
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;

  v109 = a1;
  v2 = type metadata accessor for LoggingFlowBlendMode();
  MEMORY[0x24BDAC7A8](v2, v3);
  v102 = (uint64_t *)((char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v112 = sub_2418A87B4();
  v108 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112, v5);
  v113 = (uint64_t)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174184C();
  v95 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v91 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for ValenceSelectionPhaseSpecs();
  v11 = MEMORY[0x24BDAC7A8](v88, v10);
  v103 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (uint64_t)&v87 - v14;
  sub_2417418C4(0);
  v94 = v16;
  v92 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v90 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417DC340(0);
  v89 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v99 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417DC3D4(0);
  v93 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v98 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417DC3F0();
  v96 = v25;
  MEMORY[0x24BDAC7A8](v25, v26);
  v101 = (uint64_t)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417DC44C(0);
  v97 = v28;
  MEMORY[0x24BDAC7A8](v28, v29);
  v100 = (uint64_t)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417DC4F4(0);
  v104 = v31;
  MEMORY[0x24BDAC7A8](v31, v32);
  v107 = (uint64_t)&v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417DC57C(0);
  v105 = v34;
  MEMORY[0x24BDAC7A8](v34, v35);
  v106 = (uint64_t)&v87 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v1;
  v38 = *v1;
  v39 = v1[1];
  v40 = v37;
  v114 = v38;
  v115 = v39;
  sub_241721040();
  swift_bridgeObjectRetain();
  v41 = sub_2418A92D0();
  v43 = v42;
  v45 = v44 & 1;
  type metadata accessor for ValenceSelectionTitleText();
  v110 = v15;
  v111 = v40;
  sub_241861CB8(v15);
  sub_2417DB908(*((_BYTE *)v40 + 16));
  sub_24172588C(v15, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  v46 = sub_2418A9294();
  v48 = v47;
  LOBYTE(v15) = v49;
  swift_release();
  LOBYTE(v39) = v15 & 1;
  sub_2417289EC(v41, v43, v45);
  swift_bridgeObjectRelease();
  v50 = sub_2418A9288();
  v52 = v51;
  LOBYTE(v15) = v53;
  v55 = v54;
  sub_2417289EC(v46, v48, v39);
  v56 = v112;
  swift_bridgeObjectRelease();
  v114 = v50;
  v115 = v52;
  v116 = v15 & 1;
  v117 = v55;
  v57 = v110;
  sub_241861CB8(v110);
  v58 = v113;
  sub_2417A7ED8(*((_BYTE *)v111 + 16), v113);
  sub_24172588C(v57, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_24172159C(&qword_25714CBB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF78]);
  result = sub_2418A9DA4();
  if ((result & 1) != 0)
  {
    v60 = v108;
    v61 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v91, v58, v56);
    sub_24172159C((unint64_t *)&qword_25714CB40, (uint64_t (*)(uint64_t))sub_24174184C, MEMORY[0x24BEE30C8]);
    v62 = v90;
    sub_2418A9390();
    sub_24172588C(v61, (uint64_t (*)(_QWORD))sub_24174184C);
    sub_2417289EC(v114, v115, v116);
    swift_bridgeObjectRelease();
    v63 = sub_2418A8E68();
    v64 = v92;
    v65 = (uint64_t)v99;
    v66 = v94;
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v99, v62, v94);
    v67 = (_DWORD *)(v65 + *(int *)(v89 + 36));
    *v67 = v63;
    v67[1] = 1058642330;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v62, v66);
    KeyPath = swift_getKeyPath();
    v69 = (uint64_t)v102;
    *v102 = KeyPath;
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    v70 = (uint64_t)v98;
    sub_241731B4C(v69, (uint64_t)&v98[*(int *)(v93 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
    sub_241731B4C(v65, v70, (uint64_t (*)(_QWORD))sub_2417DC340);
    v71 = v101;
    sub_2417289A8(v70, v101, (uint64_t (*)(_QWORD))sub_2417DC3D4);
    *(_WORD *)(v71 + *(int *)(v96 + 36)) = 256;
    sub_24172588C(v70, (uint64_t (*)(_QWORD))sub_2417DC3D4);
    v72 = swift_getKeyPath();
    v73 = v100;
    sub_2417289A8(v71, v100, (uint64_t (*)(_QWORD))sub_2417DC3F0);
    v74 = v73 + *(int *)(v97 + 36);
    *(_QWORD *)v74 = v72;
    *(_BYTE *)(v74 + 8) = 1;
    sub_24172588C(v71, (uint64_t (*)(_QWORD))sub_2417DC3F0);
    v75 = v103;
    sub_241861CB8(v103);
    if ((sub_2417DB590() & 1) != 0)
    {
      v76 = *(void (**)(uint64_t, _QWORD, uint64_t))(v60 + 104);
      v76(v58, *MEMORY[0x24BDECEC0], v56);
      sub_24172159C(&qword_25714CB30, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
      v77 = sub_2418A9D68();
      v78 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      v78(v58, v56);
      if ((v77 & 1) == 0)
      {
        v80 = 1;
        goto LABEL_8;
      }
      v76(v58, *MEMORY[0x24BDECF18], v56);
      v79 = sub_2418A9D68();
      v78(v58, v56);
      if ((v79 & 1) == 0)
      {
        v80 = 2;
        goto LABEL_8;
      }
    }
    v80 = 3;
LABEL_8:
    sub_24172588C(v75, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
    v81 = swift_getKeyPath();
    v82 = v107;
    sub_2417289A8(v73, v107, (uint64_t (*)(_QWORD))sub_2417DC44C);
    v83 = v82 + *(int *)(v104 + 36);
    *(_QWORD *)v83 = v81;
    *(_QWORD *)(v83 + 8) = v80;
    *(_BYTE *)(v83 + 16) = 0;
    sub_24172588C(v73, (uint64_t (*)(_QWORD))sub_2417DC44C);
    v84 = swift_getKeyPath();
    v85 = v106;
    sub_2417289A8(v82, v106, (uint64_t (*)(_QWORD))sub_2417DC4F4);
    v86 = (uint64_t *)(v85 + *(int *)(v105 + 36));
    *v86 = v84;
    v86[1] = 0x3FE3333333333333;
    sub_24172588C(v82, (uint64_t (*)(_QWORD))sub_2417DC4F4);
    return sub_241731B4C(v85, v109, (uint64_t (*)(_QWORD))sub_2417DC57C);
  }
  __break(1u);
  return result;
}

void sub_2417DC340(uint64_t a1)
{
  sub_241728250(a1, &qword_2571508F0, sub_2417418C4, (void (*)(uint64_t))sub_2417DC35C);
}

void sub_2417DC35C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571508F8)
  {
    sub_2417B8190();
    sub_24172159C((unint64_t *)&qword_25714F5B8, (uint64_t (*)(uint64_t))sub_2417B8190, MEMORY[0x24BDEECA0]);
    v0 = sub_2418A8F4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571508F8);
  }
}

void sub_2417DC3D4(uint64_t a1)
{
  sub_241728250(a1, &qword_257150900, sub_2417DC340, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
}

void sub_2417DC3F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150908)
  {
    sub_2417DC3D4(255);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150908);
  }
}

void sub_2417DC44C(uint64_t a1)
{
  sub_2417DC470(a1, &qword_257150910, (void (*)(uint64_t))sub_2417DC3F0, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0]);
}

void sub_2417DC470(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    sub_24172887C(255, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v8 = sub_2418A87FC();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_2417DC4F4(uint64_t a1)
{
  sub_241728250(a1, &qword_257150918, sub_2417DC44C, (void (*)(uint64_t))sub_2417DC510);
}

void sub_2417DC510()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F580)
  {
    sub_24172887C(255, &qword_254391080, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2418A9090();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F580);
  }
}

void sub_2417DC57C(uint64_t a1)
{
  sub_2417DC470(a1, &qword_257150920, sub_2417DC4F4, &qword_25714F5E0, MEMORY[0x24BEE50B0]);
}

uint64_t sub_2417DC5B0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2418A8A0C();
  *a1 = v3;
  return result;
}

uint64_t sub_2417DC5D8()
{
  return sub_2418A8A18();
}

uint64_t sub_2417DC5FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_2418A8AE4();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_2417DC62C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_2418A8AE4();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_2417DC65C()
{
  return sub_2418A8AF0();
}

uint64_t sub_2417DC688()
{
  return sub_2418A8AF0();
}

uint64_t sub_2417DC6B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2418A8A0C();
  *a1 = v3;
  return result;
}

uint64_t sub_2417DC6DC()
{
  return sub_2418A8A18();
}

unint64_t sub_2417DC704()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150928;
  if (!qword_257150928)
  {
    sub_2417DC57C(255);
    v2 = v1;
    v3[0] = sub_241728434(&qword_257150930, (uint64_t (*)(uint64_t))sub_2417DC4F4, (uint64_t (*)(void))sub_2417DC7A4, sub_2417DC9E0);
    v3[1] = sub_2417DC998(&qword_257150970, &qword_25714F5E0, MEMORY[0x24BEE50B0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150928);
  }
  return result;
}

unint64_t sub_2417DC7A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150938;
  if (!qword_257150938)
  {
    sub_2417DC44C(255);
    v2 = v1;
    v3[0] = sub_2417DC824();
    v3[1] = sub_2417DC998((unint64_t *)&qword_25714CD58, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150938);
  }
  return result;
}

unint64_t sub_2417DC824()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150940;
  if (!qword_257150940)
  {
    sub_2417DC3F0();
    v2 = v1;
    v3[0] = sub_241728434(&qword_257150948, (uint64_t (*)(uint64_t))sub_2417DC3D4, (uint64_t (*)(void))sub_2417DC8AC, sub_2417DC97C);
    v3[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150940);
  }
  return result;
}

unint64_t sub_2417DC8AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[6];

  result = qword_257150950;
  if (!qword_257150950)
  {
    sub_2417DC340(255);
    v2 = v1;
    sub_24174184C();
    v4 = v3;
    v5 = sub_24172159C((unint64_t *)&qword_25714CB40, (uint64_t (*)(uint64_t))sub_24174184C, MEMORY[0x24BEE30C8]);
    v6[2] = MEMORY[0x24BDF1FA8];
    v6[3] = v4;
    v6[4] = MEMORY[0x24BDF1F80];
    v6[5] = v5;
    v6[0] = swift_getOpaqueTypeConformance2();
    v6[1] = sub_24172159C(&qword_257150958, (uint64_t (*)(uint64_t))sub_2417DC35C, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v6);
    atomic_store(result, (unint64_t *)&qword_257150950);
  }
  return result;
}

uint64_t sub_2417DC97C()
{
  return sub_24172159C(&qword_257150960, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, (uint64_t)&unk_2418D6898);
}

uint64_t sub_2417DC998(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_24172887C(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF1028], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2417DC9E0()
{
  return sub_24172159C(&qword_257150968, (uint64_t (*)(uint64_t))sub_2417DC510, MEMORY[0x24BDF1028]);
}

uint64_t StateOfMindTimeline.EntryFullView.init(model:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  int *v3;
  uint64_t *v4;
  _QWORD *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = swift_getKeyPath();
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v3 = (int *)type metadata accessor for StateOfMindTimeline.EntryFullView();
  v4 = (uint64_t *)((char *)a1 + v3[5]);
  *v4 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v2);
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t *)((char *)a1 + v3[7]);
  sub_2418A96C0();
  *v5 = v12;
  v5[1] = v13;
  v6 = (char *)a1 + v3[8];
  sub_2418A96C0();
  *v6 = v12;
  *((_QWORD *)v6 + 1) = v13;
  v7 = (uint64_t *)((char *)a1 + v3[9]);
  *v7 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], v2);
  swift_storeEnumTagMultiPayload();
  v8 = (char *)a1 + v3[10];
  *(_QWORD *)v8 = swift_getKeyPath();
  v8[8] = 0;
  v9 = (uint64_t *)((char *)a1 + v3[6]);
  type metadata accessor for StateOfMindTimeline.Model();
  sub_24172159C(&qword_257150980, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.Model, (uint64_t)&protocol conformance descriptor for StateOfMindTimeline.Model);
  result = sub_2418A8760();
  *v9 = result;
  v9[1] = v11;
  return result;
}

uint64_t sub_2417DCBCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE v15[14];
  char v16[2];

  v2 = sub_2418A84E4();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_2418A87B4();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = &v15[-v12];
  sub_2418A8A24();
  sub_2418A89A0();
  sub_2417CBCE0();
  sub_2418A8B2C();
  v16[0] = v16[1];
  sub_2418A894C();
  return sub_2417CC554((uint64_t)v13, (uint64_t)v9, v16, (uint64_t)v5, a1);
}

uint64_t type metadata accessor for StateOfMindTimeline.EntryFullView()
{
  uint64_t result;

  result = qword_257150BA0;
  if (!qword_257150BA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2417DCD48()
{
  return sub_2418A894C();
}

uint64_t sub_2417DCD68()
{
  return sub_2418A894C();
}

uint64_t sub_2417DCD88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2418A84E4();
  MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_2418A8958();
}

uint64_t sub_2417DCE08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for StateOfMindTimeline.EntryFullView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    sub_24172588C((uint64_t)v5, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    swift_retain();
    sub_241808F48(a1);
    return swift_release();
  }
  v7 = v5[1];
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = *v5;
  if (v7 >= *(_QWORD *)(*v5 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v9 = type metadata accessor for StateOfMindTimeline.DaySummary();
  sub_2417289A8(v8+ ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v7, a1, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2417DCF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v0 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2418A84E4();
  v37 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v6, v9);
  v39 = (char *)&v36 - v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  v38 = (uint64_t)&v36 - v13;
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v36 - v16;
  v18 = type metadata accessor for StateOfMindTimeline.DaySummary();
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = _s5EntryVMa();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417DCE08((uint64_t)v21);
  sub_24173F288((uint64_t)&v21[*(int *)(v18 + 28)], (uint64_t)v17, (uint64_t)&qword_25714CBE8, (uint64_t)_s5EntryVMa, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_24172570C);
  sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v17, 1, v22) == 1)
  {
    sub_24173FC60((uint64_t)v17, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_241860D60((uint64_t)v3);
    sub_24172588C((uint64_t)v3, type metadata accessor for StateOfMindTimeline.Styles);
    sub_2418A95F4();
    v27 = sub_2418A9624();
    swift_release();
  }
  else
  {
    sub_241731B4C((uint64_t)v17, (uint64_t)v26, (uint64_t (*)(_QWORD))_s5EntryVMa);
    type metadata accessor for StateOfMindTimeline.EntryFullView();
    v28 = v38;
    sub_241861034(v38);
    v29 = *(double *)&v26[*(int *)(v22 + 36)];
    v30 = v37;
    v31 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v39, v28, v4);
    (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v8, *MEMORY[0x24BDEB3F0], v4);
    sub_2418A84D8();
    v32 = *(void (**)(char *, uint64_t))(v30 + 8);
    v32(v8, v4);
    swift_getKeyPath();
    sub_241810204(fmax(fmin(v29, 1.0), -1.0));
    v34 = v33;
    swift_release();
    v27 = MEMORY[0x24269BD9C](v34);
    v32(v31, v4);
    v32((char *)v28, v4);
    sub_24172588C((uint64_t)v26, (uint64_t (*)(_QWORD))_s5EntryVMa);
  }
  return v27;
}

uint64_t StateOfMindTimeline.EntryFullView.body.getter()
{
  sub_2417DF9AC();
  sub_24172159C(&qword_257150B40, (uint64_t (*)(uint64_t))sub_2417DF9AC, MEMORY[0x24BDEC6F8]);
  return sub_2418A8814();
}

uint64_t sub_2417DD360@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  sub_2417289A8(a1, (uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  result = sub_241731B4C((uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
  *a2 = sub_2417E5160;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v9;
  return result;
}

uint64_t sub_2417DD420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (**v68)();
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t OpaqueTypeConformance2;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;

  v115 = a1;
  v137 = a3;
  v4 = sub_2418A993C();
  v5 = *(_QWORD *)(v4 - 8);
  v134 = v4;
  v135 = v5;
  MEMORY[0x24BDAC7A8](v4, v6);
  v133 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A8B44();
  v129 = *(_QWORD *)(v8 - 8);
  v130 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v128 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for StateOfMindTimeline.DaySummary();
  MEMORY[0x24BDAC7A8](v126, v11);
  v124 = (uint64_t)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  v119 = *(_QWORD *)(v136 - 8);
  v120 = *(_QWORD *)(v119 + 64);
  MEMORY[0x24BDAC7A8](v136, v13);
  v138 = (uint64_t)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v112, v19);
  v21 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417E02E4();
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (uint64_t *)((char *)&v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417E0260();
  v27 = v26;
  MEMORY[0x24BDAC7A8](v26, v28);
  v30 = (char *)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_2571509C8, v31);
  v109 = v32;
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)&v107 - v34;
  sub_2417E01C4();
  v110 = v36;
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)&v107 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417E01A8(0);
  v111 = v40;
  MEMORY[0x24BDAC7A8](v40, v41);
  v43 = (char *)&v107 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417E00F8(0);
  v117 = v44;
  v118 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44, v45);
  v113 = (char *)&v107 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417E0024(0);
  v121 = v47;
  v122 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47, v48);
  v114 = (char *)&v107 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417DFF0C(0);
  v125 = v50;
  v127 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50, v51);
  v116 = (char *)&v107 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417DFD74(0);
  v54 = *(_QWORD *)(v53 - 8);
  v131 = v53;
  v132 = v54;
  MEMORY[0x24BDAC7A8](v53, v55);
  v123 = (char *)&v107 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v25 = sub_2418A9948();
  v25[1] = v57;
  sub_2417E51AC();
  sub_2417DDE80(a2, v115, (uint64_t *)((char *)v25 + *(int *)(v58 + 44)));
  sub_2417289A8((uint64_t)v25, (uint64_t)v30, (uint64_t (*)(_QWORD))sub_2417E02E4);
  v59 = &v30[*(int *)(v27 + 36)];
  *(_QWORD *)v59 = 0xD00000000000002CLL;
  *((_QWORD *)v59 + 1) = 0x80000002418DD740;
  sub_24172588C((uint64_t)v25, (uint64_t (*)(_QWORD))sub_2417E02E4);
  LOBYTE(v25) = sub_2418A90E4();
  sub_2417289A8((uint64_t)v30, (uint64_t)v35, (uint64_t (*)(_QWORD))sub_2417E0260);
  v35[*(int *)(v109 + 36)] = (char)v25;
  sub_24172588C((uint64_t)v30, (uint64_t (*)(_QWORD))sub_2417E0260);
  sub_241860D60((uint64_t)v21);
  sub_2417289A8((uint64_t)&v21[*(int *)(v112 + 48)], (uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_24172588C((uint64_t)v21, type metadata accessor for StateOfMindTimeline.Styles);
  v60 = sub_2417CC290();
  sub_24172588C((uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  LOBYTE(v25) = sub_2418A9114();
  v61 = MEMORY[0x24BDF0430];
  sub_24173F288((uint64_t)v35, (uint64_t)v39, (uint64_t)&qword_2571509C8, (uint64_t)sub_2417E0260, MEMORY[0x24BDF0430], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241721CBC);
  v62 = &v39[*(int *)(v110 + 36)];
  *(_QWORD *)v62 = v60;
  v62[8] = (char)v25;
  sub_241784BA4((uint64_t)v35, (uint64_t)&qword_2571509C8, (uint64_t)sub_2417E0260, v61, (uint64_t (*)(_QWORD))sub_241721CBC);
  v108 = a2;
  v63 = v138;
  sub_2417289A8(a2, v138, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
  v64 = *(unsigned __int8 *)(v119 + 80);
  v120 += (v64 + 16) & ~v64;
  v65 = (v64 + 16) & ~v64;
  v119 = v65;
  v115 = v64 | 7;
  v66 = swift_allocObject();
  sub_241731B4C(v63, v66 + v65, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
  sub_2417289A8((uint64_t)v39, (uint64_t)v43, (uint64_t (*)(_QWORD))sub_2417E01C4);
  v67 = v111;
  v68 = (uint64_t (**)())&v43[*(int *)(v111 + 36)];
  *v68 = sub_2417E5794;
  v68[1] = (uint64_t (*)())v66;
  sub_24172588C((uint64_t)v39, (uint64_t (*)(_QWORD))sub_2417E01C4);
  v69 = v124;
  sub_2417DCE08(v124);
  v70 = (uint64_t *)(v69 + *(int *)(v126 + 24));
  v72 = *v70;
  v71 = v70[1];
  swift_bridgeObjectRetain();
  sub_24172588C(v69, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  v142 = v72;
  v143 = v71;
  v73 = sub_241728434(&qword_257150AC8, (uint64_t (*)(uint64_t))sub_2417E01A8, (uint64_t (*)(void))sub_2417E0AD0, sub_2417E0C14);
  v74 = sub_241721040();
  v75 = MEMORY[0x24BEE0D00];
  v76 = v113;
  v77 = v67;
  sub_2418A93A8();
  swift_bridgeObjectRelease();
  sub_24172588C((uint64_t)v43, (uint64_t (*)(_QWORD))sub_2417E01A8);
  v78 = v128;
  v79 = v129;
  v80 = v130;
  (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v128, *MEMORY[0x24BDEE5F0], v130);
  v142 = v77;
  v143 = v75;
  v144 = v73;
  v145 = v74;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v82 = v114;
  v83 = v117;
  sub_2418A948C();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v76, v83);
  v84 = v133;
  sub_2418A9930();
  v142 = v83;
  v143 = OpaqueTypeConformance2;
  v85 = swift_getOpaqueTypeConformance2();
  v86 = MEMORY[0x24BDF4E40];
  v87 = v116;
  v88 = v121;
  v89 = v134;
  MEMORY[0x24269BBEC](v84, MEMORY[0x24BEE4AF8], v121, v134, v85, MEMORY[0x24BDF4E40]);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v84, v89);
  v90 = v88;
  (*(void (**)(char *, uint64_t))(v122 + 8))(v82, v88);
  v91 = v108;
  v139 = v108;
  sub_2417E0C30(0);
  v135 = v92;
  v142 = v90;
  v143 = v89;
  v144 = v85;
  v145 = v86;
  v93 = swift_getOpaqueTypeConformance2();
  sub_2417E0CBC();
  v95 = v94;
  v96 = sub_24172159C(&qword_257150B30, (uint64_t (*)(uint64_t))sub_2417E0CBC, MEMORY[0x24BDEB848]);
  v142 = v95;
  v143 = v96;
  v97 = swift_getOpaqueTypeConformance2();
  v98 = v123;
  v99 = v125;
  sub_2418A9528();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v87, v99);
  v100 = v91 + *(int *)(v136 + 32);
  v101 = *(_BYTE *)v100;
  v102 = *(_QWORD *)(v100 + 8);
  v140 = v101;
  v141 = v102;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  v103 = v138;
  sub_2417289A8(v91, v138, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
  v104 = swift_allocObject();
  sub_241731B4C(v103, v104 + v119, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
  v142 = v99;
  v143 = v135;
  v144 = v93;
  v145 = v97;
  swift_getOpaqueTypeConformance2();
  sub_2417E0F48();
  v105 = v131;
  sub_2418A94D4();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v132 + 8))(v98, v105);
}

uint64_t sub_2417DDE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  unsigned __int8 v53;
  unsigned __int8 v54;
  unsigned __int8 v55;
  unsigned __int8 v56;
  void **v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t KeyPath;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v70)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (**v75)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  char *v76;
  int *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  void *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  _QWORD *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  void *v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  unint64_t v103;
  unint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unsigned __int8 v111;
  unsigned __int8 v112;
  unsigned __int8 v113;
  unsigned __int8 v114;
  unsigned __int8 v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  _OWORD *v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(void);
  _QWORD v131[2];
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _OWORD *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  void *v188;
  unint64_t v189;
  char v190;
  _BYTE v191[7];
  uint64_t v192;
  char v193;
  _BYTE v194[7];
  uint64_t v195;
  char v196;
  _BYTE v197[7];
  uint64_t v198;
  char v199;
  _BYTE v200[7];
  uint64_t v201;
  char v202;
  _BYTE v203[7];
  uint64_t v204;
  char v205;
  _BYTE v206[7];
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char v210;
  _BYTE v211[7];
  uint64_t v212;
  char v213;
  _BYTE v214[7];
  uint64_t v215;
  uint64_t v216;
  _BYTE v217[7];
  unsigned __int8 v218;
  _BYTE v219[7];
  unsigned __int8 v220;
  _BYTE v221[7];
  unsigned __int8 v222;
  _BYTE v223[7];
  unsigned __int8 v224;
  _BYTE v225[7];
  unsigned __int8 v226;
  _BYTE v227[7];
  unsigned __int8 v228;
  _BYTE v229[7];
  unsigned __int8 v230;
  _BYTE v231[7];
  unsigned __int8 v232;
  _QWORD v233[2];
  unsigned __int8 v234;
  uint64_t v235;
  unsigned __int8 v236;
  uint64_t v237;
  unsigned __int8 v238;
  uint64_t v239;
  unsigned __int8 v240;
  uint64_t v241;
  unsigned __int8 v242;
  uint64_t v243;
  unsigned __int8 v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unsigned __int8 v248;
  uint64_t v249;
  unsigned __int8 v250;
  uint64_t v251;
  uint64_t v252;

  v140 = a2;
  v159 = a3;
  v4 = sub_2418A8F7C();
  v153 = *(_QWORD *)(v4 - 8);
  v154 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v152 = (char *)v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = _s15LogButtonFooterVMa();
  MEMORY[0x24BDAC7A8](v148, v7);
  v147 = (_QWORD *)((char *)v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_2418A993C();
  v144 = *(_QWORD *)(v9 - 8);
  v145 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v161 = (char *)v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  v12 = *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64);
  v141 = *(_QWORD *)(v162 - 8);
  v142 = v12;
  MEMORY[0x24BDAC7A8](v162, v13);
  v139 = (uint64_t)v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v16 = MEMORY[0x24BDAC7A8](v150, v15);
  v149 = (uint64_t)v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v132 = (uint64_t)v131 - v19;
  v134 = _s13EntryBaseViewVMa();
  MEMORY[0x24BDAC7A8](v134, v20);
  v22 = (_QWORD *)((char *)v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417E05EC();
  v135 = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v133 = (uint64_t)v131 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417E05D0(0);
  v138 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v160 = (uint64_t)v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_2417E04E8();
  MEMORY[0x24BDAC7A8](v137, v29);
  v136 = (char *)v131 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_257150A10, v31);
  v146 = v32;
  MEMORY[0x24BDAC7A8](v32, v33);
  v143 = (uint64_t)v131 - v34;
  sub_2417E045C(0);
  v155 = *(_QWORD *)(v35 - 8);
  v156 = v35;
  MEMORY[0x24BDAC7A8](v35, v36);
  v163 = (char *)v131 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728250(0, &qword_257150A00, v38, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v176 = (uint64_t)v131 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v151 = (char *)v131 - v45;
  MEMORY[0x24BDAC7A8](v44, v46);
  v175 = (uint64_t)v131 - v47;
  v48 = sub_2417DCF74();
  v49 = sub_2418A9960();
  sub_24185E484(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v233, 0.0, 1, 0.0, 1, v49, v50, v48);
  swift_release();
  v167 = v233[1];
  v168 = (void *)v233[0];
  v51 = v234;
  v52 = v236;
  v169 = v235;
  v170 = v237;
  v53 = v238;
  v54 = v240;
  v158 = v241;
  v55 = v242;
  v171 = v239;
  v172 = v243;
  v56 = v244;
  v173 = v246;
  v174 = v245;
  v57 = (void **)(a1 + *(int *)(v162 + 28));
  v58 = *v57;
  v59 = v57[1];
  v188 = v58;
  v189 = (unint64_t)v59;
  sub_24172887C(0, &qword_25714CA00, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  sub_2418A9960();
  sub_2418A861C();
  v164 = v247;
  v165 = v249;
  v166 = v251;
  v157 = v252;
  v232 = v51;
  v230 = v52;
  v228 = v53;
  v226 = v54;
  v224 = v55;
  v222 = v56;
  v220 = v248;
  v218 = v250;
  v60 = v132;
  sub_2417DCE08(v132);
  sub_2418A8664();
  v62 = v61;
  *v22 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v140 = v63;
  swift_storeEnumTagMultiPayload();
  v64 = v134;
  sub_241731B4C(v60, (uint64_t)v22 + *(int *)(v134 + 20), (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  *(uint64_t *)((char *)v22 + *(int *)(v64 + 24)) = v62;
  KeyPath = swift_getKeyPath();
  v66 = v133;
  sub_2417289A8((uint64_t)v22, v133, (uint64_t (*)(_QWORD))_s13EntryBaseViewVMa);
  v67 = v66 + *(int *)(v135 + 36);
  *(_QWORD *)v67 = KeyPath;
  *(_BYTE *)(v67 + 8) = 1;
  sub_24172588C((uint64_t)v22, (uint64_t (*)(_QWORD))_s13EntryBaseViewVMa);
  v68 = sub_2418A9960();
  v70 = v69;
  v131[1] = a1;
  v71 = v139;
  sub_2417289A8(a1, v139, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
  v72 = (*(unsigned __int8 *)(v141 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
  v73 = swift_allocObject();
  sub_241731B4C(v71, v73 + v72, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
  v74 = v160;
  sub_2417289A8(v66, v160, (uint64_t (*)(_QWORD))sub_2417E05EC);
  v75 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))(v74 + *(int *)(v138 + 36));
  *v75 = sub_2417E586C;
  v75[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v73;
  v75[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v68;
  v75[3] = v70;
  sub_24172588C(v66, (uint64_t (*)(_QWORD))sub_2417E05EC);
  v76 = v161;
  sub_2418A9924();
  v78 = v136;
  v77 = (int *)v137;
  v80 = v144;
  v79 = v145;
  (*(void (**)(char *, char *, uint64_t))(v144 + 16))(&v136[*(int *)(v137 + 68)], v76, v145);
  *v78 = 1;
  sub_2417289A8(v74, (uint64_t)&v78[v77[18]], (uint64_t (*)(_QWORD))sub_2417E05D0);
  v81 = (uint64_t)&v78[v77[19]];
  v82 = a1 + *(int *)(v162 + 32);
  v83 = *(_BYTE *)v82;
  v84 = *(_QWORD *)(v82 + 8);
  LOBYTE(v177) = v83;
  *((_QWORD *)&v177 + 1) = v84;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  v85 = v188;
  v86 = v189;
  LOBYTE(v70) = v190;
  v87 = swift_getKeyPath();
  v88 = (uint64_t)v147;
  *v147 = v87;
  swift_storeEnumTagMultiPayload();
  v89 = v88 + *(int *)(v148 + 20);
  *(_QWORD *)v89 = v85;
  *(_QWORD *)(v89 + 8) = v86;
  *(_BYTE *)(v89 + 16) = (_BYTE)v70;
  sub_241731B4C(v88, v81, (uint64_t (*)(_QWORD))_s15LogButtonFooterVMa);
  v90 = &v78[v77[20]];
  *(_QWORD *)&v177 = 0;
  sub_2418A96C0();
  v91 = v189;
  *v90 = v188;
  v90[1] = v91;
  v92 = &v78[v77[21]];
  *(_QWORD *)&v177 = 0;
  sub_2418A96C0();
  v93 = v189;
  *v92 = v188;
  v92[1] = v93;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v161, v79);
  sub_24172588C(v160, (uint64_t (*)(_QWORD))sub_2417E05D0);
  v94 = sub_2418A9960();
  v95 = v143;
  sub_24185E62C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v143, 0.0, 1, 0.0, 1, v94, v96);
  sub_24172588C((uint64_t)v78, (uint64_t (*)(_QWORD))sub_2417E04E8);
  v97 = v152;
  sub_2418A8F70();
  v98 = sub_2417E0974();
  v99 = v146;
  sub_2418A942C();
  (*(void (**)(char *, uint64_t))(v153 + 8))(v97, v154);
  sub_241784BA4(v95, (uint64_t)&qword_257150A10, (uint64_t)sub_2417E04E8, MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD))sub_241721CBC);
  v100 = v149;
  sub_2417DCE08(v149);
  v101 = *(_QWORD **)(v100 + *(int *)(v150 + 36));
  swift_bridgeObjectRetain();
  sub_24172588C(v100, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  swift_bridgeObjectRetain();
  v102 = v101;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v102 = sub_241802714(0, v101[2] + 1, 1, v101);
  v104 = v102[2];
  v103 = v102[3];
  if (v104 >= v103 >> 1)
    v102 = sub_241802714((_QWORD *)(v103 > 1), v104 + 1, 1, v102);
  v102[2] = v104 + 1;
  v105 = &v102[2 * v104];
  v105[4] = 1685217603;
  v105[5] = 0xE400000000000000;
  v188 = &unk_2511AB450;
  v106 = swift_bridgeObjectRetain();
  sub_2417739BC(v106);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v188 = v99;
  v189 = v98;
  swift_getOpaqueTypeConformance2();
  v107 = (uint64_t)v151;
  v108 = v156;
  v109 = v163;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v109, v108);
  v110 = v175;
  sub_2417E58B8(v107, v175);
  v111 = v232;
  LODWORD(v153) = v232;
  LOBYTE(v109) = v230;
  LODWORD(v154) = v230;
  v112 = v228;
  LODWORD(v155) = v228;
  v113 = v226;
  LODWORD(v156) = v226;
  v114 = v224;
  LODWORD(v160) = v224;
  v115 = v222;
  LODWORD(v161) = v222;
  LOBYTE(v107) = v220;
  LODWORD(v162) = v220;
  LODWORD(v163) = v218;
  sub_24173F288(v110, v176, (uint64_t)&qword_257150A00, (uint64_t)sub_2417E045C, (uint64_t)MEMORY[0x24BDF1088], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241728250);
  *(_QWORD *)&v177 = v168;
  *((_QWORD *)&v177 + 1) = v167;
  LOBYTE(v178) = v111;
  *(_DWORD *)((char *)&v178 + 1) = *(_DWORD *)v231;
  DWORD1(v178) = *(_DWORD *)&v231[3];
  *((_QWORD *)&v178 + 1) = v169;
  LOBYTE(v179) = (_BYTE)v109;
  *(_DWORD *)((char *)&v179 + 1) = *(_DWORD *)v229;
  DWORD1(v179) = *(_DWORD *)&v229[3];
  *((_QWORD *)&v179 + 1) = v170;
  LOBYTE(v180) = v112;
  *(_DWORD *)((char *)&v180 + 1) = *(_DWORD *)v227;
  DWORD1(v180) = *(_DWORD *)&v227[3];
  *((_QWORD *)&v180 + 1) = v171;
  LOBYTE(v181) = v113;
  DWORD1(v181) = *(_DWORD *)&v225[3];
  *(_DWORD *)((char *)&v181 + 1) = *(_DWORD *)v225;
  v116 = v158;
  *((_QWORD *)&v181 + 1) = v158;
  LOBYTE(v182) = v114;
  DWORD1(v182) = *(_DWORD *)&v223[3];
  *(_DWORD *)((char *)&v182 + 1) = *(_DWORD *)v223;
  *((_QWORD *)&v182 + 1) = v172;
  LOBYTE(v183) = v115;
  *(_DWORD *)((char *)&v183 + 1) = *(_DWORD *)v221;
  DWORD1(v183) = *(_DWORD *)&v221[3];
  *((_QWORD *)&v183 + 1) = v174;
  *(_QWORD *)&v184 = v173;
  *((_QWORD *)&v184 + 1) = v164;
  LOBYTE(v185) = v107;
  *(_DWORD *)((char *)&v185 + 1) = *(_DWORD *)v219;
  DWORD1(v185) = *(_DWORD *)&v219[3];
  *((_QWORD *)&v185 + 1) = v165;
  LOBYTE(v186) = (_BYTE)v163;
  *(_DWORD *)((char *)&v186 + 1) = *(_DWORD *)v217;
  DWORD1(v186) = *(_DWORD *)&v217[3];
  *((_QWORD *)&v186 + 1) = v166;
  v117 = v157;
  v187 = v157;
  v118 = v178;
  v119 = v159;
  *v159 = v177;
  v119[1] = v118;
  v120 = v179;
  v121 = v180;
  v122 = v182;
  v119[4] = v181;
  v119[5] = v122;
  v119[2] = v120;
  v119[3] = v121;
  v123 = v183;
  v124 = v184;
  v125 = v185;
  v126 = v186;
  *((_QWORD *)v119 + 20) = v117;
  v119[8] = v125;
  v119[9] = v126;
  v119[6] = v123;
  v119[7] = v124;
  sub_2417E035C();
  v128 = v176;
  v129 = MEMORY[0x24BDF1088];
  sub_24173F288(v176, (uint64_t)v119 + *(int *)(v127 + 48), (uint64_t)&qword_257150A00, (uint64_t)sub_2417E045C, (uint64_t)MEMORY[0x24BDF1088], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241728250);
  sub_24174DDB4((uint64_t)&v177);
  sub_241784BA4(v175, (uint64_t)&qword_257150A00, (uint64_t)sub_2417E045C, (uint64_t)v129, (uint64_t (*)(_QWORD))sub_241728250);
  sub_241784BA4(v128, (uint64_t)&qword_257150A00, (uint64_t)sub_2417E045C, (uint64_t)v129, (uint64_t (*)(_QWORD))sub_241728250);
  v188 = v168;
  v189 = v167;
  v190 = v153;
  *(_DWORD *)v191 = *(_DWORD *)v231;
  *(_DWORD *)&v191[3] = *(_DWORD *)&v231[3];
  v192 = v169;
  v193 = v154;
  *(_DWORD *)v194 = *(_DWORD *)v229;
  *(_DWORD *)&v194[3] = *(_DWORD *)&v229[3];
  v195 = v170;
  v196 = v155;
  *(_DWORD *)v197 = *(_DWORD *)v227;
  *(_DWORD *)&v197[3] = *(_DWORD *)&v227[3];
  v198 = v171;
  v199 = v156;
  *(_DWORD *)&v200[3] = *(_DWORD *)&v225[3];
  *(_DWORD *)v200 = *(_DWORD *)v225;
  v201 = v116;
  v202 = v160;
  *(_DWORD *)&v203[3] = *(_DWORD *)&v223[3];
  *(_DWORD *)v203 = *(_DWORD *)v223;
  v204 = v172;
  v205 = (char)v161;
  *(_DWORD *)v206 = *(_DWORD *)v221;
  *(_DWORD *)&v206[3] = *(_DWORD *)&v221[3];
  v207 = v174;
  v208 = v173;
  v209 = v164;
  v210 = v162;
  *(_DWORD *)v211 = *(_DWORD *)v219;
  *(_DWORD *)&v211[3] = *(_DWORD *)&v219[3];
  v212 = v165;
  v213 = (char)v163;
  *(_DWORD *)v214 = *(_DWORD *)v217;
  *(_DWORD *)&v214[3] = *(_DWORD *)&v217[3];
  v215 = v166;
  v216 = v117;
  return sub_241793C9C((uint64_t)&v188);
}

uint64_t sub_2417DECAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[4];

  v20[1] = a1;
  v3 = sub_2418A8D60();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241860D60((uint64_t)v15);
  sub_2417289A8((uint64_t)&v15[*(int *)(v12 + 48)], (uint64_t)v11, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_24172588C((uint64_t)v15, type metadata accessor for StateOfMindTimeline.Styles);
  v16 = sub_2417CC290();
  sub_24172588C((uint64_t)v11, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  v20[2] = 0xD00000000000002CLL;
  v20[3] = 0x80000002418DD740;
  sub_2418A8EC8();
  sub_2418A867C();
  v18 = v17;
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  *a2 = v16;
  a2[1] = v18;
  return result;
}

uint64_t sub_2417DEE60()
{
  type metadata accessor for StateOfMindTimeline.EntryFullView();
  sub_24172887C(0, &qword_25714CA00, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  return sub_2418A96D8();
}

uint64_t sub_2417DEEE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;

  v2 = sub_2418A8DB4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2417E0CBC();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2418A8DA8();
  v13 = a1;
  sub_2417E0D48(0);
  sub_241728434(&qword_257150B20, (uint64_t (*)(uint64_t))sub_2417E0D48, (uint64_t (*)(void))sub_2417E0E7C, sub_2417310D4);
  sub_2418A8580();
  v10 = sub_24172159C(&qword_257150B30, (uint64_t (*)(uint64_t))sub_2417E0CBC, MEMORY[0x24BDEB848]);
  MEMORY[0x24269B628](v9, v5, v10);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_2417DF02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;

  v64 = a1;
  v70 = a2;
  v68 = type metadata accessor for StateOfMindTimeline.DaySummary();
  MEMORY[0x24BDAC7A8](v68, v2);
  v67 = (uint64_t)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2418A84E4();
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v61 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x24BDAC7A8](v59, v7);
  v60 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v56, v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  v54 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v54 + 64);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v16 = v15;
  v55 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v54 - v18;
  sub_2417E0DE8(0);
  v57 = *(_QWORD *)(v20 - 8);
  v58 = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417E0D64();
  v66 = v24;
  MEMORY[0x24BDAC7A8](v24, v25);
  v69 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417E0D48(0);
  MEMORY[0x24BDAC7A8](v27, v28);
  v65 = (char *)&v54 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v30 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v31 = sub_2418A7EFC();
  v33 = v32;
  swift_bridgeObjectRelease();

  v71 = (void *)v31;
  v72 = v33;
  sub_2417289A8(v64, (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
  v34 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v35 = swift_allocObject();
  sub_241731B4C((uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35 + v34, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
  sub_241721040();
  sub_2418A9714();
  sub_2418A9198();
  sub_241731344();
  sub_2418A9300();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v19, v16);
  sub_241860D60((uint64_t)v11);
  v36 = v60;
  sub_2417289A8((uint64_t)&v11[*(int *)(v56 + 48)], v60, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_24172588C((uint64_t)v11, type metadata accessor for StateOfMindTimeline.Styles);
  v38 = v61;
  v37 = v62;
  v39 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v61, *MEMORY[0x24BDEB3F0], v63);
  LOBYTE(v33) = sub_2418A84D8();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  if ((v33 & 1) != 0)
  {
    sub_2418A9618();
    v40 = sub_2418A9624();
    swift_release();
  }
  else
  {
    v40 = sub_2418A95DC();
  }
  v41 = (uint64_t)v69;
  v42 = v66;
  sub_24172588C(v36, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  v44 = v57;
  v43 = v58;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v41, v23, v58);
  *(_QWORD *)(v41 + *(int *)(v42 + 36)) = v40;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v23, v43);
  v45 = v67;
  sub_2417DCE08(v67);
  v46 = *(_QWORD **)(v45 + *(int *)(v68 + 36));
  swift_bridgeObjectRetain();
  sub_24172588C(v45, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  swift_bridgeObjectRetain();
  v47 = v46;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v47 = sub_241802714(0, v46[2] + 1, 1, v46);
  v49 = v47[2];
  v48 = v47[3];
  if (v49 >= v48 >> 1)
    v47 = sub_241802714((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
  v47[2] = v49 + 1;
  v50 = &v47[2 * v49];
  v50[4] = 0x74754265736F6C43;
  v50[5] = 0xEB000000006E6F74;
  v71 = &unk_2511AB450;
  v51 = swift_bridgeObjectRetain();
  sub_2417739BC(v51);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2417E0E7C();
  v52 = (uint64_t)v65;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24172588C(v41, (uint64_t (*)(_QWORD))sub_2417E0D64);
  return sub_241731B4C(v52, v70, (uint64_t (*)(_QWORD))sub_2417E0D48);
}

uint64_t sub_2417DF68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_2418A8658();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StateOfMindTimeline.EntryFullView();
  sub_2418612BC((uint64_t)v4);
  sub_2418A864C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_2417DF724@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;

  type metadata accessor for StateOfMindTimeline.EntryFullView();
  swift_retain();
  v2 = sub_241809134();
  result = swift_release();
  *(_QWORD *)a1 = sub_2417E5818;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = nullsub_1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_2417DF798()
{
  sub_2417DF9AC();
  sub_24172159C(&qword_257150B40, (uint64_t (*)(uint64_t))sub_2417DF9AC, MEMORY[0x24BDEC6F8]);
  return sub_2418A8814();
}

void sub_2417DF804()
{
  qword_257150978 = 0;
}

double sub_2417DF810@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_25714B950 != -1)
    swift_once();
  result = *(double *)&qword_257150978;
  *a1 = qword_257150978;
  return result;
}

uint64_t sub_2417DF868()
{
  return sub_2418A8A90();
}

uint64_t sub_2417DF888()
{
  return sub_2418A8A90();
}

uint64_t sub_2417DF8A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  int v8;
  void *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_2418A84E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A894C();
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  v8 = *MEMORY[0x24BDEB3F0];
  v9 = (void *)objc_opt_self();
  if (v7 == v8)
  {
    result = MEMORY[0x24269BDB4](objc_msgSend(v9, sel_secondarySystemGroupedBackgroundColor));
    v11 = result;
  }
  else
  {
    v11 = MEMORY[0x24269BDB4](objc_msgSend(v9, sel_systemGroupedBackgroundColor));
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  *a1 = v11;
  return result;
}

uint64_t sub_2417DF9A4@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v1;

  return sub_2417DD360(*(_QWORD *)(v1 + 16), a1);
}

void sub_2417DF9AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150988)
  {
    sub_2417DFB9C(255);
    sub_2417DFD74(255);
    sub_2417DFF0C(255);
    sub_2417E0C30(255);
    sub_2417E0024(255);
    sub_2418A993C();
    sub_2417E00F8(255);
    sub_2417E01A8(255);
    sub_241728434(&qword_257150AC8, (uint64_t (*)(uint64_t))sub_2417E01A8, (uint64_t (*)(void))sub_2417E0AD0, sub_2417E0C14);
    sub_241721040();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2417E0CBC();
    sub_24172159C(&qword_257150B30, (uint64_t (*)(uint64_t))sub_2417E0CBC, MEMORY[0x24BDEB848]);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2417E0F48();
    swift_getOpaqueTypeConformance2();
    v0 = sub_2418A8718();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150988);
  }
}

void sub_2417DFB9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_257150990)
  {
    sub_2417DFD74(255);
    v3 = v2;
    sub_2417DFF0C(255);
    sub_2417E0C30(255);
    sub_2417E0024(255);
    sub_2418A993C();
    sub_2417E00F8(255);
    sub_2417E01A8(255);
    sub_241728434(&qword_257150AC8, (uint64_t (*)(uint64_t))sub_2417E01A8, (uint64_t (*)(void))sub_2417E0AD0, sub_2417E0C14);
    sub_241721040();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2417E0CBC();
    sub_24172159C(&qword_257150B30, (uint64_t (*)(uint64_t))sub_2417E0CBC, MEMORY[0x24BDEB848]);
    swift_getOpaqueTypeConformance2();
    v6[0] = v3;
    v6[1] = &type metadata for StateOfMindEntryView;
    v6[2] = swift_getOpaqueTypeConformance2();
    v6[3] = sub_2417E0F48();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF3650], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_257150990);
  }
}

void sub_2417DFD74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_257150998)
  {
    sub_2417DFF0C(255);
    v3 = v2;
    sub_2417E0C30(255);
    v5 = v4;
    sub_2417E0024(255);
    sub_2418A993C();
    sub_2417E00F8(255);
    sub_2417E01A8(255);
    sub_241728434(&qword_257150AC8, (uint64_t (*)(uint64_t))sub_2417E01A8, (uint64_t (*)(void))sub_2417E0AD0, sub_2417E0C14);
    sub_241721040();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_2417E0CBC();
    sub_24172159C(&qword_257150B30, (uint64_t (*)(uint64_t))sub_2417E0CBC, MEMORY[0x24BDEB848]);
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = OpaqueTypeConformance2;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF3858], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_257150998);
  }
}

void sub_2417DFF0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_2571509A0)
  {
    sub_2417E0024(255);
    v3 = v2;
    v4 = sub_2418A993C();
    sub_2417E00F8(255);
    sub_2417E01A8(255);
    sub_241728434(&qword_257150AC8, (uint64_t (*)(uint64_t))sub_2417E01A8, (uint64_t (*)(void))sub_2417E0AD0, sub_2417E0C14);
    sub_241721040();
    swift_getOpaqueTypeConformance2();
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = swift_getOpaqueTypeConformance2();
    v7[3] = MEMORY[0x24BDF4E40];
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF2B08], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_2571509A0);
  }
}

void sub_2417E0024(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_2571509A8)
  {
    sub_2417E00F8(255);
    v3 = v2;
    sub_2417E01A8(255);
    v6[2] = sub_241728434(&qword_257150AC8, (uint64_t (*)(uint64_t))sub_2417E01A8, (uint64_t (*)(void))sub_2417E0AD0, sub_2417E0C14);
    v6[3] = sub_241721040();
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF33A8], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_2571509A8);
  }
}

void sub_2417E00F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_2571509B0)
  {
    sub_2417E01A8(255);
    v3 = v2;
    v4 = sub_241728434(&qword_257150AC8, (uint64_t (*)(uint64_t))sub_2417E01A8, (uint64_t (*)(void))sub_2417E0AD0, sub_2417E0C14);
    v5 = sub_241721040();
    v8[0] = v3;
    v8[1] = MEMORY[0x24BEE0D00];
    v8[2] = v4;
    v8[3] = v5;
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF28C0], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_2571509B0);
  }
}

void sub_2417E01A8(uint64_t a1)
{
  sub_241728250(a1, &qword_2571509B8, (void (*)(uint64_t))sub_2417E01C4, (void (*)(uint64_t))sub_2417E0A6C);
}

void sub_2417E01C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571509C0)
  {
    sub_241721CBC(255, &qword_2571509C8, (void (*)(uint64_t))sub_2417E0260);
    sub_24172835C(255, &qword_25714DF38, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], MEMORY[0x24BDF06B8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571509C0);
  }
}

void sub_2417E0260()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571509D0)
  {
    sub_2417E02E4();
    sub_24172835C(255, &qword_257150828, MEMORY[0x24BEE0D00], MEMORY[0x24BEE0D10], MEMORY[0x24BDF06E0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571509D0);
  }
}

void sub_2417E02E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571509D8)
  {
    sub_24172570C(255, &qword_2571509E0, (uint64_t (*)(uint64_t))sub_2417E035C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417E0A0C();
    v0 = sub_2418A97F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571509D8);
  }
}

void sub_2417E035C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2571509E8)
  {
    sub_2417E03E0();
    sub_241728250(255, &qword_257150A00, sub_2417E045C, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2571509E8);
  }
}

void sub_2417E03E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571509F0)
  {
    sub_24172835C(255, &qword_2571509F8, MEMORY[0x24BDF3E48], MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571509F0);
  }
}

void sub_2417E045C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_257150A08)
  {
    sub_241721CBC(255, &qword_257150A10, (void (*)(uint64_t))sub_2417E04E8);
    v5[0] = v2;
    v5[1] = sub_2417E0974();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2F10], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257150A08);
  }
}

uint64_t sub_2417E04E8()
{
  uint64_t result;

  result = qword_257150A18;
  if (!qword_257150A18)
  {
    sub_2417E05D0(255);
    _s15LogButtonFooterVMa();
    sub_2418A993C();
    sub_241728434(&qword_257150A78, (uint64_t (*)(uint64_t))sub_2417E05D0, sub_2417E08B8, sub_2417E0958);
    sub_24172159C(&qword_257150AA0, (uint64_t (*)(uint64_t))_s15LogButtonFooterVMa, (uint64_t)&unk_2418D58B0);
    type metadata accessor for ScrollableWithPinnedFooter();
  }
  return result;
}

void sub_2417E05D0(uint64_t a1)
{
  sub_241728250(a1, &qword_257150A20, (void (*)(uint64_t))sub_2417E05EC, (void (*)(uint64_t))sub_2417E0668);
}

void sub_2417E05EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150A28)
  {
    _s13EntryBaseViewVMa();
    sub_24172887C(255, &qword_257150A30, (uint64_t)&type metadata for StateOfMindTimelinePresentationContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150A28);
  }
}

void sub_2417E0668()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150A38)
  {
    sub_2417E06E0();
    sub_24172159C(&qword_257150A70, (uint64_t (*)(uint64_t))sub_2417E06E0, MEMORY[0x24BDEC6F8]);
    v0 = sub_2418A8D18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150A38);
  }
}

void sub_2417E06E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150A40)
  {
    sub_2417E0740();
    sub_2417E0838();
    v0 = sub_2418A8718();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150A40);
  }
}

void sub_2417E0740()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150A48)
  {
    sub_2417E079C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150A48);
  }
}

void sub_2417E079C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150A50)
  {
    sub_2417E07F4();
    v0 = sub_2418A8F88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150A50);
  }
}

unint64_t sub_2417E07F4()
{
  unint64_t result;

  result = qword_257150A58;
  if (!qword_257150A58)
  {
    result = MEMORY[0x24269D47C](&unk_2418D6740, &_s15ScrollOffsetKeyVN);
    atomic_store(result, (unint64_t *)&qword_257150A58);
  }
  return result;
}

unint64_t sub_2417E0838()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_257150A60;
  if (!qword_257150A60)
  {
    sub_2417E0740();
    v2 = v1;
    v3 = sub_24172159C(&qword_257150A68, (uint64_t (*)(uint64_t))sub_2417E079C, MEMORY[0x24BDF0B90]);
    v4[0] = MEMORY[0x24BDF3E20];
    v4[1] = v3;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257150A60);
  }
  return result;
}

uint64_t sub_2417E08B8()
{
  return sub_241728434(&qword_257150A80, (uint64_t (*)(uint64_t))sub_2417E05EC, sub_2417E08DC, (uint64_t (*)(void))sub_2417E08F8);
}

uint64_t sub_2417E08DC()
{
  return sub_24172159C(&qword_257150A88, (uint64_t (*)(uint64_t))_s13EntryBaseViewVMa, (uint64_t)&unk_2418D9BF8);
}

unint64_t sub_2417E08F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257150A90;
  if (!qword_257150A90)
  {
    sub_24172887C(255, &qword_257150A30, (uint64_t)&type metadata for StateOfMindTimelinePresentationContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_257150A90);
  }
  return result;
}

uint64_t sub_2417E0958()
{
  return sub_24172159C(&qword_257150A98, (uint64_t (*)(uint64_t))sub_2417E0668, MEMORY[0x24BDEF370]);
}

unint64_t sub_2417E0974()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150AA8;
  if (!qword_257150AA8)
  {
    sub_241721CBC(255, &qword_257150A10, (void (*)(uint64_t))sub_2417E04E8);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257150AB0, (uint64_t (*)(uint64_t))sub_2417E04E8, (uint64_t)&unk_2418D6370);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150AA8);
  }
  return result;
}

unint64_t sub_2417E0A0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257150AB8;
  if (!qword_257150AB8)
  {
    sub_24172570C(255, &qword_2571509E0, (uint64_t (*)(uint64_t))sub_2417E035C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257150AB8);
  }
  return result;
}

void sub_2417E0A6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150AC0)
  {
    sub_2417E07F4();
    sub_24173EB88();
    v0 = sub_2418A8F58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150AC0);
  }
}

unint64_t sub_2417E0AD0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150AD0;
  if (!qword_257150AD0)
  {
    sub_2417E01C4();
    v2 = v1;
    v3[0] = sub_2417E0B58();
    v3[1] = sub_2417A6474((unint64_t *)&qword_25714DF48, &qword_25714DF38, MEMORY[0x24BDF06B8], MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150AD0);
  }
  return result;
}

unint64_t sub_2417E0B58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150AD8;
  if (!qword_257150AD8)
  {
    sub_241721CBC(255, &qword_2571509C8, (void (*)(uint64_t))sub_2417E0260);
    v2 = v1;
    v3[0] = sub_241728434(&qword_257150AE0, (uint64_t (*)(uint64_t))sub_2417E0260, sub_2417E0BF8, (uint64_t (*)(void))sub_2417DA3EC);
    v3[1] = MEMORY[0x24BDF0420];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150AD8);
  }
  return result;
}

uint64_t sub_2417E0BF8()
{
  return sub_24172159C(&qword_257150AE8, (uint64_t (*)(uint64_t))sub_2417E02E4, MEMORY[0x24BDF4750]);
}

uint64_t sub_2417E0C14()
{
  return sub_24172159C(&qword_257150AF0, (uint64_t (*)(uint64_t))sub_2417E0A6C, MEMORY[0x24BDF09B0]);
}

void sub_2417E0C30(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_257150AF8)
  {
    sub_2417E0CBC();
    v5[0] = v2;
    v5[1] = sub_24172159C(&qword_257150B30, (uint64_t (*)(uint64_t))sub_2417E0CBC, MEMORY[0x24BDEB848]);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDEFA90], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257150AF8);
  }
}

void sub_2417E0CBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150B00)
  {
    sub_2417E0D48(255);
    sub_241728434(&qword_257150B20, (uint64_t (*)(uint64_t))sub_2417E0D48, (uint64_t (*)(void))sub_2417E0E7C, sub_2417310D4);
    v0 = sub_2418A858C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150B00);
  }
}

void sub_2417E0D48(uint64_t a1)
{
  sub_241728250(a1, &qword_257150B08, (void (*)(uint64_t))sub_2417E0D64, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_2417E0D64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150B10)
  {
    sub_2417E0DE8(255);
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150B10);
  }
}

void sub_2417E0DE8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_257150B18)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    v5[0] = v2;
    v5[1] = sub_241731344();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2150], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257150B18);
  }
}

unint64_t sub_2417E0E7C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_257150B28;
  if (!qword_257150B28)
  {
    sub_2417E0D64();
    v2 = v1;
    sub_24172835C(255, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    v4[2] = v3;
    v4[3] = sub_241731344();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_2417A6474((unint64_t *)&qword_25714C220, (unint64_t *)&qword_25714C1F0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8], MEMORY[0x24BDF0710]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257150B28);
  }
  return result;
}

unint64_t sub_2417E0F48()
{
  unint64_t result;

  result = qword_257150B38;
  if (!qword_257150B38)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindEntryView, &type metadata for StateOfMindEntryView);
    atomic_store(result, (unint64_t *)&qword_257150B38);
  }
  return result;
}

uint64_t sub_2417E0F8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *_s13EntryFullViewVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  unsigned int (*v103)(uint64_t *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v103 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      v101 = v8;
      if (v103(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2418A87B4();
      v102 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v102(v13, v14, v15);
      *((_BYTE *)a1 + v11[6]) = *((_BYTE *)a2 + v11[6]);
      v16 = v11[7];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_2418A84E4();
      v100 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v100(v17, v18, v19);
      v20 = v11[8];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      if (v103((uint64_t *)((char *)a2 + v20), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v21, v22, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v21, 0, 1, v7);
      }
      v24 = _s6StylesV8TimelineVMa(0);
      v102(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v15);
      v25 = v11[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      if (v103((uint64_t *)((char *)a2 + v25), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v26, v27, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v26, 0, 1, v7);
      }
      v29 = _s6StylesV6NoDataVMa(0);
      v102(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v15);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      v30 = v11[10];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      if (v103((uint64_t *)((char *)a2 + v30), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v31, v32, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v31, 0, 1, v7);
      }
      v34 = _s6StylesV11PlaceholderVMa(0);
      v102(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v15);
      v35 = v11[11];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      if (v103((uint64_t *)((char *)a2 + v35), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v36, v37, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v36, 0, 1, v7);
      }
      v39 = _s6StylesV6SymbolVMa(0);
      v102(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v15);
      v40 = v11[12];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      if (v103((uint64_t *)((char *)a2 + v40), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v41, v42, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v41, 0, 1, v7);
      }
      v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v102(&v41[v44[5]], &v42[v44[5]], v15);
      v41[v44[6]] = v42[v44[6]];
      v100(&v41[v44[7]], &v42[v44[7]], v19);
      v45 = v11[13];
      v46 = (char *)a1 + v45;
      v47 = (char *)a2 + v45;
      if (v103((uint64_t *)((char *)a2 + v45), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        v49 = v101;
      }
      else
      {
        v49 = v101;
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v46, v47, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v46, 0, 1, v7);
      }
      v50 = _s6StylesV5EmptyVMa(0);
      v102(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v15);
      v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
      v51 = v11[14];
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      if (v103((uint64_t *)((char *)a2 + v51), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v52, v53, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v7);
      }
      v55 = _s6StylesV5DailyVMa(0);
      v102(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v15);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      v56 = v11[15];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      if (v103((uint64_t *)((char *)a2 + v56), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v57, v58, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v7);
      }
      v60 = _s6StylesV9MomentaryVMa(0);
      v102(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v15);
      v61 = v11[16];
      v62 = (char *)a1 + v61;
      v63 = (char *)a2 + v61;
      if (v103((uint64_t *)((char *)a2 + v61), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v62, v63, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v7);
      }
      v65 = _s6StylesV6HeaderVMa(0);
      v102(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v15);
      v66 = v11[17];
      v67 = (char *)a1 + v66;
      v68 = (char *)a2 + v66;
      if (v103((uint64_t *)((char *)a2 + v66), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v67, v68, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v7);
      }
      v70 = _s6StylesV11ChartButtonVMa(0);
      v102(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v15);
      v71 = v11[18];
      v72 = (char *)a1 + v71;
      v73 = (char *)a2 + v71;
      if (v103((uint64_t *)((char *)a2 + v71), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v72, v73, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v7);
      }
      v75 = _s6StylesV15LogButtonFooterVMa(0);
      v102(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v15);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v76 = a3[5];
    v77 = (uint64_t *)((char *)a1 + v76);
    v78 = (uint64_t *)((char *)a2 + v76);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v79 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
    }
    else
    {
      *v77 = *v78;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v80 = a3[6];
    v81 = a3[7];
    v82 = (uint64_t *)((char *)a1 + v80);
    v83 = (uint64_t *)((char *)a2 + v80);
    v84 = v83[1];
    *v82 = *v83;
    v82[1] = v84;
    v85 = (uint64_t *)((char *)a1 + v81);
    v86 = (uint64_t *)((char *)a2 + v81);
    v87 = v86[1];
    *v85 = *v86;
    v85[1] = v87;
    v88 = a3[8];
    v89 = a3[9];
    v90 = (char *)a1 + v88;
    v91 = (char *)a2 + v88;
    *v90 = *v91;
    *((_QWORD *)v90 + 1) = *((_QWORD *)v91 + 1);
    v92 = (uint64_t *)((char *)a1 + v89);
    v93 = (uint64_t *)((char *)a2 + v89);
    sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v94 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v92, v93, v94);
    }
    else
    {
      *v92 = *v93;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v95 = a3[10];
    v96 = (char *)a1 + v95;
    v97 = (char *)a2 + v95;
    v98 = *(_QWORD *)v97;
    LOBYTE(v97) = v97[8];
    *(_QWORD *)v96 = v98;
    v96[8] = (char)v97;
  }
  swift_retain();
  return a1;
}

uint64_t _s13EntryFullViewVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v43)(uint64_t);
  uint64_t v44;

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(a1, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v8 = a1 + v7[5];
    v9 = sub_2418A87B4();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v8, v9);
    v11 = a1 + v7[7];
    v12 = sub_2418A84E4();
    v43 = *(void (**)(uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v44 = v12;
    v43(v11);
    v13 = a1 + v7[8];
    if (!v6(v13, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v4);
    v14 = _s6StylesV8TimelineVMa(0);
    v10(v13 + *(int *)(v14 + 20), v9);
    v15 = a1 + v7[9];
    if (!v6(v15, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    v16 = _s6StylesV6NoDataVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    v17 = a1 + v7[10];
    if (!v6(v17, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    v18 = _s6StylesV11PlaceholderVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    v19 = a1 + v7[11];
    if (!v6(v19, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    v20 = _s6StylesV6SymbolVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    v21 = a1 + v7[12];
    if (!v6(v21, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    v22 = v5;
    v23 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v21 + *(int *)(v23 + 20), v9);
    v24 = *(int *)(v23 + 28);
    v25 = v22;
    ((void (*)(uint64_t, uint64_t))v43)(v21 + v24, v44);
    v26 = a1 + v7[13];
    if (!v6(v26, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v4);
    v27 = _s6StylesV5EmptyVMa(0);
    v10(v26 + *(int *)(v27 + 20), v9);
    v28 = a1 + v7[14];
    if (!v6(v28, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v28, v4);
    v29 = _s6StylesV5DailyVMa(0);
    v10(v28 + *(int *)(v29 + 20), v9);
    v30 = a1 + v7[15];
    if (!v6(v30, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v30, v4);
    v31 = _s6StylesV9MomentaryVMa(0);
    v10(v30 + *(int *)(v31 + 20), v9);
    v32 = a1 + v7[16];
    if (!v6(v32, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v32, v4);
    v33 = _s6StylesV6HeaderVMa(0);
    v10(v32 + *(int *)(v33 + 20), v9);
    v34 = a1 + v7[17];
    if (!v6(v34, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v34, v4);
    v35 = _s6StylesV11ChartButtonVMa(0);
    v10(v34 + *(int *)(v35 + 20), v9);
    v36 = a1 + v7[18];
    if (!v6(v36, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v36, v4);
    v37 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v36 + *(int *)(v37 + 20), v9);
  }
  else
  {
    swift_release();
  }
  v38 = a1 + *(int *)(a2 + 20);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  v40 = a1 + *(int *)(a2 + 36);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v41 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

_QWORD *_s13EntryFullViewVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v99)(char *, char *, uint64_t);
  int *v100;
  uint64_t v101;
  unsigned int (*v102)(_QWORD *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v102 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
    v100 = a3;
    v101 = v7;
    if (v102(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    v99 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v99(v16, v17, v18);
    v19 = v9[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v102((_QWORD *)((char *)a2 + v19), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    if (v102((_QWORD *)((char *)a2 + v24), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v102((_QWORD *)((char *)a2 + v29), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v30, 0, 1, v6);
    }
    v33 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    v34 = v9[11];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v102((_QWORD *)((char *)a2 + v34), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v35, 0, 1, v6);
    }
    v38 = _s6StylesV6SymbolVMa(0);
    v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    v39 = v9[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    if (v102((_QWORD *)((char *)a2 + v39), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v40, v41, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v40, 0, 1, v6);
    }
    v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v99(&v40[v43[7]], &v41[v43[7]], v18);
    v44 = v9[13];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v102((_QWORD *)((char *)a2 + v44), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v101;
    }
    else
    {
      v48 = v101;
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v45, v46, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v45, 0, 1, v6);
    }
    v49 = _s6StylesV5EmptyVMa(0);
    v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    v50 = v9[14];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    if (v102((_QWORD *)((char *)a2 + v50), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    v54 = _s6StylesV5DailyVMa(0);
    v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v9[15];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v102((_QWORD *)((char *)a2 + v55), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    v59 = _s6StylesV9MomentaryVMa(0);
    v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    v60 = v9[16];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    if (v102((_QWORD *)((char *)a2 + v60), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    v64 = _s6StylesV6HeaderVMa(0);
    v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    v65 = v9[17];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    if (v102((_QWORD *)((char *)a2 + v65), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    v69 = _s6StylesV11ChartButtonVMa(0);
    v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    v70 = v9[18];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    if (v102((_QWORD *)((char *)a2 + v70), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    v74 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
    swift_storeEnumTagMultiPayload();
    a3 = v100;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  v75 = a3[5];
  v76 = (_QWORD *)((char *)a1 + v75);
  v77 = (_QWORD *)((char *)a2 + v75);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v78 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
  }
  else
  {
    *v76 = *v77;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v79 = a3[6];
  v80 = a3[7];
  v81 = (_QWORD *)((char *)a1 + v79);
  v82 = (_QWORD *)((char *)a2 + v79);
  v83 = v82[1];
  *v81 = *v82;
  v81[1] = v83;
  v84 = (_QWORD *)((char *)a1 + v80);
  v85 = (_QWORD *)((char *)a2 + v80);
  v86 = v85[1];
  *v84 = *v85;
  v84[1] = v86;
  v87 = a3[8];
  v88 = a3[9];
  v89 = (char *)a1 + v87;
  v90 = (char *)a2 + v87;
  *v89 = *v90;
  *((_QWORD *)v89 + 1) = *((_QWORD *)v90 + 1);
  v91 = (_QWORD *)((char *)a1 + v88);
  v92 = (_QWORD *)((char *)a2 + v88);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v93 = sub_2418A8658();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v91, v92, v93);
  }
  else
  {
    *v91 = *v92;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v94 = a3[10];
  v95 = (char *)a1 + v94;
  v96 = (char *)a2 + v94;
  v97 = *(_QWORD *)v96;
  LOBYTE(v96) = v96[8];
  *(_QWORD *)v95 = v97;
  v95[8] = (char)v96;
  swift_retain();
  return a1;
}

_QWORD *_s13EntryFullViewVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t (*v78)(uint64_t);
  uint64_t (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t (*v93)(uint64_t);
  uint64_t (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  unsigned int (*v104)(_QWORD *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v104 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48);
      v102 = v8;
      if (v104(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2418A87B4();
      v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      v103(v12, v13, v14);
      *((_BYTE *)a1 + v10[6]) = *((_BYTE *)a2 + v10[6]);
      v15 = v10[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_2418A84E4();
      v101 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v101(v16, v17, v18);
      v19 = v10[8];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (v104((_QWORD *)((char *)a2 + v19), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v20, v21, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v20, 0, 1, v7);
      }
      v23 = _s6StylesV8TimelineVMa(0);
      v103(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v14);
      v24 = v10[9];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      if (v104((_QWORD *)((char *)a2 + v24), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v25, v26, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v25, 0, 1, v7);
      }
      v28 = _s6StylesV6NoDataVMa(0);
      v103(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v14);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      v29 = v10[10];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      if (v104((_QWORD *)((char *)a2 + v29), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v30, v31, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v30, 0, 1, v7);
      }
      v33 = _s6StylesV11PlaceholderVMa(0);
      v103(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v14);
      v34 = v10[11];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      if (v104((_QWORD *)((char *)a2 + v34), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v35, v36, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v35, 0, 1, v7);
      }
      v38 = _s6StylesV6SymbolVMa(0);
      v103(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v14);
      v39 = v10[12];
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      if (v104((_QWORD *)((char *)a2 + v39), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v40, v41, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v40, 0, 1, v7);
      }
      v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v103(&v40[v43[5]], &v41[v43[5]], v14);
      v40[v43[6]] = v41[v43[6]];
      v101(&v40[v43[7]], &v41[v43[7]], v18);
      v44 = v10[13];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      if (v104((_QWORD *)((char *)a2 + v44), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v102;
      }
      else
      {
        v48 = v102;
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v45, v46, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v45, 0, 1, v7);
      }
      v49 = _s6StylesV5EmptyVMa(0);
      v103(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v14);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      v50 = v10[14];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      if (v104((_QWORD *)((char *)a2 + v50), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v7);
      }
      v54 = _s6StylesV5DailyVMa(0);
      v103(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v14);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v10[15];
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      if (v104((_QWORD *)((char *)a2 + v55), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v7);
      }
      v59 = _s6StylesV9MomentaryVMa(0);
      v103(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v14);
      v60 = v10[16];
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      if (v104((_QWORD *)((char *)a2 + v60), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v7);
      }
      v64 = _s6StylesV6HeaderVMa(0);
      v103(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v14);
      v65 = v10[17];
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      if (v104((_QWORD *)((char *)a2 + v65), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v7);
      }
      v69 = _s6StylesV11ChartButtonVMa(0);
      v103(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v14);
      v70 = v10[18];
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      if (v104((_QWORD *)((char *)a2 + v70), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v7);
      }
      v74 = _s6StylesV15LogButtonFooterVMa(0);
      v103(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v14);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v75 = a3[5];
    v76 = (_QWORD *)((char *)a1 + v75);
    v77 = (_QWORD *)((char *)a2 + v75);
    v78 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v79 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v75, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v78, v79);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v80 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v76, v77, v80);
    }
    else
    {
      *v76 = *v77;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v81 = a3[6];
  v82 = (_QWORD *)((char *)a1 + v81);
  v83 = (_QWORD *)((char *)a2 + v81);
  *v82 = *v83;
  v82[1] = v83[1];
  swift_retain();
  swift_release();
  v84 = a3[7];
  v85 = (_QWORD *)((char *)a1 + v84);
  v86 = (_QWORD *)((char *)a2 + v84);
  *v85 = *v86;
  v85[1] = v86[1];
  swift_retain();
  swift_release();
  v87 = a3[8];
  v88 = (char *)a1 + v87;
  v89 = (char *)a2 + v87;
  *v88 = *v89;
  *((_QWORD *)v88 + 1) = *((_QWORD *)v89 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v90 = a3[9];
    v91 = (_QWORD *)((char *)a1 + v90);
    v92 = (_QWORD *)((char *)a2 + v90);
    v93 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038];
    v94 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v90, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714C2E0, v93, v94);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v95 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v91, v92, v95);
    }
    else
    {
      *v91 = *v92;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v96 = a3[10];
  v97 = (char *)a1 + v96;
  v98 = (char *)a2 + v96;
  v99 = *(_QWORD *)v98;
  LOBYTE(v98) = v98[8];
  *(_QWORD *)v97 = v99;
  v97[8] = (char)v98;
  swift_retain();
  swift_release();
  return a1;
}

char *_s13EntryFullViewVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  void (*v94)(char *, char *, uint64_t);
  int *v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v97 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    v95 = a3;
    v96 = v9;
    if (v97(a2, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2418A87B4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    v17 = v11[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_2418A84E4();
    v94 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
    v94(v18, v19, v20);
    v21 = v11[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (v97(&a2[v21], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v22, v23, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v22, 0, 1, v8);
    }
    v25 = _s6StylesV8TimelineVMa(0);
    v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    v26 = v11[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    if (v97(&a2[v26], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v27, v28, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v27, 0, 1, v8);
    }
    v30 = _s6StylesV6NoDataVMa(0);
    v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    v31 = v11[10];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (v97(&a2[v31], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v32, v33, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v32, 0, 1, v8);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    v36 = v11[11];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if (v97(&a2[v36], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v37, v38, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v37, 0, 1, v8);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    v41 = v11[12];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v97(&a2[v41], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v42, v43, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v42, 0, 1, v8);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v16(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v94(&v42[v45[7]], &v43[v45[7]], v20);
    v46 = v11[13];
    v47 = &a1[v46];
    v48 = &a2[v46];
    if (v97(&a2[v46], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = v96;
    }
    else
    {
      v50 = v96;
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v47, v48, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v47, 0, 1, v8);
    }
    v51 = _s6StylesV5EmptyVMa(0);
    v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    v52 = v11[14];
    v53 = &a1[v52];
    v54 = &a2[v52];
    if (v97(&a2[v52], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    v56 = _s6StylesV5DailyVMa(0);
    v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = v11[15];
    v58 = &a1[v57];
    v59 = &a2[v57];
    if (v97(&a2[v57], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    v61 = _s6StylesV9MomentaryVMa(0);
    v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    v62 = v11[16];
    v63 = &a1[v62];
    v64 = &a2[v62];
    if (v97(&a2[v62], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    v66 = _s6StylesV6HeaderVMa(0);
    v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    v67 = v11[17];
    v68 = &a1[v67];
    v69 = &a2[v67];
    if (v97(&a2[v67], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    v71 = _s6StylesV11ChartButtonVMa(0);
    v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    v72 = v11[18];
    v73 = &a1[v72];
    v74 = &a2[v72];
    if (v97(&a2[v72], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    v76 = _s6StylesV15LogButtonFooterVMa(0);
    v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
    a3 = v95;
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v77 = a3[5];
  v78 = &a1[v77];
  v79 = &a2[v77];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v81 = v80;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v82 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v78, v79, v82);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  v83 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v83] = *(_OWORD *)&a2[v83];
  v84 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  v85 = &a1[v84];
  v86 = &a2[v84];
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v88 = v87;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v89 = sub_2418A8658();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v85, v86, v89);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  v90 = a3[10];
  v91 = &a1[v90];
  v92 = &a2[v90];
  *(_QWORD *)v91 = *(_QWORD *)v92;
  v91[8] = v92[8];
  return a1;
}

char *_s13EntryFullViewVwta(char *a1, char *a2, int *a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t (*v80)(uint64_t);
  uint64_t (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t (*v99)(uint64_t);
  uint64_t (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  unsigned int (*v112)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A8EB0();
      v10 = *(_QWORD *)(v9 - 8);
      v112 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      v110 = v10;
      if (v112(a2, 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v13 = v12[5];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_2418A87B4();
      v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v111(v14, v15, v16);
      a1[v12[6]] = a2[v12[6]];
      v17 = v12[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_2418A84E4();
      v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
      v109(v18, v19, v20);
      v21 = v12[8];
      v22 = &a1[v21];
      v23 = &a2[v21];
      if (v112(&a2[v21], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v22, v23, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v22, 0, 1, v9);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v111(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v16);
      v26 = v12[9];
      v27 = &a1[v26];
      v28 = &a2[v26];
      if (v112(&a2[v26], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v27, v28, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v27, 0, 1, v9);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v111(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v16);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v12[10];
      v32 = &a1[v31];
      v33 = &a2[v31];
      if (v112(&a2[v31], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v32, v33, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v32, 0, 1, v9);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v111(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v16);
      v36 = v12[11];
      v37 = &a1[v36];
      v38 = &a2[v36];
      if (v112(&a2[v36], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v37, v38, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v37, 0, 1, v9);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v111(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v16);
      v41 = v12[12];
      v42 = &a1[v41];
      v43 = &a2[v41];
      if (v112(&a2[v41], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v42, v43, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v42, 0, 1, v9);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v111(&v42[v45[5]], &v43[v45[5]], v16);
      v42[v45[6]] = v43[v45[6]];
      v109(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v12[13];
      v47 = &a1[v46];
      v48 = &a2[v46];
      if (v112(&a2[v46], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v110;
      }
      else
      {
        v50 = v110;
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v47, v48, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v47, 0, 1, v9);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v111(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v16);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v12[14];
      v53 = &a1[v52];
      v54 = &a2[v52];
      if (v112(&a2[v52], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v9);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v111(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v16);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v12[15];
      v58 = &a1[v57];
      v59 = &a2[v57];
      if (v112(&a2[v57], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v9);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v111(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v16);
      v62 = v12[16];
      v63 = &a1[v62];
      v64 = &a2[v62];
      if (v112(&a2[v62], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v9);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v111(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v16);
      v67 = v12[17];
      v68 = &a1[v67];
      v69 = &a2[v67];
      if (v112(&a2[v67], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v9);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v111(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v16);
      v72 = v12[18];
      v73 = &a1[v72];
      v74 = &a2[v72];
      if (v112(&a2[v72], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v9);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v111(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    v77 = a3[5];
    v78 = &a1[v77];
    v79 = &a2[v77];
    v80 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v81 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)&a1[v77], (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v80, v81);
    v83 = v82;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v84 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v78, v79, v84);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
  }
  v85 = a3[6];
  v86 = &a1[v85];
  v87 = &a2[v85];
  v89 = *(_QWORD *)v87;
  v88 = *((_QWORD *)v87 + 1);
  *(_QWORD *)v86 = v89;
  *((_QWORD *)v86 + 1) = v88;
  swift_release();
  v90 = a3[7];
  v91 = &a1[v90];
  v92 = &a2[v90];
  *(_QWORD *)v91 = *(_QWORD *)v92;
  *((_QWORD *)v91 + 1) = *((_QWORD *)v92 + 1);
  swift_release();
  v93 = a3[8];
  v94 = &a1[v93];
  v95 = &a2[v93];
  *v94 = *v95;
  *((_QWORD *)v94 + 1) = *((_QWORD *)v95 + 1);
  swift_release();
  if (a1 != a2)
  {
    v96 = a3[9];
    v97 = &a1[v96];
    v98 = &a2[v96];
    v99 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038];
    v100 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)&a1[v96], &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714C2E0, v99, v100);
    v102 = v101;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v103 = sub_2418A8658();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v97, v98, v103);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
  }
  v104 = a3[10];
  v105 = &a1[v104];
  v106 = &a2[v104];
  v107 = *(_QWORD *)v106;
  LOBYTE(v106) = v106[8];
  *(_QWORD *)v105 = v107;
  v105[8] = (char)v106;
  swift_release();
  return a1;
}

uint64_t _s13EntryFullViewVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417E4D54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
    v8 = v16;
    v12 = *(_QWORD *)(v16 - 8);
    v13 = a3[9];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t _s13EntryFullViewVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2417E4E78(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
        return;
      }
      sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = a4[9];
    }
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  v11(v12, a2, a2, v10);
}

void sub_2417E4F8C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_2417E5090()
{
  return sub_24172159C(&qword_257150BF0, (uint64_t (*)(uint64_t))sub_2417E50BC, MEMORY[0x24BDED358]);
}

void sub_2417E50BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150BF8)
  {
    sub_2418A8754();
    sub_2417DF9AC();
    sub_24172159C(&qword_257150B40, (uint64_t (*)(uint64_t))sub_2417DF9AC, MEMORY[0x24BDEC6F8]);
    v0 = sub_2418A8820();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150BF8);
  }
}

ValueMetadata *_s15ScrollOffsetKeyVMa()
{
  return &_s15ScrollOffsetKeyVN;
}

uint64_t sub_2417E5160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StateOfMindTimeline.EntryFullView() - 8) + 80);
  return sub_2417DD420(a1, v2 + ((v5 + 16) & ~v5), a2);
}

void sub_2417E51AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150C00)
  {
    sub_24172570C(255, &qword_2571509E0, (uint64_t (*)(uint64_t))sub_2417E035C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150C00);
  }
}

uint64_t objectdestroyTm_13()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(unint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v43)(uint64_t);
  uint64_t v44;

  v1 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + v2;
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v0 + v2, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v8 = v3 + v7[5];
    v9 = sub_2418A87B4();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v8, v9);
    v11 = v3 + v7[7];
    v12 = sub_2418A84E4();
    v43 = *(void (**)(uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v44 = v12;
    v43(v11);
    v13 = v3 + v7[8];
    if (!v6(v13, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v13, v4);
    v14 = _s6StylesV8TimelineVMa(0);
    v10(v13 + *(int *)(v14 + 20), v9);
    v15 = v3 + v7[9];
    if (!v6(v15, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v15, v4);
    v16 = _s6StylesV6NoDataVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    v17 = v3 + v7[10];
    if (!v6(v17, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v17, v4);
    v18 = _s6StylesV11PlaceholderVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    v19 = v3 + v7[11];
    if (!v6(v19, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v19, v4);
    v20 = _s6StylesV6SymbolVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    v21 = v3 + v7[12];
    if (!v6(v21, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v21, v4);
    v22 = v5;
    v23 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v21 + *(int *)(v23 + 20), v9);
    v24 = *(int *)(v23 + 28);
    v25 = v22;
    ((void (*)(unint64_t, uint64_t))v43)(v21 + v24, v44);
    v26 = v3 + v7[13];
    if (!v6(v26, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v26, v4);
    v27 = _s6StylesV5EmptyVMa(0);
    v10(v26 + *(int *)(v27 + 20), v9);
    v28 = v3 + v7[14];
    if (!v6(v28, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v28, v4);
    v29 = _s6StylesV5DailyVMa(0);
    v10(v28 + *(int *)(v29 + 20), v9);
    v30 = v3 + v7[15];
    if (!v6(v30, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v30, v4);
    v31 = _s6StylesV9MomentaryVMa(0);
    v10(v30 + *(int *)(v31 + 20), v9);
    v32 = v3 + v7[16];
    if (!v6(v32, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v32, v4);
    v33 = _s6StylesV6HeaderVMa(0);
    v10(v32 + *(int *)(v33 + 20), v9);
    v34 = v3 + v7[17];
    if (!v6(v34, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v34, v4);
    v35 = _s6StylesV11ChartButtonVMa(0);
    v10(v34 + *(int *)(v35 + 20), v9);
    v36 = v3 + v7[18];
    if (!v6(v36, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v36, v4);
    v37 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v36 + *(int *)(v37 + 20), v9);
  }
  else
  {
    swift_release();
  }
  v38 = v3 + *(int *)(v1 + 20);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  v40 = v3 + *(int *)(v1 + 36);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v41 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2417E5794()
{
  type metadata accessor for StateOfMindTimeline.EntryFullView();
  return sub_2417DEE60();
}

uint64_t sub_2417E57D0()
{
  uint64_t v0;

  return sub_2417DEEE0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2417E57DC@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for StateOfMindTimeline.EntryFullView();
  return sub_2417DF724(a1);
}

uint64_t sub_2417E5818()
{
  uint64_t v0;

  return j__swift_retain(v0);
}

uint64_t sub_2417E5820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417DF02C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2417E582C()
{
  type metadata accessor for StateOfMindTimeline.EntryFullView();
  return sub_2417DF68C();
}

uint64_t sub_2417E586C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for StateOfMindTimeline.EntryFullView();
  return sub_2417DECAC(a1, a2);
}

uint64_t sub_2417E58B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241728250(0, &qword_257150A00, sub_2417E045C, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_2417E5920@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id result;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  _QWORD v46[2];
  _QWORD v47[2];
  _QWORD v48[2];

  v42 = a3;
  v5 = sub_2418A87FC();
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v36 - v7;
  v9 = sub_2418A87FC();
  v44 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v36 - v11;
  v13 = sub_2418A87FC();
  v38 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v13);
  v15 = (char *)&v36 - v14;
  v37 = v16;
  v17 = sub_2418A87FC();
  v40 = *(_QWORD *)(v17 - 8);
  v41 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v39 = (char *)&v36 - v19;
  sub_2418A9960();
  sub_2418A94C8();
  sub_2418A90CC();
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_2417791B8(v20, v21);
  v48[0] = a2;
  v48[1] = MEMORY[0x24BDEDBB8];
  v22 = v15;
  v23 = MEMORY[0x24BDED308];
  v24 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v5, v48);
  sub_2418A9510();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v5);
  sub_2418A90CC();
  v25 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_241778CA8(v25, v26);
  v27 = MEMORY[0x24BDECC60];
  v47[0] = v24;
  v47[1] = MEMORY[0x24BDECC60];
  v28 = MEMORY[0x24269D47C](v23, v9, v47);
  sub_2418A9510();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v9);
  sub_2418A90F0();
  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v30 = result;
    MobileGestalt_get_homeButtonType();

    v46[0] = v28;
    v46[1] = v27;
    v31 = MEMORY[0x24BDED308];
    v32 = v37;
    v33 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v37, v46);
    v34 = v39;
    sub_2418A9510();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v32);
    sub_2418A9960();
    v45[0] = v33;
    v45[1] = v27;
    v35 = v41;
    MEMORY[0x24269D47C](v31, v41, v45);
    sub_2418A94C8();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v34, v35);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2417E5CFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v2 = type metadata accessor for LoggingFlowBlendMode();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_2418A88BC();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (_OWORD *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417E5F20(0);
  v11 = v10;
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (char *)v9 + *(int *)(v6 + 20);
  v16 = *MEMORY[0x24BDEEB68];
  v17 = sub_2418A8BE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  __asm { FMOV            V0.2D, #14.0 }
  *v9 = _Q0;
  v23 = objc_msgSend((id)objc_opt_self(), sel_systemGray6Color);
  v24 = MEMORY[0x24269BDB4](v23);
  sub_2417E5F98((uint64_t)v9, (uint64_t)v14);
  *(_QWORD *)&v14[*(int *)(v11 + 36)] = v24;
  sub_2417E5FDC((uint64_t)v9);
  *v5 = swift_getKeyPath();
  sub_2417D80B8(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  sub_241728250(0, qword_257150C10, sub_2417E5F20, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  sub_241731B4C((uint64_t)v5, a1 + *(int *)(v25 + 36), (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  return sub_241731B4C((uint64_t)v14, a1, (uint64_t (*)(_QWORD))sub_2417E5F20);
}

uint64_t type metadata accessor for LoggingFlowBlendMode()
{
  uint64_t result;

  result = qword_257150C70;
  if (!qword_257150C70)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417E5F20(uint64_t a1)
{
  sub_241728250(a1, &qword_257150C08, (void (*)(uint64_t))MEMORY[0x24BDED998], (void (*)(uint64_t))sub_2417E5F3C);
}

void sub_2417E5F3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C1F0)
  {
    v0 = sub_2418A8F4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C1F0);
  }
}

uint64_t sub_2417E5F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2418A88BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417E5FDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2418A88BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_2417E6020(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  sub_2417D80B8(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A84E4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2417E60F4(uint64_t a1)
{
  uint64_t v2;

  sub_2417D80B8(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_2417E6164(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  sub_2417D80B8(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2417E620C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_241751B54((uint64_t)a1);
    sub_2417D80B8(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_2417E62C4(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2417D80B8(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v5 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  return a1;
}

void *sub_2417E6368(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_241751B54((uint64_t)a1);
    sub_2417D80B8(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v5 = v4;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417E641C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417E6428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417D80B8(0, &qword_25714C0D8, MEMORY[0x24BDEB580]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2417E6474()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417E6480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417D80B8(0, &qword_25714C0D8, MEMORY[0x24BDEB580]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_2417E64D0()
{
  unint64_t v0;

  sub_2417D80B8(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2417E6548()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417E6558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t);
  unsigned int *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v26 = a1;
  v27 = a2;
  v2 = sub_2418A84E4();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v26 - v9;
  v11 = sub_2418A99B4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417E675C(0);
  v17 = v16;
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241861034((uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v7, *MEMORY[0x24BDEB3F0], v2);
  v21 = sub_2418A84D8();
  v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  v22(v7, v2);
  v22(v10, v2);
  v23 = (unsigned int *)MEMORY[0x24BDF5098];
  if ((v21 & 1) == 0)
    v23 = (unsigned int *)MEMORY[0x24BDF5080];
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v15, *v23, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(&v20[*(int *)(v17 + 36)], v15, v11);
  sub_2417E6778();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v20, v26, v24);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return sub_241731B4C((uint64_t)v20, v27, (uint64_t (*)(_QWORD))sub_2417E675C);
}

uint64_t sub_2417E6740()
{
  return sub_2418A8604();
}

void sub_2417E675C(uint64_t a1)
{
  sub_241728250(a1, &qword_257150CA8, (void (*)(uint64_t))sub_2417E6778, (void (*)(uint64_t))MEMORY[0x24BDEDB60]);
}

void sub_2417E6778()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150CB0)
  {
    type metadata accessor for LoggingFlowBlendMode();
    sub_24172159C(&qword_257150960, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, (uint64_t)&unk_2418D6898);
    v0 = sub_2418A8E5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150CB0);
  }
}

unint64_t sub_2417E67F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150CB8;
  if (!qword_257150CB8)
  {
    sub_2417E675C(255);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257150CC0, (uint64_t (*)(uint64_t))sub_2417E6778, MEMORY[0x24BDEFB78]);
    v3[1] = MEMORY[0x24BDEDB58];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150CB8);
  }
  return result;
}

uint64_t sub_2417E6874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;

  sub_24178B2C0();
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2418A7F50();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A7F44();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_24172588C((uint64_t)v3, (uint64_t (*)(_QWORD))sub_24178B2C0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v10)
  {
    v11 = v10;
    v12 = (void *)sub_2418A7F2C();
    sub_241875268(MEMORY[0x24BEE4AF8]);
    v13 = (void *)sub_2418A9D14();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_openSensitiveURL_withOptions_, v12, v13);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t storeEnumTagSinglePayload for NotificationAppBundle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2417E6A64 + 4 * byte_2418D68F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2417E6A98 + 4 * byte_2418D68F0[v4]))();
}

uint64_t sub_2417E6A98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2417E6AA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2417E6AA8);
  return result;
}

uint64_t sub_2417E6AB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2417E6ABCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2417E6AC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2417E6AC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationAppBundle()
{
  return &type metadata for NotificationAppBundle;
}

unint64_t sub_2417E6AE8()
{
  unint64_t result;

  result = qword_257150CC8;
  if (!qword_257150CC8)
  {
    result = MEMORY[0x24269D47C](&unk_2418D6958, &type metadata for NotificationAppBundle);
    atomic_store(result, (unint64_t *)&qword_257150CC8);
  }
  return result;
}

BOOL sub_2417E6B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD v17[2];
  _OWORD v18[2];
  __int128 v19;
  __int128 v20;

  v0 = sub_2418A8340();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_2418A9DB0();
  v6 = (id)HKObjectForNanoPreferencesUserDefaultsKey();

  if (v6)
  {
    sub_2418AA23C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_2417E6DFC((uint64_t)v18, (uint64_t)&v19);
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_13;
  sub_2417E6E40();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_14;
  v7 = v17[1];
  v8 = sub_2418A9DE0();
  if (*(_QWORD *)(v7 + 16) && (v10 = sub_241878C8C(v8, v9), (v11 & 1) != 0))
  {
    sub_241762F34(*(_QWORD *)(v7 + 56) + 32 * v10, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
  {
LABEL_13:
    sub_24172588C((uint64_t)&v19, (uint64_t (*)(_QWORD))sub_2417C5540);
    goto LABEL_14;
  }
  if ((swift_dynamicCast() & 1) != 0)
    return *(_QWORD *)&v18[0] != 0;
LABEL_14:
  sub_2418A8328();
  v13 = sub_2418A8334();
  v14 = sub_2418AA05C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_QWORD *)&v19 = v16;
    *(_DWORD *)v15 = 136446210;
    *(_QWORD *)&v18[0] = sub_24176024C(0xD00000000000001BLL, 0x80000002418DD7B0, (uint64_t *)&v19);
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v13, v14, "[%{public}s] Could not fetch Mindfulness App Settings from BulletinBoard.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v16, -1, -1);
    MEMORY[0x24269D548](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return 0;
}

uint64_t sub_2417E6DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417C5540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2417E6E40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150CD0)
  {
    v0 = sub_2418A9D2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150CD0);
  }
}

uint64_t destroy for AdditionalContextTextField()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AdditionalContextTextField(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AdditionalContextTextField(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for AdditionalContextTextField(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for AdditionalContextTextField()
{
  return &type metadata for AdditionalContextTextField;
}

uint64_t sub_2417E7014()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417E7024@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v53;

  v2 = v1;
  sub_2417E7F8C();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417E84E4(0);
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417E8500(0);
  v14 = v13;
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728250(0, &qword_257150D70, sub_2417E851C, (void (*)(uint64_t))sub_2417E8538);
  v19 = v18;
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v53 - v21;
  *(_QWORD *)v7 = sub_2418A8B8C();
  *((_QWORD *)v7 + 1) = 0x4000000000000000;
  v7[16] = 0;
  sub_2417E8738();
  sub_2417E7354(v2, &v7[*(int *)(v23 + 44)]);
  LOBYTE(v2) = sub_2418A9114();
  sub_2418A84A8();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_2417289A8((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_2417E7F8C);
  v32 = &v12[*(int *)(v9 + 36)];
  *v32 = v2;
  *((_QWORD *)v32 + 1) = v25;
  *((_QWORD *)v32 + 2) = v27;
  *((_QWORD *)v32 + 3) = v29;
  *((_QWORD *)v32 + 4) = v31;
  v32[40] = 0;
  sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))sub_2417E7F8C);
  LOBYTE(v2) = sub_2418A90CC();
  sub_2418A84A8();
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  sub_2417289A8((uint64_t)v12, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_2417E84E4);
  v41 = &v17[*(int *)(v14 + 36)];
  *v41 = v2;
  *((_QWORD *)v41 + 1) = v34;
  *((_QWORD *)v41 + 2) = v36;
  *((_QWORD *)v41 + 3) = v38;
  *((_QWORD *)v41 + 4) = v40;
  v41[40] = 0;
  sub_24172588C((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2417E84E4);
  v42 = sub_2418A996C();
  sub_24185E684(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v22, 0.0, 1, 0.0, 1, v42, v43);
  v44 = sub_2418A9960();
  v46 = v45;
  v47 = (uint64_t)&v22[*(int *)(v19 + 36)];
  sub_2417E5CFC(v47);
  sub_2417E8538();
  v49 = (uint64_t *)(v47 + *(int *)(v48 + 36));
  *v49 = v44;
  v49[1] = v46;
  sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))sub_2417E8500);
  sub_24173F288((uint64_t)v22, a1, (uint64_t)&qword_257150D70, (uint64_t)sub_2417E851C, (uint64_t)sub_2417E8538, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241728250);
  sub_2417E87B4();
  v51 = (_QWORD *)(a1 + *(int *)(v50 + 52));
  *v51 = 0xD00000000000001ALL;
  v51[1] = 0x80000002418D6960;
  return sub_241784BA4((uint64_t)v22, (uint64_t)&qword_257150D70, (uint64_t)sub_2417E851C, (uint64_t)sub_2417E8538, (uint64_t (*)(_QWORD))sub_241728250);
}

uint64_t sub_2417E7354@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  __int128 v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  __int128 v76;
  char *v77;
  uint64_t v78;
  uint64_t KeyPath;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  char *v90;
  uint64_t (*v91)(void);
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  void *v105;
  unint64_t v106;
  uint64_t v107;
  void *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  __int128 v134;
  void *v135;
  unint64_t v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  void *v141;
  __int128 v142;

  v128 = a2;
  sub_24172835C(0, &qword_257150D50, MEMORY[0x24BDF4108], MEMORY[0x24BDF40E8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v101 = v3;
  v100 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v99 = (char *)&v97 - v5;
  sub_2417E8400();
  v125 = v6;
  v124 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v98 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, &qword_257150D40, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v127 = (uint64_t)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v126 = (uint64_t)&v97 - v15;
  v122 = sub_2418A8574();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122, v16);
  v120 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172835C(0, &qword_257150D10, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDF53C0]);
  v114 = v18;
  v112 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v19);
  v110 = (char *)&v97 - v20;
  sub_2417E8198(0);
  v113 = v21;
  v111 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v22);
  v109 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417E8114();
  v115 = v24;
  MEMORY[0x24BDAC7A8](v24, v25);
  v116 = (char *)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728250(0, &qword_257150CF8, v27, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v117 = v28;
  MEMORY[0x24BDAC7A8](v28, v29);
  v118 = (char *)&v97 - v30;
  sub_2417E8088(0);
  v119 = v31;
  v131 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31, v32);
  v130 = (char *)&v97 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v35);
  v129 = (char *)&v97 - v36;
  if (qword_25714B958 != -1)
    swift_once();
  v37 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v38 = sub_2418A7EFC();
  v40 = v39;
  swift_bridgeObjectRelease();

  v138 = v38;
  v139 = v40;
  v108 = *(void **)a1;
  v106 = *(_QWORD *)(a1 + 8);
  v140 = *(_OWORD *)(a1 + 16);
  v142 = *(_OWORD *)(a1 + 16);
  v141 = v108;
  v132 = (unint64_t)v108;
  v133 = v106;
  v134 = v142;
  sub_24172887C(0, &qword_25714E2D8, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  v107 = v41;
  sub_2418A9828();
  v105 = v135;
  v104 = v136;
  v102 = *((_QWORD *)&v137 + 1);
  v103 = v137;
  v123 = a1;
  v42 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v43 = sub_2418A7EFC();
  v45 = v44;
  swift_bridgeObjectRelease();

  v135 = (void *)v43;
  v136 = v45;
  sub_241721040();
  v46 = sub_2418A92D0();
  v48 = v47;
  LOBYTE(v38) = v49 & 1;
  v50 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v135 = (void *)MEMORY[0x24269BDB4](v50);
  sub_2418A9270();
  v51 = v46;
  v52 = v123;
  sub_2417289EC(v51, v48, v38);
  swift_release();
  swift_bridgeObjectRelease();
  v53 = MEMORY[0x24BEE0D00];
  v54 = v110;
  sub_2418A99C0();
  v55 = swift_allocObject();
  v56 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)(v55 + 16) = *(_OWORD *)v52;
  *(_OWORD *)(v55 + 32) = v56;
  *(_QWORD *)(v55 + 48) = *(_QWORD *)(v52 + 32);
  sub_24174DDB4((uint64_t)&v141);
  v57 = v106;
  swift_retain();
  sub_24174DECC((uint64_t)&v142);
  sub_2417E822C();
  v58 = v109;
  v59 = v114;
  sub_2418A9420();
  swift_release();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v54, v59);
  LODWORD(v43) = sub_2418A8E68();
  v60 = v111;
  v61 = (uint64_t)v116;
  v62 = v113;
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v116, v58, v113);
  *(_DWORD *)(v61 + *(int *)(v115 + 36)) = v43;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v62);
  v135 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC400);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, v53, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2417E8334();
  v63 = v118;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_24172588C(v61, (uint64_t (*)(_QWORD))sub_2417E8114);
  v64 = v120;
  sub_2418A8568();
  sub_2417E8294();
  v65 = v130;
  sub_2418A933C();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v64, v122);
  v66 = (uint64_t)v63;
  v67 = v57;
  sub_241784BA4(v66, (uint64_t)&qword_257150CF8, (uint64_t)sub_2417E8114, (uint64_t)MEMORY[0x24BDF1088], (uint64_t (*)(_QWORD))sub_241728250);
  v68 = v131;
  v69 = v129;
  v70 = v119;
  (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v129, v65, v119);
  v135 = v108;
  v136 = v67;
  v137 = v140;
  MEMORY[0x24269C00C](&v132, v107);
  v72 = v132;
  v71 = v133;
  swift_bridgeObjectRelease();
  v73 = HIBYTE(v71) & 0xF;
  if ((v71 & 0x2000000000000000) == 0)
    v73 = v72 & 0xFFFFFFFFFFFFLL;
  v74 = v69;
  if (v73)
  {
    v75 = swift_allocObject();
    v76 = *(_OWORD *)(v52 + 16);
    *(_OWORD *)(v75 + 16) = *(_OWORD *)v52;
    *(_OWORD *)(v75 + 32) = v76;
    *(_QWORD *)(v75 + 48) = *(_QWORD *)(v52 + 32);
    sub_24174DDB4((uint64_t)&v141);
    swift_retain();
    sub_24174DECC((uint64_t)&v142);
    v77 = v99;
    sub_2418A9708();
    v78 = sub_2418A963C();
    KeyPath = swift_getKeyPath();
    v80 = v100;
    v81 = (uint64_t)v98;
    v82 = v68;
    v83 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v98, v77, v101);
    v84 = v125;
    v85 = (uint64_t *)(v81 + *(int *)(v125 + 36));
    *v85 = KeyPath;
    v85[1] = v78;
    v74 = v69;
    v86 = v83;
    v68 = v82;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v86);
    v87 = v126;
    sub_2417E8A18(v81, v126);
    v88 = 0;
  }
  else
  {
    v88 = 1;
    v87 = v126;
    v84 = v125;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56))(v87, v88, 1, v84);
  v89 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  v90 = v130;
  v89(v130, v74, v70);
  v91 = MEMORY[0x24BEE1C68];
  v92 = v127;
  sub_24173F288(v87, v127, (uint64_t)&qword_257150D40, (uint64_t)sub_2417E8400, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_24172570C);
  v93 = v128;
  v89(v128, v90, v70);
  sub_2417E8004();
  sub_24173F288(v92, (uint64_t)&v93[*(int *)(v94 + 48)], (uint64_t)&qword_257150D40, (uint64_t)sub_2417E8400, (uint64_t)v91, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_24172570C);
  sub_241784BA4(v87, (uint64_t)&qword_257150D40, (uint64_t)sub_2417E8400, (uint64_t)v91, (uint64_t (*)(_QWORD))sub_24172570C);
  v95 = *(void (**)(char *, uint64_t))(v131 + 8);
  v95(v129, v70);
  sub_241784BA4(v92, (uint64_t)&qword_257150D40, (uint64_t)sub_2417E8400, (uint64_t)v91, (uint64_t (*)(_QWORD))sub_24172570C);
  return ((uint64_t (*)(char *, uint64_t))v95)(v90, v70);
}

uint64_t sub_2417E7E40(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;

  v1 = *a1;
  v4 = *((_OWORD *)a1 + 1);
  v6 = *((_OWORD *)a1 + 1);
  v5 = v1;
  sub_24174DDB4((uint64_t)&v5);
  swift_retain();
  sub_24174DECC((uint64_t)&v6);
  sub_24172887C(0, &qword_25714E2D8, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](&v3);
  sub_2418A9E58();
  sub_2418A9810();
  sub_241793C9C((uint64_t)&v5);
  swift_release();
  return sub_2417E8A5C((uint64_t)&v6);
}

uint64_t sub_2417E7F18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A9660();
  *a1 = result;
  return result;
}

uint64_t sub_2417E7F54@<X0>(uint64_t a1@<X8>)
{
  return sub_2417E7024(a1);
}

void sub_2417E7F8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150CD8)
  {
    sub_24172570C(255, &qword_257150CE0, (uint64_t (*)(uint64_t))sub_2417E8004, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417E8484();
    v0 = sub_2418A972C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150CD8);
  }
}

void sub_2417E8004()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257150CE8)
  {
    sub_2417E8088(255);
    sub_24172570C(255, &qword_257150D40, (uint64_t (*)(uint64_t))sub_2417E8400, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257150CE8);
  }
}

void sub_2417E8088(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_257150CF0)
  {
    sub_241728250(255, &qword_257150CF8, (void (*)(uint64_t))sub_2417E8114, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v5[0] = v2;
    v5[1] = sub_2417E8294();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2448], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257150CF0);
  }
}

void sub_2417E8114()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150D00)
  {
    sub_2417E8198(255);
    sub_24172835C(255, (unint64_t *)&qword_257150D20, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150D00);
  }
}

void sub_2417E8198(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_257150D08)
  {
    sub_24172835C(255, &qword_257150D10, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDF53C0]);
    v5[0] = v2;
    v5[1] = sub_2417E822C();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2EA0], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257150D08);
  }
}

unint64_t sub_2417E822C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257150D18;
  if (!qword_257150D18)
  {
    sub_24172835C(255, &qword_257150D10, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDF53C0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF53E0], v1);
    atomic_store(result, (unint64_t *)&qword_257150D18);
  }
  return result;
}

unint64_t sub_2417E8294()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_257150D28;
  if (!qword_257150D28)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
    sub_241728250(255, &qword_257150CF8, (void (*)(uint64_t))sub_2417E8114, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v3 = v2;
    v4[0] = sub_2417E8334();
    v4[1] = sub_24172159C(&qword_25714C550, v1, MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v4);
    atomic_store(result, (unint64_t *)&qword_257150D28);
  }
  return result;
}

unint64_t sub_2417E8334()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_257150D30;
  if (!qword_257150D30)
  {
    sub_2417E8114();
    v2 = v1;
    sub_24172835C(255, &qword_257150D10, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDF53C0]);
    v4[2] = v3;
    v4[3] = sub_2417E822C();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_2417E86F0((unint64_t *)&qword_257150D38, (unint64_t *)&qword_257150D20, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257150D30);
  }
  return result;
}

void sub_2417E8400()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150D48)
  {
    sub_24172835C(255, &qword_257150D50, MEMORY[0x24BDF4108], MEMORY[0x24BDF40E8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    sub_24173EF74();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150D48);
  }
}

unint64_t sub_2417E8484()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257150D58;
  if (!qword_257150D58)
  {
    sub_24172570C(255, &qword_257150CE0, (uint64_t (*)(uint64_t))sub_2417E8004, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257150D58);
  }
  return result;
}

void sub_2417E84E4(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257150D60, (void (*)(uint64_t))sub_2417E7F8C);
}

void sub_2417E8500(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257150D68, sub_2417E84E4);
}

void sub_2417E851C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257150D78, sub_2417E8500);
}

void sub_2417E8538()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150D80)
  {
    sub_241728250(255, qword_257150C10, sub_2417E5F20, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    sub_2417E85B0();
    v0 = sub_2418A8D18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150D80);
  }
}

unint64_t sub_2417E85B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150D88;
  if (!qword_257150D88)
  {
    sub_241728250(255, qword_257150C10, sub_2417E5F20, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    v2 = v1;
    v3[0] = sub_2417E8650();
    v3[1] = sub_24172159C(&qword_257150960, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, (uint64_t)&unk_2418D6898);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150D88);
  }
  return result;
}

unint64_t sub_2417E8650()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150D90;
  if (!qword_257150D90)
  {
    sub_2417E5F20(255);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714C480, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED988]);
    v3[1] = sub_2417E86F0((unint64_t *)&qword_25714C220, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150D90);
  }
  return result;
}

uint64_t sub_2417E86F0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_24172835C(255, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF0710], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2417E8738()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150D98)
  {
    sub_24172570C(255, &qword_257150CE0, (uint64_t (*)(uint64_t))sub_2417E8004, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150D98);
  }
}

void sub_2417E87B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150DA0)
  {
    sub_241728250(255, &qword_257150D70, sub_2417E851C, (void (*)(uint64_t))sub_2417E8538);
    sub_2417E8848();
    v0 = sub_2418A9738();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150DA0);
  }
}

unint64_t sub_2417E8848()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150DA8;
  if (!qword_257150DA8)
  {
    sub_241728250(255, &qword_257150D70, sub_2417E851C, (void (*)(uint64_t))sub_2417E8538);
    v2 = v1;
    v3[0] = sub_241721DF8(&qword_257150DB0, (uint64_t (*)(uint64_t))sub_2417E851C, sub_2417E8908, MEMORY[0x24BDEDBB8]);
    v3[1] = sub_24172159C(&qword_257150DD0, (uint64_t (*)(uint64_t))sub_2417E8538, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150DA8);
  }
  return result;
}

uint64_t sub_2417E8908()
{
  return sub_241721DF8(&qword_257150DB8, (uint64_t (*)(uint64_t))sub_2417E8500, (uint64_t (*)(void))sub_2417E892C, MEMORY[0x24BDECC60]);
}

unint64_t sub_2417E892C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150DC0;
  if (!qword_257150DC0)
  {
    sub_2417E84E4(255);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257150DC8, (uint64_t (*)(uint64_t))sub_2417E7F8C, MEMORY[0x24BDF4498]);
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150DC0);
  }
  return result;
}

BOOL sub_2417E89B0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48) >= sub_2418A9E28();
}

uint64_t objectdestroyTm_14()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2417E8A08()
{
  uint64_t v0;

  return sub_2417E7E40((uint64_t *)(v0 + 16));
}

uint64_t sub_2417E8A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417E8400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417E8A5C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2417E8A84()
{
  return sub_24172159C(&qword_257150DD8, (uint64_t (*)(uint64_t))sub_2417E87B4, MEMORY[0x24BDF44C8]);
}

uint64_t destroy for StateOfMindLoggingRemindersSection(uint64_t a1)
{

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateOfMindLoggingRemindersSection(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v9 = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StateOfMindLoggingRemindersSection(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for StateOfMindLoggingRemindersSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateOfMindLoggingRemindersSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindLoggingRemindersSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingRemindersSection()
{
  return &type metadata for StateOfMindLoggingRemindersSection;
}

uint64_t sub_2417E8E28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417E8E38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;

  v55 = a1;
  v51 = sub_2418A8928();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v2);
  v47 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417EAA04();
  v48 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417935B8();
  v52 = v7;
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v45 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v57 = (char *)&v44 - v12;
  sub_2417EAA80();
  v14 = *(_QWORD *)(v13 - 8);
  v53 = v13;
  v54 = v14;
  MEMORY[0x24BDAC7A8](v13, v15);
  v49 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v1;
  v17 = *(_QWORD *)(v1 + 40);
  v61 = *(_QWORD *)(v1 + 32);
  v62 = v17;
  v44 = sub_241721040();
  swift_bridgeObjectRetain();
  v18 = MEMORY[0x24BEE0D00];
  v19 = sub_2418A92D0();
  v21 = v20;
  v23 = v22 & 1;
  v61 = v19;
  v62 = v20;
  v63 = v22 & 1;
  v64 = v24;
  *(_QWORD *)&v60 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC430);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, v18, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_2417289EC(v19, v21, v23);
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v56 + 104);
  v61 = *(_QWORD *)(v56 + 96);
  v62 = v25;
  swift_bridgeObjectRetain();
  v26 = sub_2418A92D0();
  v28 = v27;
  v61 = v26;
  v62 = v27;
  v30 = v29 & 1;
  v63 = v29 & 1;
  v64 = v31;
  *(_QWORD *)&v60 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC470);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v32 = (uint64_t)v45;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_2417289EC(v26, v28, v30);
  swift_bridgeObjectRelease();
  v33 = v47;
  sub_2418A891C();
  KeyPath = swift_getKeyPath();
  v35 = (uint64_t)v46;
  v36 = (uint64_t *)&v46[*(int *)(v48 + 36)];
  sub_24172570C(0, &qword_257150DE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDDD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  v38 = v50;
  v39 = v51;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))((char *)v36 + *(int *)(v37 + 28), v33, v51);
  *v36 = KeyPath;
  sub_2417289A8(v32, v35, (uint64_t (*)(_QWORD))sub_2417935B8);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v33, v39);
  sub_24172588C(v32, (uint64_t (*)(_QWORD))sub_2417935B8);
  v40 = v56;
  v59 = v56;
  sub_24172570C(0, &qword_257150DF8, (uint64_t (*)(uint64_t))sub_2417EAB14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
  sub_2417EAD48();
  sub_2417EAFC4();
  sub_2417EB024();
  v41 = v49;
  sub_2418A98D0();
  v60 = *(_OWORD *)(v40 + 16);
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  v58 = v40;
  sub_2417EB10C();
  v42 = v53;
  sub_2418A94B0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v41, v42);
}

uint64_t sub_2417E9388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  id v37;
  char v38;
  uint64_t KeyPath;
  uint64_t v40;
  void *v41;
  uint64_t *v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  unint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  char *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t *v60;
  _OWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  _OWORD *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  char *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  void *v89;
  void *v90;
  void (*v91)(char *, uint64_t);
  id v92;
  uint64_t v94;
  int *v95;
  char *v96;
  unint64_t v97;
  id v98;
  uint64_t OpaqueTypeConformance2;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  void (*v103)(char *, void *);
  void (*v104)(char *, char *, void *);
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  void *v125;
  unint64_t v126;
  char v127;

  v113 = a2;
  sub_2417EAE48();
  v112 = v3;
  v111 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v110 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v118 = (char *)&v94 - v8;
  sub_2417EACE8();
  v114 = v9;
  v10 = *((_QWORD *)v9 - 1);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417EAC6C();
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417EABF8(0);
  v108 = v19;
  v109 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v20);
  v100 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417EAB94();
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v117 = (uint64_t)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v119 = (uint64_t)&v94 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v121 = (uint64_t)&v94 - v31;
  MEMORY[0x24BDAC7A8](v30, v32);
  v120 = (uint64_t)&v94 - v33;
  v34 = *(void **)(a1 + 8);
  v107 = *(_QWORD *)a1;
  v116 = type metadata accessor for NotificationSettingsModel();
  v115 = sub_24172159C((unint64_t *)&qword_25714D020, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsModel, (uint64_t)&protocol conformance descriptor for NotificationSettingsModel);
  v35 = (void *)sub_2418A876C();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();

  v123 = a1;
  sub_2417935B8();
  v106 = v36;
  v105 = sub_2417EAD48();
  sub_2418A97C8();
  swift_getKeyPath();
  swift_getKeyPath();
  v37 = v34;
  v98 = v37;
  sub_2418A8418();

  swift_release();
  swift_release();
  v38 = (char)v125;
  KeyPath = swift_getKeyPath();
  v40 = swift_allocObject();
  *(_BYTE *)(v40 + 16) = v38;
  v104 = *(void (**)(char *, char *, void *))(v10 + 16);
  v96 = v13;
  v41 = v114;
  v104(v18, v13, v114);
  v42 = (uint64_t *)&v18[v15[9]];
  *v42 = KeyPath;
  v42[1] = (uint64_t)sub_241751224;
  v42[2] = v40;
  v103 = *(void (**)(char *, void *))(v10 + 8);
  v103(v13, v41);
  v43 = (_OWORD *)swift_allocObject();
  v44 = *(_OWORD *)(a1 + 80);
  v43[5] = *(_OWORD *)(a1 + 64);
  v43[6] = v44;
  v43[7] = *(_OWORD *)(a1 + 96);
  v45 = *(_OWORD *)(a1 + 16);
  v43[1] = *(_OWORD *)a1;
  v43[2] = v45;
  v46 = *(_OWORD *)(a1 + 48);
  v43[3] = *(_OWORD *)(a1 + 32);
  v43[4] = v46;
  sub_2417EB4E4(a1);
  v47 = sub_2417EADC8();
  v48 = v100;
  v95 = v15;
  v49 = v47;
  v97 = v47;
  sub_2418A9354();
  swift_release();
  sub_24172588C((uint64_t)v18, (uint64_t (*)(_QWORD))sub_2417EAC6C);
  v125 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC4B0);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v102 = v50;
  v101 = sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v125 = v15;
  v126 = v49;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v51 = v121;
  v52 = v108;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v109 = *(_QWORD *)(v109 + 8);
  ((void (*)(char *, uint64_t))v109)(v48, v52);
  sub_241731B4C(v51, v120, (uint64_t (*)(_QWORD))sub_2417EAB94);
  v53 = v98;
  v54 = (void *)sub_2418A876C();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();

  v122 = a1;
  v55 = v96;
  sub_2418A97C8();
  swift_getKeyPath();
  swift_getKeyPath();
  v56 = v53;
  sub_2418A8418();

  swift_release();
  swift_release();
  LOBYTE(v51) = (_BYTE)v125;
  v57 = swift_getKeyPath();
  v58 = swift_allocObject();
  *(_BYTE *)(v58 + 16) = v51;
  v59 = v114;
  v104(v18, v55, v114);
  v60 = (uint64_t *)&v18[v95[9]];
  *v60 = v57;
  v60[1] = (uint64_t)sub_24175DE5C;
  v60[2] = v58;
  v103(v55, v59);
  v61 = (_OWORD *)swift_allocObject();
  v62 = *(_OWORD *)(a1 + 80);
  v61[5] = *(_OWORD *)(a1 + 64);
  v61[6] = v62;
  v61[7] = *(_OWORD *)(a1 + 96);
  v63 = *(_OWORD *)(a1 + 16);
  v61[1] = *(_OWORD *)a1;
  v61[2] = v63;
  v64 = *(_OWORD *)(a1 + 48);
  v61[3] = *(_OWORD *)(a1 + 32);
  v61[4] = v64;
  sub_2417EB4E4(a1);
  sub_2418A9354();
  swift_release();
  sub_24172588C((uint64_t)v18, (uint64_t (*)(_QWORD))sub_2417EAC6C);
  v125 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC4F0);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v65 = v119;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  ((void (*)(char *, uint64_t))v109)(v48, v52);
  sub_241731B4C(v65, v121, (uint64_t (*)(_QWORD))sub_2417EAB94);
  v66 = v56;
  v67 = NotificationSettingsModel.customReminderSchedule.getter();

  v125 = (void *)v67;
  swift_getKeyPath();
  v68 = (_OWORD *)swift_allocObject();
  v69 = *(_OWORD *)(a1 + 80);
  v68[5] = *(_OWORD *)(a1 + 64);
  v68[6] = v69;
  v68[7] = *(_OWORD *)(a1 + 96);
  v70 = *(_OWORD *)(a1 + 16);
  v68[1] = *(_OWORD *)a1;
  v68[2] = v70;
  v71 = *(_OWORD *)(a1 + 48);
  v68[3] = *(_OWORD *)(a1 + 32);
  v68[4] = v71;
  sub_2417EB4E4(a1);
  sub_24172570C(0, &qword_25714D568, (uint64_t (*)(uint64_t))sub_2417EAF18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  type metadata accessor for CustomReminderRow();
  sub_2417EAF54();
  sub_24172159C(&qword_257150E50, (uint64_t (*)(uint64_t))sub_2417EAF18, MEMORY[0x24BEE5BD8]);
  sub_24172159C(qword_257150E78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderRow, (uint64_t)&unk_2418D2438);
  v72 = v118;
  sub_2418A9888();
  v124 = *(_OWORD *)(a1 + 16);
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  v73 = v66;
  sub_2418A96E4();
  v114 = v125;
  v109 = v126;
  LOBYTE(v56) = v127;
  v74 = sub_2418A8760();
  v115 = v75;
  v116 = v74;
  LOBYTE(v124) = 0;
  sub_2418A96C0();
  LOBYTE(v55) = (_BYTE)v125;
  v76 = v126;
  v77 = v119;
  sub_2417289A8(v120, v119, (uint64_t (*)(_QWORD))sub_2417EAB94);
  v78 = v117;
  sub_2417289A8(v121, v117, (uint64_t (*)(_QWORD))sub_2417EAB94);
  v79 = v111;
  v80 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
  v81 = v110;
  v82 = v112;
  v80(v110, v72, v112);
  LOBYTE(v125) = (_BYTE)v56;
  LOBYTE(v124) = (_BYTE)v55;
  v83 = v113;
  sub_2417289A8(v77, v113, (uint64_t (*)(_QWORD))sub_2417EAB94);
  sub_2417EAB14();
  v85 = v84;
  sub_2417289A8(v78, v83 + *(int *)(v84 + 48), (uint64_t (*)(_QWORD))sub_2417EAB94);
  v80((char *)(v83 + *(int *)(v85 + 64)), v81, v82);
  v86 = v83 + *(int *)(v85 + 80);
  v87 = (char)v125;
  v88 = v124;
  *(_QWORD *)v86 = v116;
  v90 = v114;
  v89 = (void *)v115;
  *(_QWORD *)(v86 + 8) = v115;
  *(_QWORD *)(v86 + 16) = v90;
  *(_QWORD *)(v86 + 24) = v109;
  *(_BYTE *)(v86 + 32) = v87;
  *(_BYTE *)(v86 + 40) = v88;
  *(_QWORD *)(v86 + 48) = v76;
  v91 = *(void (**)(char *, uint64_t))(v79 + 8);
  v92 = v89;
  swift_retain();
  swift_retain();
  swift_retain();
  v91(v118, v82);
  sub_24172588C(v121, (uint64_t (*)(_QWORD))sub_2417EAB94);
  sub_24172588C(v120, (uint64_t (*)(_QWORD))sub_2417EAB94);
  swift_release();
  swift_release();
  swift_release();

  v91(v81, v82);
  sub_24172588C(v117, (uint64_t (*)(_QWORD))sub_2417EAB94);
  return sub_24172588C(v119, (uint64_t (*)(_QWORD))sub_2417EAB94);
}

uint64_t sub_2417E9EB4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  void *v12;
  id v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;

  v26 = a2;
  sub_2417935B8();
  MEMORY[0x24BDAC7A8](v3, v4);
  v25 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *((_QWORD *)a1 + 7);
  v28 = *((_QWORD *)a1 + 6);
  v29 = v6;
  sub_241721040();
  swift_bridgeObjectRetain();
  v7 = sub_2418A92D0();
  v9 = v8;
  v11 = v10;
  v32 = *a1;
  v12 = (void *)*((_QWORD *)&v32 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  v13 = v12;
  sub_2418A8418();
  swift_release();
  swift_release();
  sub_2417D8118((uint64_t)&v32);
  if (v28 == 1)
    v14 = sub_2418A8E74();
  else
    v14 = sub_2418A8E68();
  v15 = v11 & 1;
  LODWORD(v28) = v14;
  v16 = sub_2418A9270();
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  sub_2417289EC(v7, v9, v15);
  swift_bridgeObjectRelease();
  v28 = v16;
  v29 = v18;
  v30 = v22;
  v31 = v20;
  v27 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC530);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v23 = (uint64_t)v25;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_2417289EC(v16, v18, v22);
  swift_bridgeObjectRelease();
  return sub_241731B4C(v23, v26, (uint64_t (*)(_QWORD))sub_2417935B8);
}

uint64_t sub_2417EA128@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  void *v12;
  id v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;

  v26 = a2;
  sub_2417935B8();
  MEMORY[0x24BDAC7A8](v3, v4);
  v25 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *((_QWORD *)a1 + 9);
  v28 = *((_QWORD *)a1 + 8);
  v29 = v6;
  sub_241721040();
  swift_bridgeObjectRetain();
  v7 = sub_2418A92D0();
  v9 = v8;
  v11 = v10;
  v32 = *a1;
  v12 = (void *)*((_QWORD *)&v32 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  v13 = v12;
  sub_2418A8418();
  swift_release();
  swift_release();
  sub_2417D8118((uint64_t)&v32);
  if (v28 == 1)
    v14 = sub_2418A8E74();
  else
    v14 = sub_2418A8E68();
  v15 = v11 & 1;
  LODWORD(v28) = v14;
  v16 = sub_2418A9270();
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  sub_2417289EC(v7, v9, v15);
  swift_bridgeObjectRelease();
  v28 = v16;
  v29 = v18;
  v30 = v22;
  v31 = v20;
  v27 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC570);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v23 = (uint64_t)v25;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_2417289EC(v16, v18, v22);
  swift_bridgeObjectRelease();
  return sub_241731B4C(v23, v26, (uint64_t (*)(_QWORD))sub_2417935B8);
}

uint64_t sub_2417EA39C(__int128 *a1)
{
  id v1;
  uint64_t result;
  char v3;
  __int128 v4;

  v4 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v1 = *((id *)&v4 + 1);
  sub_2418A8418();
  swift_release();
  swift_release();
  result = sub_2417D8118((uint64_t)&v4);
  if (v3 == 1)
  {
    sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
    return sub_2418A96D8();
  }
  return result;
}

uint64_t sub_2417EA468@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _BYTE v27[24];
  uint64_t v28;

  v6 = type metadata accessor for CustomReminderModel();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v8, v11);
  v14 = &v27[-v13];
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = &v27[-v16];
  v18 = *a1;
  v19 = v18;
  sub_2417A6C50(v18, (uint64_t)v17);
  v20 = *(void **)(a2 + 8);
  sub_2417289A8((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  type metadata accessor for NotificationSettingsModel();
  sub_24172159C((unint64_t *)&qword_25714D020, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsModel, (uint64_t)&protocol conformance descriptor for NotificationSettingsModel);
  v21 = v20;
  *a3 = sub_2418A8760();
  a3[1] = v22;
  v23 = type metadata accessor for CustomReminderRow();
  sub_2417289A8((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  sub_2418A96C0();
  sub_24172588C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  v24 = (char *)a3 + *(int *)(v23 + 24);
  v27[15] = 0;
  sub_2418A96C0();
  v25 = v28;
  *v24 = v27[16];
  *((_QWORD *)v24 + 1) = v25;
  return sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
}

uint64_t sub_2417EA610@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD v37[4];
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a1;
  v1 = sub_2418A9588();
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v43 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v42 = (char *)v37 - v6;
  if (qword_25714B958 != -1)
    swift_once();
  v7 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v40 = sub_2418A7EFC();
  v41 = v8;
  swift_bridgeObjectRelease();

  v9 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v10 = sub_2418A7EFC();
  v12 = v11;
  swift_bridgeObjectRelease();

  v13 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v14 = sub_2418A7EFC();
  v16 = v15;
  swift_bridgeObjectRelease();

  v17 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v18 = sub_2418A7EFC();
  v20 = v19;
  swift_bridgeObjectRelease();

  v45 = v40;
  v46 = v41;
  sub_241721040();
  v21 = sub_2418A92D0();
  v40 = v22;
  v41 = v21;
  v38 = v23;
  v39 = v24;
  v45 = v10;
  v46 = v12;
  v25 = sub_2418A92D0();
  v37[2] = v26;
  v37[3] = v25;
  v37[1] = v27;
  v45 = v14;
  v46 = v16;
  v28 = sub_2418A92D0();
  v30 = v29;
  LOBYTE(v12) = v31 & 1;
  sub_2418A957C();
  sub_2417289EC(v28, v30, v12);
  swift_bridgeObjectRelease();
  v45 = v18;
  v46 = v20;
  v32 = sub_2418A92D0();
  v34 = v33;
  LOBYTE(v20) = v35 & 1;
  sub_2418A9570();
  sub_2417289EC(v32, v34, v20);
  swift_bridgeObjectRelease();
  return sub_2418A9564();
}

uint64_t sub_2417EA9BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2417E8E38(a1);
}

void sub_2417EAA04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150DE0)
  {
    sub_2417935B8();
    sub_24172570C(255, &qword_257150DE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDDD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150DE0);
  }
}

void sub_2417EAA80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150DF0)
  {
    sub_2417935B8();
    sub_24172570C(255, &qword_257150DF8, (uint64_t (*)(uint64_t))sub_2417EAB14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417EAA04();
    v0 = sub_2418A98E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150DF0);
  }
}

void sub_2417EAB14()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_257150E00)
  {
    sub_2417EAB94();
    sub_2417EAE48();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_257150E00);
  }
}

void sub_2417EAB94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150E08)
  {
    sub_2417EABF8(255);
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150E08);
  }
}

void sub_2417EABF8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_257150E10)
  {
    sub_2417EAC6C();
    v5[0] = v2;
    v5[1] = sub_2417EADC8();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2550], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257150E10);
  }
}

void sub_2417EAC6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150E18)
  {
    sub_2417EACE8();
    sub_24172887C(255, &qword_25714C860, MEMORY[0x24BEE1328], MEMORY[0x24BDF1230]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150E18);
  }
}

void sub_2417EACE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150E20)
  {
    sub_2417935B8();
    sub_2417EAD48();
    v0 = sub_2418A97E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150E20);
  }
}

unint64_t sub_2417EAD48()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_257150E28;
  if (!qword_257150E28)
  {
    sub_2417935B8();
    v2 = v1;
    v3 = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    v4[0] = MEMORY[0x24BDF1F80];
    v4[1] = v3;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257150E28);
  }
  return result;
}

unint64_t sub_2417EADC8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150E30;
  if (!qword_257150E30)
  {
    sub_2417EAC6C();
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257150E38, (uint64_t (*)(uint64_t))sub_2417EACE8, MEMORY[0x24BDF46D0]);
    v3[1] = sub_24173E43C();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150E30);
  }
  return result;
}

void sub_2417EAE48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150E40)
  {
    sub_24172570C(255, &qword_25714D568, (uint64_t (*)(uint64_t))sub_2417EAF18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2417EAF18();
    type metadata accessor for CustomReminderRow();
    sub_2417EAF54();
    sub_24172159C(&qword_257150E50, (uint64_t (*)(uint64_t))sub_2417EAF18, MEMORY[0x24BEE5BD8]);
    v0 = sub_2418A98A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150E40);
  }
}

unint64_t sub_2417EAF18()
{
  unint64_t result;

  result = qword_2543914F0;
  if (!qword_2543914F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2543914F0);
  }
  return result;
}

unint64_t sub_2417EAF54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257150E48;
  if (!qword_257150E48)
  {
    sub_24172570C(255, &qword_25714D568, (uint64_t (*)(uint64_t))sub_2417EAF18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE12D8], v1);
    atomic_store(result, (unint64_t *)&qword_257150E48);
  }
  return result;
}

uint64_t sub_2417EAFBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417E9388(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_2417EAFC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257150E58;
  if (!qword_257150E58)
  {
    sub_24172570C(255, &qword_257150DF8, (uint64_t (*)(uint64_t))sub_2417EAB14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257150E58);
  }
  return result;
}

unint64_t sub_2417EB024()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257150E60;
  if (!qword_257150E60)
  {
    sub_2417EAA04();
    v2 = v1;
    v3[0] = sub_2417EAD48();
    v3[1] = sub_2417EB08C();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150E60);
  }
  return result;
}

unint64_t sub_2417EB08C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257150E68;
  if (!qword_257150E68)
  {
    sub_24172570C(255, &qword_257150DE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDDD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_257150E68);
  }
  return result;
}

uint64_t sub_2417EB0EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2417EA610(a1);
}

unint64_t sub_2417EB10C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_257150E70;
  if (!qword_257150E70)
  {
    sub_2417EAA80();
    v2 = v1;
    v3[0] = sub_2417EAD48();
    v3[1] = sub_2417EAFC4();
    v3[2] = sub_2417EB024();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4AF8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257150E70);
  }
  return result;
}

void sub_2417EB188(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  swift_getObjectType();
  sub_24172159C((unint64_t *)&qword_25714D020, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsModel, (uint64_t)&protocol conformance descriptor for NotificationSettingsModel);
  v2 = sub_2418A8760();
  v25 = v3;
  v26 = v2;
  sub_2418A96C0();
  if (qword_25714B958 != -1)
    swift_once();
  v4 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v5 = sub_2418A7EFC();
  v23 = v6;
  v24 = v5;
  swift_bridgeObjectRelease();

  v7 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v22 = sub_2418A7EFC();
  v9 = v8;
  swift_bridgeObjectRelease();

  v10 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v11 = sub_2418A7EFC();
  v13 = v12;
  swift_bridgeObjectRelease();

  v14 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v15 = sub_2418A7EFC();
  v17 = v16;
  swift_bridgeObjectRelease();

  v18 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v19 = sub_2418A7EFC();
  v21 = v20;
  swift_bridgeObjectRelease();

  *(_QWORD *)a1 = v26;
  *(_QWORD *)(a1 + 8) = v25;
  *(_BYTE *)(a1 + 16) = v27;
  *(_QWORD *)(a1 + 24) = v28;
  *(_QWORD *)(a1 + 32) = v24;
  *(_QWORD *)(a1 + 40) = v23;
  *(_QWORD *)(a1 + 48) = v22;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v17;
  *(_QWORD *)(a1 + 96) = v19;
  *(_QWORD *)(a1 + 104) = v21;
}

uint64_t sub_2417EB4A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417E9EB4(*(__int128 **)(v1 + 16), a1);
}

uint64_t sub_2417EB4B8()
{
  return swift_deallocObject();
}

uint64_t sub_2417EB4CC()
{
  uint64_t v0;

  return sub_2417EA39C((__int128 *)(v0 + 16));
}

uint64_t sub_2417EB4E4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 8);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_2417EB570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417EA128(*(__int128 **)(v1 + 16), a1);
}

uint64_t sub_2417EB578()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_16Tm()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2417EB5E4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2417EA468(a1, v2 + 16, a2);
}

uint64_t sub_2417EB5EC()
{
  sub_2417EAA80();
  sub_2417EB10C();
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_2417EB638(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v29;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v14 = *(int *)(v13 + 32);
    v29 = (char *)v10 + v14;
    v15 = &v11[v14];
    v16 = sub_2418A8100();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v17(v29, v15, v16);
    v18 = *(int *)(a3 + 24);
    v19 = (uint64_t *)((char *)v7 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_2418A8EB0();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      v24 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v25 = (char *)v19 + v24;
      v26 = (char *)v20 + v24;
      v27 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t sub_2417EB878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v6 = v4 + *(int *)(v5 + 32);
  v7 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + *(int *)(a2 + 24);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v9 = sub_2418A8EB0();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v8 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
  v12 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *sub_2417EB9BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v11 = *(int *)(v10 + 32);
  v12 = (char *)v7 + v11;
  v13 = &v8[v11];
  v14 = sub_2418A8100();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v12, v13, v14);
  v16 = *(int *)(a3 + 24);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_2418A8EB0();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v22 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v23 = (char *)v17 + v22;
    v24 = (char *)v18 + v22;
    v25 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2417EBBCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_retain();
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v10 = *(int *)(v9 + 32);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_2418A8100();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 24);
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    sub_2417ACEFC((uint64_t)a1 + v14);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2418A8EB0();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v20 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v21 = (char *)v15 + v20;
      v22 = (char *)v16 + v20;
      v23 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2417EBDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v11 = *(int *)(v10 + 32);
  v12 = (char *)v7 + v11;
  v13 = v8 + v11;
  v14 = sub_2418A8100();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = *(int *)(a3 + 24);
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_2418A8EB0();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v16, v17, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
    }
    v23 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v24 = &v16[v23];
    v25 = &v17[v23];
    v26 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_2417EBFD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v10 = *(int *)(v9 + 32);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_2418A8100();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    sub_2417ACEFC((uint64_t)a1 + v14);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2418A8EB0();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      v22 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v23 = &v15[v22];
      v24 = &v16[v22];
      v25 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417EC1E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417EC1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2417EC2C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417EC2CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ReflectiveIntervalPicker_iOS()
{
  uint64_t result;

  result = qword_257150ED8;
  if (!qword_257150ED8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417EC3D4()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2417EC494()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417EC4A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  _QWORD v70[2];

  v63 = a2;
  v3 = type metadata accessor for ReflectiveIntervalPicker_iOS();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  v7 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417ECF28(0);
  v64 = v8;
  v60 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417ECF0C(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417ECEF0(0);
  v61 = v16;
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v62 = (uint64_t)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v23 = (char *)&v50 - v22;
  v25 = MEMORY[0x24BDAC7A8](v21, v24);
  v27 = (char *)&v50 - v26;
  MEMORY[0x24BDAC7A8](v25, v28);
  v65 = (uint64_t)&v50 - v29;
  sub_2417289A8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalPicker_iOS);
  v30 = *(unsigned __int8 *)(v4 + 80);
  v58 = ((v30 + 16) & ~v30) + v5;
  v59 = (v30 + 16) & ~v30;
  v31 = v59;
  v57 = v30 | 7;
  v32 = swift_allocObject();
  sub_241731B4C((uint64_t)v7, v32 + v31, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalPicker_iOS);
  v67 = a1;
  v56 = type metadata accessor for ReflectiveIntervalPickerButtonView(0);
  v55 = sub_2417ECF4C();
  sub_2418A9708();
  *(_QWORD *)&v68 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC5B0);
  sub_241773FD4();
  v54 = v33;
  v53 = sub_24172159C((unint64_t *)&qword_2543915D8, (uint64_t (*)(uint64_t))sub_241773FD4, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v52 = sub_24172159C(&qword_257150F60, (uint64_t (*)(uint64_t))sub_2417ECF28, MEMORY[0x24BDF43B0]);
  v34 = v64;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v60 = *(_QWORD *)(v60 + 8);
  ((void (*)(char *, uint64_t))v60)(v11, v34);
  v35 = *(_QWORD *)(a1 + 16);
  v68 = *(_OWORD *)a1;
  v69 = v35;
  sub_24172570C(0, &qword_25714F250, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v51 = v36;
  MEMORY[0x24269C00C](v70);
  v37 = v70[0];
  sub_2417289A8((uint64_t)v15, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_2417ECF0C);
  v38 = v61;
  v39 = &v27[*(int *)(v61 + 36)];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = v37;
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_2417ECF0C);
  sub_241731B4C((uint64_t)v27, v65, (uint64_t (*)(_QWORD))sub_2417ECEF0);
  sub_2417289A8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalPicker_iOS);
  v40 = swift_allocObject();
  sub_241731B4C((uint64_t)v7, v40 + v59, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalPicker_iOS);
  v66 = a1;
  sub_2418A9708();
  *(_QWORD *)&v68 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC5F0);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v41 = v64;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  ((void (*)(char *, uint64_t))v60)(v11, v41);
  v42 = *(_QWORD *)(a1 + 16);
  v68 = *(_OWORD *)a1;
  v69 = v42;
  MEMORY[0x24269C00C](v70, v51);
  v43 = v70[0];
  sub_2417289A8((uint64_t)v15, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417ECF0C);
  v44 = &v23[*(int *)(v38 + 36)];
  *(_QWORD *)v44 = 0;
  *((_QWORD *)v44 + 1) = v43;
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_2417ECF0C);
  sub_241731B4C((uint64_t)v23, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_2417ECEF0);
  v45 = v65;
  sub_2417289A8(v65, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417ECEF0);
  v46 = v62;
  sub_2417289A8((uint64_t)v27, v62, (uint64_t (*)(_QWORD))sub_2417ECEF0);
  v47 = v63;
  sub_2417289A8((uint64_t)v23, v63, (uint64_t (*)(_QWORD))sub_2417ECEF0);
  sub_2417ECE90();
  sub_2417289A8(v46, v47 + *(int *)(v48 + 48), (uint64_t (*)(_QWORD))sub_2417ECEF0);
  sub_24172588C((uint64_t)v27, (uint64_t (*)(_QWORD))sub_2417ECEF0);
  sub_24172588C(v45, (uint64_t (*)(_QWORD))sub_2417ECEF0);
  sub_24172588C(v46, (uint64_t (*)(_QWORD))sub_2417ECEF0);
  return sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417ECEF0);
}

uint64_t sub_2417ECA5C()
{
  sub_24172570C(0, &qword_25714F250, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  return sub_2418A9810();
}

uint64_t sub_2417ECAC4()
{
  sub_24172570C(0, &qword_25714F250, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  return sub_2418A9810();
}

uint64_t sub_2417ECB2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  int *v19;
  uint64_t *v20;
  _OWORD v22[2];
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (uint64_t *)((char *)v22 - v9);
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870];
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v22 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  v22[1] = *(_OWORD *)a1;
  v23 = v16;
  sub_24172570C(0, &qword_25714F250, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, v11);
  sub_2418A9828();
  v22[0] = v24;
  v17 = v25;
  type metadata accessor for ReflectiveIntervalPicker_iOS();
  sub_2418A9828();
  *v10 = swift_getKeyPath();
  v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)a3 = a2;
  *(_OWORD *)(a3 + 8) = v22[0];
  *(_QWORD *)(a3 + 24) = v17;
  v19 = (int *)type metadata accessor for ReflectiveIntervalPickerButtonView(0);
  sub_2417ED1BC((uint64_t)v15, a3 + v19[6], qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v11);
  v20 = (uint64_t *)(a3 + v19[7]);
  *v20 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v18);
  swift_storeEnumTagMultiPayload();
  return sub_2417ED1BC((uint64_t)v10, a3 + v19[8], &qword_25714C0D8, v6, MEMORY[0x24BDEB580]);
}

uint64_t sub_2417ECD5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241861F08((uint64_t)v6);
  sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  *(_QWORD *)a1 = sub_2418A8C58();
  *(_QWORD *)(a1 + 8) = 0x4028000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  sub_2417ECE14();
  return sub_2417EC4A4(v1, a1 + *(int *)(v7 + 44));
}

void sub_2417ECE14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150F18)
  {
    sub_24172570C(255, &qword_257150F20, (uint64_t (*)(uint64_t))sub_2417ECE90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150F18);
  }
}

void sub_2417ECE90()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257150F28)
  {
    sub_2417ECEF0(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257150F28);
  }
}

void sub_2417ECEF0(uint64_t a1)
{
  sub_241728250(a1, &qword_257150F30, sub_2417ECF0C, sub_2417ECF68);
}

void sub_2417ECF0C(uint64_t a1)
{
  sub_241728250(a1, &qword_257150F38, sub_2417ECF28, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_2417ECF28(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_257150F40, type metadata accessor for ReflectiveIntervalPickerButtonView, sub_2417ECF4C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
}

uint64_t sub_2417ECF4C()
{
  return sub_24172159C(&qword_257150F48, type metadata accessor for ReflectiveIntervalPickerButtonView, (uint64_t)&unk_2418DB1C0);
}

void sub_2417ECF68(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_257150F50, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, sub_2417ECF8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEEBF0]);
}

uint64_t sub_2417ECF8C()
{
  return sub_24172159C(&qword_257150F58, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t)&unk_2418D12B4);
}

uint64_t sub_2417ECFAC()
{
  return sub_2417ED15C((uint64_t (*)(uint64_t))sub_2417ECA5C);
}

uint64_t sub_2417ECFB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417ECB2C(*(_QWORD *)(v1 + 16), 1, a1);
}

uint64_t objectdestroyTm_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for ReflectiveIntervalPicker_iOS();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 20);
  swift_release();
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v6 = v4 + *(int *)(v5 + 32);
  v7 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v3 + *(int *)(v1 + 24);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8EB0();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = v8 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v12 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2417ED150()
{
  return sub_2417ED15C((uint64_t (*)(uint64_t))sub_2417ECAC4);
}

uint64_t sub_2417ED15C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReflectiveIntervalPicker_iOS() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_2417ED198@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417ECB2C(*(_QWORD *)(v1 + 16), 2, a1);
}

uint64_t sub_2417ED1BC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;

  sub_24172570C(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_2417ED210()
{
  return sub_24172159C(&qword_257150F68, (uint64_t (*)(uint64_t))sub_2417ED23C, MEMORY[0x24BDF4700]);
}

void sub_2417ED23C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150F70)
  {
    sub_24172570C(255, &qword_257150F20, (uint64_t (*)(uint64_t))sub_2417ECE90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417ED2B4();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150F70);
  }
}

unint64_t sub_2417ED2B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257150F78;
  if (!qword_257150F78)
  {
    sub_24172570C(255, &qword_257150F20, (uint64_t (*)(uint64_t))sub_2417ECE90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257150F78);
  }
  return result;
}

uint64_t static HKFeatureSettings.Key<A>.periodicAssessmentPromptAcknowledgmentDate.getter()
{
  return sub_2417ED32C();
}

uint64_t static HKFeatureSettings.Key<A>.loggingPatternEscalationAcknowledgmentDate.getter()
{
  return sub_2417ED32C();
}

uint64_t sub_2417ED32C()
{
  sub_2418A9DE0();
  sub_2418A8100();
  return sub_2418AA08C();
}

id StateOfMindTimelinePresentingCalendar.__allocating_init(presenter:healthStore:dateToFocusOn:verticalSizeClass:)(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  char *v15;
  id v16;
  char *v17;
  uint64_t v19;
  objc_super v20;

  v4 = v3;
  v8 = sub_2418A8100();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (char *)objc_allocWithZone(v3);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v13[OBJC_IVAR____TtC14MentalHealthUI37StateOfMindTimelinePresentingCalendar_healthStore] = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
  objc_allocWithZone((Class)type metadata accessor for StateOfMindCalendarViewController());
  v14 = a2;
  v15 = (char *)StateOfMindCalendarViewController.init(healthStore:dateToFocusOn:verticalSizeClass:)(v14, (uint64_t)v12);
  v20.receiver = v13;
  v20.super_class = v4;
  v16 = objc_msgSendSuper2(&v20, sel_initWithRootViewController_, v15);
  v17 = &v15[qword_25715E1B8];
  swift_beginAccess();
  *((_QWORD *)v17 + 1) = &protocol witness table for StateOfMindTimelinePresentingCalendar;
  swift_unknownObjectWeakAssign();

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
  return v16;
}

id StateOfMindTimelinePresentingCalendar.init(presenter:healthStore:dateToFocusOn:verticalSizeClass:)(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  char *v14;
  objc_class *v15;
  id v16;
  char *v17;
  uint64_t v19;
  objc_super v20;

  v4 = v3;
  v8 = sub_2418A8100();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI37StateOfMindTimelinePresentingCalendar_healthStore] = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
  objc_allocWithZone((Class)type metadata accessor for StateOfMindCalendarViewController());
  v13 = a2;
  v14 = (char *)StateOfMindCalendarViewController.init(healthStore:dateToFocusOn:verticalSizeClass:)(v13, (uint64_t)v12);
  v15 = (objc_class *)type metadata accessor for StateOfMindTimelinePresentingCalendar();
  v20.receiver = v4;
  v20.super_class = v15;
  v16 = objc_msgSendSuper2(&v20, sel_initWithRootViewController_, v14);
  v17 = &v14[qword_25715E1B8];
  swift_beginAccess();
  *((_QWORD *)v17 + 1) = &protocol witness table for StateOfMindTimelinePresentingCalendar;
  swift_unknownObjectWeakAssign();

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
  return v16;
}

uint64_t sub_2417ED6E8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Class v34;
  id v35;
  void *v36;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = v2;
  v44 = v3;
  ObjectType = swift_getObjectType();
  v6 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (uint64_t *)((char *)&v38 - v12);
  v14 = sub_2418A8100();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2418A8340();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v45 = a2;
  v23(v18, a2, v14);
  v24 = sub_2418A8334();
  v25 = sub_2418AA05C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v40 = v13;
    v27 = v26;
    v38 = swift_slowAlloc();
    v47 = v38;
    *(_DWORD *)v27 = 136446466;
    v28 = sub_2418AA5D8();
    v39 = v10;
    v46 = sub_24176024C(v28, v29, &v47);
    ObjectType = (uint64_t)a1;
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    sub_24172159C((unint64_t *)&qword_257154530, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    v30 = sub_2418AA4AC();
    v46 = sub_24176024C(v30, v31, &v47);
    a1 = (void *)ObjectType;
    v10 = v39;
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    _os_log_impl(&dword_24171C000, v24, v25, "[%{public}s] Presenting timeline for date: %{public}s", (uint8_t *)v27, 0x16u);
    v32 = v38;
    swift_arrayDestroy();
    MEMORY[0x24269D548](v32, -1, -1);
    v33 = v27;
    v13 = v40;
    MEMORY[0x24269D548](v33, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }

  (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v43);
  _s14MentalHealthUI19StateOfMindTimelineO5ModelC05buildgH03day11healthStoreAE10Foundation4DateV_So08HKHealthL0CtFZ_0(v45, *(void **)(v44 + OBJC_IVAR____TtC14MentalHealthUI37StateOfMindTimelinePresentingCalendar_healthStore));
  swift_retain();
  StateOfMindTimeline.EntryFullView.init(model:)(v13);
  sub_2417EDD04((uint64_t)v13, (uint64_t)v10);
  sub_24176999C();
  v35 = objc_allocWithZone(v34);
  v36 = (void *)sub_2418A8C7C();
  objc_msgSend(a1, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v36, 0, 1, 0);
  swift_release();

  return sub_2417EDD48((uint64_t)v13);
}

id StateOfMindTimelinePresentingCalendar.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;

  v3 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      return objc_msgSend(objc_allocWithZone(v2), sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v3);
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata();
  return objc_msgSend(objc_allocWithZone(v2), sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v3);
}

void StateOfMindTimelinePresentingCalendar.init(navigationBarClass:toolbarClass:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StateOfMindTimelinePresentingCalendar.__allocating_init(rootViewController:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithRootViewController_, a1);

  return v3;
}

void StateOfMindTimelinePresentingCalendar.init(rootViewController:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StateOfMindTimelinePresentingCalendar.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_2418A9DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void StateOfMindTimelinePresentingCalendar.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StateOfMindTimelinePresentingCalendar.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindTimelinePresentingCalendar();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StateOfMindTimelinePresentingCalendar()
{
  return objc_opt_self();
}

uint64_t sub_2417EDD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417EDD48(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t method lookup function for StateOfMindTimelinePresentingCalendar()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateOfMindTimelinePresentingCalendar.__allocating_init(presenter:healthStore:dateToFocusOn:verticalSizeClass:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of StateOfMindTimelinePresentingCalendar.calendarView(_:didSelectDate:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

__n128 sub_2417EDDB4@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, char a5@<W5>, char a6@<W6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, uint64_t a9)
{
  int *v15;
  uint64_t *v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v15 = (int *)type metadata accessor for ValenceSelectionPhaseContent();
  v16 = (uint64_t *)((char *)a8 + v15[8]);
  *v16 = swift_getKeyPath();
  v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v18 = (uint64_t *)((char *)a8 + v15[9]);
  *v18 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v17);
  swift_storeEnumTagMultiPayload();
  v19 = (uint64_t *)((char *)a8 + v15[10]);
  *v19 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], v17);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  swift_retain();
  *a8 = sub_2418A8760();
  a8[1] = v20;
  v21 = (char *)a8 + v15[14];
  *(_QWORD *)v21 = a1;
  *((_QWORD *)v21 + 1) = a2;
  v21[16] = a3;
  v22 = (char *)a8 + v15[5];
  v23 = sub_2418A8688();
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a4, v23);
  *((_BYTE *)a8 + v15[6]) = a5;
  v25 = (char *)a8 + v15[11];
  swift_retain();
  swift_retain();
  sub_2418A96C0();
  *v25 = v31;
  *((_QWORD *)v25 + 1) = *((_QWORD *)&v31 + 1);
  *((_BYTE *)a8 + v15[13]) = a6;
  v26 = (uint64_t *)((char *)a8 + v15[7]);
  *v26 = a7;
  v26[1] = a9;
  v27 = (char *)a8 + v15[12];
  sub_2418A96C0();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a4, v23);
  *(_OWORD *)v27 = v31;
  *((_OWORD *)v27 + 1) = v32;
  result = v33;
  *((__n128 *)v27 + 2) = v33;
  *((_QWORD *)v27 + 6) = v34;
  *((_QWORD *)v27 + 7) = v35;
  *((_QWORD *)v27 + 8) = v36;
  return result;
}

uint64_t type metadata accessor for ValenceSelectionPhaseContent()
{
  uint64_t result;

  result = qword_257151010;
  if (!qword_257151010)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_2417EE0C8(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2418A8688();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v14 = (_QWORD *)((char *)v4 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[8];
    v18 = (_QWORD *)((char *)v4 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_2418A8EB0();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v24 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v25 = (char *)v18 + v24;
      v26 = (char *)v19 + v24;
      v27 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v28 = a3[9];
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (_QWORD *)((char *)a2 + v28);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v32 = a3[10];
    v33 = (_QWORD *)((char *)v4 + v32);
    v34 = (_QWORD *)((char *)a2 + v32);
    sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v35 = sub_2418A8238();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      *v33 = *v34;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v36 = a3[11];
    v37 = a3[12];
    v38 = (char *)v4 + v36;
    v39 = (char *)a2 + v36;
    *v38 = *v39;
    *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
    v40 = (char *)v4 + v37;
    v41 = (char *)a2 + v37;
    v42 = *((_OWORD *)v41 + 3);
    *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
    *((_OWORD *)v40 + 3) = v42;
    v43 = *((_OWORD *)v41 + 1);
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *((_OWORD *)v40 + 1) = v43;
    *((_QWORD *)v40 + 8) = *((_QWORD *)v41 + 8);
    v44 = a3[14];
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v45 = (char *)v4 + v44;
    v46 = (char *)a2 + v44;
    v47 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = v47;
    v45[16] = v46[16];
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2417EE448(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_release();
  v4 = a1 + a2[5];
  v5 = sub_2418A8688();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  v6 = a1 + a2[8];
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A8EB0();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v9 = v6 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v10 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  v11 = a1 + a2[9];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  v13 = a1 + a2[10];
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2418A8238();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_2417EE65C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2418A8688();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_2418A8EB0();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v22 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v23 = (char *)v17 + v22;
    v24 = (char *)v18 + v22;
    v25 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *v27 = *v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v30 = a3[10];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v33 = sub_2418A8238();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  }
  else
  {
    *v31 = *v32;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v34 = a3[11];
  v35 = a3[12];
  v36 = (char *)a1 + v34;
  v37 = (char *)a2 + v34;
  *v36 = *v37;
  *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
  v38 = (char *)a1 + v35;
  v39 = (char *)a2 + v35;
  v40 = *((_OWORD *)v39 + 3);
  *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
  *((_OWORD *)v38 + 3) = v40;
  v41 = *((_OWORD *)v39 + 1);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *((_OWORD *)v38 + 1) = v41;
  *((_QWORD *)v38 + 8) = *((_QWORD *)v39 + 8);
  v42 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = *((_QWORD *)v44 + 1);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = v45;
  v43[16] = v44[16];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_2417EE9B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t (*v28)(uint64_t);
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2418A8688();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v14 = a3[8];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v14, (uint64_t)&qword_25714D430, (uint64_t)type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v17);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2418A8EB0();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(v15, v16, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      v21 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v22 = (char *)v15 + v21;
      v23 = (char *)v16 + v21;
      v24 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v25 = a3[9];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v25, (uint64_t)&unk_257154F20, (uint64_t)MEMORY[0x24BDEB418], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v28, v29);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v26, v27, v30);
    }
    else
    {
      *v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v31 = a3[10];
    v32 = (_QWORD *)((char *)a1 + v31);
    v33 = (_QWORD *)((char *)a2 + v31);
    v34 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8];
    sub_241784BA4((uint64_t)a1 + v31, (uint64_t)&qword_25714F248, (uint64_t)MEMORY[0x24BDCF2D8], (uint64_t)v29, (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714F248, v34, v29);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v35 = sub_2418A8238();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v32, v33, v35);
    }
    else
    {
      *v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v36 = a3[11];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *v37 = *v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_retain();
  swift_release();
  v39 = a3[12];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  v40[2] = v41[2];
  v40[3] = v41[3];
  v40[4] = v41[4];
  v40[5] = v41[5];
  v40[6] = v41[6];
  v40[7] = v41[7];
  v40[8] = v41[8];
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  v42 = a3[14];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  *(_QWORD *)((char *)a1 + v42) = *(_QWORD *)((char *)a2 + v42);
  swift_retain();
  swift_release();
  *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
  swift_retain();
  swift_release();
  v43[16] = v44[16];
  return a1;
}

_OWORD *sub_2417EEE00(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2418A8688();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[8];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v15 = v14;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_2418A8EB0();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v13, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    }
    v19 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v20 = &v12[v19];
    v21 = &v13[v19];
    v22 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v23 = a3[9];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v27 = v26;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v24, v25, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  v29 = a3[10];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v33 = v32;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v34 = sub_2418A8238();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v30, v31, v34);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  v35 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = *((_OWORD *)v37 + 3);
  *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
  *((_OWORD *)v36 + 3) = v38;
  *((_QWORD *)v36 + 8) = *((_QWORD *)v37 + 8);
  v39 = *((_OWORD *)v37 + 1);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *((_OWORD *)v36 + 1) = v39;
  v40 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  *(_OWORD *)v41 = *(_OWORD *)v42;
  v41[16] = v42[16];
  return a1;
}

_QWORD *sub_2417EF11C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t (*v28)(uint64_t);
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  char *v50;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2418A8688();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  swift_release();
  if (a1 != a2)
  {
    v12 = a3[8];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v12, (uint64_t)&qword_25714D430, (uint64_t)type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v15);
    v17 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2418A8EB0();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v13, v14, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
      }
      v21 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v22 = &v13[v21];
      v23 = &v14[v21];
      v24 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    v25 = a3[9];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v25, (uint64_t)&unk_257154F20, (uint64_t)MEMORY[0x24BDEB418], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v28, v29);
    v31 = v30;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v26, v27, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    v33 = a3[10];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8];
    sub_241784BA4((uint64_t)a1 + v33, (uint64_t)&qword_25714F248, (uint64_t)MEMORY[0x24BDCF2D8], (uint64_t)v29, (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714F248, v36, v29);
    v38 = v37;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v39 = sub_2418A8238();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v34, v35, v39);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
  }
  v40 = a3[11];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  *v41 = *v42;
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  swift_release();
  v43 = a3[12];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  v47 = *((_OWORD *)v45 + 3);
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  *((_OWORD *)v44 + 3) = v47;
  *((_QWORD *)v44 + 8) = *((_QWORD *)v45 + 8);
  swift_release();
  v48 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  *(_QWORD *)((char *)a1 + v48) = *(_QWORD *)v50;
  swift_release();
  *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
  swift_release();
  v49[16] = v50[16];
  return a1;
}

uint64_t sub_2417EF500()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417EF50C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2418A8688();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[9];
        }
        else
        {
          sub_24172570C(0, qword_257150650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDEB580]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a3[10];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2417EF63C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417EF648(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_2418A8688();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[9];
        }
        else
        {
          sub_24172570C(0, qword_257150650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDEB580]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a4[10];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2417EF774()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2418A8688();
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
      {
        sub_24172570C(319, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_2417EF8BC()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_2417EF8CC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  unint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __n128 result;
  double Height;
  double Width;
  double v33;
  CGFloat v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  double v41;
  CGFloat v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  CGRect v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  __int128 v53;
  __n128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;

  v2 = v1;
  v4 = type metadata accessor for ValenceSelectionPhaseContent();
  v37 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v37 + 64);
  MEMORY[0x24BDAC7A8](v4, v6);
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  sub_2418A876C();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();
  swift_release();
  v35 = v51;
  v36 = v50;
  v41 = v52;
  sub_2418A876C();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();
  swift_release();
  v40 = v49;
  v7 = (uint64_t *)(v2 + *(int *)(v4 + 48));
  v8 = *v7;
  v9 = v7[1];
  v10 = v7[2];
  v11 = v7[3];
  v12 = v7[4];
  v13 = v7[5];
  v14 = v7[6];
  v15 = v7[7];
  v16 = v7[8];
  sub_24172887C(0, &qword_257151198, (uint64_t)&_s9PlacementVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  v17 = sub_24183E7B0();
  v38 = v18;
  v39 = v17;
  *(_QWORD *)&v53 = v8;
  *((_QWORD *)&v53 + 1) = v9;
  v54.n128_u64[0] = v10;
  v54.n128_u64[1] = v11;
  *(_QWORD *)&v55 = v12;
  *((_QWORD *)&v55 + 1) = v13;
  *(_QWORD *)&v56 = v14;
  *((_QWORD *)&v56 + 1) = v15;
  *(_QWORD *)&v57 = v16;
  sub_2418A96CC();
  v34 = v44;
  v19 = 1.0;
  if (CGRectGetHeight(v46) == 0.0
    || (v62.origin.x = v42, v62.origin.y = v43, v62.size.width = v34, v62.size.height = v45, CGRectGetWidth(v62) == 0.0))
  {
    v20 = v36;
    v21 = v37;
    v22 = v35;
  }
  else
  {
    v63.origin.x = v42;
    v63.origin.y = v43;
    v63.size.width = v34;
    v63.size.height = v45;
    v20 = v36;
    v21 = v37;
    v22 = v35;
    if (CGRectGetHeight(v63) != 0.0)
    {
      Height = CGRectGetHeight(v46);
      v64.origin.x = v42;
      v64.origin.y = v43;
      v64.size.width = v34;
      v64.size.height = v45;
      Width = CGRectGetWidth(v64);
      v65.origin.x = v42;
      v65.origin.y = v43;
      v65.size.width = v34;
      v65.size.height = v45;
      v33 = CGRectGetHeight(v65);
      if (v33 >= Width)
        v33 = Width;
      v19 = Height * 1.5 / v33;
    }
  }
  KeyPath = swift_getKeyPath();
  sub_2418411AC(KeyPath, 0, v20, v22, v47, (uint64_t)&v53, v41, v40, v39, v38, v19, v48);
  sub_2417289A8(v2, (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseContent);
  v24 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v25 = swift_allocObject();
  sub_241731B4C((uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseContent);
  v26 = v60;
  *(_OWORD *)(a1 + 96) = v59;
  *(_OWORD *)(a1 + 112) = v26;
  v27 = v61;
  v28 = v56;
  *(_OWORD *)(a1 + 32) = v55;
  *(_OWORD *)(a1 + 48) = v28;
  v29 = v58;
  *(_OWORD *)(a1 + 64) = v57;
  *(_OWORD *)(a1 + 80) = v29;
  result = v54;
  *(_OWORD *)a1 = v53;
  *(__n128 *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 128) = v27;
  *(_QWORD *)(a1 + 136) = sub_2417EFC8C;
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = sub_2417F46D0;
  *(_QWORD *)(a1 + 160) = v25;
  return result;
}

uint64_t sub_2417EFC90()
{
  type metadata accessor for ValenceSelectionPhaseContent();
  sub_24172887C(0, &qword_257151198, (uint64_t)&_s9PlacementVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  swift_retain();
  sub_2418A96CC();
  sub_2418A96D8();
  return swift_release();
}

id sub_2417EFDBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double v30;
  double v31;
  id result;
  void *v33;
  int homeButtonType;
  double v35;
  uint64_t v36;
  double v37;
  double v38;
  void *v39;
  int v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD v64[8];
  uint64_t v65;
  void *v66;

  v2 = v1;
  v63 = a1;
  sub_2417F3DD4(0, (unint64_t *)&qword_25714DE40, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  MEMORY[0x24BDAC7A8](v3, v4);
  v60 = (char *)&v58 - v5;
  sub_2417F3D50(0);
  v62 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v58 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v59 = (uint64_t)&v58 - v11;
  sub_241731FB0(0, &qword_2571511B8, (uint64_t (*)(uint64_t))sub_24177DD40, v12, MEMORY[0x24BDEF380]);
  v61 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v58 - v15;
  v17 = type metadata accessor for ValenceSelectionPhaseContent();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x24BDAC7A8](v17, v20);
  v21 = type metadata accessor for ValenceSelectionPhaseSpecs();
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v58 - v27;
  if (*(_BYTE *)(*(_QWORD *)(v1 + 8) + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_useLiveVisualization) == 1)
  {
    v29 = sub_2418A960C();
    sub_241861CB8((uint64_t)v28);
    sub_2418A8670();
    v31 = v30;
    if ((sub_2418A879C() & 1) == 0)
    {
      v35 = 64.0;
LABEL_13:
      v42 = (v31 + v35) * 0.67;
      sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
      v43 = sub_2418A9960();
      sub_24185E6DC(0.0, 1, 0.0, 1, v42, 0, 0.0, 1, (uint64_t)v64, 0.0, 1, 0.0, 1, v43, v44, v29, 0x3FF0000000000000, 0);
      swift_release();
      sub_2417289A8(v2, (uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseContent);
      v45 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      v46 = swift_allocObject();
      sub_241731B4C((uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v46 + v45, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseContent);
      v47 = v64[7];
      *((_OWORD *)v16 + 6) = v64[6];
      *((_OWORD *)v16 + 7) = v47;
      v48 = v65;
      v49 = v64[3];
      *((_OWORD *)v16 + 2) = v64[2];
      *((_OWORD *)v16 + 3) = v49;
      v50 = v64[5];
      *((_OWORD *)v16 + 4) = v64[4];
      *((_OWORD *)v16 + 5) = v50;
      v51 = v64[1];
      *(_OWORD *)v16 = v64[0];
      *((_OWORD *)v16 + 1) = v51;
      *((_QWORD *)v16 + 16) = v48;
      *((_QWORD *)v16 + 17) = sub_2417EFC8C;
      *((_QWORD *)v16 + 18) = 0;
      *((_QWORD *)v16 + 19) = sub_2417F4D8C;
      *((_QWORD *)v16 + 20) = v46;
      swift_storeEnumTagMultiPayload();
      sub_24177DD40();
      sub_2417F4BBC();
      sub_241721DF8(&qword_2571511E0, (uint64_t (*)(uint64_t))sub_2417F3D50, (uint64_t (*)(void))sub_2417F4CE8, MEMORY[0x24BDEDBB8]);
      return (id)sub_2418A8D24();
    }
    result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      v33 = result;
      homeButtonType = MobileGestalt_get_homeButtonType();

      v35 = 32.0;
      if (homeButtonType == 2)
        v35 = 40.0;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_17;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v66) = 1;
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)((unsigned __int8 *)&v66, *(double *)v64);
  v66 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC630);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24174B670();
  v36 = (uint64_t)v60;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241861CB8((uint64_t)v25);
  sub_2418A8670();
  v38 = v37;
  if ((sub_2418A879C() & 1) == 0)
  {
    v41 = 64.0;
LABEL_15:
    v52 = (v38 + v41) * 0.67;
    sub_24172588C((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
    v53 = sub_2418A9960();
    v54 = v58;
    sub_24185E8B0(0.0, 1, 0.0, 1, v52, 0, 0.0, 1, v58, 0.0, 1, 0.0, 1, v53, v55);
    sub_241784BA4(v36, (uint64_t)&qword_25714DE40, (uint64_t)MEMORY[0x24BDF1088], (uint64_t)&type metadata for StateOfMindVisualization.ValenceImage, (uint64_t (*)(_QWORD))sub_2417F3DD4);
    v56 = v54;
    v57 = v59;
    sub_241731B4C(v56, v59, (uint64_t (*)(_QWORD))sub_2417F3D50);
    sub_2417289A8(v57, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_2417F3D50);
    swift_storeEnumTagMultiPayload();
    sub_24177DD40();
    sub_2417F4BBC();
    sub_241721DF8(&qword_2571511E0, (uint64_t (*)(uint64_t))sub_2417F3D50, (uint64_t (*)(void))sub_2417F4CE8, MEMORY[0x24BDEDBB8]);
    sub_2418A8D24();
    return (id)sub_24172588C(v57, (uint64_t (*)(_QWORD))sub_2417F3D50);
  }
  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v39 = result;
    v40 = MobileGestalt_get_homeButtonType();

    v41 = 32.0;
    if (v40 == 2)
      v41 = 40.0;
    goto LABEL_15;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_2417F04C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[2];

  v2 = sub_2418A8D60();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = 0xD000000000000022;
  v16[1] = 0x80000002418DDBD0;
  sub_2418A8EC8();
  sub_2418A867C();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = v8;
  a1[1] = v10;
  a1[2] = v12;
  a1[3] = v14;
  return result;
}

uint64_t sub_2417F05B4()
{
  type metadata accessor for ValenceSelectionPhaseContent();
  sub_24172887C(0, &qword_257151198, (uint64_t)&_s9PlacementVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  swift_retain();
  sub_2418A96CC();
  sub_2418A96D8();
  return swift_release();
}

uint64_t sub_2417F06D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t (*v101)(uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  double v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  double v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t *v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  id v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  double v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  int v209;
  uint64_t v210;
  int v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char v215;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t result;
  void *v222;
  int homeButtonType;
  unsigned int *v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  void (*v228)(char *, char *, uint64_t);
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t (*v259)(uint64_t, uint64_t, uint64_t);
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  int *v268;
  int *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t (*v273)(void);
  uint64_t v274;
  char *v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t *v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  unint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  __int128 v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  __int128 v334;
  uint64_t v335;
  uint64_t v336;
  _UNKNOWN **v337;
  __int128 v338;
  uint64_t v339;
  char v340;
  __int128 v341;
  _QWORD v342[2];
  __int128 v343;
  uint64_t v344;
  char v345;
  uint64_t (*v346)@<X0>(uint64_t@<X8>);
  uint64_t v347;

  v293 = a2;
  v286 = sub_2418A87B4();
  v284 = *(_QWORD *)(v286 - 8);
  v4 = MEMORY[0x24BDAC7A8](v286, v3);
  v283 = (char *)&v274 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v285 = (char *)&v274 - v7;
  sub_24174184C();
  v277 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v275 = (char *)&v274 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ValenceSelectionPhaseContent();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  *(_QWORD *)&v326 = v11;
  v289 = v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  v290 = v15;
  v291 = (uint64_t)&v274 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177DFD8(0);
  v279 = v16;
  v278 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v276 = (char *)&v274 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
  sub_241731FB0(0, &qword_25714DE88, v21, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  MEMORY[0x24BDAC7A8](v22, v23);
  v282 = (char *)&v274 - v24;
  sub_24177DFA0(0);
  v314 = v25;
  v320 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v281 = (uint64_t)&v274 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v29);
  v280 = (uint64_t)&v274 - v30;
  sub_24172570C(0, &qword_25714DE78, v31, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v295 = (uint64_t)&v274 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34, v36);
  v327 = (uint64_t)&v274 - v37;
  v308 = type metadata accessor for ValenceSlider();
  MEMORY[0x24BDAC7A8](v308, v38);
  v306 = (uint64_t *)((char *)&v274 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417F3E70(0);
  v310 = v40;
  MEMORY[0x24BDAC7A8](v40, v41);
  v309 = (uint64_t)&v274 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241731FB0(0, (unint64_t *)&qword_25714DE68, v43, v19, v20);
  MEMORY[0x24BDAC7A8](v44, v45);
  v311 = (char *)&v274 - v46;
  sub_2417F3E4C(0);
  v313 = v47;
  v49 = MEMORY[0x24BDAC7A8](v47, v48);
  v294 = (uint64_t)&v274 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x24BDAC7A8](v49, v51);
  v312 = (uint64_t)&v274 - v53;
  MEMORY[0x24BDAC7A8](v52, v54);
  v328 = (uint64_t)&v274 - v55;
  sub_24177DF08(0);
  MEMORY[0x24BDAC7A8](v56, v57);
  v301 = (uint64_t)&v274 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177DEEC(0);
  v304 = v59;
  MEMORY[0x24BDAC7A8](v59, v60);
  v302 = (uint64_t)&v274 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F3E30(0);
  v305 = v62;
  v64 = MEMORY[0x24BDAC7A8](v62, v63);
  v292 = (uint64_t)&v274 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = MEMORY[0x24BDAC7A8](v64, v66);
  v303 = (uint64_t)&v274 - v68;
  MEMORY[0x24BDAC7A8](v67, v69);
  v333 = (uint64_t)&v274 - v70;
  sub_241731FB0(0, (unint64_t *)&qword_25714DE08, (uint64_t (*)(uint64_t))sub_24177DD40, (uint64_t (*)(uint64_t))sub_2417F3D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  v73 = MEMORY[0x24BDAC7A8](v71, v72);
  v322 = (uint64_t)&v274 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v73, v75);
  v332 = (uint64_t)&v274 - v76;
  v287 = type metadata accessor for ValenceSelectionPhaseSpecs();
  v78 = MEMORY[0x24BDAC7A8](v287, v77);
  v274 = (uint64_t)&v274 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = MEMORY[0x24BDAC7A8](v78, v80);
  v288 = (uint64_t)&v274 - v82;
  v84 = MEMORY[0x24BDAC7A8](v81, v83);
  v307 = (uint64_t)&v274 - v85;
  v87 = MEMORY[0x24BDAC7A8](v84, v86);
  v298 = (uint64_t)&v274 - v88;
  v90 = MEMORY[0x24BDAC7A8](v87, v89);
  v316 = (uint64_t)&v274 - v91;
  MEMORY[0x24BDAC7A8](v90, v92);
  v323 = (uint64_t)&v274 - v93;
  v94 = type metadata accessor for ValenceSelectionTitleText();
  v96 = MEMORY[0x24BDAC7A8](v94, v95);
  v299 = (uint64_t *)((char *)&v274 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v96, v98);
  v100 = (char *)&v274 - v99;
  sub_241731FB0(0, &qword_25714DE00, v101, v19, v20);
  v104 = MEMORY[0x24BDAC7A8](v102, v103);
  v300 = (char *)&v274 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v104, v106);
  v108 = (char *)&v274 - v107;
  sub_24177DC8C(0);
  v325 = v109;
  MEMORY[0x24BDAC7A8](v109, v110);
  v112 = (char *)&v274 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F3C28(0);
  v317 = v113;
  v115 = MEMORY[0x24BDAC7A8](v113, v114);
  v321 = (uint64_t)&v274 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = MEMORY[0x24BDAC7A8](v115, v117);
  v120 = (char *)&v274 - v119;
  MEMORY[0x24BDAC7A8](v118, v121);
  v331 = (uint64_t)&v274 - v122;
  v315 = a1;
  v123 = sub_2417F20B4();
  v330 = *(int *)(v13 + 52);
  v124 = *(_BYTE *)(a1 + v330);
  *(_QWORD *)v100 = v123;
  *((_QWORD *)v100 + 1) = v125;
  v100[16] = v124;
  v126 = *(int *)(v94 + 24);
  v296 = v94;
  *(_QWORD *)&v100[v126] = swift_getKeyPath();
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v324 = v127;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v341 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC660);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v319 = v128;
  v318 = sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v297 = sub_24172159C(&qword_2571511A0, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionTitleText, (uint64_t)&unk_2418D64C0);
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_24172588C((uint64_t)v100, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionTitleText);
  LOBYTE(v19) = sub_2418A90E4();
  v129 = v326;
  v130 = v315;
  v329 = v315 + *(int *)(v326 + 32);
  v131 = v323;
  sub_241861CB8(v323);
  v132 = v330;
  sub_2417A800C(*(_BYTE *)(v130 + v330));
  sub_24172588C(v131, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_2418A84A8();
  v134 = v133;
  v136 = v135;
  v138 = v137;
  v140 = v139;
  sub_2417F460C((uint64_t)v108, (uint64_t)v112, &qword_25714DE00, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionTitleText, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v141 = &v112[*(int *)(v325 + 36)];
  *v141 = (char)v19;
  *((_QWORD *)v141 + 1) = v134;
  *((_QWORD *)v141 + 2) = v136;
  *((_QWORD *)v141 + 3) = v138;
  *((_QWORD *)v141 + 4) = v140;
  v141[40] = 0;
  sub_2417F4988((uint64_t)v108);
  v142 = v130 + *(int *)(v129 + 44);
  v143 = *(_QWORD *)(v142 + 8);
  LOBYTE(v341) = *(_BYTE *)v142;
  *((_QWORD *)&v341 + 1) = v143;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  v325 = v144;
  sub_2418A96CC();
  if ((_BYTE)v334)
    v145 = 1.0;
  else
    v145 = 0.0;
  sub_2417289A8((uint64_t)v112, (uint64_t)v120, (uint64_t (*)(_QWORD))sub_24177DC8C);
  *(double *)&v120[*(int *)(v317 + 36)] = v145;
  v146 = (uint64_t)v112;
  v147 = v130;
  sub_24172588C(v146, (uint64_t (*)(_QWORD))sub_24177DC8C);
  sub_241731B4C((uint64_t)v120, v331, (uint64_t (*)(_QWORD))sub_2417F3C28);
  v148 = v316;
  sub_241861CB8(v316);
  LODWORD(v317) = *(unsigned __int8 *)(v130 + v132);
  sub_24172588C(v148, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_2417EFDBC(v332);
  v149 = v298;
  sub_241861CB8(v298);
  LODWORD(v316) = *(unsigned __int8 *)(v147 + v132);
  v150 = v132;
  sub_24172588C(v149, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  sub_2418AA1B8();
  v151 = (id)HKUILocalizedStringForValenceClassification();
  v152 = sub_2418A9DE0();
  v154 = v153;

  v155 = *(_BYTE *)(v147 + v150);
  v156 = (uint64_t)v299;
  *v299 = v152;
  *(_QWORD *)(v156 + 8) = v154;
  *(_BYTE *)(v156 + 16) = v155;
  v157 = (uint64_t *)(v156 + *(int *)(v296 + 24));
  *v157 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v341 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC690);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v158 = (uint64_t)v300;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_24172588C(v156, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionTitleText);
  v159 = sub_2418A9960();
  v160 = v301;
  sub_24185E9B8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v301, 0.0, 1, 0.0, 1, v159, v161);
  sub_2417F4988(v158);
  LOBYTE(v156) = sub_2418A90F0();
  v162 = v323;
  sub_241861CB8(v323);
  v163 = v150;
  sub_2417A80FC(*(_BYTE *)(v147 + v150));
  sub_24172588C(v162, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_2418A84A8();
  v165 = v164;
  v167 = v166;
  v169 = v168;
  v171 = v170;
  v172 = v160;
  v173 = v160;
  v174 = v302;
  sub_2417289A8(v172, v302, (uint64_t (*)(_QWORD))sub_24177DF08);
  v175 = v174 + *(int *)(v304 + 36);
  *(_BYTE *)v175 = v156;
  *(_QWORD *)(v175 + 8) = v165;
  *(_QWORD *)(v175 + 16) = v167;
  *(_QWORD *)(v175 + 24) = v169;
  *(_QWORD *)(v175 + 32) = v171;
  *(_BYTE *)(v175 + 40) = 0;
  sub_24172588C(v173, (uint64_t (*)(_QWORD))sub_24177DF08);
  v176 = *(_QWORD *)(v142 + 8);
  LOBYTE(v341) = *(_BYTE *)v142;
  *((_QWORD *)&v341 + 1) = v176;
  sub_2418A96CC();
  if ((_BYTE)v334)
    v177 = 1.0;
  else
    v177 = 0.0;
  v178 = v303;
  sub_2417289A8(v174, v303, (uint64_t (*)(_QWORD))sub_24177DEEC);
  *(double *)(v178 + *(int *)(v305 + 36)) = v177;
  sub_24172588C(v174, (uint64_t (*)(_QWORD))sub_24177DEEC);
  sub_241731B4C(v178, v333, (uint64_t (*)(_QWORD))sub_2417F3E30);
  v179 = type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  v305 = v179;
  sub_2418A876C();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();
  swift_release();
  v180 = *((_QWORD *)&v341 + 1);
  v181 = v342[0];
  v182 = *(_BYTE *)(v147 + v163);
  v183 = (uint64_t)v306;
  *v306 = v341;
  *(_QWORD *)(v183 + 8) = v180;
  *(_QWORD *)(v183 + 16) = v181;
  *(_BYTE *)(v183 + 24) = v182;
  v184 = (uint64_t *)(v183 + *(int *)(v308 + 24));
  *v184 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v185 = sub_2418A90F0();
  sub_241861CB8(v162);
  sub_24172588C(v162, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_2418A84A8();
  v187 = v186;
  v189 = v188;
  v191 = v190;
  v193 = v192;
  v194 = v309;
  sub_2417289A8(v183, v309, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSlider);
  v195 = v194 + *(int *)(v310 + 36);
  *(_BYTE *)v195 = v185;
  *(_QWORD *)(v195 + 8) = v187;
  *(_QWORD *)(v195 + 16) = v189;
  *(_QWORD *)(v195 + 24) = v191;
  *(_QWORD *)(v195 + 32) = v193;
  *(_BYTE *)(v195 + 40) = 0;
  sub_24172588C(v183, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSlider);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  sub_2418AA1B8();
  v196 = (id)HKUILocalizedStringForValenceClassification();
  v197 = sub_2418A9DE0();
  v199 = v198;

  *(_QWORD *)&v341 = v197;
  *((_QWORD *)&v341 + 1) = v199;
  sub_241721DF8(&qword_2571511A8, (uint64_t (*)(uint64_t))sub_2417F3E70, sub_2417F49E4, MEMORY[0x24BDECC60]);
  sub_241721040();
  v200 = v311;
  sub_2418A9408();
  swift_bridgeObjectRelease();
  sub_24172588C(v194, (uint64_t (*)(_QWORD))sub_2417F3E70);
  v201 = *(_QWORD *)(v142 + 8);
  v202 = v328;
  LOBYTE(v341) = *(_BYTE *)v142;
  *((_QWORD *)&v341 + 1) = v201;
  sub_2418A96CC();
  if ((_BYTE)v334)
    v203 = 1.0;
  else
    v203 = 0.0;
  v204 = (uint64_t)v200;
  v205 = (uint64_t)v200;
  v206 = v312;
  sub_2417F460C(v205, v312, (unint64_t *)&qword_25714DE68, (uint64_t (*)(uint64_t))sub_2417F3E70, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  *(double *)(v206 + *(int *)(v313 + 36)) = v203;
  sub_2417F4A00(v204);
  sub_241731B4C(v206, v202, (uint64_t (*)(_QWORD))sub_2417F3E4C);
  v207 = v307;
  sub_241861CB8(v307);
  v208 = v317;
  v209 = *(unsigned __int8 *)(v147 + v330);
  v210 = v207;
  v211 = v316;
  sub_24172588C(v210, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  v212 = 1;
  v213 = v320;
  if ((*(_BYTE *)(v147 + *(int *)(v326 + 24)) & 1) != 0)
    goto LABEL_16;
  LODWORD(v325) = v209;
  sub_2418A876C();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();
  swift_release();
  v334 = v341;
  v335 = v342[0];
  sub_2418A9858();
  v326 = v338;
  v214 = v339;
  v215 = v340;
  v336 = v287;
  v337 = &off_2511AFCC0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v334);
  sub_241861CB8((uint64_t)boxed_opaque_existential_1);
  v217 = v291;
  sub_2417289A8(v147, v291, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseContent);
  v218 = (*(unsigned __int8 *)(v289 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v289 + 80);
  v219 = swift_allocObject();
  sub_241731B4C(v217, v219 + v218, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseContent);
  v343 = v326;
  v344 = v214;
  v345 = v215;
  sub_24174DE50(&v334, (uint64_t)v342);
  *(_QWORD *)&v341 = sub_2417F4A60;
  *((_QWORD *)&v341 + 1) = v219;
  v346 = sub_2417AE5A0;
  v347 = 0;
  v220 = v288;
  sub_241861CB8(v288);
  result = (uint64_t)(id)MobileGestalt_get_current_device();
  if (!result)
  {
LABEL_26:
    __break(1u);
    return result;
  }
  v222 = (void *)result;
  homeButtonType = MobileGestalt_get_homeButtonType();

  v224 = (unsigned int *)MEMORY[0x24BDECEA8];
  v225 = v284;
  if (homeButtonType != 2)
    v224 = (unsigned int *)MEMORY[0x24BDECEA0];
  v226 = v283;
  v227 = v286;
  (*(void (**)(char *, _QWORD, uint64_t))(v284 + 104))(v283, *v224, v286);
  v228 = *(void (**)(char *, char *, uint64_t))(v225 + 32);
  v229 = v285;
  v228(v285, v226, v227);
  sub_24172588C(v220, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_24172159C(&qword_25714CBB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF78]);
  result = sub_2418A9DA4();
  if ((result & 1) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  v230 = (uint64_t)v275;
  v228(v275, v229, v227);
  sub_24172835C(0, (unint64_t *)&qword_25714CE48, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ActionButton);
  v232 = v231;
  v233 = sub_24177E0AC();
  v234 = sub_24172159C((unint64_t *)&qword_25714CB40, (uint64_t (*)(uint64_t))sub_24174184C, MEMORY[0x24BEE30C8]);
  v235 = v276;
  v236 = v277;
  sub_2418A9390();
  sub_24172588C(v230, (uint64_t (*)(_QWORD))sub_24174184C);
  sub_2417AEBAC((uint64_t)&v341);
  *(_QWORD *)&v341 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC6C0);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v341 = v232;
  *((_QWORD *)&v341 + 1) = v236;
  v342[0] = v233;
  v342[1] = v234;
  swift_getOpaqueTypeConformance2();
  v237 = (uint64_t)v282;
  v238 = v279;
  sub_2418A9450();
  v239 = v327;
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v278 + 8))(v235, v238);
  LOBYTE(v238) = sub_2418A90F0();
  v240 = v274;
  sub_241861CB8(v274);
  v202 = v328;
  sub_24172588C(v240, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_2418A84A8();
  v242 = v241;
  v244 = v243;
  v246 = v245;
  v248 = v247;
  v249 = v281;
  sub_2417F460C(v237, v281, &qword_25714DE88, (uint64_t (*)(uint64_t))sub_24177DFD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v250 = v249 + *(int *)(v314 + 36);
  *(_BYTE *)v250 = v238;
  *(_QWORD *)(v250 + 8) = v242;
  *(_QWORD *)(v250 + 16) = v244;
  *(_QWORD *)(v250 + 24) = v246;
  *(_QWORD *)(v250 + 32) = v248;
  *(_BYTE *)(v250 + 40) = 0;
  sub_2417F4AA8(v237);
  v251 = v249;
  v252 = v280;
  sub_241731B4C(v251, v280, (uint64_t (*)(_QWORD))sub_24177DFA0);
  sub_241731B4C(v252, v239, (uint64_t (*)(_QWORD))sub_24177DFA0);
  v212 = 0;
  v213 = v320;
  v208 = v317;
  v211 = v316;
  v209 = v325;
LABEL_16:
  v253 = v327;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v213 + 56))(v327, v212, 1, v314);
  v254 = 0x4038000000000000;
  if (v209)
    v254 = 0;
  v330 = v254;
  if (v211)
    v255 = 0x4020000000000000;
  else
    v255 = 0x403E000000000000;
  if (v208)
    v256 = 0x4020000000000000;
  else
    v256 = 0x403E000000000000;
  v257 = v321;
  sub_2417289A8(v331, v321, (uint64_t (*)(_QWORD))sub_2417F3C28);
  v258 = v202;
  v259 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8];
  v260 = v322;
  sub_2417F460C(v332, v322, (unint64_t *)&qword_25714DE08, (uint64_t (*)(uint64_t))sub_24177DD40, (uint64_t (*)(uint64_t))sub_2417F3D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  v261 = v292;
  sub_2417289A8(v333, v292, (uint64_t (*)(_QWORD))sub_2417F3E30);
  v262 = v258;
  v263 = v294;
  sub_2417289A8(v262, v294, (uint64_t (*)(_QWORD))sub_2417F3E4C);
  v264 = v253;
  v265 = v295;
  sub_2417F4B04(v264, v295);
  v266 = v257;
  v267 = v293;
  sub_2417289A8(v266, v293, (uint64_t (*)(_QWORD))sub_2417F3C28);
  sub_24177DB84();
  v269 = v268;
  v270 = v267 + v268[12];
  *(_QWORD *)v270 = v256;
  *(_BYTE *)(v270 + 8) = 0;
  sub_2417F460C(v260, v267 + v268[16], (unint64_t *)&qword_25714DE08, (uint64_t (*)(uint64_t))sub_24177DD40, (uint64_t (*)(uint64_t))sub_2417F3D50, v259);
  v271 = v267 + v269[20];
  *(_QWORD *)v271 = v255;
  *(_BYTE *)(v271 + 8) = 0;
  sub_2417289A8(v261, v267 + v269[24], (uint64_t (*)(_QWORD))sub_2417F3E30);
  sub_2417289A8(v263, v267 + v269[28], (uint64_t (*)(_QWORD))sub_2417F3E4C);
  v272 = v267 + v269[32];
  *(_QWORD *)v272 = v330;
  *(_BYTE *)(v272 + 8) = 0;
  sub_2417F4B04(v265, v267 + v269[36]);
  v273 = MEMORY[0x24BEE1C68];
  sub_241784BA4(v327, (uint64_t)&qword_25714DE78, (uint64_t)sub_24177DFA0, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD))sub_24172570C);
  sub_24172588C(v328, (uint64_t (*)(_QWORD))sub_2417F3E4C);
  sub_24172588C(v333, (uint64_t (*)(_QWORD))sub_2417F3E30);
  sub_2417F4B60(v332);
  sub_24172588C(v331, (uint64_t (*)(_QWORD))sub_2417F3C28);
  sub_241784BA4(v265, (uint64_t)&qword_25714DE78, (uint64_t)sub_24177DFA0, (uint64_t)v273, (uint64_t (*)(_QWORD))sub_24172570C);
  sub_24172588C(v263, (uint64_t (*)(_QWORD))sub_2417F3E4C);
  sub_24172588C(v261, (uint64_t (*)(_QWORD))sub_2417F3E30);
  sub_2417F4B60(v322);
  return sub_24172588C(v321, (uint64_t (*)(_QWORD))sub_2417F3C28);
}

uint64_t sub_2417F20B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  void (*v15)(char *, uint64_t);
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  uint64_t v21;

  v0 = sub_2418A8238();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2418A8100();
  v20 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v20 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  if (v21 == 2)
  {
    type metadata accessor for ValenceSelectionPhaseContent();
    sub_241862158((uint64_t)v4);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2418A8418();
    swift_release();
    swift_release();
    swift_release();
    v16 = sub_2418A8178();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v5);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    if ((v16 & 1) != 0)
    {
      if (qword_25714B958 == -1)
        goto LABEL_15;
      goto LABEL_8;
    }
    if (qword_25714B958 == -1)
    {
LABEL_15:
      v18 = (id)qword_25715E110;
      swift_bridgeObjectRetain();
      v17 = sub_2418A7EFC();
      swift_bridgeObjectRelease();

      return v17;
    }
LABEL_14:
    swift_once();
    goto LABEL_15;
  }
  if (v21 == 1)
  {
    sub_2418A80D0();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2418A8418();
    swift_release();
    swift_release();
    swift_release();
    sub_2418A8094();
    v14 = v13;
    v15 = *(void (**)(char *, uint64_t))(v20 + 8);
    v15(v9, v5);
    v15(v12, v5);
    if (v14 > 180.0)
    {
      if (qword_25714B958 == -1)
        goto LABEL_15;
LABEL_8:
      swift_once();
      goto LABEL_15;
    }
    if (qword_25714B958 == -1)
      goto LABEL_15;
    goto LABEL_14;
  }
  return 0;
}

_QWORD *sub_2417F250C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = type metadata accessor for ValenceSelectionPhaseContent();
  sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  result = MEMORY[0x24269C00C](&v4);
  if ((v4 & 1) == 0)
    return (_QWORD *)(*(uint64_t (**)(_QWORD *))(a1 + *(int *)(v2 + 28)))(result);
  return result;
}

uint64_t sub_2417F25A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD v14[2];
  _BYTE v15[280];
  _QWORD v16[35];
  _OWORD v17[10];
  uint64_t v18;
  _OWORD v19[18];

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
  sub_241731FB0(0, &qword_2571510C8, (uint64_t (*)(uint64_t))sub_2417F407C, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v14 - v6;
  sub_2417EF8CC((uint64_t)v19);
  v17[8] = v19[8];
  v17[9] = v19[9];
  v18 = *(_QWORD *)&v19[10];
  v17[4] = v19[4];
  v17[5] = v19[5];
  v17[6] = v19[6];
  v17[7] = v19[7];
  v17[0] = v19[0];
  v17[1] = v19[1];
  v17[2] = v19[2];
  v17[3] = v19[3];
  sub_2418A9960();
  sub_24185EA10(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, INFINITY, 0);
  sub_2417F455C((uint64_t)v17);
  memcpy(v19, v16, 0x118uLL);
  memcpy(v15, v16, sizeof(v15));
  v14[1] = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC6F0);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2417F407C(0);
  sub_241721DF8(&qword_257151178, (uint64_t (*)(uint64_t))sub_2417F407C, (uint64_t (*)(void))sub_2417F4478, MEMORY[0x24BDEDBB8]);
  sub_2418A9450();
  swift_bridgeObjectRelease();
  sub_2417F455C((uint64_t)v19);
  v8 = (char *)(v1 + *(int *)(type metadata accessor for ValenceSelectionPhaseContent() + 44));
  v9 = *v8;
  v10 = *((_QWORD *)v8 + 1);
  LOBYTE(v16[0]) = v9;
  v16[1] = v10;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  if (v15[0])
    v11 = 1.0;
  else
    v11 = 0.0;
  sub_2417F460C((uint64_t)v7, a1, &qword_2571510C8, (uint64_t (*)(uint64_t))sub_2417F407C, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], v3);
  sub_2417F4058(0);
  *(double *)(a1 + *(int *)(v12 + 36)) = v11;
  return sub_2417F4660((uint64_t)v7);
}

uint64_t sub_2417F28A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  char *v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[5];

  v38 = a2;
  sub_2417F3C04(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F3E8C(0);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v37 = (uint64_t)&v36 - v13;
  sub_2417F4058(0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F403C(0);
  v19 = v18;
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v36 - v25;
  sub_2417F25A0((uint64_t)v17);
  v27 = sub_2418A882C();
  v28 = sub_2418A90D8();
  sub_2417289A8((uint64_t)v17, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417F4058);
  v29 = &v23[*(int *)(v19 + 36)];
  *(_QWORD *)v29 = v27;
  v29[8] = v28;
  sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))sub_2417F4058);
  sub_241731B4C((uint64_t)v23, (uint64_t)v26, (uint64_t (*)(_QWORD))sub_2417F403C);
  *(_QWORD *)v6 = sub_2418A8C58();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  sub_241728944(0, &qword_2571510F8, sub_24177DB68);
  sub_2417F06D0(a1, (uint64_t)&v6[*(int *)(v30 + 44)]);
  v39[3] = type metadata accessor for ValenceSelectionPhaseSpecs();
  v39[4] = (uint64_t)&off_2511AFCC0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  type metadata accessor for ValenceSelectionPhaseContent();
  sub_241861CB8((uint64_t)boxed_opaque_existential_1);
  sub_24177C6B4(v39, (uint64_t)v11);
  sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))sub_2417F3C04);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  v32 = v37;
  sub_241731B4C((uint64_t)v11, v37, (uint64_t (*)(_QWORD))sub_2417F3E8C);
  sub_2417289A8((uint64_t)v26, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417F403C);
  sub_2417289A8(v32, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_2417F3E8C);
  v33 = v38;
  sub_2417289A8((uint64_t)v23, v38, (uint64_t (*)(_QWORD))sub_2417F403C);
  sub_2417F3FD0();
  sub_2417289A8((uint64_t)v11, v33 + *(int *)(v34 + 48), (uint64_t (*)(_QWORD))sub_2417F3E8C);
  sub_24172588C(v32, (uint64_t (*)(_QWORD))sub_2417F3E8C);
  sub_24172588C((uint64_t)v26, (uint64_t (*)(_QWORD))sub_2417F403C);
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))sub_2417F3E8C);
  return sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417F403C);
}

uint64_t sub_2417F2BAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;

  v2 = v1;
  v50 = a1;
  v3 = type metadata accessor for ValenceSelectionPhaseContent();
  v49 = *(_QWORD *)(v3 - 8);
  v47[1] = *(_QWORD *)(v49 + 64);
  MEMORY[0x24BDAC7A8](v3, v4);
  v48 = (uint64_t)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ValenceSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F3F90(0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (_QWORD *)((char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417F3F0C();
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F3EF0(0);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F40BC();
  v24 = v23;
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)v47 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v13 = sub_2418A9960();
  v13[1] = v28;
  sub_241728944(0, &qword_257151170, sub_2417F3FB4);
  sub_2417F28A8(v2, (uint64_t)v13 + *(int *)(v29 + 44));
  sub_2417289A8((uint64_t)v13, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_2417F3F90);
  v30 = &v18[*(int *)(v15 + 36)];
  *(_QWORD *)v30 = 0xD000000000000022;
  *((_QWORD *)v30 + 1) = 0x80000002418DDBD0;
  sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2417F3F90);
  v31 = sub_2418A9960();
  sub_24185EBE4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v22, 0.0, 1, INFINITY, 0, v31, v32);
  sub_24172588C((uint64_t)v18, (uint64_t (*)(_QWORD))sub_2417F3F0C);
  sub_241861CB8((uint64_t)v9);
  sub_24172588C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  v33 = sub_2418A9978();
  v34 = v2 + *(int *)(v3 + 44);
  v35 = *(_BYTE *)v34;
  v36 = *(_QWORD *)(v34 + 8);
  v51 = v35;
  v52 = v36;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  LOBYTE(v18) = v53;
  sub_2417289A8((uint64_t)v22, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_2417F3EF0);
  v37 = &v27[*(int *)(v24 + 36)];
  *(_QWORD *)v37 = v33;
  v37[8] = (char)v18;
  sub_24172588C((uint64_t)v22, (uint64_t (*)(_QWORD))sub_2417F3EF0);
  v38 = v2;
  v39 = v48;
  sub_2417289A8(v38, v48, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseContent);
  v40 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v41 = swift_allocObject();
  sub_241731B4C(v39, v41 + v40, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseContent);
  v53 = 0;
  swift_retain();
  sub_2418A96C0();
  LOBYTE(v13) = v51;
  v42 = v52;
  v43 = v50;
  sub_2417289A8((uint64_t)v27, v50, (uint64_t (*)(_QWORD))sub_2417F40BC);
  swift_release();
  sub_2417F40A0(0);
  v45 = v43 + *(int *)(v44 + 36);
  *(_QWORD *)v45 = sub_2417F4938;
  *(_QWORD *)(v45 + 8) = v41;
  *(_BYTE *)(v45 + 16) = (_BYTE)v13;
  *(_QWORD *)(v45 + 24) = v42;
  return sub_24172588C((uint64_t)v27, (uint64_t (*)(_QWORD))sub_2417F40BC);
}

uint64_t sub_2417F2FA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t aBlock;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  void *v47;
  uint64_t (*v48)();
  uint64_t v49;
  char v50;

  v40 = sub_2418A9A44();
  v43 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40, v2);
  v39 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2418A9A68();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v38 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ValenceSelectionPhaseContent();
  v37 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v37 + 64);
  MEMORY[0x24BDAC7A8](v7, v9);
  v10 = type metadata accessor for ValenceSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2418A9A80();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v35 - v21;
  v23 = a1 + *(int *)(v7 + 44);
  v24 = *(_BYTE *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  LOBYTE(aBlock) = v24;
  v45 = v25;
  v50 = 1;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96D8();
  sub_241762EFC(0, &qword_257150740);
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_setAnimationsEnabled_, 1);
  sub_241762EFC(0, (unint64_t *)&qword_2543915E8);
  v36 = sub_2418AA0D4();
  sub_2418A9A74();
  sub_241861CB8((uint64_t)v13);
  sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  MEMORY[0x24269C2A0](v19, 1.0);
  v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v19, v14);
  sub_2417289A8(a1, (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseContent);
  v27 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v28 = swift_allocObject();
  sub_241731B4C((uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseContent);
  v48 = sub_2417F4948;
  v49 = v28;
  aBlock = MEMORY[0x24BDAC760];
  v45 = 1107296256;
  v46 = sub_2417599E8;
  v47 = &block_descriptor_7;
  v29 = _Block_copy(&aBlock);
  swift_release();
  v30 = v38;
  sub_2418A9A5C();
  aBlock = MEMORY[0x24BEE4AF8];
  sub_24172159C((unint64_t *)&unk_25714F340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_2417F496C(0);
  sub_24172159C((unint64_t *)&qword_25714F350, (uint64_t (*)(uint64_t))sub_2417F496C, MEMORY[0x24BEE12C8]);
  v32 = v39;
  v31 = v40;
  sub_2418AA248();
  v33 = (void *)v36;
  MEMORY[0x24269C8C4](v22, v30, v32, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v31);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v42);
  return ((uint64_t (*)(char *, uint64_t))v26)(v22, v14);
}

uint64_t sub_2417F3388()
{
  type metadata accessor for ValenceSelectionPhaseContent();
  sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  return sub_2418A9810();
}

uint64_t sub_2417F3400@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  _QWORD v36[2];

  v36[0] = a1;
  sub_2417F40A0(0);
  v36[1] = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241731FB0(0, &qword_257151168, (uint64_t (*)(uint64_t))sub_2417F3EF0, v6, MEMORY[0x24BDEF380]);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v36 - v9;
  sub_2417F3F90(0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (_QWORD *)((char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417F3F0C();
  v16 = v15;
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F3EF0(0);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v24 = (char *)v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v25);
  v27 = (char *)v36 - v26;
  if (*(_BYTE *)(v1 + *(int *)(type metadata accessor for ValenceSelectionPhaseContent() + 24)) == 1)
  {
    *v14 = sub_2418A9960();
    v14[1] = v28;
    sub_241728944(0, &qword_257151170, sub_2417F3FB4);
    sub_2417F28A8(v1, (uint64_t)v14 + *(int *)(v29 + 44));
    sub_2417289A8((uint64_t)v14, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_2417F3F90);
    v30 = &v19[*(int *)(v16 + 36)];
    *(_QWORD *)v30 = 0xD000000000000022;
    *((_QWORD *)v30 + 1) = 0x80000002418DDBD0;
    sub_24172588C((uint64_t)v14, (uint64_t (*)(_QWORD))sub_2417F3F90);
    v31 = sub_2418A9960();
    sub_24185EBE4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v24, 0.0, 1, INFINITY, 0, v31, v32);
    sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))sub_2417F3F0C);
    v33 = sub_2417F3EF0;
    sub_241731B4C((uint64_t)v24, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_2417F3EF0);
    sub_2417289A8((uint64_t)v27, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_2417F3EF0);
    swift_storeEnumTagMultiPayload();
    sub_241721DF8(&qword_257151110, (uint64_t (*)(uint64_t))sub_2417F3EF0, (uint64_t (*)(void))sub_2417F4248, MEMORY[0x24BDEDBB8]);
    sub_2417F42C8();
    sub_2418A8D24();
    v34 = (uint64_t)v27;
  }
  else
  {
    sub_2417F2BAC((uint64_t)v5);
    v33 = sub_2417F40A0;
    sub_2417289A8((uint64_t)v5, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_2417F40A0);
    swift_storeEnumTagMultiPayload();
    sub_241721DF8(&qword_257151110, (uint64_t (*)(uint64_t))sub_2417F3EF0, (uint64_t (*)(void))sub_2417F4248, MEMORY[0x24BDEDBB8]);
    sub_2417F42C8();
    sub_2418A8D24();
    v34 = (uint64_t)v5;
  }
  return sub_24172588C(v34, (uint64_t (*)(_QWORD))v33);
}

uint64_t sub_2417F3794@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  double v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[5];

  v47 = a1;
  sub_2417F3C04(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F3E8C(0);
  v46 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v42 = (uint64_t)&v41 - v12;
  sub_241731FB0(0, &qword_257151078, (uint64_t (*)(uint64_t))sub_2417F3EA8, v13, MEMORY[0x24BDEF380]);
  v44 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v45 = (uint64_t)&v41 - v16;
  v17 = sub_2418A84E4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F3ECC(0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F3EA8(0);
  v43 = v26;
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v30 = (char *)&v41 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v31);
  v33 = (char *)&v41 - v32;
  if (*(_BYTE *)(*(_QWORD *)(v1 + 8) + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_useLiveVisualization) == 1)
  {
    sub_2417F3400((uint64_t)v25);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2418A8418();
    swift_release();
    swift_release();
    swift_release();
    v34 = *(double *)v48;
    type metadata accessor for ValenceSelectionPhaseContent();
    sub_241861034((uint64_t)v21);
    sub_24182EE70((uint64_t)v21, (uint64_t)v25, (uint64_t)v30, v34);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    sub_24172588C((uint64_t)v25, (uint64_t (*)(_QWORD))sub_2417F3ECC);
    v35 = sub_2417F3EA8;
    sub_241731B4C((uint64_t)v30, (uint64_t)v33, (uint64_t (*)(_QWORD))sub_2417F3EA8);
    sub_2417289A8((uint64_t)v33, v45, (uint64_t (*)(_QWORD))sub_2417F3EA8);
    swift_storeEnumTagMultiPayload();
    sub_2417F4140();
    sub_241721DF8(&qword_257151138, (uint64_t (*)(uint64_t))sub_2417F3E8C, sub_2417F43B8, MEMORY[0x24BDEDBB8]);
    sub_2418A8D24();
    v36 = (uint64_t)v33;
  }
  else
  {
    *(_QWORD *)v5 = sub_2418A8C58();
    *((_QWORD *)v5 + 1) = 0;
    v5[16] = 0;
    sub_241728944(0, &qword_2571510F8, sub_24177DB68);
    sub_2417F06D0(v1, (uint64_t)&v5[*(int *)(v37 + 44)]);
    v48[3] = type metadata accessor for ValenceSelectionPhaseSpecs();
    v48[4] = (uint64_t)&off_2511AFCC0;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v48);
    type metadata accessor for ValenceSelectionPhaseContent();
    sub_241861CB8((uint64_t)boxed_opaque_existential_1);
    sub_24177C6B4(v48, (uint64_t)v10);
    sub_24172588C((uint64_t)v5, (uint64_t (*)(_QWORD))sub_2417F3C04);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    v35 = sub_2417F3E8C;
    v39 = v42;
    sub_241731B4C((uint64_t)v10, v42, (uint64_t (*)(_QWORD))sub_2417F3E8C);
    sub_2417289A8(v39, v45, (uint64_t (*)(_QWORD))sub_2417F3E8C);
    swift_storeEnumTagMultiPayload();
    sub_2417F4140();
    sub_241721DF8(&qword_257151138, (uint64_t (*)(uint64_t))sub_2417F3E8C, sub_2417F43B8, MEMORY[0x24BDEDBB8]);
    sub_2418A8D24();
    v36 = v39;
  }
  return sub_24172588C(v36, (uint64_t (*)(_QWORD))v35);
}

void sub_2417F3C04(uint64_t a1)
{
  sub_241728658(a1, &qword_25714DDD8, (uint64_t (*)(uint64_t))sub_24177DB68, &qword_25714DE98, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
}

void sub_2417F3C28(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DDF0, sub_24177DC8C);
}

void sub_2417F3C44(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_241731FB0(255, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v5 = sub_2418A87FC();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_2417F3CBC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DE18, sub_24177DDDC);
}

void sub_2417F3CD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DE28)
  {
    type metadata accessor for CGRect(255);
    sub_24172159C(&qword_25714DE30, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD830]);
    v0 = sub_2418A8F04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DE28);
  }
}

void sub_2417F3D50(uint64_t a1)
{
  sub_2417F3D74(a1, &qword_25714DE38, (unint64_t *)&qword_25714DE40, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_2417F3D74(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_2417F3DD4(255, a3, a4);
    v5 = sub_2418A87FC();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_2417F3DD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_2417F3E30(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DE48, sub_24177DEEC);
}

void sub_2417F3E4C(uint64_t a1)
{
  sub_2417F3C44(a1, &qword_25714DE60, (unint64_t *)&qword_25714DE68, (uint64_t (*)(uint64_t))sub_2417F3E70);
}

void sub_2417F3E70(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DE70, (void (*)(uint64_t))type metadata accessor for ValenceSlider);
}

void sub_2417F3E8C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257151070, sub_24177E1D0);
}

void sub_2417F3EA8(uint64_t a1)
{
  sub_241731FB0(a1, &qword_257151080, (uint64_t (*)(uint64_t))sub_2417F3ECC, (uint64_t (*)(uint64_t))sub_2417782FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_2417F3ECC(uint64_t a1)
{
  sub_241731FB0(a1, &qword_257151088, (uint64_t (*)(uint64_t))sub_2417F3EF0, (uint64_t (*)(uint64_t))sub_2417F40A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_2417F3EF0(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257151090, (void (*)(uint64_t))sub_2417F3F0C);
}

void sub_2417F3F0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151098)
  {
    sub_2417F3F90(255);
    sub_24172835C(255, &qword_257150828, MEMORY[0x24BEE0D00], MEMORY[0x24BEE0D10], MEMORY[0x24BDF06E0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151098);
  }
}

void sub_2417F3F90(uint64_t a1)
{
  sub_241728658(a1, &qword_2571510A0, (uint64_t (*)(uint64_t))sub_2417F3FB4, &qword_2571510E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF4730]);
}

void sub_2417F3FB4(uint64_t a1)
{
  sub_24172570C(a1, &qword_2571510A8, (uint64_t (*)(uint64_t))sub_2417F3FD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417F3FD0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2571510B0)
  {
    sub_2417F403C(255);
    sub_2417F3E8C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2571510B0);
  }
}

void sub_2417F403C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_2571510B8, sub_2417F4058);
}

void sub_2417F4058(uint64_t a1)
{
  sub_2417F3C44(a1, &qword_2571510C0, &qword_2571510C8, (uint64_t (*)(uint64_t))sub_2417F407C);
}

void sub_2417F407C(uint64_t a1)
{
  sub_2417F3D74(a1, &qword_2571510D0, &qword_2571510D8, (void (*)(uint64_t))sub_2417F3CD8);
}

void sub_2417F40A0(uint64_t a1)
{
  sub_241721CBC(a1, &qword_2571510E8, (void (*)(uint64_t))sub_2417F40BC);
}

void sub_2417F40BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571510F0)
  {
    sub_2417F3EF0(255);
    sub_24172835C(255, &qword_25714C790, MEMORY[0x24BEE1328], MEMORY[0x24BEE1340], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEEBF0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571510F0);
  }
}

unint64_t sub_2417F4140()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151100;
  if (!qword_257151100)
  {
    sub_2417F3EA8(255);
    v2 = v1;
    v3[0] = sub_2417F41C0();
    v3[1] = sub_24172159C(&qword_25714DBA8, (uint64_t (*)(uint64_t))sub_2417782FC, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151100);
  }
  return result;
}

unint64_t sub_2417F41C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151108;
  if (!qword_257151108)
  {
    sub_2417F3ECC(255);
    v2 = v1;
    v3[0] = sub_241721DF8(&qword_257151110, (uint64_t (*)(uint64_t))sub_2417F3EF0, (uint64_t (*)(void))sub_2417F4248, MEMORY[0x24BDEDBB8]);
    v3[1] = sub_2417F42C8();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151108);
  }
  return result;
}

unint64_t sub_2417F4248()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151118;
  if (!qword_257151118)
  {
    sub_2417F3F0C();
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257151120, (uint64_t (*)(uint64_t))sub_2417F3F90, MEMORY[0x24BDF4750]);
    v3[1] = sub_2417DA3EC();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151118);
  }
  return result;
}

unint64_t sub_2417F42C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151128;
  if (!qword_257151128)
  {
    sub_2417F40A0(255);
    v2 = v1;
    v3[0] = sub_2417F4330();
    v3[1] = sub_2417D7214();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151128);
  }
  return result;
}

unint64_t sub_2417F4330()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151130;
  if (!qword_257151130)
  {
    sub_2417F40BC();
    v2 = v1;
    v3[0] = sub_241721DF8(&qword_257151110, (uint64_t (*)(uint64_t))sub_2417F3EF0, (uint64_t (*)(void))sub_2417F4248, MEMORY[0x24BDEDBB8]);
    v3[1] = sub_241740590();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151130);
  }
  return result;
}

uint64_t sub_2417F43B8()
{
  return sub_241721DF8(&qword_257151140, (uint64_t (*)(uint64_t))sub_24177E1D0, sub_2417F43DC, MEMORY[0x24BDECC60]);
}

uint64_t sub_2417F43DC()
{
  return sub_241721DF8(&qword_257151148, (uint64_t (*)(uint64_t))sub_24177E1B4, sub_2417F4400, MEMORY[0x24BDECC60]);
}

uint64_t sub_2417F4400()
{
  return sub_241721DF8(&qword_257151150, (uint64_t (*)(uint64_t))sub_24177E198, sub_2417F4424, MEMORY[0x24BDECC60]);
}

uint64_t sub_2417F4424()
{
  return sub_241721DF8(&qword_257151158, (uint64_t (*)(uint64_t))sub_24177DAEC, sub_2417F4448, MEMORY[0x24BDEDBB8]);
}

uint64_t sub_2417F4448()
{
  return sub_24172159C(&qword_257151160, (uint64_t (*)(uint64_t))sub_2417F3C04, MEMORY[0x24BDF4700]);
}

uint64_t sub_2417F446C(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

unint64_t sub_2417F4478()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151180;
  if (!qword_257151180)
  {
    sub_2417F3DD4(255, &qword_2571510D8, (void (*)(uint64_t))sub_2417F3CD8);
    v2 = v1;
    v3[0] = sub_2417F4518();
    v3[1] = sub_24172159C(&qword_257151190, (uint64_t (*)(uint64_t))sub_2417F3CD8, MEMORY[0x24BDF0400]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151180);
  }
  return result;
}

unint64_t sub_2417F4518()
{
  unint64_t result;

  result = qword_257151188;
  if (!qword_257151188)
  {
    result = MEMORY[0x24269D47C](&unk_2418D932C, &_s4LiveVN);
    atomic_store(result, (unint64_t *)&qword_257151188);
  }
  return result;
}

uint64_t sub_2417F455C(uint64_t a1)
{
  sub_2417F446C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_2417F460C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  sub_241731FB0(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_2417F4660(uint64_t a1)
{
  uint64_t v2;

  sub_241731FB0(0, &qword_2571510C8, (uint64_t (*)(uint64_t))sub_2417F407C, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417F46D0(uint64_t a1)
{
  return sub_2417F4D98(a1, (uint64_t (*)(uint64_t, uint64_t))sub_2417EFC90);
}

uint64_t objectdestroyTm_16()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for ValenceSelectionPhaseContent();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  v4 = v3 + v1[5];
  v5 = sub_2418A8688();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  v6 = v3 + v1[8];
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A8EB0();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v9 = v6 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v10 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  v11 = v3 + v1[9];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  v13 = v3 + v1[10];
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2418A8238();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2417F4938()
{
  return sub_2417F4A6C(sub_2417F2FA8);
}

uint64_t sub_2417F4948()
{
  return sub_2417F4A6C((uint64_t (*)(uint64_t))sub_2417F3388);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

void sub_2417F496C(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714D438, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t sub_2417F4988(uint64_t a1)
{
  uint64_t v2;

  sub_241731FB0(0, &qword_25714DE00, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionTitleText, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417F49E4()
{
  return sub_24172159C(&qword_2571511B0, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSlider, (uint64_t)&unk_2418D3FF8);
}

uint64_t sub_2417F4A00(uint64_t a1)
{
  uint64_t v2;

  sub_241731FB0(0, (unint64_t *)&qword_25714DE68, (uint64_t (*)(uint64_t))sub_2417F3E70, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417F4A60()
{
  return sub_2417F4A6C((uint64_t (*)(uint64_t))sub_2417F250C);
}

uint64_t sub_2417F4A6C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ValenceSelectionPhaseContent() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_2417F4AA8(uint64_t a1)
{
  uint64_t v2;

  sub_241731FB0(0, &qword_25714DE88, (uint64_t (*)(uint64_t))sub_24177DFD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417F4B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_25714DE78, (uint64_t (*)(uint64_t))sub_24177DFA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417F4B60(uint64_t a1)
{
  uint64_t v2;

  sub_241731FB0(0, (unint64_t *)&qword_25714DE08, (uint64_t (*)(uint64_t))sub_24177DD40, (uint64_t (*)(uint64_t))sub_2417F3D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2417F4BBC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2571511C0;
  if (!qword_2571511C0)
  {
    sub_24177DD40();
    v2 = v1;
    v3[0] = sub_241721DF8(&qword_2571511C8, (uint64_t (*)(uint64_t))sub_2417F3CBC, sub_2417F4C5C, MEMORY[0x24BDEDBB8]);
    v3[1] = sub_24172159C(&qword_257151190, (uint64_t (*)(uint64_t))sub_2417F3CD8, MEMORY[0x24BDF0400]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2571511C0);
  }
  return result;
}

uint64_t sub_2417F4C5C()
{
  return sub_241721DF8(&qword_2571511D0, (uint64_t (*)(uint64_t))sub_24177DDDC, (uint64_t (*)(void))sub_2417F4C80, MEMORY[0x24BDEEC40]);
}

unint64_t sub_2417F4C80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2571511D8;
  if (!qword_2571511D8)
  {
    sub_24177DDF8();
    v2 = v1;
    v3[0] = sub_241741D50();
    v3[1] = sub_241728524();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2571511D8);
  }
  return result;
}

unint64_t sub_2417F4CE8()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2571511E8;
  if (!qword_2571511E8)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
    sub_2417F3DD4(255, (unint64_t *)&qword_25714DE40, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v3 = v2;
    v4[0] = sub_24174B670();
    v4[1] = sub_24172159C(&qword_25714C550, v1, MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v4);
    atomic_store(result, (unint64_t *)&qword_2571511E8);
  }
  return result;
}

uint64_t sub_2417F4D8C(uint64_t a1)
{
  return sub_2417F4D98(a1, (uint64_t (*)(uint64_t, uint64_t))sub_2417F05B4);
}

uint64_t sub_2417F4D98(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ValenceSelectionPhaseContent() - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

unint64_t sub_2417F4DF8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2571511F0;
  if (!qword_2571511F0)
  {
    sub_241731FB0(255, &qword_2571511F8, (uint64_t (*)(uint64_t))sub_2417F3EA8, (uint64_t (*)(uint64_t))sub_2417F3E8C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_2417F4140();
    v3[1] = sub_241721DF8(&qword_257151138, (uint64_t (*)(uint64_t))sub_2417F3E8C, sub_2417F43B8, MEMORY[0x24BDEDBB8]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2571511F0);
  }
  return result;
}

uint64_t sub_2417F4EA8()
{
  sub_2418AA2B4();
  sub_2418A9E40();
  swift_bridgeObjectRetain();
  sub_2418A9E40();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2417F4F38()
{
  return sub_2417F4EA8();
}

uint64_t sub_2417F4F90(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD v22[2];
  _OWORD v23[2];
  __int128 v24;
  uint64_t v25;
  unint64_t v26;

  v3 = v1;
  v5 = sub_2418A8340();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_healthDataSource))
  {
    v22[0] = v2;
    swift_unknownObjectRetain();
    v10 = sub_241875268(MEMORY[0x24BEE4AF8]);
    v26 = v10;
    v11 = sub_241732024(*(_BYTE *)(v3 + 16));
    v25 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v24 = v11;
    *((_QWORD *)&v24 + 1) = v12;
    sub_2417AC5F4(&v24, v23);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22[1] = v10;
    sub_24186C0B8(v23, 1885697139, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    __asm { BR              X11 }
  }
  sub_2418A8328();
  v14 = sub_2418A8334();
  v15 = sub_2418AA050();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_QWORD *)&v24 = v17;
    *(_DWORD *)v16 = 136446210;
    v22[0] = v16 + 4;
    v18 = sub_2418AA5D8();
    *(_QWORD *)&v23[0] = sub_24176024C(v18, v19, (uint64_t *)&v24);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v14, v15, "[%{public}s] Tried to create a payload with a dataSource containing nil healthDataSource", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v17, -1, -1);
    MEMORY[0x24269D548](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_2417F5EA4();
  swift_allocError();
  *v20 = 0xD000000000000030;
  v20[1] = 0x80000002418DDDB0;
  return swift_willThrow();
}

void sub_2417F58B8()
{
  uint64_t v0;

  sub_24187972C(0x6E616E65766F7270, 0xEA00000000006563, (_OWORD *)(v0 - 112));
  sub_2417C5598(v0 - 112);
  JUMPOUT(0x2417F5520);
}

void sub_2417F58EC()
{
  uint64_t v0;
  uint64_t v1;

  sub_24187972C(0x696F507972746E65, v0 + 3851, (_OWORD *)(v1 - 112));
  sub_2417C5598(v1 - 112);
  JUMPOUT(0x2417F5418);
}

uint64_t sub_2417F5988(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _QWORD v35[2];
  unint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  unint64_t v39;
  unint64_t v40;

  v2 = sub_2418A8340();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A8100();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_healthDataSource);
  if (v12)
  {
    v13 = v12;
    type metadata accessor for MentalHealthGenericFieldsProvider();
    *(_QWORD *)(swift_initStackObject() + 16) = v13;
    swift_unknownObjectRetain();
    v40 = sub_241875268(MEMORY[0x24BEE4AF8]);
    v14 = sub_2418A9DE0();
    v16 = v15;
    sub_2418A80F4();
    v17 = sub_2418490E0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    if (v17)
    {
      v39 = sub_2417F5EE8();
      *(_QWORD *)&v38 = v17;
      sub_2417AC5F4(&v38, v37);
      v18 = v40;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v36 = v18;
      v40 = 0x8000000000000000;
      sub_24186C0B8(v37, v14, v16, isUniquelyReferenced_nonNull_native);
      v40 = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24187972C(v14, v16, &v38);
      swift_bridgeObjectRelease();
      sub_2417C5598((uint64_t)&v38);
    }
    v28 = sub_2418A9DE0();
    v30 = v29;
    v31 = sub_2418493A4();
    v39 = MEMORY[0x24BEE0D00];
    if (!v32)
      v31 = sub_2418A9DE0();
    *(_QWORD *)&v38 = v31;
    *((_QWORD *)&v38 + 1) = v32;
    sub_2417AC5F4(&v38, v37);
    v33 = v40;
    v34 = swift_isUniquelyReferenced_nonNull_native();
    v36 = v33;
    v40 = 0x8000000000000000;
    sub_24186C0B8(v37, v28, v30, v34);
    v40 = v36;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_unknownObjectRelease();
    return v40;
  }
  else
  {
    sub_2418A8328();
    v20 = sub_2418A8334();
    v21 = sub_2418AA050();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      *(_QWORD *)&v38 = v23;
      *(_DWORD *)v22 = 136446210;
      v35[1] = v22 + 4;
      v24 = sub_2418AA5D8();
      *(_QWORD *)&v37[0] = sub_24176024C(v24, v25, (uint64_t *)&v38);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v20, v21, "[%{public}s] Tried to create a payload with a dataSource containing nil healthDataSource", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v23, -1, -1);
      MEMORY[0x24269D548](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    sub_2417F5EA4();
    swift_allocError();
    *v26 = 0xD000000000000030;
    v26[1] = 0x80000002418DDDB0;
    return swift_willThrow();
  }
}

id sub_2417F5D94(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id))
{
  id v6;
  void *v7;

  v6 = a3;
  swift_retain();
  a5(v6);
  swift_release();

  v7 = (void *)sub_2418A9D14();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2417F5E74()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StateOfMindLoggingEvent()
{
  return objc_opt_self();
}

unint64_t sub_2417F5EA4()
{
  unint64_t result;

  result = qword_257151340;
  if (!qword_257151340)
  {
    result = MEMORY[0x24269D47C](&unk_2418D7064, &type metadata for StateOfMindLoggingEvent.AnalyticsEventPayloadError);
    atomic_store(result, (unint64_t *)&qword_257151340);
  }
  return result;
}

unint64_t sub_2417F5EE8()
{
  unint64_t result;

  result = qword_25714FB48;
  if (!qword_25714FB48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25714FB48);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StateOfMindLoggingEvent.AnalyticsEventPayloadError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StateOfMindLoggingEvent.AnalyticsEventPayloadError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for StateOfMindLoggingEvent.AnalyticsEventPayloadError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for StateOfMindLoggingEvent.AnalyticsEventPayloadError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingEvent.AnalyticsEventPayloadError()
{
  return &type metadata for StateOfMindLoggingEvent.AnalyticsEventPayloadError;
}

uint64_t sub_2417F5FE0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v24;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v6 = a1;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    v10 = a2[7];
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    *(_QWORD *)(a1 + 72) = a2[9];
    v11 = *(int *)(a3 + 36);
    v24 = (_QWORD *)(a1 + v11);
    v12 = (uint64_t *)((char *)a2 + v11);
    *(_QWORD *)(a1 + 56) = v10;
    sub_2417768DC(0);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v24, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 16))(v24, v12, v13);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v24, 0, 1, v13);
      }
      v16 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v17 = (char *)v24 + v16;
      v18 = (char *)v12 + v16;
      v19 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v24 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v20 = *(int *)(a3 + 40);
    v21 = v6 + v20;
    v22 = (uint64_t)a2 + v20;
    *(_BYTE *)v21 = *(_BYTE *)v22;
    *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  }
  swift_retain();
  return v6;
}

uint64_t sub_2417F6204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  sub_2417768DC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2417F630C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  _QWORD *v23;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v10 = *(int *)(a3 + 36);
  v23 = (_QWORD *)(a1 + v10);
  v22 = (_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  sub_2417768DC(0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8EB0();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v22, 1, v11))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v23, v22, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v23, v22, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
    }
    v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v15 = (char *)v23 + v14;
    v16 = (char *)v22 + v14;
    v17 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *v23 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v18 = *(int *)(a3 + 40);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_2417F6508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 36);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_24172588C(a1 + v6, (uint64_t (*)(_QWORD))sub_2417768DC);
    sub_2417768DC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A8EB0();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v12 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v16 = *(int *)(a3 + 40);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2417F675C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(int *)(a3 + 36);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  sub_2417768DC(0);
  v12 = v11;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2418A8EB0();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v9, v10, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
    }
    v16 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v17 = &v9[v16];
    v18 = &v10[v16];
    v19 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 40)) = *(_OWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_2417F68EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 36);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    sub_24172588C(a1 + v7, (uint64_t (*)(_QWORD))sub_2417768DC);
    sub_2417768DC(0);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v19 = *(int *)(a3 + 40);
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  swift_release();
  return a1;
}

uint64_t sub_2417F6AFC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417F6B08(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t sub_2417F6B9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2417F6BA8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DomainsAndContextEntry()
{
  uint64_t result;

  result = qword_2571513A0;
  if (!qword_2571513A0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417F6C70()
{
  unint64_t v0;

  sub_2417768DC(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2417F6D1C()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *sub_2417F6D2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  __int128 v16;
  _OWORD v17[9];
  __int128 v18;
  uint64_t v19;
  _OWORD v20[8];
  _BYTE v21[135];
  char v22;
  _OWORD v23[11];
  uint64_t v24;

  v2 = v1;
  v14[1] = a1;
  v3 = type metadata accessor for DomainsAndContextEntry();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  v7 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A8C64();
  sub_2417F6FD4(v2, (uint64_t)v20);
  *(_OWORD *)&v21[71] = v20[4];
  *(_OWORD *)&v21[87] = v20[5];
  *(_OWORD *)&v21[103] = v20[6];
  *(_OWORD *)&v21[119] = v20[7];
  *(_OWORD *)&v21[7] = v20[0];
  *(_OWORD *)&v21[23] = v20[1];
  *(_OWORD *)&v21[39] = v20[2];
  v22 = 0;
  *(_OWORD *)&v21[55] = v20[3];
  sub_2417F75B8(v2, (uint64_t)v7);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = swift_allocObject();
  sub_2417F7600((uint64_t)v7, v10 + v9);
  *(_OWORD *)((char *)&v17[5] + 1) = *(_OWORD *)&v21[80];
  *(_OWORD *)((char *)&v17[6] + 1) = *(_OWORD *)&v21[96];
  *(_OWORD *)((char *)&v17[7] + 1) = *(_OWORD *)&v21[112];
  *(_OWORD *)((char *)&v17[1] + 1) = *(_OWORD *)&v21[16];
  *(_OWORD *)((char *)&v17[2] + 1) = *(_OWORD *)&v21[32];
  *(_OWORD *)((char *)&v17[3] + 1) = *(_OWORD *)&v21[48];
  *(_OWORD *)((char *)&v17[4] + 1) = *(_OWORD *)&v21[64];
  v16 = (unint64_t)v8;
  LOBYTE(v17[0]) = 0;
  *(_OWORD *)((char *)v17 + 1) = *(_OWORD *)v21;
  *(_QWORD *)&v17[8] = *(_QWORD *)&v21[127];
  *((_QWORD *)&v17[8] + 1) = sub_2417F7644;
  v19 = 0;
  v18 = (unint64_t)v10;
  *(_QWORD *)&v23[0] = *(_QWORD *)(v2 + 8);
  *(_OWORD *)((char *)v23 + 8) = *(_OWORD *)(v2 + 16);
  sub_24172570C(0, &qword_25714E2C8, (uint64_t (*)(uint64_t))sub_241786A5C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](&v15);
  v11 = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRelease();
  LOBYTE(v15) = v11 != 0;
  sub_2417F75B8(v2, (uint64_t)v7);
  v12 = swift_allocObject();
  sub_2417F7600((uint64_t)v7, v12 + v9);
  sub_241782A08(0, &qword_2571513F0, (uint64_t (*)(uint64_t))sub_2417F780C, MEMORY[0x24BDF0928], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  sub_2417F79FC();
  sub_2418A9540();
  swift_release();
  v23[8] = v17[7];
  v23[9] = v17[8];
  v23[10] = v18;
  v24 = v19;
  v23[4] = v17[3];
  v23[5] = v17[4];
  v23[6] = v17[5];
  v23[7] = v17[6];
  v23[0] = v16;
  v23[1] = v17[0];
  v23[2] = v17[1];
  v23[3] = v17[2];
  return sub_2417F7A9C(v23);
}

uint64_t sub_2417F6FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[24];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = sub_2418A8B5C();
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v53 - v10;
  v12 = type metadata accessor for DomainsAndContextEntry();
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AssociationSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)a1;
  *(_QWORD *)v60 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)&v60[8] = *(_OWORD *)(a1 + 16);
  sub_24172570C(0, &qword_25714E2C8, (uint64_t (*)(uint64_t))sub_241786A5C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v59 = v20;
  swift_bridgeObjectRetain();
  sub_2418A9828();
  v21 = v63;
  v57 = v62;
  v58 = v64;
  v56 = sub_2418A90F0();
  v22 = a1 + *(int *)(v12 + 40);
  v23 = *(_BYTE *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  LOBYTE(v62) = v23;
  v63 = v24;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  if (v60[0] == 1)
  {
    sub_241861594((uint64_t)v19);
    sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  }
  sub_2418A84A8();
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = *(unsigned __int8 *)(a1 + 64);
  sub_2417F75B8(a1, (uint64_t)v15);
  if (v33 != 1)
  {
    sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for DomainsAndContextEntry);
    goto LABEL_7;
  }
  v34 = &v15[*(int *)(v12 + 40)];
  v35 = *v34;
  v36 = *((_QWORD *)v34 + 1);
  LOBYTE(v62) = v35;
  v63 = v36;
  sub_2418A96CC();
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for DomainsAndContextEntry);
  if ((v60[0] & 1) == 0)
  {
LABEL_7:
    v48 = 0;
    v39 = 0;
    v41 = 0;
    v40 = 0;
    v42 = 0;
    v47 = 0;
    goto LABEL_8;
  }
  v37 = *(_QWORD *)(a1 + 48);
  v38 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)v60 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)&v60[16] = v37;
  v61 = v38;
  sub_24172887C(0, &qword_25714E2D8, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  sub_2418A9828();
  v39 = v63;
  v53 = v62;
  v41 = v64;
  v40 = v65;
  v42 = *(_QWORD *)(a1 + 72);
  sub_2418A8B50();
  v43 = v8;
  v44 = v11;
  v46 = v54;
  v45 = v55;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v43, v44, v55);
  sub_24172159C(&qword_257151448, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
  v47 = sub_2418A8634();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
  v48 = v53;
LABEL_8:
  LOBYTE(v62) = 0;
  v49 = v58;
  v50 = v57;
  *(_QWORD *)a2 = v59;
  *(_QWORD *)(a2 + 8) = v50;
  *(_QWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v49;
  *(_BYTE *)(a2 + 32) = v56;
  *(_QWORD *)(a2 + 40) = v26;
  *(_QWORD *)(a2 + 48) = v28;
  *(_QWORD *)(a2 + 56) = v30;
  *(_QWORD *)(a2 + 64) = v32;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = v48;
  *(_QWORD *)(a2 + 88) = v39;
  *(_QWORD *)(a2 + 96) = v41;
  *(_QWORD *)(a2 + 104) = v40;
  *(_QWORD *)(a2 + 112) = v42;
  *(_QWORD *)(a2 + 120) = v47;
  v51 = v48;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2417F7BC4(v51, v39);
  sub_2417F7B58(v51, v39);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2417F73CC()
{
  uint64_t v0;
  uint64_t v2;

  sub_24172570C(0, &qword_25714E2C8, (uint64_t (*)(uint64_t))sub_241786A5C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](&v2);
  v0 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease();
  type metadata accessor for DomainsAndContextEntry();
  LOBYTE(v2) = v0 != 0;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  return sub_2418A96D8();
}

uint64_t sub_2417F7494(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(_BYTE *)(a3 + 64) == 1)
  {
    MEMORY[0x24BDAC7A8](result, a2);
    sub_2418A9990();
    sub_2418A8700();
    return swift_release();
  }
  return result;
}

uint64_t sub_2417F7528()
{
  type metadata accessor for DomainsAndContextEntry();
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  return sub_2418A96D8();
}

uint64_t sub_2417F75B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DomainsAndContextEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417F7600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DomainsAndContextEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417F7644()
{
  type metadata accessor for DomainsAndContextEntry();
  return sub_2417F73CC();
}

uint64_t objectdestroyTm_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for DomainsAndContextEntry();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 36);
  sub_2417768DC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v6 = v3 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v7 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2417F77C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DomainsAndContextEntry() - 8) + 80);
  return sub_2417F7494(a1, a2, v2 + ((v5 + 16) & ~v5));
}

void sub_2417F780C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571513F8)
  {
    sub_2417F7884(255);
    sub_24172159C(&qword_257151430, (uint64_t (*)(uint64_t))sub_2417F7884, MEMORY[0x24BDF5428]);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571513F8);
  }
}

void sub_2417F7884(uint64_t a1)
{
  sub_24172570C(a1, &qword_257151400, (uint64_t (*)(uint64_t))sub_2417F78A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417F78A0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257151408)
  {
    sub_2417F7924();
    sub_24172570C(255, &qword_257151418, (uint64_t (*)(uint64_t))sub_2417F7980, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257151408);
  }
}

void sub_2417F7924()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151410)
  {
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151410);
  }
}

void sub_2417F7980()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151420)
  {
    sub_241782A08(255, &qword_257151428, MEMORY[0x24BDEEBE0], MEMORY[0x24BDEEBD8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEFB28]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151420);
  }
}

unint64_t sub_2417F79FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151438;
  if (!qword_257151438)
  {
    sub_241782A08(255, &qword_2571513F0, (uint64_t (*)(uint64_t))sub_2417F780C, MEMORY[0x24BDF0928], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257151440, (uint64_t (*)(uint64_t))sub_2417F780C, MEMORY[0x24BDF4700]);
    v3[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151438);
  }
  return result;
}

_QWORD *sub_2417F7A9C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[13];
  v3 = a1[14];
  v5 = a1[19];
  v6 = a1[21];
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_2417F7B58(v2, v3);
  sub_24178B1AC(v5);
  sub_24178B1AC(v6);
  return a1;
}

uint64_t sub_2417F7B58(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2417F7BA8()
{
  return sub_2417F7528();
}

uint64_t sub_2417F7BC4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_2417F7C10()
{
  sub_241782A08(255, &qword_2571513F0, (uint64_t (*)(uint64_t))sub_2417F780C, MEMORY[0x24BDF0928], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  sub_2417F79FC();
  return swift_getOpaqueTypeConformance2();
}

_QWORD *sub_2417F7C8C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_WORD *)(a1 + 33) = *(_WORD *)((char *)a2 + 33);
    v9 = a2[6];
    v10 = a3[9];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v17 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v18 = (char *)v11 + v17;
      v19 = (char *)v12 + v17;
      v20 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v21 = a3[10];
    v22 = (_QWORD *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v25 = a3[11];
    v26 = (_QWORD *)((char *)v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
  }
  swift_retain();
  return v4;
}

uint64_t sub_2417F7F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = a1 + *(int *)(a2 + 40);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2417F8078(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = a3[9];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A8EB0();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v16 = (char *)v10 + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v19 = a3[10];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *v20 = *v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v23 = a3[11];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  return a1;
}

uint64_t sub_2417F82D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[9];
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_24172B778(a1 + v7, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = a3[10];
    v18 = (_QWORD *)(a1 + v17);
    v19 = (_QWORD *)(a2 + v17);
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778(a1 + v17, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v22 = a3[11];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2417F85A4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = a3[9];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A8EB0();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
    v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v19 = a3[10];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_2417F87C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[9];
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    sub_24172B778(a1 + v7, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v19 = a3[10];
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778(a1 + v19, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v24 = v23;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v20, v21, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  v26 = a3[11];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_release();
  return a1;
}

uint64_t sub_2417F8A74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417F8A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2417F8B50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417F8B5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for DomainsSelectionPhase_iOS()
{
  uint64_t result;

  result = qword_2571514A8;
  if (!qword_2571514A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417F8C64()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2417F8D50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417F8D60(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_24183D600(0, v1, 0);
    v2 = v9;
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      v5 = sub_2418AA164();
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      if (v7 >= v6 >> 1)
        sub_24183D600(v6 > 1, v7 + 1, 1);
      *(_QWORD *)(v9 + 16) = v7 + 1;
      *(_QWORD *)(v9 + 8 * v7 + 32) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2417F8E28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  ValueMetadata *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  ValueMetadata *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v53;

  v41 = a1;
  v2 = type metadata accessor for DomainsSelectionPhase_iOS();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  sub_2417FB310(v1, (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  sub_241731B4C((uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + ((v6 + 16) & ~v6), (uint64_t (*)(_QWORD))type metadata accessor for DomainsSelectionPhase_iOS);
  v52 = sub_2417FB358;
  v53 = v7;
  v48 = xmmword_2418D7180;
  v50 = 0;
  v51 = 0;
  v49 = 0;
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_BYTE *)(v1 + 32);
  v42 = *(ValueMetadata **)(v1 + 16);
  v43 = v8;
  LOBYTE(v44) = v9;
  sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](&v47);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v10 = v42;
  sub_2417FB310(v1, (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  sub_241731B4C((uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + ((v6 + 24) & ~v6), (uint64_t (*)(_QWORD))type metadata accessor for DomainsSelectionPhase_iOS);
  sub_24173EEE8(0, &qword_2571514F8, (uint64_t (*)(uint64_t))sub_2417FB5B4, sub_2417FB93C, MEMORY[0x24BDED9F0]);
  v40 = v12;
  sub_2417FB958();
  v39 = v13;
  sub_2417FBA6C(0);
  v38 = v14;
  v37 = sub_2417FC4F4();
  v36 = sub_241728434(&qword_257151618, (uint64_t (*)(uint64_t))sub_2417FB958, sub_2417FC55C, (uint64_t (*)(void))sub_2417FC578);
  sub_2417FBC04(255);
  v35 = v15;
  sub_2417FC0B4();
  v17 = v16;
  sub_2417FBD70(255);
  v19 = v18;
  sub_2417FBEB8(255);
  v21 = v20;
  sub_2417FC278();
  v23 = v22;
  sub_2417FBF98();
  v25 = v24;
  v26 = MEMORY[0x24BDEC250];
  v27 = sub_24172159C(&qword_2571515C8, (uint64_t (*)(uint64_t))sub_2417FBF98, MEMORY[0x24BDEC250]);
  v28 = sub_24172159C(&qword_2571515D0, (uint64_t (*)(uint64_t))sub_2417FC0B4, v26);
  v42 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  v43 = v25;
  v44 = v17;
  v45 = v27;
  v46 = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v30 = sub_24172159C(&qword_257151608, (uint64_t (*)(uint64_t))sub_2417FC278, v26);
  v42 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  v43 = v21;
  v44 = v23;
  v45 = OpaqueTypeConformance2;
  v46 = v30;
  v31 = swift_getOpaqueTypeConformance2();
  v42 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  v43 = v19;
  v44 = v17;
  v45 = v31;
  v46 = v28;
  v32 = swift_getOpaqueTypeConformance2();
  v42 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  v43 = v35;
  v44 = v17;
  v45 = v32;
  v46 = v28;
  swift_getOpaqueTypeConformance2();
  sub_2418A93B4();
  swift_release();
  return swift_release();
}

uint64_t sub_2417F9220@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v32;

  v10 = type metadata accessor for ConfirmationView();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a2;
  v15 = a2[1];
  v16 = a2[2];
  v17 = a2[3];
  v18 = a2[4];
  v19 = sub_2418A9960();
  v21 = v20;
  sub_2417FB958();
  v23 = a4 + *(int *)(v22 + 36);
  v24 = *(_BYTE *)(a3 + 33);
  *(double *)v13 = a5;
  *((_QWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 2) = v14;
  *((_QWORD *)v13 + 3) = v16;
  *((_QWORD *)v13 + 4) = v17;
  *((_QWORD *)v13 + 5) = v18;
  v13[48] = v24;
  v25 = (uint64_t *)&v13[*(int *)(v10 + 44)];
  *v25 = swift_getKeyPath();
  v26 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v27 = (uint64_t *)&v13[*(int *)(v10 + 48)];
  *v27 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v26);
  swift_storeEnumTagMultiPayload();
  sub_241731B4C((uint64_t)v13, v23, (uint64_t (*)(_QWORD))type metadata accessor for ConfirmationView);
  sub_24173EEE8(0, &qword_257151570, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmationView, sub_2417FBA50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEDBF0]);
  v29 = (uint64_t *)(v23 + *(int *)(v28 + 36));
  *v29 = v19;
  v29[1] = v21;
  sub_2417FB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a4, a1, v30);
}

uint64_t sub_2417F93F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(_QWORD, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t OpaqueTypeConformance2;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(char *, uint64_t);
  void (*v81)(char *, uint64_t);
  _QWORD v83[3];
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  ValueMetadata *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v98 = a1;
  sub_2417FBA6C(0);
  v2 = *(_QWORD *)(v1 - 8);
  v96 = v1;
  v97 = v2;
  MEMORY[0x24BDAC7A8](v1, v3);
  v92 = (char *)v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417FBC04(0);
  v91 = v5;
  v95 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v90 = (char *)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417FBD70(0);
  v89 = v8;
  v94 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v108 = (char *)v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417FBEB8(0);
  v107 = v11;
  v93 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v105 = (char *)v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417FC278();
  v110 = v14;
  v86 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v85 = (char *)v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v103 = (char *)v83 - v19;
  sub_2417FC0B4();
  v21 = v20;
  v99 = *(_QWORD *)(v20 - 8);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v87 = (char *)v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v102 = (char *)v83 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v109 = (char *)v83 - v30;
  MEMORY[0x24BDAC7A8](v29, v31);
  v104 = (char *)v83 - v32;
  sub_2417FBF98();
  v34 = v33;
  v35 = *(_QWORD *)(v33 - 8);
  v37 = MEMORY[0x24BDAC7A8](v33, v36);
  v39 = (char *)v83 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37, v40);
  v106 = (char *)v83 - v41;
  swift_getKeyPath();
  v42 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEC008];
  sub_24172835C(0, &qword_2571515A8, MEMORY[0x24BEE13C8], MEMORY[0x24BDF54E8], MEMORY[0x24BDEC008]);
  v44 = v43;
  v45 = sub_2417FC060(&qword_2571515B0, &qword_2571515A8, v42, MEMORY[0x24BDEC020]);
  v100 = v39;
  sub_2418A86A0();
  v84 = sub_24172159C(&qword_2571515C8, (uint64_t (*)(uint64_t))sub_2417FBF98, MEMORY[0x24BDEC250]);
  v101 = v34;
  sub_2418A8868();
  v88 = *(void (**)(char *, uint64_t))(v35 + 8);
  v88(v39, v34);
  swift_getKeyPath();
  sub_2417FC1A8(0);
  v83[2] = v46;
  v47 = MEMORY[0x24BEE13C8];
  v111 = (ValueMetadata *)MEMORY[0x24BEE13C8];
  v112 = v44;
  v113 = v44;
  v114 = v45;
  v115 = v45;
  v83[1] = swift_getOpaqueTypeConformance2();
  v48 = v109;
  sub_2418A86A0();
  v49 = sub_24172159C(&qword_2571515D0, (uint64_t (*)(uint64_t))sub_2417FC0B4, MEMORY[0x24BDEC250]);
  sub_2418A8868();
  v99 = *(_QWORD *)(v99 + 8);
  ((void (*)(char *, uint64_t))v99)(v48, v21);
  v83[0] = swift_getKeyPath();
  sub_2417FC3CC(0);
  v50 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEC7D8];
  v51 = v47;
  v52 = MEMORY[0x24BDF54E8];
  sub_24172835C(255, &qword_2571515E8, v47, MEMORY[0x24BDF54E8], MEMORY[0x24BDEC7D8]);
  v54 = v53;
  v55 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDECB00];
  sub_24172835C(255, &qword_2571515F0, v51, v52, MEMORY[0x24BDECB00]);
  v57 = v56;
  v58 = sub_2417FC060(&qword_2571515F8, &qword_2571515E8, v50, MEMORY[0x24BDEC7F0]);
  v59 = sub_2417FC060(&qword_257151600, &qword_2571515F0, v55, MEMORY[0x24BDECB18]);
  v111 = (ValueMetadata *)MEMORY[0x24BEE13C8];
  v112 = v54;
  v113 = v57;
  v114 = v58;
  v115 = v59;
  swift_getOpaqueTypeConformance2();
  v60 = v85;
  sub_2418A86A0();
  v83[0] = sub_24172159C(&qword_257151608, (uint64_t (*)(uint64_t))sub_2417FC278, MEMORY[0x24BDEC250]);
  v61 = v110;
  sub_2418A8868();
  v86 = *(_QWORD *)(v86 + 8);
  ((void (*)(char *, uint64_t))v86)(v60, v61);
  swift_getKeyPath();
  v62 = v102;
  sub_2418A86A0();
  sub_2418A8868();
  v63 = (void (*)(char *, uint64_t))v99;
  ((void (*)(char *, uint64_t))v99)(v62, v21);
  swift_getKeyPath();
  v64 = v87;
  sub_2418A86A0();
  sub_2418A8868();
  v63(v64, v21);
  v65 = v101;
  v66 = v84;
  sub_2418A8868();
  sub_2418A8880();
  v111 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  v112 = v65;
  v113 = v21;
  v114 = v66;
  v115 = v49;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v68 = v107;
  v69 = v110;
  v70 = v83[0];
  sub_2418A8880();
  v111 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  v112 = v68;
  v113 = v69;
  v114 = OpaqueTypeConformance2;
  v115 = v70;
  v71 = swift_getOpaqueTypeConformance2();
  v72 = v90;
  v73 = v89;
  sub_2418A8880();
  v111 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  v112 = v73;
  v113 = v21;
  v114 = v71;
  v115 = v49;
  v74 = swift_getOpaqueTypeConformance2();
  v75 = v92;
  v76 = v102;
  v77 = v91;
  sub_2418A8880();
  v111 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  v112 = v77;
  v113 = v21;
  v114 = v74;
  v115 = v49;
  swift_getOpaqueTypeConformance2();
  v78 = v96;
  sub_2418A8868();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v75, v78);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v72, v77);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v108, v73);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v105, v107);
  v79 = v101;
  v80 = (uint64_t (*)(char *, uint64_t))v88;
  v88(v100, v101);
  v81 = (void (*)(char *, uint64_t))v99;
  ((void (*)(char *, uint64_t))v99)(v76, v21);
  v81(v109, v21);
  ((void (*)(char *, uint64_t))v86)(v103, v110);
  v81(v104, v21);
  return v80(v106, v79);
}

uint64_t sub_2417F9CE0()
{
  uint64_t (*v0)(_QWORD, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  _QWORD v13[2];
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v0 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEC008];
  sub_24172835C(0, &qword_2571515A8, MEMORY[0x24BEE13C8], MEMORY[0x24BDF54E8], MEMORY[0x24BDEC008]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v5 = MEMORY[0x24BDAC7A8](v1, v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)v13 - v9;
  v17 = 0x3FF0000000000000;
  v15 = 0;
  v16 = 1;
  v13[1] = 0;
  v14 = 1;
  sub_2418A8640();
  sub_2417FC060(&qword_2571515B0, &qword_2571515A8, v0, MEMORY[0x24BDEC020]);
  sub_2418A8F94();
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v7, v2);
  sub_2418A8F94();
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v2);
}

uint64_t sub_2417F9E54@<X0>(uint64_t a1@<X8>)
{
  return sub_2417FA1D8(a1, 1.0);
}

uint64_t sub_2417F9E70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v37 = a1;
  v1 = sub_2418A97BC();
  MEMORY[0x24BDAC7A8](v1, v2);
  v35 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BEE13C8];
  v5 = MEMORY[0x24BDF54E8];
  sub_24172835C(0, &qword_2571515F0, MEMORY[0x24BEE13C8], MEMORY[0x24BDF54E8], MEMORY[0x24BDECB00]);
  v34 = v6;
  v36 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v33 = (char *)&v31 - v12;
  v13 = sub_2418A99E4();
  MEMORY[0x24BDAC7A8](v13, v14);
  v15 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEC7D8];
  sub_24172835C(0, &qword_2571515E8, v4, v5, MEMORY[0x24BDEC7D8]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v23);
  v32 = (char *)&v31 - v24;
  v38 = 0x3FE0000000000000;
  sub_2418A99D8();
  sub_2418A8748();
  sub_2417FC060(&qword_2571515F8, &qword_2571515E8, v15, MEMORY[0x24BDEC7F0]);
  sub_2418A8F94();
  v25 = *(void (**)(char *, uint64_t))(v18 + 8);
  v25(v22, v17);
  v40 = 0x3FF0000000000000;
  v38 = 0;
  v39 = 1;
  sub_2418A97B0();
  sub_2418A8784();
  sub_2417FC060(&qword_257151600, &qword_2571515F0, MEMORY[0x24BDECB00], MEMORY[0x24BDECB18]);
  v26 = v33;
  v27 = v34;
  sub_2418A8F94();
  v28 = *(void (**)(char *, uint64_t))(v36 + 8);
  v28(v10, v27);
  v29 = v32;
  sub_2418A8F94();
  sub_2418A8FA0();
  v25(v22, v17);
  v28(v26, v27);
  return ((uint64_t (*)(char *, uint64_t))v25)(v29, v17);
}

uint64_t sub_2417FA1B0@<X0>(uint64_t a1@<X8>)
{
  return sub_2417FA1D8(a1, 24.0);
}

uint64_t sub_2417FA1C4@<X0>(uint64_t a1@<X8>)
{
  return sub_2417FA1D8(a1, 1.0);
}

uint64_t sub_2417FA1D8@<X0>(uint64_t a1@<X8>, double a2@<D1>)
{
  uint64_t (*v3)(_QWORD, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  double v25;

  v20 = a1;
  v3 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEC008];
  sub_24172835C(0, &qword_2571515A8, MEMORY[0x24BEE13C8], MEMORY[0x24BDF54E8], MEMORY[0x24BDEC008]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v8, v11);
  v14 = (char *)&v20 - v13;
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v20 - v16;
  v25 = 0.0;
  v23 = 0;
  v24 = 1;
  v21 = 0;
  v22 = 1;
  sub_2418A8640();
  sub_2417FC060(&qword_2571515B0, &qword_2571515A8, v3, MEMORY[0x24BDEC020]);
  sub_2418A8F94();
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v14, v5);
  v25 = a2;
  v23 = 0;
  v24 = 1;
  v21 = 0;
  v22 = 1;
  sub_2418A8640();
  sub_2418A8F94();
  v18(v10, v5);
  sub_2418A8F94();
  sub_2418A8FA0();
  v18(v10, v5);
  v18(v14, v5);
  return ((uint64_t (*)(char *, uint64_t))v18)(v17, v5);
}

uint64_t sub_2417FA410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (**v76)(double *);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  double v105;
  uint64_t v106;
  char v107;
  char v108;
  _OWORD v109[5];

  v96 = a1;
  v104 = a3;
  v4 = sub_2418A8844();
  v102 = *(_QWORD *)(v4 - 8);
  v103 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v97 = v6;
  v100 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for DomainsSelectionPhase_iOS();
  v93 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92, v7);
  v94 = v8;
  v95 = (uint64_t)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417FB6A4();
  v101 = v9;
  v99 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v98 = (uint64_t)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_2418A84E4();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91, v12);
  v88 = (uint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_2418A8FC4();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81, v14);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DomainsSelectionPhaseContent();
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241778850(0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173EEE8(0, &qword_25714DB38, v25, sub_241778A2C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
  v27 = v26;
  MEMORY[0x24BDAC7A8](v26, v28);
  v30 = (_OWORD *)((char *)&v78 - v29);
  sub_2417787BC(0);
  v79 = v31;
  v78 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)&v78 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417FB864(0);
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (char *)&v78 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417FB840(0);
  v83 = v39;
  MEMORY[0x24BDAC7A8](v39, v40);
  v82 = (uint64_t)&v78 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417FB7AC(0);
  v89 = v42;
  v87 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42, v43);
  v86 = (char *)&v78 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417FB5B4();
  v84 = v45;
  MEMORY[0x24BDAC7A8](v45, v46);
  v85 = (char *)&v78 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = 0uLL;
  v49 = 0uLL;
  v50 = 0uLL;
  v51 = 0uLL;
  v52 = 0uLL;
  if ((*(_BYTE *)(a2 + 34) & 1) == 0)
  {
    sub_2417FABEC((uint64_t)v109);
    v48 = v109[0];
    v49 = v109[1];
    v50 = v109[2];
    v51 = v109[3];
    v52 = v109[4];
  }
  *v30 = v48;
  v30[1] = v49;
  v30[2] = v50;
  v30[3] = v51;
  v30[4] = v52;
  v53 = (uint64_t)v30 + *(int *)(v27 + 36);
  sub_2417FAEA8((uint64_t)v20);
  *v24 = sub_2418A90B4();
  sub_2417FC5EC();
  sub_2417784A4((uint64_t)v20, (uint64_t)&v24[*(int *)(v54 + 44)]);
  sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for DomainsSelectionPhaseContent);
  sub_241731B4C((uint64_t)v24, v53, (uint64_t (*)(_QWORD))sub_241778850);
  v55 = (uint64_t *)((char *)v30 + *(int *)(v27 + 40));
  *v55 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  sub_2418A8FB8();
  sub_241778A48();
  sub_2418A945C();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v16, v81);
  sub_2417FC658((uint64_t)v30);
  sub_241777E2C(*(_BYTE *)(a2 + 33), *(_BYTE *)(a2 + 34), (uint64_t)v38);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v34, v79);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v56 = v105;
  v57 = v88;
  sub_241861034(v88);
  v58 = v82;
  sub_24182F078(v57, (uint64_t)v38, v82, v56);
  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v57, v91);
  sub_24172588C((uint64_t)v38, (uint64_t (*)(_QWORD))sub_2417FB864);
  v59 = *(_QWORD *)(a2 + 24);
  v60 = *(_BYTE *)(a2 + 32);
  v105 = *(double *)(a2 + 16);
  v106 = v59;
  v107 = v60;
  sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](&v108);
  sub_241728434(&qword_257151540, (uint64_t (*)(uint64_t))sub_2417FB840, (uint64_t (*)(void))sub_2417FB888, sub_241778C3C);
  v61 = v86;
  sub_2418A9480();
  sub_24172588C(v58, (uint64_t (*)(_QWORD))sub_2417FB840);
  v62 = v98;
  sub_24182BD6C(v98);
  v63 = v95;
  sub_2417FB310(a2, v95);
  v65 = v102;
  v64 = v103;
  v66 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v100, v96, v103);
  v67 = (*(unsigned __int8 *)(v93 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
  v68 = (v94 + *(unsigned __int8 *)(v65 + 80) + v67) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v69 = swift_allocObject();
  sub_241731B4C(v63, v69 + v67, (uint64_t (*)(_QWORD))type metadata accessor for DomainsSelectionPhase_iOS);
  (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v69 + v68, v66, v64);
  v70 = v87;
  v71 = (uint64_t)v85;
  v72 = v89;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v85, v61, v89);
  v73 = v84;
  v74 = v99;
  v75 = v101;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v71 + *(int *)(v84 + 52), v62, v101);
  v76 = (uint64_t (**)(double *))(v71 + *(int *)(v73 + 56));
  *v76 = sub_2417FC8AC;
  v76[1] = (uint64_t (*)(double *))v69;
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v62, v75);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v61, v72);
  return sub_241731B4C(v71, v104, (uint64_t (*)(_QWORD))sub_2417FB5B4);
}

uint64_t sub_2417FABEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;
  uint64_t v10;
  uint64_t result;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  unint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  int64x2_t v22;
  uint64_t (*v23)();
  unint64_t v24;
  double v25;
  char v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;

  v2 = v1;
  v4 = type metadata accessor for DomainsSelectionPhase_iOS();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v8 = (double *)(v1 + *(int *)(MEMORY[0x24BDAC7A8](v4, v7) + 44));
  v9 = *v8;
  v10 = *((_QWORD *)v8 + 1);
  v27 = v9;
  v28 = v10;
  sub_24172887C(0, &qword_25714CA00, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  result = sub_2418A96CC();
  if (v25 >= 110.0)
  {
    v13 = 0;
    v15 = 0;
    v19 = 0.0;
    v20 = 0;
    v21 = 0;
    v24 = 0;
    v23 = 0;
    v18 = 0;
    v22 = 0uLL;
  }
  else
  {
    if (qword_25714B958 != -1)
      swift_once();
    v12 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v13 = sub_2418A7EFC();
    v15 = v14;
    swift_bridgeObjectRelease();

    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2418A8418();
    swift_release();
    swift_release();
    swift_release();
    v16 = v27;
    sub_2417FB310(v2, (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v18 = swift_allocObject();
    sub_241731B4C((uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, (uint64_t (*)(_QWORD))type metadata accessor for DomainsSelectionPhase_iOS);
    v25 = v16;
    v26 = 0;
    sub_24172887C(0, (unint64_t *)&qword_25714D7D0, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    result = sub_2418A9840();
    v19 = v27;
    v20 = v28;
    v21 = v29;
    v22 = vdupq_n_s64(0x74747542656E6F44uLL);
    v22.i64[0] = v30;
    v23 = sub_2417FCAE0;
    v24 = 0xEA00000000006E6FLL;
  }
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v15;
  *(double *)(a1 + 16) = v19;
  *(_QWORD *)(a1 + 24) = v20;
  *(_QWORD *)(a1 + 32) = v21;
  *(int64x2_t *)(a1 + 40) = v22;
  *(_QWORD *)(a1 + 56) = v24;
  *(_QWORD *)(a1 + 64) = v23;
  *(_QWORD *)(a1 + 72) = v18;
  return result;
}

uint64_t sub_2417FAEA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t *v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v2 = v1;
  v4 = type metadata accessor for DomainsSelectionPhase_iOS();
  v24 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v24 + 64);
  MEMORY[0x24BDAC7A8](v4, v6);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v7 = v25;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v23 = v25;
  swift_retain();
  v8 = sub_2418AA170();
  v22 = sub_2417F8D60(v8);
  swift_release();
  swift_bridgeObjectRelease();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  sub_2418A876C();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();
  swift_release();
  v9 = v28;
  v21 = v29;
  sub_2418A876C();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();
  swift_release();
  v20 = v25;
  v10 = v26;
  v11 = v27;
  v12 = *(_BYTE *)(v2 + 33);
  v13 = *(_BYTE *)(v2 + 34);
  sub_2417FB310(v2, (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v15 = swift_allocObject();
  sub_241731B4C((uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(_QWORD))type metadata accessor for DomainsSelectionPhase_iOS);
  *(_QWORD *)a1 = v7;
  v16 = v22;
  *(_QWORD *)(a1 + 8) = v23;
  *(_QWORD *)(a1 + 16) = v16;
  *(_QWORD *)(a1 + 24) = v9;
  v17 = v20;
  *(_OWORD *)(a1 + 32) = v21;
  *(_OWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  *(_BYTE *)(a1 + 81) = (v13 & 1) == 0;
  *(_QWORD *)(a1 + 88) = 60;
  *(_QWORD *)(a1 + 96) = sub_2417FCAE0;
  *(_QWORD *)(a1 + 104) = v15;
  v18 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DomainsSelectionPhaseContent() + 52));
  *v18 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2417FB1CC(double *a1)
{
  double v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for DomainsSelectionPhase_iOS();
  sub_24172887C(0, &qword_25714CA00, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  result = sub_2418A96D8();
  if (v1 > 0.0)
    return sub_2418A8838();
  return result;
}

_QWORD *sub_2417FB29C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  result = MEMORY[0x24269C00C](&v3);
  if ((v3 & 1) == 0)
    return (_QWORD *)(*(uint64_t (**)(_QWORD *))(a1 + 40))(result);
  return result;
}

uint64_t sub_2417FB310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DomainsSelectionPhase_iOS();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417FB358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DomainsSelectionPhase_iOS() - 8) + 80);
  return sub_2417FA410(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_2417FB3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for DomainsSelectionPhase_iOS();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 24) & ~v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 36);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v3 + *(int *)(v1 + 40);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2417FB55C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DomainsSelectionPhase_iOS() - 8) + 80);
  return sub_2417F9220(a1, a2, v3 + ((v7 + 24) & ~v7), a3, *(double *)(v3 + 16));
}

void sub_2417FB5B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151500)
  {
    sub_2417FB6A4();
    sub_2417FB7AC(255);
    sub_24172159C(&qword_257151550, (uint64_t (*)(uint64_t))sub_2417FB6A4, MEMORY[0x24BDB9820]);
    sub_2417FB840(255);
    sub_241728434(&qword_257151540, (uint64_t (*)(uint64_t))sub_2417FB840, (uint64_t (*)(void))sub_2417FB888, sub_241778C3C);
    swift_getOpaqueTypeConformance2();
    v0 = sub_2418A88C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151500);
  }
}

void sub_2417FB6A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151508)
  {
    sub_2417FB72C();
    sub_24172159C(&qword_257151520, (uint64_t (*)(uint64_t))sub_2417FB72C, MEMORY[0x24BDB96C0]);
    v0 = sub_2418A8370();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151508);
  }
}

void sub_2417FB72C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151510)
  {
    sub_2418AA128();
    sub_24172159C(&qword_257151518, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
    v0 = sub_2418A8358();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151510);
  }
}

void sub_2417FB7AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_257151528)
  {
    sub_2417FB840(255);
    v5[0] = v2;
    v5[1] = sub_241728434(&qword_257151540, (uint64_t (*)(uint64_t))sub_2417FB840, (uint64_t (*)(void))sub_2417FB888, sub_241778C3C);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF3388], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257151528);
  }
}

void sub_2417FB840(uint64_t a1)
{
  sub_241731FB0(a1, &qword_257151530, (uint64_t (*)(uint64_t))sub_2417FB864, (uint64_t (*)(uint64_t))sub_2417782FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_2417FB864(uint64_t a1)
{
  sub_241731FB0(a1, &qword_257151538, (uint64_t (*)(uint64_t))sub_241778AB0, (uint64_t (*)(uint64_t))sub_2417787BC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

unint64_t sub_2417FB888()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  result = qword_257151548;
  if (!qword_257151548)
  {
    sub_2417FB864(255);
    v2 = v1;
    v3 = sub_241778AD4();
    sub_24173EEE8(255, &qword_25714DB38, (uint64_t (*)(uint64_t))sub_241778850, sub_241778A2C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    v5[2] = v4;
    v5[3] = sub_241778A48();
    v5[0] = v3;
    v5[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v5);
    atomic_store(result, (unint64_t *)&qword_257151548);
  }
  return result;
}

uint64_t sub_2417FB93C()
{
  return sub_24172159C(&qword_257151558, (uint64_t (*)(uint64_t))sub_2417FB5B4, MEMORY[0x24BDEDA68]);
}

void sub_2417FB958()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151560)
  {
    sub_2417FB9DC();
    sub_24173EEE8(255, &qword_257151570, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmationView, sub_2417FBA50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEDBF0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151560);
  }
}

void sub_2417FB9DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151568)
  {
    sub_24173EEE8(255, &qword_2571514F8, (uint64_t (*)(uint64_t))sub_2417FB5B4, sub_2417FB93C, MEMORY[0x24BDED9F0]);
    v0 = sub_2418A8E80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151568);
  }
}

uint64_t sub_2417FBA50()
{
  return sub_24172159C(&qword_257151578, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmationView, (uint64_t)&unk_2418D9430);
}

void sub_2417FBA6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[5];

  if (!qword_257151580)
  {
    sub_2417FBC04(255);
    v10 = v2;
    sub_2417FC0B4();
    v4 = v3;
    sub_2417FBD70(255);
    sub_2417FBEB8(255);
    sub_2417FC278();
    sub_2417FBF98();
    v5 = MEMORY[0x24BDEC250];
    sub_24172159C(&qword_2571515C8, (uint64_t (*)(uint64_t))sub_2417FBF98, MEMORY[0x24BDEC250]);
    v6 = sub_24172159C(&qword_2571515D0, (uint64_t (*)(uint64_t))sub_2417FC0B4, v5);
    v7 = MEMORY[0x24BDED740];
    swift_getOpaqueTypeConformance2();
    sub_24172159C(&qword_257151608, (uint64_t (*)(uint64_t))sub_2417FC278, v5);
    swift_getOpaqueTypeConformance2();
    v11[0] = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
    v11[1] = v10;
    v11[2] = v4;
    v11[3] = swift_getOpaqueTypeConformance2();
    v11[4] = v6;
    v8 = MEMORY[0x24269D434](a1, v11, v7, 0);
    if (!v9)
      atomic_store(v8, (unint64_t *)&qword_257151580);
  }
}

void sub_2417FBC04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[5];

  if (!qword_257151588)
  {
    sub_2417FBD70(255);
    v3 = v2;
    sub_2417FC0B4();
    v5 = v4;
    sub_2417FBEB8(255);
    sub_2417FC278();
    sub_2417FBF98();
    v6 = MEMORY[0x24BDEC250];
    sub_24172159C(&qword_2571515C8, (uint64_t (*)(uint64_t))sub_2417FBF98, MEMORY[0x24BDEC250]);
    v7 = sub_24172159C(&qword_2571515D0, (uint64_t (*)(uint64_t))sub_2417FC0B4, v6);
    v8 = MEMORY[0x24BDED740];
    swift_getOpaqueTypeConformance2();
    sub_24172159C(&qword_257151608, (uint64_t (*)(uint64_t))sub_2417FC278, v6);
    v11[0] = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
    v11[1] = v3;
    v11[2] = v5;
    v11[3] = swift_getOpaqueTypeConformance2();
    v11[4] = v7;
    v9 = MEMORY[0x24269D434](a1, v11, v8, 0);
    if (!v10)
      atomic_store(v9, (unint64_t *)&qword_257151588);
  }
}

void sub_2417FBD70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD v10[5];

  if (!qword_257151590)
  {
    sub_2417FBEB8(255);
    v3 = v2;
    sub_2417FC278();
    v5 = v4;
    sub_2417FBF98();
    sub_2417FC0B4();
    v6 = MEMORY[0x24BDEC250];
    sub_24172159C(&qword_2571515C8, (uint64_t (*)(uint64_t))sub_2417FBF98, MEMORY[0x24BDEC250]);
    sub_24172159C(&qword_2571515D0, (uint64_t (*)(uint64_t))sub_2417FC0B4, v6);
    v7 = MEMORY[0x24BDED740];
    v10[0] = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
    v10[1] = v3;
    v10[2] = v5;
    v10[3] = swift_getOpaqueTypeConformance2();
    v10[4] = sub_24172159C(&qword_257151608, (uint64_t (*)(uint64_t))sub_2417FC278, v6);
    v8 = MEMORY[0x24269D434](a1, v10, v7, 0);
    if (!v9)
      atomic_store(v8, (unint64_t *)&qword_257151590);
  }
}

void sub_2417FBEB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[5];

  if (!qword_257151598)
  {
    sub_2417FBF98();
    v3 = v2;
    sub_2417FC0B4();
    v4 = MEMORY[0x24BDEC250];
    v8[0] = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
    v8[1] = v3;
    v8[2] = v5;
    v8[3] = sub_24172159C(&qword_2571515C8, (uint64_t (*)(uint64_t))sub_2417FBF98, MEMORY[0x24BDEC250]);
    v8[4] = sub_24172159C(&qword_2571515D0, (uint64_t (*)(uint64_t))sub_2417FC0B4, v4);
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDED740], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_257151598);
  }
}

void sub_2417FBF98()
{
  uint64_t (*v0)(_QWORD, uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2571515A0)
  {
    v0 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEC008];
    sub_24172835C(255, &qword_2571515A8, MEMORY[0x24BEE13C8], MEMORY[0x24BDF54E8], MEMORY[0x24BDEC008]);
    sub_2417FC060(&qword_2571515B0, &qword_2571515A8, v0, MEMORY[0x24BDEC020]);
    v1 = sub_2418A8694();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2571515A0);
  }
}

uint64_t sub_2417FC060(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_24172835C(255, a2, MEMORY[0x24BEE13C8], MEMORY[0x24BDF54E8], a3);
    result = MEMORY[0x24269D47C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2417FC0B4()
{
  uint64_t (*v0)(_QWORD, uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2571515B8)
  {
    sub_2417FC1A8(255);
    v0 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEC008];
    sub_24172835C(255, &qword_2571515A8, MEMORY[0x24BEE13C8], MEMORY[0x24BDF54E8], MEMORY[0x24BDEC008]);
    sub_2417FC060(&qword_2571515B0, &qword_2571515A8, v0, MEMORY[0x24BDEC020]);
    swift_getOpaqueTypeConformance2();
    v1 = sub_2418A8694();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2571515B8);
  }
}

void sub_2417FC1A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD, uint64_t, uint64_t);
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  if (!qword_2571515C0)
  {
    v2 = MEMORY[0x24BEE13C8];
    v3 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEC008];
    sub_24172835C(255, &qword_2571515A8, MEMORY[0x24BEE13C8], MEMORY[0x24BDF54E8], MEMORY[0x24BDEC008]);
    v7[0] = v2;
    v7[1] = v4;
    v7[2] = v4;
    v8 = sub_2417FC060(&qword_2571515B0, &qword_2571515A8, v3, MEMORY[0x24BDEC020]);
    v9 = v8;
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF0C50], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_2571515C0);
  }
}

void sub_2417FC278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t (*v3)(_QWORD, uint64_t, uint64_t);
  unint64_t v4;
  uint64_t v5;

  if (!qword_2571515D8)
  {
    sub_2417FC3CC(255);
    v0 = MEMORY[0x24BEE13C8];
    v1 = MEMORY[0x24BDF54E8];
    v2 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEC7D8];
    sub_24172835C(255, &qword_2571515E8, MEMORY[0x24BEE13C8], MEMORY[0x24BDF54E8], MEMORY[0x24BDEC7D8]);
    v3 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDECB00];
    sub_24172835C(255, &qword_2571515F0, v0, v1, MEMORY[0x24BDECB00]);
    sub_2417FC060(&qword_2571515F8, &qword_2571515E8, v2, MEMORY[0x24BDEC7F0]);
    sub_2417FC060(&qword_257151600, &qword_2571515F0, v3, MEMORY[0x24BDECB18]);
    swift_getOpaqueTypeConformance2();
    v4 = sub_2418A8694();
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_2571515D8);
  }
}

void sub_2417FC3CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[5];

  if (!qword_2571515E0)
  {
    v2 = MEMORY[0x24BEE13C8];
    v3 = MEMORY[0x24BDF54E8];
    v4 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEC7D8];
    sub_24172835C(255, &qword_2571515E8, MEMORY[0x24BEE13C8], MEMORY[0x24BDF54E8], MEMORY[0x24BDEC7D8]);
    v6 = v5;
    v7 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDECB00];
    sub_24172835C(255, &qword_2571515F0, v2, v3, MEMORY[0x24BDECB00]);
    v11[0] = v2;
    v11[1] = v6;
    v11[2] = v8;
    v11[3] = sub_2417FC060(&qword_2571515F8, &qword_2571515E8, v4, MEMORY[0x24BDEC7F0]);
    v11[4] = sub_2417FC060(&qword_257151600, &qword_2571515F0, v7, MEMORY[0x24BDECB18]);
    v9 = MEMORY[0x24269D434](a1, v11, MEMORY[0x24BDF0C50], 0);
    if (!v10)
      atomic_store(v9, (unint64_t *)&qword_2571515E0);
  }
}

unint64_t sub_2417FC4F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257151610;
  if (!qword_257151610)
  {
    sub_24173EEE8(255, &qword_2571514F8, (uint64_t (*)(uint64_t))sub_2417FB5B4, sub_2417FB93C, MEMORY[0x24BDED9F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEDA10], v1);
    atomic_store(result, (unint64_t *)&qword_257151610);
  }
  return result;
}

uint64_t sub_2417FC55C()
{
  return sub_24172159C(&qword_257151620, (uint64_t (*)(uint64_t))sub_2417FB9DC, MEMORY[0x24BDEFDC0]);
}

unint64_t sub_2417FC578()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257151628;
  if (!qword_257151628)
  {
    sub_24173EEE8(255, &qword_257151570, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmationView, sub_2417FBA50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEDBF0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEDC10], v1);
    atomic_store(result, (unint64_t *)&qword_257151628);
  }
  return result;
}

void sub_2417FC5EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151630)
  {
    sub_241778874(255);
    sub_241778460();
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151630);
  }
}

uint64_t sub_2417FC658(uint64_t a1)
{
  uint64_t v2;

  sub_24173EEE8(0, &qword_25714DB38, (uint64_t (*)(uint64_t))sub_241778850, sub_241778A2C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417FC6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for DomainsSelectionPhase_iOS();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v16 = sub_2418A8844();
  v5 = *(_QWORD *)(v16 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v7 = v0 + v3 + *(int *)(v1 + 36);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = v4;
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v7, v8);
    v10 = v7 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v11 = sub_2418A87B4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v4 = v15;
  }
  else
  {
    swift_release();
  }
  v12 = v0 + v3 + *(int *)(v1 + 40);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2418A84E4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v4 + v6) & ~v6), v16);
  return swift_deallocObject();
}

uint64_t sub_2417FC8AC(double *a1)
{
  type metadata accessor for DomainsSelectionPhase_iOS();
  sub_2418A8844();
  return sub_2417FB1CC(a1);
}

uint64_t objectdestroyTm_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for DomainsSelectionPhase_iOS();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 36);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v3 + *(int *)(v1 + 40);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_2417FCAE8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DomainsSelectionPhase_iOS() - 8) + 80);
  return sub_2417FB29C(v0 + ((v1 + 16) & ~v1));
}

uint64_t getEnumTagSinglePayload for DomainsSelectionPhase_iOS.ConfirmationAnimationValues(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DomainsSelectionPhase_iOS.ConfirmationAnimationValues(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DomainsSelectionPhase_iOS.ConfirmationAnimationValues()
{
  return &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
}

uint64_t sub_2417FCB7C()
{
  uint64_t v0;

  sub_24173EEE8(255, &qword_2571514F8, (uint64_t (*)(uint64_t))sub_2417FB5B4, sub_2417FB93C, MEMORY[0x24BDED9F0]);
  sub_2417FB958();
  sub_2417FBA6C(255);
  sub_2417FC4F4();
  sub_241728434(&qword_257151618, (uint64_t (*)(uint64_t))sub_2417FB958, sub_2417FC55C, (uint64_t (*)(void))sub_2417FC578);
  sub_2417FBC04(255);
  sub_2417FC0B4();
  sub_2417FBD70(255);
  sub_2417FBEB8(255);
  sub_2417FC278();
  sub_2417FBF98();
  v0 = MEMORY[0x24BDEC250];
  sub_24172159C(&qword_2571515C8, (uint64_t (*)(uint64_t))sub_2417FBF98, MEMORY[0x24BDEC250]);
  sub_24172159C(&qword_2571515D0, (uint64_t (*)(uint64_t))sub_2417FC0B4, v0);
  swift_getOpaqueTypeConformance2();
  sub_24172159C(&qword_257151608, (uint64_t (*)(uint64_t))sub_2417FC278, v0);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

id static NSBundle.mentalHealthUI.getter()
{
  uint64_t ObjCClassFromMetadata;

  type metadata accessor for MentalHealthUIRepresentative();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  return objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
}

uint64_t type metadata accessor for MentalHealthUIRepresentative()
{
  return objc_opt_self();
}

id sub_2417FCE10()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for MentalHealthUIRepresentative();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_25715E110 = (uint64_t)result;
  *(_QWORD *)algn_25715E118 = 0xD00000000000001ALL;
  qword_25715E120 = 0x80000002418DDEB0;
  return result;
}

uint64_t sub_2417FCE84()
{
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for StateOfMindCalendarPlaceholderView()
{
  return &type metadata for StateOfMindCalendarPlaceholderView;
}

uint64_t sub_2417FCEA4()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_2417FCEB4(void *a1)
{
  id v1;
  void *v2;
  char **v3;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  v2 = (void *)objc_opt_self();
  v3 = &selRef_systemGray3Color;
  if (v1 != (id)2)
    v3 = &selRef_systemGray6Color;
  return objc_msgSend(v2, *v3);
}

double sub_2417FCF0C@<D0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id (*v11)(uint64_t, void *);
  char v12;
  double result;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t aBlock;
  uint64_t v20;
  id (*v21)(uint64_t, void *);
  void *v22;
  __int128 v23;

  v2 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  *(_QWORD *)&v23 = sub_2417FCEB4;
  *((_QWORD *)&v23 + 1) = 0;
  aBlock = MEMORY[0x24BDAC760];
  v20 = 1107296256;
  v21 = sub_2417D168C;
  v22 = &block_descriptor_8;
  v3 = _Block_copy(&aBlock);
  v4 = objc_msgSend(v2, sel_initWithDynamicProvider_, v3);
  _Block_release(v3);
  swift_release();
  v5 = MEMORY[0x24269BE5C](v4);
  sub_2418A855C();
  v6 = sub_2418A9960();
  v8 = v7;
  sub_2418A9960();
  sub_2418A861C();
  v9 = aBlock;
  v10 = v20;
  v11 = v21;
  v12 = (char)v22;
  *(double *)a1 = v14 * 0.5;
  *(double *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v15;
  *(_QWORD *)(a1 + 24) = v16;
  *(_QWORD *)(a1 + 32) = v17;
  *(_QWORD *)(a1 + 40) = v18;
  *(_QWORD *)(a1 + 48) = v5;
  *(_WORD *)(a1 + 56) = 256;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_BYTE *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v11;
  *(_BYTE *)(a1 + 104) = v12;
  result = *(double *)&v23;
  *(_OWORD *)(a1 + 112) = v23;
  return result;
}

double sub_2417FD098@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  double result;
  __int128 v7;
  _OWORD v8[8];
  _BYTE v9[135];

  v2 = sub_2418A8C58();
  sub_2417FCF0C((uint64_t)v8);
  *(_OWORD *)&v9[71] = v8[4];
  *(_OWORD *)&v9[87] = v8[5];
  *(_OWORD *)&v9[103] = v8[6];
  *(_OWORD *)&v9[119] = v8[7];
  *(_OWORD *)&v9[7] = v8[0];
  *(_OWORD *)&v9[23] = v8[1];
  *(_OWORD *)&v9[39] = v8[2];
  *(_OWORD *)&v9[55] = v8[3];
  v3 = *(_OWORD *)&v9[64];
  *(_OWORD *)(a1 + 97) = *(_OWORD *)&v9[80];
  v4 = *(_OWORD *)&v9[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v9[96];
  *(_OWORD *)(a1 + 129) = v4;
  v5 = *(_OWORD *)v9;
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v9[16];
  result = *(double *)&v9[32];
  v7 = *(_OWORD *)&v9[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v9[32];
  *(_OWORD *)(a1 + 65) = v7;
  *(_OWORD *)(a1 + 81) = v3;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)&v9[127];
  *(_OWORD *)(a1 + 17) = v5;
  return result;
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_2417FD168()
{
  return sub_24172159C(&qword_257151638, (uint64_t (*)(uint64_t))sub_2417FD194, MEMORY[0x24BDF4700]);
}

void sub_2417FD194()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151640)
  {
    sub_2417FD1F4();
    sub_2417FD320();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151640);
  }
}

void sub_2417FD1F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151648)
  {
    sub_2417FD250();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151648);
  }
}

void sub_2417FD250()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151650)
  {
    sub_2417FD2DC();
    v0 = sub_2418A8E14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151650);
  }
}

unint64_t sub_2417FD2DC()
{
  unint64_t result;

  result = qword_257151658;
  if (!qword_257151658)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4420], MEMORY[0x24BDF4458]);
    atomic_store(result, (unint64_t *)&qword_257151658);
  }
  return result;
}

unint64_t sub_2417FD320()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151660;
  if (!qword_257151660)
  {
    sub_2417FD1F4();
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257151668, (uint64_t (*)(uint64_t))sub_2417FD250, MEMORY[0x24BDEFA70]);
    v3[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151660);
  }
  return result;
}

_QWORD *sub_2417FD3A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(a3 + 28);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = *(int *)(a3 + 32);
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_2417FD5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = a1 + *(int *)(a2 + 32);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v10 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t sub_2417FD72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 28);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v17 = *(int *)(a3 + 32);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2417FD934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_24172B778(a1 + v6, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A8EB0();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v12 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v16 = *(int *)(a3 + 32);
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778(a1 + v16, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
    }
    else
    {
      *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2417FDB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8EB0();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v18 = *(int *)(a3 + 32);
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v22 = v21;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v19, v20, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2417FDD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (char *)(a1 + v6);
    v8 = (char *)(a2 + v6);
    sub_24172B778(a1 + v6, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v10 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v15 = &v7[v14];
      v16 = &v8[v14];
      v17 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v18 = *(int *)(a3 + 32);
    v19 = (void *)(a1 + v18);
    v20 = (const void *)(a2 + v18);
    v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778(a1 + v18, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v23 = v22;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v19, v20, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417FDFDC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417FDFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2417FE0B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417FE0C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ValenceSelectionSummary()
{
  uint64_t result;

  result = qword_2571516C8;
  if (!qword_2571516C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417FE1CC()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2417FE2A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417FE2B8@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  double *v92;
  uint64_t v93;
  void (*v94)(uint64_t);
  _OWORD *v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  char v117;
  uint64_t v118;
  char v119;
  unsigned int *v120;
  void (**v121)(char *, char *, uint64_t);
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  void (**v138)(char *, char *, uint64_t);
  char *v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  float v142;
  double *v143;
  double *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t KeyPath;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char v171;
  float v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  char v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  void (**v232)(char *, char *, uint64_t);
  uint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  double *v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  uint64_t v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;

  v244 = a2;
  sub_2417869B0(0, &qword_257151760, (void (*)(uint64_t))sub_2417FF94C);
  v241 = v3;
  v242 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v218 = (uint64_t)&v214 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v217 = (uint64_t)&v214 - v8;
  sub_2417FF9E0();
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v243 = (uint64_t)&v214 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v240 = (uint64_t)&v214 - v14;
  v15 = type metadata accessor for LoggingFlowBlendMode();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v250 = (uint64_t *)((char *)&v214 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v17, v19);
  v251 = (uint64_t)&v214 - v20;
  v247 = sub_2418A84E4();
  v234 = *(_QWORD *)(v247 - 8);
  v22 = MEMORY[0x24BDAC7A8](v247, v21);
  v246 = (char *)&v214 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v24);
  v245 = (uint64_t)&v214 - v25;
  v233 = sub_2418A91E0();
  v232 = *(void (***)(char *, char *, uint64_t))(v233 - 8);
  v27 = MEMORY[0x24BDAC7A8](v233, v26);
  v231 = (char *)&v214 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v29);
  v230 = (char *)&v214 - v30;
  sub_2417F3DD4(0, (unint64_t *)&qword_257151750, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  v248 = v31;
  v33 = MEMORY[0x24BDAC7A8](v31, v32);
  v215 = (char *)&v214 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v35);
  v235 = (char *)&v214 - v36;
  sub_2417FF94C();
  v249 = v37;
  v39 = MEMORY[0x24BDAC7A8](v37, v38);
  v216 = (uint64_t)&v214 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39, v41);
  v236 = (uint64_t)&v214 - v42;
  sub_2417FF8E8();
  v45 = MEMORY[0x24BDAC7A8](v43, v44);
  v239 = (uint64_t)&v214 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v45, v47);
  v237 = (char *)&v214 - v49;
  MEMORY[0x24BDAC7A8](v48, v50);
  v254 = (uint64_t)&v214 - v51;
  v227 = type metadata accessor for AssociationSelectionPhaseSpecs();
  v53 = MEMORY[0x24BDAC7A8](v227, v52);
  v214 = (uint64_t)&v214 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x24BDAC7A8](v53, v55);
  v226 = (uint64_t)&v214 - v57;
  v59 = MEMORY[0x24BDAC7A8](v56, v58);
  v224 = (uint64_t)&v214 - v60;
  v62 = MEMORY[0x24BDAC7A8](v59, v61);
  v220 = (uint64_t)&v214 - v63;
  MEMORY[0x24BDAC7A8](v62, v64);
  v66 = (char *)&v214 - v65;
  sub_2417F3DD4(0, (unint64_t *)&qword_25714DE40, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  MEMORY[0x24BDAC7A8](v67, v68);
  v70 = (char *)&v214 - v69;
  sub_2417FF874();
  v221 = v71;
  MEMORY[0x24BDAC7A8](v71, v72);
  v219 = (uint64_t)&v214 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417869B0(0, &qword_257151730, v74);
  v223 = v75;
  MEMORY[0x24BDAC7A8](v75, v76);
  v78 = (char *)&v214 - v77;
  sub_2417FF800();
  v81 = MEMORY[0x24BDAC7A8](v79, v80);
  v238 = (uint64_t)&v214 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = MEMORY[0x24BDAC7A8](v81, v83);
  v222 = (char *)&v214 - v85;
  MEMORY[0x24BDAC7A8](v84, v86);
  v253 = (uint64_t)&v214 - v87;
  v88 = *a1;
  LOBYTE(v255) = 6;
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)((unsigned __int8 *)&v255, v88);
  v255 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC720);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v229 = v89;
  v228 = sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24174B670();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v225 = type metadata accessor for ValenceSelectionSummary();
  v90 = (char *)a1 + *(int *)(v225 + 28);
  sub_241861594((uint64_t)v66);
  sub_24172588C((uint64_t)v66, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  v91 = v220;
  sub_241861594(v220);
  v92 = a1;
  sub_24172588C(v91, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A9960();
  sub_2418A861C();
  v93 = v219;
  v94 = (void (*)(uint64_t))MEMORY[0x24BDF1088];
  sub_2417FFC98((uint64_t)v70, v219, (unint64_t *)&qword_25714DE40, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v95 = (_OWORD *)(v93 + *(int *)(v221 + 36));
  v96 = v258;
  *v95 = v257;
  v95[1] = v96;
  v95[2] = v259;
  sub_2417FFB20((uint64_t)v70, (unint64_t *)&qword_25714DE40, v94);
  LOBYTE(v66) = sub_2418A90F0();
  v97 = v224;
  sub_241861594(v224);
  v252 = v92;
  sub_24172588C(v97, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A84A8();
  v99 = v98;
  v101 = v100;
  v103 = v102;
  v105 = v104;
  sub_2417289A8(v93, (uint64_t)v78, (uint64_t (*)(_QWORD))sub_2417FF874);
  v106 = &v78[*((int *)v223 + 9)];
  *v106 = (char)v66;
  *((_QWORD *)v106 + 1) = v99;
  *((_QWORD *)v106 + 2) = v101;
  *((_QWORD *)v106 + 3) = v103;
  *((_QWORD *)v106 + 4) = v105;
  v106[40] = 0;
  sub_24172588C(v93, (uint64_t (*)(_QWORD))sub_2417FF874);
  sub_2417FFB5C();
  v107 = (uint64_t)v222;
  sub_2418A9414();
  sub_2417FFC3C((uint64_t)v78);
  sub_241731B4C(v107, v253, (uint64_t (*)(_QWORD))sub_2417FF800);
  sub_2418AA1B8();
  v108 = (id)HKUILocalizedStringForValenceClassification();
  v109 = sub_2418A9DE0();
  v111 = v110;

  v255 = (void *)v109;
  v256 = v111;
  v222 = (char *)sub_241721040();
  v112 = sub_2418A92D0();
  v114 = v113;
  v224 = v115;
  v117 = v116 & 1;
  v118 = v226;
  v223 = v90;
  sub_241861594(v226);
  sub_2418A91BC();
  v119 = sub_2418A879C();
  v120 = (unsigned int *)MEMORY[0x24BDF17C8];
  v121 = v232;
  if ((v119 & 1) == 0)
    v120 = (unsigned int *)MEMORY[0x24BDF17D0];
  v122 = v231;
  v123 = v233;
  v232[13](v231, (char *)*v120, v233);
  v124 = v230;
  v121[4](v230, v122, v123);
  sub_2418A91F8();
  swift_release();
  ((void (*)(char *, uint64_t))v121[1])(v124, v123);
  sub_24172588C(v118, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  v125 = sub_2418A9294();
  v127 = v126;
  v129 = v128 & 1;
  sub_2417289EC(v112, v114, v117);
  swift_release();
  swift_bridgeObjectRelease();
  v130 = sub_2418A9288();
  v132 = v131;
  v134 = v133 & 1;
  sub_2417289EC(v125, v127, v129);
  swift_bridgeObjectRelease();
  v135 = sub_2418A8E68();
  v136 = v245;
  v233 = (uint64_t)v252 + *(int *)(v225 + 32);
  sub_241861034(v245);
  v137 = v234;
  v138 = *(void (***)(char *, char *, uint64_t))(v234 + 104);
  v139 = v246;
  LODWORD(v231) = *MEMORY[0x24BDEB3F0];
  v140 = v247;
  v232 = v138;
  ((void (*)(char *))v138)(v246);
  LOBYTE(v123) = sub_2418A84D8();
  v141 = *(void (**)(char *, uint64_t))(v137 + 8);
  v141(v139, v140);
  v141((char *)v136, v140);
  v142 = 0.8;
  if ((v123 & 1) != 0)
    v142 = 0.6;
  v255 = (void *)__PAIR64__(LODWORD(v142), v135);
  sub_2417B8190();
  v144 = v143;
  v234 = sub_24172159C((unint64_t *)&qword_25714F5B8, (uint64_t (*)(uint64_t))sub_2417B8190, MEMORY[0x24BDEECA0]);
  v145 = sub_2418A9270();
  v147 = v146;
  v149 = v148;
  v151 = v150;
  sub_2417289EC(v130, v132, v134);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v153 = (uint64_t)v250;
  *v250 = KeyPath;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v230 = v154;
  swift_storeEnumTagMultiPayload();
  v155 = v251;
  sub_241731B4C(v153, v251, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  v156 = (uint64_t)v235;
  sub_2417289A8(v155, (uint64_t)&v235[*(int *)(v248 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  *(_QWORD *)v156 = v145;
  *(_QWORD *)(v156 + 8) = v147;
  *(_BYTE *)(v156 + 16) = v149 & 1;
  *(_QWORD *)(v156 + 24) = v151;
  sub_24172588C(v155, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  v157 = swift_getKeyPath();
  v158 = v236;
  sub_2417FFC98(v156, v236, (unint64_t *)&qword_257151750, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  v159 = v158 + *(int *)(v249 + 36);
  *(_QWORD *)v159 = v157;
  *(_BYTE *)(v159 + 8) = 1;
  sub_2417FFB20(v156, (unint64_t *)&qword_257151750, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  v255 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC750);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2417FFCE8();
  v160 = (uint64_t)v237;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_24172588C(v158, (uint64_t (*)(_QWORD))sub_2417FF94C);
  sub_241731B4C(v160, v254, (uint64_t (*)(_QWORD))sub_2417FF8E8);
  if (*(_QWORD *)(*((_QWORD *)v252 + 1) + 16))
  {
    v255 = (void *)sub_2417FF488();
    v256 = v161;
    v162 = sub_2418A92D0();
    v164 = v163;
    v166 = v165 & 1;
    v167 = sub_2418A8E68();
    v168 = v245;
    sub_241861034(v245);
    v252 = v144;
    v169 = v246;
    v170 = v247;
    ((void (*)(char *, _QWORD, uint64_t))v232)(v246, v231, v247);
    v171 = sub_2418A84D8();
    v141(v169, v170);
    v141((char *)v168, v170);
    v172 = 0.8;
    if ((v171 & 1) != 0)
      v172 = 0.6;
    v255 = (void *)__PAIR64__(LODWORD(v172), v167);
    v173 = sub_2418A9270();
    v175 = v174;
    v177 = v176;
    v179 = v178;
    sub_2417289EC(v162, v164, v166);
    swift_bridgeObjectRelease();
    v180 = swift_getKeyPath();
    v181 = v250;
    *v250 = v180;
    swift_storeEnumTagMultiPayload();
    v182 = (uint64_t)v181;
    v183 = v251;
    sub_241731B4C(v182, v251, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
    v184 = (uint64_t)v215;
    sub_2417289A8(v183, (uint64_t)&v215[*(int *)(v248 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
    *(_QWORD *)v184 = v173;
    *(_QWORD *)(v184 + 8) = v175;
    *(_BYTE *)(v184 + 16) = v177 & 1;
    *(_QWORD *)(v184 + 24) = v179;
    sub_24172588C(v183, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
    v185 = swift_getKeyPath();
    v186 = v216;
    sub_2417FFC98(v184, v216, (unint64_t *)&qword_257151750, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    v187 = v186 + *(int *)(v249 + 36);
    *(_QWORD *)v187 = v185;
    *(_BYTE *)(v187 + 8) = 1;
    sub_2417FFB20(v184, (unint64_t *)&qword_257151750, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    v188 = sub_2418A90E4();
    v189 = v214;
    sub_241861594(v214);
    sub_24172588C(v189, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_2418A84A8();
    v191 = v190;
    v193 = v192;
    v195 = v194;
    v197 = v196;
    v198 = v218;
    sub_2417289A8(v186, v218, (uint64_t (*)(_QWORD))sub_2417FF94C);
    v199 = v241;
    v200 = v198 + *(int *)(v241 + 36);
    *(_BYTE *)v200 = v188;
    *(_QWORD *)(v200 + 8) = v191;
    *(_QWORD *)(v200 + 16) = v193;
    *(_QWORD *)(v200 + 24) = v195;
    *(_QWORD *)(v200 + 32) = v197;
    *(_BYTE *)(v200 + 40) = 0;
    sub_24172588C(v186, (uint64_t (*)(_QWORD))sub_2417FF94C);
    v201 = v217;
    sub_2417FFDE8(v198, v217);
    v202 = v240;
    sub_2417FFDE8(v201, v240);
    v203 = 0;
    v204 = v199;
  }
  else
  {
    v202 = v240;
    v204 = v241;
    v203 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v242 + 56))(v202, v203, 1, v204);
  v205 = v253;
  v206 = v238;
  sub_2417289A8(v253, v238, (uint64_t (*)(_QWORD))sub_2417FF800);
  v207 = v254;
  v208 = v239;
  sub_2417289A8(v254, v239, (uint64_t (*)(_QWORD))sub_2417FF8E8);
  v209 = v243;
  sub_2417289A8(v202, v243, (uint64_t (*)(_QWORD))sub_2417FF9E0);
  v210 = v244;
  sub_2417289A8(v206, v244, (uint64_t (*)(_QWORD))sub_2417FF800);
  sub_2417FF77C();
  v212 = v211;
  sub_2417289A8(v208, v210 + *(int *)(v211 + 48), (uint64_t (*)(_QWORD))sub_2417FF8E8);
  sub_2417289A8(v209, v210 + *(int *)(v212 + 64), (uint64_t (*)(_QWORD))sub_2417FF9E0);
  sub_24172588C(v202, (uint64_t (*)(_QWORD))sub_2417FF9E0);
  sub_24172588C(v207, (uint64_t (*)(_QWORD))sub_2417FF8E8);
  sub_24172588C(v205, (uint64_t (*)(_QWORD))sub_2417FF800);
  sub_24172588C(v209, (uint64_t (*)(_QWORD))sub_2417FF9E0);
  sub_24172588C(v208, (uint64_t (*)(_QWORD))sub_2417FF8E8);
  return sub_24172588C(v206, (uint64_t (*)(_QWORD))sub_2417FF800);
}

uint64_t sub_2417FF488()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v0 = swift_bridgeObjectRetain();
  sub_2417A8280(v0);
  swift_bridgeObjectRelease();
  if (qword_25714B958 != -1)
    swift_once();
  v1 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  v2 = sub_2418A9D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2417FF5D8()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v1 = sub_2418A8F7C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417FF704();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = sub_2418A8C58();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  sub_2417FFAA4();
  sub_2417FE2B8(v0, (uint64_t)&v9[*(int *)(v10 + 44)]);
  sub_2418A8F64();
  sub_24172159C(&qword_257151778, (uint64_t (*)(uint64_t))sub_2417FF704, MEMORY[0x24BDF4700]);
  sub_2418A942C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return sub_24172588C((uint64_t)v9, (uint64_t (*)(_QWORD))sub_2417FF704);
}

void sub_2417FF704()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151710)
  {
    sub_24172570C(255, &qword_257151718, (uint64_t (*)(uint64_t))sub_2417FF77C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417FFA44();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151710);
  }
}

void sub_2417FF77C()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_257151720)
  {
    sub_2417FF800();
    sub_2417FF8E8();
    sub_2417FF9E0();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_257151720);
  }
}

void sub_2417FF800()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151728)
  {
    sub_2417869B0(255, &qword_257151730, (void (*)(uint64_t))sub_2417FF874);
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151728);
  }
}

void sub_2417FF874()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151738)
  {
    sub_2417F3DD4(255, (unint64_t *)&qword_25714DE40, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151738);
  }
}

void sub_2417FF8E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151740)
  {
    sub_2417FF94C();
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151740);
  }
}

void sub_2417FF94C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151748)
  {
    sub_2417F3DD4(255, (unint64_t *)&qword_257151750, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    sub_24172887C(255, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151748);
  }
}

void sub_2417FF9E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151758)
  {
    sub_2417869B0(255, &qword_257151760, (void (*)(uint64_t))sub_2417FF94C);
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151758);
  }
}

unint64_t sub_2417FFA44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257151768;
  if (!qword_257151768)
  {
    sub_24172570C(255, &qword_257151718, (uint64_t (*)(uint64_t))sub_2417FF77C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257151768);
  }
  return result;
}

void sub_2417FFAA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151770)
  {
    sub_24172570C(255, &qword_257151718, (uint64_t (*)(uint64_t))sub_2417FF77C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151770);
  }
}

uint64_t sub_2417FFB20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2417F3DD4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_2417FFB5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151780;
  if (!qword_257151780)
  {
    sub_2417869B0(255, &qword_257151730, (void (*)(uint64_t))sub_2417FF874);
    v2 = v1;
    v3[0] = sub_2417FFBD4();
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151780);
  }
  return result;
}

unint64_t sub_2417FFBD4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151788;
  if (!qword_257151788)
  {
    sub_2417FF874();
    v2 = v1;
    v3[0] = sub_2417F4CE8();
    v3[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151788);
  }
  return result;
}

uint64_t sub_2417FFC3C(uint64_t a1)
{
  uint64_t v2;

  sub_2417869B0(0, &qword_257151730, (void (*)(uint64_t))sub_2417FF874);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417FFC98(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2417F3DD4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_2417FFCE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151790;
  if (!qword_257151790)
  {
    sub_2417FF94C();
    v2 = v1;
    v3[0] = sub_2417FFD50();
    v3[1] = sub_24174B590();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151790);
  }
  return result;
}

unint64_t sub_2417FFD50()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_257151798;
  if (!qword_257151798)
  {
    sub_2417F3DD4(255, (unint64_t *)&qword_257151750, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    v2 = v1;
    v3 = sub_24172159C(&qword_257150960, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, (uint64_t)&unk_2418D6898);
    v4[0] = MEMORY[0x24BDF1F80];
    v4[1] = v3;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257151798);
  }
  return result;
}

uint64_t sub_2417FFDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417869B0(0, &qword_257151760, (void (*)(uint64_t))sub_2417FF94C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417FFE3C()
{
  sub_2417FF704();
  sub_24172159C(&qword_257151778, (uint64_t (*)(uint64_t))sub_2417FF704, MEMORY[0x24BDF4700]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t StateOfMindTimeline.TimelineView.init(model:chartFactory:onChartDisplay:onFirstTimeLoggingCompletion:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t KeyPath;
  uint64_t result;
  uint64_t v12;
  char v17;
  uint64_t v18;

  sub_24172887C(0, &qword_2571517A8, (uint64_t)&_s13PresentedViewON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2418A96C0();
  KeyPath = swift_getKeyPath();
  sub_2418A96C0();
  type metadata accessor for StateOfMindTimeline.Model();
  sub_24172159C(&qword_257150980, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.Model, (uint64_t)&protocol conformance descriptor for StateOfMindTimeline.Model);
  result = sub_2418A8760();
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = v12;
  *(_BYTE *)(a7 + 16) = v17;
  *(_QWORD *)(a7 + 24) = v18;
  *(_QWORD *)(a7 + 32) = KeyPath;
  *(_BYTE *)(a7 + 40) = 0;
  *(_BYTE *)(a7 + 48) = v17;
  *(_QWORD *)(a7 + 56) = v18;
  *(_QWORD *)(a7 + 64) = a1;
  *(_QWORD *)(a7 + 72) = a2;
  *(_QWORD *)(a7 + 80) = a3;
  *(_QWORD *)(a7 + 88) = a4;
  *(_QWORD *)(a7 + 96) = a5;
  *(_QWORD *)(a7 + 104) = a6;
  return result;
}

uint64_t StateOfMindTimeline.TimelineView.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t (*v34)@<X0>(uint64_t *@<X8>);
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t (*v39)@<X0>(uint64_t *@<X8>);
  uint64_t (*v40)@<X0>(uint64_t *@<X8>);
  uint64_t (**v41)@<X0>(uint64_t *@<X8>);
  uint64_t (*v42)();
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t (**v46)();
  _OWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _OWORD *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t OpaqueTypeConformance2;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 *v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;

  v93 = a1;
  v2 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v2, v3);
  v90 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_2418A8F7C();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89, v5);
  v87 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418019D8();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241801A50(0);
  v14 = v13;
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241801CD4(0);
  v94 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241801D54(0);
  v83 = v22;
  v85 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v23);
  v80 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241802114(0);
  v84 = v25;
  v86 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v26);
  v82 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418023D0(0);
  v92 = v28;
  v91 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v29);
  v81 = (char *)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v1[5];
  v106 = v1[4];
  v107 = v31;
  v108 = v1[6];
  v32 = v1[1];
  v102 = *v1;
  v103 = v32;
  v33 = v1[3];
  v104 = v1[2];
  v105 = v33;
  v95 = &v102;
  sub_2418A90C0();
  _s16TimelineDataViewVMa();
  sub_24172159C(&qword_2571517B8, (uint64_t (*)(uint64_t))_s16TimelineDataViewVMa, (uint64_t)&unk_2418D1FF0);
  sub_2418A84C0();
  v34 = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject();
  v35 = v107;
  *((_OWORD *)v34 + 5) = v106;
  *((_OWORD *)v34 + 6) = v35;
  *((_OWORD *)v34 + 7) = v108;
  v36 = v103;
  *((_OWORD *)v34 + 1) = v102;
  *((_OWORD *)v34 + 2) = v36;
  v37 = v105;
  *((_OWORD *)v34 + 3) = v104;
  *((_OWORD *)v34 + 4) = v37;
  sub_24180255C((uint64_t)&v102);
  v38 = sub_2418A9960();
  v40 = v39;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v17, v12, v8);
  v41 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v17[*(int *)(v14 + 36)];
  *v41 = sub_241802554;
  v41[1] = v34;
  v41[2] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v38;
  v41[3] = v40;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v42 = (uint64_t (*)())swift_allocObject();
  v43 = v107;
  *((_OWORD *)v42 + 5) = v106;
  *((_OWORD *)v42 + 6) = v43;
  *((_OWORD *)v42 + 7) = v108;
  v44 = v103;
  *((_OWORD *)v42 + 1) = v102;
  *((_OWORD *)v42 + 2) = v44;
  v45 = v105;
  *((_OWORD *)v42 + 3) = v104;
  *((_OWORD *)v42 + 4) = v45;
  sub_2417289A8((uint64_t)v17, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_241801A50);
  v46 = (uint64_t (**)())&v21[*(int *)(v94 + 36)];
  *v46 = sub_2418025E4;
  v46[1] = v42;
  sub_24180255C((uint64_t)&v102);
  sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))sub_241801A50);
  v101 = v103;
  sub_2418025EC();
  sub_2418A96E4();
  v47 = (_OWORD *)swift_allocObject();
  v48 = v107;
  v47[5] = v106;
  v47[6] = v48;
  v47[7] = v108;
  v49 = v103;
  v47[1] = v102;
  v47[2] = v49;
  v50 = v105;
  v47[3] = v104;
  v47[4] = v50;
  sub_24180255C((uint64_t)&v102);
  sub_241804460(0, &qword_257151820, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  v52 = v51;
  v53 = sub_241728434(&qword_257151838, (uint64_t (*)(uint64_t))sub_241801CD4, sub_241801F14, sub_241801F70);
  v54 = sub_241801F8C();
  v55 = sub_241801FD0();
  sub_2418A94E0();
  swift_release();
  swift_release();
  swift_release();
  sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))sub_241801CD4);
  v101 = v105;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  v56 = (_OWORD *)swift_allocObject();
  v57 = v107;
  v56[5] = v106;
  v56[6] = v57;
  v56[7] = v108;
  v58 = v103;
  v56[1] = v102;
  v56[2] = v58;
  v59 = v105;
  v56[3] = v104;
  v56[4] = v59;
  sub_24180255C((uint64_t)&v102);
  sub_241802260();
  v61 = v60;
  *(_QWORD *)&v96 = v94;
  *((_QWORD *)&v96 + 1) = &_s13PresentedViewON;
  v97 = v52;
  v98 = v53;
  v99 = v54;
  v100 = v55;
  v62 = v81;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v78 = sub_241728434(&qword_2571518A0, (uint64_t (*)(uint64_t))sub_241802260, (uint64_t (*)(void))sub_241802304, (uint64_t (*)(void))sub_2417804AC);
  v64 = v82;
  v65 = v83;
  v66 = v80;
  sub_2418A954C();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v66, v65);
  v67 = v87;
  sub_2418A8F70();
  *(_QWORD *)&v96 = v65;
  *((_QWORD *)&v96 + 1) = v61;
  v68 = v84;
  v97 = OpaqueTypeConformance2;
  v98 = v78;
  v69 = swift_getOpaqueTypeConformance2();
  sub_2418A942C();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v67, v89);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v64, v68);
  v96 = v102;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  v70 = (uint64_t)v90;
  sub_2418A8418();
  swift_release();
  swift_release();
  sub_2417D81F0((uint64_t)&v96);
  sub_24172588C(v70, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v71 = qword_2511AC780;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v71 = sub_241802714(0, 2, 1, qword_2511AC780);
  v73 = v71[2];
  v72 = v71[3];
  if (v73 >= v72 >> 1)
    v71 = sub_241802714((_QWORD *)(v72 > 1), v73 + 1, 1, v71);
  v71[2] = v73 + 1;
  v74 = &v71[2 * v73];
  v74[4] = 0x656E696C656D6954;
  v74[5] = 0xE800000000000000;
  *(_QWORD *)&v101 = &unk_2511AB450;
  v75 = swift_bridgeObjectRetain();
  sub_2417739BC(v75);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v101 = v68;
  *((_QWORD *)&v101 + 1) = v69;
  swift_getOpaqueTypeConformance2();
  v76 = v92;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v62, v76);
}

double sub_241800904@<D0>(_OWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t (*v13)();
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t (*v17)();
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t (*v21)();
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  int *v26;
  uint64_t *v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t (**v30)();
  uint64_t (**v31)();
  uint64_t (**v32)();
  double *v33;
  double result;
  uint64_t v35;
  _QWORD v36[2];
  double v37;
  uint64_t v38;

  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v36 - v6;
  sub_24180255C((uint64_t)a1);
  type metadata accessor for StateOfMindTimeline.Model();
  sub_24172159C(&qword_257150980, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.Model, (uint64_t)&protocol conformance descriptor for StateOfMindTimeline.Model);
  sub_2418A876C();
  sub_24180460C((uint64_t)a1);
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v8 = v37;
  v9 = (_OWORD *)swift_allocObject();
  v10 = a1[5];
  v9[5] = a1[4];
  v9[6] = v10;
  v9[7] = a1[6];
  v11 = a1[1];
  v9[1] = *a1;
  v9[2] = v11;
  v12 = a1[3];
  v9[3] = a1[2];
  v9[4] = v12;
  v13 = (uint64_t (*)())swift_allocObject();
  v14 = a1[5];
  *((_OWORD *)v13 + 5) = a1[4];
  *((_OWORD *)v13 + 6) = v14;
  *((_OWORD *)v13 + 7) = a1[6];
  v15 = a1[1];
  *((_OWORD *)v13 + 1) = *a1;
  *((_OWORD *)v13 + 2) = v15;
  v16 = a1[3];
  *((_OWORD *)v13 + 3) = a1[2];
  *((_OWORD *)v13 + 4) = v16;
  v17 = (uint64_t (*)())swift_allocObject();
  v18 = a1[5];
  *((_OWORD *)v17 + 5) = a1[4];
  *((_OWORD *)v17 + 6) = v18;
  *((_OWORD *)v17 + 7) = a1[6];
  v19 = a1[1];
  *((_OWORD *)v17 + 1) = *a1;
  *((_OWORD *)v17 + 2) = v19;
  v20 = a1[3];
  *((_OWORD *)v17 + 3) = a1[2];
  *((_OWORD *)v17 + 4) = v20;
  v21 = (uint64_t (*)())swift_allocObject();
  v22 = a1[5];
  *((_OWORD *)v21 + 5) = a1[4];
  *((_OWORD *)v21 + 6) = v22;
  *((_OWORD *)v21 + 7) = a1[6];
  v23 = a1[1];
  *((_OWORD *)v21 + 1) = *a1;
  *((_OWORD *)v21 + 2) = v23;
  v24 = a1[3];
  *((_OWORD *)v21 + 3) = a1[2];
  *((_OWORD *)v21 + 4) = v24;
  *a2 = swift_getKeyPath();
  v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v26 = (int *)_s16TimelineDataViewVMa();
  v27 = (uint64_t *)((char *)a2 + v26[5]);
  *v27 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v25);
  swift_storeEnumTagMultiPayload();
  v28 = (uint64_t *)((char *)a2 + v26[6]);
  *v28 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v25);
  swift_storeEnumTagMultiPayload();
  sub_2417ED1BC((uint64_t)v7, (uint64_t)a2 + v26[7], &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  *(double *)((char *)a2 + v26[8]) = v8;
  v29 = (uint64_t *)((char *)a2 + v26[9]);
  *v29 = sub_2418044DC;
  v29[1] = v9;
  v30 = (uint64_t (**)())((char *)a2 + v26[10]);
  *v30 = sub_2418046DC;
  v30[1] = v13;
  v31 = (uint64_t (**)())((char *)a2 + v26[11]);
  *v31 = sub_241804728;
  v31[1] = v17;
  v32 = (uint64_t (**)())((char *)a2 + v26[12]);
  *v32 = sub_2418047C8;
  v32[1] = v21;
  v33 = (double *)((char *)a2 + v26[13]);
  v36[1] = 0;
  sub_24180255C((uint64_t)a1);
  sub_24180255C((uint64_t)a1);
  sub_24180255C((uint64_t)a1);
  sub_24180255C((uint64_t)a1);
  sub_2418A96C0();
  result = v37;
  v35 = v38;
  *v33 = v37;
  *((_QWORD *)v33 + 1) = v35;
  return result;
}

uint64_t sub_241800D00()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  return swift_release();
}

uint64_t sub_241800D68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = _s9ViewModelOMa();
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v11 - v8;
  sub_2417289A8(a1, (uint64_t)&v11 - v8, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2417289A8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  swift_retain();
  sub_2418A8424();
  return sub_24172588C((uint64_t)v9, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
}

uint64_t sub_241800E60(uint64_t a1)
{
  uint64_t v2;

  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  v2 = sub_2418A96D8();
  return (*(uint64_t (**)(uint64_t))(a1 + 80))(v2);
}

uint64_t sub_241800ECC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = *(_BYTE *)(a1 + 40);
  sub_24180255C(a1);
  v5 = swift_retain();
  v6 = sub_241862180(v5, v4);
  swift_release();
  sub_24180460C(a1);
  result = sub_2418A8670();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_241800F40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2418A8424();
}

uint64_t sub_241800FB8@<X0>(_BYTE *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t (*v27)(uint64_t, ValueMetadata *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  id v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _OWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t (*v51)(uint64_t);
  uint64_t (*v52)(uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  uint64_t (*v56)(uint64_t, uint64_t);
  uint64_t *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;

  v71 = a3;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB580];
  sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
  MEMORY[0x24BDAC7A8](v6, v7);
  v65 = (uint64_t *)((char *)&v64 - v8);
  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v5);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (uint64_t *)((char *)&v64 - v11);
  v13 = (int *)_s15EntryNoDataViewVMa();
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241801E98();
  v70 = v17;
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v64 = (uint64_t)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v66 = (uint64_t)&v64 - v22;
  v23 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (uint64_t *)((char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))MEMORY[0x24BDEF380];
  sub_241804460(0, &qword_257151920, MEMORY[0x24BDEF380]);
  v67 = v28;
  MEMORY[0x24BDAC7A8](v28, v29);
  v69 = (uint64_t)&v64 - v30;
  sub_241801E38(0, &qword_257151928, v27);
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)&v64 - v33;
  sub_241801E38(0, &qword_257151828, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))MEMORY[0x24BDEF3B8]);
  v68 = v35;
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (char *)&v64 - v37;
  if (*a1)
  {
    if (*a1 == 1)
    {
      swift_retain();
      StateOfMindTimeline.EntryFullView.init(model:)(v26);
      v39 = (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView;
      sub_2417289A8((uint64_t)v26, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
      swift_storeEnumTagMultiPayload();
      sub_2417E0F48();
      sub_24172159C(&qword_25714D6E8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.EntryFullView, (uint64_t)&protocol conformance descriptor for StateOfMindTimeline.EntryFullView);
      sub_2418A8D24();
      sub_24180453C((uint64_t)v38, v69);
      swift_storeEnumTagMultiPayload();
      sub_241802068();
      sub_241728434(&qword_257151878, (uint64_t (*)(uint64_t))sub_241801E98, sub_2418020F8, (uint64_t (*)(void))sub_2417E08F8);
      sub_2418A8D24();
      sub_241804590((uint64_t)v38);
      v40 = (uint64_t)v26;
    }
    else
    {
      v47 = (_OWORD *)swift_allocObject();
      v48 = a2[5];
      v47[5] = a2[4];
      v47[6] = v48;
      v47[7] = a2[6];
      v49 = a2[1];
      v47[1] = *a2;
      v47[2] = v49;
      v50 = a2[3];
      v47[3] = a2[2];
      v47[4] = v50;
      *v12 = swift_getKeyPath();
      v51 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
      v52 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
      sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      swift_storeEnumTagMultiPayload();
      KeyPath = swift_getKeyPath();
      v54 = (uint64_t)v65;
      *v65 = KeyPath;
      v55 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038];
      sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], v52);
      swift_storeEnumTagMultiPayload();
      v56 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB580];
      sub_2417ED1BC((uint64_t)v12, (uint64_t)v16, &qword_25714C0D8, v51, MEMORY[0x24BDEB580]);
      v57 = (uint64_t *)&v16[v13[5]];
      *v57 = swift_getKeyPath();
      sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v52);
      swift_storeEnumTagMultiPayload();
      sub_2417ED1BC(v54, (uint64_t)&v16[v13[6]], &qword_25714C2E8, v55, v56);
      v58 = &v16[v13[7]];
      *(_QWORD *)v58 = sub_2418044DC;
      *((_QWORD *)v58 + 1) = v47;
      v59 = &v16[v13[8]];
      *(_QWORD *)v59 = nullsub_1;
      *((_QWORD *)v59 + 1) = 0;
      *(_QWORD *)&v16[v13[9]] = MEMORY[0x24BEE4AF8];
      v60 = swift_getKeyPath();
      v61 = v64;
      sub_2417289A8((uint64_t)v16, v64, (uint64_t (*)(_QWORD))_s15EntryNoDataViewVMa);
      v62 = v61 + *(int *)(v70 + 36);
      *(_QWORD *)v62 = v60;
      *(_BYTE *)(v62 + 8) = 1;
      sub_24180255C((uint64_t)a2);
      sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))_s15EntryNoDataViewVMa);
      v63 = v66;
      sub_2418044F8(v61, v66);
      v39 = (uint64_t (*)(_QWORD))sub_241801E98;
      sub_2417289A8(v63, v69, (uint64_t (*)(_QWORD))sub_241801E98);
      swift_storeEnumTagMultiPayload();
      sub_241802068();
      sub_241728434(&qword_257151878, (uint64_t (*)(uint64_t))sub_241801E98, sub_2418020F8, (uint64_t (*)(void))sub_2417E08F8);
      sub_2418A8D24();
      v40 = v63;
    }
    return sub_24172588C(v40, v39);
  }
  else
  {
    v72 = *a2;
    swift_retain();
    v41 = sub_241809134();
    sub_2417D81F0((uint64_t)&v72);
    v42 = (_OWORD *)swift_allocObject();
    v43 = a2[5];
    v42[5] = a2[4];
    v42[6] = v43;
    v42[7] = a2[6];
    v44 = a2[1];
    v42[1] = *a2;
    v42[2] = v44;
    v45 = a2[3];
    v42[3] = a2[2];
    v42[4] = v45;
    *(_QWORD *)v34 = sub_2417E5818;
    *((_QWORD *)v34 + 1) = v41;
    v34[16] = 0;
    *((_QWORD *)v34 + 3) = sub_2418045E0;
    *((_QWORD *)v34 + 4) = v42;
    v34[40] = 0;
    swift_storeEnumTagMultiPayload();
    sub_24180255C((uint64_t)a2);
    sub_241728DF0();
    sub_2417E0F48();
    sub_24172159C(&qword_25714D6E8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.EntryFullView, (uint64_t)&protocol conformance descriptor for StateOfMindTimeline.EntryFullView);
    swift_retain();
    sub_2418A8D24();
    sub_24180453C((uint64_t)v38, v69);
    swift_storeEnumTagMultiPayload();
    sub_241802068();
    sub_241728434(&qword_257151878, (uint64_t (*)(uint64_t))sub_241801E98, sub_2418020F8, (uint64_t (*)(void))sub_2417E08F8);
    sub_2418A8D24();
    sub_241804590((uint64_t)v38);
    sub_241728DF8();
    return swift_release();
  }
}

double sub_241801714@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  double result;
  __int128 v14;
  _OWORD v15[2];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v4 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  swift_retain();
  v5 = sub_2418A9960();
  sub_24185EC3C(0.0, 1, 10000.0, 0, 0.0, 1, 0.0, 1, (uint64_t)v15, 10000.0, 0, 0.0, 1, v5, v6, v4, v3);
  swift_release();
  v7 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  v8 = MEMORY[0x24269BDB4](v7);
  v9 = sub_2418A90D8();
  v10 = v19;
  *(_OWORD *)(a2 + 64) = v18;
  *(_OWORD *)(a2 + 80) = v10;
  v11 = v21;
  *(_OWORD *)(a2 + 96) = v20;
  *(_OWORD *)(a2 + 112) = v11;
  v12 = v15[1];
  *(_OWORD *)a2 = v15[0];
  *(_OWORD *)(a2 + 16) = v12;
  result = *(double *)&v16;
  v14 = v17;
  *(_OWORD *)(a2 + 32) = v16;
  *(_OWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 128) = v8;
  *(_BYTE *)(a2 + 136) = v9;
  return result;
}

void sub_241801800()
{
  qword_2571517A0 = 0;
}

double sub_24180180C@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_25714B960 != -1)
    swift_once();
  result = *(double *)&qword_2571517A0;
  *a1 = qword_2571517A0;
  return result;
}

_QWORD *sub_24180185C(double *a1, _QWORD *(*a2)(double *__return_ptr))
{
  _QWORD *result;
  double v4;
  double v5;

  result = a2(&v5);
  v4 = v5;
  if (qword_25714B960 != -1)
    result = (_QWORD *)swift_once();
  if (v4 != *(double *)&qword_2571517A0 && *a1 == *(double *)&qword_2571517A0)
    *a1 = v4;
  return result;
}

double sub_2418018E0@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_24180195C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2418A8424();
}

void sub_2418019D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571517B0)
  {
    _s16TimelineDataViewVMa();
    sub_24172159C(&qword_2571517B8, (uint64_t (*)(uint64_t))_s16TimelineDataViewVMa, (uint64_t)&unk_2418D1FF0);
    v0 = sub_2418A84B4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571517B0);
  }
}

void sub_241801A50(uint64_t a1)
{
  sub_241728250(a1, &qword_2571517C0, (void (*)(uint64_t))sub_2418019D8, (void (*)(uint64_t))sub_241801A6C);
}

void sub_241801A6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571517C8)
  {
    sub_241801AE4();
    sub_24172159C(&qword_257151800, (uint64_t (*)(uint64_t))sub_241801AE4, MEMORY[0x24BDEC6F8]);
    v0 = sub_2418A8D18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571517C8);
  }
}

void sub_241801AE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571517D0)
  {
    sub_241801B44();
    sub_241801C04();
    v0 = sub_2418A8718();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571517D0);
  }
}

void sub_241801B44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571517D8)
  {
    sub_24177AE40(255, &qword_2571517E0, (uint64_t (*)(void))sub_241801BC0, (uint64_t)&_s18WidthPreferenceKeyVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF0B78]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571517D8);
  }
}

unint64_t sub_241801BC0()
{
  unint64_t result;

  result = qword_2571517E8;
  if (!qword_2571517E8)
  {
    result = MEMORY[0x24269D47C](&unk_2418D77C4, &_s18WidthPreferenceKeyVN);
    atomic_store(result, (unint64_t *)&qword_2571517E8);
  }
  return result;
}

unint64_t sub_241801C04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  result = qword_2571517F0;
  if (!qword_2571517F0)
  {
    sub_241801B44();
    v2 = v1;
    v3 = sub_241801C6C();
    v4[0] = MEMORY[0x24BDF3E20];
    v4[1] = v3;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_2571517F0);
  }
  return result;
}

unint64_t sub_241801C6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571517F8;
  if (!qword_2571517F8)
  {
    sub_24177AE40(255, &qword_2571517E0, (uint64_t (*)(void))sub_241801BC0, (uint64_t)&_s18WidthPreferenceKeyVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF0B78]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF0B90], v1);
    atomic_store(result, (unint64_t *)&qword_2571517F8);
  }
  return result;
}

void sub_241801CD4(uint64_t a1)
{
  sub_241728250(a1, &qword_257151808, sub_241801A50, (void (*)(uint64_t))sub_241801CF0);
}

void sub_241801CF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151810)
  {
    sub_241801BC0();
    sub_24173EB88();
    v0 = sub_2418A8F58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151810);
  }
}

void sub_241801D54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  if (!qword_257151818)
  {
    sub_241801CD4(255);
    v3 = v2;
    sub_241804460(255, &qword_257151820, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v7[0] = v3;
    v7[1] = &_s13PresentedViewON;
    v7[2] = v4;
    v7[3] = sub_241728434(&qword_257151838, (uint64_t (*)(uint64_t))sub_241801CD4, sub_241801F14, sub_241801F70);
    v7[4] = sub_241801F8C();
    v7[5] = sub_241801FD0();
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF3660], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_257151818);
  }
}

void sub_241801E38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for StateOfMindTimeline.EntryFullView();
    v7 = a3(a1, &type metadata for StateOfMindEntryView, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_241801E98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151830)
  {
    _s15EntryNoDataViewVMa();
    sub_24172887C(255, &qword_257150A30, (uint64_t)&type metadata for StateOfMindTimelinePresentationContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151830);
  }
}

uint64_t sub_241801F14()
{
  return sub_241728434(&qword_257151840, (uint64_t (*)(uint64_t))sub_241801A50, sub_241801F38, sub_241801F54);
}

uint64_t sub_241801F38()
{
  return sub_24172159C(&qword_257151848, (uint64_t (*)(uint64_t))sub_2418019D8, MEMORY[0x24BDEB238]);
}

uint64_t sub_241801F54()
{
  return sub_24172159C(&qword_257151850, (uint64_t (*)(uint64_t))sub_241801A6C, MEMORY[0x24BDEF370]);
}

uint64_t sub_241801F70()
{
  return sub_24172159C(&qword_257151858, (uint64_t (*)(uint64_t))sub_241801CF0, MEMORY[0x24BDF09B0]);
}

unint64_t sub_241801F8C()
{
  unint64_t result;

  result = qword_257151860;
  if (!qword_257151860)
  {
    result = MEMORY[0x24269D47C](&unk_2418D778C, &_s13PresentedViewON);
    atomic_store(result, (unint64_t *)&qword_257151860);
  }
  return result;
}

unint64_t sub_241801FD0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151868;
  if (!qword_257151868)
  {
    sub_241804460(255, &qword_257151820, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_241802068();
    v3[1] = sub_241728434(&qword_257151878, (uint64_t (*)(uint64_t))sub_241801E98, sub_2418020F8, (uint64_t (*)(void))sub_2417E08F8);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151868);
  }
  return result;
}

unint64_t sub_241802068()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151870;
  if (!qword_257151870)
  {
    sub_241801E38(255, &qword_257151828, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_2417E0F48();
    v3[1] = sub_24172159C(&qword_25714D6E8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.EntryFullView, (uint64_t)&protocol conformance descriptor for StateOfMindTimeline.EntryFullView);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151870);
  }
  return result;
}

uint64_t sub_2418020F8()
{
  return sub_24172159C(&qword_257151880, (uint64_t (*)(uint64_t))_s15EntryNoDataViewVMa, (uint64_t)&unk_2418D1960);
}

void sub_241802114(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[6];

  if (!qword_257151888)
  {
    sub_241801D54(255);
    v3 = v2;
    sub_241802260();
    v5 = v4;
    sub_241801CD4(255);
    sub_241804460(255, &qword_257151820, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    sub_241728434(&qword_257151838, (uint64_t (*)(uint64_t))sub_241801CD4, sub_241801F14, sub_241801F70);
    v8[4] = sub_241801F8C();
    v8[5] = sub_241801FD0();
    v8[0] = v3;
    v8[1] = v5;
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = sub_241728434(&qword_2571518A0, (uint64_t (*)(uint64_t))sub_241802260, (uint64_t (*)(void))sub_241802304, (uint64_t (*)(void))sub_2417804AC);
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF3A08], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_257151888);
  }
}

void sub_241802260()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151890)
  {
    sub_24172835C(255, &qword_257151898, (uint64_t)&_s31StateOfMindTimelineChartWrapperVN, MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24172835C(255, &qword_25714DF38, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], MEMORY[0x24BDF06B8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151890);
  }
}

unint64_t sub_241802304()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2571518A8;
  if (!qword_2571518A8)
  {
    sub_24172835C(255, &qword_257151898, (uint64_t)&_s31StateOfMindTimelineChartWrapperVN, MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v2 = v1;
    v3[0] = sub_24180238C();
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2571518A8);
  }
  return result;
}

unint64_t sub_24180238C()
{
  unint64_t result;

  result = qword_2571518B0;
  if (!qword_2571518B0)
  {
    result = MEMORY[0x24269D47C](&unk_2418DA558, &_s31StateOfMindTimelineChartWrapperVN);
    atomic_store(result, (unint64_t *)&qword_2571518B0);
  }
  return result;
}

void sub_2418023D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[6];

  if (!qword_2571518B8)
  {
    sub_241802114(255);
    v3 = v2;
    sub_241801D54(255);
    sub_241802260();
    sub_241801CD4(255);
    sub_241804460(255, &qword_257151820, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    sub_241728434(&qword_257151838, (uint64_t (*)(uint64_t))sub_241801CD4, sub_241801F14, sub_241801F70);
    v6[4] = sub_241801F8C();
    v6[5] = sub_241801FD0();
    v6[2] = swift_getOpaqueTypeConformance2();
    v6[3] = sub_241728434(&qword_2571518A0, (uint64_t (*)(uint64_t))sub_241802260, (uint64_t (*)(void))sub_241802304, (uint64_t (*)(void))sub_2417804AC);
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF2F10], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_2571518B8);
  }
}

double sub_241802548@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_241800904(*(_OWORD **)(v1 + 16), a1);
}

uint64_t sub_241802554@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_241800ECC(v1 + 16, a1);
}

uint64_t sub_24180255C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2418025E4()
{
  return sub_241800F40();
}

void sub_2418025EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571518C0)
  {
    sub_24172887C(255, &qword_2571517A8, (uint64_t)&_s13PresentedViewON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2418A96F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571518C0);
  }
}

uint64_t sub_24180265C@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_241800FB8(a1, (_OWORD *)(v2 + 16), a2);
}

double sub_241802668@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_241801714(v1 + 16, a1);
}

uint64_t sub_241802678()
{
  return sub_2418A89D0();
}

uint64_t sub_241802698(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2418A87CC();
  MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_2418A89DC();
}

_QWORD *sub_241802714(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_24172887C(0, (unint64_t *)&qword_2543915E0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241803B3C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241802834()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s12TimelineViewVwxx()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s12TimelineViewVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s12TimelineViewVwca(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v4 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s12TimelineViewVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v5 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v5;
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  v6 = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StateOfMindTimeline.TimelineView()
{
  return &type metadata for StateOfMindTimeline.TimelineView;
}

unint64_t sub_241802B0C()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[8];

  result = qword_2571518C8;
  if (!qword_2571518C8)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
    sub_241728250(255, &qword_2571518D0, sub_2418023D0, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v3 = v2;
    sub_241802114(255);
    v5 = v4;
    sub_241801D54(255);
    sub_241802260();
    sub_241801CD4(255);
    sub_241804460(255, &qword_257151820, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    sub_241728434(&qword_257151838, (uint64_t (*)(uint64_t))sub_241801CD4, sub_241801F14, sub_241801F70);
    v6[6] = sub_241801F8C();
    v6[7] = sub_241801FD0();
    v6[4] = swift_getOpaqueTypeConformance2();
    v6[5] = sub_241728434(&qword_2571518A0, (uint64_t (*)(uint64_t))sub_241802260, (uint64_t (*)(void))sub_241802304, (uint64_t (*)(void))sub_2417804AC);
    v6[2] = v5;
    v6[3] = swift_getOpaqueTypeConformance2();
    v6[0] = swift_getOpaqueTypeConformance2();
    v6[1] = sub_24172159C(&qword_25714C550, v1, MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v6);
    atomic_store(result, (unint64_t *)&qword_2571518C8);
  }
  return result;
}

ValueMetadata *_s18WidthPreferenceKeyVMa()
{
  return &_s18WidthPreferenceKeyVN;
}

uint64_t _s13PresentedViewOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_241802D28 + 4 * byte_2418D7615[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_241802D5C + 4 * byte_2418D7610[v4]))();
}

uint64_t sub_241802D5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241802D64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241802D6CLL);
  return result;
}

uint64_t sub_241802D78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241802D80);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_241802D84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241802D8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13PresentedViewOMa()
{
  return &_s13PresentedViewON;
}

unint64_t sub_241802DAC()
{
  unint64_t result;

  result = qword_2571518D8;
  if (!qword_2571518D8)
  {
    result = MEMORY[0x24269D47C](&unk_2418D7764, &_s13PresentedViewON);
    atomic_store(result, (unint64_t *)&qword_2571518D8);
  }
  return result;
}

char *sub_241802DF0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_24172887C(0, &qword_2571518E0, (uint64_t)&type metadata for StateOfMindEntryPhaseType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_241803C2C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_241802EFC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_24172887C(0, (unint64_t *)&qword_25714E300, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241803DF8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24180301C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_24172887C(0, qword_25714F890, MEMORY[0x24BEE44F0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_241803D10(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24180313C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_24172570C(0, &qword_2571518F8, (uint64_t (*)(uint64_t))type metadata accessor for HKCVVertex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241803EE0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24180325C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_24180419C();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241803FC8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_241803364(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_24172570C(0, &qword_2571518F0, (uint64_t (*)(uint64_t))type metadata accessor for HKCVLight, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2418040B0(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24180349C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_24172887C(0, &qword_2571518E8, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_241803C2C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2418035A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_24172887C(0, (unint64_t *)&unk_25714D580, (uint64_t)&_s19EntryMomentDataViewV15ItemDescriptionVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_241804254(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2418036E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_24172570C(0, &qword_257151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB988], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v10 = *(_QWORD *)(sub_2418A7DF4() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_2418AA374();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_2418A7DF4() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_241804348(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_2418038FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_24172887C(0, &qword_25714D500, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241803DF8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_241803A1C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_24172570C(0, (unint64_t *)&qword_25714D578, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241803DF8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241803B3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

char *sub_241803C2C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_2418AA3D4();
  __break(1u);
  return result;
}

char *sub_241803D10(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_2418AA3D4();
  __break(1u);
  return result;
}

char *sub_241803DF8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_2418AA3D4();
  __break(1u);
  return result;
}

char *sub_241803EE0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_2418AA3D4();
  __break(1u);
  return result;
}

char *sub_241803FC8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_2418AA3D4();
  __break(1u);
  return result;
}

char *sub_2418040B0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 48 * a1 + 32);
    v6 = 48 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_2418AA3D4();
  __break(1u);
  return result;
}

void sub_24180419C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151900)
  {
    sub_24177AE40(255, &qword_257151908, (uint64_t (*)(void))sub_241804210, MEMORY[0x24BEE14E8], MEMORY[0x24BEE40F8]);
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151900);
  }
}

unint64_t sub_241804210()
{
  unint64_t result;

  result = qword_257151910;
  if (!qword_257151910)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE1538], MEMORY[0x24BEE14E8]);
    atomic_store(result, (unint64_t *)&qword_257151910);
  }
  return result;
}

uint64_t sub_241804254(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_241804348(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_2418A7DF4() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

void sub_241804460(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_241801E38(255, &qword_257151828, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))MEMORY[0x24BDEF3B8]);
    v7 = v6;
    sub_241801E98();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2418044F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241801E98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24180453C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241801E38(0, &qword_257151828, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241804590(uint64_t a1)
{
  uint64_t v2;

  sub_241801E38(0, &qword_257151828, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2418045E0(uint64_t result)
{
  uint64_t v1;

  if ((result & 1) != 0)
    return (*(uint64_t (**)(void))(v1 + 112))();
  return result;
}

uint64_t sub_24180460C(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_241804694()
{
  sub_2418025EC();
  return sub_2418A96D8();
}

uint64_t sub_2418046DC()
{
  sub_2418025EC();
  return sub_2418A96D8();
}

uint64_t sub_241804728()
{
  sub_2418025EC();
  return sub_2418A96D8();
}

uint64_t objectdestroyTm_19()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2418047C8()
{
  uint64_t v0;

  return sub_241800E60(v0 + 16);
}

uint64_t sub_2418047D0()
{
  return sub_2418A89D0();
}

char *sub_2418047F4(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    *((_QWORD *)a1 + 3) = a2[3];
    v9 = a3[7];
    v10 = &a1[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = sub_2418A9CFC();
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v15 = a3[9];
    v7[a3[8]] = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)&v7[v15] = *(char **)((char *)a2 + v15);
    v16 = a3[10];
    v17 = a3[11];
    v18 = &v7[v16];
    v19 = (char **)((char *)a2 + v16);
    v20 = v19[1];
    *(_QWORD *)v18 = *v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = &v7[v17];
    v22 = (char **)((char *)a2 + v17);
    v23 = v22[1];
    *(_QWORD *)v21 = *v22;
    *((_QWORD *)v21 + 1) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_241804904(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 28);
  v5 = sub_2418A9CFC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_241804984(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = a2 + v9;
  v12 = sub_2418A9CFC();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v15 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[10];
  v17 = a3[11];
  v18 = (_QWORD *)((char *)a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (_QWORD *)((char *)a1 + v17);
  v22 = (_QWORD *)(a2 + v17);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241804A64(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_2418A9CFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[11];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241804B84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2418A9CFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_241804C20(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRelease();
  v7 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2418A9CFC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[11];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241804D00()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241804D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2418A9CFC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_241804D88()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241804D94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2418A9CFC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StateOfMindCalendarDay()
{
  uint64_t result;

  result = qword_257151988;
  if (!qword_257151988)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241804E44()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2418A9CFC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241804EEC()
{
  id *v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;

  v1 = MEMORY[0x24BEE4AF8];
  v35 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v36 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (*v0)
  {
    v2 = *v0;
    v3 = sub_241802714(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v5 = v3[2];
    v4 = v3[3];
    if (v5 >= v4 >> 1)
      v3 = sub_241802714((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
    v3[2] = v5 + 1;
    v6 = &v3[2 * v5];
    v6[4] = 0x796C696164;
    v6[5] = 0xE500000000000000;
    v36 = v3;
    objc_msgSend(v2, sel_valence);
    sub_2418A9F6C();
    v7 = sub_241802714(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v9 = v7[2];
    v8 = v7[3];
    if (v9 >= v8 >> 1)
      v7 = sub_241802714((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
    v7[2] = v9 + 1;
    v10 = &v7[2 * v9];
    v10[4] = 0;
    v10[5] = 0xE000000000000000;

    v35 = v7;
  }
  v11 = *(_QWORD *)(v32 + 8);
  v12 = v11 >> 62;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_2418AA398();
    if (v13)
      goto LABEL_9;
LABEL_19:
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x24BEE4AF8];
    goto LABEL_20;
  }
  v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v13)
    goto LABEL_19;
LABEL_9:
  result = sub_24183D5AC(0, v13 & ~(v13 >> 63), 0);
  if (v13 < 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  v15 = 0;
  v16 = v1;
  do
  {
    if ((v11 & 0xC000000000000001) != 0)
      v17 = (id)MEMORY[0x24269CAD4](v15, v11);
    else
      v17 = *(id *)(v11 + 8 * v15 + 32);

    v19 = *(_QWORD *)(v1 + 16);
    v18 = *(_QWORD *)(v1 + 24);
    if (v19 >= v18 >> 1)
      sub_24183D5AC(v18 > 1, v19 + 1, 1);
    ++v15;
    *(_QWORD *)(v1 + 16) = v19 + 1;
    v20 = v1 + 16 * v19;
    *(_QWORD *)(v20 + 32) = 0x7261746E656D6F6DLL;
    *(_QWORD *)(v20 + 40) = 0xE900000000000079;
  }
  while (v13 != v15);
  swift_bridgeObjectRelease();
  v1 = MEMORY[0x24BEE4AF8];
  v12 = v11 >> 62;
LABEL_20:
  sub_2417739BC(v16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    v21 = sub_2418AA398();
    if (v21)
    {
LABEL_22:
      result = sub_24183D5AC(0, v21 & ~(v21 >> 63), 0);
      if ((v21 & 0x8000000000000000) == 0)
      {
        v22 = 0;
        v23 = v1;
        do
        {
          if ((v11 & 0xC000000000000001) != 0)
            v24 = (id)MEMORY[0x24269CAD4](v22, v11);
          else
            v24 = *(id *)(v11 + 8 * v22 + 32);
          v25 = v24;
          objc_msgSend(v24, sel_valence);
          sub_2418A9F6C();

          v27 = *(_QWORD *)(v1 + 16);
          v26 = *(_QWORD *)(v1 + 24);
          if (v27 >= v26 >> 1)
            sub_24183D5AC(v26 > 1, v27 + 1, 1);
          ++v22;
          *(_QWORD *)(v1 + 16) = v27 + 1;
          v28 = v1 + 16 * v27;
          *(_QWORD *)(v28 + 32) = 0;
          *(_QWORD *)(v28 + 40) = 0xE000000000000000;
        }
        while (v21 != v22);
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
LABEL_39:
      __break(1u);
      return result;
    }
  }
  else
  {
    v21 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21)
      goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  v23 = MEMORY[0x24BEE4AF8];
LABEL_33:
  sub_2417739BC(v23);
  if (v36[2] && v35[2])
  {
    sub_241773FD4();
    sub_241731AEC();
    sub_2418A9D50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2418A9D50();
    swift_bridgeObjectRelease();
    sub_2418AA2B4();
    swift_bridgeObjectRelease();
    sub_2418A9E40();
    swift_bridgeObjectRelease();
    sub_2418A9E40();
    sub_2418A9E40();
    swift_bridgeObjectRelease();
    sub_2418A9E40();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v29 = type metadata accessor for StateOfMindCalendarDay();
  v30 = (uint64_t *)(v32 + *(int *)(v29 + 40));
  v33 = *v30;
  v34 = v30[1];
  swift_bridgeObjectRetain();
  sub_2418A9E40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = (_QWORD *)(v32 + *(int *)(v29 + 44));
  result = swift_bridgeObjectRelease();
  *v31 = v33;
  v31[1] = v34;
  return result;
}

uint64_t sub_241805454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  _QWORD v26[2];
  uint64_t v27;
  unint64_t v28;

  v12 = (int *)type metadata accessor for StateOfMindCalendarDay();
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (_QWORD *)((char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BEE4AF8];
  *v16 = 0;
  v16[1] = v17;
  v16[2] = a2;
  v16[3] = a3;
  v18 = (char *)v16 + *(int *)(v14 + 28);
  v19 = sub_2418A9CFC();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a1, v19);
  *((_BYTE *)v16 + v12[8]) = a4;
  *(_QWORD *)((char *)v16 + v12[9]) = a5;
  v27 = 0x7865646E49796144;
  v28 = 0xE90000000000003ALL;
  v26[1] = sub_2418A9CCC();
  sub_2418AA4AC();
  sub_2418A9E40();
  swift_bridgeObjectRelease();
  v22 = v27;
  v21 = v28;
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, v19);
  v23 = (_QWORD *)((char *)v16 + v12[10]);
  *v23 = v22;
  v23[1] = v21;
  v24 = (_QWORD *)((char *)v16 + v12[11]);
  *v24 = v22;
  v24[1] = v21;
  sub_2418055C4((uint64_t)v16, a6);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2418055C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StateOfMindCalendarDay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t UIColor.init(valence:variant:colorScheme:)(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;

  v4 = sub_2418A84E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v11 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  Color.init(valence:variant:colorScheme:)((uint64_t)&v11);
  v8 = sub_2418AA1D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v8;
}

uint64_t UIColor.init(valenceClassification:variant:colorScheme:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  unsigned __int8 v14;

  v6 = sub_2418A84E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a3, v6);
  Color.init(valenceClassification:variant:colorScheme:)(a1, &v14, (uint64_t)v10);
  v11 = sub_2418AA1D0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a3, v6);
  return v11;
}

uint64_t sub_241805790()
{
  sub_2418A8A24();
  type metadata accessor for NotificationsSetupPhaseSpecs();
  return sub_2418A89A0();
}

uint64_t type metadata accessor for NotificationsSetupPhaseSpecs()
{
  uint64_t result;

  result = qword_257151A30;
  if (!qword_257151A30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241805800()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24180580C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  sub_2417790D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_2418A87B4();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_241805880()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24180588C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_2417790D8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_2418A87B4();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_241805908@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24177912C(v1, a1);
}

uint64_t destroy for DomainsPicker()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DomainsPicker(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DomainsPicker(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DomainsPicker(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DomainsPicker(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DomainsPicker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DomainsPicker()
{
  return &type metadata for DomainsPicker;
}

uint64_t sub_241805B18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241805B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[2];
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;

  v46 = a2;
  v47 = a4;
  v45 = a1;
  v48 = a5;
  sub_2418062A4(0);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v49 = (uint64_t)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v43 - v11;
  v13 = type metadata accessor for ExpandableInfoSectionHeader();
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (_QWORD *)((char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15, v18);
  v50 = (uint64_t)v43 - v19;
  if (qword_25714B958 != -1)
    swift_once();
  v20 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v21 = sub_2418A7EFC();
  v23 = v22;
  swift_bridgeObjectRelease();

  v24 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v25 = sub_2418A7EFC();
  v27 = v26;
  swift_bridgeObjectRelease();

  *v17 = v21;
  v17[1] = v23;
  v17[2] = v25;
  v17[3] = v27;
  v28 = (uint64_t *)((char *)v17 + *(int *)(v13 + 24));
  *v28 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v29 = (char *)v17 + *(int *)(v13 + 28);
  v51 = 0;
  sub_2418A96C0();
  v30 = v53;
  *v29 = v52;
  *((_QWORD *)v29 + 1) = v30;
  sub_241806544((uint64_t)v17, v50);
  *(_QWORD *)v12 = sub_2418A8C64();
  *((_QWORD *)v12 + 1) = 0x4038000000000000;
  v12[16] = 0;
  sub_241731B94(0, &qword_257151AC8, (void (*)(uint64_t))sub_2418062C8);
  v43[1] = &v12[*(int *)(v31 + 44)];
  v44 = v12;
  v32 = v45;
  v33 = swift_bridgeObjectRetain();
  v34 = sub_241840B0C(v33);
  swift_bridgeObjectRelease();
  v52 = v34;
  v43[0] = swift_getKeyPath();
  v35 = (_QWORD *)swift_allocObject();
  v36 = v46;
  v35[2] = v32;
  v35[3] = v36;
  v35[4] = a3;
  v35[5] = v47;
  sub_24172570C(0, &qword_257151A90, (uint64_t (*)(uint64_t))sub_241806394, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_24173EEE8(0, &qword_257151AA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain, sub_2418063FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for TagPicker);
  sub_241806418();
  sub_2418064D8();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2418A9888();
  v37 = v50;
  sub_2417289A8(v50, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableInfoSectionHeader);
  v38 = (uint64_t)v44;
  v39 = v49;
  sub_2417289A8((uint64_t)v44, v49, (uint64_t (*)(_QWORD))sub_2418062A4);
  v40 = v48;
  sub_2417289A8((uint64_t)v17, v48, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableInfoSectionHeader);
  sub_241806238();
  sub_2417289A8(v39, v40 + *(int *)(v41 + 48), (uint64_t (*)(_QWORD))sub_2418062A4);
  sub_24172588C(v38, (uint64_t (*)(_QWORD))sub_2418062A4);
  sub_24172588C(v37, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableInfoSectionHeader);
  sub_24172588C(v39, (uint64_t (*)(_QWORD))sub_2418062A4);
  return sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableInfoSectionHeader);
}

double sub_241805FA0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;
  __int128 v8;

  v3 = *(_QWORD *)(a1 + 8);
  sub_24172570C(0, &qword_25714E2C8, (uint64_t (*)(uint64_t))sub_241786A5C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  swift_bridgeObjectRetain();
  sub_2418A9828();
  KeyPath = swift_getKeyPath();
  sub_24173EEE8(0, &qword_257151AA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain, sub_2418063FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for TagPicker);
  *(_QWORD *)(a2 + *(int *)(v5 + 60)) = KeyPath;
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v7;
  *(_OWORD *)(a2 + 16) = v8;
  *(_BYTE *)(a2 + 32) = 1;
  result = 6.0;
  *(_OWORD *)(a2 + 40) = xmmword_2418D79D0;
  *(_QWORD *)(a2 + 56) = sub_2418060D4;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = sub_241806120;
  *(_QWORD *)(a2 + 80) = 0;
  return result;
}

uint64_t sub_2418060D4()
{
  id v0;
  uint64_t v1;

  v0 = (id)HKUILocalizedStringForStateOfMindDomain();
  v1 = sub_2418A9DE0();

  return v1;
}

uint64_t sub_241806120()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2418065D8();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2418D1940;
  *(_QWORD *)(v0 + 32) = 0x6E69616D6F44;
  *(_QWORD *)(v0 + 40) = 0xE600000000000000;
  v1 = (id)NSStringFromHKStateOfMindDomain();
  v2 = sub_2418A9DE0();
  v4 = v3;

  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v4;
  return v0;
}

uint64_t sub_2418061A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *(_QWORD *)a1 = sub_2418A8C64();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_241731B94(0, &qword_257151A68, sub_24180621C);
  return sub_241805B28(v3, v4, v6, v5, a1 + *(int *)(v7 + 44));
}

void sub_24180621C(uint64_t a1)
{
  sub_24172570C(a1, &qword_257151A70, (uint64_t (*)(uint64_t))sub_241806238, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241806238()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257151A78)
  {
    type metadata accessor for ExpandableInfoSectionHeader();
    sub_2418062A4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257151A78);
  }
}

void sub_2418062A4(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_257151A80, (uint64_t (*)(uint64_t))sub_2418062C8, (uint64_t (*)(void))sub_241806478, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
}

void sub_2418062C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151A88)
  {
    sub_24172570C(255, &qword_257151A90, (uint64_t (*)(uint64_t))sub_241806394, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24173EEE8(255, &qword_257151AA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain, sub_2418063FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for TagPicker);
    sub_241806418();
    v0 = sub_2418A98A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151A88);
  }
}

void sub_241806394()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257151A98)
  {
    sub_241786A5C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257151A98);
  }
}

uint64_t sub_2418063FC()
{
  return sub_24172159C(&qword_257151AA8, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain, (uint64_t)&unk_2418D1214);
}

unint64_t sub_241806418()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257151AB0;
  if (!qword_257151AB0)
  {
    sub_24172570C(255, &qword_257151A90, (uint64_t (*)(uint64_t))sub_241806394, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE12D8], v1);
    atomic_store(result, (unint64_t *)&qword_257151AB0);
  }
  return result;
}

unint64_t sub_241806478()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_257151AB8;
  if (!qword_257151AB8)
  {
    sub_2418062C8();
    v2 = v1;
    v3 = sub_2418064D8();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4A08], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_257151AB8);
  }
  return result;
}

unint64_t sub_2418064D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257151AC0;
  if (!qword_257151AC0)
  {
    sub_24173EEE8(255, &qword_257151AA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain, sub_2418063FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for TagPicker);
    result = MEMORY[0x24269D47C](&unk_2418D5818, v1);
    atomic_store(result, (unint64_t *)&qword_257151AC0);
  }
  return result;
}

uint64_t sub_241806544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExpandableInfoSectionHeader();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241806588()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_2418065C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241805FA0(a1, a2);
}

void sub_2418065D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543915E0)
  {
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543915E0);
  }
}

unint64_t sub_241806630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257151AD0;
  if (!qword_257151AD0)
  {
    sub_24173EEE8(255, &qword_257151AD8, (uint64_t (*)(uint64_t))sub_24180621C, sub_241806698, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_257151AD0);
  }
  return result;
}

uint64_t sub_241806698()
{
  return sub_24172159C(&qword_257151AE0, (uint64_t (*)(uint64_t))sub_24180621C, MEMORY[0x24BDF5428]);
}

uint64_t sub_2418066B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  double v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  double v52;
  double v53;
  void (*v54)(char *, uint64_t);
  _QWORD v55[2];
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;

  v2 = v1;
  v65 = *MEMORY[0x24BDAC8D0];
  v56 = *v2;
  v4 = sub_2418A8340();
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v57 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C55D4(0, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = (char *)v55 - v14;
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)v55 - v17;
  v19 = sub_2418A8100();
  v20 = *(_QWORD *)(v19 - 8);
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v24 = (char *)v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v25);
  v27 = (char *)v55 - v26;
  v28 = (double)(uint64_t)*MEMORY[0x24BDD2820];
  v55[1] = a1;
  sub_2418A80A0();
  v29 = (void *)v2[2];
  v30 = *MEMORY[0x24BEA95A0];
  v60 = v27;
  v31 = (void *)sub_2418A80AC();
  v62 = 0;
  v32 = objc_msgSend(v29, sel_nextEventWithIdentifier_dueAfterDate_error_, v30, v31, &v62);

  v33 = v62;
  v64 = v62;
  if (v32)
  {
    sub_2418A80C4();
    v34 = v33;

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v15, 1, 1, v19);
    v35 = v33;
  }
  v36 = v19;
  v37 = (uint64_t)v18;
  sub_241806C14((uint64_t)v15, (uint64_t)v18);
  if (v33)
  {
    v38 = v20;
    v39 = v57;
    sub_2418A8328();
    v40 = sub_2418A8334();
    v41 = sub_2418AA044();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = v36;
      v43 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      v63 = v44;
      *(_DWORD *)v43 = 136446466;
      v45 = sub_2418AA5D8();
      v56 = v37;
      v62 = (void *)sub_24176024C(v45, v46, &v63);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      swift_beginAccess();
      v47 = v64;
      v61 = (uint64_t)v64;
      sub_2417C55D4(0, &qword_257151B88, (void (*)(uint64_t))sub_241806C68);
      v48 = v47;
      v49 = sub_2418A9E04();
      v61 = sub_24176024C(v49, v50, &v63);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v40, v41, "[%{public}s] Error seeking next bedtime event: %{public}s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v44, -1, -1);
      MEMORY[0x24269D548](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v59);
      sub_2417B10EC(v56);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v60, v42);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v59);
      sub_2417B10EC((uint64_t)v18);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v60, v36);
    }
    goto LABEL_10;
  }
  sub_2417B1090((uint64_t)v18, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) == 1)
  {
    sub_2417B10EC((uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v60, v19);
    sub_2417B10EC((uint64_t)v11);
LABEL_10:

    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v24, v11, v19);
  sub_2418A8094();
  v53 = fabs(v52);
  v54 = *(void (**)(char *, uint64_t))(v20 + 8);
  v54(v24, v19);
  sub_2417B10EC((uint64_t)v18);
  v54(v60, v19);

  if (v53 > v28 * 4.0)
    return 1;
  else
    return 2;
}

uint64_t sub_241806BD0()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PreferredReflectiveIntervalProvider()
{
  return objc_opt_self();
}

uint64_t sub_241806C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417C55D4(0, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241806C68()
{
  unint64_t result;

  result = qword_257151B90;
  if (!qword_257151B90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257151B90);
  }
  return result;
}

_QWORD *sub_241806CA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v84)(char *, char *);
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  unsigned int (*v89)(_QWORD *, uint64_t, uint64_t);

  v4 = a2;
  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, v4, v8);
    }
    else
    {
      *a1 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)v4 + v9);
    v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v9, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      v89 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48);
      v86 = a3;
      v87 = v4;
      if (v89(v11, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 16))(v10, v11, v13);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
      v16 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v17 = v16[5];
      v18 = (char *)v10 + v17;
      v19 = (char *)v11 + v17;
      v20 = sub_2418A87B4();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v21(v18, v19, v20);
      *((_BYTE *)v10 + v16[6]) = *((_BYTE *)v11 + v16[6]);
      v22 = v16[7];
      v23 = (char *)v10 + v22;
      v24 = (char *)v11 + v22;
      v25 = sub_2418A84E4();
      v84 = *(void (**)(char *, char *))(*(_QWORD *)(v25 - 8) + 16);
      v85 = v25;
      v84(v23, v24);
      v26 = v16[8];
      v27 = (char *)v10 + v26;
      v28 = (char *)v11 + v26;
      if (v89((_QWORD *)((char *)v11 + v26), 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v28, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
      }
      v30 = _s6StylesV8TimelineVMa(0);
      v21(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v20);
      v31 = v16[9];
      v32 = (char *)v10 + v31;
      v33 = (char *)v11 + v31;
      v88 = v14;
      if (v89((_QWORD *)((char *)v11 + v31), 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v32, v33, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v32, 0, 1, v13);
      }
      v35 = _s6StylesV6NoDataVMa(0);
      v21(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v20);
      v32[*(int *)(v35 + 24)] = v33[*(int *)(v35 + 24)];
      v36 = v16[10];
      v37 = (char *)v10 + v36;
      v38 = (char *)v11 + v36;
      if (v89((_QWORD *)((char *)v11 + v36), 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        v40 = v88;
      }
      else
      {
        v40 = v88;
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v37, v38, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v37, 0, 1, v13);
      }
      v41 = _s6StylesV11PlaceholderVMa(0);
      v21(&v37[*(int *)(v41 + 20)], &v38[*(int *)(v41 + 20)], v20);
      v42 = v16[11];
      v43 = (char *)v10 + v42;
      v44 = (char *)v11 + v42;
      if (v89((_QWORD *)((char *)v11 + v42), 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v43, v44, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v43, 0, 1, v13);
      }
      v46 = _s6StylesV6SymbolVMa(0);
      v21(&v43[*(int *)(v46 + 20)], &v44[*(int *)(v46 + 20)], v20);
      v47 = v16[12];
      v48 = (char *)v10 + v47;
      v49 = (char *)v11 + v47;
      if (v89((_QWORD *)((char *)v11 + v47), 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v48, v49, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v48, 0, 1, v13);
      }
      v51 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v21(&v48[v51[5]], &v49[v51[5]], v20);
      v48[v51[6]] = v49[v51[6]];
      ((void (*)(char *, char *, uint64_t))v84)(&v48[v51[7]], &v49[v51[7]], v85);
      v52 = v16[13];
      v53 = (char *)v10 + v52;
      v54 = (char *)v11 + v52;
      if (v89((_QWORD *)((char *)v11 + v52), 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v53, v54, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v53, 0, 1, v13);
      }
      v56 = _s6StylesV5EmptyVMa(0);
      v21(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v20);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v16[14];
      v58 = (char *)v10 + v57;
      v59 = (char *)v11 + v57;
      if (v89((_QWORD *)((char *)v11 + v57), 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v58, v59, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v58, 0, 1, v13);
      }
      v61 = _s6StylesV5DailyVMa(0);
      v21(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v20);
      v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
      v62 = v16[15];
      v63 = (char *)v10 + v62;
      v64 = (char *)v11 + v62;
      if (v89((_QWORD *)((char *)v11 + v62), 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        v66 = v88;
      }
      else
      {
        v66 = v88;
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v63, v64, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v63, 0, 1, v13);
      }
      v67 = _s6StylesV9MomentaryVMa(0);
      v21(&v63[*(int *)(v67 + 20)], &v64[*(int *)(v67 + 20)], v20);
      v68 = v16[16];
      v69 = (char *)v10 + v68;
      v70 = (char *)v11 + v68;
      if (v89((_QWORD *)((char *)v11 + v68), 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v69, v70, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v69, 0, 1, v13);
      }
      v72 = _s6StylesV6HeaderVMa(0);
      v21(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v20);
      v73 = v16[17];
      v74 = (char *)v10 + v73;
      v75 = (char *)v11 + v73;
      if (v89((_QWORD *)((char *)v11 + v73), 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v74, v75, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v74, 0, 1, v13);
      }
      v77 = _s6StylesV11ChartButtonVMa(0);
      v21(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v20);
      v78 = v16[18];
      v79 = (char *)v10 + v78;
      v80 = (char *)v11 + v78;
      if (v89((_QWORD *)((char *)v11 + v78), 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v79, v80, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v79, 0, 1, v13);
      }
      v82 = _s6StylesV15LogButtonFooterVMa(0);
      v21(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v20);
      a3 = v86;
      v4 = v87;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)v4 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_2418076D8(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v88)(char *, char *);
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unsigned int (*v93)(char *, uint64_t, uint64_t);

  v4 = a2;
  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, v7);
    v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, v4, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, v4, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    v11 = *(int *)(a3 + 20);
    v12 = &a1[v11];
    v13 = &v4[v11];
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)&a1[v11], &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v14);
    v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2418A8EB0();
      v18 = *(_QWORD *)(v17 - 8);
      v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      v90 = a3;
      v91 = v4;
      if (v93(v13, 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v13, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
      }
      v20 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v21 = v20[5];
      v22 = &v12[v21];
      v23 = &v13[v21];
      v24 = sub_2418A87B4();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
      v25(v22, v23, v24);
      v12[v20[6]] = v13[v20[6]];
      v26 = v20[7];
      v27 = &v12[v26];
      v28 = &v13[v26];
      v29 = sub_2418A84E4();
      v88 = *(void (**)(char *, char *))(*(_QWORD *)(v29 - 8) + 32);
      v89 = v29;
      v88(v27, v28);
      v30 = v20[8];
      v31 = &v12[v30];
      v32 = &v13[v30];
      if (v93(&v13[v30], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v31, v32, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v31, 0, 1, v17);
      }
      v34 = _s6StylesV8TimelineVMa(0);
      v25(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v24);
      v35 = v20[9];
      v36 = &v12[v35];
      v37 = &v13[v35];
      v92 = v18;
      if (v93(&v13[v35], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v36, v37, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v36, 0, 1, v17);
      }
      v39 = _s6StylesV6NoDataVMa(0);
      v25(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v24);
      v36[*(int *)(v39 + 24)] = v37[*(int *)(v39 + 24)];
      v40 = v20[10];
      v41 = &v12[v40];
      v42 = &v13[v40];
      if (v93(&v13[v40], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        v44 = v92;
      }
      else
      {
        v44 = v92;
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v41, v42, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v41, 0, 1, v17);
      }
      v45 = _s6StylesV11PlaceholderVMa(0);
      v25(&v41[*(int *)(v45 + 20)], &v42[*(int *)(v45 + 20)], v24);
      v46 = v20[11];
      v47 = &v12[v46];
      v48 = &v13[v46];
      if (v93(&v13[v46], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v47, v48, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v47, 0, 1, v17);
      }
      v50 = _s6StylesV6SymbolVMa(0);
      v25(&v47[*(int *)(v50 + 20)], &v48[*(int *)(v50 + 20)], v24);
      v51 = v20[12];
      v52 = &v12[v51];
      v53 = &v13[v51];
      if (v93(&v13[v51], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v52, v53, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v52, 0, 1, v17);
      }
      v55 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v25(&v52[v55[5]], &v53[v55[5]], v24);
      v52[v55[6]] = v53[v55[6]];
      ((void (*)(char *, char *, uint64_t))v88)(&v52[v55[7]], &v53[v55[7]], v89);
      v56 = v20[13];
      v57 = &v12[v56];
      v58 = &v13[v56];
      if (v93(&v13[v56], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v57, v58, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v57, 0, 1, v17);
      }
      v60 = _s6StylesV5EmptyVMa(0);
      v25(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v24);
      v57[*(int *)(v60 + 24)] = v58[*(int *)(v60 + 24)];
      v61 = v20[14];
      v62 = &v12[v61];
      v63 = &v13[v61];
      if (v93(&v13[v61], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v62, v63, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v62, 0, 1, v17);
      }
      v65 = _s6StylesV5DailyVMa(0);
      v25(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v24);
      v62[*(int *)(v65 + 24)] = v63[*(int *)(v65 + 24)];
      v66 = v20[15];
      v67 = &v12[v66];
      v68 = &v13[v66];
      if (v93(&v13[v66], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        v70 = v92;
      }
      else
      {
        v70 = v92;
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v67, v68, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v67, 0, 1, v17);
      }
      v71 = _s6StylesV9MomentaryVMa(0);
      v25(&v67[*(int *)(v71 + 20)], &v68[*(int *)(v71 + 20)], v24);
      v72 = v20[16];
      v73 = &v12[v72];
      v74 = &v13[v72];
      if (v93(&v13[v72], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v73, v74, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v73, 0, 1, v17);
      }
      v76 = _s6StylesV6HeaderVMa(0);
      v25(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v24);
      v77 = v20[17];
      v78 = &v12[v77];
      v79 = &v13[v77];
      if (v93(&v13[v77], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v78, v79, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v78, 0, 1, v17);
      }
      v81 = _s6StylesV11ChartButtonVMa(0);
      v25(&v78[*(int *)(v81 + 20)], &v79[*(int *)(v81 + 20)], v24);
      v82 = v20[18];
      v83 = &v12[v82];
      v84 = &v13[v82];
      if (v93(&v13[v82], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v83, v84, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v83, 0, 1, v17);
      }
      v86 = _s6StylesV15LogButtonFooterVMa(0);
      v25(&v83[*(int *)(v86 + 20)], &v84[*(int *)(v86 + 20)], v24);
      swift_storeEnumTagMultiPayload();
      a3 = v90;
      v4 = v91;
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&v4[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241808100()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24180810C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_2418081E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2418081F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_5:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
}

uint64_t _s21EntryMomentsEmptyViewVMa()
{
  uint64_t result;

  result = qword_257151BF0;
  if (!qword_257151BF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241808300()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241808310@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char v70;
  unsigned int *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;

  v101 = a1;
  v1 = sub_2418A88D4();
  MEMORY[0x24BDAC7A8](v1, v2);
  v99 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2418A99B4();
  v97 = *(_QWORD *)(v4 - 8);
  v98 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v96 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A84E4();
  v94 = *(_QWORD *)(v7 - 8);
  v95 = v7;
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v93 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v103 = (uint64_t)&v84 - v12;
  v13 = sub_2418A91E0();
  v89 = *(_QWORD *)(v13 - 8);
  v90 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v88 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, &qword_25714CD68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v84 - v18;
  v20 = sub_2418A9228();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730780();
  v102 = v29;
  MEMORY[0x24BDAC7A8](v29, v30);
  v92 = (char *)&v84 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173DB0C(0);
  MEMORY[0x24BDAC7A8](v32, v33);
  v100 = (char *)&v84 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v35 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v36 = sub_2418A7EFC();
  v38 = v37;
  swift_bridgeObjectRelease();

  v105 = (void *)v36;
  v106 = v38;
  sub_241721040();
  v39 = sub_2418A92D0();
  v85 = v40;
  v86 = v41;
  v43 = v42 & 1;
  v91 = _s21EntryMomentsEmptyViewVMa();
  sub_241860D60((uint64_t)v28);
  sub_24172588C((uint64_t)v28, type metadata accessor for StateOfMindTimeline.Styles);
  v44 = *MEMORY[0x24BDF1878];
  v87 = v28;
  v45 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v24, v44, v20);
  v46 = *MEMORY[0x24BDF1660];
  v47 = v20;
  v48 = sub_2418A9174();
  v49 = *(_QWORD *)(v48 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 104))(v19, v46, v48);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v19, 0, 1, v48);
  sub_2418A9198();
  sub_2418A91B0();
  sub_24173FC60((uint64_t)v19, &qword_25714CD68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v24, v47);
  v51 = v88;
  v50 = v89;
  v52 = v90;
  (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v88, *MEMORY[0x24BDF17C8], v90);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
  v53 = v39;
  v54 = v85;
  v55 = sub_2418A9294();
  v57 = v56;
  LOBYTE(v46) = v58 & 1;
  sub_2417289EC(v53, v54, v43);
  swift_release();
  swift_bridgeObjectRelease();
  v59 = (uint64_t)v87;
  sub_241860D60((uint64_t)v87);
  sub_24172588C(v59, type metadata accessor for StateOfMindTimeline.Styles);
  v60 = objc_msgSend((id)objc_opt_self(), sel_quaternaryLabelColor);
  v105 = (void *)MEMORY[0x24269BDB4](v60);
  v61 = sub_2418A9270();
  v63 = v62;
  v90 = v64;
  v66 = v65 & 1;
  sub_2417289EC(v55, v57, v46);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241861034(v103);
  v68 = v93;
  v67 = v94;
  v69 = v95;
  (*(void (**)(char *, _QWORD, uint64_t))(v94 + 104))(v93, *MEMORY[0x24BDEB400], v95);
  v70 = sub_2418A84D8();
  v94 = *(_QWORD *)(v67 + 8);
  ((void (*)(char *, uint64_t))v94)(v68, v69);
  v71 = (unsigned int *)MEMORY[0x24BDF5080];
  v73 = v96;
  v72 = v97;
  if ((v70 & 1) == 0)
    v71 = (unsigned int *)MEMORY[0x24BDF5098];
  v74 = v98;
  (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, *v71, v98);
  v75 = (uint64_t)v99;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v99, v73, v74);
  v76 = (uint64_t)v92;
  sub_241808B28(v75, (uint64_t)&v92[*(int *)(v102 + 36)]);
  *(_QWORD *)v76 = v61;
  *(_QWORD *)(v76 + 8) = v63;
  *(_BYTE *)(v76 + 16) = v66;
  *(_QWORD *)(v76 + 24) = v90;
  sub_241728A50(v61, v63, v66);
  swift_bridgeObjectRetain();
  sub_24172588C(v75, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
  ((void (*)(uint64_t, uint64_t))v94)(v103, v69);
  sub_2417289EC(v61, v63, v66);
  swift_bridgeObjectRelease();
  v77 = *(_QWORD **)(v104 + *(int *)(v91 + 24));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v77 = sub_241802714(0, v77[2] + 1, 1, v77);
  v79 = v77[2];
  v78 = v77[3];
  if (v79 >= v78 >> 1)
    v77 = sub_241802714((_QWORD *)(v78 > 1), v79 + 1, 1, v77);
  v77[2] = v79 + 1;
  v80 = &v77[2 * v79];
  v80[4] = 0x62614C7974706D45;
  v80[5] = 0xEA00000000006C65;
  v105 = &unk_2511AB450;
  v81 = swift_bridgeObjectRetain();
  sub_2417739BC(v81);
  sub_241773FD4();
  sub_24172159C((unint64_t *)&qword_2543915D8, (uint64_t (*)(uint64_t))sub_241773FD4, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241731CDC();
  v82 = (uint64_t)v100;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24172588C(v76, (uint64_t (*)(_QWORD))sub_241730780);
  return sub_241808B6C(v82, v101);
}

uint64_t sub_241808B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2418A88D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241808B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24173DB0C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241808BB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151C30;
  if (!qword_257151C30)
  {
    sub_24173DB0C(255);
    v2 = v1;
    v3[0] = sub_241731CDC();
    v3[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151C30);
  }
  return result;
}

uint64_t sub_241808C34()
{
  sub_2418A8A24();
  type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  return sub_2418A89A0();
}

uint64_t type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs()
{
  uint64_t result;

  result = qword_257151C90;
  if (!qword_257151C90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241808CA4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241808CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  sub_2417790D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_2418A87B4();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_241808D24()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241808D30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_2417790D8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_2418A87B4();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void *sub_241808DAC(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_241808DC0(a1, a2, a3);
}

void *sub_241808DC0(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_2418AA398())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24269CAD4](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_241808EE4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  return swift_release();
}

uint64_t sub_241808F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v22 = sub_2418A8100();
  v1 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2418A9CFC();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v22 - v16;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  sub_241848AB8((uint64_t)v17);
  sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v17, v9);
  sub_2418A9CF0();
  v18 = sub_24180A1E4((uint64_t)v4);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v22);
  sub_2417A89A8(0, (uint64_t)v14, v18, v20, 0, qword_2511AC3D0, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v17, v9);
}

id sub_241809134()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  id v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  int v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (**v78)(char *, uint64_t, char *);
  char *v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t, uint64_t, uint64_t);
  int *v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  void (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void (**v97)(char *, uint64_t, char *);
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;

  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_24172570C(0, &qword_2543915A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2, v3);
  v100 = (char *)&v91 - v4;
  v103 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  v6 = MEMORY[0x24BDAC7A8](v103, v5);
  v99 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v101 = (uint64_t)&v91 - v9;
  sub_24172570C(0, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v1);
  MEMORY[0x24BDAC7A8](v10, v11);
  v93 = (char *)&v91 - v12;
  v13 = sub_2418A7EC0();
  v95 = *(_QWORD *)(v13 - 8);
  v96 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v102 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2418A8238();
  v97 = *(void (***)(char *, uint64_t, char *))(v20 - 8);
  v98 = (char *)v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_2418A9CFC();
  v104 = *(_QWORD *)(v108 - 8);
  v25 = MEMORY[0x24BDAC7A8](v108, v24);
  v27 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)&v91 - v29;
  v31 = sub_2418A8100();
  v32 = *(_QWORD *)(v31 - 8);
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v92 = (char *)&v91 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v94 = (char *)&v91 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v42 = (char *)&v91 - v41;
  v44 = MEMORY[0x24BDAC7A8](v40, v43);
  v46 = (char *)&v91 - v45;
  (*(void (**)(uint64_t))(v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_now))(v44);
  v106 = v46;
  v107 = v32;
  v47 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  v105 = v31;
  v47(v42, v46, v31);
  v97[2](v23, v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar, v98);
  v48 = (uint64_t)v27;
  v49 = v0;
  sub_2418A9CB4();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  sub_241848AB8(v48);
  sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  sub_24172159C(&qword_257151E68, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
  if ((sub_2418A9DA4() & 1) != 0)
  {
    v102 = *(char **)(v0 + 16);
    v50 = v42;
    v51 = v42;
    v52 = v105;
    v47(v50, v106, v105);
    v53 = sub_2418A8130();
    v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
    v55 = (uint64_t)v100;
    v54(v100, 1, 1, v53);
    v56 = (int *)v103;
    v57 = (uint64_t)v99;
    v58 = (uint64_t)&v99[*(int *)(v103 + 24)];
    v54((char *)v58, 1, 1, v53);
    v59 = (_QWORD *)(v57 + v56[7]);
    *v59 = 0;
    v59[1] = 0;
    *(_BYTE *)(v57 + v56[8]) = 11;
    *(_BYTE *)(v57 + v56[9]) = 6;
    *(_QWORD *)v57 = 0;
    *(_BYTE *)(v57 + 8) = 2;
    v60 = v57 + v56[5];
    v61 = v107;
    (*(void (**)(uint64_t, char *, uint64_t))(v107 + 32))(v60, v51, v52);
    v62 = v102;
    sub_241799D54(v55, v58);
    swift_bridgeObjectRelease();
    *v59 = 0;
    v59[1] = 0;
    v63 = v101;
    sub_241731B4C(v57, v101, type metadata accessor for StateOfMindEntryModel.Configuration);
    type metadata accessor for StateOfMindEntryModel(0);
    swift_allocObject();
    v64 = sub_24179C220(v62, v63, (uint64_t)nullsub_1, 0);

    v65 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
    v66 = v108;
    v65(v48, v108);
    v65((uint64_t)v30, v66);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v106, v52);
  }
  else
  {
    v97 = (void (**)(char *, uint64_t, char *))v42;
    v98 = v30;
    sub_2418A9CA8();
    sub_2418A7E84();
    sub_2418A7E9C();
    sub_2418A7EA8();
    v67 = v47;
    v68 = (uint64_t)v93;
    sub_2418A81E4();
    v69 = v92;
    v70 = v105;
    v71 = v67;
    v67(v92, v106, v105);
    v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v68, 1, v70);
    v91 = v48;
    if (v72 == 1)
    {
      v73 = *(void (**)(char *, char *, uint64_t))(v107 + 32);
      v74 = v94;
      v73(v94, v69, v70);
      sub_2417A7664(v68, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    }
    else
    {
      v75 = v107;
      (*(void (**)(char *, uint64_t))(v107 + 8))(v69, v70);
      v73 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
      v74 = v94;
      v73(v94, (char *)v68, v70);
    }
    v76 = (uint64_t)v99;
    v77 = (uint64_t)v100;
    v100 = *(char **)(v49 + 16);
    v78 = v97;
    v71((char *)v97, v74, v70);
    v79 = v74;
    v80 = sub_2418A8130();
    v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56);
    v81(v77, 1, 1, v80);
    v82 = (int *)v103;
    v83 = v76 + *(int *)(v103 + 24);
    v81(v83, 1, 1, v80);
    v84 = (_QWORD *)(v76 + v82[7]);
    *v84 = 0;
    v84[1] = 0;
    *(_BYTE *)(v76 + v82[8]) = 11;
    *(_BYTE *)(v76 + v82[9]) = 6;
    *(_QWORD *)v76 = 2;
    *(_BYTE *)(v76 + 8) = 0;
    v73((char *)(v76 + v82[5]), (char *)v78, v70);
    v85 = v100;
    sub_241799D54(v77, v83);
    swift_bridgeObjectRelease();
    *v84 = 0;
    v84[1] = 0;
    v86 = v101;
    sub_241731B4C(v76, v101, type metadata accessor for StateOfMindEntryModel.Configuration);
    type metadata accessor for StateOfMindEntryModel(0);
    swift_allocObject();
    v64 = sub_24179C220(v85, v86, (uint64_t)nullsub_1, 0);

    v87 = *(void (**)(char *, uint64_t))(v107 + 8);
    v87(v79, v70);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v102, v96);
    v88 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
    v89 = v108;
    v88(v91, v108);
    v88((uint64_t)v98, v89);
    v87(v106, v70);
  }
  return v64;
}

double sub_2418098D8()
{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  return v1;
}

MentalHealthUI::StateOfMindTimeline::Model::TimeRange_optional __swiftcall StateOfMindTimeline.Model.TimeRange.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 7)
    v2 = 1;
  else
    v2 = 2;
  if (rawValue == 1)
    v2 = 0;
  *v1 = v2;
  return (MentalHealthUI::StateOfMindTimeline::Model::TimeRange_optional)rawValue;
}

uint64_t StateOfMindTimeline.Model.TimeRange.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 7;
  else
    return 1;
}

uint64_t sub_241809978()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

uint64_t sub_2418099C4()
{
  return sub_2418AA578();
}

uint64_t sub_2418099F8()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

_QWORD *sub_241809A40@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 7)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_241809A60(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 7;
  if (!*v1)
    v2 = 1;
  *a1 = v2;
}

uint64_t sub_241809A7C@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v40 = a1;
  sub_24180E2E8();
  v39 = v2;
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v37 = (char *)&v37 - v8;
  v9 = sub_2418A8238();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2418A8100();
  MEMORY[0x24BDAC7A8](v14, v15);
  v16 = sub_2418A9CFC();
  v38 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v18, v21);
  v24 = (char *)&v37 - v23;
  (*(void (**)(uint64_t))(v1 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_endDate))(v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v1 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar, v9);
  sub_2418A9CB4();
  sub_2418A9CD8();
  sub_24172159C((unint64_t *)&unk_257154500, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
  result = sub_2418A9D80();
  if ((result & 1) != 0)
  {
    v26 = v38;
    v27 = v39;
    v28 = v37;
    v29 = &v37[*(int *)(v39 + 48)];
    v30 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v30(v37, v20, v16);
    v30(v29, v24, v16);
    v31 = &v6[*(int *)(v27 + 48)];
    v32 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
    v32(v6, v28, v16);
    v32(v31, v29, v16);
    v33 = v40;
    v30(v40, v6, v16);
    v34 = *(void (**)(char *, uint64_t))(v26 + 8);
    v34(v31, v16);
    v35 = &v6[*(int *)(v27 + 48)];
    v30(v6, v28, v16);
    v30(v35, v29, v16);
    sub_24180DCB0();
    v30(&v33[*(int *)(v36 + 36)], v35, v16);
    return ((uint64_t (*)(char *, uint64_t))v34)(v6, v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t StateOfMindTimeline.Model.__allocating_init(healthStore:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t (**v42)();
  uint64_t (**v43)();
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v49 = a1;
  v50 = _s9ViewModelOMa();
  v2 = MEMORY[0x24BDAC7A8](v50, v1);
  v51 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v45 - v5;
  v7 = sub_2418A8100();
  v8 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  v53 = v8;
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v45 - v14;
  sub_24172887C(0, &qword_257151CC8, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)&v45 - v20;
  v22 = sub_2418A8238();
  v47 = *(_QWORD *)(v22 - 8);
  v48 = v22;
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v27);
  v29 = (char *)&v45 - v28;
  v30 = objc_msgSend((id)objc_opt_self(), sel_hk_gregorianCalendarWithLocalTimeZone);
  sub_2418A81D8();

  v31 = swift_allocObject();
  *(_QWORD *)(v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery) = 0;
  *(_QWORD *)(v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver) = 0;
  v32 = v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model__availableWidth;
  v54 = 0;
  sub_2418A83E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v32, v21, v17);
  v33 = v49;
  *(_QWORD *)(v31 + 16) = v49;
  v49 = v33;
  v34 = (uint64_t)v15;
  sub_2418A80F4();
  sub_2417340BC();
  v36 = (uint64_t *)&v6[*(int *)(v35 + 48)];
  v37 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v46 = v15;
  v37(v12, v15, v52);
  v39 = v47;
  v38 = v48;
  v40 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v40(v26, v29, v48);
  sub_2418A9CB4();
  *v36 = sub_24180A1E4(v34);
  v36[1] = v41;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_2417289A8((uint64_t)v6, v51, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  sub_2418A83E8();
  sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  swift_endAccess();
  v40((char *)(v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar), v29, v38);
  *(_BYTE *)(v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeRange) = 1;
  v42 = (uint64_t (**)())(v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_endDate);
  *v42 = sub_241809A78;
  v42[1] = 0;
  v43 = (uint64_t (**)())(v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_now);
  *v43 = sub_241809A78;
  v43[1] = 0;
  sub_24180A6DC();
  sub_24180A848();

  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v38);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v46, v52);
  return v31;
}

uint64_t StateOfMindTimeline.Model.__allocating_init(healthStore:gregorianCalendar:timeRange:endDate:now:)(void *a1, uint64_t a2, unsigned __int8 *a3, void (*a4)(id), void (*a5)(id), uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  swift_allocObject();
  v14 = sub_24180D67C(a1, a2, a3, a4, a5, a6, a7);

  swift_release();
  swift_release();
  return v14;
}

uint64_t StateOfMindTimeline.Model.init(healthStore:gregorianCalendar:timeRange:endDate:now:)(void *a1, uint64_t a2, unsigned __int8 *a3, void (*a4)(id), void (*a5)(id), uint64_t a6, uint64_t a7)
{
  uint64_t v8;

  v8 = sub_24180D67C(a1, a2, a3, a4, a5, a6, a7);

  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_24180A1E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = sub_2418A8058();
  v45 = *(_QWORD *)(v2 - 8);
  v46 = (char *)v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v44 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2418A7FD4();
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2418A801C();
  v48 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2418A807C();
  v47 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)&v43 - v20;
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (char *)&v43 - v24;
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v43 - v27;
  sub_24172570C(0, &qword_257151E78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)&v43 - v31;
  v52 = a1;
  if ((sub_2418A8178() & 1) != 0)
  {
    v33 = sub_2418A8148();
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v46 = v32;
    v34(v32, 1, 1, v33);
    sub_24180E3C8();
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_2418D23E0;
    MEMORY[0x24269A530]();
    sub_2418A8010();
    sub_2418A7FBC();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v49);
    v36 = *(void (**)(char *, uint64_t))(v47 + 8);
    v36(v21, v13);
    sub_2418A7FC8();
    sub_2418A7FA4();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v51);
    v36(v25, v13);
    *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v35 + 64) = sub_24180E478();
    sub_24172159C(&qword_25714F118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
    sub_2418A80E8();
    v36(v28, v13);
    if (qword_25714B958 != -1)
      swift_once();
    v37 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v38 = sub_2418A7EFC();
    if (*(_QWORD *)(v35 + 16))
    {
      v39 = (uint64_t)v46;
      v38 = sub_2418A9DEC();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

      v39 = (uint64_t)v46;
    }
    swift_bridgeObjectRelease();
    sub_2417A7664(v39, &qword_257151E78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  }
  else
  {
    MEMORY[0x24269A530]();
    sub_2418A8010();
    sub_2418A7FBC();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v49);
    v40 = *(void (**)(char *, uint64_t))(v47 + 8);
    v40(v17, v13);
    sub_2418A7FC8();
    sub_2418A7FA4();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v51);
    v40(v21, v13);
    v41 = v44;
    sub_2418A8028();
    sub_2418A8070();
    (*(void (**)(char *, char *))(v45 + 8))(v41, v46);
    v40(v25, v13);
    sub_24172159C(&qword_25714F118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
    sub_2418A80E8();
    v40(v28, v13);
    return v53;
  }
  return v38;
}

void sub_24180A6DC()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  _QWORD v9[6];

  v1 = *v0;
  sub_241762EFC(0, &qword_257152700);
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_stateOfMindType);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = objc_allocWithZone(MEMORY[0x24BDD3DC8]);
  v9[4] = sub_24180E370;
  v9[5] = v4;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_24180C6A8;
  v9[3] = &block_descriptor_45;
  v6 = _Block_copy(v9);
  swift_retain();
  v7 = objc_msgSend(v5, sel_initWithSampleType_predicate_updateHandler_, v2, 0, v6);

  _Block_release(v6);
  swift_release();
  swift_release();
  objc_msgSend((id)v0[2], sel_executeQuery_, v7);
  v8 = *(void **)((char *)v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery);
  *(uint64_t *)((char *)v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery) = (uint64_t)v7;

}

uint64_t sub_24180A848()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v8[6];

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v2 = *MEMORY[0x24BEBDFF0];
  v3 = objc_msgSend((id)objc_opt_self(), sel_mainQueue);
  v4 = swift_allocObject();
  swift_weakInit();
  v8[4] = sub_24180DC90;
  v8[5] = v4;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_24180B6DC;
  v8[3] = &block_descriptor_9;
  v5 = _Block_copy(v8);
  swift_release();
  v6 = objc_msgSend(v1, sel_addObserverForName_object_queue_usingBlock_, v2, 0, v3, v5);
  _Block_release(v5);

  *(_QWORD *)(v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver) = v6;
  return swift_unknownObjectRelease();
}

uint64_t StateOfMindTimeline.Model.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver);
  if (v2)
  {
    v3 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v4 = objc_msgSend(v3, sel_defaultCenter);
    objc_msgSend(v4, sel_removeObserver_, v2);
    swift_unknownObjectRelease();

  }
  *(_QWORD *)(v0 + v1) = 0;
  swift_unknownObjectRelease();
  v5 = OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery))
  {
    objc_msgSend(*(id *)(v0 + 16), sel_stopQuery_);
    v6 = *(void **)(v0 + v5);
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)(v0 + v5) = 0;

  v7 = v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar;
  v8 = sub_2418A8238();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  v9 = v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model__viewModel;
  v10 = MEMORY[0x24BDB9EF0];
  sub_24172570C(0, &qword_257151D10, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  v12 = v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model__availableWidth;
  sub_24172887C(0, &qword_257151CC8, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return v0;
}

uint64_t StateOfMindTimeline.Model.__deallocating_deinit()
{
  StateOfMindTimeline.Model.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24180AB64(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t (*v34)(uint64_t);
  void *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t aBlock[6];

  v7 = sub_2418A8340();
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2418A9A44();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2418A9A68();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    v21 = a4;
    sub_2418A8328();
    v22 = a4;
    v23 = a4;
    v24 = sub_2418A8334();
    v25 = sub_2418AA044();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      aBlock[0] = v27;
      *(_DWORD *)v26 = 136446466;
      v28 = sub_2418AA5D8();
      v40 = sub_24176024C(v28, v29, aBlock);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      v40 = (uint64_t)a4;
      v30 = a4;
      sub_24180E42C(0, (unint64_t *)&qword_25714D490);
      v31 = sub_2418A9E04();
      v40 = sub_24176024C(v31, v32, aBlock);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24171C000, v24, v25, "[%{public}s] HKStateOfMind observer query failed: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v27, -1, -1);
      MEMORY[0x24269D548](v26, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v10, v39);
  }
  else
  {
    sub_241762EFC(0, (unint64_t *)&qword_2543915E8);
    v39 = sub_2418AA0D4();
    aBlock[4] = (uint64_t)sub_24180E3A8;
    aBlock[5] = a5;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2417599E8;
    aBlock[3] = (uint64_t)&block_descriptor_51;
    v33 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_2418A9A5C();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    v34 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
    sub_24172159C((unint64_t *)&unk_25714F340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_24172570C(0, &qword_25714D438, v34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24175D3CC();
    sub_2418AA248();
    v35 = (void *)v39;
    MEMORY[0x24269C8E8](0, v20, v15, v33);
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
}

uint64_t sub_24180AF5C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  id v29;
  id v30;
  NSObject *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  _QWORD *v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  char *v57;
  uint64_t (*v58)(uint64_t);
  char *v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  uint64_t v80;
  uint64_t aBlock;
  uint64_t v82;
  void *v83;
  void *v84;
  void *v85;
  _QWORD *v86;

  v1 = v0;
  v79 = *v0;
  v2 = sub_2418A9A44();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A9A68();
  v76 = *(_QWORD *)(v7 - 8);
  v77 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v75 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2418A9A50();
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v68 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24180DCB0();
  v71 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v72 = v16;
  v73 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v62 - v18;
  v20 = dispatch_group_create();
  sub_241809A7C(v19);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = 0;
  dispatch_group_enter(v20);
  v22 = sub_2418A9CCC();
  v74 = v19;
  result = sub_2418A9CE4();
  v24 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    v25 = *((_BYTE *)v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeRange) == 0;
    v66 = v6;
    if (v25)
      v26 = 1;
    else
      v26 = 7;
    v27 = (_QWORD *)swift_allocObject();
    v65 = v2;
    v28 = v27;
    v27[2] = v21;
    v27[3] = v20;
    v78 = v21;
    v27[4] = v79;
    v29 = objc_allocWithZone(MEMORY[0x24BE65DB0]);
    v67 = v3;
    v30 = v29;
    swift_retain();
    v31 = v20;
    v32 = (void *)sub_2418A81CC();
    v85 = sub_24180DD50;
    v86 = v28;
    aBlock = MEMORY[0x24BDAC760];
    v33 = MEMORY[0x24BDAC760];
    v82 = 1107296256;
    v83 = sub_24182CDE0;
    v84 = &block_descriptor_9_0;
    v34 = _Block_copy(&aBlock);
    v35 = objc_msgSend(v30, sel_initWithDayIndexRange_gregorianCalendar_ascending_limit_resultsHandler_, v22, v24, v32, 1, v26, v34);
    v64 = v35;
    _Block_release(v34);

    swift_release();
    v36 = (void *)v1[2];
    objc_msgSend(v36, sel_executeQuery_, v35);
    v37 = swift_allocObject();
    *(_BYTE *)(v37 + 16) = 2;
    dispatch_group_enter(v31);
    sub_24172887C(0, (unint64_t *)&qword_25714D510, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_2418D4D90;
    sub_241762EFC(0, &qword_257152700);
    v39 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_stateOfMindType);
    v40 = objc_msgSend((id)objc_opt_self(), sel_queryDescriptorWithSampleType_, v39);

    *(_QWORD *)(v38 + 32) = v40;
    aBlock = v38;
    sub_2418A9EC4();
    v41 = (_QWORD *)swift_allocObject();
    v41[2] = v37;
    v41[3] = v31;
    v41[4] = v79;
    v42 = objc_allocWithZone(MEMORY[0x24BDD3F00]);
    sub_241762EFC(0, &qword_257151E18);
    v79 = v31;
    swift_retain();
    v43 = (void *)sub_2418A9EAC();
    swift_bridgeObjectRelease();
    v85 = sub_24180DD9C;
    v86 = v41;
    aBlock = v33;
    v82 = 1107296256;
    v83 = sub_24180C758;
    v84 = &block_descriptor_18;
    v44 = _Block_copy(&aBlock);
    v45 = objc_msgSend(v42, sel_initWithQueryDescriptors_limit_resultsHandler_, v43, 1, v44);
    v63 = v45;

    _Block_release(v44);
    swift_release();
    objc_msgSend(v36, sel_executeQuery_, v45);
    sub_241762EFC(0, (unint64_t *)&qword_2543915E8);
    v47 = v68;
    v46 = v69;
    v48 = v70;
    (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v68, *MEMORY[0x24BEE5490], v70);
    v49 = (void *)sub_2418AA0EC();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    v50 = swift_allocObject();
    swift_weakInit();
    v51 = v73;
    v52 = (uint64_t)v74;
    sub_2417289A8((uint64_t)v74, v73, (uint64_t (*)(_QWORD))sub_24180DCB0);
    v53 = (*(unsigned __int8 *)(v71 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    v54 = (_QWORD *)swift_allocObject();
    v55 = v78;
    v54[2] = v50;
    v54[3] = v55;
    v54[4] = v37;
    sub_241731B4C(v51, (uint64_t)v54 + v53, (uint64_t (*)(_QWORD))sub_24180DCB0);
    v85 = sub_24180DE58;
    v86 = v54;
    aBlock = MEMORY[0x24BDAC760];
    v82 = 1107296256;
    v83 = sub_2417599E8;
    v84 = &block_descriptor_25;
    v56 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    v57 = v75;
    sub_2418A9A5C();
    v80 = MEMORY[0x24BEE4AF8];
    v58 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
    sub_24172159C((unint64_t *)&unk_25714F340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_24172570C(0, &qword_25714D438, v58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24175D3CC();
    v59 = v66;
    v60 = v65;
    sub_2418AA248();
    v61 = v79;
    sub_2418AA0B0();
    _Block_release(v56);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v57, v77);
    sub_24172588C(v52, (uint64_t (*)(_QWORD))sub_24180DCB0);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24180B688()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_24180AF5C();
    return swift_release();
  }
  return result;
}

uint64_t sub_24180B6DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *);
  uint64_t v9;

  v2 = sub_2418A7DC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *))(a1 + 32);
  sub_2418A7DAC();
  swift_retain();
  v7(v6);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_24180B780(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, NSObject *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33[3];

  v9 = sub_2418A8340();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v14 = a3;
    sub_2418A8328();
    v15 = a3;
    v16 = a3;
    v17 = sub_2418A8334();
    v18 = sub_2418AA044();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v31 = a5;
      v20 = v19;
      v29 = swift_slowAlloc();
      v33[0] = v29;
      *(_DWORD *)v20 = 136446466;
      v30 = v9;
      v21 = sub_2418AA5D8();
      v32 = sub_24176024C(v21, v22, v33);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      v32 = (uint64_t)a3;
      v23 = a3;
      sub_24180E42C(0, (unint64_t *)&qword_25714D490);
      v24 = sub_2418A9E04();
      v32 = sub_24176024C(v24, v25, v33);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24171C000, v17, v18, "[%{public}s] HKMHDaySummaryQuery query failed: %s", (uint8_t *)v20, 0x16u);
      v26 = v29;
      swift_arrayDestroy();
      MEMORY[0x24269D548](v26, -1, -1);
      v27 = v20;
      a5 = v31;
      MEMORY[0x24269D548](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v30);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  swift_beginAccess();
  *(_QWORD *)(a4 + 16) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a5);
}

void sub_24180BA24(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, NSObject *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35[3];

  v9 = sub_2418A8340();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v14 = a3;
    sub_2418A8328();
    v15 = a3;
    v16 = a3;
    v17 = sub_2418A8334();
    v18 = sub_2418AA044();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v33 = a5;
      v20 = v19;
      v31 = swift_slowAlloc();
      v35[0] = v31;
      *(_DWORD *)v20 = 136446466;
      v32 = a4;
      v21 = sub_2418AA5D8();
      v34 = sub_24176024C(v21, v22, v35);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      v34 = (uint64_t)a3;
      v23 = a3;
      sub_24180E42C(0, (unint64_t *)&qword_25714D490);
      v24 = sub_2418A9E04();
      v34 = sub_24176024C(v24, v25, v35);
      sub_2418AA1F4();
      a4 = v32;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24171C000, v17, v18, "[%{public}s] HKMHDaySummaryQuery query failed: %s", (uint8_t *)v20, 0x16u);
      v26 = v31;
      swift_arrayDestroy();
      MEMORY[0x24269D548](v26, -1, -1);
      v27 = v20;
      a5 = v33;
      MEMORY[0x24269D548](v27, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  if (a2)
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v28 = sub_2418AA398();
      swift_bridgeObjectRelease();
    }
    else
    {
      v28 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v29 = v28 != 0;
  }
  else
  {
    v29 = 2;
  }
  swift_beginAccess();
  *(_BYTE *)(a4 + 16) = v29;
  dispatch_group_leave(a5);
}

uint64_t sub_24180BCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char v10;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    v8 = *(_QWORD *)(a2 + 16);
    if (v8)
      v9 = v8;
    else
      v9 = MEMORY[0x24BEE4AF8];
    swift_beginAccess();
    v10 = *(_BYTE *)(a3 + 16) & 1;
    swift_bridgeObjectRetain();
    sub_24180BDD4(v9, v10, a4);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24180BDD4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  uint64_t (*v39)();
  uint64_t v40;

  v4 = v3;
  sub_24180E0D8(0, &qword_257151E20, &qword_257151E28, MEMORY[0x24BEE08F0], MEMORY[0x24BEE2FB0]);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v33 - v10);
  v12 = sub_2418A9A44();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2418A9A68();
  v34 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v21 = sub_2417289A8(a3, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_24180DCB0);
    MEMORY[0x24BDAC7A8](v21, v22);
    *(&v33 - 2) = v4;
    *(&v33 - 1) = a1;
    v23 = sub_24180CC70(v11, (void (*)(_QWORD, char *))sub_24180DEF0, (uint64_t)(&v33 - 4));
    sub_24180DEF8((uint64_t)v11, &qword_257151E20, MEMORY[0x24BEE2FB0]);
    sub_241762EFC(0, (unint64_t *)&qword_2543915E8);
    v24 = sub_2418AA0D4();
    v25 = swift_allocObject();
    swift_weakInit();
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v25;
    *(_QWORD *)(v26 + 24) = v23;
    v27 = (void *)v24;
    v39 = sub_24180DF74;
    v40 = v26;
    aBlock = MEMORY[0x24BDAC760];
    v36 = 1107296256;
    v28 = &block_descriptor_36;
  }
  else
  {
    sub_241762EFC(0, (unint64_t *)&qword_2543915E8);
    v27 = (void *)sub_2418AA0D4();
    v29 = swift_allocObject();
    swift_weakInit();
    v39 = sub_24180DED0;
    v40 = v29;
    aBlock = MEMORY[0x24BDAC760];
    v36 = 1107296256;
    v28 = &block_descriptor_29;
  }
  v37 = sub_2417599E8;
  v38 = v28;
  v30 = _Block_copy(&aBlock);
  swift_release();
  sub_2418A9A5C();
  aBlock = MEMORY[0x24BEE4AF8];
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_24172159C((unint64_t *)&unk_25714F340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_24172570C(0, &qword_25714D438, v31, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_24175D3CC();
  sub_2418AA248();
  MEMORY[0x24269C8E8](0, v20, v16, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v20, v17);
}

uint64_t sub_24180C164(uint64_t a1, void (*a2)(void))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

uint64_t sub_24180C1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = sub_2418A8238();
  v27 = *(_QWORD *)(v1 - 8);
  v28 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = _s9ViewModelOMa();
  v6 = MEMORY[0x24BDAC7A8](v29, v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v26 - v10;
  v12 = sub_2418A8100();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)&v26 - v20;
  (*(void (**)(uint64_t))(v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_endDate))(v19);
  sub_2417340BC();
  v23 = (uint64_t *)&v11[*(int *)(v22 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v21, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v4, v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar, v28);
  sub_2418A9CB4();
  *v23 = sub_24180A1E4((uint64_t)v21);
  v23[1] = v24;
  swift_storeEnumTagMultiPayload();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2417289A8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  swift_retain();
  sub_2418A8424();
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v21, v12);
}

uint64_t sub_24180C3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _BYTE v23[16];
  uint64_t v24;

  v8 = sub_2418A8100();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_2418A9CFC();
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t))(v17 + 16))(v16, a2);
  sub_2418A9CF0();
  v18 = sub_24180A1E4((uint64_t)v12);
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
  v24 = a2;
  v21 = sub_241808DC0((uint64_t (*)(id *))sub_24180E29C, (uint64_t)v23, a3);
  return sub_2417A89A8(a1, (uint64_t)v16, v18, v20, v21, qword_2511AC7B0, a4);
}

uint64_t sub_24180C52C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;

  v3 = _s9ViewModelOMa();
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (uint64_t *)((char *)&v12 - v9);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2418A8418();
    swift_release();
    swift_release();
    swift_bridgeObjectRetain();
    sub_241848C84((uint64_t)v7, a2, v10);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2417289A8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    swift_retain();
    sub_2418A8424();
    sub_24172588C((uint64_t)v10, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    return swift_release();
  }
  return result;
}

void sub_24180C6A8(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  void (*v6)(id, uint64_t (*)(), uint64_t, void *);
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  v6 = *(void (**)(id, uint64_t (*)(), uint64_t, void *))(a1 + 32);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  v10 = a2;
  v9 = a4;
  v6(v10, sub_24180E39C, v8, a4);
  swift_release();
  swift_release();

}

uint64_t sub_24180C758(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_241762EFC(0, &qword_25714EBC8);
    v5 = sub_2418A9EB8();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t _s14MentalHealthUI19StateOfMindTimelineO5ModelC05buildgH03day11healthStoreAE10Foundation4DateV_So08HKHealthL0CtFZ_0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (**v50)@<X0>(uint64_t@<X8>);
  uint64_t (*v51)@<X0>(uint64_t@<X8>);
  uint64_t (**v52)();
  char *v54;
  char *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v56 = a2;
  v58 = a1;
  v64 = _s9ViewModelOMa();
  v3 = MEMORY[0x24BDAC7A8](v64, v2);
  v65 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v54 - v6;
  sub_24172887C(0, &qword_257151CC8, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v63 = v8;
  v61 = *((_QWORD *)v8 - 1);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v54 - v10;
  v12 = sub_2418A8100();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v12;
  v15 = *(_QWORD *)(v13 + 64);
  v17 = MEMORY[0x24BDAC7A8](v12, v16);
  v60 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v54 - v20;
  v54 = (char *)&v54 - v20;
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v54 - v23;
  v59 = sub_2418A8238();
  v66 = *(_QWORD *)(v59 - 8);
  v26 = MEMORY[0x24BDAC7A8](v59, v25);
  v28 = (char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v29);
  v55 = (char *)&v54 - v30;
  v31 = (void *)objc_opt_self();
  v56 = v56;
  v32 = objc_msgSend(v31, sel_hk_gregorianCalendarWithLocalTimeZone);
  sub_2418A81D8();

  v33 = v13;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v34(v24, v58, v14);
  v34(v21, (uint64_t)v24, v14);
  v35 = *(unsigned __int8 *)(v33 + 80);
  v36 = v33;
  v62 = v33;
  v37 = (v35 + 16) & ~v35;
  v38 = swift_allocObject();
  v57 = v14;
  v58 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v38 + v37, v24, v14);
  type metadata accessor for StateOfMindTimeline.Model();
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery) = 0;
  *(_QWORD *)(v39 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver) = 0;
  v40 = v39 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model__availableWidth;
  v67 = 0;
  sub_2418A83E8();
  (*(void (**)(uint64_t, char *, id))(v61 + 32))(v40, v11, v63);
  v41 = v56;
  *(_QWORD *)(v39 + 16) = v56;
  sub_2417340BC();
  v43 = (uint64_t *)&v7[*(int *)(v42 + 48)];
  v44 = (uint64_t)v54;
  v34(v60, (uint64_t)v54, v14);
  v45 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v46 = v55;
  v47 = v59;
  v45(v28, v55, v59);
  v63 = v41;
  sub_2418A9CB4();
  *v43 = sub_24180A1E4(v44);
  v43[1] = v48;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_2417289A8((uint64_t)v7, v65, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  sub_2418A83E8();
  sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  swift_endAccess();
  v49 = v47;
  v45((char *)(v39 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar), v46, v47);
  *(_BYTE *)(v39 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeRange) = 0;
  v50 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v39
                                                   + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_endDate);
  v51 = (uint64_t (*)@<X0>(uint64_t@<X8>))v58;
  *v50 = sub_24180E524;
  v50[1] = v51;
  v52 = (uint64_t (**)())(v39 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_now);
  *v52 = sub_241809A78;
  v52[1] = 0;
  swift_retain();
  sub_24180A6DC();
  sub_24180A848();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v44, v57);

  (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v49);
  return v39;
}

uint64_t sub_24180CC70(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a2)(_QWORD, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  char v87;
  void (*v88)(char *, uint64_t);
  uint64_t result;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t);
  char v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  _QWORD *v116;
  uint64_t v117;
  void (*v118)(_QWORD, char *);
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  void (*v135)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v119 = a3;
  v118 = a2;
  v135 = a1;
  v3 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v117 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v130 = (uint64_t)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24180DCB0();
  v125 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v133 = (uint64_t)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24180DF84();
  v128 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v137 = (uint64_t)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2418A9CFC();
  v138 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v131 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v127 = (char *)&v111 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v113 = (char *)&v111 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v112 = (char *)&v111 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v132 = (char *)&v111 - v27;
  MEMORY[0x24BDAC7A8](v26, v28);
  v124 = (char *)&v111 - v29;
  sub_24180E070();
  v123 = v30;
  v32 = MEMORY[0x24BDAC7A8](v30, v31);
  v122 = (char *)&v111 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v116 = (uint64_t *)((char *)&v111 - v36);
  MEMORY[0x24BDAC7A8](v35, v37);
  v115 = (char *)&v111 - v38;
  sub_24180DFE4();
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v126 = (uint64_t)&v111 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v121 = (char *)&v111 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v49 = (char *)&v111 - v48;
  v51 = MEMORY[0x24BDAC7A8](v47, v50);
  v53 = (char *)&v111 - v52;
  v55 = MEMORY[0x24BDAC7A8](v51, v54);
  v136 = (uint64_t)&v111 - v56;
  MEMORY[0x24BDAC7A8](v55, v57);
  v129 = (char *)&v111 - v58;
  sub_24180E0D8(0, &qword_257151E50, &qword_257151E58, MEMORY[0x24BEE0910], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE2C00]);
  v134 = (char *)v59;
  MEMORY[0x24BDAC7A8](v59, v60);
  v62 = (char *)&v111 - v61;
  v63 = MEMORY[0x24BEE08F0];
  sub_24180E0D8(0, &qword_257151E20, &qword_257151E28, MEMORY[0x24BEE08F0], MEMORY[0x24BEE2FB0]);
  MEMORY[0x24BDAC7A8](v64, v65);
  v67 = (char *)&v111 - v66;
  sub_24180E0D8(0, &qword_257151E60, &qword_257151E28, v63, MEMORY[0x24BEE2FA0]);
  v120 = v68;
  MEMORY[0x24BDAC7A8](v68, v69);
  v71 = (char *)&v111 - v70;
  v140 = MEMORY[0x24BEE4AF8];
  sub_24183D68C(0, 0, 0);
  sub_24180E1D4((uint64_t)v135, (uint64_t)v67);
  sub_2417289A8((uint64_t)v67, (uint64_t)v62, (uint64_t (*)(_QWORD))sub_24180DCB0);
  v72 = v138;
  v73 = v129;
  (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v129, v67, v12);
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
  v75 = (uint64_t)v73;
  v135 = v74;
  v74((uint64_t)v73, 0, 1, v12);
  sub_24172588C((uint64_t)v67, (uint64_t (*)(_QWORD))sub_24180DCB0);
  v76 = (uint64_t)v134;
  sub_241731B4C(v75, (uint64_t)&v62[*((int *)v134 + 9)], (uint64_t (*)(_QWORD))sub_24180DFE4);
  sub_24180E238((uint64_t)v62, (uint64_t)v71);
  v120 = *(int *)(v120 + 36);
  *(_QWORD *)&v71[v120] = 0;
  v77 = *(int *)(v76 + 36);
  v134 = v71;
  v78 = (uint64_t)&v71[v77];
  v129 = v53;
  v114 = v49;
  while (1)
  {
    v79 = v136;
    v135(v136, 1, 1, v12);
    v80 = v137;
    v81 = v137 + *(int *)(v128 + 48);
    sub_2417289A8(v78, v137, (uint64_t (*)(_QWORD))sub_24180DFE4);
    sub_2417289A8(v79, v81, (uint64_t (*)(_QWORD))sub_24180DFE4);
    v82 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48);
    if (v82(v80, 1, v12) == 1)
    {
      if (v82(v81, 1, v12) == 1)
      {
        sub_24172588C(v137, (uint64_t (*)(_QWORD))sub_24180DFE4);
        sub_24172588C(v136, (uint64_t (*)(_QWORD))sub_24180DFE4);
LABEL_20:
        sub_24180DEF8((uint64_t)v134, &qword_257151E60, MEMORY[0x24BEE2FA0]);
        return v140;
      }
      goto LABEL_7;
    }
    sub_2417289A8(v137, (uint64_t)v53, (uint64_t (*)(_QWORD))sub_24180DFE4);
    if (v82(v81, 1, v12) == 1)
    {
      (*(void (**)(char *, uint64_t))(v138 + 8))(v53, v12);
LABEL_7:
      sub_24172588C(v137, (uint64_t (*)(_QWORD))sub_24180DF84);
      sub_24172588C(v136, (uint64_t (*)(_QWORD))sub_24180DFE4);
      goto LABEL_9;
    }
    v83 = v138;
    v84 = *(void (**)(char *, char *, uint64_t))(v138 + 32);
    v85 = v112;
    v84(v112, v129, v12);
    v86 = v113;
    v84(v113, (char *)v81, v12);
    sub_24172159C(&qword_257151E68, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
    v87 = sub_2418A9DA4();
    v88 = *(void (**)(char *, uint64_t))(v83 + 8);
    v88(v86, v12);
    v88(v85, v12);
    sub_24172588C(v137, (uint64_t (*)(_QWORD))sub_24180DFE4);
    sub_24172588C(v136, (uint64_t (*)(_QWORD))sub_24180DFE4);
    if ((v87 & 1) != 0)
      goto LABEL_20;
LABEL_9:
    sub_2417289A8(v78, (uint64_t)v49, (uint64_t (*)(_QWORD))sub_24180DFE4);
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v82)(v49, 1, v12);
    if ((_DWORD)result == 1)
      goto LABEL_22;
    v90 = *(void (**)(char *, char *, uint64_t))(v138 + 32);
    v91 = v127;
    v90(v127, v49, v12);
    v90(v132, v91, v12);
    sub_2417289A8((uint64_t)v134, v133, (uint64_t (*)(_QWORD))sub_24180DCB0);
    v92 = v126;
    sub_2417289A8(v78, v126, (uint64_t (*)(_QWORD))sub_24180DFE4);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v82)(v92, 1, v12);
    if ((_DWORD)result == 1)
      goto LABEL_23;
    v90(v131, (char *)v92, v12);
    v93 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488];
    sub_24172159C(&qword_257151E68, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
    v94 = sub_2418A9DA4();
    v95 = (uint64_t)v121;
    if ((v94 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v138 + 8))(v131, v12);
      v96 = 1;
    }
    else
    {
      v139 = 1;
      sub_24172159C((unint64_t *)&unk_2571526A0, v93, MEMORY[0x24BDD24C0]);
      v97 = v131;
      sub_2418AA20C();
      (*(void (**)(char *, uint64_t))(v138 + 8))(v97, v12);
      v96 = 0;
    }
    v98 = v123;
    v135(v95, v96, 1, v12);
    sub_24172588C(v133, (uint64_t (*)(_QWORD))sub_24180DCB0);
    sub_24172588C(v78, (uint64_t (*)(_QWORD))sub_24180DFE4);
    v99 = v78;
    sub_241731B4C(v95, v78, (uint64_t (*)(_QWORD))sub_24180DFE4);
    v100 = v124;
    v90(v124, v132, v12);
    v101 = &v122[*(int *)(v98 + 48)];
    v102 = (uint64_t)v134;
    v103 = v120;
    v104 = *(_QWORD *)&v134[v120];
    result = ((uint64_t (*)(char *, char *, uint64_t))v90)(v101, v100, v12);
    if (__OFADD__(v104, 1))
      break;
    *(_QWORD *)(v102 + v103) = v104 + 1;
    v105 = (uint64_t)v116;
    v106 = (char *)v116 + *(int *)(v98 + 48);
    *v116 = v104;
    v90(v106, v101, v12);
    v107 = v115;
    sub_241731B4C(v105, (uint64_t)v115, (uint64_t (*)(_QWORD))sub_24180E070);
    v118(*(_QWORD *)v107, &v107[*(int *)(v98 + 48)]);
    sub_24172588C((uint64_t)v107, (uint64_t (*)(_QWORD))sub_24180E070);
    v108 = v140;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24183D68C(0, *(_QWORD *)(v108 + 16) + 1, 1);
      v108 = v140;
    }
    v49 = v114;
    v78 = v99;
    v110 = *(_QWORD *)(v108 + 16);
    v109 = *(_QWORD *)(v108 + 24);
    v53 = v129;
    if (v110 >= v109 >> 1)
    {
      sub_24183D68C(v109 > 1, v110 + 1, 1);
      v108 = v140;
    }
    *(_QWORD *)(v108 + 16) = v110 + 1;
    sub_241731B4C(v130, v108+ ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80))+ *(_QWORD *)(v117 + 72) * v110, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_24180D67C(void *a1, uint64_t a2, unsigned __int8 *a3, void (*a4)(id), void (*a5)(id), uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (**v42)(id);
  void (*v43)(id);
  _QWORD *v44;
  uint64_t v45;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(id);
  void (*v60)(id);
  uint64_t v61;
  uint64_t v62;

  v8 = v7;
  v57 = a6;
  v58 = a7;
  v59 = a5;
  v60 = a4;
  v55 = a2;
  v48 = a1;
  v53 = sub_2418A8238();
  v61 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v10);
  v51 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = _s9ViewModelOMa();
  v13 = MEMORY[0x24BDAC7A8](v54, v12);
  v56 = (uint64_t)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v47 - v16;
  v18 = sub_2418A8100();
  v19 = *(_QWORD *)(v18 - 8);
  v49 = v18;
  v50 = v19;
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v47 - v25;
  sub_24172887C(0, &qword_257151CC8, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v28 = v27;
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v30);
  v32 = (char *)&v47 - v31;
  v52 = *a3;
  *(_QWORD *)(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery) = 0;
  *(_QWORD *)(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver) = 0;
  v33 = v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model__availableWidth;
  v62 = 0;
  sub_2418A83E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v33, v32, v28);
  v34 = v48;
  *(_QWORD *)(v8 + 16) = v48;
  v35 = v34;
  v60(v35);
  sub_2417340BC();
  v37 = (uint64_t *)&v17[*(int *)(v36 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v26, v18);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
  v39 = v55;
  v40 = v53;
  v38(v51, v55, v53);
  sub_2418A9CB4();
  *v37 = sub_24180A1E4((uint64_t)v26);
  v37[1] = v41;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_2417289A8((uint64_t)v17, v56, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  sub_2418A83E8();
  sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  swift_endAccess();
  v38((char *)(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar), v39, v40);
  *(_BYTE *)(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeRange) = v52;
  v42 = (void (**)(id))(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_endDate);
  v43 = v59;
  *v42 = v60;
  v42[1] = v43;
  v44 = (_QWORD *)(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_now);
  v45 = v58;
  *v44 = v57;
  v44[1] = v45;
  swift_retain();
  swift_retain();
  sub_24180A6DC();
  sub_24180A848();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v26, v49);
  return v8;
}

unint64_t sub_24180D9F0()
{
  unint64_t result;

  result = qword_257151D18;
  if (!qword_257151D18)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindTimeline.Model.TimeRange, &type metadata for StateOfMindTimeline.Model.TimeRange);
    atomic_store(result, (unint64_t *)&qword_257151D18);
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindTimeline()
{
  return &type metadata for StateOfMindTimeline;
}

uint64_t sub_24180DA44()
{
  return type metadata accessor for StateOfMindTimeline.Model();
}

uint64_t type metadata accessor for StateOfMindTimeline.Model()
{
  uint64_t result;

  result = qword_257151D48;
  if (!qword_257151D48)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24180DA88()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2418A8238();
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_257151D10, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
    if (v1 <= 0x3F)
    {
      sub_24172887C(319, &qword_257151CC8, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for StateOfMindTimeline.Model()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateOfMindTimeline.Model.__allocating_init(healthStore:gregorianCalendar:timeRange:endDate:now:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t storeEnumTagSinglePayload for StateOfMindTimeline.Model.TimeRange(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24180DBEC + 4 * byte_2418D7BB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24180DC20 + 4 * byte_2418D7BB0[v4]))();
}

uint64_t sub_24180DC20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24180DC28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24180DC30);
  return result;
}

uint64_t sub_24180DC3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24180DC44);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24180DC48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24180DC50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindTimeline.Model.TimeRange()
{
  return &type metadata for StateOfMindTimeline.Model.TimeRange;
}

uint64_t sub_24180DC6C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24180DC90()
{
  return sub_24180B688();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

void sub_24180DCB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151E10)
  {
    sub_2418A9CFC();
    sub_24172159C((unint64_t *)&unk_257154500, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    v0 = sub_2418A9D8C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151E10);
  }
}

uint64_t sub_24180DD28()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_24180DD50(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_24180B780(a1, a2, a3, *(_QWORD *)(v3 + 16), *(NSObject **)(v3 + 24));
}

uint64_t sub_24180DD5C()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_24180DD9C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_24180BA24(a1, a2, a3, *(_QWORD *)(v3 + 16), *(NSObject **)(v3 + 24));
}

uint64_t sub_24180DDA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  sub_24180DCB0();
  v2 = v1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v4 = (v3 + 40) & ~v3;
  swift_release();
  swift_release();
  swift_release();
  v5 = v0 + v4;
  v6 = sub_2418A9CFC();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v5 + *(int *)(v2 + 36), v6);
  return swift_deallocObject();
}

uint64_t sub_24180DE58()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_24180DCB0();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_24180BCFC(v0[2], v0[3], v0[4], (uint64_t)v0 + ((v2 + 40) & ~v2));
}

unint64_t sub_24180DE8C()
{
  unint64_t result;

  result = qword_257151E30;
  if (!qword_257151E30)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_257151E30);
  }
  return result;
}

uint64_t sub_24180DED0()
{
  uint64_t v0;

  return sub_24180C164(v0, (void (*)(void))sub_24180C1BC);
}

uint64_t sub_24180DEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_24180C3D8(a1, a2, *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_24180DEF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;

  sub_24180E0D8(0, a2, &qword_257151E28, MEMORY[0x24BEE08F0], a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24180DF48()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24180DF74()
{
  uint64_t v0;

  return sub_24180C52C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_24180DF84()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257151E38)
  {
    sub_24180DFE4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257151E38);
  }
}

void sub_24180DFE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151E40)
  {
    sub_2418A9CFC();
    sub_24172159C((unint64_t *)&unk_2571526A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
    sub_24180DE8C();
    v0 = sub_2418A9D98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151E40);
  }
}

void sub_24180E070()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257151E48)
  {
    sub_2418A9CFC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257151E48);
  }
}

void sub_24180E0D8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (!*a2)
  {
    sub_24180DCB0();
    v11 = v10;
    v12 = sub_24180E154(a3, a4);
    v13 = a5(a1, v11, v12);
    if (!v14)
      atomic_store(v13, a2);
  }
}

uint64_t sub_24180E154(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    sub_24180DCB0();
    v6 = v5;
    v7[0] = sub_24172159C((unint64_t *)&unk_2571526A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
    v7[1] = sub_24180DE8C();
    result = MEMORY[0x24269D47C](a2, v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24180E1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24180E0D8(0, &qword_257151E20, &qword_257151E28, MEMORY[0x24BEE08F0], MEMORY[0x24BEE2FB0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24180E238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24180E0D8(0, &qword_257151E50, &qword_257151E58, MEMORY[0x24BEE0910], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE2C00]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_24180E29C(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_dayIndex);
  return v1 == (id)sub_2418A9CCC();
}

void sub_24180E2E8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257151E70)
  {
    sub_2418A9CFC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257151E70);
  }
}

uint64_t sub_24180E34C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24180E370(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  return sub_24180AB64(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_24180E378()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_24180E39C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_24180E3A8()
{
  uint64_t v0;

  return sub_24180C164(v0, (void (*)(void))sub_24180AF5C);
}

void sub_24180E3C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151E80)
  {
    sub_24180E42C(255, (unint64_t *)&qword_257151E88);
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151E80);
  }
}

uint64_t sub_24180E42C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_24180E478()
{
  unint64_t result;

  result = qword_257151E90;
  if (!qword_257151E90)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257151E90);
  }
  return result;
}

uint64_t sub_24180E4C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2418A8100();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_24180E524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2418A8100();
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)), v3);
}

double StateOfMindVisualization.ValenceImage.init(valence:imageScale:)@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  double result;
  uint64_t v5;
  unsigned __int8 v6;
  __int128 v7;
  uint64_t v8;

  v6 = *a1;
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)(&v6, a3);
  result = *(double *)&v7;
  v5 = v8;
  *(_OWORD *)a2 = v7;
  *(_QWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_24180E5E8(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  CGColorRef GenericRGB;
  uint64_t (*v10)(double);
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = sub_2418A84E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v8, v4) == *MEMORY[0x24BDEB3F0])
  {
    swift_getKeyPath();
    GenericRGB = CGColorCreateGenericRGB(1.0, 1.0, 1.0, 1.0);
    v10 = (uint64_t (*)(double))sub_2418104B4;
  }
  else
  {
    swift_getKeyPath();
    GenericRGB = CGColorCreateGenericRGB(0.0, 0.0, 0.0, 1.0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v10 = sub_241810058;
  }
  sub_241810204(fmax(fmin(a2, 1.0), -1.0));
  v12 = v11;
  v13 = v10(0.6);
  v14 = MEMORY[0x24269BD9C](v13);

  swift_release();
  return v14;
}

uint64_t sub_24180E758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  unint64_t v12;
  BOOL v13;
  double v14;
  _BOOL4 v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v7 = a1;
  v8 = sub_24180F768(a1, a2, a3);
  v30 = MEMORY[0x24BEE4AF8];
  result = sub_24183D590(0, v8 & ~(v8 >> 63), 0);
  if (v8 < 0)
    goto LABEL_52;
  result = v30;
  v10 = a4 + 0x4000000000000000;
  if (v8)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = (double)(2 * a4);
      while (1)
      {
        v15 = v7 <= a2;
        if (a3 > 0)
          v15 = v7 >= a2;
        if (v15)
        {
          if (v11 & 1 | (v7 != a2))
            goto LABEL_50;
          if (!v13 && v12 == 0x8000000000000000)
            goto LABEL_51;
          v11 = 1;
          v16 = a2;
        }
        else
        {
          v13 = !__OFADD__(v7, a3);
          if (__OFADD__(v7, a3))
            v12 = 0x8000000000000000;
          else
            v12 = 0;
          if (__OFADD__(v7, a3))
            v16 = ((v7 + a3) >> 63) ^ 0x8000000000000000;
          else
            v16 = v7 + a3;
        }
        v31 = result;
        v18 = *(_QWORD *)(result + 16);
        v17 = *(_QWORD *)(result + 24);
        if (v18 >= v17 >> 1)
        {
          v26 = v12;
          v28 = v10;
          v24 = v11;
          sub_24183D590(v17 > 1, v18 + 1, 1);
          v11 = v24;
          v12 = v26;
          v10 = v28;
          result = v31;
        }
        *(_QWORD *)(result + 16) = v18 + 1;
        *(double *)(result + 8 * v18 + 32) = (double)v7 / v14;
        v7 = v16;
        if (!--v8)
        {
          v7 = v16;
          goto LABEL_25;
        }
      }
    }
    goto LABEL_53;
  }
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = (double)(2 * a4);
  while (1)
  {
LABEL_25:
    v19 = v7 <= a2;
    if (a3 > 0)
      v19 = v7 >= a2;
    if (v19)
      break;
    v21 = __OFADD__(v7, a3);
    if (v21)
      v20 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
    else
      v20 = v7 + a3;
    if (v21)
      v12 = 0x8000000000000000;
    else
      v12 = 0;
    v13 = !v21;
    if (v10 < 0)
      goto LABEL_49;
LABEL_45:
    v32 = result;
    v23 = *(_QWORD *)(result + 16);
    v22 = *(_QWORD *)(result + 24);
    if (v23 >= v22 >> 1)
    {
      v27 = v12;
      v29 = v10;
      v25 = v11;
      sub_24183D590(v22 > 1, v23 + 1, 1);
      v11 = v25;
      v12 = v27;
      v10 = v29;
      result = v32;
    }
    *(_QWORD *)(result + 16) = v23 + 1;
    *(double *)(result + 8 * v23 + 32) = (double)v7 / v14;
    v7 = v20;
  }
  if ((v7 != a2) | v11 & 1)
    return result;
  if (v13)
  {
    v11 = 1;
    v20 = a2;
    v13 = 1;
    if (v10 < 0)
      goto LABEL_49;
    goto LABEL_45;
  }
  if (v12 == 0x8000000000000000)
    return result;
  v13 = 0;
  v11 = 1;
  v20 = a2;
  if ((v10 & 0x8000000000000000) == 0)
    goto LABEL_45;
LABEL_49:
  __break(1u);
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

CGColorRef sub_24180EA0C()
{
  unsigned __int8 *v0;

  return ((CGColorRef (*)())((char *)sub_24180EA28 + 4 * byte_2418D7F70[*v0]))();
}

CGColorRef sub_24180EA28()
{
  return CGColorCreateGenericRGB(0.623529412, 0.588235294, 0.733333333, 1.0);
}

CGColorRef sub_24180EAC0()
{
  return CGColorCreateGenericRGB(0.956862745, 0.819607843, 0.619607843, 1.0);
}

CGColorRef sub_24180EAE0()
{
  return CGColorCreateGenericRGB(0.996078431, 0.737254902, 0.392156863, 1.0);
}

CGColorRef sub_24180EB00()
{
  unsigned __int8 *v0;

  return ((CGColorRef (*)())((char *)sub_24180EB1C + 4 * byte_2418D7F77[*v0]))();
}

CGColorRef sub_24180EB1C()
{
  return CGColorCreateGenericRGB(0.815686275, 0.776470588, 0.941176471, 1.0);
}

CGColorRef sub_24180EB40()
{
  return CGColorCreateGenericRGB(0.874509804, 0.898039216, 1.0, 1.0);
}

CGColorRef sub_24180EB5C()
{
  return CGColorCreateGenericRGB(0.807843137, 0.847058824, 0.905882353, 1.0);
}

CGColorRef sub_24180EB7C()
{
  return CGColorCreateGenericRGB(0.858823529, 0.882352941, 0.88627451, 1.0);
}

CGColorRef sub_24180EBA0()
{
  return CGColorCreateGenericRGB(0.807843137, 0.901960784, 0.643137255, 1.0);
}

CGColorRef sub_24180EBC0()
{
  return CGColorCreateGenericRGB(0.964705882, 0.831372549, 0.635294118, 1.0);
}

CGColorRef sub_24180EBE0()
{
  return CGColorCreateGenericRGB(1.0, 0.917647059, 0.882352941, 1.0);
}

CGColorRef sub_24180EC00()
{
  return CGColorCreateGenericRGB(0.0, 0.0, 0.0, 1.0);
}

uint64_t sub_24180EC14()
{
  CGColor *v0;
  uint64_t result;
  unint64_t v2;
  CGFloat v3;
  CGFloat v4;
  double v5;
  CGColorRef GenericRGB;

  v0 = sub_24180EA0C();
  if (CGColorGetNumberOfComponents(v0) != 4)
    return (uint64_t)v0;
  result = sub_2418A9FE4();
  if (!result)
    return (uint64_t)v0;
  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    if (v2 != 1)
    {
      if (v2 >= 3)
      {
        v3 = *(double *)(result + 32) * 0.5;
        v4 = *(double *)(result + 40) * 0.5;
        v5 = *(double *)(result + 48);
        swift_bridgeObjectRelease();
        GenericRGB = CGColorCreateGenericRGB(v3, v4, v5 * 0.5, 1.0);

        return (uint64_t)GenericRGB;
      }
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

CGColorRef sub_24180ECD4()
{
  unsigned __int8 *v0;

  return ((CGColorRef (*)())((char *)sub_24180ECF0 + 4 * byte_2418D7F7E[*v0]))();
}

CGColorRef sub_24180ECF0()
{
  return CGColorCreateGenericRGB(0.207843137, 0.121568627, 0.462745098, 1.0);
}

CGColorRef sub_24180ED14()
{
  return CGColorCreateGenericRGB(0.235294118, 0.298039216, 0.760784314, 1.0);
}

CGColorRef sub_24180ED38()
{
  return CGColorCreateGenericRGB(0.133333333, 0.392156863, 0.749019608, 1.0);
}

CGColorRef sub_24180ED5C()
{
  return CGColorCreateGenericRGB(0.42745098, 0.682352941, 0.756862745, 1.0);
}

CGColorRef sub_24180ED80()
{
  return CGColorCreateGenericRGB(0.431372549, 0.694117647, 0.0, 1.0);
}

CGColorRef sub_24180ED9C()
{
  return CGColorCreateGenericRGB(1.0, 0.603921569, 0.0117647059, 1.0);
}

CGColorRef sub_24180EDBC()
{
  return CGColorCreateGenericRGB(0.984313725, 0.454901961, 0.262745098, 1.0);
}

CGColorRef sub_24180EDE0()
{
  unsigned __int8 *v0;

  return ((CGColorRef (*)())((char *)sub_24180EDFC + 4 * byte_2418D7F85[*v0]))();
}

CGColorRef sub_24180EDFC()
{
  return CGColorCreateGenericRGB(0.611764706, 0.423529412, 0.764705882, 1.0);
}

CGColorRef sub_24180EE20()
{
  return CGColorCreateGenericRGB(0.556862745, 0.674509804, 0.996078431, 1.0);
}

CGColorRef sub_24180EE40()
{
  return CGColorCreateGenericRGB(0.635294118, 0.811764706, 1.0, 1.0);
}

CGColorRef sub_24180EE5C()
{
  return CGColorCreateGenericRGB(0.796078431, 0.878431373, 0.909803922, 1.0);
}

CGColorRef sub_24180EE80()
{
  return CGColorCreateGenericRGB(0.71372549, 0.858823529, 0.274509804, 1.0);
}

CGColorRef sub_24180EEA0()
{
  return CGColorCreateGenericRGB(0.996078431, 0.823529412, 0.392156863, 1.0);
}

CGColorRef sub_24180EEC0()
{
  return CGColorCreateGenericRGB(0.988235294, 0.745098039, 0.474509804, 1.0);
}

void *static StateOfMindVisualization.Colors.allCases.getter()
{
  return &unk_2511AB9F8;
}

void sub_24180EEF0(_QWORD *a1@<X8>)
{
  *a1 = &unk_2511AB9F8;
}

BOOL static StateOfMindVisualization.ValenceImageProvider.ImageScale.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StateOfMindVisualization.ValenceImageProvider.ImageScale.hash(into:)()
{
  return sub_2418AA578();
}

uint64_t sub_24180EF40()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if ((*v0 & 1) != 0)
  {
    v1 = MEMORY[0x24BEE4AF8];
    v27 = MEMORY[0x24BEE4AF8];
    v2 = 7;
    v3 = (uint64_t *)&unk_2511AB990;
    do
    {
      v23 = v2;
      v4 = *(v3 - 1);
      v5 = *v3;
      swift_bridgeObjectRetain();
      sub_24183D5AC(0, 3, 0);
      v6 = v1;
      swift_bridgeObjectRetain();
      sub_2418AA4AC();
      sub_2418A9E40();
      swift_bridgeObjectRelease();
      v26 = v1;
      v8 = *(_QWORD *)(v1 + 16);
      v7 = *(_QWORD *)(v26 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_24183D5AC(v7 > 1, v8 + 1, 1);
        v6 = v26;
      }
      *(_QWORD *)(v6 + 16) = v8 + 1;
      v9 = v6 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v5;
      swift_bridgeObjectRetain();
      sub_2418AA4AC();
      sub_2418A9E40();
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      if (v11 >= v10 >> 1)
        sub_24183D5AC(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v6 + 16) = v11 + 1;
      v12 = v6 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v4;
      *(_QWORD *)(v12 + 40) = v5;
      swift_bridgeObjectRetain();
      sub_2418AA4AC();
      sub_2418A9E40();
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(v6 + 16);
      v13 = *(_QWORD *)(v6 + 24);
      if (v14 >= v13 >> 1)
        sub_24183D5AC(v13 > 1, v14 + 1, 1);
      v3 += 2;
      *(_QWORD *)(v6 + 16) = v14 + 1;
      v15 = v6 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v4;
      *(_QWORD *)(v15 + 40) = v5;
      swift_bridgeObjectRelease();
      sub_2417739BC(v6);
      v2 = v23 - 1;
      v1 = MEMORY[0x24BEE4AF8];
    }
    while (v23 != 1);
    return v27;
  }
  else
  {
    v16 = 7;
    v28 = MEMORY[0x24BEE4AF8];
    sub_24183D5AC(0, 7, 0);
    v17 = (uint64_t *)&unk_2511AB990;
    v21 = v28;
    do
    {
      v24 = *(v17 - 1);
      v25 = *v17;
      swift_bridgeObjectRetain_n();
      sub_2418A9E40();
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(v28 + 16);
      v18 = *(_QWORD *)(v28 + 24);
      if (v19 >= v18 >> 1)
        sub_24183D5AC(v18 > 1, v19 + 1, 1);
      v17 += 2;
      *(_QWORD *)(v28 + 16) = v19 + 1;
      v20 = v28 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v24;
      *(_QWORD *)(v20 + 40) = v25;
      --v16;
    }
    while (v16);
  }
  return v21;
}

BOOL static StateOfMindVisualization.ValenceImageProvider.ImageGranularity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StateOfMindVisualization.ValenceImageProvider.ImageGranularity.hash(into:)()
{
  return sub_2418AA578();
}

uint64_t StateOfMindVisualization.ValenceImageProvider.ImageGranularity.hashValue.getter()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

void StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)(unsigned __int8 *a1, double a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = sub_24180F814(21, a2);
  sub_2418AA1B8();
  v4 = sub_24180EF40();
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x24180F3E4);
}

void StateOfMindVisualization.ValenceImageProvider.uiImage.getter()
{
  uint64_t ObjCClassFromMetadata;
  void *v1;
  id v2;
  void *v3;
  id v4;

  type metadata accessor for MentalHealthUIRepresentative();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v3, v2);

  if (!v4)
    __break(1u);
}

uint64_t StateOfMindVisualization.ValenceImage.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  _QWORD v19[5];
  __int16 v20;

  v0 = sub_2418A966C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MentalHealthUIRepresentative();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_2418A969C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BDF3FD0], v0);
  v8 = sub_2418A9690();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v19[3] = v8;
  v19[4] = 0x3FF0000000000000;
  v20 = 0;
  v9 = (id)HKUILocalizedStringForValenceClassification();
  v10 = sub_2418A9DE0();
  v12 = v11;

  v19[1] = v10;
  v19[2] = v12;
  sub_241721040();
  v13 = sub_2418A92D0();
  v15 = v14;
  v17 = v16 & 1;
  sub_24180F91C();
  sub_2417284A4();
  sub_2418A93F0();
  sub_2417289EC(v13, v15, v17);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_24180F6B0()
{
  off_257151E98 = &unk_2511AB9F8;
}

uint64_t sub_24180F6C4()
{
  uint64_t result;

  if (qword_25714B968 != -1)
    result = swift_once();
  qword_257151EA0 = *((_QWORD *)off_257151E98 + 2) - 1;
  return result;
}

double sub_24180F714()
{
  double result;

  if (qword_25714B970 != -1)
    swift_once();
  result = 1.0 / (double)qword_257151EA0;
  *(double *)&qword_257151EA8 = result;
  return result;
}

uint64_t sub_24180F768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  char v5;
  unint64_t v6;
  char v7;
  BOOL v8;
  char v9;
  BOOL v10;
  _BOOL4 v11;

  result = 0;
  v5 = 0;
  v6 = 0;
  v7 = 0;
  do
  {
    v11 = a1 <= a2;
    if (a3 > 0)
      v11 = a1 >= a2;
    if (v11)
    {
      if ((a1 != a2) | v5 & 1)
        return result;
      if ((v7 & 1) != 0)
      {
        v5 = 1;
        a1 = a2;
        v7 = 1;
      }
      else
      {
        if (v6 == 0x8000000000000000)
          return result;
        v7 = 0;
        v5 = 1;
        a1 = a2;
      }
    }
    else
    {
      v8 = __OFADD__(a1, a3);
      a1 += a3;
      v9 = v8;
      v10 = (v9 & 1) == 0;
      if ((v9 & 1) != 0)
      {
        a1 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
        v6 = 0x8000000000000000;
      }
      else
      {
        v6 = 0;
      }
      v7 = v10;
    }
    v8 = __OFADD__(result++, 1);
  }
  while (!v8);
  __break(1u);
  return result;
}

uint64_t sub_24180F814(uint64_t result, double a2)
{
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;

  v2 = 1.0;
  v3 = (a2 + 1.0) * 0.5;
  if (v3 >= 1.0)
  {
    if (result <= 1)
      return 0;
  }
  else
  {
    if (v3 < 0.0)
      v2 = 0.0;
    else
      v2 = v3;
    if (result < 2)
      return 0;
  }
  if (result + 0x4000000000000000 >= 0)
  {
    v5 = sub_24180E758(1, 2 * result - 1, 2, result);
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v7 = 0;
      v4 = -1;
      v8 = INFINITY;
      do
      {
        v9 = vabdd_f64(*(double *)(v5 + 8 * v7 + 32), v2);
        if (v9 < v8)
        {
          v4 = v7;
          v8 = v9;
        }
        ++v7;
      }
      while (v6 != v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return -1;
    }
    return v4;
  }
  __break(1u);
  return result;
}

void sub_24180F91C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C1E8)
  {
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C1E8);
  }
}

unint64_t sub_24180F97C()
{
  unint64_t result;

  result = qword_257151EB0;
  if (!qword_257151EB0)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindVisualization.Colors, &type metadata for StateOfMindVisualization.Colors);
    atomic_store(result, (unint64_t *)&qword_257151EB0);
  }
  return result;
}

uint64_t sub_24180F9C0()
{
  return sub_24172159C(&qword_257151EB8, (uint64_t (*)(uint64_t))sub_24180F9EC, MEMORY[0x24BEE12E0]);
}

void sub_24180F9EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151EC0)
  {
    v0 = sub_2418A9F0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151EC0);
  }
}

unint64_t sub_24180FA44()
{
  unint64_t result;

  result = qword_257151EC8;
  if (!qword_257151EC8)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindVisualization.ValenceImageProvider.ImageScale, &type metadata for StateOfMindVisualization.ValenceImageProvider.ImageScale);
    atomic_store(result, (unint64_t *)&qword_257151EC8);
  }
  return result;
}

unint64_t sub_24180FA8C()
{
  unint64_t result;

  result = qword_257151ED0;
  if (!qword_257151ED0)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindVisualization.ValenceImageProvider.ImageGranularity, &type metadata for StateOfMindVisualization.ValenceImageProvider.ImageGranularity);
    atomic_store(result, (unint64_t *)&qword_257151ED0);
  }
  return result;
}

uint64_t sub_24180FAD0()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for StateOfMindVisualization()
{
  return &type metadata for StateOfMindVisualization;
}

uint64_t getEnumTagSinglePayload for StateOfMindVisualization.Colors(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindVisualization.Colors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_24180FBCC + 4 * byte_2418D7F91[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_24180FC00 + 4 * byte_2418D7F8C[v4]))();
}

uint64_t sub_24180FC00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24180FC08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24180FC10);
  return result;
}

uint64_t sub_24180FC1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24180FC24);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_24180FC28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24180FC30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.Colors()
{
  return &type metadata for StateOfMindVisualization.Colors;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.ValenceImageProvider()
{
  return &type metadata for StateOfMindVisualization.ValenceImageProvider;
}

uint64_t getEnumTagSinglePayload for Symbol(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindVisualization.ValenceImageProvider.ImageScale(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_24180FD4C + 4 * byte_2418D7F9B[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_24180FD80 + 4 * byte_2418D7F96[v4]))();
}

uint64_t sub_24180FD80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24180FD88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24180FD90);
  return result;
}

uint64_t sub_24180FD9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24180FDA4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_24180FDA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24180FDB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.ValenceImageProvider.ImageScale()
{
  return &type metadata for StateOfMindVisualization.ValenceImageProvider.ImageScale;
}

uint64_t storeEnumTagSinglePayload for StateOfMindVisualization.ValenceImageProvider.ImageGranularity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24180FE18 + 4 * byte_2418D7FA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24180FE4C + 4 * byte_2418D7FA0[v4]))();
}

uint64_t sub_24180FE4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24180FE54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24180FE5CLL);
  return result;
}

uint64_t sub_24180FE68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24180FE70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24180FE74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24180FE7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.ValenceImageProvider.ImageGranularity()
{
  return &type metadata for StateOfMindVisualization.ValenceImageProvider.ImageGranularity;
}

_QWORD *_s14MentalHealthUI24StateOfMindVisualizationV20ValenceImageProviderVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s14MentalHealthUI24StateOfMindVisualizationV20ValenceImageProviderVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *_s14MentalHealthUI24StateOfMindVisualizationV20ValenceImageProviderVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.ValenceImage()
{
  return &type metadata for StateOfMindVisualization.ValenceImage;
}

unint64_t sub_24180FF70()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151ED8;
  if (!qword_257151ED8)
  {
    sub_24180FFF0();
    v2 = v1;
    v3[0] = sub_2417284A4();
    v3[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151ED8);
  }
  return result;
}

void sub_24180FFF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151EE0)
  {
    sub_24180F91C();
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151EE0);
  }
}

CGColorRef sub_24181005C(CGColor *a1, CGColor *a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  CGColorRef result;
  unint64_t v13;
  CGColorRef v14;
  unint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  double v21;
  double v22;
  CGFloat v23;
  CGFloat v24;
  double v25;
  double v26;

  if (a3 < 0.0 || a3 > 1.0)
    goto LABEL_21;
  if (CGColorGetNumberOfComponents(a1) != 4)
    goto LABEL_21;
  if (CGColorGetNumberOfComponents(a2) != 4)
    goto LABEL_21;
  if (a4 < 0.0)
    goto LABEL_21;
  if (a4 > 1.0)
    goto LABEL_21;
  if (a5 < 0.0)
    goto LABEL_21;
  if (a5 > 1.0)
    goto LABEL_21;
  v10 = sub_2418A9FE4();
  if (!v10)
    goto LABEL_21;
  v11 = v10;
  result = (CGColorRef)sub_2418A9FE4();
  if (!result)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    v24 = 0.0;
    v25 = 0.0;
    v22 = 0.0;
    v23 = 0.0;
    return CGColorCreateGenericRGB(v24, v25, v22, v23);
  }
  v13 = *(_QWORD *)(v11 + 16);
  if (!v13)
  {
    __break(1u);
    goto LABEL_24;
  }
  v14 = result;
  v15 = *((_QWORD *)result + 2);
  if (!v15)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v13 < 2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v15 < 2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v13 < 3)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v16 = *(double *)(v11 + 32);
  v17 = *(double *)(v11 + 40);
  v19 = *((double *)result + 4);
  v18 = *((double *)result + 5);
  v26 = *(double *)(v11 + 48);
  result = (CGColorRef)swift_bridgeObjectRelease();
  if (*((_QWORD *)v14 + 2) >= 3uLL)
  {
    v20 = (1.0 - a3) * v16 + v19 * a3;
    v21 = *((double *)v14 + 6);
    swift_bridgeObjectRelease();
    v22 = (1.0 - a3) * v26 + v21 * a3;
    v23 = 1.0;
    v24 = v20;
    v25 = (1.0 - a3) * v17 + v18 * a3;
    return CGColorCreateGenericRGB(v24, v25, v22, v23);
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_241810204(double a1)
{
  double v1;
  void *v3;
  unint64_t v4;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  CGColor *v9;
  CGColor *v10;

  if (qword_25714B970 != -1)
LABEL_28:
    swift_once();
  v3 = (void *)qword_257151EA0;
  if (qword_257151EA0 < 0)
  {
    __break(1u);
  }
  else
  {
    if (qword_257151EA0)
    {
      a1 = a1 + 1.0;
      v1 = 0.5;
      if (qword_25714B978 == -1)
      {
LABEL_5:
        v4 = 0;
        a1 = a1 * v1;
        while (1)
        {
          if (v3 == (void *)v4)
          {
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          v1 = *(double *)&qword_257151EA8 * (double)(uint64_t)v4;
          if (v1 > *(double *)&qword_257151EA8 + v1)
            goto LABEL_27;
          if (v1 <= a1 && a1 < *(double *)&qword_257151EA8 + v1)
            break;
          if (v3 == (void *)++v4)
            goto LABEL_13;
        }
        v7 = qword_257151EA0;
        if (qword_25714B968 != -1)
          swift_once();
        if (v4 >= *((_QWORD *)off_257151E98 + 2))
        {
          __break(1u);
        }
        else
        {
          swift_getAtKeyPath();
          if (v4 + 1 < *((_QWORD *)off_257151E98 + 2))
          {
            swift_getAtKeyPath();
            v8 = *((_QWORD *)off_257151E98 + 2);
            if (v4 < v8)
            {
              if (v4 + 1 < v8)
              {
                sub_24181005C(v10, v9, (a1 - v1) * (double)v7, dbl_2418D8280[*((char *)off_257151E98 + v4 + 32)], dbl_2418D8280[*((char *)off_257151E98 + v4 + 33)]);

                return;
              }
              goto LABEL_39;
            }
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
            return;
          }
        }
        __break(1u);
        goto LABEL_38;
      }
LABEL_35:
      swift_once();
      goto LABEL_5;
    }
LABEL_13:
    if (qword_25714B968 == -1)
    {
      v6 = qword_257151EA0;
      if ((qword_257151EA0 & 0x8000000000000000) == 0)
        goto LABEL_15;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_once();
  v6 = qword_257151EA0;
  if (qword_257151EA0 < 0)
    goto LABEL_31;
LABEL_15:
  v3 = &unk_257151000;
  if (v6 >= *((_QWORD *)off_257151E98 + 2))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  LOBYTE(v9) = *((_BYTE *)off_257151E98 + v6 + 32);
  swift_getAtKeyPath();
  if (qword_257151EA0 < 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((unint64_t)qword_257151EA0 >= *((_QWORD *)off_257151E98 + 2))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
}

CGColorRef sub_2418104B8(CGColor *a1, CGColor *a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  CGColorRef result;
  unint64_t v8;
  CGColorRef v9;
  unint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;

  if (CGColorGetNumberOfComponents(a1) != 4)
    goto LABEL_24;
  if (CGColorGetNumberOfComponents(a2) != 4)
    goto LABEL_24;
  if (a3 < 0.0)
    goto LABEL_24;
  if (a3 > 1.0)
    goto LABEL_24;
  v5 = sub_2418A9FE4();
  if (!v5)
    goto LABEL_24;
  v6 = v5;
  result = (CGColorRef)sub_2418A9FE4();
  if (!result)
  {
    swift_bridgeObjectRelease();
LABEL_24:
    v20 = 0.0;
    v21 = 0.0;
    v18 = 0.0;
    v19 = 0.0;
    return CGColorCreateGenericRGB(v20, v21, v18, v19);
  }
  v8 = *(_QWORD *)(v6 + 16);
  if (!v8)
  {
    __break(1u);
    goto LABEL_27;
  }
  v9 = result;
  v10 = *((_QWORD *)result + 2);
  if (!v10)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v11 = (1.0 - *((double *)result + 4)) * a3;
  if (1.0 - (1.0 - *(double *)(v6 + 32) + v11) < 0.0)
    v12 = 0.0;
  else
    v12 = 1.0 - (1.0 - *(double *)(v6 + 32) + v11);
  if (v8 < 2)
    goto LABEL_28;
  if (v10 < 2)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v13 = (1.0 - *((double *)result + 5)) * a3;
  if (1.0 - (1.0 - *(double *)(v6 + 40) + v13) < 0.0)
    v14 = 0.0;
  else
    v14 = 1.0 - (1.0 - *(double *)(v6 + 40) + v13);
  if (v8 < 3)
    goto LABEL_30;
  v15 = *(double *)(v6 + 48);
  result = (CGColorRef)swift_bridgeObjectRelease();
  if (*((_QWORD *)v9 + 2) >= 3uLL)
  {
    v17 = *((double *)v9 + 6);
    swift_bridgeObjectRelease();
    v16 = 1.0 - v15;
    if (1.0 - (v16 + (1.0 - v17) * a3) < 0.0)
      v18 = 0.0;
    else
      v18 = 1.0 - (v16 + (1.0 - v17) * a3);
    v19 = 1.0;
    v20 = v12;
    v21 = v14;
    return CGColorCreateGenericRGB(v20, v21, v18, v19);
  }
LABEL_31:
  __break(1u);
  return result;
}

CGColorRef sub_241810650(CGColor *a1, CGColor *a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  CGColorRef result;
  unint64_t v8;
  CGColorRef v9;
  unint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;

  if (CGColorGetNumberOfComponents(a1) != 4)
    goto LABEL_15;
  if (CGColorGetNumberOfComponents(a2) != 4)
    goto LABEL_15;
  if (a3 < 0.0)
    goto LABEL_15;
  if (a3 > 1.0)
    goto LABEL_15;
  v5 = sub_2418A9FE4();
  if (!v5)
    goto LABEL_15;
  v6 = v5;
  result = (CGColorRef)sub_2418A9FE4();
  if (!result)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    v20 = 0.0;
    v21 = 0.0;
    v18 = 0.0;
    v19 = 0.0;
    return CGColorCreateGenericRGB(v20, v21, v18, v19);
  }
  v8 = *(_QWORD *)(v6 + 16);
  if (!v8)
  {
    __break(1u);
    goto LABEL_18;
  }
  v9 = result;
  v10 = *((_QWORD *)result + 2);
  if (!v10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v8 < 2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v10 < 2)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v8 < 3)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v11 = *(double *)(v6 + 32);
  v12 = *(double *)(v6 + 40);
  v14 = *((double *)result + 4);
  v13 = *((double *)result + 5);
  v15 = *(double *)(v6 + 48);
  result = (CGColorRef)swift_bridgeObjectRelease();
  if (*((_QWORD *)v9 + 2) >= 3uLL)
  {
    v16 = (1.0 - a3) * v12 + v13 * a3;
    v17 = *((double *)v9 + 6);
    swift_bridgeObjectRelease();
    v18 = (1.0 - a3) * v15 + v17 * a3;
    v19 = 1.0;
    v20 = (1.0 - a3) * v11 + v14 * a3;
    v21 = v16;
    return CGColorCreateGenericRGB(v20, v21, v18, v19);
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2418107AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t result;

  *a3 = swift_getKeyPath();
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v7 = (int *)_s12EntryDayViewVMa();
  v8 = (uint64_t *)((char *)a3 + v7[5]);
  *v8 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
  swift_storeEnumTagMultiPayload();
  v9 = (uint64_t)a3 + v7[6];
  v10 = type metadata accessor for StateOfMindTimeline.DaySummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_2418109AC(a1, v9);
  swift_bridgeObjectRetain();
  v11 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_241802714(0, a2[2] + 1, 1, a2);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_241802714((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[2 * v13];
  v14[4] = 0x796C696144;
  v14[5] = 0xE500000000000000;
  swift_bridgeObjectRelease();
  result = sub_24173FC60(a1, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  *(uint64_t *)((char *)a3 + v7[7]) = (uint64_t)v11;
  return result;
}

uint64_t _s12EntryDayViewVMa()
{
  uint64_t result;

  result = qword_257151F48;
  if (!qword_257151F48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2418109AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_241810A08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v3 = _s6StylesV5DailyVMa(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418169C8();
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241816B64();
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v14 = sub_2418A8C58();
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  sub_241816BC0();
  sub_241810C2C(v1, (uint64_t)&v14[*(int *)(v19 + 44)]);
  _s12EntryDayViewVMa();
  sub_241860D60((uint64_t)v10);
  sub_2417289A8((uint64_t)&v10[*(int *)(v7 + 56)], (uint64_t)v6, _s6StylesV5DailyVMa);
  sub_24172588C((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  if (v6[*(int *)(v3 + 24)])
    v20 = 321.0;
  else
    v20 = 0.0;
  v21 = v6[*(int *)(v3 + 24)] ^ 1;
  sub_24172588C((uint64_t)v6, _s6StylesV5DailyVMa);
  v22 = sub_2418A9960();
  sub_24185EDE8(0.0, 1, 0.0, 1, INFINITY, 0, v20, v21, (uint64_t)v18, 0.0, 1, INFINITY, 0, v22, v23);
  sub_24172588C((uint64_t)v14, (uint64_t (*)(_QWORD))sub_2418169C8);
  return sub_241731B4C((uint64_t)v18, a1, (uint64_t (*)(_QWORD))sub_241816B64);
}

uint64_t sub_241810C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unsigned int *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)();
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t KeyPath;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, uint64_t);
  int *v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t (*v139)(uint64_t);
  uint64_t (*v140)(uint64_t, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t (*v143)(uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  unsigned __int8 v196;
  char *v197;
  uint64_t v198;

  v192 = a1;
  v188 = a2;
  v187 = _s17EntryDayEmptyViewVMa();
  v3 = MEMORY[0x24BDAC7A8](v187, v2);
  v161 = (uint64_t *)((char *)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3, v5);
  v162 = (uint64_t)&v152 - v6;
  sub_241731FB0(0, &qword_257151FC0, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, MEMORY[0x24BDEF380]);
  v182 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v186 = (uint64_t)&v152 - v9;
  v185 = _s16EntryDayDataViewVMa();
  v11 = MEMORY[0x24BDAC7A8](v185, v10);
  v154 = (uint64_t *)((char *)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11, v13);
  v156 = (uint64_t)&v152 - v14;
  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v16, v17);
  v159 = (uint64_t)&v152 - v18;
  v158 = _s5EntryVMa();
  v157 = *(_QWORD *)(v158 - 8);
  v20 = MEMORY[0x24BDAC7A8](v158, v19);
  v153 = (uint64_t)&v152 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  v155 = (uint64_t)&v152 - v23;
  sub_24172570C(0, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, v15);
  MEMORY[0x24BDAC7A8](v24, v25);
  v180 = (uint64_t)&v152 - v26;
  v179 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v178 = *(_QWORD *)(v179 - 8);
  v28 = MEMORY[0x24BDAC7A8](v179, v27);
  v152 = (uint64_t)&v152 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v30);
  v160 = (uint64_t)&v152 - v31;
  sub_241731FB0(0, &qword_257151FA0, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v184 = (uint64_t)&v152 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34, v36);
  v183 = (char *)&v152 - v37;
  v38 = sub_2418A88D4();
  MEMORY[0x24BDAC7A8](v38, v39);
  v175 = (char *)&v152 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_2418A99B4();
  v173 = *(_QWORD *)(v174 - 8);
  MEMORY[0x24BDAC7A8](v174, v41);
  v172 = (char *)&v152 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_2418A84E4();
  v168 = *(_QWORD *)(v171 - 8);
  v44 = MEMORY[0x24BDAC7A8](v171, v43);
  v167 = (char *)&v152 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44, v46);
  v190 = (char *)&v152 - v47;
  v177 = sub_2418A91E0();
  v48 = *(_QWORD *)(v177 - 8);
  MEMORY[0x24BDAC7A8](v177, v49);
  v51 = (char *)&v152 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v52, v53);
  v55 = (char *)&v152 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730780();
  v189 = v56;
  MEMORY[0x24BDAC7A8](v56, v57);
  v169 = (char *)&v152 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241731FB0(0, &qword_25714C410, v59, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v62 = MEMORY[0x24BDAC7A8](v60, v61);
  v181 = (uint64_t)&v152 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = MEMORY[0x24BDAC7A8](v62, v64);
  v176 = (char *)&v152 - v66;
  MEMORY[0x24BDAC7A8](v65, v67);
  v191 = (uint64_t)&v152 - v68;
  if (qword_25714B958 != -1)
    swift_once();
  v69 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v70 = sub_2418A7EFC();
  v72 = v71;
  swift_bridgeObjectRelease();

  v193 = (char *)v70;
  v194 = v72;
  sub_241721040();
  v73 = sub_2418A92D0();
  v75 = v74;
  v170 = v76;
  v78 = v77 & 1;
  v166 = _s12EntryDayViewVMa();
  v79 = v192 + *(int *)(v166 + 20);
  sub_241860D60((uint64_t)v55);
  sub_24172588C((uint64_t)v55, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9210();
  v80 = v177;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v51, *MEMORY[0x24BDF17C8], v177);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v80);
  v81 = sub_2418A9294();
  v163 = v82;
  LOBYTE(v80) = v83 & 1;
  sub_2417289EC(v73, v75, v78);
  swift_release();
  swift_bridgeObjectRelease();
  v170 = v79;
  sub_241860D60((uint64_t)v55);
  v177 = (uint64_t)v55;
  sub_24172588C((uint64_t)v55, type metadata accessor for StateOfMindTimeline.Styles);
  v84 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v193 = (char *)MEMORY[0x24269BDB4](v84);
  v85 = v163;
  v165 = sub_2418A9270();
  v164 = v86;
  v88 = v87;
  v90 = v89 & 1;
  sub_2417289EC(v81, v85, v80);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241861034((uint64_t)v190);
  v91 = v168;
  v92 = v167;
  v93 = v171;
  (*(void (**)(char *, _QWORD, uint64_t))(v168 + 104))(v167, *MEMORY[0x24BDEB400], v171);
  LOBYTE(v85) = sub_2418A84D8();
  v168 = *(_QWORD *)(v91 + 8);
  ((void (*)(char *, uint64_t))v168)(v92, v93);
  v94 = (unsigned int *)MEMORY[0x24BDF5080];
  v95 = v173;
  if ((v85 & 1) == 0)
    v94 = (unsigned int *)MEMORY[0x24BDF5098];
  v96 = v172;
  v97 = v174;
  (*(void (**)(char *, _QWORD, uint64_t))(v173 + 104))(v172, *v94, v174);
  v98 = (uint64_t)v175;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v175, v96, v97);
  v99 = (uint64_t)v169;
  sub_2417289A8(v98, (uint64_t)&v169[*(int *)(v189 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  v100 = v165;
  v101 = v164;
  *(_QWORD *)v99 = v165;
  *(_QWORD *)(v99 + 8) = v101;
  v102 = v90;
  *(_BYTE *)(v99 + 16) = v90;
  *(_QWORD *)(v99 + 24) = v88;
  v103 = v101;
  v104 = v102;
  sub_241728A50(v100, v101, v102);
  swift_bridgeObjectRetain();
  sub_24172588C(v98, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v97);
  ((void (*)(char *, uint64_t))v168)(v190, v93);
  v105 = v192;
  sub_2417289EC(v100, v103, v104);
  swift_bridgeObjectRelease();
  v106 = v166;
  v107 = *(int *)(v166 + 28);
  v108 = *(_QWORD **)(v105 + v107);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v108 = sub_241802714(0, v108[2] + 1, 1, v108);
  v110 = v108[2];
  v109 = v108[3];
  v111 = v177;
  if (v110 >= v109 >> 1)
    v108 = sub_241802714((_QWORD *)(v109 > 1), v110 + 1, 1, v108);
  v108[2] = v110 + 1;
  v112 = &v108[2 * v110];
  v112[4] = 0x6E6F6974706143;
  v112[5] = 0xE700000000000000;
  v193 = (char *)&unk_2511AB450;
  v113 = swift_bridgeObjectRetain();
  sub_2417739BC(v113);
  sub_241773FD4();
  sub_24172159C((unint64_t *)&qword_2543915D8, (uint64_t (*)(uint64_t))sub_241773FD4, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241731CDC();
  v114 = (uint64_t)v176;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24172588C(v99, (uint64_t (*)(_QWORD))sub_241730780);
  sub_241808B6C(v114, v191);
  sub_241860D60(v111);
  sub_24172588C(v111, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9960();
  sub_2418A861C();
  v190 = v193;
  LODWORD(v189) = v194;
  v177 = v195;
  LODWORD(v176) = v196;
  v175 = v197;
  v174 = v198;
  v115 = v180;
  sub_241816C3C(v105 + *(int *)(v106 + 24), v180, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary);
  v116 = v179;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v115, 1, v179) == 1)
  {
    sub_24173FC60(v115, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v117 = (uint64_t)v183;
  }
  else
  {
    v118 = v160;
    sub_241731B4C(v115, v160, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
    v119 = v118 + *(int *)(v116 + 28);
    v120 = v159;
    sub_241816C3C(v119, v159, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa);
    v121 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v157 + 48))(v120, 1, v158);
    v117 = (uint64_t)v183;
    if (v121 != 1)
    {
      v128 = v120;
      v129 = v155;
      sub_241731B4C(v128, v155, (uint64_t (*)(_QWORD))_s5EntryVMa);
      v130 = v152;
      sub_2417289A8(v118, v152, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
      v131 = v153;
      sub_2417289A8(v129, v153, (uint64_t (*)(_QWORD))_s5EntryVMa);
      v132 = *(_QWORD *)(v105 + v107);
      KeyPath = swift_getKeyPath();
      v134 = (uint64_t)v154;
      *v154 = KeyPath;
      v135 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
      sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      swift_storeEnumTagMultiPayload();
      v136 = (int *)v185;
      v137 = (uint64_t *)(v134 + *(int *)(v185 + 20));
      *v137 = swift_getKeyPath();
      sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v135);
      swift_storeEnumTagMultiPayload();
      sub_241731B4C(v130, v134 + v136[6], (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
      sub_241731B4C(v131, v134 + v136[7], (uint64_t (*)(_QWORD))_s5EntryVMa);
      *(_QWORD *)(v134 + v136[8]) = v132;
      v138 = v156;
      sub_241731B4C(v134, v156, (uint64_t (*)(_QWORD))_s16EntryDayDataViewVMa);
      sub_2417289A8(v138, v186, (uint64_t (*)(_QWORD))_s16EntryDayDataViewVMa);
      swift_storeEnumTagMultiPayload();
      sub_24172159C(&qword_257151FC8, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t)&unk_2418D2224);
      sub_24172159C(&qword_257151FD0, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, (uint64_t)&unk_2418DAA54);
      swift_bridgeObjectRetain();
      sub_2418A8D24();
      sub_24172588C(v138, (uint64_t (*)(_QWORD))_s16EntryDayDataViewVMa);
      sub_24172588C(v129, (uint64_t (*)(_QWORD))_s5EntryVMa);
      v126 = v160;
      v127 = type metadata accessor for StateOfMindTimeline.DaySummary;
      goto LABEL_15;
    }
    sub_24172588C(v118, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
    sub_24173FC60(v120, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  }
  v122 = *(_QWORD *)(v105 + v107);
  v123 = swift_getKeyPath();
  v124 = (uint64_t)v161;
  *v161 = v123;
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v124 + *(int *)(v187 + 20)) = v122;
  v125 = v162;
  sub_241731B4C(v124, v162, (uint64_t (*)(_QWORD))_s17EntryDayEmptyViewVMa);
  sub_2417289A8(v125, v186, (uint64_t (*)(_QWORD))_s17EntryDayEmptyViewVMa);
  swift_storeEnumTagMultiPayload();
  sub_24172159C(&qword_257151FC8, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t)&unk_2418D2224);
  sub_24172159C(&qword_257151FD0, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, (uint64_t)&unk_2418DAA54);
  swift_bridgeObjectRetain();
  sub_2418A8D24();
  v126 = v125;
  v127 = _s17EntryDayEmptyViewVMa;
LABEL_15:
  sub_24172588C(v126, (uint64_t (*)(_QWORD))v127);
  v139 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v140 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
  v141 = v191;
  v142 = v181;
  sub_2417F460C(v191, v181, &qword_25714C410, (uint64_t (*)(uint64_t))sub_241730780, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v143 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8];
  v144 = v184;
  sub_2417F460C(v117, v184, &qword_257151FA0, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  v145 = v117;
  v146 = v188;
  sub_2417F460C(v142, v188, &qword_25714C410, (uint64_t (*)(uint64_t))sub_241730780, v139, v140);
  sub_241816A40();
  v148 = v146 + *(int *)(v147 + 48);
  *(_QWORD *)v148 = 0;
  *(_BYTE *)(v148 + 8) = 1;
  *(_QWORD *)(v148 + 16) = v190;
  *(_BYTE *)(v148 + 24) = v189;
  *(_QWORD *)(v148 + 32) = v177;
  *(_BYTE *)(v148 + 40) = (_BYTE)v176;
  v149 = v174;
  *(_QWORD *)(v148 + 48) = v175;
  *(_QWORD *)(v148 + 56) = v149;
  sub_2417F460C(v144, v146 + *(int *)(v147 + 64), &qword_257151FA0, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, v143);
  sub_241816C94(v145, &qword_257151FA0, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, v143);
  v150 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  sub_241816C94(v141, &qword_25714C410, (uint64_t (*)(uint64_t))sub_241730780, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], v140);
  sub_241816C94(v144, &qword_257151FA0, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, v143);
  return sub_241816C94(v142, &qword_25714C410, (uint64_t (*)(uint64_t))sub_241730780, v150, v140);
}

_QWORD *sub_241811D64(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  int *v98;
  uint64_t v99;
  unsigned int (*v100)(char *, uint64_t, int *);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, _QWORD, uint64_t, int *);
  void (*v119)(_QWORD *, _QWORD, uint64_t, int *);
  void (*v121)(char *, char *);
  uint64_t v122;
  int *v123;
  int *v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  unsigned int (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  void (*v130)(char *, char *, uint64_t);
  _QWORD *v131;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = v6[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)v3 + v9);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      v128 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      v125 = v3;
      v127 = v13;
      v123 = v6;
      if (v128((char *)v11, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v15 = v128;
      v16 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v17 = v16[5];
      v18 = (char *)v10 + v17;
      v19 = (char *)v11 + v17;
      v20 = sub_2418A87B4();
      v130 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v130(v18, v19, v20);
      *((_BYTE *)v10 + v16[6]) = *((_BYTE *)v11 + v16[6]);
      v21 = v16[7];
      v22 = (char *)v10 + v21;
      v23 = (char *)v11 + v21;
      v24 = sub_2418A84E4();
      v121 = *(void (**)(char *, char *))(*(_QWORD *)(v24 - 8) + 16);
      v122 = v24;
      v121(v22, v23);
      v25 = v16[8];
      v26 = (char *)v10 + v25;
      v27 = (char *)v11 + v25;
      if (v128((char *)v11 + v25, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v26, v27, v12);
        v15 = v128;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v26, 0, 1, v12);
      }
      v29 = _s6StylesV8TimelineVMa(0);
      v130(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v20);
      v30 = v16[9];
      v31 = (char *)v10 + v30;
      v32 = (char *)v11 + v30;
      v33 = a1;
      if (v15((char *)v11 + v30, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v31, v32, v12);
        v15 = v128;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v31, 0, 1, v12);
      }
      v35 = _s6StylesV6NoDataVMa(0);
      v130(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v20);
      v31[*(int *)(v35 + 24)] = v32[*(int *)(v35 + 24)];
      v36 = v16[10];
      v37 = (char *)v10 + v36;
      v38 = (char *)v11 + v36;
      if (v15((char *)v11 + v36, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v37, v38, v12);
        v15 = v128;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v37, 0, 1, v12);
      }
      v40 = _s6StylesV11PlaceholderVMa(0);
      v130(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v20);
      v41 = v16[11];
      v42 = (char *)v10 + v41;
      v43 = (char *)v11 + v41;
      if (v15((char *)v11 + v41, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v42, v43, v12);
        v15 = v128;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v42, 0, 1, v12);
      }
      v45 = _s6StylesV6SymbolVMa(0);
      v130(&v42[*(int *)(v45 + 20)], &v43[*(int *)(v45 + 20)], v20);
      v46 = v16[12];
      v47 = (char *)v10 + v46;
      v48 = (char *)v11 + v46;
      if (v15((char *)v11 + v46, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v47, v48, v12);
        v15 = v128;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v47, 0, 1, v12);
      }
      v50 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v130(&v47[v50[5]], &v48[v50[5]], v20);
      v47[v50[6]] = v48[v50[6]];
      ((void (*)(char *, char *, uint64_t))v121)(&v47[v50[7]], &v48[v50[7]], v122);
      v51 = v16[13];
      v52 = (char *)v10 + v51;
      v53 = (char *)v11 + v51;
      if (v15((char *)v11 + v51, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v52, v53, v12);
        v15 = v128;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v52, 0, 1, v12);
      }
      v55 = _s6StylesV5EmptyVMa(0);
      v130(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v20);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      v56 = v16[14];
      v57 = (char *)v10 + v56;
      v58 = (char *)v11 + v56;
      if (v15((char *)v11 + v56, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v57, v58, v12);
        v15 = v128;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v57, 0, 1, v12);
      }
      v60 = _s6StylesV5DailyVMa(0);
      v130(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v20);
      v57[*(int *)(v60 + 24)] = v58[*(int *)(v60 + 24)];
      v61 = v16[15];
      v62 = (char *)v10 + v61;
      v63 = (char *)v11 + v61;
      if (v15((char *)v11 + v61, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v62, v63, v12);
        v15 = v128;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v62, 0, 1, v12);
      }
      a1 = v33;
      v65 = _s6StylesV9MomentaryVMa(0);
      v130(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v20);
      v66 = v16[16];
      v67 = (char *)v10 + v66;
      v68 = (char *)v11 + v66;
      if (v15((char *)v11 + v66, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v67, v68, v12);
        v15 = v128;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v67, 0, 1, v12);
      }
      v70 = _s6StylesV6HeaderVMa(0);
      v130(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v20);
      v71 = v16[17];
      v72 = (char *)v10 + v71;
      v73 = (char *)v11 + v71;
      if (v15((char *)v11 + v71, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v72, v73, v12);
        v15 = v128;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v72, 0, 1, v12);
      }
      v75 = _s6StylesV11ChartButtonVMa(0);
      v130(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v20);
      v76 = v16[18];
      v77 = (char *)v10 + v76;
      v78 = (char *)v11 + v76;
      if (v15(v78, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v77, v78, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v77, 0, 1, v12);
      }
      v6 = v123;
      v3 = v125;
      v80 = _s6StylesV15LogButtonFooterVMa(0);
      v130(&v77[*(int *)(v80 + 20)], &v78[*(int *)(v80 + 20)], v20);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v81 = v6[6];
    v82 = (_QWORD *)((char *)a1 + v81);
    v83 = (_QWORD *)((char *)v3 + v81);
    v84 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
    v85 = *((_QWORD *)v84 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v85 + 48))(v83, 1, v84))
    {
      sub_24172570C(0, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      v124 = v6;
      v126 = v3;
      v131 = a1;
      *v82 = *v83;
      v87 = v84[5];
      v88 = (char *)v82 + v87;
      v89 = (char *)v83 + v87;
      v90 = sub_2418A9CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
      v91 = v84[6];
      v92 = (_QWORD *)((char *)v82 + v91);
      v93 = (_QWORD *)((char *)v83 + v91);
      v94 = v93[1];
      *v92 = *v93;
      v92[1] = v94;
      v95 = v84[7];
      v96 = (char *)v82 + v95;
      v97 = (char *)v83 + v95;
      v98 = (int *)_s5EntryVMa();
      v99 = *((_QWORD *)v98 - 1);
      v100 = *(unsigned int (**)(char *, uint64_t, int *))(v99 + 48);
      swift_bridgeObjectRetain();
      if (v100(v97, 1, v98))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        v102 = sub_2418A8130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v96, v97, v102);
        v103 = v98[5];
        v104 = &v96[v103];
        v105 = &v97[v103];
        v106 = *((_QWORD *)v105 + 1);
        *(_QWORD *)v104 = *(_QWORD *)v105;
        *((_QWORD *)v104 + 1) = v106;
        v107 = v98[6];
        v108 = &v96[v107];
        v109 = &v97[v107];
        v129 = *((_QWORD *)v109 + 1);
        *(_QWORD *)v108 = *(_QWORD *)v109;
        *((_QWORD *)v108 + 1) = v129;
        v110 = v98[7];
        v111 = &v96[v110];
        v112 = &v97[v110];
        v113 = *((_QWORD *)v112 + 1);
        *(_QWORD *)v111 = *(_QWORD *)v112;
        *((_QWORD *)v111 + 1) = v113;
        v114 = v98[8];
        v115 = &v96[v114];
        v116 = &v97[v114];
        v117 = *((_QWORD *)v116 + 1);
        *(_QWORD *)v115 = *(_QWORD *)v116;
        *((_QWORD *)v115 + 1) = v117;
        *(_QWORD *)&v96[v98[9]] = *(_QWORD *)&v97[v98[9]];
        v118 = *(void (**)(char *, _QWORD, uint64_t, int *))(v99 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v118(v96, 0, 1, v98);
      }
      *(_QWORD *)((char *)v82 + v84[8]) = *(_QWORD *)((char *)v83 + v84[8]);
      *(_QWORD *)((char *)v82 + v84[9]) = *(_QWORD *)((char *)v83 + v84[9]);
      v119 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v85 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v119(v82, 0, 1, v84);
      a1 = v131;
      v6 = v124;
      v3 = v126;
    }
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)v3 + v6[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2418129E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v50 = a2;
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v5 + v9[5];
    v11 = sub_2418A87B4();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v10, v11);
    v13 = v5 + v9[7];
    v14 = sub_2418A84E4();
    v48 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
    v48(v13, v14);
    v15 = v5 + v9[8];
    if (!v8(v15, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
    v16 = _s6StylesV8TimelineVMa(0);
    v12(v15 + *(int *)(v16 + 20), v11);
    v17 = v5 + v9[9];
    if (!v8(v17, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    v18 = _s6StylesV6NoDataVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    v19 = v5 + v9[10];
    if (!v8(v19, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    v20 = _s6StylesV11PlaceholderVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    v21 = v5 + v9[11];
    if (!v8(v21, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    v49 = a1;
    v22 = _s6StylesV6SymbolVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    v23 = v5 + v9[12];
    if (!v8(v23, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    v24 = v7;
    v25 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v23 + *(int *)(v25 + 20), v11);
    v26 = *(int *)(v25 + 28);
    v27 = v24;
    v48(v23 + v26, v14);
    v28 = v5 + v9[13];
    if (!v8(v28, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v28, v6);
    v29 = _s6StylesV5EmptyVMa(0);
    v12(v28 + *(int *)(v29 + 20), v11);
    v30 = v5 + v9[14];
    a1 = v49;
    if (!v8(v30, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v6);
    v31 = _s6StylesV5DailyVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    v32 = v5 + v9[15];
    if (!v8(v32, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v32, v6);
    v33 = _s6StylesV9MomentaryVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    v34 = v5 + v9[16];
    if (!v8(v34, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v34, v6);
    v35 = _s6StylesV6HeaderVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    v36 = v5 + v9[17];
    if (!v8(v36, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v36, v6);
    v37 = _s6StylesV11ChartButtonVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
    v38 = v5 + v9[18];
    if (!v8(v38, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v38, v6);
    v39 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v38 + *(int *)(v39 + 20), v11);
    a2 = v50;
  }
  else
  {
    swift_release();
  }
  v40 = a1 + *(int *)(a2 + 24);
  v41 = type metadata accessor for StateOfMindTimeline.DaySummary();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
  {
    v42 = v40 + *(int *)(v41 + 20);
    v43 = sub_2418A9CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
    swift_bridgeObjectRelease();
    v44 = v40 + *(int *)(v41 + 28);
    v45 = _s5EntryVMa();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 1, v45))
    {
      v46 = sub_2418A8130();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v44, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_241812F94(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int *v96;
  uint64_t v97;
  unsigned int (*v98)(char *, uint64_t, int *);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void (*v116)(char *, _QWORD, uint64_t, int *);
  void (*v117)(_QWORD *, _QWORD, uint64_t, int *);
  void (*v119)(char *, char *);
  uint64_t v120;
  int *v121;
  int *v122;
  _QWORD *v123;
  _QWORD *v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v121 = a3;
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
    v127 = v11;
    v123 = a2;
    if (v12(v9, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v15 = v14[5];
    v16 = (char *)v8 + v15;
    v17 = (char *)v9 + v15;
    v18 = sub_2418A87B4();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v19(v16, v17, v18);
    *((_BYTE *)v8 + v14[6]) = *((_BYTE *)v9 + v14[6]);
    v20 = v14[7];
    v21 = (char *)v8 + v20;
    v22 = (char *)v9 + v20;
    v23 = sub_2418A84E4();
    v119 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
    v120 = v23;
    v119(v21, v22);
    v24 = v14[8];
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    if (v12((_QWORD *)((char *)v9 + v24), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v25, v26, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v25, 0, 1, v10);
    }
    v28 = _s6StylesV8TimelineVMa(0);
    v19(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v18);
    v29 = v14[9];
    v30 = (char *)v8 + v29;
    v31 = (char *)v9 + v29;
    v125 = a1;
    if (v12((_QWORD *)((char *)v9 + v29), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v30, v31, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v30, 0, 1, v10);
    }
    v33 = _s6StylesV6NoDataVMa(0);
    v19(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v18);
    v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
    v34 = v14[10];
    v35 = (char *)v8 + v34;
    v36 = (char *)v9 + v34;
    if (v12((_QWORD *)((char *)v9 + v34), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v35, v36, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v35, 0, 1, v10);
    }
    v38 = _s6StylesV11PlaceholderVMa(0);
    v19(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v18);
    v39 = v14[11];
    v40 = (char *)v8 + v39;
    v41 = (char *)v9 + v39;
    if (v12((_QWORD *)((char *)v9 + v39), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v40, v41, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v40, 0, 1, v10);
    }
    v43 = _s6StylesV6SymbolVMa(0);
    v19(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v18);
    v44 = v14[12];
    v45 = (char *)v8 + v44;
    v46 = (char *)v9 + v44;
    if (v12((_QWORD *)((char *)v9 + v44), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v45, v46, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v45, 0, 1, v10);
    }
    v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v19(&v45[v48[5]], &v46[v48[5]], v18);
    v45[v48[6]] = v46[v48[6]];
    ((void (*)(char *, char *, uint64_t))v119)(&v45[v48[7]], &v46[v48[7]], v120);
    v49 = v14[13];
    v50 = (char *)v8 + v49;
    v51 = (char *)v9 + v49;
    if (v12((_QWORD *)((char *)v9 + v49), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v50, v51, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v50, 0, 1, v10);
    }
    v53 = _s6StylesV5EmptyVMa(0);
    v19(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v18);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    v54 = v14[14];
    v55 = (char *)v8 + v54;
    v56 = (char *)v9 + v54;
    if (v12((_QWORD *)((char *)v9 + v54), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v55, v56, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v55, 0, 1, v10);
    }
    v58 = _s6StylesV5DailyVMa(0);
    v19(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v18);
    v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
    v59 = v14[15];
    v60 = (char *)v8 + v59;
    v61 = (char *)v9 + v59;
    if (v12((_QWORD *)((char *)v9 + v59), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v60, v61, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v60, 0, 1, v10);
    }
    a1 = v125;
    v63 = _s6StylesV9MomentaryVMa(0);
    v19(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v18);
    v64 = v14[16];
    v65 = (char *)v8 + v64;
    v66 = (char *)v9 + v64;
    if (v12((_QWORD *)((char *)v9 + v64), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v65, v66, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v65, 0, 1, v10);
    }
    v68 = _s6StylesV6HeaderVMa(0);
    v19(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v18);
    v69 = v14[17];
    v70 = (char *)v8 + v69;
    v71 = (char *)v9 + v69;
    if (v12((_QWORD *)((char *)v9 + v69), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v70, v71, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v70, 0, 1, v10);
    }
    v73 = _s6StylesV11ChartButtonVMa(0);
    v19(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v18);
    v74 = v14[18];
    v75 = (char *)v8 + v74;
    v76 = (char *)v9 + v74;
    if (v12((_QWORD *)((char *)v9 + v74), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v75, v76, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v75, 0, 1, v10);
    }
    a3 = v121;
    a2 = v123;
    v78 = _s6StylesV15LogButtonFooterVMa(0);
    v19(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v18);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v79 = a3[6];
  v80 = (_QWORD *)((char *)a1 + v79);
  v81 = (_QWORD *)((char *)a2 + v79);
  v82 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v83 = *((_QWORD *)v82 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v83 + 48))(v81, 1, v82))
  {
    sub_24172570C(0, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
  }
  else
  {
    v122 = a3;
    v124 = a2;
    v126 = a1;
    *v80 = *v81;
    v85 = v82[5];
    v86 = (char *)v80 + v85;
    v87 = (char *)v81 + v85;
    v88 = sub_2418A9CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v86, v87, v88);
    v89 = v82[6];
    v90 = (_QWORD *)((char *)v80 + v89);
    v91 = (_QWORD *)((char *)v81 + v89);
    v92 = v91[1];
    *v90 = *v91;
    v90[1] = v92;
    v93 = v82[7];
    v94 = (char *)v80 + v93;
    v95 = (char *)v81 + v93;
    v96 = (int *)_s5EntryVMa();
    v97 = *((_QWORD *)v96 - 1);
    v98 = *(unsigned int (**)(char *, uint64_t, int *))(v97 + 48);
    swift_bridgeObjectRetain();
    if (v98(v95, 1, v96))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    else
    {
      v100 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v94, v95, v100);
      v101 = v96[5];
      v102 = &v94[v101];
      v103 = &v95[v101];
      v104 = *((_QWORD *)v103 + 1);
      *(_QWORD *)v102 = *(_QWORD *)v103;
      *((_QWORD *)v102 + 1) = v104;
      v105 = v96[6];
      v106 = &v94[v105];
      v107 = &v95[v105];
      v128 = *((_QWORD *)v107 + 1);
      *(_QWORD *)v106 = *(_QWORD *)v107;
      *((_QWORD *)v106 + 1) = v128;
      v108 = v96[7];
      v109 = &v94[v108];
      v110 = &v95[v108];
      v111 = *((_QWORD *)v110 + 1);
      *(_QWORD *)v109 = *(_QWORD *)v110;
      *((_QWORD *)v109 + 1) = v111;
      v112 = v96[8];
      v113 = &v94[v112];
      v114 = &v95[v112];
      v115 = *((_QWORD *)v114 + 1);
      *(_QWORD *)v113 = *(_QWORD *)v114;
      *((_QWORD *)v113 + 1) = v115;
      *(_QWORD *)&v94[v96[9]] = *(_QWORD *)&v95[v96[9]];
      v116 = *(void (**)(char *, _QWORD, uint64_t, int *))(v97 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v116(v94, 0, 1, v96);
    }
    *(_QWORD *)((char *)v80 + v82[8]) = *(_QWORD *)((char *)v81 + v82[8]);
    *(_QWORD *)((char *)v80 + v82[9]) = *(_QWORD *)((char *)v81 + v82[9]);
    v117 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v83 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v117(v80, 0, 1, v82);
    a2 = v124;
    a1 = v126;
    a3 = v122;
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_241813BB8(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  int *v85;
  uint64_t v86;
  uint64_t (*v87)(_QWORD *, uint64_t, int *);
  int v88;
  int v89;
  uint64_t (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  int *v102;
  uint64_t v103;
  unsigned int (*v104)(char *, uint64_t, int *);
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  int *v116;
  uint64_t v117;
  uint64_t (*v118)(char *, uint64_t, int *);
  int v119;
  uint64_t (*v120)(uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  void (*v134)(char *, _QWORD, uint64_t, int *);
  void (*v135)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  void (*v150)(char *, _QWORD, uint64_t, int *);
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  void (*v165)(char *, char *);
  uint64_t v166;
  int *v167;
  int *v168;
  int *v169;
  _QWORD *v170;
  _QWORD *v171;
  _QWORD *v172;
  uint64_t v173;
  unsigned int (*v174)(char *, uint64_t, uint64_t);
  void (*v175)(char *, char *, uint64_t);
  _QWORD *v176;

  v4 = a2;
  v5 = (_QWORD *)a1;
  if ((_QWORD *)a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60(a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v4, v8);
    }
    else
    {
      *v5 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (_QWORD *)((char *)v5 + v9);
    v11 = (_QWORD *)((char *)v4 + v9);
    v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)v5 + v9, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      v174 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      v170 = v4;
      v173 = v14;
      v167 = a3;
      if (v174((char *)v11, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 16))(v10, v11, v13);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
      v16 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v17 = v16[5];
      v18 = (char *)v10 + v17;
      v19 = (char *)v11 + v17;
      v20 = sub_2418A87B4();
      v175 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v175(v18, v19, v20);
      *((_BYTE *)v10 + v16[6]) = *((_BYTE *)v11 + v16[6]);
      v21 = v16[7];
      v22 = (char *)v10 + v21;
      v23 = (char *)v11 + v21;
      v24 = sub_2418A84E4();
      v165 = *(void (**)(char *, char *))(*(_QWORD *)(v24 - 8) + 16);
      v166 = v24;
      v165(v22, v23);
      v25 = v16[8];
      v26 = (char *)v10 + v25;
      v27 = (char *)v11 + v25;
      v28 = v174;
      if (v174((char *)v11 + v25, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v26, v27, v13);
        v28 = v174;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v26, 0, 1, v13);
      }
      v30 = _s6StylesV8TimelineVMa(0);
      v175(&v26[*(int *)(v30 + 20)], &v27[*(int *)(v30 + 20)], v20);
      v31 = v16[9];
      v32 = (char *)v10 + v31;
      v33 = (char *)v11 + v31;
      v34 = v5;
      if (v28((char *)v11 + v31, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v32, v33, v13);
        v28 = v174;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v32, 0, 1, v13);
      }
      v36 = _s6StylesV6NoDataVMa(0);
      v175(&v32[*(int *)(v36 + 20)], &v33[*(int *)(v36 + 20)], v20);
      v32[*(int *)(v36 + 24)] = v33[*(int *)(v36 + 24)];
      v37 = v16[10];
      v38 = (char *)v10 + v37;
      v39 = (char *)v11 + v37;
      if (v28((char *)v11 + v37, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v38, v39, v13);
        v28 = v174;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v38, 0, 1, v13);
      }
      v41 = _s6StylesV11PlaceholderVMa(0);
      v175(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v20);
      v42 = v16[11];
      v43 = (char *)v10 + v42;
      v44 = (char *)v11 + v42;
      if (v28((char *)v11 + v42, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v43, v44, v13);
        v28 = v174;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v43, 0, 1, v13);
      }
      v46 = _s6StylesV6SymbolVMa(0);
      v175(&v43[*(int *)(v46 + 20)], &v44[*(int *)(v46 + 20)], v20);
      v47 = v16[12];
      v48 = (char *)v10 + v47;
      v49 = (char *)v11 + v47;
      if (v28((char *)v11 + v47, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v48, v49, v13);
        v28 = v174;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v48, 0, 1, v13);
      }
      v51 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v175(&v48[v51[5]], &v49[v51[5]], v20);
      v48[v51[6]] = v49[v51[6]];
      ((void (*)(char *, char *, uint64_t))v165)(&v48[v51[7]], &v49[v51[7]], v166);
      v52 = v16[13];
      v53 = (char *)v10 + v52;
      v54 = (char *)v11 + v52;
      if (v28((char *)v11 + v52, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v53, v54, v13);
        v28 = v174;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v53, 0, 1, v13);
      }
      v56 = _s6StylesV5EmptyVMa(0);
      v175(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v20);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v16[14];
      v58 = (char *)v10 + v57;
      v59 = (char *)v11 + v57;
      if (v28((char *)v11 + v57, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v58, v59, v13);
        v28 = v174;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v58, 0, 1, v13);
      }
      v61 = _s6StylesV5DailyVMa(0);
      v175(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v20);
      v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
      v62 = v16[15];
      v63 = (char *)v10 + v62;
      v64 = (char *)v11 + v62;
      if (v28((char *)v11 + v62, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v63, v64, v13);
        v28 = v174;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v63, 0, 1, v13);
      }
      v5 = v34;
      v66 = _s6StylesV9MomentaryVMa(0);
      v175(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v20);
      v67 = v16[16];
      v68 = (char *)v10 + v67;
      v69 = (char *)v11 + v67;
      if (v28((char *)v11 + v67, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v68, v69, v13);
        v28 = v174;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v68, 0, 1, v13);
      }
      v71 = _s6StylesV6HeaderVMa(0);
      v175(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v20);
      v72 = v16[17];
      v73 = (char *)v10 + v72;
      v74 = (char *)v11 + v72;
      if (v28((char *)v11 + v72, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v73, v74, v13);
        v28 = v174;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v73, 0, 1, v13);
      }
      v76 = _s6StylesV11ChartButtonVMa(0);
      v175(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v20);
      v77 = v16[18];
      v78 = (char *)v10 + v77;
      v79 = (char *)v11 + v77;
      if (v28((char *)v11 + v77, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v78, v79, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v78, 0, 1, v13);
      }
      a3 = v167;
      v81 = _s6StylesV15LogButtonFooterVMa(0);
      v175(&v78[*(int *)(v81 + 20)], &v79[*(int *)(v81 + 20)], v20);
      v4 = v170;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v82 = a3[6];
  v83 = (_QWORD *)((char *)v5 + v82);
  v84 = (_QWORD *)((char *)v4 + v82);
  v85 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v86 = *((_QWORD *)v85 - 1);
  v87 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v86 + 48);
  v88 = v87(v83, 1, v85);
  v89 = v87(v84, 1, v85);
  if (!v88)
  {
    if (v89)
    {
      sub_24172588C((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
      v90 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
      goto LABEL_50;
    }
    v169 = a3;
    v172 = v4;
    *v83 = *v84;
    v106 = v85[5];
    v107 = (char *)v83 + v106;
    v108 = (char *)v84 + v106;
    v109 = sub_2418A9CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 24))(v107, v108, v109);
    v110 = v85[6];
    v111 = (_QWORD *)((char *)v83 + v110);
    v112 = (_QWORD *)((char *)v84 + v110);
    *v111 = *v112;
    v111[1] = v112[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v113 = v85[7];
    v114 = (char *)v83 + v113;
    v115 = (char *)v84 + v113;
    v116 = (int *)_s5EntryVMa();
    v117 = *((_QWORD *)v116 - 1);
    v118 = *(uint64_t (**)(char *, uint64_t, int *))(v117 + 48);
    LODWORD(v107) = v118(v114, 1, v116);
    v119 = v118(v115, 1, v116);
    if ((_DWORD)v107)
    {
      if (!v119)
      {
        v137 = sub_2418A8130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(v114, v115, v137);
        v138 = v116[5];
        v139 = &v114[v138];
        v140 = &v115[v138];
        *(_QWORD *)v139 = *(_QWORD *)v140;
        *((_QWORD *)v139 + 1) = *((_QWORD *)v140 + 1);
        v141 = v116[6];
        v142 = &v114[v141];
        v143 = &v115[v141];
        *(_QWORD *)v142 = *(_QWORD *)v143;
        *((_QWORD *)v142 + 1) = *((_QWORD *)v143 + 1);
        v144 = v116[7];
        v145 = &v114[v144];
        v146 = &v115[v144];
        *(_QWORD *)v145 = *(_QWORD *)v146;
        *((_QWORD *)v145 + 1) = *((_QWORD *)v146 + 1);
        v147 = v116[8];
        v148 = &v114[v147];
        v149 = &v115[v147];
        *(_QWORD *)v148 = *(_QWORD *)v149;
        *((_QWORD *)v148 + 1) = *((_QWORD *)v149 + 1);
        *(_QWORD *)&v114[v116[9]] = *(_QWORD *)&v115[v116[9]];
        v150 = *(void (**)(char *, _QWORD, uint64_t, int *))(v117 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v150(v114, 0, 1, v116);
        goto LABEL_63;
      }
      v120 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    }
    else
    {
      if (!v119)
      {
        v151 = sub_2418A8130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 24))(v114, v115, v151);
        v152 = v116[5];
        v153 = &v114[v152];
        v154 = &v115[v152];
        *(_QWORD *)v153 = *(_QWORD *)v154;
        *((_QWORD *)v153 + 1) = *((_QWORD *)v154 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v155 = v116[6];
        v156 = &v114[v155];
        v157 = &v115[v155];
        *(_QWORD *)v156 = *(_QWORD *)v157;
        *((_QWORD *)v156 + 1) = *((_QWORD *)v157 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v158 = v116[7];
        v159 = &v114[v158];
        v160 = &v115[v158];
        *(_QWORD *)v159 = *(_QWORD *)v160;
        *((_QWORD *)v159 + 1) = *((_QWORD *)v160 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v161 = v116[8];
        v162 = &v114[v161];
        v163 = &v115[v161];
        *(_QWORD *)v162 = *(_QWORD *)v163;
        *((_QWORD *)v162 + 1) = *((_QWORD *)v163 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v114[v116[9]] = *(_QWORD *)&v115[v116[9]];
        goto LABEL_63;
      }
      sub_24172588C((uint64_t)v114, (uint64_t (*)(_QWORD))_s5EntryVMa);
      v120 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    }
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v120);
    memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
LABEL_63:
    a3 = v169;
    *(_QWORD *)((char *)v83 + v85[8]) = *(_QWORD *)((char *)v84 + v85[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v83 + v85[9]) = *(_QWORD *)((char *)v84 + v85[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v4 = v172;
    goto LABEL_64;
  }
  if (v89)
  {
    v90 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
LABEL_50:
    sub_24172570C(0, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, v90);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    goto LABEL_64;
  }
  v168 = a3;
  v171 = v4;
  v176 = v5;
  *v83 = *v84;
  v92 = v85[5];
  v93 = (char *)v83 + v92;
  v94 = (char *)v84 + v92;
  v95 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v93, v94, v95);
  v96 = v85[6];
  v97 = (_QWORD *)((char *)v83 + v96);
  v98 = (_QWORD *)((char *)v84 + v96);
  *v97 = *v98;
  v97[1] = v98[1];
  v99 = v85[7];
  v100 = (char *)v83 + v99;
  v101 = (char *)v84 + v99;
  v102 = (int *)_s5EntryVMa();
  v103 = *((_QWORD *)v102 - 1);
  v104 = *(unsigned int (**)(char *, uint64_t, int *))(v103 + 48);
  swift_bridgeObjectRetain();
  if (v104(v101, 1, v102))
  {
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
  }
  else
  {
    v121 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v100, v101, v121);
    v122 = v102[5];
    v123 = &v100[v122];
    v124 = &v101[v122];
    *(_QWORD *)v123 = *(_QWORD *)v124;
    *((_QWORD *)v123 + 1) = *((_QWORD *)v124 + 1);
    v125 = v102[6];
    v126 = &v100[v125];
    v127 = &v101[v125];
    *(_QWORD *)v126 = *(_QWORD *)v127;
    *((_QWORD *)v126 + 1) = *((_QWORD *)v127 + 1);
    v128 = v102[7];
    v129 = &v100[v128];
    v130 = &v101[v128];
    *(_QWORD *)v129 = *(_QWORD *)v130;
    *((_QWORD *)v129 + 1) = *((_QWORD *)v130 + 1);
    v131 = v102[8];
    v132 = &v100[v131];
    v133 = &v101[v131];
    *(_QWORD *)v132 = *(_QWORD *)v133;
    *((_QWORD *)v132 + 1) = *((_QWORD *)v133 + 1);
    *(_QWORD *)&v100[v102[9]] = *(_QWORD *)&v101[v102[9]];
    v134 = *(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v134(v100, 0, 1, v102);
  }
  v5 = v176;
  v4 = v171;
  *(_QWORD *)((char *)v83 + v85[8]) = *(_QWORD *)((char *)v84 + v85[8]);
  *(_QWORD *)((char *)v83 + v85[9]) = *(_QWORD *)((char *)v84 + v85[9]);
  v135 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v86 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v135(v83, 0, 1, v85);
  a3 = v168;
LABEL_64:
  *(_QWORD *)((char *)v5 + a3[7]) = *(_QWORD *)((char *)v4 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

char *sub_241814BF8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v101;
  void (*v102)(char *, char *);
  uint64_t v103;
  char *v104;
  int *v105;
  int *v106;
  uint64_t v107;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2418A8EB0();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v107 = v15;
    v101 = a1;
    v104 = a2;
    if (v16(v11, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v19 = v18[5];
    v20 = &v10[v19];
    v21 = &v11[v19];
    v22 = sub_2418A87B4();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
    v23(v20, v21, v22);
    v10[v18[6]] = v11[v18[6]];
    v24 = v18[7];
    v25 = &v10[v24];
    v26 = &v11[v24];
    v27 = sub_2418A84E4();
    v102 = *(void (**)(char *, char *))(*(_QWORD *)(v27 - 8) + 32);
    v103 = v27;
    v102(v25, v26);
    v28 = v18[8];
    v29 = &v10[v28];
    v30 = &v11[v28];
    if (v16(&v11[v28], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v29, v30, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v29, 0, 1, v14);
    }
    v32 = _s6StylesV8TimelineVMa(0);
    v23(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v22);
    v33 = v18[9];
    v34 = &v10[v33];
    v35 = &v11[v33];
    v105 = a3;
    if (v16(&v11[v33], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v34, v35, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v34, 0, 1, v14);
    }
    v37 = _s6StylesV6NoDataVMa(0);
    v23(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v22);
    v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
    v38 = v18[10];
    v39 = &v10[v38];
    v40 = &v11[v38];
    if (v16(&v11[v38], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v39, v40, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v39, 0, 1, v14);
    }
    v42 = _s6StylesV11PlaceholderVMa(0);
    v23(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v22);
    v43 = v18[11];
    v44 = &v10[v43];
    v45 = &v11[v43];
    if (v16(&v11[v43], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v44, v45, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v44, 0, 1, v14);
    }
    v47 = _s6StylesV6SymbolVMa(0);
    v23(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v22);
    v48 = v18[12];
    v49 = &v10[v48];
    v50 = &v11[v48];
    if (v16(&v11[v48], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v49, v50, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v49, 0, 1, v14);
    }
    v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v23(&v49[v52[5]], &v50[v52[5]], v22);
    v49[v52[6]] = v50[v52[6]];
    ((void (*)(char *, char *, uint64_t))v102)(&v49[v52[7]], &v50[v52[7]], v103);
    v53 = v18[13];
    v54 = &v10[v53];
    v55 = &v11[v53];
    if (v16(&v11[v53], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v54, v55, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v54, 0, 1, v14);
    }
    v57 = _s6StylesV5EmptyVMa(0);
    v23(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v22);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    v58 = v18[14];
    v59 = &v10[v58];
    v60 = &v11[v58];
    if (v16(&v11[v58], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v59, v60, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v59, 0, 1, v14);
    }
    v62 = _s6StylesV5DailyVMa(0);
    v23(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v22);
    v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
    v63 = v18[15];
    v64 = &v10[v63];
    v65 = &v11[v63];
    if (v16(&v11[v63], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v64, v65, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v64, 0, 1, v14);
    }
    a3 = v105;
    v67 = _s6StylesV9MomentaryVMa(0);
    v23(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v22);
    v68 = v18[16];
    v69 = &v10[v68];
    v70 = &v11[v68];
    if (v16(&v11[v68], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v69, v70, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v69, 0, 1, v14);
    }
    v72 = _s6StylesV6HeaderVMa(0);
    v23(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v22);
    v73 = v18[17];
    v74 = &v10[v73];
    v75 = &v11[v73];
    if (v16(&v11[v73], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v74, v75, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v74, 0, 1, v14);
    }
    v77 = _s6StylesV11ChartButtonVMa(0);
    v23(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v22);
    v78 = v18[18];
    v79 = &v10[v78];
    v80 = &v11[v78];
    if (v16(&v11[v78], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v79, v80, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v79, 0, 1, v14);
    }
    a1 = v101;
    v82 = _s6StylesV15LogButtonFooterVMa(0);
    v23(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v22);
    swift_storeEnumTagMultiPayload();
    a2 = v104;
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v83 = a3[6];
  v84 = &a1[v83];
  v85 = &a2[v83];
  v86 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v87 = *((_QWORD *)v86 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v87 + 48))(v85, 1, v86))
  {
    sub_24172570C(0, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    v106 = a3;
    *(_QWORD *)v84 = *(_QWORD *)v85;
    v89 = v86[5];
    v90 = &v84[v89];
    v91 = &v85[v89];
    v92 = sub_2418A9CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
    *(_OWORD *)&v84[v86[6]] = *(_OWORD *)&v85[v86[6]];
    v93 = v86[7];
    v94 = &v84[v93];
    v95 = &v85[v93];
    v96 = (int *)_s5EntryVMa();
    v97 = *((_QWORD *)v96 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v97 + 48))(v95, 1, v96))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      v99 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v94, v95, v99);
      *(_OWORD *)&v94[v96[5]] = *(_OWORD *)&v95[v96[5]];
      *(_OWORD *)&v94[v96[6]] = *(_OWORD *)&v95[v96[6]];
      *(_OWORD *)&v94[v96[7]] = *(_OWORD *)&v95[v96[7]];
      *(_OWORD *)&v94[v96[8]] = *(_OWORD *)&v95[v96[8]];
      *(_QWORD *)&v94[v96[9]] = *(_QWORD *)&v95[v96[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v97 + 56))(v94, 0, 1, v96);
    }
    *(_QWORD *)&v84[v86[8]] = *(_QWORD *)&v85[v86[8]];
    *(_QWORD *)&v84[v86[9]] = *(_QWORD *)&v85[v86[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v87 + 56))(v84, 0, 1, v86);
    a3 = v106;
  }
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *sub_2418157B4(char *a1, char *a2, int *a3)
{
  char *v4;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int *v88;
  uint64_t v89;
  uint64_t (*v90)(char *, uint64_t, int *);
  int v91;
  int v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  int *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  int *v117;
  uint64_t v118;
  uint64_t (*v119)(char *, uint64_t, int *);
  int v120;
  uint64_t (*v121)(uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  void (*v147)(char *, char *);
  uint64_t v148;
  char *v149;
  char *v150;
  int *v151;
  int *v152;
  int *v153;
  uint64_t v154;
  unsigned int (*v155)(char *, uint64_t, uint64_t);
  void (*v156)(char *, char *, uint64_t);

  v4 = a2;
  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, v7);
    v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, v4, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, v4, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    v11 = a3[5];
    v12 = &a1[v11];
    v13 = &v4[v11];
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)&a1[v11], &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v14);
    v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2418A8EB0();
      v18 = *(_QWORD *)(v17 - 8);
      v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      v151 = a3;
      v154 = v18;
      if (v155(v13, 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v13, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
      }
      v20 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v21 = v20[5];
      v22 = &v12[v21];
      v23 = &v13[v21];
      v24 = sub_2418A87B4();
      v156 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
      v156(v22, v23, v24);
      v12[v20[6]] = v13[v20[6]];
      v25 = v20[7];
      v26 = &v12[v25];
      v27 = &v13[v25];
      v28 = sub_2418A84E4();
      v147 = *(void (**)(char *, char *))(*(_QWORD *)(v28 - 8) + 32);
      v148 = v28;
      v147(v26, v27);
      v29 = v20[8];
      v30 = &v12[v29];
      v31 = &v13[v29];
      v32 = v155;
      if (v155(&v13[v29], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v30, v31, v17);
        v32 = v155;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v30, 0, 1, v17);
      }
      v34 = _s6StylesV8TimelineVMa(0);
      v156(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v24);
      v35 = v20[9];
      v36 = &v12[v35];
      v37 = &v13[v35];
      v149 = v4;
      if (v32(&v13[v35], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v36, v37, v17);
        v32 = v155;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v36, 0, 1, v17);
      }
      v39 = _s6StylesV6NoDataVMa(0);
      v156(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v24);
      v36[*(int *)(v39 + 24)] = v37[*(int *)(v39 + 24)];
      v40 = v20[10];
      v41 = &v12[v40];
      v42 = &v13[v40];
      if (v32(&v13[v40], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v41, v42, v17);
        v32 = v155;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v41, 0, 1, v17);
      }
      v44 = _s6StylesV11PlaceholderVMa(0);
      v156(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v24);
      v45 = v20[11];
      v46 = &v12[v45];
      v47 = &v13[v45];
      if (v32(&v13[v45], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v46, v47, v17);
        v32 = v155;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v46, 0, 1, v17);
      }
      v49 = _s6StylesV6SymbolVMa(0);
      v156(&v46[*(int *)(v49 + 20)], &v47[*(int *)(v49 + 20)], v24);
      v50 = v20[12];
      v51 = &v12[v50];
      v52 = &v13[v50];
      if (v32(&v13[v50], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v51, v52, v17);
        v32 = v155;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v51, 0, 1, v17);
      }
      v54 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v156(&v51[v54[5]], &v52[v54[5]], v24);
      v51[v54[6]] = v52[v54[6]];
      ((void (*)(char *, char *, uint64_t))v147)(&v51[v54[7]], &v52[v54[7]], v148);
      v55 = v20[13];
      v56 = &v12[v55];
      v57 = &v13[v55];
      if (v32(&v13[v55], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v56, v57, v17);
        v32 = v155;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v56, 0, 1, v17);
      }
      v59 = _s6StylesV5EmptyVMa(0);
      v156(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v24);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      v60 = v20[14];
      v61 = &v12[v60];
      v62 = &v13[v60];
      if (v32(&v13[v60], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v61, v62, v17);
        v32 = v155;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v61, 0, 1, v17);
      }
      v64 = _s6StylesV5DailyVMa(0);
      v156(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v24);
      v61[*(int *)(v64 + 24)] = v62[*(int *)(v64 + 24)];
      v65 = v20[15];
      v66 = &v12[v65];
      v67 = &v13[v65];
      if (v32(&v13[v65], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v66, v67, v17);
        v32 = v155;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v66, 0, 1, v17);
      }
      v4 = v149;
      v69 = _s6StylesV9MomentaryVMa(0);
      v156(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v24);
      v70 = v20[16];
      v71 = &v12[v70];
      v72 = &v13[v70];
      if (v32(&v13[v70], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v71, v72, v17);
        v32 = v155;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v71, 0, 1, v17);
      }
      v74 = _s6StylesV6HeaderVMa(0);
      v156(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v24);
      v75 = v20[17];
      v76 = &v12[v75];
      v77 = &v13[v75];
      if (v32(&v13[v75], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v76, v77, v17);
        v32 = v155;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v76, 0, 1, v17);
      }
      v79 = _s6StylesV11ChartButtonVMa(0);
      v156(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v24);
      v80 = v20[18];
      v81 = &v12[v80];
      v82 = &v13[v80];
      if (v32(&v13[v80], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v81, v82, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v81, 0, 1, v17);
      }
      v84 = _s6StylesV15LogButtonFooterVMa(0);
      v156(&v81[*(int *)(v84 + 20)], &v82[*(int *)(v84 + 20)], v24);
      swift_storeEnumTagMultiPayload();
      a3 = v151;
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v85 = a3[6];
  v86 = &a1[v85];
  v87 = &v4[v85];
  v88 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v89 = *((_QWORD *)v88 - 1);
  v90 = *(uint64_t (**)(char *, uint64_t, int *))(v89 + 48);
  v91 = v90(v86, 1, v88);
  v92 = v90(v87, 1, v88);
  if (!v91)
  {
    if (v92)
    {
      sub_24172588C((uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
      v93 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
      goto LABEL_49;
    }
    v150 = v4;
    v153 = a3;
    *(_QWORD *)v86 = *(_QWORD *)v87;
    v105 = v88[5];
    v106 = &v86[v105];
    v107 = &v87[v105];
    v108 = sub_2418A9CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 40))(v106, v107, v108);
    v109 = v88[6];
    v110 = &v86[v109];
    v111 = &v87[v109];
    v113 = *(_QWORD *)v111;
    v112 = *((_QWORD *)v111 + 1);
    *(_QWORD *)v110 = v113;
    *((_QWORD *)v110 + 1) = v112;
    swift_bridgeObjectRelease();
    v114 = v88[7];
    v115 = &v86[v114];
    v116 = &v87[v114];
    v117 = (int *)_s5EntryVMa();
    v118 = *((_QWORD *)v117 - 1);
    v119 = *(uint64_t (**)(char *, uint64_t, int *))(v118 + 48);
    LODWORD(v106) = v119(v115, 1, v117);
    v120 = v119(v116, 1, v117);
    if ((_DWORD)v106)
    {
      if (!v120)
      {
        v124 = sub_2418A8130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v115, v116, v124);
        *(_OWORD *)&v115[v117[5]] = *(_OWORD *)&v116[v117[5]];
        *(_OWORD *)&v115[v117[6]] = *(_OWORD *)&v116[v117[6]];
        *(_OWORD *)&v115[v117[7]] = *(_OWORD *)&v116[v117[7]];
        *(_OWORD *)&v115[v117[8]] = *(_OWORD *)&v116[v117[8]];
        *(_QWORD *)&v115[v117[9]] = *(_QWORD *)&v116[v117[9]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v118 + 56))(v115, 0, 1, v117);
        goto LABEL_62;
      }
      v121 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    }
    else
    {
      if (!v120)
      {
        v125 = sub_2418A8130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 40))(v115, v116, v125);
        v126 = v117[5];
        v127 = &v115[v126];
        v128 = &v116[v126];
        v130 = *(_QWORD *)v128;
        v129 = *((_QWORD *)v128 + 1);
        *(_QWORD *)v127 = v130;
        *((_QWORD *)v127 + 1) = v129;
        swift_bridgeObjectRelease();
        v131 = v117[6];
        v132 = &v115[v131];
        v133 = &v116[v131];
        v135 = *(_QWORD *)v133;
        v134 = *((_QWORD *)v133 + 1);
        *(_QWORD *)v132 = v135;
        *((_QWORD *)v132 + 1) = v134;
        swift_bridgeObjectRelease();
        v136 = v117[7];
        v137 = &v115[v136];
        v138 = &v116[v136];
        v140 = *(_QWORD *)v138;
        v139 = *((_QWORD *)v138 + 1);
        *(_QWORD *)v137 = v140;
        *((_QWORD *)v137 + 1) = v139;
        swift_bridgeObjectRelease();
        v141 = v117[8];
        v142 = &v115[v141];
        v143 = &v116[v141];
        v145 = *(_QWORD *)v143;
        v144 = *((_QWORD *)v143 + 1);
        *(_QWORD *)v142 = v145;
        *((_QWORD *)v142 + 1) = v144;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v115[v117[9]] = *(_QWORD *)&v116[v117[9]];
        goto LABEL_62;
      }
      sub_24172588C((uint64_t)v115, (uint64_t (*)(_QWORD))_s5EntryVMa);
      v121 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    }
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v121);
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
LABEL_62:
    v4 = v150;
    *(_QWORD *)&v86[v88[8]] = *(_QWORD *)&v87[v88[8]];
    swift_bridgeObjectRelease();
    *(_QWORD *)&v86[v88[9]] = *(_QWORD *)&v87[v88[9]];
    swift_bridgeObjectRelease();
    a3 = v153;
    goto LABEL_63;
  }
  if (v92)
  {
    v93 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
LABEL_49:
    sub_24172570C(0, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, v93);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    goto LABEL_63;
  }
  v152 = a3;
  *(_QWORD *)v86 = *(_QWORD *)v87;
  v95 = v88[5];
  v96 = &v86[v95];
  v97 = &v87[v95];
  v98 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
  *(_OWORD *)&v86[v88[6]] = *(_OWORD *)&v87[v88[6]];
  v99 = v88[7];
  v100 = &v86[v99];
  v101 = &v87[v99];
  v102 = (int *)_s5EntryVMa();
  v103 = *((_QWORD *)v102 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v103 + 48))(v101, 1, v102))
  {
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
  }
  else
  {
    v122 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v100, v101, v122);
    *(_OWORD *)&v100[v102[5]] = *(_OWORD *)&v101[v102[5]];
    *(_OWORD *)&v100[v102[6]] = *(_OWORD *)&v101[v102[6]];
    *(_OWORD *)&v100[v102[7]] = *(_OWORD *)&v101[v102[7]];
    *(_OWORD *)&v100[v102[8]] = *(_OWORD *)&v101[v102[8]];
    *(_QWORD *)&v100[v102[9]] = *(_QWORD *)&v101[v102[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56))(v100, 0, 1, v102);
  }
  a3 = v152;
  *(_QWORD *)&v86[v88[8]] = *(_QWORD *)&v87[v88[8]];
  *(_QWORD *)&v86[v88[9]] = *(_QWORD *)&v87[v88[9]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v89 + 56))(v86, 0, 1, v88);
LABEL_63:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&v4[a3[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241816688()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241816694(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_2418167A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2418167B4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_8:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_24172570C(0, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
}

void sub_2418168C4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_2418169B8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2418169C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151F88)
  {
    sub_24172570C(255, &qword_257151F90, (uint64_t (*)(uint64_t))sub_241816A40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_241816B04();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151F88);
  }
}

void sub_241816A40()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_257151F98)
  {
    sub_241731FB0(255, &qword_25714C410, (uint64_t (*)(uint64_t))sub_241730780, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_2417257D4();
    sub_241731FB0(255, &qword_257151FA0, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_257151F98);
  }
}

unint64_t sub_241816B04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257151FA8;
  if (!qword_257151FA8)
  {
    sub_24172570C(255, &qword_257151F90, (uint64_t (*)(uint64_t))sub_241816A40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257151FA8);
  }
  return result;
}

void sub_241816B64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151FB0)
  {
    sub_2418169C8();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151FB0);
  }
}

void sub_241816BC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151FB8)
  {
    sub_24172570C(255, &qword_257151F90, (uint64_t (*)(uint64_t))sub_241816A40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151FB8);
  }
}

uint64_t sub_241816C3C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_24172570C(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241816C94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;

  sub_241731FB0(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

unint64_t sub_241816CD4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257151FD8;
  if (!qword_257151FD8)
  {
    sub_241816B64();
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257151FE0, (uint64_t (*)(uint64_t))sub_2418169C8, MEMORY[0x24BDF4700]);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257151FD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkToMindSettingsButton()
{
  return &type metadata for LinkToMindSettingsButton;
}

uint64_t sub_241816D64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241816D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  sub_2417D7ED8();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v6 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v7 = sub_2418A7EFC();
  v9 = v8;
  swift_bridgeObjectRelease();

  v11[0] = v7;
  v11[1] = v9;
  sub_241721040();
  sub_2418A9714();
  v11[0] = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC7E0);
  sub_241773FD4();
  sub_24172159C((unint64_t *)&qword_2543915D8, (uint64_t (*)(uint64_t))sub_241773FD4, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24172159C((unint64_t *)&qword_25714C590, (uint64_t (*)(uint64_t))sub_2417D7ED8, MEMORY[0x24BDF43B0]);
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_241816F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  void (*v20)(char *, char *, uint64_t);
  id v21;
  void *v22;
  void *v23;
  void *v24;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v0 = sub_2418A8340();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, (unint64_t *)&qword_2543915A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v30 - v7;
  v9 = sub_2418A7F50();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v30 - v16;
  v18 = (id)HKMHMindfulnessSettingsURL();
  if (v18)
  {
    v19 = v18;
    sub_2418A7F38();

    v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v20(v8, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v20(v17, v8, v9);
      v21 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
      if (v21)
      {
        v22 = v21;
        v23 = (void *)sub_2418A7F2C();
        sub_241875268(MEMORY[0x24BEE4AF8]);
        v24 = (void *)sub_2418A9D14();
        swift_bridgeObjectRelease();
        objc_msgSend(v22, sel_openSensitiveURL_withOptions_, v23, v24);

      }
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_24178B314((uint64_t)v8);
  sub_2418A8328();
  v26 = sub_2418A8334();
  v27 = sub_2418AA05C();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v31 = v29;
    *(_DWORD *)v28 = 136446210;
    v30 = sub_24176024C(0xD000000000000018, 0x80000002418D8350, &v31);
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v26, v27, "[%{public}s] Failed to open Mindfulness settings in Bridge from State of Mind Settings.", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v29, -1, -1);
    MEMORY[0x24269D548](v28, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_2418172F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  v26 = a3;
  v5 = sub_2418A8928();
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417935B8();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1;
  v31 = a2;
  sub_241721040();
  swift_bridgeObjectRetain();
  v13 = sub_2418A92D0();
  v15 = v14;
  LOBYTE(a1) = v16 & 1;
  v30 = v13;
  v31 = v14;
  v32 = v16 & 1;
  v33 = v17;
  v29 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC820);
  sub_241773FD4();
  sub_24172159C((unint64_t *)&qword_2543915D8, (uint64_t (*)(uint64_t))sub_241773FD4, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_2417289EC(v13, v15, a1);
  swift_bridgeObjectRelease();
  sub_2418A891C();
  KeyPath = swift_getKeyPath();
  sub_2417EAA04();
  v20 = v26;
  v21 = (uint64_t *)(v26 + *(int *)(v19 + 36));
  sub_24172570C(0, &qword_257150DE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDDD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  v24 = v27;
  v23 = v28;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))((char *)v21 + *(int *)(v22 + 28), v8, v28);
  *v21 = KeyPath;
  sub_2418176C0((uint64_t)v12, v20);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v23);
  return sub_241817704((uint64_t)v12);
}

uint64_t sub_24181754C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_2417EAA04();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_2418172F0(*v0, v0[1], (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417312C0();
  sub_24175B500();
  sub_2417EB024();
  return sub_2418A98DC();
}

uint64_t sub_241817600()
{
  return sub_2418A89E8();
}

uint64_t sub_241817620()
{
  return sub_2418A89E8();
}

uint64_t sub_241817640(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2418A8928();
  MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_2418A89F4();
}

uint64_t sub_2418176C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417935B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241817704(uint64_t a1)
{
  uint64_t v2;

  sub_2417935B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_241817744()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = qword_257151FE8;
  if (!qword_257151FE8)
  {
    sub_2418177B8();
    v2 = v1;
    v3 = sub_24175B500();
    v4 = sub_2417EB024();
    v5[0] = MEMORY[0x24BDF5138];
    v5[1] = v3;
    v5[2] = v4;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4AF8], v2, v5);
    atomic_store(result, (unint64_t *)&qword_257151FE8);
  }
  return result;
}

void sub_2418177B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151FF0)
  {
    sub_2417312C0();
    sub_2417EAA04();
    v0 = sub_2418A98E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151FF0);
  }
}

_QWORD *sub_241817824(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_WORD *)(a1 + 33) = *(_WORD *)((char *)a2 + 33);
    v7 = a2[6];
    v8 = *(int *)(a3 + 36);
    v9 = (uint64_t *)((char *)a2 + v8);
    v10 = (_QWORD *)(a1 + v8);
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v10, v9, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      }
      v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v16 = (char *)v10 + v15;
      v17 = (char *)v9 + v15;
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *v10 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_241817A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_241817AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 36);
  v8 = (_QWORD *)(a2 + v7);
  v9 = (_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v9, v8, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v14 = (char *)v9 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v9 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_241817CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 36);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_241817E90(a1 + v7);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241817E90(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241817EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 36);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v14 = &v6[v13];
    v15 = &v7[v13];
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_241818060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 36);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    sub_241817E90(a1 + v7);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24181822C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241818238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_2418182CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2418182D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ValenceSelectionPhase_iOS()
{
  uint64_t result;

  result = qword_257152050;
  if (!qword_257152050)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2418183A0()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241818450()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_241818460@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  _QWORD v19[2];
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v6 = sub_2418A8688();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_BYTE *)(a2 + 32);
  v19[0] = *(_QWORD *)(a2 + 16);
  v19[1] = v11;
  v20 = v12;
  sub_2418192AC();
  swift_retain();
  sub_2418A9828();
  v13 = v21;
  v14 = v22;
  v15 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  LOBYTE(a1) = *(_BYTE *)(a2 + 34);
  LOBYTE(v6) = *(_BYTE *)(a2 + 33);
  v16 = *(_QWORD *)(a2 + 40);
  v17 = swift_retain();
  *(_QWORD *)&result = sub_2417EDDB4(v13, v14, v15, (uint64_t)v10, a1, v6, v16, a3, v17).n128_u64[0];
  return result;
}

uint64_t sub_241818578()
{
  id v0;
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  if (v3 == 2)
  {
    if (qword_25714B958 == -1)
      goto LABEL_6;
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (v3 != 1)
    return 0;
  if (qword_25714B958 != -1)
    goto LABEL_9;
LABEL_6:
  v0 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v1 = sub_2418A7EFC();
  swift_bridgeObjectRelease();

  return v1;
}

id sub_241818724@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  char v66;
  id result;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t (*v101)();
  uint64_t v102;

  v96 = a1;
  v90 = type metadata accessor for ValenceSelectionPhaseSpecs();
  v3 = MEMORY[0x24BDAC7A8](v90, v2);
  v91 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v88 = (uint64_t)&v84 - v6;
  sub_241818EC8(0);
  v84 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v86 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241819020(0);
  v95 = v10;
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v85 = (uint64_t)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v87 = (uint64_t)&v84 - v15;
  sub_24181939C(0, &qword_2571520D0, MEMORY[0x24BDEF380]);
  v93 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v94 = (uint64_t)&v84 - v18;
  v19 = type metadata accessor for ValenceSelectionPhase_iOS();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x24BDAC7A8](v19, v22);
  sub_241818F00(0);
  v97 = *(_QWORD *)(v23 - 8);
  v98 = v23;
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v27 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)&v84 - v29;
  sub_241818EE4(0);
  v92 = v31;
  v33 = MEMORY[0x24BDAC7A8](v31, v32);
  v89 = (uint64_t)&v84 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v33, v35);
  v38 = (char *)&v84 - v37;
  MEMORY[0x24BDAC7A8](v36, v39);
  v41 = (char *)&v84 - v40;
  v42 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 8)
                           + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_useLiveVisualization);
  sub_2417289A8(v1, (uint64_t)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhase_iOS);
  v43 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  if (v42 == 1)
  {
    v44 = swift_allocObject();
    sub_241731B4C((uint64_t)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v44 + v43, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhase_iOS);
    v101 = sub_241819040;
    v102 = v44;
    if ((*(_BYTE *)(v1 + 34) & 1) != 0)
    {
      v45 = 0;
      v46 = 0xE000000000000000;
    }
    else
    {
      v45 = sub_241818578();
      v46 = v50;
    }
    v52 = v97;
    v51 = v98;
    v99 = v45;
    v100 = v46;
    sub_241818FA8();
    sub_24172159C(&qword_2571520C0, (uint64_t (*)(uint64_t))sub_241818FA8, MEMORY[0x24BDEC6F8]);
    sub_241721040();
    sub_2418A93A8();
    swift_release();
    swift_bridgeObjectRelease();
    v53 = sub_2418A9960();
    v55 = sub_24185EE40(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v38, 0.0, 1, 0.0, 1, v53, v54);
    (*(void (**)(char *, uint64_t, double))(v52 + 8))(v30, v51, v55);
    sub_241731B4C((uint64_t)v38, (uint64_t)v41, (uint64_t (*)(_QWORD))sub_241818EE4);
    sub_2417289A8((uint64_t)v41, v94, (uint64_t (*)(_QWORD))sub_241818EE4);
    swift_storeEnumTagMultiPayload();
    sub_241819044();
    sub_241721DF8(&qword_2571520E0, (uint64_t (*)(uint64_t))sub_241819020, sub_241819104, MEMORY[0x24BDEDBB8]);
    sub_2418A8D24();
    v56 = (uint64_t)v41;
    v57 = sub_241818EE4;
    return (id)sub_24172588C(v56, (uint64_t (*)(_QWORD))v57);
  }
  v47 = swift_allocObject();
  sub_241731B4C((uint64_t)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v47 + v43, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhase_iOS);
  v101 = sub_241819040;
  v102 = v47;
  if ((*(_BYTE *)(v1 + 34) & 1) != 0)
  {
    v48 = 0;
    v49 = 0xE000000000000000;
  }
  else
  {
    v48 = sub_241818578();
    v49 = v58;
  }
  v59 = (uint64_t)v91;
  v60 = v98;
  v99 = v48;
  v100 = v49;
  sub_241818FA8();
  sub_24172159C(&qword_2571520C0, (uint64_t (*)(uint64_t))sub_241818FA8, MEMORY[0x24BDEC6F8]);
  sub_241721040();
  sub_2418A93A8();
  swift_release();
  swift_bridgeObjectRelease();
  v61 = v88;
  sub_241861CB8(v88);
  sub_24172588C(v61, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  v62 = sub_2418A9960();
  v63 = v89;
  v65 = sub_24185EE40(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v89, 0.0, 1, 0.0, 1, v62, v64);
  (*(void (**)(char *, uint64_t, double))(v97 + 8))(v27, v60, v65);
  v66 = sub_2418A90CC();
  sub_241861CB8(v59);
  if ((sub_2418A879C() & 1) == 0)
  {
LABEL_12:
    sub_24172588C(v59, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_2418A84A8();
    v70 = v69;
    v72 = v71;
    v74 = v73;
    v76 = v75;
    v77 = v86;
    sub_2417289A8(v63, v86, (uint64_t (*)(_QWORD))sub_241818EE4);
    v78 = v77 + *(int *)(v84 + 36);
    *(_BYTE *)v78 = v66;
    *(_QWORD *)(v78 + 8) = v70;
    *(_QWORD *)(v78 + 16) = v72;
    *(_QWORD *)(v78 + 24) = v74;
    *(_QWORD *)(v78 + 32) = v76;
    *(_BYTE *)(v78 + 40) = 0;
    sub_24172588C(v63, (uint64_t (*)(_QWORD))sub_241818EE4);
    v79 = sub_2418A9960();
    v80 = v85;
    sub_24185F074(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v85, 0.0, 1, 0.0, 1, v79, v81);
    sub_24172588C(v77, (uint64_t (*)(_QWORD))sub_241818EC8);
    v82 = v80;
    v83 = v87;
    sub_241731B4C(v82, v87, (uint64_t (*)(_QWORD))sub_241819020);
    sub_2417289A8(v83, v94, (uint64_t (*)(_QWORD))sub_241819020);
    swift_storeEnumTagMultiPayload();
    sub_241819044();
    sub_241721DF8(&qword_2571520E0, (uint64_t (*)(uint64_t))sub_241819020, sub_241819104, MEMORY[0x24BDEDBB8]);
    sub_2418A8D24();
    v56 = v83;
    v57 = sub_241819020;
    return (id)sub_24172588C(v56, (uint64_t (*)(_QWORD))v57);
  }
  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v68 = result;
    MobileGestalt_get_homeButtonType();

    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_241818EC8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257152098, sub_241818EE4);
}

void sub_241818EE4(uint64_t a1)
{
  sub_241721CBC(a1, &qword_2571520A0, sub_241818F00);
}

void sub_241818F00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_2571520A8)
  {
    sub_241818FA8();
    v3 = v2;
    v4 = sub_24172159C(&qword_2571520C0, (uint64_t (*)(uint64_t))sub_241818FA8, MEMORY[0x24BDEC6F8]);
    v5 = sub_241721040();
    v8[0] = v3;
    v8[1] = MEMORY[0x24BEE0D00];
    v8[2] = v4;
    v8[3] = v5;
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF28C0], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_2571520A8);
  }
}

void sub_241818FA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571520B0)
  {
    type metadata accessor for ValenceSelectionPhaseContent();
    sub_24172159C(&qword_2571520B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseContent, (uint64_t)&unk_2418D6E08);
    v0 = sub_2418A8718();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571520B0);
  }
}

void sub_241819020(uint64_t a1)
{
  sub_241721CBC(a1, &qword_2571520C8, sub_241818EC8);
}

unint64_t sub_241819044()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[6];

  result = qword_2571520D8;
  if (!qword_2571520D8)
  {
    sub_241818EE4(255);
    v2 = v1;
    sub_241818FA8();
    v4 = v3;
    v5 = sub_24172159C(&qword_2571520C0, (uint64_t (*)(uint64_t))sub_241818FA8, MEMORY[0x24BDEC6F8]);
    v6 = sub_241721040();
    v7[2] = v4;
    v7[3] = MEMORY[0x24BEE0D00];
    v7[4] = v5;
    v7[5] = v6;
    v7[0] = swift_getOpaqueTypeConformance2();
    v7[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v7);
    atomic_store(result, (unint64_t *)&qword_2571520D8);
  }
  return result;
}

uint64_t sub_241819104()
{
  return sub_241721DF8(&qword_2571520E8, (uint64_t (*)(uint64_t))sub_241818EC8, (uint64_t (*)(void))sub_241819044, MEMORY[0x24BDECC60]);
}

uint64_t objectdestroyTm_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for ValenceSelectionPhase_iOS();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 36);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v6 = v3 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v7 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

double sub_241819258@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ValenceSelectionPhase_iOS() - 8) + 80);
  return sub_241818460(a1, v2 + ((v5 + 16) & ~v5), a2);
}

void sub_2418192AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257155000)
  {
    v0 = sub_2418A984C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257155000);
  }
}

unint64_t sub_241819304()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2571520F0;
  if (!qword_2571520F0)
  {
    sub_24181939C(255, qword_2571520F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_241819044();
    v3[1] = sub_241721DF8(&qword_2571520E0, (uint64_t (*)(uint64_t))sub_241819020, sub_241819104, MEMORY[0x24BDEDBB8]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2571520F0);
  }
  return result;
}

void sub_24181939C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_241818EE4(255);
    v7 = v6;
    sub_241819020(255);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t *sub_241819404(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v14 = a3[7];
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2418A8EB0();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v20 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v21 = (char *)v15 + v20;
      v22 = (char *)v16 + v20;
      v23 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v24 = a3[8];
    v25 = (uint64_t *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24181966C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 28);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A8EB0();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v9 = v6 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v10 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *sub_2418197D8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8658();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2418A8EB0();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v18 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v19 = (char *)v13 + v18;
    v20 = (char *)v14 + v18;
    v21 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_241819A18(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038];
    sub_24172B778((uint64_t)a1 + v6, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038]);
    sub_24172570C(0, &qword_25714C2E0, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v11 = a3[7];
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    sub_24172B778((uint64_t)a1 + v11, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2418A8EB0();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      v17 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v18 = (char *)v12 + v17;
      v19 = (char *)v13 + v17;
      v20 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_241819CCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8658();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[7];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v16 = v15;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2418A8EB0();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v13, v14, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    }
    v20 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v21 = &v13[v20];
    v22 = &v14[v20];
    v23 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

_QWORD *sub_241819EE8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038];
    sub_24172B778((uint64_t)a1 + v7, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038]);
    sub_24172570C(0, &qword_25714C2E0, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8658();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    v14 = a3[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    sub_24172B778((uint64_t)a1 + v14, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2418A8EB0();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      v22 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v23 = &v15[v22];
      v24 = &v16[v22];
      v25 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  v26 = a3[8];
  v27 = (char *)a1 + v26;
  v28 = (_QWORD *)((char *)a2 + v26);
  *(_QWORD *)((char *)a1 + v26) = *v28;
  swift_bridgeObjectRelease();
  *((_QWORD *)v27 + 1) = v28[1];
  swift_release();
  return a1;
}

uint64_t sub_24181A174()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24181A180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_24181A250()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24181A25C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ShowAllLabelsPicker()
{
  uint64_t result;

  result = qword_257152158;
  if (!qword_257152158)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24181A364()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_24181A438()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24181A448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t KeyPath;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;

  v68 = a2;
  v61 = sub_2418A98F4();
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61, v3);
  v58 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24181C888(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v57 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShowAllLabelsPicker();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v64 = v11;
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24181C190();
  v63 = v13;
  v60 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v53 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24181C174(0);
  v55 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v54 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24181C098(0);
  v66 = *(_QWORD *)(v19 - 8);
  v67 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v65 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417289A8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ShowAllLabelsPicker);
  sub_2418A9F48();
  v22 = sub_2418A9F3C();
  v62 = *(unsigned __int8 *)(v9 + 80);
  v23 = (v62 + 32) & ~v62;
  v56 = v62 | 7;
  v24 = swift_allocObject();
  v25 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v24 + 16) = v22;
  *(_QWORD *)(v24 + 24) = v25;
  sub_24181CBEC((uint64_t)v12, v24 + v23);
  sub_2417289A8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ShowAllLabelsPicker);
  v26 = sub_2418A9F3C();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v26;
  *(_QWORD *)(v27 + 24) = v25;
  sub_24181CBEC((uint64_t)v12, v27 + v23);
  sub_24181CE6C();
  sub_2418A9834();
  v70 = a1;
  v28 = a1;
  type metadata accessor for Label(0);
  sub_24181C234();
  sub_24172159C(&qword_257152230, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t)&unk_2418D1168);
  sub_24181C6B8();
  v29 = v53;
  sub_2418A9234();
  KeyPath = swift_getKeyPath();
  v31 = v59;
  v32 = v58;
  v33 = v61;
  (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v58, *MEMORY[0x24BDF4C90], v61);
  v34 = v57;
  sub_2418A9840();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  sub_24181C8A4(0);
  v36 = (uint64_t)v34;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 0, 1, v35);
  v37 = (uint64_t)v54;
  v38 = (uint64_t *)&v54[*(int *)(v55 + 36)];
  sub_24181C86C(0);
  sub_2417289A8(v36, (uint64_t)v38 + *(int *)(v39 + 28), (uint64_t (*)(_QWORD))sub_24181C888);
  *v38 = KeyPath;
  v40 = v60;
  v41 = v63;
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v37, v29, v63);
  sub_24172588C(v36, (uint64_t (*)(_QWORD))sub_24181C888);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v29, v41);
  v42 = v28;
  v69 = v28;
  sub_24181C8C0(0);
  sub_241728434(&qword_2571522A8, (uint64_t (*)(uint64_t))sub_24181C174, sub_24181CA90, sub_24181CAAC);
  sub_24172159C(&qword_2571522C0, (uint64_t (*)(uint64_t))sub_24181C8C0, MEMORY[0x24BDEF170]);
  v43 = v65;
  sub_2418A9528();
  sub_24172588C(v37, (uint64_t (*)(_QWORD))sub_24181C174);
  sub_2417289A8(v42, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ShowAllLabelsPicker);
  v44 = (v62 + 16) & ~v62;
  v45 = swift_allocObject();
  sub_24181CBEC((uint64_t)v12, v45 + v44);
  v71 = 0;
  swift_retain();
  sub_2418A96C0();
  LOBYTE(v44) = v72;
  v46 = v73;
  v48 = v66;
  v47 = v67;
  v49 = v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v68, v43, v67);
  swift_release();
  sub_24181C03C();
  v51 = v49 + *(int *)(v50 + 36);
  *(_QWORD *)v51 = sub_24181CF3C;
  *(_QWORD *)(v51 + 8) = v45;
  *(_BYTE *)(v51 + 16) = v44;
  *(_QWORD *)(v51 + 24) = v46;
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v43, v47);
}

uint64_t sub_24181A9F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = a1;
  sub_24181C2A0(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24181C234();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2418AA0F8();
  swift_bridgeObjectRetain();
  sub_241894600(&v17);
  v11 = swift_bridgeObjectRelease();
  v12 = v17;
  MEMORY[0x24BDAC7A8](v11, v13);
  *(&v15 - 2) = v12;
  sub_24181B968((uint64_t)v4);
  sub_24181C5E0();
  sub_241728434(&qword_257152240, (uint64_t (*)(uint64_t))sub_24181C2A0, (uint64_t (*)(void))sub_24181C74C, sub_24181C7F0);
  sub_24181C80C();
  sub_2418A98C4();
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v16, v10, v6);
}

uint64_t sub_24181AB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  _QWORD v23[10];

  v23[1] = a2;
  sub_24181C8DC();
  v23[0] = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24181C948();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2418A8DB4();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_241731234();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8D9C();
  v23[8] = a1;
  sub_2417312C0();
  sub_241728434((unint64_t *)&qword_25714C588, (uint64_t (*)(uint64_t))sub_2417312C0, (uint64_t (*)(void))sub_241731344, sub_2417310D4);
  sub_2418A8580();
  sub_2418A8DA8();
  v23[4] = a1;
  sub_241728250(0, &qword_257152298, sub_2417CAC30, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  sub_24181C9CC();
  sub_2418A8580();
  v21 = &v6[*(int *)(v23[0] + 48)];
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v6, v20, v16);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v21, v12, v8);
  sub_2418A8C70();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
}

uint64_t sub_24181ADC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  void *v21;
  uint64_t v22;

  v20[1] = a2;
  v3 = type metadata accessor for ShowAllLabelsPicker();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v8 = v7;
  v20[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v20 - v10;
  if (qword_25714B958 != -1)
    swift_once();
  v12 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v13 = sub_2418A7EFC();
  v15 = v14;
  swift_bridgeObjectRelease();

  v21 = (void *)v13;
  v22 = v15;
  sub_2417289A8(a1, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShowAllLabelsPicker);
  v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = swift_allocObject();
  sub_24181CBEC((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  sub_241721040();
  v18 = MEMORY[0x24BEE0D00];
  sub_2418A9714();
  v21 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC860);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, v18, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241731344();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v20[0] + 8))(v11, v8);
}

uint64_t sub_24181B060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_2418A8658();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShowAllLabelsPicker();
  sub_2418612BC((uint64_t)v4);
  sub_2418A864C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_24181B0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;

  v26 = a1;
  v30 = a2;
  v2 = type metadata accessor for ShowAllLabelsPicker();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v7 = v6;
  v27 = *((_QWORD *)v6 - 1);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v25 - v9;
  sub_2417CAC30(0);
  v28 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v15 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v16 = sub_2418A7EFC();
  v18 = v17;
  swift_bridgeObjectRelease();

  v31 = (void *)v16;
  v32 = v18;
  sub_2417289A8(v26, (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShowAllLabelsPicker);
  v19 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v20 = swift_allocObject();
  sub_24181CBEC((uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  sub_241721040();
  v21 = MEMORY[0x24BEE0D00];
  sub_2418A9714();
  v22 = sub_241731344();
  sub_2418A9498();
  (*(void (**)(char *, void *))(v27 + 8))(v10, v7);
  v31 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC8A0);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, v21, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v31 = v7;
  v32 = v22;
  swift_getOpaqueTypeConformance2();
  v23 = v29;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v23);
}

uint64_t sub_24181B414(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[8];
  uint64_t v12;
  __int128 v13;

  v2 = sub_2418A8658();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ShowAllLabelsPicker() + 32));
  v9 = *v7;
  v8 = v7[1];
  v12 = v9;
  *(_QWORD *)&v13 = v8;
  sub_24172570C(0, &qword_2571522E0, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_OWORD *)(a1 + 16);
  sub_24172570C(0, &qword_257150630, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  sub_2418A9810();
  sub_2418612BC((uint64_t)v6);
  sub_2418A864C();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_24181B534(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_OWORD *)(a1 + 16);
  sub_24172570C(0, &qword_257150630, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](&v6);
  v2 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ShowAllLabelsPicker() + 32));
  v4 = *v2;
  v3 = v2[1];
  v7 = v4;
  *(_QWORD *)&v8 = v3;
  sub_24172570C(0, &qword_2571522E0, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  return sub_2418A96D8();
}

uint64_t sub_24181B5E4()
{
  swift_getKeyPath();
  sub_24179A010(0);
  sub_2417935B8();
  sub_24172159C(&qword_257152228, (uint64_t (*)(uint64_t))sub_24179A010, MEMORY[0x24BEE12D8]);
  sub_24172159C(&qword_257152230, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t)&unk_2418D1168);
  sub_2417EAD48();
  swift_bridgeObjectRetain();
  return sub_2418A9888();
}

uint64_t sub_24181B6D4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t inited;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v0 = (id)HKUILocalizedStringForStateOfMindLabel();
  sub_2418A9DE0();

  sub_241721040();
  v1 = sub_2418A92D0();
  v3 = v2;
  v5 = v4 & 1;
  sub_2418A9144();
  v6 = sub_2418A9294();
  v8 = v7;
  LOBYTE(v0) = v9;
  swift_release();
  v10 = v0 & 1;
  sub_2417289EC(v1, v3, v5);
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x24BEE0D00];
  sub_24172887C(0, (unint64_t *)&qword_2543915E0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D8510;
  strcpy((char *)(inited + 32), "ShowAllLabels");
  *(_WORD *)(inited + 46) = -4864;
  *(_QWORD *)(inited + 48) = 0x6C6562614CLL;
  *(_QWORD *)(inited + 56) = 0xE500000000000000;
  v13 = (id)NSStringFromHKStateOfMindLabel();
  v14 = sub_2418A9DE0();
  v16 = v15;

  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 72) = v16;
  v17 = swift_bridgeObjectRetain();
  sub_2417739BC(v17);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, v11, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_2417289EC(v6, v8, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24181B968@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;

  v59 = a1;
  sub_24181C54C(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v58 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24181C3D0();
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v50 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24181C34C();
  v51 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24181C2D8(0);
  v57 = v11;
  v55 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v54 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24181C2BC(0);
  v49 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v56 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v17 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v18 = sub_2418A7EFC();
  v20 = v19;
  swift_bridgeObjectRelease();

  v60 = v18;
  v61 = v20;
  sub_241721040();
  v21 = sub_2418A92D0();
  v23 = v22;
  LOBYTE(v17) = v24 & 1;
  sub_2418A9144();
  v25 = sub_2418A9294();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  swift_release();
  v32 = v29 & 1;
  sub_2417289EC(v21, v23, (char)v17);
  swift_bridgeObjectRelease();
  v60 = v25;
  v61 = v27;
  v62 = v29 & 1;
  v63 = v31;
  v33 = v50;
  sub_2418A93D8();
  sub_2417289EC(v25, v27, v32);
  swift_bridgeObjectRelease();
  LODWORD(v21) = sub_2418A8E68();
  v35 = v52;
  v34 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v10, v33, v53);
  *(_DWORD *)&v10[*(int *)(v51 + 36)] = v21;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
  sub_24181C43C();
  v36 = v54;
  sub_2418A9498();
  sub_24172588C((uint64_t)v10, (uint64_t (*)(_QWORD))sub_24181C34C);
  v37 = sub_2418A927C();
  v38 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v58, 1, 1, v37);
  KeyPath = swift_getKeyPath();
  v40 = (uint64_t)v56;
  v41 = (uint64_t *)&v56[*(int *)(v49 + 36)];
  sub_24181C530(0);
  sub_2417289A8(v38, (uint64_t)v41 + *(int *)(v42 + 28), (uint64_t (*)(_QWORD))sub_24181C54C);
  *v41 = KeyPath;
  v43 = v55;
  v44 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v40, v36, v57);
  sub_24172588C(v38, (uint64_t (*)(_QWORD))sub_24181C54C);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v36, v44);
  v45 = v59;
  sub_2417289A8(v40, v59, (uint64_t (*)(_QWORD))sub_24181C2BC);
  sub_24181C2A0(0);
  v47 = v45 + *(int *)(v46 + 36);
  *(_QWORD *)v47 = 0;
  *(_QWORD *)(v47 + 8) = 0;
  *(_OWORD *)(v47 + 16) = xmmword_2418D8520;
  *(_BYTE *)(v47 + 32) = 0;
  return sub_24172588C(v40, (uint64_t (*)(_QWORD))sub_24181C2BC);
}

uint64_t sub_24181BD98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  type metadata accessor for ShowAllLabelsPicker();
  sub_24172570C(0, &qword_2571522E0, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  v2 = sub_24188F1D8(v4);
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24181BE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];

  v5 = swift_bridgeObjectRetain();
  v6 = sub_241760D34(v5);
  swift_bridgeObjectRelease();
  v11[0] = (uint64_t)v6;
  sub_241894600(v11);
  v7 = (uint64_t *)(a4 + *(int *)(type metadata accessor for ShowAllLabelsPicker() + 32));
  v9 = *v7;
  v8 = v7[1];
  v11[0] = v9;
  v11[1] = v8;
  sub_24172570C(0, &qword_2571522E0, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  return sub_2418A96D8();
}

uint64_t sub_24181BEE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t *v11;
  _BYTE v13[16];
  uint64_t v14;

  sub_24181BFC4();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = v1;
  sub_24181C03C();
  sub_24181CAC8();
  sub_2418A8814();
  KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 16))(a1, v8, v4);
  sub_24181CBCC(0);
  v11 = (uint64_t *)(a1 + *(int *)(v10 + 36));
  *v11 = KeyPath;
  v11[1] = 0;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_24181BFC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571521A0)
  {
    sub_2418A8754();
    sub_24181C03C();
    sub_24181CAC8();
    v0 = sub_2418A8820();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571521A0);
  }
}

void sub_24181C03C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571521A8)
  {
    sub_24181C098(255);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571521A8);
  }
}

void sub_24181C098(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_2571521B0)
  {
    sub_24181C174(255);
    v3 = v2;
    sub_24181C8C0(255);
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_241728434(&qword_2571522A8, (uint64_t (*)(uint64_t))sub_24181C174, sub_24181CA90, sub_24181CAAC);
    v7[3] = sub_24172159C(&qword_2571522C0, (uint64_t (*)(uint64_t))sub_24181C8C0, MEMORY[0x24BDEF170]);
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF3858], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_2571521B0);
  }
}

void sub_24181C174(uint64_t a1)
{
  sub_241728250(a1, &qword_2571521B8, (void (*)(uint64_t))sub_24181C190, sub_24181C86C);
}

void sub_24181C190()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571521C0)
  {
    type metadata accessor for Label(255);
    sub_24181C234();
    sub_24172159C(&qword_257152230, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t)&unk_2418D1168);
    sub_24181C6B8();
    v0 = sub_2418A924C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571521C0);
  }
}

void sub_24181C234()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571521C8)
  {
    sub_24181C2A0(255);
    sub_24181C5E0();
    v0 = sub_2418A98E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571521C8);
  }
}

void sub_24181C2A0(uint64_t a1)
{
  sub_241728250(a1, &qword_2571521D0, sub_24181C2BC, (void (*)(uint64_t))sub_24181C568);
}

void sub_24181C2BC(uint64_t a1)
{
  sub_241728250(a1, &qword_2571521D8, sub_24181C2D8, sub_24181C530);
}

void sub_24181C2D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_2571521E0)
  {
    sub_24181C34C();
    v5[0] = v2;
    v5[1] = sub_24181C43C();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF3488], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_2571521E0);
  }
}

void sub_24181C34C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571521E8)
  {
    sub_24181C3D0();
    sub_24172835C(255, (unint64_t *)&qword_257150D20, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571521E8);
  }
}

void sub_24181C3D0()
{
  unint64_t v0;
  uint64_t v1;
  _QWORD v2[2];

  if (!qword_2571521F0)
  {
    v2[0] = MEMORY[0x24BDF1FA8];
    v2[1] = MEMORY[0x24BDF1F80];
    v0 = MEMORY[0x24269D434](0, v2, MEMORY[0x24BDF2AA0], 0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571521F0);
  }
}

unint64_t sub_24181C43C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_2571521F8;
  if (!qword_2571521F8)
  {
    sub_24181C34C();
    v2 = v1;
    v3[2] = MEMORY[0x24BDF1FA8];
    v3[3] = MEMORY[0x24BDF1F80];
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = sub_24181C4C8();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2571521F8);
  }
  return result;
}

unint64_t sub_24181C4C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257150D38;
  if (!qword_257150D38)
  {
    sub_24172835C(255, (unint64_t *)&qword_257150D20, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF0710], v1);
    atomic_store(result, (unint64_t *)&qword_257150D38);
  }
  return result;
}

void sub_24181C530(uint64_t a1)
{
  sub_24172570C(a1, &qword_257152200, (uint64_t (*)(uint64_t))sub_24181C54C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
}

void sub_24181C54C(uint64_t a1)
{
  sub_24172570C(a1, &qword_257152208, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1D98], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_24181C568()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152210)
  {
    sub_2418A8E08();
    sub_24172159C(&qword_257152218, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF980], MEMORY[0x24BDEF978]);
    v0 = sub_2418A8E50();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152210);
  }
}

void sub_24181C5E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152220)
  {
    sub_24179A010(255);
    type metadata accessor for Label(255);
    sub_2417935B8();
    sub_24172159C(&qword_257152228, (uint64_t (*)(uint64_t))sub_24179A010, MEMORY[0x24BEE12D8]);
    sub_24172159C(&qword_257152230, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t)&unk_2418D1168);
    v0 = sub_2418A98A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152220);
  }
}

unint64_t sub_24181C6B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_257152238;
  if (!qword_257152238)
  {
    sub_24181C234();
    v2 = v1;
    v3[0] = sub_241728434(&qword_257152240, (uint64_t (*)(uint64_t))sub_24181C2A0, (uint64_t (*)(void))sub_24181C74C, sub_24181C7F0);
    v3[1] = sub_24181C80C();
    v3[2] = MEMORY[0x24BDF5138];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4AF8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257152238);
  }
  return result;
}

unint64_t sub_24181C74C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_257152248;
  if (!qword_257152248)
  {
    sub_24181C2BC(255);
    v2 = v1;
    sub_24181C34C();
    v4[2] = v3;
    v4[3] = sub_24181C43C();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_24172159C(&qword_257152250, (uint64_t (*)(uint64_t))sub_24181C530, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257152248);
  }
  return result;
}

uint64_t sub_24181C7F0()
{
  return sub_24172159C(&qword_257152258, (uint64_t (*)(uint64_t))sub_24181C568, MEMORY[0x24BDEFB48]);
}

unint64_t sub_24181C80C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_257152260;
  if (!qword_257152260)
  {
    sub_24181C5E0();
    v2 = v1;
    v3 = sub_2417EAD48();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4A08], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_257152260);
  }
  return result;
}

void sub_24181C86C(uint64_t a1)
{
  sub_24172570C(a1, &qword_257152268, (uint64_t (*)(uint64_t))sub_24181C888, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
}

void sub_24181C888(uint64_t a1)
{
  sub_24172570C(a1, &qword_257152270, (uint64_t (*)(uint64_t))sub_24181C8A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_24181C8A4(uint64_t a1)
{
  sub_24172570C(a1, &qword_257152278, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4CA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
}

void sub_24181C8C0(uint64_t a1)
{
  sub_24172570C(a1, &qword_257152280, (uint64_t (*)(uint64_t))sub_24181C8DC, MEMORY[0x24BDEF158]);
}

void sub_24181C8DC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257152288)
  {
    sub_241731234();
    sub_24181C948();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257152288);
  }
}

void sub_24181C948()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152290)
  {
    sub_241728250(255, &qword_257152298, sub_2417CAC30, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    sub_24181C9CC();
    v0 = sub_2418A858C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152290);
  }
}

unint64_t sub_24181C9CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_2571522A0;
  if (!qword_2571522A0)
  {
    sub_241728250(255, &qword_257152298, sub_2417CAC30, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v2 = v1;
    sub_24172835C(255, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    v4[2] = v3;
    v4[3] = sub_241731344();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_2417310D4();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_2571522A0);
  }
  return result;
}

uint64_t sub_24181CA90()
{
  return sub_24172159C(&qword_2571522B0, (uint64_t (*)(uint64_t))sub_24181C190, MEMORY[0x24BDF1A30]);
}

uint64_t sub_24181CAAC()
{
  return sub_24172159C(&qword_2571522B8, (uint64_t (*)(uint64_t))sub_24181C86C, MEMORY[0x24BDF1028]);
}

unint64_t sub_24181CAC8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[6];

  result = qword_2571522C8;
  if (!qword_2571522C8)
  {
    sub_24181C03C();
    v2 = v1;
    sub_24181C174(255);
    v4 = v3;
    sub_24181C8C0(255);
    v6[2] = v4;
    v6[3] = v5;
    v6[4] = sub_241728434(&qword_2571522A8, (uint64_t (*)(uint64_t))sub_24181C174, sub_24181CA90, sub_24181CAAC);
    v6[5] = sub_24172159C(&qword_2571522C0, (uint64_t (*)(uint64_t))sub_24181C8C0, MEMORY[0x24BDEF170]);
    v6[0] = swift_getOpaqueTypeConformance2();
    v6[1] = sub_2417D7214();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v6);
    atomic_store(result, (unint64_t *)&qword_2571522C8);
  }
  return result;
}

uint64_t sub_24181CBBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24181A448(*(_QWORD *)(v1 + 16), a1);
}

void sub_24181CBCC(uint64_t a1)
{
  sub_241728250(a1, &qword_2571522D0, (void (*)(uint64_t))sub_24181BFC4, (void (*)(uint64_t))sub_24173EF74);
}

uint64_t sub_24181CBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShowAllLabelsPicker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24181CC30@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ShowAllLabelsPicker();
  return sub_24181BD98(a1);
}

uint64_t objectdestroyTm_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for ShowAllLabelsPicker();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + ((v2 + 32) & ~v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 24);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v3 + *(int *)(v1 + 28);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A8EB0();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v9 = v6 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v10 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24181CE2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShowAllLabelsPicker() - 8) + 80);
  return sub_24181BE28(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

void sub_24181CE6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571522D8)
  {
    type metadata accessor for Label(255);
    sub_24172159C(&qword_257152230, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t)&unk_2418D1168);
    v0 = sub_2418A9F84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571522D8);
  }
}

uint64_t sub_24181CEE4@<X0>(uint64_t a1@<X8>)
{
  return sub_24181A9F0(a1);
}

uint64_t sub_24181CEEC()
{
  return sub_2418A8AB4();
}

uint64_t sub_24181CF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24181D18C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_24181C888, MEMORY[0x24BDEE440]);
}

uint64_t sub_24181CF30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24181AB88(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24181CF3C()
{
  return sub_24181D128(sub_24181B534);
}

uint64_t sub_24181CF48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24181ADC0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24181CF50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24181B0F8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for ShowAllLabelsPicker();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 24);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v3 + *(int *)(v1 + 28);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A8EB0();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v9 = v6 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v10 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24181D10C()
{
  return sub_24181D128(sub_24181B414);
}

uint64_t sub_24181D11C()
{
  return sub_24181D128((uint64_t (*)(uint64_t))sub_24181B060);
}

uint64_t sub_24181D128(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShowAllLabelsPicker() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_24181D164()
{
  return sub_24181B5E4();
}

uint64_t sub_24181D16C()
{
  return sub_2418A8AC0();
}

uint64_t sub_24181D18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v9 = a5(0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v14 - v11;
  sub_2417289A8(a1, (uint64_t)&v14 - v11, a5);
  return a6(v12);
}

uint64_t sub_24181D214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24181D18C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_24181C54C, MEMORY[0x24BDEE450]);
}

uint64_t sub_24181D238()
{
  return sub_241728434(&qword_2571522E8, (uint64_t (*)(uint64_t))sub_24181CBCC, sub_24181D26C, (uint64_t (*)(void))sub_241741D94);
}

uint64_t sub_24181D26C()
{
  return sub_24172159C(&qword_2571522F0, (uint64_t (*)(uint64_t))sub_24181BFC4, MEMORY[0x24BDED358]);
}

ValueMetadata *type metadata accessor for StateOfMindHeaderImage()
{
  return &type metadata for StateOfMindHeaderImage;
}

uint64_t sub_24181D298()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24181D2A8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;

  type metadata accessor for MentalHealthUIRepresentative();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_2418A969C();
  sub_2418A9414();
  return swift_release();
}

unint64_t sub_24181D35C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2571522F8;
  if (!qword_2571522F8)
  {
    sub_24181D3C4();
    v2 = v1;
    v3 = sub_2417310D4();
    v4[0] = MEMORY[0x24BDF40E8];
    v4[1] = v3;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_2571522F8);
  }
  return result;
}

void sub_24181D3C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152300)
  {
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152300);
  }
}

unint64_t HKMHDaySummary.representativeStateOfMind.getter()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t result;
  id v20;
  void *v21;
  id v22;
  id v23;
  char v24;
  void (*v25)(char *, uint64_t);
  void *v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_2418A8100();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v27 - v9;
  v11 = objc_msgSend((id)v1, sel_dailyStateOfMind);

  if (v11)
    return (unint64_t)objc_msgSend((id)v1, sel_dailyStateOfMind);
  v13 = objc_msgSend((id)v1, sel_momentaryStatesOfMind);
  sub_2417AB850();
  v14 = sub_2418A9EB8();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = (void *)sub_2418AA398();
    swift_bridgeObjectRelease();
    if (!v15)
      goto LABEL_28;
  }
  else
  {
    v15 = *(void **)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      goto LABEL_28;
  }
  if ((v14 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x24269CAD4](0, v14);
  }
  else
  {
    if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    v16 = *(id *)(v14 + 32);
  }
  v15 = v16;
  swift_bridgeObjectRelease();
  v17 = objc_msgSend((id)v1, sel_momentaryStatesOfMind);
  v1 = sub_2418A9EB8();

  if (!(v1 >> 62))
  {
    v18 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_10;
    goto LABEL_27;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  v18 = sub_2418AA398();
  swift_bridgeObjectRelease();
  if (!v18)
  {
LABEL_27:

LABEL_28:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_10:
  result = v18 - 1;
  if (__OFSUB__(v18, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_31:
    v20 = (id)MEMORY[0x24269CAD4](result, v1);
    goto LABEL_15;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v20 = *(id *)(v1 + 8 * result + 32);
LABEL_15:
    v21 = v20;
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(v15, sel_startDate);
    sub_2418A80C4();

    v23 = objc_msgSend(v21, sel_startDate);
    sub_2418A80C4();

    sub_24181D8A8();
    v24 = sub_2418A9D68();
    v25 = *(void (**)(char *, uint64_t))(v3 + 8);
    v25(v7, v2);
    v25(v10, v2);
    if ((v24 & 1) != 0)
      v26 = v15;
    else
      v26 = v21;
    if ((v24 & 1) != 0)
      v12 = v21;
    else
      v12 = v15;

    return (unint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_24181D71C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_24181D7C8(v6, a2, a3);
  return sub_24181D770;
}

uint64_t (*sub_24181D774(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_24181D83C(v6, a2, a3);
  return sub_24181D770;
}

void (*sub_24181D7C8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24269CAD4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_24181D834;
  }
  __break(1u);
  return result;
}

void sub_24181D834(id *a1)
{

}

void (*sub_24181D83C(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24269CAD4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_24181D8F0;
  }
  __break(1u);
  return result;
}

unint64_t sub_24181D8A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714FB70;
  if (!qword_25714FB70)
  {
    v1 = sub_2418A8100();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_25714FB70);
  }
  return result;
}

uint64_t *sub_24181D8F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(uint64_t *, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v89 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      v88 = v8;
      v87 = v6;
      if (v89(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = (char *)v4 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v13, v14, v15);
      *((_BYTE *)v4 + v11[6]) = *((_BYTE *)a2 + v11[6]);
      v17 = v11[7];
      v18 = (char *)v4 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_2418A84E4();
      v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v86(v18, v19, v20);
      v21 = v11[8];
      v22 = (char *)v4 + v21;
      v23 = (char *)a2 + v21;
      if (v89((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v22, v23, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v22, 0, 1, v7);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = (char *)v4 + v26;
      v28 = (char *)a2 + v26;
      if (v89((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v27, v28, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v27, 0, 1, v7);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = (char *)v4 + v31;
      v33 = (char *)a2 + v31;
      if (v89((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v32, v33, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v32, 0, 1, v7);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = (char *)v4 + v36;
      v38 = (char *)a2 + v36;
      if (v89((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v37, v38, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v37, 0, 1, v7);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = (char *)v4 + v41;
      v43 = (char *)a2 + v41;
      if (v89((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v42, v43, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v42, 0, 1, v7);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v86(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = (char *)v4 + v46;
      v48 = (char *)a2 + v46;
      if (v89((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v88;
      }
      else
      {
        v50 = v88;
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v47, v48, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v47, 0, 1, v7);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = (char *)v4 + v52;
      v54 = (char *)a2 + v52;
      if (v89((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = (char *)v4 + v57;
      v59 = (char *)a2 + v57;
      if (v89((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = (char *)v4 + v62;
      v64 = (char *)a2 + v62;
      if (v89((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = (char *)v4 + v67;
      v69 = (char *)a2 + v67;
      if (v89((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = (char *)v4 + v72;
      v74 = (char *)a2 + v72;
      if (v89((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      v6 = v87;
    }
    else
    {
      *v4 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    v77 = *(int *)(v6 + 20);
    v78 = *(int *)(v6 + 24);
    v79 = (uint64_t *)((char *)v4 + v77);
    v80 = (uint64_t *)((char *)a2 + v77);
    v81 = v80[1];
    *v79 = *v80;
    v79[1] = v81;
    v82 = (uint64_t *)((char *)v4 + v78);
    v83 = (uint64_t *)((char *)a2 + v78);
    v84 = v83[1];
    *v82 = *v83;
    v82[1] = v84;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24181E2C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v34)(uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_2418A8EB0();
    v3 = *(_QWORD *)(v2 - 8);
    v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    v5 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v6 = a1 + v5[5];
    v7 = sub_2418A87B4();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v8(v6, v7);
    v9 = a1 + v5[7];
    v10 = sub_2418A84E4();
    v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v34(v9, v10);
    v11 = a1 + v5[8];
    if (!v4(v11, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v2);
    v12 = _s6StylesV8TimelineVMa(0);
    v8(v11 + *(int *)(v12 + 20), v7);
    v13 = a1 + v5[9];
    if (!v4(v13, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v2);
    v14 = _s6StylesV6NoDataVMa(0);
    v8(v13 + *(int *)(v14 + 20), v7);
    v15 = a1 + v5[10];
    if (!v4(v15, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
    v16 = _s6StylesV11PlaceholderVMa(0);
    v8(v15 + *(int *)(v16 + 20), v7);
    v17 = a1 + v5[11];
    if (!v4(v17, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v2);
    v18 = _s6StylesV6SymbolVMa(0);
    v8(v17 + *(int *)(v18 + 20), v7);
    v19 = a1 + v5[12];
    if (!v4(v19, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    v20 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v8(v19 + *(int *)(v20 + 20), v7);
    v34(v19 + *(int *)(v20 + 28), v10);
    v21 = a1 + v5[13];
    if (!v4(v21, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v2);
    v22 = _s6StylesV5EmptyVMa(0);
    v8(v21 + *(int *)(v22 + 20), v7);
    v23 = a1 + v5[14];
    if (!v4(v23, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v23, v2);
    v24 = _s6StylesV5DailyVMa(0);
    v8(v23 + *(int *)(v24 + 20), v7);
    v25 = a1 + v5[15];
    if (!v4(v25, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v25, v2);
    v26 = _s6StylesV9MomentaryVMa(0);
    v8(v25 + *(int *)(v26 + 20), v7);
    v27 = a1 + v5[16];
    if (!v4(v27, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v2);
    v28 = _s6StylesV6HeaderVMa(0);
    v8(v27 + *(int *)(v28 + 20), v7);
    v29 = a1 + v5[17];
    if (!v4(v29, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v29, v2);
    v30 = _s6StylesV11ChartButtonVMa(0);
    v8(v29 + *(int *)(v30 + 20), v7);
    v31 = a1 + v5[18];
    if (!v4(v31, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v31, v2);
    v32 = _s6StylesV15LogButtonFooterVMa(0);
    v8(v31 + *(int *)(v32 + 20), v7);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *sub_24181E70C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(_QWORD *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v87 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
    v86 = v7;
    if (v87(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    v84 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v84(v16, v17, v18);
    v19 = v9[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v87((_QWORD *)((char *)a2 + v19), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v85 = a3;
    if (v87((_QWORD *)((char *)a2 + v24), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v87((_QWORD *)((char *)a2 + v29), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v30, 0, 1, v6);
    }
    v33 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    v34 = v9[11];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v87((_QWORD *)((char *)a2 + v34), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v35, 0, 1, v6);
    }
    v38 = _s6StylesV6SymbolVMa(0);
    v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    v39 = v9[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    if (v87((_QWORD *)((char *)a2 + v39), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v40, v41, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v40, 0, 1, v6);
    }
    v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v84(&v40[v43[7]], &v41[v43[7]], v18);
    v44 = v9[13];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v87((_QWORD *)((char *)a2 + v44), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v86;
    }
    else
    {
      v48 = v86;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v45, v46, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v45, 0, 1, v6);
    }
    v49 = _s6StylesV5EmptyVMa(0);
    v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    v50 = v9[14];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    if (v87((_QWORD *)((char *)a2 + v50), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    v54 = _s6StylesV5DailyVMa(0);
    v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v9[15];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v87((_QWORD *)((char *)a2 + v55), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v85;
    v59 = _s6StylesV9MomentaryVMa(0);
    v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    v60 = v9[16];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    if (v87((_QWORD *)((char *)a2 + v60), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    v64 = _s6StylesV6HeaderVMa(0);
    v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    v65 = v9[17];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    if (v87((_QWORD *)((char *)a2 + v65), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    v69 = _s6StylesV11ChartButtonVMa(0);
    v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    v70 = v9[18];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    if (v87((_QWORD *)((char *)a2 + v70), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    v74 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v75 = *(int *)(a3 + 20);
  v76 = *(int *)(a3 + 24);
  v77 = (_QWORD *)((char *)a1 + v75);
  v78 = (_QWORD *)((char *)a2 + v75);
  v79 = v78[1];
  *v77 = *v78;
  v77[1] = v79;
  v80 = (_QWORD *)((char *)a1 + v76);
  v81 = (_QWORD *)((char *)a2 + v76);
  v82 = v81[1];
  *v80 = *v81;
  v80[1] = v82;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_24181F0B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(_QWORD *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A8EB0();
      v7 = *(_QWORD *)(v6 - 8);
      v86 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
      v84 = a3;
      v85 = v7;
      if (v86(a2, 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2418A87B4();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
      v15 = v9[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_2418A84E4();
      v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v83(v16, v17, v18);
      v19 = v9[8];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (v86((_QWORD *)((char *)a2 + v19), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v20, v21, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v20, 0, 1, v6);
      }
      v23 = _s6StylesV8TimelineVMa(0);
      v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      v24 = v9[9];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      if (v86((_QWORD *)((char *)a2 + v24), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v25, v26, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v25, 0, 1, v6);
      }
      v28 = _s6StylesV6NoDataVMa(0);
      v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      v29 = v9[10];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      if (v86((_QWORD *)((char *)a2 + v29), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v30, v31, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v30, 0, 1, v6);
      }
      v33 = _s6StylesV11PlaceholderVMa(0);
      v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
      v34 = v9[11];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      if (v86((_QWORD *)((char *)a2 + v34), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v35, v36, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v35, 0, 1, v6);
      }
      v38 = _s6StylesV6SymbolVMa(0);
      v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
      v39 = v9[12];
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      if (v86((_QWORD *)((char *)a2 + v39), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v40, v41, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v40, 0, 1, v6);
      }
      v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v14(&v40[v43[5]], &v41[v43[5]], v13);
      v40[v43[6]] = v41[v43[6]];
      v83(&v40[v43[7]], &v41[v43[7]], v18);
      v44 = v9[13];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      if (v86((_QWORD *)((char *)a2 + v44), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v85;
      }
      else
      {
        v48 = v85;
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v45, v46, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v45, 0, 1, v6);
      }
      v49 = _s6StylesV5EmptyVMa(0);
      v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      v50 = v9[14];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      if (v86((_QWORD *)((char *)a2 + v50), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
      }
      v54 = _s6StylesV5DailyVMa(0);
      v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v9[15];
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      if (v86((_QWORD *)((char *)a2 + v55), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
      }
      v59 = _s6StylesV9MomentaryVMa(0);
      v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
      v60 = v9[16];
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      if (v86((_QWORD *)((char *)a2 + v60), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
      }
      v64 = _s6StylesV6HeaderVMa(0);
      v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
      v65 = v9[17];
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      if (v86((_QWORD *)((char *)a2 + v65), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
      }
      v69 = _s6StylesV11ChartButtonVMa(0);
      v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
      v70 = v9[18];
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      if (v86((_QWORD *)((char *)a2 + v70), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
      }
      v74 = _s6StylesV15LogButtonFooterVMa(0);
      v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
      a3 = v84;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v75 = *(int *)(a3 + 20);
  v76 = (_QWORD *)((char *)a1 + v75);
  v77 = (_QWORD *)((char *)a2 + v75);
  *v76 = *v77;
  v76[1] = v77[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v78 = *(int *)(a3 + 24);
  v79 = (_QWORD *)((char *)a1 + v78);
  v80 = (_QWORD *)((char *)a2 + v78);
  v81 = v80[1];
  *v79 = *v80;
  v79[1] = v81;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_24181FA84(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    v81 = v9;
    if (v82(a2, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2418A87B4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    v17 = v11[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_2418A84E4();
    v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
    v79(v18, v19, v20);
    v21 = v11[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (v82(&a2[v21], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v22, v23, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v22, 0, 1, v8);
    }
    v25 = _s6StylesV8TimelineVMa(0);
    v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    v26 = v11[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v80 = a3;
    if (v82(&a2[v26], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v27, v28, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v27, 0, 1, v8);
    }
    v30 = _s6StylesV6NoDataVMa(0);
    v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    v31 = v11[10];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (v82(&a2[v31], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v32, v33, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v32, 0, 1, v8);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    v36 = v11[11];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if (v82(&a2[v36], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v37, v38, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v37, 0, 1, v8);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    v41 = v11[12];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v82(&a2[v41], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v42, v43, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v42, 0, 1, v8);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v16(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v79(&v42[v45[7]], &v43[v45[7]], v20);
    v46 = v11[13];
    v47 = &a1[v46];
    v48 = &a2[v46];
    if (v82(&a2[v46], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = v81;
    }
    else
    {
      v50 = v81;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v47, v48, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v47, 0, 1, v8);
    }
    v51 = _s6StylesV5EmptyVMa(0);
    v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    v52 = v11[14];
    v53 = &a1[v52];
    v54 = &a2[v52];
    if (v82(&a2[v52], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    v56 = _s6StylesV5DailyVMa(0);
    v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = v11[15];
    v58 = &a1[v57];
    v59 = &a2[v57];
    if (v82(&a2[v57], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v80;
    v61 = _s6StylesV9MomentaryVMa(0);
    v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    v62 = v11[16];
    v63 = &a1[v62];
    v64 = &a2[v62];
    if (v82(&a2[v62], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    v66 = _s6StylesV6HeaderVMa(0);
    v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    v67 = v11[17];
    v68 = &a1[v67];
    v69 = &a2[v67];
    if (v82(&a2[v67], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    v71 = _s6StylesV11ChartButtonVMa(0);
    v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    v72 = v11[18];
    v73 = &a1[v72];
    v74 = &a2[v72];
    if (v82(&a2[v72], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    v76 = _s6StylesV15LogButtonFooterVMa(0);
    v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v77 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v77] = *(_OWORD *)&a2[v77];
  return a1;
}

char *sub_24182040C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A8EB0();
      v9 = *(_QWORD *)(v8 - 8);
      v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      v84 = a3;
      v85 = v9;
      if (v86(a2, 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      v17 = v11[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_2418A84E4();
      v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
      v83(v18, v19, v20);
      v21 = v11[8];
      v22 = &a1[v21];
      v23 = &a2[v21];
      if (v86(&a2[v21], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v22, v23, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v22, 0, 1, v8);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = &a1[v26];
      v28 = &a2[v26];
      if (v86(&a2[v26], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v27, v28, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v27, 0, 1, v8);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = &a1[v31];
      v33 = &a2[v31];
      if (v86(&a2[v31], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v32, v33, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v32, 0, 1, v8);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = &a1[v36];
      v38 = &a2[v36];
      if (v86(&a2[v36], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v37, v38, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v37, 0, 1, v8);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = &a1[v41];
      v43 = &a2[v41];
      if (v86(&a2[v41], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v42, v43, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v42, 0, 1, v8);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v83(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = &a1[v46];
      v48 = &a2[v46];
      if (v86(&a2[v46], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v85;
      }
      else
      {
        v50 = v85;
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v47, v48, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v47, 0, 1, v8);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = &a1[v52];
      v54 = &a2[v52];
      if (v86(&a2[v52], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = &a1[v57];
      v59 = &a2[v57];
      if (v86(&a2[v57], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = &a1[v62];
      v64 = &a2[v62];
      if (v86(&a2[v62], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = &a1[v67];
      v69 = &a2[v67];
      if (v86(&a2[v67], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = &a1[v72];
      v74 = &a2[v72];
      if (v86(&a2[v72], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      a3 = v84;
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  v77 = *(int *)(a3 + 20);
  v78 = &a1[v77];
  v79 = &a2[v77];
  v81 = *(_QWORD *)v79;
  v80 = *((_QWORD *)v79 + 1);
  *(_QWORD *)v78 = v81;
  *((_QWORD *)v78 + 1) = v80;
  swift_bridgeObjectRelease();
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_241820DBC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241820DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_241820E60()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_241820E6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
}

uint64_t _s9LogButtonVMa()
{
  uint64_t result;

  result = qword_257152360;
  if (!qword_257152360)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241820F3C()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241820FD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241820FE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t (*v31)(void);
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v49 = a1;
  v45 = sub_2418A88BC();
  MEMORY[0x24BDAC7A8](v45, v2);
  v4 = (_OWORD *)((char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v44 - v11;
  sub_24173EF58(0);
  v46 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24182155C();
  v47 = *(_QWORD *)(v17 - 8);
  v48 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s9LogButtonVMa();
  v50 = v1;
  sub_2417BDFCC();
  sub_2417BE25C();
  swift_retain();
  sub_2418A9708();
  sub_241860D60((uint64_t)v12);
  sub_24172588C((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  v21 = (char *)v4 + *(int *)(v45 + 20);
  v22 = *MEMORY[0x24BDEEB68];
  v23 = sub_2418A8BE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);
  __asm { FMOV            V0.2D, #18.0 }
  *v4 = _Q0;
  sub_241860D60((uint64_t)v9);
  sub_24172588C((uint64_t)v9, type metadata accessor for StateOfMindTimeline.Styles);
  v29 = sub_2418A95DC();
  KeyPath = swift_getKeyPath();
  v31 = MEMORY[0x24BDED998];
  sub_2417289A8((uint64_t)v4, (uint64_t)v16, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v32 = (uint64_t *)&v16[*(int *)(v46 + 36)];
  *v32 = KeyPath;
  v32[1] = v29;
  sub_24172588C((uint64_t)v4, (uint64_t (*)(_QWORD))v31);
  v33 = sub_2418A9960();
  v35 = v34;
  sub_2418215CC();
  v37 = v49;
  v38 = v49 + *(int *)(v36 + 36);
  sub_2417289A8((uint64_t)v16, v38, (uint64_t (*)(_QWORD))sub_24173EF58);
  sub_241821630();
  v40 = (uint64_t *)(v38 + *(int *)(v39 + 36));
  *v40 = v33;
  v40[1] = v35;
  v42 = v47;
  v41 = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 16))(v37, v20, v48);
  sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))sub_24173EF58);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v20, v41);
}

uint64_t sub_2418212B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _BYTE v49[7];
  _BYTE v50[7];
  char v51;
  _BYTE v52[7];

  v4 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(a1 + *(int *)(_s9LogButtonVMa() + 20));
  v9 = v8[1];
  v46 = *v8;
  v47 = v9;
  sub_241721040();
  swift_bridgeObjectRetain();
  v10 = sub_2418A92D0();
  v12 = v11;
  v14 = v13 & 1;
  sub_241860D60((uint64_t)v7);
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9180();
  v15 = sub_2418A9258();
  v17 = v16;
  v43[1] = v18;
  v20 = v19 & 1;
  sub_2417289EC(v10, v12, v14);
  swift_bridgeObjectRelease();
  sub_241860D60((uint64_t)v7);
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  v46 = sub_2418A9618();
  v44 = sub_2418A9270();
  v45 = v21;
  v23 = v22;
  v25 = v24;
  sub_2417289EC(v15, v17, v20);
  swift_release();
  swift_bridgeObjectRelease();
  v26 = sub_2418A9114();
  sub_241860D60((uint64_t)v7);
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A84A8();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  LOBYTE(v10) = sub_2418A90CC();
  sub_241860D60((uint64_t)v7);
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  result = sub_2418A84A8();
  v51 = 0;
  v48 = 0;
  *(_QWORD *)a2 = v44;
  *(_QWORD *)(a2 + 8) = v23;
  *(_BYTE *)(a2 + 16) = v25 & 1;
  *(_DWORD *)(a2 + 17) = v46;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v46 + 3);
  *(_QWORD *)(a2 + 24) = v45;
  *(_BYTE *)(a2 + 32) = v26;
  v36 = *(_DWORD *)v52;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v52[3];
  *(_DWORD *)(a2 + 33) = v36;
  *(_QWORD *)(a2 + 40) = v28;
  *(_QWORD *)(a2 + 48) = v30;
  *(_QWORD *)(a2 + 56) = v32;
  *(_QWORD *)(a2 + 64) = v34;
  *(_BYTE *)(a2 + 72) = v51;
  v37 = *(_DWORD *)v50;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v50[3];
  *(_DWORD *)(a2 + 73) = v37;
  *(_BYTE *)(a2 + 80) = v10;
  v38 = *(_DWORD *)v49;
  *(_DWORD *)(a2 + 84) = *(_DWORD *)&v49[3];
  *(_DWORD *)(a2 + 81) = v38;
  *(_QWORD *)(a2 + 88) = v39;
  *(_QWORD *)(a2 + 96) = v40;
  *(_QWORD *)(a2 + 104) = v41;
  *(_QWORD *)(a2 + 112) = v42;
  *(_BYTE *)(a2 + 120) = v48;
  return result;
}

void sub_24182155C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571523A0)
  {
    sub_2417BDFCC();
    sub_2417BE25C();
    v0 = sub_2418A9720();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571523A0);
  }
}

uint64_t sub_2418215BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2418212B4(*(_QWORD *)(v1 + 16), a1);
}

void sub_2418215CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571523A8)
  {
    sub_24182155C();
    sub_241821630();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571523A8);
  }
}

void sub_241821630()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C9C0)
  {
    sub_24173EF58(255);
    sub_241728434((unint64_t *)&qword_25714C9E0, (uint64_t (*)(uint64_t))sub_24173EF58, sub_2418216B0, (uint64_t (*)(void))sub_241741D94);
    v0 = sub_2418A8D18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C9C0);
  }
}

uint64_t sub_2418216B0()
{
  return sub_24172159C(&qword_25714C480, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED988]);
}

uint64_t sub_2418216CC()
{
  return sub_241728434(&qword_2571523B0, (uint64_t (*)(uint64_t))sub_2418215CC, sub_241821700, (uint64_t (*)(void))sub_24173F470);
}

uint64_t sub_241821700()
{
  return sub_24172159C(qword_2571523B8, (uint64_t (*)(uint64_t))sub_24182155C, MEMORY[0x24BDF43B0]);
}

uint64_t *sub_24182171C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t *v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  unsigned int (*v96)(char *, uint64_t, int *);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, _QWORD, uint64_t, int *);
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  unsigned int (*v126)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v127;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v126 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      v122 = v6;
      if (v126(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v13 = v12[5];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_2418A87B4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(v14, v15, v16);
      *((_BYTE *)a1 + v12[6]) = *((_BYTE *)a2 + v12[6]);
      v18 = v12[7];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_2418A84E4();
      v121 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      v121(v19, v20, v21);
      v22 = v12[8];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      if (v126((uint64_t *)((char *)a2 + v22), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v23, v24, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v23, 0, 1, v7);
      }
      v26 = _s6StylesV8TimelineVMa(0);
      v17(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      v27 = v12[9];
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v124 = v8;
      if (v126((uint64_t *)((char *)a2 + v27), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v28, v29, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v28, 0, 1, v7);
      }
      v31 = _s6StylesV6NoDataVMa(0);
      v17(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      v32 = v12[10];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      if (v126((uint64_t *)((char *)a2 + v32), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        v36 = v124;
      }
      else
      {
        v36 = v124;
        (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v33, v34, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v33, 0, 1, v7);
      }
      v37 = _s6StylesV11PlaceholderVMa(0);
      v17(&v33[*(int *)(v37 + 20)], &v34[*(int *)(v37 + 20)], v16);
      v38 = v12[11];
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      if (v126((uint64_t *)((char *)a2 + v38), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v39, v40, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v7);
      }
      v42 = _s6StylesV6SymbolVMa(0);
      v17(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v16);
      v43 = v12[12];
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      if (v126((uint64_t *)((char *)a2 + v43), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v44, v45, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v44, 0, 1, v7);
      }
      v47 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v17(&v44[v47[5]], &v45[v47[5]], v16);
      v44[v47[6]] = v45[v47[6]];
      v121(&v44[v47[7]], &v45[v47[7]], v21);
      v48 = v12[13];
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      if (v126((uint64_t *)((char *)a2 + v48), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v49, v50, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v49, 0, 1, v7);
      }
      v6 = v122;
      v52 = _s6StylesV5EmptyVMa(0);
      v17(&v49[*(int *)(v52 + 20)], &v50[*(int *)(v52 + 20)], v16);
      v49[*(int *)(v52 + 24)] = v50[*(int *)(v52 + 24)];
      v53 = v12[14];
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      if (v126((uint64_t *)((char *)a2 + v53), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v54, v55, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v54, 0, 1, v7);
      }
      v57 = _s6StylesV5DailyVMa(0);
      v17(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      v58 = v12[15];
      v59 = (char *)a1 + v58;
      v60 = (char *)a2 + v58;
      if (v126((uint64_t *)((char *)a2 + v58), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        v62 = v124;
      }
      else
      {
        v62 = v124;
        (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v59, v60, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v59, 0, 1, v7);
      }
      v63 = _s6StylesV9MomentaryVMa(0);
      v17(&v59[*(int *)(v63 + 20)], &v60[*(int *)(v63 + 20)], v16);
      v64 = v12[16];
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      if (v126((uint64_t *)((char *)a2 + v64), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v65, v66, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v65, 0, 1, v7);
      }
      v68 = _s6StylesV6HeaderVMa(0);
      v17(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v16);
      v69 = v12[17];
      v70 = (char *)a1 + v69;
      v71 = (char *)a2 + v69;
      if (v126((uint64_t *)((char *)a2 + v69), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v70, v71, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v70, 0, 1, v7);
      }
      v73 = _s6StylesV11ChartButtonVMa(0);
      v17(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v16);
      v74 = v12[18];
      v75 = (char *)a1 + v74;
      v76 = (char *)a2 + v74;
      if (v126((uint64_t *)((char *)a2 + v74), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v75, v76, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v75, 0, 1, v7);
      }
      v78 = _s6StylesV15LogButtonFooterVMa(0);
      v17(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v16);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v79 = *(int *)(v6 + 20);
    v125 = a1;
    v127 = a2;
    v80 = (char *)a1 + v79;
    v81 = (uint64_t *)((char *)a2 + v79);
    *(uint64_t *)((char *)a1 + v79) = *v81;
    v82 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
    v83 = v82[5];
    v84 = &v80[v83];
    v85 = (char *)v81 + v83;
    v86 = sub_2418A9CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
    v87 = v82[6];
    v88 = &v80[v87];
    v89 = (uint64_t *)((char *)v81 + v87);
    v90 = v89[1];
    *(_QWORD *)v88 = *v89;
    *((_QWORD *)v88 + 1) = v90;
    v91 = v82[7];
    v92 = &v80[v91];
    v93 = (char *)v81 + v91;
    v94 = (int *)_s5EntryVMa();
    v95 = *((_QWORD *)v94 - 1);
    v96 = *(unsigned int (**)(char *, uint64_t, int *))(v95 + 48);
    swift_bridgeObjectRetain();
    if (v96(v93, 1, v94))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      v98 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v92, v93, v98);
      v99 = v94[5];
      v100 = &v92[v99];
      v101 = &v93[v99];
      v102 = *((_QWORD *)v101 + 1);
      *(_QWORD *)v100 = *(_QWORD *)v101;
      *((_QWORD *)v100 + 1) = v102;
      v103 = v94[6];
      v104 = &v92[v103];
      v105 = &v93[v103];
      v106 = *((_QWORD *)v105 + 1);
      *(_QWORD *)v104 = *(_QWORD *)v105;
      *((_QWORD *)v104 + 1) = v106;
      v107 = v94[7];
      v108 = &v92[v107];
      v109 = &v93[v107];
      v110 = *((_QWORD *)v109 + 1);
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *((_QWORD *)v108 + 1) = v110;
      v111 = v94[8];
      v112 = &v92[v111];
      v113 = &v93[v111];
      v123 = v6;
      v114 = *((_QWORD *)v113 + 1);
      *(_QWORD *)v112 = *(_QWORD *)v113;
      *((_QWORD *)v112 + 1) = v114;
      *(_QWORD *)&v92[v94[9]] = *(_QWORD *)&v93[v94[9]];
      v115 = *(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v6 = v123;
      swift_bridgeObjectRetain();
      v115(v92, 0, 1, v94);
    }
    v11 = v125;
    *(_QWORD *)&v80[v82[8]] = *(uint64_t *)((char *)v81 + v82[8]);
    *(_QWORD *)&v80[v82[9]] = *(uint64_t *)((char *)v81 + v82[9]);
    v116 = *(int *)(v6 + 24);
    v117 = (uint64_t *)((char *)v125 + v116);
    v118 = (uint64_t *)((char *)v127 + v116);
    v119 = v118[1];
    *v117 = *v118;
    v117[1] = v119;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v11;
}

uint64_t sub_241822260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v44 = a2;
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(a1, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v8 = a1 + v7[5];
    v9 = sub_2418A87B4();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v8, v9);
    v11 = a1 + v7[7];
    v12 = sub_2418A84E4();
    v43 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v43(v11, v12);
    v13 = a1 + v7[8];
    if (!v6(v13, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v4);
    v14 = _s6StylesV8TimelineVMa(0);
    v10(v13 + *(int *)(v14 + 20), v9);
    v15 = a1 + v7[9];
    if (!v6(v15, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    v16 = _s6StylesV6NoDataVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    v17 = a1 + v7[10];
    if (!v6(v17, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    v18 = _s6StylesV11PlaceholderVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    v19 = a1 + v7[11];
    if (!v6(v19, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    v20 = _s6StylesV6SymbolVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    v21 = a1 + v7[12];
    if (!v6(v21, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    v22 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    v43(v21 + *(int *)(v22 + 28), v12);
    v23 = a1 + v7[13];
    if (!v6(v23, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    v24 = _s6StylesV5EmptyVMa(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    v25 = a1 + v7[14];
    if (!v6(v25, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v25, v4);
    v26 = _s6StylesV5DailyVMa(0);
    v10(v25 + *(int *)(v26 + 20), v9);
    v27 = a1 + v7[15];
    if (!v6(v27, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v27, v4);
    v28 = _s6StylesV9MomentaryVMa(0);
    v10(v27 + *(int *)(v28 + 20), v9);
    v29 = a1 + v7[16];
    if (!v6(v29, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
    v30 = _s6StylesV6HeaderVMa(0);
    v10(v29 + *(int *)(v30 + 20), v9);
    v31 = a1 + v7[17];
    if (!v6(v31, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v31, v4);
    v32 = _s6StylesV11ChartButtonVMa(0);
    v10(v31 + *(int *)(v32 + 20), v9);
    v33 = a1 + v7[18];
    if (!v6(v33, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v33, v4);
    v34 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v33 + *(int *)(v34 + 20), v9);
    a2 = v44;
  }
  else
  {
    swift_release();
  }
  v35 = a1 + *(int *)(a2 + 20);
  v36 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v37 = v35 + *(int *)(v36 + 20);
  v38 = sub_2418A9CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
  swift_bridgeObjectRelease();
  v39 = v35 + *(int *)(v36 + 28);
  v40 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40))
  {
    v41 = sub_2418A8130();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v39, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *sub_241822784(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  int *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int *v90;
  uint64_t v91;
  unsigned int (*v92)(char *, uint64_t, int *);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, _QWORD, uint64_t, int *);
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  void (*v117)(char *, char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  unsigned int (*v122)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v123;

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v122 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
    v118 = a3;
    v120 = v7;
    if (v122(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    v117 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v117(v16, v17, v18);
    v19 = v9[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v122((_QWORD *)((char *)a2 + v19), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    if (v122((_QWORD *)((char *)a2 + v24), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v122((_QWORD *)((char *)a2 + v29), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v30, 0, 1, v6);
    }
    v33 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    v34 = v9[11];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v122((_QWORD *)((char *)a2 + v34), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v35, 0, 1, v6);
    }
    v38 = _s6StylesV6SymbolVMa(0);
    v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    v39 = v9[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    if (v122((_QWORD *)((char *)a2 + v39), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v40, v41, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v40, 0, 1, v6);
    }
    v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v117(&v40[v43[7]], &v41[v43[7]], v18);
    v44 = v9[13];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v122((_QWORD *)((char *)a2 + v44), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v120;
    }
    else
    {
      v48 = v120;
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v45, v46, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v45, 0, 1, v6);
    }
    v49 = _s6StylesV5EmptyVMa(0);
    v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    v50 = v9[14];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    if (v122((_QWORD *)((char *)a2 + v50), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    v54 = _s6StylesV5DailyVMa(0);
    v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v9[15];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v122((_QWORD *)((char *)a2 + v55), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    v59 = _s6StylesV9MomentaryVMa(0);
    v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    v60 = v9[16];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    if (v122((_QWORD *)((char *)a2 + v60), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    v64 = _s6StylesV6HeaderVMa(0);
    v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    v65 = v9[17];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    if (v122((_QWORD *)((char *)a2 + v65), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    v69 = _s6StylesV11ChartButtonVMa(0);
    v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    v70 = v9[18];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    if (v122((_QWORD *)((char *)a2 + v70), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    a3 = v118;
    v74 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v75 = *(int *)(a3 + 20);
  v121 = a1;
  v123 = a2;
  v76 = (char *)a1 + v75;
  v77 = (_QWORD *)((char *)a2 + v75);
  *(_QWORD *)((char *)a1 + v75) = *v77;
  v78 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v79 = v78[5];
  v80 = &v76[v79];
  v81 = (char *)v77 + v79;
  v82 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
  v83 = v78[6];
  v84 = &v76[v83];
  v85 = (_QWORD *)((char *)v77 + v83);
  v86 = v85[1];
  *(_QWORD *)v84 = *v85;
  *((_QWORD *)v84 + 1) = v86;
  v87 = v78[7];
  v88 = &v76[v87];
  v89 = (char *)v77 + v87;
  v90 = (int *)_s5EntryVMa();
  v91 = *((_QWORD *)v90 - 1);
  v92 = *(unsigned int (**)(char *, uint64_t, int *))(v91 + 48);
  swift_bridgeObjectRetain();
  if (v92(v89, 1, v90))
  {
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  else
  {
    v94 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v88, v89, v94);
    v95 = v90[5];
    v96 = &v88[v95];
    v97 = &v89[v95];
    v98 = *((_QWORD *)v97 + 1);
    *(_QWORD *)v96 = *(_QWORD *)v97;
    *((_QWORD *)v96 + 1) = v98;
    v99 = v90[6];
    v100 = &v88[v99];
    v101 = &v89[v99];
    v102 = *((_QWORD *)v101 + 1);
    *(_QWORD *)v100 = *(_QWORD *)v101;
    *((_QWORD *)v100 + 1) = v102;
    v103 = v90[7];
    v104 = &v88[v103];
    v105 = &v89[v103];
    v106 = *((_QWORD *)v105 + 1);
    *(_QWORD *)v104 = *(_QWORD *)v105;
    *((_QWORD *)v104 + 1) = v106;
    v107 = v90[8];
    v108 = &v88[v107];
    v109 = &v89[v107];
    v119 = a3;
    v110 = *((_QWORD *)v109 + 1);
    *(_QWORD *)v108 = *(_QWORD *)v109;
    *((_QWORD *)v108 + 1) = v110;
    *(_QWORD *)&v88[v90[9]] = *(_QWORD *)&v89[v90[9]];
    v111 = *(void (**)(char *, _QWORD, uint64_t, int *))(v91 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3 = v119;
    swift_bridgeObjectRetain();
    v111(v88, 0, 1, v90);
  }
  *(_QWORD *)&v76[v78[8]] = *(_QWORD *)((char *)v77 + v78[8]);
  *(_QWORD *)&v76[v78[9]] = *(_QWORD *)((char *)v77 + v78[9]);
  v112 = *(int *)(a3 + 24);
  v113 = (_QWORD *)((char *)v121 + v112);
  v114 = (_QWORD *)((char *)v123 + v112);
  v115 = v114[1];
  *v113 = *v114;
  v113[1] = v115;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return v121;
}

_QWORD *sub_2418232C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _QWORD *v78;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int *v90;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, int *);
  int v93;
  int v94;
  uint64_t (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  void (*v110)(char *, _QWORD, uint64_t, int *);
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  unsigned int (*v133)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v134;

  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A8EB0();
      v7 = *(_QWORD *)(v6 - 8);
      v133 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
      v130 = a3;
      if (v133(a2, 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2418A87B4();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
      v15 = v9[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_2418A84E4();
      v129 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v129(v16, v17, v18);
      v19 = v9[8];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (v133((_QWORD *)((char *)a2 + v19), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v20, v21, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
      }
      v23 = _s6StylesV8TimelineVMa(0);
      v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      v24 = v9[9];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v131 = v7;
      if (v133((_QWORD *)((char *)a2 + v24), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      }
      v28 = _s6StylesV6NoDataVMa(0);
      v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      v29 = v9[10];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      if (v133((_QWORD *)((char *)a2 + v29), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        v33 = v131;
      }
      else
      {
        v33 = v131;
        (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v30, v31, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v30, 0, 1, v6);
      }
      v34 = _s6StylesV11PlaceholderVMa(0);
      v14(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v13);
      v35 = v9[11];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      if (v133((_QWORD *)((char *)a2 + v35), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v36, v37, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v6);
      }
      v39 = _s6StylesV6SymbolVMa(0);
      v14(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v13);
      v40 = v9[12];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      if (v133((_QWORD *)((char *)a2 + v40), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v41, v42, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v41, 0, 1, v6);
      }
      v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v14(&v41[v44[5]], &v42[v44[5]], v13);
      v41[v44[6]] = v42[v44[6]];
      v129(&v41[v44[7]], &v42[v44[7]], v18);
      v45 = v9[13];
      v46 = (char *)a1 + v45;
      v47 = (char *)a2 + v45;
      if (v133((_QWORD *)((char *)a2 + v45), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v46, v47, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v46, 0, 1, v6);
      }
      a3 = v130;
      v49 = _s6StylesV5EmptyVMa(0);
      v14(&v46[*(int *)(v49 + 20)], &v47[*(int *)(v49 + 20)], v13);
      v46[*(int *)(v49 + 24)] = v47[*(int *)(v49 + 24)];
      v50 = v9[14];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      if (v133((_QWORD *)((char *)a2 + v50), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v51, v52, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v51, 0, 1, v6);
      }
      v54 = _s6StylesV5DailyVMa(0);
      v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v9[15];
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      if (v133((_QWORD *)((char *)a2 + v55), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        v59 = v131;
      }
      else
      {
        v59 = v131;
        (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v56, v57, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v56, 0, 1, v6);
      }
      v60 = _s6StylesV9MomentaryVMa(0);
      v14(&v56[*(int *)(v60 + 20)], &v57[*(int *)(v60 + 20)], v13);
      v61 = v9[16];
      v62 = (char *)a1 + v61;
      v63 = (char *)a2 + v61;
      if (v133((_QWORD *)((char *)a2 + v61), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v62, v63, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v62, 0, 1, v6);
      }
      v65 = _s6StylesV6HeaderVMa(0);
      v14(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v13);
      v66 = v9[17];
      v67 = (char *)a1 + v66;
      v68 = (char *)a2 + v66;
      if (v133((_QWORD *)((char *)a2 + v66), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v67, v68, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v67, 0, 1, v6);
      }
      v70 = _s6StylesV11ChartButtonVMa(0);
      v14(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v13);
      v71 = v9[18];
      v72 = (char *)a1 + v71;
      v73 = (char *)a2 + v71;
      if (v133((_QWORD *)((char *)a2 + v71), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v72, v73, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v72, 0, 1, v6);
      }
      v75 = _s6StylesV15LogButtonFooterVMa(0);
      v14(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v13);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v76 = *(int *)(a3 + 20);
  v132 = a1;
  v134 = a2;
  v77 = (char *)a1 + v76;
  v78 = (_QWORD *)((char *)a2 + v76);
  *(_QWORD *)((char *)a1 + v76) = *v78;
  v79 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v80 = v79[5];
  v81 = &v77[v80];
  v82 = (char *)v78 + v80;
  v83 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 24))(v81, v82, v83);
  v84 = v79[6];
  v85 = &v77[v84];
  v86 = (_QWORD *)((char *)v78 + v84);
  *(_QWORD *)v85 = *v86;
  *((_QWORD *)v85 + 1) = v86[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v87 = v79[7];
  v88 = &v77[v87];
  v89 = (char *)v78 + v87;
  v90 = (int *)_s5EntryVMa();
  v91 = *((_QWORD *)v90 - 1);
  v92 = *(uint64_t (**)(char *, uint64_t, int *))(v91 + 48);
  v93 = v92(v88, 1, v90);
  v94 = v92(v89, 1, v90);
  if (v93)
  {
    if (!v94)
    {
      v97 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v88, v89, v97);
      v98 = v90[5];
      v99 = &v88[v98];
      v100 = &v89[v98];
      *(_QWORD *)v99 = *(_QWORD *)v100;
      *((_QWORD *)v99 + 1) = *((_QWORD *)v100 + 1);
      v101 = v90[6];
      v102 = &v88[v101];
      v103 = &v89[v101];
      *(_QWORD *)v102 = *(_QWORD *)v103;
      *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
      v104 = v90[7];
      v105 = &v88[v104];
      v106 = &v89[v104];
      *(_QWORD *)v105 = *(_QWORD *)v106;
      *((_QWORD *)v105 + 1) = *((_QWORD *)v106 + 1);
      v107 = v90[8];
      v108 = &v88[v107];
      v109 = &v89[v107];
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *((_QWORD *)v108 + 1) = *((_QWORD *)v109 + 1);
      *(_QWORD *)&v88[v90[9]] = *(_QWORD *)&v89[v90[9]];
      v110 = *(void (**)(char *, _QWORD, uint64_t, int *))(v91 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v110(v88, 0, 1, v90);
      goto LABEL_50;
    }
    v95 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v94)
    {
      v111 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 24))(v88, v89, v111);
      v112 = v90[5];
      v113 = &v88[v112];
      v114 = &v89[v112];
      *(_QWORD *)v113 = *(_QWORD *)v114;
      *((_QWORD *)v113 + 1) = *((_QWORD *)v114 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v115 = v90[6];
      v116 = &v88[v115];
      v117 = &v89[v115];
      *(_QWORD *)v116 = *(_QWORD *)v117;
      *((_QWORD *)v116 + 1) = *((_QWORD *)v117 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v118 = v90[7];
      v119 = &v88[v118];
      v120 = &v89[v118];
      *(_QWORD *)v119 = *(_QWORD *)v120;
      *((_QWORD *)v119 + 1) = *((_QWORD *)v120 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v121 = v90[8];
      v122 = &v88[v121];
      v123 = &v89[v121];
      *(_QWORD *)v122 = *(_QWORD *)v123;
      *((_QWORD *)v122 + 1) = *((_QWORD *)v123 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v88[v90[9]] = *(_QWORD *)&v89[v90[9]];
      goto LABEL_50;
    }
    sub_24172588C((uint64_t)v88, (uint64_t (*)(_QWORD))_s5EntryVMa);
    v95 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v95);
  memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
LABEL_50:
  *(_QWORD *)&v77[v79[8]] = *(_QWORD *)((char *)v78 + v79[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v77[v79[9]] = *(_QWORD *)((char *)v78 + v79[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v124 = *(int *)(a3 + 24);
  v125 = (_QWORD *)((char *)v132 + v124);
  v126 = (_QWORD *)((char *)v134 + v124);
  v127 = v126[1];
  *v125 = *v126;
  v125[1] = v127;
  swift_retain();
  swift_release();
  return v132;
}

char *sub_241823F6C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    v93 = a3;
    v94 = v9;
    if (v95(a2, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2418A87B4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    v17 = v11[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_2418A84E4();
    v92 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
    v92(v18, v19, v20);
    v21 = v11[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (v95(&a2[v21], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v22, v23, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v22, 0, 1, v8);
    }
    v25 = _s6StylesV8TimelineVMa(0);
    v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    v26 = v11[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    if (v95(&a2[v26], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v27, v28, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v27, 0, 1, v8);
    }
    v30 = _s6StylesV6NoDataVMa(0);
    v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    v31 = v11[10];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (v95(&a2[v31], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v32, v33, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v32, 0, 1, v8);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    v36 = v11[11];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if (v95(&a2[v36], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v37, v38, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v37, 0, 1, v8);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    v41 = v11[12];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v95(&a2[v41], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v42, v43, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v42, 0, 1, v8);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v16(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v92(&v42[v45[7]], &v43[v45[7]], v20);
    v46 = v11[13];
    v47 = &a1[v46];
    v48 = &a2[v46];
    if (v95(&a2[v46], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v47, v48, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v47, 0, 1, v8);
    }
    a3 = v93;
    v50 = _s6StylesV5EmptyVMa(0);
    v16(&v47[*(int *)(v50 + 20)], &v48[*(int *)(v50 + 20)], v15);
    v47[*(int *)(v50 + 24)] = v48[*(int *)(v50 + 24)];
    v51 = v11[14];
    v52 = &a1[v51];
    v53 = &a2[v51];
    if (v95(&a2[v51], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v52, v53, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v52, 0, 1, v8);
    }
    v55 = _s6StylesV5DailyVMa(0);
    v16(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v15);
    v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
    v56 = v11[15];
    v57 = &a1[v56];
    v58 = &a2[v56];
    if (v95(&a2[v56], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v57, v58, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v57, 0, 1, v8);
    }
    v60 = _s6StylesV9MomentaryVMa(0);
    v16(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v15);
    v61 = v11[16];
    v62 = &a1[v61];
    v63 = &a2[v61];
    if (v95(&a2[v61], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v62, v63, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v62, 0, 1, v8);
    }
    v65 = _s6StylesV6HeaderVMa(0);
    v16(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v15);
    v66 = v11[17];
    v67 = &a1[v66];
    v68 = &a2[v66];
    if (v95(&a2[v66], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v67, v68, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v67, 0, 1, v8);
    }
    v70 = _s6StylesV11ChartButtonVMa(0);
    v16(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v15);
    v71 = v11[18];
    v72 = &a1[v71];
    v73 = &a2[v71];
    if (v95(&a2[v71], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v72, v73, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v72, 0, 1, v8);
    }
    v75 = _s6StylesV15LogButtonFooterVMa(0);
    v16(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v76 = *(int *)(a3 + 20);
  v77 = &a1[v76];
  v78 = &a2[v76];
  *(_QWORD *)&a1[v76] = *(_QWORD *)&a2[v76];
  v79 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v80 = v79[5];
  v81 = &v77[v80];
  v82 = &v78[v80];
  v83 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
  *(_OWORD *)&v77[v79[6]] = *(_OWORD *)&v78[v79[6]];
  v84 = v79[7];
  v85 = &v77[v84];
  v86 = &v78[v84];
  v87 = (int *)_s5EntryVMa();
  v88 = *((_QWORD *)v87 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v88 + 48))(v86, 1, v87))
  {
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    v90 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v85, v86, v90);
    *(_OWORD *)&v85[v87[5]] = *(_OWORD *)&v86[v87[5]];
    *(_OWORD *)&v85[v87[6]] = *(_OWORD *)&v86[v87[6]];
    *(_OWORD *)&v85[v87[7]] = *(_OWORD *)&v86[v87[7]];
    *(_OWORD *)&v85[v87[8]] = *(_OWORD *)&v86[v87[8]];
    *(_QWORD *)&v85[v87[9]] = *(_QWORD *)&v86[v87[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v88 + 56))(v85, 0, 1, v87);
  }
  *(_QWORD *)&v77[v79[8]] = *(_QWORD *)&v78[v79[8]];
  *(_QWORD *)&v77[v79[9]] = *(_QWORD *)&v78[v79[9]];
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_241824A40(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, int *);
  int v97;
  int v98;
  uint64_t (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  unsigned int (*v127)(char *, uint64_t, uint64_t);
  char *v128;

  v3 = a3;
  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A8EB0();
      v9 = *(_QWORD *)(v8 - 8);
      v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v127(a2, 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      v17 = v11[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_2418A84E4();
      v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
      v124(v18, v19, v20);
      v21 = v11[8];
      v22 = &a1[v21];
      v23 = &a2[v21];
      if (v127(&a2[v21], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v22, v23, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v22, 0, 1, v8);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = &a1[v26];
      v28 = &a2[v26];
      v125 = v9;
      if (v127(&a2[v26], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v27, v28, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v27, 0, 1, v8);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = &a1[v31];
      v33 = &a2[v31];
      if (v127(&a2[v31], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        v35 = v125;
      }
      else
      {
        v35 = v125;
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v32, v33, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v32, 0, 1, v8);
      }
      v36 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v36 + 20)], &v33[*(int *)(v36 + 20)], v15);
      v37 = v11[11];
      v38 = &a1[v37];
      v39 = &a2[v37];
      if (v127(&a2[v37], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v38, v39, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v8);
      }
      v41 = _s6StylesV6SymbolVMa(0);
      v16(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v15);
      v42 = v11[12];
      v43 = &a1[v42];
      v44 = &a2[v42];
      if (v127(&a2[v42], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v43, v44, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v43, 0, 1, v8);
      }
      v46 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v43[v46[5]], &v44[v46[5]], v15);
      v43[v46[6]] = v44[v46[6]];
      v124(&v43[v46[7]], &v44[v46[7]], v20);
      v47 = v11[13];
      v48 = &a1[v47];
      v49 = &a2[v47];
      if (v127(&a2[v47], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v48, v49, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v48, 0, 1, v8);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v48[*(int *)(v51 + 20)], &v49[*(int *)(v51 + 20)], v15);
      v48[*(int *)(v51 + 24)] = v49[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = &a1[v52];
      v54 = &a2[v52];
      if (v127(&a2[v52], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v53, v54, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v53, 0, 1, v8);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = &a1[v57];
      v59 = &a2[v57];
      if (v127(&a2[v57], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        v61 = v125;
      }
      else
      {
        v61 = v125;
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v58, v59, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v58, 0, 1, v8);
      }
      v62 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v62 + 20)], &v59[*(int *)(v62 + 20)], v15);
      v63 = v11[16];
      v64 = &a1[v63];
      v65 = &a2[v63];
      if (v127(&a2[v63], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v64, v65, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v64, 0, 1, v8);
      }
      v67 = _s6StylesV6HeaderVMa(0);
      v16(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v15);
      v68 = v11[17];
      v69 = &a1[v68];
      v70 = &a2[v68];
      if (v127(&a2[v68], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v69, v70, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v69, 0, 1, v8);
      }
      v72 = _s6StylesV11ChartButtonVMa(0);
      v16(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v15);
      v73 = v11[18];
      v74 = &a1[v73];
      v75 = &a2[v73];
      if (v127(&a2[v73], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v74, v75, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v74, 0, 1, v8);
      }
      v3 = a3;
      v77 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  v78 = *(int *)(v3 + 20);
  v79 = &a1[v78];
  v128 = a2;
  v80 = &a2[v78];
  *(_QWORD *)&a1[v78] = *(_QWORD *)&a2[v78];
  v81 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v82 = v81[5];
  v83 = &v79[v82];
  v84 = &v80[v82];
  v85 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 40))(v83, v84, v85);
  v86 = v81[6];
  v87 = &v79[v86];
  v88 = &v80[v86];
  v90 = *(_QWORD *)v88;
  v89 = *((_QWORD *)v88 + 1);
  *(_QWORD *)v87 = v90;
  *((_QWORD *)v87 + 1) = v89;
  swift_bridgeObjectRelease();
  v91 = v81[7];
  v92 = &v79[v91];
  v93 = &v80[v91];
  v94 = (int *)_s5EntryVMa();
  v95 = *((_QWORD *)v94 - 1);
  v96 = *(uint64_t (**)(char *, uint64_t, int *))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (v97)
  {
    if (!v98)
    {
      v101 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v92, v93, v101);
      *(_OWORD *)&v92[v94[5]] = *(_OWORD *)&v93[v94[5]];
      *(_OWORD *)&v92[v94[6]] = *(_OWORD *)&v93[v94[6]];
      *(_OWORD *)&v92[v94[7]] = *(_OWORD *)&v93[v94[7]];
      *(_OWORD *)&v92[v94[8]] = *(_OWORD *)&v93[v94[8]];
      *(_QWORD *)&v92[v94[9]] = *(_QWORD *)&v93[v94[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56))(v92, 0, 1, v94);
      goto LABEL_49;
    }
    v99 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v98)
    {
      v102 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 40))(v92, v93, v102);
      v103 = v94[5];
      v104 = &v92[v103];
      v105 = &v93[v103];
      v107 = *(_QWORD *)v105;
      v106 = *((_QWORD *)v105 + 1);
      *(_QWORD *)v104 = v107;
      *((_QWORD *)v104 + 1) = v106;
      swift_bridgeObjectRelease();
      v108 = v94[6];
      v109 = &v92[v108];
      v110 = &v93[v108];
      v112 = *(_QWORD *)v110;
      v111 = *((_QWORD *)v110 + 1);
      *(_QWORD *)v109 = v112;
      *((_QWORD *)v109 + 1) = v111;
      swift_bridgeObjectRelease();
      v113 = v94[7];
      v114 = &v92[v113];
      v115 = &v93[v113];
      v117 = *(_QWORD *)v115;
      v116 = *((_QWORD *)v115 + 1);
      *(_QWORD *)v114 = v117;
      *((_QWORD *)v114 + 1) = v116;
      swift_bridgeObjectRelease();
      v118 = v94[8];
      v119 = &v92[v118];
      v120 = &v93[v118];
      v122 = *(_QWORD *)v120;
      v121 = *((_QWORD *)v120 + 1);
      *(_QWORD *)v119 = v122;
      *((_QWORD *)v119 + 1) = v121;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v92[v94[9]] = *(_QWORD *)&v93[v94[9]];
      goto LABEL_49;
    }
    sub_24172588C((uint64_t)v92, (uint64_t (*)(_QWORD))_s5EntryVMa);
    v99 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v99);
  memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
LABEL_49:
  *(_QWORD *)&v79[v81[8]] = *(_QWORD *)&v80[v81[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v79[v81[9]] = *(_QWORD *)&v80[v81[9]];
  swift_bridgeObjectRelease();
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&v128[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_241825614()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241825620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_2418256E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2418256EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for StateOfMindTimeline.DaySummary();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t _s16EntryLimitedViewVMa()
{
  uint64_t result;

  result = qword_257152418;
  if (!qword_257152418)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2418257E4()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for StateOfMindTimeline.DaySummary();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_24182588C()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_24182589C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  id result;
  void *v44;
  unsigned int v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t KeyPath;
  uint64_t (*v68)(void);
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(void);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char v102;
  uint64_t v103;

  v98 = a1;
  v2 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v95 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_2418A88BC();
  MEMORY[0x24BDAC7A8](v99, v5);
  v97 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173EF58(0);
  v93 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v96 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = _s14ShowMoreButtonVMa();
  MEMORY[0x24BDAC7A8](v86, v10);
  v12 = (uint64_t *)((char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v89 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v14 = MEMORY[0x24BDAC7A8](v89, v13);
  v88 = (uint64_t)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v94 = (uint64_t)&v82 - v18;
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v82 - v20;
  v85 = type metadata accessor for StateOfMindTimeline.DaySummary();
  MEMORY[0x24BDAC7A8](v85, v22);
  v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = _s13EntryBaseViewVMa();
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (uint64_t *)((char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = sub_241825FB8();
  MEMORY[0x24BDAC7A8](v82, v29);
  v31 = (double *)((char *)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241826080(0);
  v87 = v32;
  MEMORY[0x24BDAC7A8](v32, v33);
  v92 = (char *)&v82 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24182609C(0);
  v90 = v35;
  MEMORY[0x24BDAC7A8](v35, v36);
  v91 = (char *)&v82 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = _s16EntryLimitedViewVMa();
  v83 = v1 + *(int *)(v38 + 20);
  sub_2417289A8(v83, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  *v28 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  *(_QWORD *)&v84 = v39;
  swift_storeEnumTagMultiPayload();
  sub_241731B4C((uint64_t)v24, (uint64_t)v28 + *(int *)(v25 + 20), (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  *(uint64_t *)((char *)v28 + *(int *)(v25 + 24)) = 0;
  v40 = (uint64_t *)(v1 + *(int *)(v38 + 24));
  v41 = *v40;
  v42 = v40[1];
  v100 = v1;
  sub_241860D60((uint64_t)v21);
  sub_24172588C((uint64_t)v21, type metadata accessor for StateOfMindTimeline.Styles);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v44 = result;
    v45 = objc_msgSend(result, sel_isiPad);

    v46 = 462.0;
    if (v45)
      v46 = 490.0;
    v47 = *(_QWORD *)(v83 + *(int *)(v85 + 36));
    *v31 = v46;
    v31[1] = v46;
    *((_BYTE *)v31 + 16) = 0;
    *((_QWORD *)v31 + 3) = v41;
    *((_QWORD *)v31 + 4) = v42;
    v48 = v82;
    sub_2417289A8((uint64_t)v28, (uint64_t)v31 + *(int *)(v82 + 60), (uint64_t (*)(_QWORD))_s13EntryBaseViewVMa);
    v49 = (uint64_t)v31 + *(int *)(v48 + 64);
    *v12 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    v50 = v86;
    v51 = (uint64_t *)((char *)v12 + *(int *)(v86 + 20));
    *v51 = v41;
    v51[1] = v42;
    *(uint64_t *)((char *)v12 + *(int *)(v50 + 24)) = v47;
    sub_241731B4C((uint64_t)v12, v49, (uint64_t (*)(_QWORD))_s14ShowMoreButtonVMa);
    v52 = (char *)v31 + *(int *)(v48 + 68);
    v101 = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_2418A96C0();
    v53 = v103;
    *v52 = v102;
    *((_QWORD *)v52 + 1) = v53;
    sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))_s13EntryBaseViewVMa);
    v54 = v94;
    sub_241860D60(v94);
    sub_24172588C(v54, type metadata accessor for StateOfMindTimeline.Styles);
    v55 = v97;
    v56 = &v97[*(int *)(v99 + 20)];
    LODWORD(v86) = *MEMORY[0x24BDEEB68];
    v57 = v86;
    v58 = sub_2418A8BE0();
    v85 = *(_QWORD *)(*(_QWORD *)(v58 - 8) + 104);
    ((void (*)(char *, uint64_t, uint64_t))v85)(v56, v57, v58);
    __asm { FMOV            V0.2D, #18.0 }
    v84 = _Q0;
    *v55 = _Q0;
    v64 = v88;
    sub_241860D60(v88);
    v65 = v95;
    sub_2417289A8(v64 + *(int *)(v89 + 48), v95, type metadata accessor for StateOfMindTimeline.Styles.Entry);
    sub_24172588C(v64, type metadata accessor for StateOfMindTimeline.Styles);
    v66 = sub_2417CC290();
    sub_24172588C(v65, type metadata accessor for StateOfMindTimeline.Styles.Entry);
    KeyPath = swift_getKeyPath();
    v68 = MEMORY[0x24BDED998];
    v69 = v96;
    sub_2417289A8((uint64_t)v55, v96, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
    v70 = (uint64_t *)(v69 + *(int *)(v93 + 36));
    *v70 = KeyPath;
    v70[1] = v66;
    sub_24172588C((uint64_t)v55, (uint64_t (*)(_QWORD))v68);
    v71 = sub_2418A9960();
    v73 = v72;
    v74 = (uint64_t)v92;
    v75 = (uint64_t)&v92[*(int *)(v87 + 36)];
    sub_2417289A8(v69, v75, (uint64_t (*)(_QWORD))sub_24173EF58);
    sub_241821630();
    v77 = (uint64_t *)(v75 + *(int *)(v76 + 36));
    *v77 = v71;
    v77[1] = v73;
    sub_2417289A8((uint64_t)v31, v74, (uint64_t (*)(_QWORD))sub_241825FB8);
    sub_24172588C(v69, (uint64_t (*)(_QWORD))sub_24173EF58);
    sub_24172588C((uint64_t)v31, (uint64_t (*)(_QWORD))sub_241825FB8);
    sub_241860D60(v54);
    sub_24172588C(v54, type metadata accessor for StateOfMindTimeline.Styles);
    ((void (*)(char *, _QWORD, uint64_t))v85)((char *)v55 + *(int *)(v99 + 20), v86, v58);
    *v55 = v84;
    v78 = (uint64_t)v91;
    v79 = (uint64_t)&v91[*(int *)(v90 + 36)];
    v80 = MEMORY[0x24BDED998];
    sub_2417289A8((uint64_t)v55, v79, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
    sub_241730A70();
    *(_WORD *)(v79 + *(int *)(v81 + 36)) = 256;
    sub_2417289A8(v74, v78, (uint64_t (*)(_QWORD))sub_241826080);
    sub_24172588C((uint64_t)v55, (uint64_t (*)(_QWORD))v80);
    sub_24172588C(v74, (uint64_t (*)(_QWORD))sub_241826080);
    return (id)sub_241731B4C(v78, v98, (uint64_t (*)(_QWORD))sub_24182609C);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241825FB8()
{
  uint64_t result;

  result = qword_257152458;
  if (!qword_257152458)
  {
    _s13EntryBaseViewVMa();
    _s14ShowMoreButtonVMa();
    sub_24172159C(&qword_257150A88, (uint64_t (*)(uint64_t))_s13EntryBaseViewVMa, (uint64_t)&unk_2418D9BF8);
    sub_24172159C(&qword_25714C458, (uint64_t (*)(uint64_t))_s14ShowMoreButtonVMa, (uint64_t)&unk_2418DB444);
    type metadata accessor for UnlimitedHeightVStackWithFooter();
  }
  return result;
}

void sub_241826080(uint64_t a1)
{
  sub_241728250(a1, &qword_257152460, (void (*)(uint64_t))sub_241825FB8, (void (*)(uint64_t))sub_241821630);
}

void sub_24182609C(uint64_t a1)
{
  sub_241728250(a1, &qword_257152468, sub_241826080, (void (*)(uint64_t))sub_241730A70);
}

uint64_t sub_2418260C4()
{
  return sub_241728434(&qword_257152470, (uint64_t (*)(uint64_t))sub_24182609C, sub_2418260F8, sub_2417314D0);
}

uint64_t sub_2418260F8()
{
  return sub_241728434(&qword_257152478, (uint64_t (*)(uint64_t))sub_241826080, sub_24182611C, (uint64_t (*)(void))sub_24173F470);
}

uint64_t sub_24182611C()
{
  return sub_24172159C(&qword_257152480, (uint64_t (*)(uint64_t))sub_241825FB8, (uint64_t)&unk_2418D3740);
}

uint64_t sub_241826138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2418A9F60();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2418A9F54();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_2417A7664(a1, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2418A9F18();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24182628C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  return swift_release();
}

uint64_t sub_2418262F0()
{
  return sub_2418271AC();
}

uint64_t AssessmentFeatureModel.__allocating_init(featureStatusManager:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = swift_allocObject();
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x24BDAC7A8](v5, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_24182A4E8((uint64_t)v7, v2, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

uint64_t AssessmentFeatureModel.init(featureStatusManager:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x24BDAC7A8](v5, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_24182A4E8((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

uint64_t sub_24182645C()
{
  return sub_241827228((uint64_t)&unk_2511B2A60, (uint64_t)sub_24182B9E0);
}

uint64_t sub_241826470(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[8];

  sub_24182A85C(0);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = &v13[-v8];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = sub_2418A82C8();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v9, a1, v11);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24182B8C8((uint64_t)v9, (uint64_t)v6);
    swift_retain();
    sub_2418A8424();
    sub_24182B90C((uint64_t)v9);
    swift_getKeyPath();
    swift_getKeyPath();
    v13[7] = 2;
    return sub_2418A8424();
  }
  return result;
}

id sub_2418265E4()
{
  return sub_2418265FC();
}

id sub_2418265F0()
{
  return sub_2418265FC();
}

id sub_2418265FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v12;

  v0 = sub_2418A82C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24182A85C(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v8, 1, v0))
  {
    sub_24182B90C((uint64_t)v8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v8, v0);
    sub_24182B90C((uint64_t)v8);
    v10 = (void *)sub_2418A82D4();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    v9 = objc_msgSend(v10, sel_areAllRequirementsSatisfied);

  }
  return v9;
}

uint64_t sub_241826764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  void *v11;
  _BYTE v12[15];
  char v13;

  v0 = sub_2418A82C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24182A85C(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  if (v13 == 2)
  {
    if ((sub_2418265F0() & 1) != 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2418A8418();
      swift_release();
      swift_release();
      if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v1 + 48))(v8, 1, v0))
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v4, v8, v0);
        sub_24182B90C((uint64_t)v8);
        v11 = (void *)sub_2418A82D4();
        (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v4, v0);
        v9 = sub_2418AA1C4();

        return v9 & 1;
      }
      sub_24182B90C((uint64_t)v8);
    }
    v9 = 0;
  }
  else
  {
    v9 = v13 & 1;
  }
  return v9 & 1;
}

uint64_t sub_241826934(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[16];

  v3 = *v1;
  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v11[-v6];
  swift_getKeyPath();
  swift_getKeyPath();
  v11[15] = a1;
  swift_retain();
  sub_2418A8424();
  v8 = sub_2418A9F60();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = v1;
  *(_BYTE *)(v9 + 40) = a1;
  *(_QWORD *)(v9 + 48) = v3;
  swift_retain();
  sub_241826138((uint64_t)v7, (uint64_t)&unk_257152528, v9);
  return swift_release();
}

uint64_t sub_241826A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v6 + 136) = a5;
  *(_QWORD *)(v6 + 48) = a4;
  *(_QWORD *)(v6 + 56) = a6;
  v7 = sub_2418A8340();
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  sub_24172887C(0, &qword_257152530, MEMORY[0x24BEE1328], MEMORY[0x24BE45B58]);
  *(_QWORD *)(v6 + 88) = v8;
  *(_QWORD *)(v6 + 96) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 104) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241826B04()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[6] + 16), *(_QWORD *)(v0[6] + 40));
  v0[14] = sub_2418A82E0();
  swift_getObjectType();
  sub_2418AA098();
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  *v1 = v0;
  v1[1] = sub_241826BA4;
  return sub_2418AA188();
}

uint64_t sub_241826BA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*v1 + 96);
  v2 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = *v1;
  *(_QWORD *)(v5 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_unknownObjectRelease();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_241826C5C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t type;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(void **)(v0 + 128);
  sub_2418A8328();
  v2 = v1;
  swift_retain();
  v3 = v1;
  swift_retain();
  v4 = sub_2418A8334();
  v5 = sub_2418AA044();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 128);
    v25 = *(_QWORD *)(v0 + 72);
    v26 = *(_QWORD *)(v0 + 64);
    v27 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v28 = v24;
    *(_DWORD *)v8 = 136446722;
    type = v5;
    v9 = sub_2418AA5D8();
    *(_QWORD *)(v0 + 16) = sub_24176024C(v9, v10, &v28);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 40));
    v11 = (void *)sub_2418A82F8();
    v12 = sub_2418A9DE0();
    v14 = v13;

    *(_QWORD *)(v0 + 24) = sub_24176024C(v12, v14, &v28);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 22) = 2082;
    *(_QWORD *)(v0 + 32) = v6;
    v15 = v6;
    sub_2417609B0();
    v16 = sub_2418A9E04();
    *(_QWORD *)(v0 + 40) = sub_24176024C(v16, v17, &v28);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24171C000, v4, type, "[%{public}s:%{public}s] Error setting feature setting: %{public}s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v24, -1, -1);
    MEMORY[0x24269D548](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
  }
  else
  {
    v18 = *(void **)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 72);
    v19 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 64);

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AssessmentFeatureModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  sub_24172570C(0, &qword_254391458, (uint64_t (*)(uint64_t))sub_24182A85C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  sub_24182A878(0, &qword_254391460, &qword_254391470, MEMORY[0x24BEE1328]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AssessmentFeatureModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  sub_24172570C(0, &qword_254391458, (uint64_t (*)(uint64_t))sub_24182A85C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  sub_24182A878(0, &qword_254391460, &qword_254391470, MEMORY[0x24BEE1328]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2418270E8()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24182715C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AssessmentFeatureModel(0);
  result = sub_2418A83B8();
  *a1 = result;
  return result;
}

uint64_t sub_241827198()
{
  return sub_2418271AC();
}

uint64_t sub_2418271AC()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_241827214()
{
  return sub_241827228((uint64_t)&unk_2511B2A38, (uint64_t)sub_24182B8B8);
}

uint64_t sub_241827228(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[5];
  id v16;

  v15[1] = a2;
  sub_24172570C(0, &qword_254391088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v15 - v5;
  sub_24182B744();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  v15[2] = sub_2418A8304();
  sub_241762EFC(0, (unint64_t *)&qword_2543915E8);
  v16 = (id)sub_2418AA0D4();
  v13 = sub_2418AA0C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  sub_24182B7FC();
  sub_24182B09C(&qword_254391448, 255, (uint64_t (*)(uint64_t))sub_24182B7FC, MEMORY[0x24BDB9AF8]);
  sub_24182B860();
  sub_2418A8454();
  sub_2417A7664((uint64_t)v6, &qword_254391088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0]);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_24182B09C(&qword_254391438, 255, (uint64_t (*)(uint64_t))sub_24182B744, MEMORY[0x24BDB9A08]);
  sub_2418A846C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  swift_beginAccess();
  sub_2418A83A0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_241827490(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  sub_24182A85C(0);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v13 - v8;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = sub_2418A82C8();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a1, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24182B8C8((uint64_t)v9, (uint64_t)v6);
    swift_retain_n();
    sub_2418A8424();
    sub_24182B90C((uint64_t)v9);
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v14) = 2;
    swift_retain();
    sub_2418A8424();
    swift_getKeyPath();
    swift_getKeyPath();
    v14 = 0;
    v15 = 1;
    swift_retain();
    sub_2418A8424();
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v14) = 2;
    return sub_2418A8424();
  }
  return result;
}

uint64_t sub_2418276A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  char v21;

  sub_24172887C(0, &qword_257152518, MEMORY[0x24BEE1768], MEMORY[0x24BE45B58]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v3);
  v5 = (char *)&v20 - v4;
  sub_24182A85C(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2418A82BC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  if (v21 != 1)
    return v20;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  v15 = sub_2418A82C8();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
  {
    sub_24182B90C((uint64_t)v9);
    return *MEMORY[0x24BE65D00];
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v9, v15) != *MEMORY[0x24BE45748])
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
    return *MEMORY[0x24BE65D00];
  }
  (*(void (**)(char *, uint64_t))(v16 + 96))(v9, v15);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
  v18 = (void *)sub_2418A82B0();
  sub_2418A9DE0();
  sub_2418AA08C();
  sub_2418AA0A4();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  if (v21)
    v17 = *MEMORY[0x24BE65D00];
  else
    v17 = v20;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v17;
}

uint64_t sub_24182795C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  char v12;

  v3 = *v1;
  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - v6;
  swift_getKeyPath();
  swift_getKeyPath();
  v11 = a1;
  v12 = 0;
  swift_retain();
  sub_2418A8424();
  v8 = sub_2418A9F60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v1;
  v9[5] = a1;
  v9[6] = v3;
  swift_retain();
  sub_241826138((uint64_t)v7, (uint64_t)&unk_257152510, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_241827A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_2418A8340();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  sub_24172887C(0, &qword_257152518, MEMORY[0x24BEE1768], MEMORY[0x24BE45B58]);
  v6[12] = v8;
  v6[13] = *(_QWORD *)(v8 - 8);
  v6[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241827B2C()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[6] + 16), *(_QWORD *)(v0[6] + 40));
  v0[15] = sub_2418A82E0();
  swift_getObjectType();
  sub_2418A9DE0();
  sub_2418AA08C();
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  *v1 = v0;
  v1[1] = sub_241827BE4;
  return sub_2418AA194();
}

uint64_t sub_241827BE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*v1 + 104);
  v2 = *(_QWORD *)(*v1 + 112);
  v4 = *(_QWORD *)(*v1 + 96);
  v5 = *v1;
  *(_QWORD *)(v5 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_unknownObjectRelease();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_241827C9C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t type;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(void **)(v0 + 136);
  sub_2418A8328();
  v2 = v1;
  swift_retain();
  v3 = v1;
  swift_retain();
  v4 = sub_2418A8334();
  v5 = sub_2418AA044();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 136);
    v25 = *(_QWORD *)(v0 + 80);
    v26 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v28 = v24;
    *(_DWORD *)v8 = 136446722;
    type = v5;
    v9 = sub_2418AA5D8();
    *(_QWORD *)(v0 + 16) = sub_24176024C(v9, v10, &v28);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 40));
    v11 = (void *)sub_2418A82F8();
    v12 = sub_2418A9DE0();
    v14 = v13;

    *(_QWORD *)(v0 + 24) = sub_24176024C(v12, v14, &v28);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 22) = 2082;
    *(_QWORD *)(v0 + 32) = v6;
    v15 = v6;
    sub_2417609B0();
    v16 = sub_2418A9E04();
    *(_QWORD *)(v0 + 40) = sub_24176024C(v16, v17, &v28);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24171C000, v4, type, "[%{public}s:%{public}s] Error setting feature setting: %{public}s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v24, -1, -1);
    MEMORY[0x24269D548](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
  }
  else
  {
    v18 = *(void **)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 80);
    v19 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241827FB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void (*v7)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v1 = *v0;
  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v11[-v4];
  swift_getKeyPath();
  swift_getKeyPath();
  v12 = 30;
  v13 = 0;
  swift_retain();
  sub_2418A8424();
  v6 = sub_2418A9F60();
  v7 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v0;
  v8[5] = 30;
  v8[6] = v1;
  swift_retain();
  sub_241826138((uint64_t)v5, (uint64_t)&unk_257152548, (uint64_t)v8);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v11[15] = 1;
  swift_retain();
  sub_2418A8424();
  v7(v5, 1, 1, v6);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = v0;
  *(_BYTE *)(v9 + 40) = 1;
  *(_QWORD *)(v9 + 48) = v1;
  swift_retain();
  sub_241826138((uint64_t)v5, (uint64_t)&unk_257152550, v9);
  return swift_release();
}

uint64_t PeriodicAssessmentPromptsFeatureModel.__allocating_init(featureStatusManager:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = swift_allocObject();
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_24182AE18(v5, v2, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t PeriodicAssessmentPromptsFeatureModel.init(featureStatusManager:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_24182AE18(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t sub_241828244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedCadenceInDays;
  sub_24182A878(0, &qword_254391468, &qword_254391080, MEMORY[0x24BEE1768]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0
     + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedIsPeriodicPromptSettingOn;
  sub_24182A878(0, &qword_254391460, &qword_254391470, MEMORY[0x24BEE1328]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t PeriodicAssessmentPromptsFeatureModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  sub_24172570C(0, &qword_254391458, (uint64_t (*)(uint64_t))sub_24182A85C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  sub_24182A878(0, &qword_254391460, &qword_254391470, MEMORY[0x24BEE1328]);
  v5 = v4;
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(v3, v4);
  swift_bridgeObjectRelease();
  v7 = v0 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedCadenceInDays;
  sub_24182A878(0, &qword_254391468, &qword_254391080, MEMORY[0x24BEE1768]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v6(v0+ OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedIsPeriodicPromptSettingOn, v5);
  return v0;
}

uint64_t PeriodicAssessmentPromptsFeatureModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  sub_24172570C(0, &qword_254391458, (uint64_t (*)(uint64_t))sub_24182A85C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  sub_24182A878(0, &qword_254391460, &qword_254391470, MEMORY[0x24BEE1328]);
  v5 = v4;
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(v3, v4);
  swift_bridgeObjectRelease();
  v7 = v0 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedCadenceInDays;
  sub_24182A878(0, &qword_254391468, &qword_254391080, MEMORY[0x24BEE1768]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v6(v0+ OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedIsPeriodicPromptSettingOn, v5);
  return swift_deallocClassInstance();
}

uint64_t AssessmentsSettingsModel.__allocating_init(healthStore:)(void *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = (void *)*MEMORY[0x24BDD2E50];
  v3 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
  v4 = v2;
  v5 = objc_msgSend(v3, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v4, a1, 0);
  type metadata accessor for PeriodicAssessmentPromptsFeatureModel(0);
  v6 = swift_allocObject();
  v7 = sub_241829FD0((uint64_t)v5, v6);

  v8 = (void *)*MEMORY[0x24BDD2E98];
  v9 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
  v10 = a1;
  v11 = v8;
  v12 = objc_msgSend(v9, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v11, v10, 0);
  type metadata accessor for AssessmentFeatureModel(0);
  v13 = swift_allocObject();
  v14 = sub_24182A1A0((uint64_t)v12, v13);

  v15 = swift_allocObject();
  AssessmentsSettingsModel.init(periodicAssessmentPromptsFeatureModel:loggingPatternEscalationsFeatureModel:)(v7, v14);

  return v15;
}

uint64_t AssessmentsSettingsModel.__allocating_init(periodicAssessmentPromptsFeatureModel:loggingPatternEscalationsFeatureModel:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  AssessmentsSettingsModel.init(periodicAssessmentPromptsFeatureModel:loggingPatternEscalationsFeatureModel:)(a1, a2);
  return v4;
}

_QWORD *AssessmentsSettingsModel.init(periodicAssessmentPromptsFeatureModel:loggingPatternEscalationsFeatureModel:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v5;

  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_2418AA398())
    v5 = sub_24182AB60(MEMORY[0x24BEE4AF8]);
  else
    v5 = MEMORY[0x24BEE4B08];
  v2[4] = v5;
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for PeriodicAssessmentPromptsFeatureModel(0);
  sub_24182B09C(&qword_254391068, 255, type metadata accessor for PeriodicAssessmentPromptsFeatureModel, (uint64_t)&protocol conformance descriptor for AssessmentFeatureModel);
  swift_retain();
  swift_retain();
  sub_2418A83B8();
  swift_allocObject();
  swift_weakInit();
  sub_2418A83DC();
  sub_2418A846C();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_2418A83A0();
  swift_endAccess();
  swift_release();
  type metadata accessor for AssessmentFeatureModel(0);
  sub_24182B09C(&qword_254391408, 255, type metadata accessor for AssessmentFeatureModel, (uint64_t)&protocol conformance descriptor for AssessmentFeatureModel);
  sub_2418A83B8();
  swift_allocObject();
  swift_weakInit();
  sub_2418A846C();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_2418A83A0();
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_2418288DC()
{
  uint64_t result;
  uint64_t v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for AssessmentsSettingsModel();
    sub_24182B09C(qword_25714F650, v1, (uint64_t (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel, (uint64_t)&protocol conformance descriptor for AssessmentsSettingsModel);
    sub_2418A83B8();
    swift_release();
    sub_2418A83D0();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall AssessmentsSettingsModel.onboardToRecommendedPregnancySettings()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v1 = v0;
  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v8 - v4;
  sub_241827FB4();
  v6 = sub_2418A9F60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  swift_retain();
  sub_241826138((uint64_t)v5, (uint64_t)&unk_257152490, (uint64_t)v7);
  swift_release();
}

uint64_t sub_241828A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  v5 = sub_2418A8100();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241828AAC()
{
  uint64_t v0;
  _QWORD *v1;

  sub_2418A80D0();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_241828B04;
  return AssessmentsSettingsModel.resetPeriodicPromptsTimer(acknowledgmentDate:)(*(_QWORD *)(v0 + 40));
}

uint64_t sub_241828B04()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*v0 + 40);
  v2 = *(_QWORD *)(*v0 + 24);
  v3 = *(_QWORD *)(*v0 + 32);
  v5 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t AssessmentsSettingsModel.resetPeriodicPromptsTimer(acknowledgmentDate:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  v3 = sub_2418A8340();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  sub_24172570C(0, &qword_2571524A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BE45B58]);
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241828C18()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0[6] + 16) + 16), *(_QWORD *)(*(_QWORD *)(v0[6] + 16) + 40));
  v0[14] = sub_2418A82E0();
  swift_getObjectType();
  sub_2418A9DE0();
  sub_2418A8100();
  sub_2418AA08C();
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  *v1 = v0;
  v1[1] = sub_241828CF0;
  return sub_2418AA17C();
}

uint64_t sub_241828CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_241828D74()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241828DB8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(void **)(v0 + 128);
  swift_unknownObjectRelease();
  sub_2418A8328();
  v2 = v1;
  v3 = v1;
  v4 = sub_2418A8334();
  v5 = sub_2418AA044();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 64);
    v21 = *(_QWORD *)(v0 + 80);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v22 = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = sub_2418AA5D8();
    *(_QWORD *)(v0 + 16) = sub_24176024C(v10, v11, &v22);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    *(_QWORD *)(v0 + 24) = v6;
    v12 = v6;
    sub_2417609B0();
    v13 = sub_2418A9E04();
    *(_QWORD *)(v0 + 32) = sub_24176024C(v13, v14, &v22);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24171C000, v4, v5, "[%{public}s] Error setting acknowledgment date: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v9, -1, -1);
    MEMORY[0x24269D548](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v20);
  }
  else
  {
    v15 = *(void **)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 64);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Bool __swiftcall AssessmentsSettingsModel.isSetToRecommendedPregnancySettings()()
{
  if (sub_2418276A0() == 30)
    return sub_241826764() & 1;
  else
    return 0;
}

unint64_t AssessmentsSettingsModel.areSettingsVisible.getter()
{
  if ((sub_2418265E4() & 1) != 0)
    return 1;
  else
    return (unint64_t)sub_2418265E4() & 1;
}

uint64_t AssessmentsSettingsModel.isPeriodicPromptsSettingOn.getter()
{
  return sub_241826764() & 1;
}

uint64_t sub_241829094@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241826764();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2418290C4(char *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v13 - v6;
  v8 = *a1;
  v9 = *a2;
  sub_241826934(*a1);
  v10 = sub_2418A9F60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_BYTE *)(v11 + 32) = v8;
  *(_QWORD *)(v11 + 40) = v9;
  swift_retain();
  sub_241826138((uint64_t)v7, (uint64_t)&unk_257152500, v11);
  return swift_release();
}

uint64_t AssessmentsSettingsModel.isPeriodicPromptsSettingOn.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - v6;
  sub_241826934(a1);
  v8 = sub_2418A9F60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_BYTE *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = v2;
  swift_retain();
  sub_241826138((uint64_t)v7, (uint64_t)&unk_2571524B0, v9);
  return swift_release();
}

uint64_t sub_24182929C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 16) = a5;
  *(_BYTE *)(v5 + 56) = a4;
  v6 = sub_2418A8100();
  *(_QWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 40) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241829300()
{
  uint64_t v0;
  _QWORD *v1;

  if (*(_BYTE *)(v0 + 56) == 1)
  {
    sub_2418A80D0();
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v1;
    *v1 = v0;
    v1[1] = sub_241829380;
    return AssessmentsSettingsModel.resetPeriodicPromptsTimer(acknowledgmentDate:)(*(_QWORD *)(v0 + 40));
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_241829380()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*v0 + 40);
  v2 = *(_QWORD *)(*v0 + 24);
  v3 = *(_QWORD *)(*v0 + 32);
  v5 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

void (*AssessmentsSettingsModel.isPeriodicPromptsSettingOn.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  *(_QWORD *)a1 = v1;
  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  v5 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = sub_241826764() & 1;
  return sub_241829454;
}

void sub_241829454(uint64_t *a1, char a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v4 = a1[1];
  v5 = *((_BYTE *)a1 + 24);
  sub_241826934(v5);
  v6 = sub_2418A9F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v8 = *a1;
  v7 = (void *)a1[1];
  if ((a2 & 1) != 0)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)(v9 + 24) = 0;
    *(_BYTE *)(v9 + 32) = v5;
    *(_QWORD *)(v9 + 40) = v8;
    swift_retain();
    v10 = &unk_2571524B8;
  }
  else
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)(v9 + 24) = 0;
    *(_BYTE *)(v9 + 32) = v5;
    *(_QWORD *)(v9 + 40) = v8;
    swift_retain();
    v10 = &unk_2571524C0;
  }
  sub_241826138((uint64_t)v7, (uint64_t)v10, v9);
  swift_release();
  free(v7);
}

uint64_t AssessmentsSettingsModel.periodicAssessmentAlertCadence.getter()
{
  return sub_2418276A0();
}

uint64_t sub_241829560@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418276A0();
  *a1 = result;
  return result;
}

uint64_t sub_24182958C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v12 - v6;
  v8 = *a2;
  sub_24182795C(*a1);
  v9 = sub_2418A9F60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  swift_retain();
  sub_241826138((uint64_t)v7, (uint64_t)&unk_2571524F8, (uint64_t)v10);
  return swift_release();
}

uint64_t AssessmentsSettingsModel.periodicAssessmentAlertCadence.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v2 = v1;
  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - v6;
  sub_24182795C(a1);
  v8 = sub_2418A9F60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  swift_retain();
  sub_241826138((uint64_t)v7, (uint64_t)&unk_2571524D0, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_241829758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  v5 = sub_2418A8100();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2418297B8()
{
  uint64_t v0;
  _QWORD *v1;

  sub_2418A80D0();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_24182BD68;
  return AssessmentsSettingsModel.resetPeriodicPromptsTimer(acknowledgmentDate:)(*(_QWORD *)(v0 + 40));
}

void (*AssessmentsSettingsModel.periodicAssessmentAlertCadence.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  a1[1] = v1;
  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  v5 = *(_QWORD *)(v1 + 16);
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  *a1 = sub_2418276A0();
  return sub_241829878;
}

void sub_241829878(uint64_t *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;

  v4 = a1[2];
  sub_24182795C(*a1);
  v5 = sub_2418A9F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7 = a1[1];
  v6 = (void *)a1[2];
  if ((a2 & 1) != 0)
  {
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v7;
    swift_retain();
    v9 = &unk_2571524D8;
  }
  else
  {
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v7;
    swift_retain();
    v9 = &unk_2571524E0;
  }
  sub_241826138((uint64_t)v6, (uint64_t)v9, (uint64_t)v8);
  swift_release();
  free(v6);
}

unint64_t AssessmentsSettingsModel.isPeriodicPromptsSettingUserInteractionEnabled.getter()
{
  return (unint64_t)sub_2418265F0() & 1;
}

uint64_t AssessmentsSettingsModel.isLoggingPatternEscalationsSettingOn.getter()
{
  return sub_241826764() & 1;
}

uint64_t sub_241829998@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241826764();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2418299C8(char *a1)
{
  return sub_241826934(*a1);
}

uint64_t AssessmentsSettingsModel.isLoggingPatternEscalationsSettingOn.setter(char a1)
{
  return sub_241826934(a1);
}

uint64_t (*AssessmentsSettingsModel.isLoggingPatternEscalationsSettingOn.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = sub_241826764() & 1;
  return sub_241829A4C;
}

uint64_t sub_241829A4C(uint64_t a1)
{
  return sub_241826934(*(_BYTE *)(a1 + 8));
}

unint64_t AssessmentsSettingsModel.isLoggingPatternEscalationsSettingUserInteractionEnabled.getter()
{
  return (unint64_t)sub_2418265F0() & 1;
}

BOOL static AssessmentsSettingsModel.DisabledMessaging.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AssessmentsSettingsModel.DisabledMessaging.hash(into:)()
{
  return sub_2418AA578();
}

uint64_t AssessmentsSettingsModel.DisabledMessaging.hashValue.getter()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

id AssessmentsSettingsModel.disabledMessaging.getter@<X0>(char *a1@<X8>)
{
  id result;
  char v3;

  if ((sub_2418265F0() & 1) != 0 || (result = sub_2418265F0(), (result & 1) != 0))
  {
    result = sub_2418265F0();
    if ((result & 1) != 0)
    {
      result = sub_2418265F0();
      if ((result & 1) != 0)
        v3 = 3;
      else
        v3 = 1;
    }
    else
    {
      v3 = 2;
    }
  }
  else
  {
    v3 = 0;
  }
  *a1 = v3;
  return result;
}

uint64_t AssessmentsSettingsModel.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AssessmentsSettingsModel.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_241829BEC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  return swift_release();
}

uint64_t sub_241829C54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  sub_24182A85C(0);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v11 - v8;
  sub_24182B8C8(a1, (uint64_t)&v11 - v8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24182B8C8((uint64_t)v9, (uint64_t)v6);
  swift_retain();
  sub_2418A8424();
  return sub_24182B90C((uint64_t)v9);
}

uint64_t sub_241829D38@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  result = swift_release();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_241829DBC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2418A8424();
}

uint64_t sub_241829E3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_241829EB4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2418A8424();
}

uint64_t sub_241829F20(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_241829F84;
  return v6(a1);
}

uint64_t sub_241829F84()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_241829FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;

  v22 = a1;
  sub_24182A878(0, &qword_254391460, &qword_254391470, MEMORY[0x24BEE1328]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v22 - v7;
  v9 = MEMORY[0x24BEE1768];
  sub_24182A878(0, &qword_254391468, &qword_254391080, MEMORY[0x24BEE1768]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v22 - v14;
  v16 = a2 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedCadenceInDays;
  v24 = 0;
  v25 = 1;
  v17 = v9;
  v18 = MEMORY[0x24BEE1C68];
  sub_24172887C(0, &qword_254391080, v17, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  swift_retain();
  sub_2418A83E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v16, v15, v11);
  v19 = a2
      + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedIsPeriodicPromptSettingOn;
  v23 = 2;
  sub_24172887C(0, &qword_254391470, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))v18);
  sub_2418A83E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v19, v8, v4);
  v20 = a2 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel_pregnancyModeSettings;
  *(_QWORD *)v20 = 30;
  *(_BYTE *)(v20 + 8) = 1;
  swift_release();
  return sub_24182A1A0(v22, a2);
}

uint64_t sub_24182A1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  sub_24182A878(0, &qword_254391460, &qword_254391470, MEMORY[0x24BEE1328]);
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v34 - v6;
  sub_24172570C(0, &qword_254391458, (uint64_t (*)(uint64_t))sub_24182A85C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v34 - v12;
  sub_24182A85C(0);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (char *)&v34 - v21;
  MEMORY[0x24BDAC7A8](v20, v23);
  v25 = (char *)&v34 - v24;
  v41 = sub_241762EFC(0, (unint64_t *)&unk_254391488);
  v42 = MEMORY[0x24BE45B80];
  v34 = v41;
  v40[0] = a1;
  v26 = a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  v27 = sub_2418A82C8();
  v35 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v36 = v27;
  v35(v25, 1, 1);
  sub_24182B8C8((uint64_t)v25, (uint64_t)v22);
  sub_2418A83E8();
  sub_24182B90C((uint64_t)v25);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v26, v13, v9);
  v28 = a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  v39 = 2;
  sub_24172887C(0, &qword_254391470, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2418A83E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v28, v7, v38);
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_2418AA398())
    v29 = sub_24182AB60(MEMORY[0x24BEE4AF8]);
  else
    v29 = MEMORY[0x24BEE4B08];
  v31 = v35;
  v30 = v36;
  *(_QWORD *)(a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel_subscriptions) = v29;
  sub_24182BC94((uint64_t)v40, a2 + 16);
  sub_2418A8310();
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v31)(v18, 0, 1, v30);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24182B8C8((uint64_t)v18, (uint64_t)v25);
  swift_retain();
  sub_2418A8424();
  v32 = sub_24182B90C((uint64_t)v18);
  (*(void (**)(uint64_t))(*(_QWORD *)a2 + 240))(v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return a2;
}

uint64_t sub_24182A4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *boxed_opaque_existential_1;
  void (*v29)(uint64_t *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t *v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46[5];

  v41 = a1;
  sub_24182A878(0, &qword_254391460, &qword_254391470, MEMORY[0x24BEE1328]);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v38 - v9;
  sub_24172570C(0, &qword_254391458, (uint64_t (*)(uint64_t))sub_24182A85C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  v42 = v11;
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v38 - v14;
  sub_24182A85C(0);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v18, v21);
  v24 = (char *)&v38 - v23;
  MEMORY[0x24BDAC7A8](v22, v25);
  v27 = (char *)&v38 - v26;
  v46[3] = a3;
  v46[4] = a4;
  v40 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v46);
  v29 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32);
  v38 = boxed_opaque_existential_1;
  v30 = v41;
  v41 = a3;
  v29(boxed_opaque_existential_1, v30, a3);
  v31 = a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  v32 = sub_2418A82C8();
  v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v39(v27, 1, 1, v32);
  sub_24182B8C8((uint64_t)v27, (uint64_t)v24);
  sub_2418A83E8();
  sub_24182B90C((uint64_t)v27);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v31, v15, v42);
  v33 = a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  v45 = 2;
  sub_24172887C(0, &qword_254391470, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2418A83E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v33, v10, v44);
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_2418AA398())
    v34 = sub_24182AB60(MEMORY[0x24BEE4AF8]);
  else
    v34 = MEMORY[0x24BEE4B08];
  v35 = v39;
  *(_QWORD *)(a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel_subscriptions) = v34;
  sub_24182BC94((uint64_t)v46, a2 + 16);
  sub_2418A82EC();
  v35(v20, 0, 1, v32);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24182B8C8((uint64_t)v20, (uint64_t)v27);
  swift_retain();
  sub_2418A8424();
  v36 = sub_24182B90C((uint64_t)v20);
  (*(void (**)(uint64_t))(*(_QWORD *)a2 + 240))(v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_24182A85C(uint64_t a1)
{
  sub_24172570C(a1, &qword_254391430, (uint64_t (*)(uint64_t))MEMORY[0x24BE45750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_24182A878(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_24172887C(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v5 = sub_2418A8430();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_24182A8D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;

  v2 = sub_2418A8220();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v35 = (char *)&v30 - v9;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    sub_24182BCD8(0, &qword_257152570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], &qword_257152578, MEMORY[0x24BDCF2A8]);
    v11 = sub_2418AA29C();
    v12 = 0;
    v34 = v11 + 56;
    v13 = *(unsigned __int8 *)(v3 + 80);
    v31 = v10;
    v32 = a1 + ((v13 + 32) & ~v13);
    v14 = *(_QWORD *)(v3 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v33 = v12;
      v15(v35, v32 + v14 * v12, v2);
      sub_24182B09C(&qword_257152578, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
      v16 = sub_2418A9D38();
      v17 = ~(-1 << *(_BYTE *)(v11 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v34 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v15(v7, *(_QWORD *)(v11 + 48) + v18 * v14, v2);
          sub_24182B09C((unint64_t *)&unk_257152580, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
          v22 = sub_2418A9DA4();
          v23 = v3;
          v24 = *(void (**)(char *, uint64_t))(v3 + 8);
          v24(v7, v2);
          if ((v22 & 1) != 0)
          {
            v24(v35, v2);
            v3 = v23;
            v10 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v34 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v23;
        }
        while ((v20 & (1 << v18)) != 0);
        v10 = v31;
      }
      v25 = v35;
      *(_QWORD *)(v34 + 8 * v19) = v21 | v20;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v11 + 48) + v18 * v14, v25, v2);
      v27 = *(_QWORD *)(v11 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v11 + 16) = v29;
LABEL_4:
      v12 = v33 + 1;
      if (v33 + 1 == v10)
        return v11;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

unint64_t sub_24182AB60(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2418AA398();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_24182BCD8(0, &qword_257152558, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], &qword_257152560, MEMORY[0x24BDB9B70]);
      result = sub_2418AA29C();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_2418AA398();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x24269CAD4](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_2418A83AC();
    sub_24182B09C(&qword_257152560, 255, v8, MEMORY[0x24BDB9B70]);
    result = sub_2418A9D38();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_24182B09C(&qword_257152568, 255, v8, MEMORY[0x24BDB9B78]);
      do
      {
        result = sub_2418A9DA4();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24182AE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;

  v28 = a1;
  v29 = a4;
  v26 = *(_QWORD *)(a3 - 8);
  v27 = a3;
  MEMORY[0x24BDAC7A8](a1, a2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24182A878(0, &qword_254391460, &qword_254391470, MEMORY[0x24BEE1328]);
  v25 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v25 - v10;
  v12 = MEMORY[0x24BEE1768];
  sub_24182A878(0, &qword_254391468, &qword_254391080, MEMORY[0x24BEE1768]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v25 - v17;
  v19 = a2 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedCadenceInDays;
  v31 = 0;
  v32 = 1;
  v20 = MEMORY[0x24BEE1C68];
  sub_24172887C(0, &qword_254391080, v12, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  swift_retain();
  sub_2418A83E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v19, v18, v14);
  v21 = a2
      + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedIsPeriodicPromptSettingOn;
  v30 = 2;
  sub_24172887C(0, &qword_254391470, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))v20);
  sub_2418A83E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v21, v11, v25);
  v22 = a2 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel_pregnancyModeSettings;
  *(_QWORD *)v22 = 30;
  *(_BYTE *)(v22 + 8) = 1;
  swift_release();
  v23 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v6, v28, v27);
  return sub_24182A4E8((uint64_t)v6, a2, v23, v29);
}

uint64_t type metadata accessor for PeriodicAssessmentPromptsFeatureModel(uint64_t a1)
{
  return sub_24179D1E0(a1, (uint64_t *)&unk_254391070);
}

uint64_t type metadata accessor for AssessmentFeatureModel(uint64_t a1)
{
  return sub_24179D1E0(a1, (uint64_t *)&unk_254391410);
}

uint64_t sub_24182B060()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24182B084()
{
  return sub_2418288DC();
}

uint64_t sub_24182B09C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x24269D47C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24182B0DC()
{
  return objectdestroy_3Tm();
}

uint64_t sub_24182B0E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_24182BD5C;
  return sub_241828A4C(a1, v4, v5, v6);
}

uint64_t sub_24182B154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_24182BD5C;
  return sub_24182929C(a1, v4, v5, v6, v7);
}

uint64_t sub_24182B1D8()
{
  return objectdestroy_3Tm();
}

uint64_t sub_24182B1E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_24182BD5C;
  return sub_241829758(a1, v4, v5, v6);
}

uint64_t sub_24182B24C()
{
  return objectdestroy_3Tm();
}

uint64_t sub_24182B254()
{
  return objectdestroy_3Tm();
}

unint64_t sub_24182B260()
{
  unint64_t result;

  result = qword_2571524E8;
  if (!qword_2571524E8)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for AssessmentsSettingsModel.DisabledMessaging, &type metadata for AssessmentsSettingsModel.DisabledMessaging);
    atomic_store(result, (unint64_t *)&qword_2571524E8);
  }
  return result;
}

uint64_t sub_24182B2A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241826764();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24182B2D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418276A0();
  *a1 = result;
  return result;
}

uint64_t sub_24182B308@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241826764();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24182B338(char *a1)
{
  return sub_241826934(*a1);
}

uint64_t sub_24182B360()
{
  return type metadata accessor for AssessmentFeatureModel(0);
}

void sub_24182B368()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, &qword_254391458, (uint64_t (*)(uint64_t))sub_24182A85C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
  {
    sub_24182A878(319, &qword_254391460, &qword_254391470, MEMORY[0x24BEE1328]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AssessmentFeatureModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssessmentFeatureModel.__allocating_init(featureStatusManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t sub_24182B448()
{
  return type metadata accessor for PeriodicAssessmentPromptsFeatureModel(0);
}

void sub_24182B450()
{
  unint64_t v0;
  unint64_t v1;

  sub_24182A878(319, &qword_254391468, &qword_254391080, MEMORY[0x24BEE1768]);
  if (v0 <= 0x3F)
  {
    sub_24182A878(319, &qword_254391460, &qword_254391470, MEMORY[0x24BEE1328]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for AssessmentsSettingsModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for AssessmentsSettingsModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssessmentsSettingsModel.__allocating_init(periodicAssessmentPromptsFeatureModel:loggingPatternEscalationsFeatureModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t getEnumTagSinglePayload for AssessmentsSettingsModel.DisabledMessaging(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentsSettingsModel.DisabledMessaging(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24182B61C + 4 * byte_2418D8865[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24182B650 + 4 * byte_2418D8860[v4]))();
}

uint64_t sub_24182B650(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24182B658(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24182B660);
  return result;
}

uint64_t sub_24182B66C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24182B674);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24182B678(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24182B680(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssessmentsSettingsModel.DisabledMessaging()
{
  return &type metadata for AssessmentsSettingsModel.DisabledMessaging;
}

uint64_t getEnumTagSinglePayload for PromptedAssessmentsSettingsConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptedAssessmentsSettingsConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptedAssessmentsSettingsConfiguration()
{
  return &type metadata for PromptedAssessmentsSettingsConfiguration;
}

void sub_24182B744()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254391440)
  {
    sub_24182B7FC();
    sub_241762EFC(255, (unint64_t *)&qword_2543915E8);
    sub_24182B09C(&qword_254391448, 255, (uint64_t (*)(uint64_t))sub_24182B7FC, MEMORY[0x24BDB9AF8]);
    sub_24182B860();
    v0 = sub_2418A8388();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254391440);
  }
}

void sub_24182B7FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254391450)
  {
    sub_2418A82C8();
    v0 = sub_2418A8394();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254391450);
  }
}

unint64_t sub_24182B860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254391480;
  if (!qword_254391480)
  {
    v1 = sub_241762EFC(255, (unint64_t *)&qword_2543915E8);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_254391480);
  }
  return result;
}

uint64_t sub_24182B8B8(uint64_t a1)
{
  return sub_241827490(a1);
}

uint64_t sub_24182B8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24182A85C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24182B90C(uint64_t a1)
{
  uint64_t v2;

  sub_24182A85C(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24182B948@<X0>(_BYTE *a1@<X8>)
{
  return sub_241829E3C(a1);
}

uint64_t sub_24182B96C()
{
  return sub_241829EB4();
}

uint64_t sub_24182B998@<X0>(_BYTE *a1@<X8>)
{
  return sub_241829E3C(a1);
}

uint64_t sub_24182B9BC()
{
  return sub_241829EB4();
}

uint64_t sub_24182B9E0(uint64_t a1)
{
  return sub_241826470(a1);
}

uint64_t sub_24182B9E8()
{
  return objectdestroy_3Tm();
}

uint64_t objectdestroy_8Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24182BA20()
{
  return objectdestroy_3Tm();
}

uint64_t sub_24182BA28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_24182BD5C;
  return sub_241827A88(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_24182BAA8()
{
  return objectdestroy_3Tm();
}

uint64_t sub_24182BAB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_24182BD5C;
  return sub_241826A60(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_24182BB34()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24182BB58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_24175D6DC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_257152538 + dword_257152538))(a1, v4);
}

uint64_t sub_24182BBC8()
{
  return objectdestroy_3Tm();
}

uint64_t sub_24182BBD0()
{
  return objectdestroy_3Tm();
}

uint64_t objectdestroy_3Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24182BC10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_24175D6DC;
  return sub_241826A60(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_24182BC94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_24182BCD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_24182B09C(a4, 255, a3, a5);
    v9 = sub_2418AA2A8();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_24182BD6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void (*v16)(char *, uint64_t);
  id v17;
  id v18;
  _QWORD v20[2];

  v20[1] = a1;
  v1 = sub_2418AA128();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417FB72C();
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v20[0] = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  MEMORY[0x24BDAC7A8](v12, v13);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_defaultCenter);
  sub_2418AA134();

  sub_24172159C(&qword_257151518, v2, MEMORY[0x24BDD0070]);
  sub_2418A8448();
  v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v6, v1);
  v17 = objc_msgSend(v14, sel_defaultCenter);
  sub_2418AA134();

  sub_2418A8448();
  v16(v6, v1);
  v18 = objc_msgSend(v14, sel_defaultCenter);
  sub_2418AA134();

  sub_2418A8448();
  v16(v6, v1);
  sub_24172159C(&qword_257151520, (uint64_t (*)(uint64_t))sub_2417FB72C, MEMORY[0x24BDB96C0]);
  return sub_2418A837C();
}

CGFloat sub_24182C020()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  CGRect v5;
  __int128 v6;
  __int128 v7;

  v0 = sub_2418A7DB8();
  if (!v0)
  {
    v6 = 0u;
    v7 = 0u;
LABEL_10:
    sub_2417C5598((uint64_t)&v6);
    return 0.0;
  }
  v1 = v0;
  sub_2418A9DE0();
  sub_2418AA278();
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_241878EEC((uint64_t)&v5), (v3 & 1) != 0))
  {
    sub_241762F34(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v6);
  }
  else
  {
    v6 = 0u;
    v7 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_24182C144((uint64_t)&v5);
  if (!*((_QWORD *)&v7 + 1))
    goto LABEL_10;
  type metadata accessor for CGRect(0);
  if ((swift_dynamicCast() & 1) != 0)
    return CGRectGetHeight(v5);
  return 0.0;
}

void sub_24182C114(CGFloat *a1@<X8>)
{
  *a1 = sub_24182C020();
}

void sub_24182C13C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_24182C144(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_24182C17C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  return swift_task_switch();
}

uint64_t sub_24182C19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  sub_24182E250(0, &qword_257152678, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE0460]);
  *v3 = v0;
  v3[1] = sub_24182C260;
  return sub_2418AA4C4();
}

uint64_t sub_24182C260()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24182C2BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

void sub_24182C2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  sub_24182CC20();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v7, v11);
  v12 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2418A9CCC();
  sub_24182CC94();
  sub_2418A9CFC();
  sub_24172159C((unint64_t *)&unk_2571526A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
  sub_2418AA218();
  v13 = aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v14, v12, v8);
  *(_QWORD *)(v16 + v15) = a4;
  v17 = objc_allocWithZone(MEMORY[0x24BE65DB0]);
  v18 = (void *)sub_2418A81CC();
  aBlock[4] = sub_24182CD78;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24182CDE0;
  aBlock[3] = &block_descriptor_10;
  v19 = _Block_copy(aBlock);
  v20 = objc_msgSend(v17, sel_initWithDayIndexRange_gregorianCalendar_ascending_limit_resultsHandler_, v22, v13, v18, 1, 0, v19);
  _Block_release(v19);

  swift_release();
  objc_msgSend(*(id *)(a3 + 16), sel_executeQuery_, v20);

}

uint64_t sub_24182C4C4(uint64_t a1, unint64_t a2, void *a3, uint64_t isUniquelyReferenced_nonNull_native)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  id v34;
  id v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v7 = sub_2418A8340();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2418A9CFC();
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2 || a3)
  {
    sub_2418A8328();
    v16 = a3;
    v17 = a3;
    v18 = sub_2418A8334();
    v19 = sub_2418AA05C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v52 = v7;
      v22 = v21;
      v54 = v21;
      *(_DWORD *)v20 = 136446466;
      v48 = isUniquelyReferenced_nonNull_native;
      v23 = sub_2418AA5D8();
      v53 = sub_24176024C(v23, v24, (uint64_t *)&v54);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      v53 = (uint64_t)a3;
      v25 = a3;
      sub_24182CE98();
      v26 = sub_2418A9DF8();
      v53 = sub_24176024C(v26, v27, (uint64_t *)&v54);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24171C000, v18, v19, "[%{public}s] error fetching day summaries: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v22, -1, -1);
      MEMORY[0x24269D548](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v52);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    v54 = sub_241875500(MEMORY[0x24BEE4AF8]);
    sub_24182CC20();
    return sub_2418A9F24();
  }
  if (a2 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    v29 = sub_2418AA398();
    v48 = isUniquelyReferenced_nonNull_native;
    if (v29)
      goto LABEL_9;
  }
  else
  {
    v29 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v48 = isUniquelyReferenced_nonNull_native;
    if (v29)
    {
LABEL_9:
      v50 = a2 & 0xC000000000000001;
      v30 = (_QWORD *)MEMORY[0x24BEE4B00];
      v31 = 4;
      v49 = a2;
      while (1)
      {
        isUniquelyReferenced_nonNull_native = v31 - 4;
        if (v50)
          v34 = (id)MEMORY[0x24269CAD4](v31 - 4, a2);
        else
          v34 = *(id *)(a2 + 8 * v31);
        v35 = v34;
        a2 = v31 - 3;
        if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        objc_msgSend(v34, sel_dayIndex);
        sub_2418A9CC0();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v54 = (unint64_t)v30;
        v37 = sub_241878F1C((uint64_t)v15);
        v38 = v30[2];
        v39 = (v36 & 1) == 0;
        v40 = v38 + v39;
        if (__OFADD__(v38, v39))
          goto LABEL_29;
        v41 = v36;
        if (v30[3] >= v40)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v30 = (_QWORD *)v54;
            if ((v36 & 1) != 0)
              goto LABEL_10;
          }
          else
          {
            sub_24182E01C();
            v30 = (_QWORD *)v54;
            if ((v41 & 1) != 0)
              goto LABEL_10;
          }
        }
        else
        {
          sub_24182D8CC(v40, isUniquelyReferenced_nonNull_native);
          v42 = sub_241878F1C((uint64_t)v15);
          if ((v41 & 1) != (v43 & 1))
          {
            result = sub_2418AA50C();
            __break(1u);
            return result;
          }
          v37 = v42;
          v30 = (_QWORD *)v54;
          if ((v41 & 1) != 0)
          {
LABEL_10:
            v32 = v30[7];

            *(_QWORD *)(v32 + 8 * v37) = v35;
            goto LABEL_11;
          }
        }
        v30[(v37 >> 6) + 8] |= 1 << v37;
        (*(void (**)(unint64_t, char *, uint64_t))(v51 + 16))(v30[6] + *(_QWORD *)(v51 + 72) * v37, v15, v52);
        *(_QWORD *)(v30[7] + 8 * v37) = v35;
        v44 = v30[2];
        v45 = __OFADD__(v44, 1);
        v46 = v44 + 1;
        if (v45)
          goto LABEL_30;
        v30[2] = v46;
LABEL_11:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v52);
        ++v31;
        v33 = a2 == v29;
        a2 = v49;
        if (v33)
        {
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v30 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_33:
  v54 = (unint64_t)v30;
  sub_24182CC20();
  swift_bridgeObjectRetain();
  sub_2418A9F24();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24182C9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI29StateOfMindCalendarDataSource_gregorianCalendar;
  v2 = sub_2418A8238();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24182CA14()
{
  return type metadata accessor for StateOfMindCalendarDataSource();
}

uint64_t type metadata accessor for StateOfMindCalendarDataSource()
{
  uint64_t result;

  result = qword_2571525C0;
  if (!qword_2571525C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24182CA58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2418A8238();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_24182CAE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257152658;
  if (!qword_257152658)
  {
    v1 = sub_241762EFC(255, (unint64_t *)&qword_257152660);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE5BE0], v1);
    atomic_store(result, (unint64_t *)&qword_257152658);
  }
  return result;
}

uint64_t sub_24182CB3C(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_24182CBA8;
  v5[3] = a1;
  v5[4] = v4;
  v5[5] = *v4;
  return swift_task_switch();
}

uint64_t sub_24182CBA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_24182CBFC()
{
  return swift_retain();
}

void sub_24182CC14(uint64_t a1)
{
  uint64_t *v1;

  sub_24182C2C8(a1, v1[2], v1[3], v1[4]);
}

void sub_24182CC20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152688)
  {
    sub_24182E250(255, &qword_257152678, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE0460]);
    v0 = sub_2418A9F30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152688);
  }
}

void sub_24182CC94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152690)
  {
    sub_2418A9CFC();
    sub_24172159C((unint64_t *)&unk_257154500, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    v0 = sub_2418A9FD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152690);
  }
}

uint64_t sub_24182CD0C()
{
  uint64_t v0;
  uint64_t v1;

  sub_24182CC20();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_24182CD78(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  sub_24182CC20();
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  return sub_24182C4C4(a1, a2, a3, v3 + ((v8 + 16) & ~v8));
}

uint64_t sub_24182CDE0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_241762EFC(0, (unint64_t *)&qword_257152660);
    v5 = sub_2418A9EB8();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

void sub_24182CE98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F368)
  {
    sub_2417609B0();
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F368);
  }
}

uint64_t sub_24182CEEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  char v33;

  v3 = v2;
  v5 = *v2;
  sub_24182E2F8();
  v33 = a2;
  v6 = sub_2418AA3B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v32 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v31 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_31;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v20 >= v31)
      break;
    v21 = (_QWORD *)(v5 + 64);
    v22 = *(_QWORD *)(v32 + 8 * v20);
    ++v13;
    if (!v22)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v31)
        goto LABEL_33;
      v22 = *(_QWORD *)(v32 + 8 * v13);
      if (!v22)
      {
        v23 = v20 + 2;
        if (v23 >= v31)
        {
LABEL_33:
          swift_release();
          if ((v33 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v22 = *(_QWORD *)(v32 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v13 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_42;
            if (v13 >= v31)
              goto LABEL_33;
            v22 = *(_QWORD *)(v32 + 8 * v13);
            ++v23;
            if (v22)
              goto LABEL_30;
          }
        }
        v13 = v23;
      }
    }
LABEL_30:
    v10 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_31:
    v28 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v19);
    v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
    if ((v33 & 1) == 0)
      swift_unknownObjectRetain();
    sub_2418AA56C();
    sub_2418A9E1C();
    swift_bridgeObjectRelease();
    result = sub_2418AA59C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v26 = v16 == v25;
        if (v16 == v25)
          v16 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v27 == -1);
      v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v28;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v29;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v21 = (_QWORD *)(v5 + 64);
  if ((v33 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v30 = 1 << *(_BYTE *)(v5 + 32);
  if (v30 >= 64)
    bzero(v21, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v21 = -1 << v30;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_24182D250(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  uint64_t v33;
  char v34;

  v3 = v2;
  v5 = *v2;
  sub_24182E3B4();
  v34 = a2;
  v6 = sub_2418AA3B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v31 = v2;
  v32 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_31;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v20 >= v32)
      break;
    v21 = (_QWORD *)(v5 + 64);
    v22 = *(_QWORD *)(v33 + 8 * v20);
    ++v13;
    if (!v22)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v32)
        goto LABEL_33;
      v22 = *(_QWORD *)(v33 + 8 * v13);
      if (!v22)
      {
        v23 = v20 + 2;
        if (v23 >= v32)
        {
LABEL_33:
          swift_release();
          v3 = v31;
          if ((v34 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v22 = *(_QWORD *)(v33 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v13 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_42;
            if (v13 >= v32)
              goto LABEL_33;
            v22 = *(_QWORD *)(v33 + 8 * v13);
            ++v23;
            if (v22)
              goto LABEL_30;
          }
        }
        v13 = v23;
      }
    }
LABEL_30:
    v10 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_31:
    v28 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v19);
    v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
    if ((v34 & 1) == 0)
      swift_unknownObjectRetain();
    sub_2418AA56C();
    sub_2418A9E1C();
    swift_bridgeObjectRelease();
    result = sub_2418AA59C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v26 = v16 == v25;
        if (v16 == v25)
          v16 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v27 == -1);
      v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v28;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v29;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v31;
  v21 = (_QWORD *)(v5 + 64);
  if ((v34 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v30 = 1 << *(_BYTE *)(v5 + 32);
  if (v30 >= 64)
    bzero(v21, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v21 = -1 << v30;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_24182D5B8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  sub_24182E9D0(0, &qword_2571526E0);
  v6 = a2;
  v7 = sub_2418AA3B0();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v14 << 6);
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34)
          goto LABEL_34;
        v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          v14 = v19 + 1;
          if (v19 + 1 >= v34)
            goto LABEL_34;
          v20 = v35[v14];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                v14 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v14 >= v34)
                  goto LABEL_34;
                v20 = v35[v14];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v14 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      v25 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((v6 & 1) != 0)
      {
        sub_2417AC5F4(v25, v36);
      }
      else
      {
        sub_241762F34((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_2418AA56C();
      sub_2418A9E1C();
      result = sub_2418AA59C();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
      *v16 = v24;
      v16[1] = v23;
      result = (uint64_t)sub_2417AC5F4(v36, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_24182D8CC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  int v43;

  v3 = v2;
  v5 = sub_2418A9CFC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_24182E250(0, (unint64_t *)&qword_257154440, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE30A0]);
  v43 = a2;
  v11 = sub_2418AA3B0();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v41 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v39 = v2;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  result = swift_retain();
  v19 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = v41;
    v25 = v41[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_34;
      v25 = v41[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v41[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v19 >= v40)
              goto LABEL_34;
            v25 = v41[v19];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v19 = v26;
      }
    }
LABEL_21:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v43 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v9, v28, v5);
      v29 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v9, v28, v5);
      v29 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v22);
    }
    sub_24172159C(&qword_257152680, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A0]);
    result = sub_2418A9D38();
    v30 = -1 << *(_BYTE *)(v12 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v17 + 8 * v32);
      }
      while (v36 == -1);
      v20 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v5);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v10 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

void *sub_24182DC6C()
{
  return sub_24182DC84((void (*)(_QWORD))sub_24182E2F8);
}

void *sub_24182DC78()
{
  return sub_24182DC84((void (*)(_QWORD))sub_24182E3B4);
}

void *sub_24182DC84(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_2418AA3A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
    result = (void *)swift_unknownObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24182DE24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_24182E9D0(0, &qword_2571526E0);
  v2 = *v0;
  v3 = sub_2418AA3A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_241762F34(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_2417AC5F4(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_24182E01C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = sub_2418A9CFC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24182E250(0, (unint64_t *)&qword_257154440, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE30A0]);
  v25 = v0;
  v6 = *v0;
  v7 = sub_2418AA3A4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v25 = v8;
    return result;
  }
  result = (id)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v26 = v6 + 64;
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v27)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v2 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v5, *(_QWORD *)(v6 + 48) + v18, v1);
    v19 = 8 * v17;
    v20 = *(void **)(*(_QWORD *)(v6 + 56) + v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v8 + 48) + v18, v5, v1);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v20;
    result = v20;
  }
  v23 = v21 + 2;
  if (v23 >= v27)
    goto LABEL_26;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_24182E250(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v6 = sub_2418A9CFC();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488];
    v8 = sub_241762EFC(255, (unint64_t *)&qword_257152660);
    v9 = sub_24172159C(&qword_257152680, v7, MEMORY[0x24BDD24A0]);
    v10 = a3(a1, v6, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_24182E2F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571526B0)
  {
    sub_24182E42C(255, &qword_2571526B8);
    sub_24182E370();
    v0 = sub_2418AA3C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571526B0);
  }
}

unint64_t sub_24182E370()
{
  unint64_t result;

  result = qword_2571526C0;
  if (!qword_2571526C0)
  {
    result = MEMORY[0x24269D47C](&unk_2418DA028, &type metadata for ChamomileRenderer.RenderPipeline);
    atomic_store(result, (unint64_t *)&qword_2571526C0);
  }
  return result;
}

void sub_24182E3B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571526C8)
  {
    sub_24182E42C(255, &qword_2571526D0);
    sub_24182E47C();
    v0 = sub_2418AA3C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571526C8);
  }
}

uint64_t sub_24182E42C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_24182E47C()
{
  unint64_t result;

  result = qword_2571526D8;
  if (!qword_2571526D8)
  {
    result = MEMORY[0x24269D47C](&unk_2418DA0C8, &type metadata for ChamomileRenderer.ComputePipeline);
    atomic_store(result, (unint64_t *)&qword_2571526D8);
  }
  return result;
}

void *sub_24182E4C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_24182E9D0(0, qword_257152710);
  v2 = *v0;
  v3 = sub_2418AA3A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_24182EA24(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_241762F34(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_2417AC5F4(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t *sub_24182E6B8(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *ObjCClassFromMetadata;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v23 = *v3;
  v24 = a2;
  v6 = sub_2418A9FF0();
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24182E958();
  v11 = v10;
  v27 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[2] = (uint64_t)a1;
  v15 = (char *)v3 + OBJC_IVAR____TtC14MentalHealthUI29StateOfMindCalendarDataSource_gregorianCalendar;
  v16 = sub_2418A8238();
  v25 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v15, a2, v16);
  sub_2417AC38C();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2418D4D90;
  sub_241762EFC(0, &qword_257152700);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  a1;
  v19 = objc_msgSend(ObjCClassFromMetadata, sel_stateOfMindType);
  v20 = objc_msgSend((id)objc_opt_self(), sel_queryDescriptorWithSampleType_, v19);

  *(_QWORD *)(v17 + 32) = v20;
  v28 = v17;
  sub_2418A9EC4();
  v28 = v23;
  swift_getMetatypeMetadata();
  sub_2418A9DF8();
  sub_2418A9FFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24172159C((unint64_t *)&unk_2571526F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE459F8], MEMORY[0x24BE459F0]);
  sub_2418A8460();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
  sub_24172159C(&qword_257152708, (uint64_t (*)(uint64_t))sub_24182E958, MEMORY[0x24BDB96F8]);
  v21 = sub_2418A843C();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v16);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v11);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC14MentalHealthUI29StateOfMindCalendarDataSource_modelsDidChangePublisher) = v21;
  return v3;
}

void sub_24182E958()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571526E8)
  {
    sub_2418A9FF0();
    sub_24172159C((unint64_t *)&unk_2571526F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE459F8], MEMORY[0x24BE459F0]);
    v0 = sub_2418A8364();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571526E8);
  }
}

void sub_24182E9D0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_2418AA3C8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_24182EA24(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_24182EA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t inited;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v8 = sub_2418A84E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24180F814(21, a4);
  sub_241830154(0, &qword_257150748);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D5FA0;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 32) = sub_24182F490(1, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 40) = sub_24182F490(2, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 48) = sub_24182F490(3, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 56) = sub_24182F490(4, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 64) = sub_24182F490(5, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 72) = sub_24182F490(6, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 80) = sub_24182F490(7, v12);
  sub_24182F790(inited, (uint64_t)&unk_2511ABF30, a2, (void (*)(uint64_t, uint64_t))sub_241830148, (uint64_t (*)(_QWORD))sub_2417782D8, a3, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_24182EC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t inited;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v8 = sub_2418A84E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24180F814(21, a4);
  sub_241830154(0, &qword_257150748);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D5FA0;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 32) = sub_24182F490(1, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 40) = sub_24182F490(2, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 48) = sub_24182F490(3, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 56) = sub_24182F490(4, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 64) = sub_24182F490(5, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 72) = sub_24182F490(6, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 80) = sub_24182F490(7, v12);
  sub_24182F790(inited, (uint64_t)&unk_2511ABF88, a2, (void (*)(uint64_t, uint64_t))sub_2418301A4, (uint64_t (*)(_QWORD))sub_24177D628, a3, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_24182EE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t inited;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v8 = sub_2418A84E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24180F814(21, a4);
  sub_241830154(0, &qword_257150748);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D5FA0;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 32) = sub_24182F490(1, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 40) = sub_24182F490(2, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 48) = sub_24182F490(3, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 56) = sub_24182F490(4, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 64) = sub_24182F490(5, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 72) = sub_24182F490(6, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 80) = sub_24182F490(7, v12);
  sub_24182F790(inited, (uint64_t)&unk_2511AC038, a2, (void (*)(uint64_t, uint64_t))sub_2418301B0, (uint64_t (*)(_QWORD))sub_2417F3EA8, a3, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_24182F078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t inited;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v8 = sub_2418A84E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24180F814(21, a4);
  sub_241830154(0, &qword_257150748);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D5FA0;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 32) = sub_24182F490(1, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 40) = sub_24182F490(2, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 48) = sub_24182F490(3, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 56) = sub_24182F490(4, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 64) = sub_24182F490(5, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 72) = sub_24182F490(6, v12);
  v14(v12, a1, v8);
  *(_QWORD *)(inited + 80) = sub_24182F490(7, v12);
  sub_24182F790(inited, (uint64_t)&unk_2511AC090, a2, (void (*)(uint64_t, uint64_t))sub_241830198, (uint64_t (*)(_QWORD))sub_2417FB840, a3, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_24182F280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t inited;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v21;

  HIDWORD(v21) = a5;
  v13 = sub_2418A84E4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24180F814(21, a7);
  sub_241830154(0, &qword_257150748);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D5FA0;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19(v17, a1, v13);
  *(_QWORD *)(inited + 32) = sub_24182F490(1, v17);
  v19(v17, a1, v13);
  *(_QWORD *)(inited + 40) = sub_24182F490(2, v17);
  v19(v17, a1, v13);
  *(_QWORD *)(inited + 48) = sub_24182F490(3, v17);
  v19(v17, a1, v13);
  *(_QWORD *)(inited + 56) = sub_24182F490(4, v17);
  v19(v17, a1, v13);
  *(_QWORD *)(inited + 64) = sub_24182F490(5, v17);
  v19(v17, a1, v13);
  *(_QWORD *)(inited + 72) = sub_24182F490(6, v17);
  v19(v17, a1, v13);
  *(_QWORD *)(inited + 80) = sub_24182F490(7, v17);
  sub_24182F948(inited, (uint64_t)&unk_2511AC0E8, a2, a3, a4, SBYTE4(v21), a6, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_24182F490(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t inited;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v4 = sub_2418A84E4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v21 - v11;
  sub_241830154(0, (unint64_t *)&qword_25714D510);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D51D0;
  sub_2417AC4F8();
  v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v14(v12, a2, v4);
  LOBYTE(v22) = 1;
  v14(v9, v12, v4);
  Color.init(valenceClassification:variant:colorScheme:)(a1, (unsigned __int8 *)&v22, (uint64_t)v9);
  v15 = sub_2418AA1D0();
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v12, v4);
  *(_QWORD *)(inited + 32) = v15;
  v14(v12, a2, v4);
  LOBYTE(v22) = 0;
  v14(v9, v12, v4);
  Color.init(valenceClassification:variant:colorScheme:)(a1, (unsigned __int8 *)&v22, (uint64_t)v9);
  v17 = sub_2418AA1D0();
  v16(v12, v4);
  *(_QWORD *)(inited + 40) = v17;
  v22 = inited;
  sub_2418A9EC4();
  sub_24182F638(v22);
  v19 = v18;
  v16(a2, v4);
  return v19;
}

void sub_24182F638(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void *v7;

  if (a1 >> 62)
  {
    v2 = sub_2418AA398();
    if (!v2)
      goto LABEL_12;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      goto LABEL_12;
  }
  sub_2418AA338();
  if (v2 < 0)
  {
    __break(1u);
LABEL_14:
    JUMPOUT(0x24269C120);
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = 0;
    do
    {
      v4 = v3 + 1;
      v5 = MEMORY[0x24269CAD4]();
      MEMORY[0x24269BDB4](v5);
      sub_2418AA320();
      sub_2418AA344();
      sub_2418AA350();
      sub_2418AA32C();
      v3 = v4;
    }
    while (v2 != v4);
  }
  else
  {
    v6 = (void **)(a1 + 32);
    do
    {
      v7 = *v6++;
      MEMORY[0x24269BDB4](v7);
      sub_2418AA320();
      sub_2418AA344();
      sub_2418AA350();
      sub_2418AA32C();
      --v2;
    }
    while (v2);
  }
LABEL_12:
  swift_bridgeObjectRelease();
  goto LABEL_14;
}

__n128 sub_24182F790@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  double v14;
  int64_t v15;
  uint64_t v16;
  double *v18;
  unint64_t v19;
  double v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  __n128 result;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;

  v14 = a8 - a7;
  v15 = *(_QWORD *)(a2 + 16);
  v16 = MEMORY[0x24BEE4AF8];
  if (v15)
  {
    v30 = MEMORY[0x24BEE4AF8];
    sub_24183D590(0, v15, 0);
    v16 = v30;
    v18 = (double *)(a2 + 32);
    v19 = *(_QWORD *)(v30 + 16);
    do
    {
      v20 = *v18;
      v29 = v16;
      v21 = *(_QWORD *)(v16 + 24);
      if (v19 >= v21 >> 1)
        sub_24183D590(v21 > 1, v19 + 1, 1);
      *(_QWORD *)(v16 + 16) = v19 + 1;
      *(double *)(v16 + 8 * v19 + 32) = (v20 - a7) / v14;
      ++v18;
      ++v19;
      --v15;
    }
    while (v15);
  }
  sub_24182FB0C(a1, v16);
  sub_2418A99FC();
  sub_2418A9A08();
  sub_2418A873C();
  v22 = sub_2418A9960();
  v24 = v23;
  v25 = sub_2418A882C();
  v26 = sub_2418A90D8();
  a4(a3, a6);
  swift_bridgeObjectRelease();
  v27 = a6 + *(int *)(a5(0) + 36);
  *(_QWORD *)v27 = v29;
  result = v31;
  *(__n128 *)(v27 + 8) = v31;
  *(_QWORD *)(v27 + 24) = v32;
  *(_QWORD *)(v27 + 32) = v33;
  *(_QWORD *)(v27 + 40) = v25;
  *(_BYTE *)(v27 + 48) = v26;
  *(_QWORD *)(v27 + 56) = v22;
  *(_QWORD *)(v27 + 64) = v24;
  return result;
}

uint64_t sub_24182F948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  char v9;
  uint64_t v10;
  uint64_t v12;
  double v16;
  int64_t v17;
  uint64_t v18;
  double *v22;
  unint64_t v23;
  double v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v9 = a6;
  v10 = a5;
  v12 = a3;
  v16 = a9 - a8;
  v17 = *(_QWORD *)(a2 + 16);
  v18 = MEMORY[0x24BEE4AF8];
  if (v17)
  {
    v34 = MEMORY[0x24BEE4AF8];
    sub_24183D590(0, v17, 0);
    v18 = v34;
    v22 = (double *)(a2 + 32);
    v23 = *(_QWORD *)(v34 + 16);
    do
    {
      v24 = *v22;
      v33 = v18;
      v25 = *(_QWORD *)(v18 + 24);
      if (v23 >= v25 >> 1)
        sub_24183D590(v25 > 1, v23 + 1, 1);
      *(_QWORD *)(v18 + 16) = v23 + 1;
      *(double *)(v18 + 8 * v23 + 32) = (v24 - a8) / v16;
      ++v22;
      ++v23;
      --v17;
    }
    while (v17);
    v9 = a6;
    v10 = a5;
    v12 = a3;
  }
  sub_24182FB0C(a1, v18);
  sub_2418A99FC();
  sub_2418A9A08();
  sub_2418A873C();
  v26 = sub_2418A9960();
  v28 = v27;
  v29 = sub_2418A882C();
  v30 = sub_2418A90D8();
  *(_QWORD *)a7 = v12;
  *(_QWORD *)(a7 + 8) = a4;
  *(_QWORD *)(a7 + 16) = v10;
  *(_BYTE *)(a7 + 24) = v9;
  *(_QWORD *)(a7 + 32) = v33;
  *(_OWORD *)(a7 + 40) = v35;
  *(_QWORD *)(a7 + 56) = v36;
  *(_QWORD *)(a7 + 64) = v37;
  *(_QWORD *)(a7 + 72) = v29;
  *(_BYTE *)(a7 + 80) = v30;
  *(_QWORD *)(a7 + 88) = v26;
  *(_QWORD *)(a7 + 96) = v28;
  swift_retain();
  return swift_bridgeObjectRelease();
}

unint64_t sub_24182FB0C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t result;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  double v13;
  unint64_t v14;
  double v15;

  sub_2418A9D5C();
  v4 = *(_QWORD *)(a2 + 16);
  result = sub_24182FF28(0, v4, a2, v15);
  if ((v6 & 1) == 0)
  {
LABEL_4:
    v7 = result - 1;
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else if (v7 < v4)
    {
      if (result < v4)
      {
        v8 = *(_QWORD *)(a1 + 16);
        if (v7 < v8)
        {
          if (result < v8)
          {
            v9 = a1 + 32;
            v10 = *(_QWORD *)(a1 + 32 + 8 * v7);
            v11 = *(_QWORD *)(v9 + 8 * result);
            v12 = *(_QWORD *)(v10 + 16);
            if (v12 == *(_QWORD *)(v11 + 16))
            {
              v13 = (v15 - *(double *)(a2 + 32 + 8 * v7))
                  / (*(double *)(a2 + 32 + 8 * result) - *(double *)(a2 + 32 + 8 * v7));
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v14 = sub_24182FFAC(0, v12, v10, v11, v13);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return MEMORY[0x24269C120](v14);
            }
            goto LABEL_16;
          }
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (v4)
  {
    result = v4 - 1;
    goto LABEL_4;
  }
LABEL_17:
  __break(1u);
  return result;
}

double sub_24182FC6C@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  double v4;
  double result;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  sub_241830154(0, (unint64_t *)&qword_25714C5F0);
  if ((a1 & 1) != 0)
  {
    v4 = COERCE_DOUBLE(swift_allocObject());
    *(_OWORD *)(*(_QWORD *)&v4 + 16) = xmmword_2418D1940;
    *(_QWORD *)(*(_QWORD *)&v4 + 32) = sub_2418A9600();
    *(_QWORD *)(*(_QWORD *)&v4 + 40) = sub_2418A960C();
  }
  else
  {
    v4 = COERCE_DOUBLE(swift_allocObject());
    *(_OWORD *)(*(_QWORD *)&v4 + 16) = xmmword_2418D23E0;
    *(_QWORD *)(*(_QWORD *)&v4 + 32) = sub_2418A9600();
  }
  *(double *)&v6 = v4;
  sub_2418A9EC4();
  MEMORY[0x24269C120](*(_QWORD *)&v4);
  sub_2418A873C();
  result = v4;
  *(_OWORD *)a2 = v6;
  *(_OWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  return result;
}

uint64_t sub_24182FD48(void *a1, void *a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v23;
  uint64_t v24;

  v6 = sub_2418A95B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_CGColor);
  v12 = sub_2418A9FE4();

  if (!v12)
    goto LABEL_11;
  v13 = objc_msgSend(a2, sel_CGColor);
  v14 = sub_2418A9FE4();

  if (!v14)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    v23 = a1;
    goto LABEL_18;
  }
  v15 = *(_QWORD *)(v12 + 16);
  if (!v15)
  {
    __break(1u);
    goto LABEL_13;
  }
  v16 = *(_QWORD *)(v14 + 16);
  if (!v16)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v15 < 2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v16 < 2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v15 < 3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v16 < 3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    JUMPOUT(0x24269BE5CLL);
  }
  v17 = *(double *)(v12 + 32) + (*(double *)(v14 + 32) - *(double *)(v12 + 32)) * a3;
  v18 = *(double *)(v12 + 40) + (*(double *)(v14 + 40) - *(double *)(v12 + 40)) * a3;
  v19 = *(double *)(v12 + 48);
  v20 = *(double *)(v14 + 48);
  swift_bridgeObjectRelease();
  v21 = *(double *)(v12 + 48);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BDF3C28], v6);
  return MEMORY[0x24269BE50](v10, v17, v18, v19 + (v20 - v21) * a3, 1.0);
}

uint64_t sub_24182FF28(uint64_t result, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  if (result == a2)
    return 0;
  v4 = result;
  if (a2 >= result)
  {
    if (*(_QWORD *)(a3 + 16) <= result)
      v5 = result;
    else
      v5 = *(_QWORD *)(a3 + 16);
    while (result < a2)
    {
      if (v4 < 0)
        goto LABEL_15;
      if (v5 == result)
        goto LABEL_16;
      if (*(double *)(a3 + 32 + 8 * result) > a4)
        return result;
      if (a2 == ++result)
        return 0;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_24182FFAC(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  unint64_t v5;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  int64_t v19;
  uint64_t v20;

  v19 = result;
  v5 = a2 - result;
  if (__OFSUB__(a2, result))
    goto LABEL_20;
  result = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_2418AA338();
    result = sub_2417AC4F8();
    if (a2 < v19 || (v5 & 0x8000000000000000) != 0)
      goto LABEL_21;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10 <= v19)
      v10 = v19;
    v11 = v10 - v19;
    if (*(_QWORD *)(a4 + 16) <= v19)
      v12 = v19;
    else
      v12 = *(_QWORD *)(a4 + 16);
    v13 = v12 - v19;
    v14 = 16 * v19 + 32;
    v15 = a3 + v14;
    v16 = a4 + v14;
    while ((v19 & 0x8000000000000000) == 0)
    {
      if (!v11)
        goto LABEL_18;
      swift_retain();
      result = sub_2418AA1D0();
      if (!v13)
        goto LABEL_19;
      v17 = (void *)result;
      v16 += 16;
      swift_retain();
      v18 = (void *)sub_2418AA1D0();
      sub_24182FD48(v17, v18, a5);

      sub_2418AA320();
      sub_2418AA344();
      sub_2418AA350();
      result = sub_2418AA32C();
      --v13;
      --v11;
      v15 += 16;
      if (!--v5)
        return v20;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_241830148(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_2417781F4);
}

void sub_241830154(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_2418AA4B8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_241830198(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_2417FB864);
}

uint64_t sub_2418301A4(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_24177D428);
}

uint64_t sub_2418301B0(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_2417F3ECC);
}

uint64_t *sub_2418301BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_2418A8EB0();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v19 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v20 = (char *)v14 + v19;
      v21 = (char *)v15 + v19;
      v22 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_2418303F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 24);
  sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2418A8EB0();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v6 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
  v10 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *sub_241830534(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2418A8EB0();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v18 = (char *)v12 + v17;
    v19 = (char *)v13 + v17;
    v20 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_241830734(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1 + v6, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v11 = *(int *)(a3 + 24);
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    sub_24172B778((uint64_t)a1 + v11, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs);
    sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2418A8EB0();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      v17 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v18 = (char *)v12 + v17;
      v19 = (char *)v13 + v17;
      v20 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_24183097C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v16 = v15;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2418A8EB0();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v13, v14, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    }
    v20 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v21 = &v13[v20];
    v22 = &v14[v20];
    v23 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_241830B74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1 + v7, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    v14 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    sub_24172B778((uint64_t)a1 + v14, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs);
    sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2418A8EB0();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      v22 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v23 = &v15[v22];
      v24 = &v16[v22];
      v25 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241830DB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241830DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_24172570C(0, qword_25714C0E0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_241830E90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241830E9C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_24172570C(0, qword_25714C0E0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for IntroPhaseHeaderText()
{
  uint64_t result;

  result = qword_257152778;
  if (!qword_257152778)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241830FA4()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_241831064()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241831074@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  unsigned int *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t KeyPath;
  char v72;
  void (*v73)(char *, uint64_t);
  unsigned int *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v104 = a1;
  v2 = sub_2418A88D4();
  MEMORY[0x24BDAC7A8](v2, v3);
  v103 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_2418A84E4();
  v87 = *(_QWORD *)(v89 - 8);
  v6 = MEMORY[0x24BDAC7A8](v89, v5);
  v86 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v85 = (char *)&v84 - v9;
  v102 = sub_2418A99B4();
  v106 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102, v10);
  v101 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2418A87B4();
  v97 = *(_QWORD *)(v12 - 8);
  v98 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v96 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2418A91E0();
  v16 = *(_QWORD *)(v15 - 8);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v99 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v84 - v21;
  v105 = type metadata accessor for IntroPhaseSpecs();
  v24 = MEMORY[0x24BDAC7A8](v105, v23);
  v93 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v91 = (char *)&v84 - v28;
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v84 - v30;
  sub_24183179C();
  v100 = v32;
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)&v84 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v1[1];
  v107 = *v1;
  v108 = v36;
  sub_241721040();
  swift_bridgeObjectRetain();
  v37 = sub_2418A92D0();
  v39 = v38;
  v95 = v40;
  v42 = v41 & 1;
  v84 = type metadata accessor for IntroPhaseHeaderText();
  v43 = *(int *)(v84 + 24);
  v88 = v1;
  v90 = (char *)v1 + v43;
  sub_241861064((uint64_t)v31);
  sub_2418A9120();
  v44 = sub_2418A879C();
  v45 = (unsigned int *)MEMORY[0x24BDF17C8];
  if ((v44 & 1) == 0)
    v45 = (unsigned int *)MEMORY[0x24BDF17D0];
  v46 = v99;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v99, *v45, v15);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v46, v15);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
  sub_24172588C((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  v47 = sub_2418A9294();
  v49 = v48;
  v51 = v50 & 1;
  v52 = v42;
  v53 = (uint64_t)v91;
  sub_2417289EC(v37, v39, v52);
  swift_release();
  swift_bridgeObjectRelease();
  sub_2418A9198();
  v54 = sub_2418A9258();
  v94 = v55;
  v95 = v54;
  v92 = v56;
  v58 = v57;
  sub_2417289EC(v47, v49, v51);
  swift_bridgeObjectRelease();
  sub_241861064(v53);
  v60 = v96;
  v59 = v97;
  v61 = v98;
  (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, *MEMORY[0x24BDECEE0], v98);
  v62 = sub_2418A87A8();
  v63 = *(void (**)(char *, uint64_t))(v59 + 8);
  v64 = (uint64_t)v93;
  v63(v60, v61);
  v65 = sub_2417289A8(v53, v64, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  v99 = v58;
  if ((v62 & 1) != 0)
  {
    v66 = sub_2417DB58C(v65);
    sub_24172588C(v64, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
    v67 = v89;
    v68 = v87;
    v69 = v86;
    v70 = (uint64_t)v85;
    if ((v66 & 1) != 0)
    {
      LODWORD(v105) = 0;
      v98 = 1;
      goto LABEL_8;
    }
  }
  else
  {
    sub_24172588C(v64, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
    v67 = v89;
    v68 = v87;
    v69 = v86;
    v70 = (uint64_t)v85;
  }
  v98 = 0;
  LODWORD(v105) = 1;
LABEL_8:
  sub_24172588C(v53, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  KeyPath = swift_getKeyPath();
  v97 = swift_getKeyPath();
  LODWORD(v96) = sub_2418A8E68();
  v93 = (char *)swift_getKeyPath();
  sub_241861034(v70);
  (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v69, *MEMORY[0x24BDEB3F0], v67);
  v72 = sub_2418A84D8();
  v73 = *(void (**)(char *, uint64_t))(v68 + 8);
  v73(v69, v67);
  v73((char *)v70, v67);
  v74 = (unsigned int *)MEMORY[0x24BDF5098];
  v75 = v106;
  if ((v72 & 1) == 0)
    v74 = (unsigned int *)MEMORY[0x24BDF50D0];
  v76 = v101;
  v77 = v102;
  (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v101, *v74, v102);
  v78 = v92 & 1;
  v79 = (uint64_t)v103;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v103, v76, v77);
  sub_2417289A8(v79, (uint64_t)&v35[*(int *)(v100 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  v81 = v94;
  v80 = v95;
  *(_QWORD *)v35 = v95;
  *((_QWORD *)v35 + 1) = v81;
  v92 = v78;
  v35[16] = v78;
  v82 = v98;
  *((_QWORD *)v35 + 3) = v99;
  *((_QWORD *)v35 + 4) = KeyPath;
  *((_QWORD *)v35 + 5) = v82;
  v35[48] = v105;
  *((_QWORD *)v35 + 7) = v97;
  *((_QWORD *)v35 + 8) = 0x3FE3333333333333;
  *((_DWORD *)v35 + 18) = (_DWORD)v96;
  *((_WORD *)v35 + 38) = 256;
  *((_QWORD *)v35 + 10) = v93;
  v35[88] = 1;
  sub_241728A50(v80, v81, v78);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24172588C(v79, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v76, v77);
  sub_2417289EC(v80, v81, v92);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_2418319D0((uint64_t)v35, v104);
}

void sub_24183179C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571527B8)
  {
    sub_2417DC470(255, &qword_2571527C0, (void (*)(uint64_t))sub_241831820, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0]);
    sub_2418A88D4();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571527B8);
  }
}

void sub_241831820()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571527C8)
  {
    sub_24183187C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571527C8);
  }
}

void sub_24183187C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571527D0)
  {
    sub_2417DC470(255, &qword_2571527D8, (void (*)(uint64_t))sub_241831900, &qword_25714F5E0, MEMORY[0x24BEE50B0]);
    sub_24183195C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571527D0);
  }
}

void sub_241831900()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571527E0)
  {
    sub_2417DC510();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571527E0);
  }
}

void sub_24183195C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257150D20)
  {
    v0 = sub_2418A8F4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257150D20);
  }
}

uint64_t sub_2418319D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24183179C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241831A14()
{
  return sub_241721DF8(&qword_2571527E8, (uint64_t (*)(uint64_t))sub_24183179C, (uint64_t (*)(void))sub_241831A48, MEMORY[0x24BDEDB58]);
}

unint64_t sub_241831A48()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2571527F0;
  if (!qword_2571527F0)
  {
    v1 = MEMORY[0x24BDEC3D0];
    sub_2417DC470(255, &qword_2571527C0, (void (*)(uint64_t))sub_241831820, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0]);
    v3 = v2;
    v4[0] = sub_241721DF8(&qword_2571527F8, (uint64_t (*)(uint64_t))sub_241831820, (uint64_t (*)(void))sub_241831B10, MEMORY[0x24BDEDB80]);
    v4[1] = sub_2417DC998((unint64_t *)&qword_25714CD58, (unint64_t *)&qword_25714C278, v1);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v4);
    atomic_store(result, (unint64_t *)&qword_2571527F0);
  }
  return result;
}

unint64_t sub_241831B10()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257152800;
  if (!qword_257152800)
  {
    sub_24183187C();
    v2 = v1;
    v3[0] = sub_241831B90();
    v3[1] = sub_24172159C((unint64_t *)&qword_257150D38, (uint64_t (*)(uint64_t))sub_24183195C, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257152800);
  }
  return result;
}

unint64_t sub_241831B90()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_257152808;
  if (!qword_257152808)
  {
    v1 = MEMORY[0x24BEE50B0];
    sub_2417DC470(255, &qword_2571527D8, (void (*)(uint64_t))sub_241831900, &qword_25714F5E0, MEMORY[0x24BEE50B0]);
    v3 = v2;
    v4[0] = sub_241831C38();
    v4[1] = sub_2417DC998(&qword_257150970, &qword_25714F5E0, v1);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v4);
    atomic_store(result, (unint64_t *)&qword_257152808);
  }
  return result;
}

unint64_t sub_241831C38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_257152810;
  if (!qword_257152810)
  {
    sub_241831900();
    v2 = v1;
    v3 = sub_24172159C(&qword_257150968, (uint64_t (*)(uint64_t))sub_2417DC510, MEMORY[0x24BDF1028]);
    v4[0] = MEMORY[0x24BDF1F80];
    v4[1] = v3;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257152810);
  }
  return result;
}

uint64_t type metadata accessor for StateOfMindCalendarSpacerCell()
{
  return objc_opt_self();
}

_QWORD *sub_241831D88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v5 = (void *)a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v5;
    v6 = *(int *)(a3 + 28);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    v9 = v5;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v15 = (char *)v7 + v14;
      v16 = (char *)v8 + v14;
      v17 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_241831F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  swift_release();

  v4 = a1 + *(int *)(a2 + 28);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_241832040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(int *)(a3 + 28);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  v8 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8EB0();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v10 + 16))(v6, v7, v9);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
    v12 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v13 = (char *)v6 + v12;
    v14 = (char *)v7 + v12;
    v15 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2418321D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  v7 = (void *)a2[4];
  v8 = (void *)a1[4];
  a1[4] = v7;
  v9 = v7;

  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 28);
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v10, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2418A8EB0();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 16))(v11, v12, v14);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      v17 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v18 = (char *)v11 + v17;
      v19 = (char *)v12 + v17;
      v20 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2418323A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 28);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v14 = &v6[v13];
    v15 = &v7[v13];
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_241832514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v7 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 28);
    v9 = (char *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60(a1 + v8, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v11);
    v13 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2418A8EB0();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v9, v10, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
      }
      v17 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v18 = &v9[v17];
      v19 = &v10[v17];
      v20 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2418326D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2418326E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ReminderView(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257152898);
}

void sub_241832704()
{
  sub_241836400();
}

uint64_t sub_241832720()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241832730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  void *v61;
  id v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t, uint64_t);
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  unint64_t v123;
  uint64_t v124;

  v119 = a2;
  v3 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x24BDAC7A8](v3, v4);
  v113 = (uint64_t)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for ReminderView(0);
  v106 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111, v6);
  v107 = v7;
  v108 = (uint64_t)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for EditButton();
  MEMORY[0x24BDAC7A8](v109, v8);
  v112 = (uint64_t *)((char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241834884(0);
  v110 = v10;
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v118 = (uint64_t)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v117 = (uint64_t)&v100 - v15;
  sub_241834798(0);
  v105 = v16;
  v104 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v101 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, &qword_2571528F0, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v116 = (uint64_t)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v24);
  v114 = (char *)&v100 - v25;
  v26 = type metadata accessor for BulletPointView(0);
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v115 = (uint64_t)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v102 = (uint64_t)&v100 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v36 = (char *)&v100 - v35;
  MEMORY[0x24BDAC7A8](v34, v37);
  v121 = (uint64_t)&v100 - v38;
  if (qword_25714B958 != -1)
    swift_once();
  v39 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v40 = sub_2418A7EFC();
  v42 = v41;
  swift_bridgeObjectRelease();

  v43 = sub_241833178();
  v45 = v44;
  *(_QWORD *)&v36[*(int *)(v26 + 28)] = swift_getKeyPath();
  v46 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v120 = a1;
  v103 = v47;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v36 = v40;
  *((_QWORD *)v36 + 1) = v42;
  *((_QWORD *)v36 + 2) = v43;
  *((_QWORD *)v36 + 3) = v45;
  strcpy(v36 + 32, "sun.max.fill");
  v36[45] = 0;
  *((_WORD *)v36 + 23) = -5120;
  v48 = (uint64_t *)&v36[*(int *)(v26 + 32)];
  *v48 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v46);
  v50 = v49;
  swift_storeEnumTagMultiPayload();
  sub_241731B4C((uint64_t)v36, v121, type metadata accessor for BulletPointView);
  v51 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v52 = sub_2418A7EFC();
  v54 = v53;
  swift_bridgeObjectRelease();

  v55 = sub_241833314();
  v57 = v56;
  *(_QWORD *)&v36[*(int *)(v26 + 28)] = swift_getKeyPath();
  v58 = v120;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v36 = v52;
  *((_QWORD *)v36 + 1) = v54;
  *((_QWORD *)v36 + 2) = v55;
  *((_QWORD *)v36 + 3) = v57;
  *((_QWORD *)v36 + 4) = 0xD000000000000014;
  *((_QWORD *)v36 + 5) = 0x80000002418DE5B0;
  v59 = (uint64_t *)&v36[*(int *)(v26 + 32)];
  *v59 = swift_getKeyPath();
  v103 = v50;
  swift_storeEnumTagMultiPayload();
  v60 = v102;
  sub_241731B4C((uint64_t)v36, v102, type metadata accessor for BulletPointView);
  v61 = *(void **)(v58 + 32);
  if (objc_msgSend(v61, sel_hasEverEnabledAStateOfMindReminderNotification))
  {
    v62 = objc_msgSend(v61, sel_customReminderSchedule);
    sub_2417EAF18();
    v63 = sub_2418A9EB8();

    if (v63 >> 62)
    {
      swift_bridgeObjectRetain();
      v64 = sub_2418AA398();
      swift_bridgeObjectRelease();
    }
    else
    {
      v64 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v65 = (uint64_t)v114;
    v66 = (uint64_t)v101;
    if (v64)
    {
      v123 = v63;
      swift_getKeyPath();
      sub_24172570C(0, &qword_25714D568, (uint64_t (*)(uint64_t))sub_2417EAF18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      sub_2417EAF54();
      sub_24172159C(&qword_257150E50, (uint64_t (*)(uint64_t))sub_2417EAF18, MEMORY[0x24BEE5BD8]);
      sub_24172159C(qword_257152910, type metadata accessor for BulletPointView, (uint64_t)&unk_2418D8E60);
      sub_2418A9888();
      sub_2418347B4();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v66, 0, 1, v67);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_2418347B4();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v66, 1, 1, v69);
    }
    v58 = v120;
    sub_241731B4C(v66, v65, (uint64_t (*)(_QWORD))sub_241834798);
    v68 = 0;
  }
  else
  {
    v68 = 1;
    v65 = (uint64_t)v114;
  }
  v70 = v121;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v65, v68, 1, v105);
  v71 = v108;
  sub_2417289A8(v58, v108, type metadata accessor for ReminderView);
  v72 = (*(unsigned __int8 *)(v106 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
  v73 = swift_allocObject();
  sub_241731B4C(v71, v73 + v72, type metadata accessor for ReminderView);
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  swift_retain();
  v74 = sub_2418A8760();
  v75 = (uint64_t)v112;
  *v112 = v74;
  *(_QWORD *)(v75 + 8) = v76;
  v122 = 0;
  sub_2418A96C0();
  v77 = v124;
  *(_BYTE *)(v75 + 16) = v123;
  *(_QWORD *)(v75 + 24) = v77;
  *(_QWORD *)(v75 + 32) = sub_2418349C8;
  *(_QWORD *)(v75 + 40) = v73;
  v78 = (uint64_t *)(v75 + *(int *)(v109 + 28));
  *v78 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  LOBYTE(v78) = sub_2418A90E4();
  v79 = v113;
  sub_2418617E4(v113);
  sub_24172588C(v79, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_2418A84A8();
  v81 = v80;
  v83 = v82;
  v85 = v84;
  v87 = v86;
  v88 = v118;
  sub_2417289A8(v75, v118, (uint64_t (*)(_QWORD))type metadata accessor for EditButton);
  v89 = v88 + *(int *)(v110 + 36);
  *(_BYTE *)v89 = (_BYTE)v78;
  *(_QWORD *)(v89 + 8) = v81;
  *(_QWORD *)(v89 + 16) = v83;
  *(_QWORD *)(v89 + 24) = v85;
  *(_QWORD *)(v89 + 32) = v87;
  *(_BYTE *)(v89 + 40) = 0;
  sub_24172588C(v75, (uint64_t (*)(_QWORD))type metadata accessor for EditButton);
  v90 = v117;
  sub_241731B4C(v88, v117, (uint64_t (*)(_QWORD))sub_241834884);
  sub_2417289A8(v70, (uint64_t)v36, type metadata accessor for BulletPointView);
  v91 = v115;
  sub_2417289A8(v60, v115, type metadata accessor for BulletPointView);
  v92 = v65;
  v93 = v65;
  v94 = v116;
  sub_241834A04(v92, v116);
  sub_2417289A8(v90, v88, (uint64_t (*)(_QWORD))sub_241834884);
  v95 = v119;
  sub_2417289A8((uint64_t)v36, v119, type metadata accessor for BulletPointView);
  sub_2418346E8();
  v97 = v96;
  sub_2417289A8(v91, v95 + *(int *)(v96 + 48), type metadata accessor for BulletPointView);
  sub_241834A04(v94, v95 + *(int *)(v97 + 64));
  sub_2417289A8(v88, v95 + *(int *)(v97 + 80), (uint64_t (*)(_QWORD))sub_241834884);
  sub_24172588C(v90, (uint64_t (*)(_QWORD))sub_241834884);
  v98 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_24173FC60(v93, &qword_2571528F0, (uint64_t (*)(uint64_t))sub_241834798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_24172588C(v60, type metadata accessor for BulletPointView);
  sub_24172588C(v121, type metadata accessor for BulletPointView);
  sub_24172588C(v88, (uint64_t (*)(_QWORD))sub_241834884);
  sub_24173FC60(v94, &qword_2571528F0, (uint64_t (*)(uint64_t))sub_241834798, v98);
  sub_24172588C(v91, type metadata accessor for BulletPointView);
  return sub_24172588C((uint64_t)v36, type metadata accessor for BulletPointView);
}

uint64_t sub_241833178()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;

  if (qword_25714B958 != -1)
    swift_once();
  v1 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v2 = sub_2418A7EFC();
  swift_bridgeObjectRelease();

  v3 = *(void **)(v0 + 32);
  if (objc_msgSend(v3, sel_hasEverEnabledAStateOfMindReminderNotification, 0xE000000000000000))
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_middayNotificationsEnabled);
    v4 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v2 = sub_2418A7EFC();
    swift_bridgeObjectRelease();

  }
  return v2;
}

uint64_t sub_241833314()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;

  if (qword_25714B958 != -1)
    swift_once();
  v1 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v2 = sub_2418A7EFC();
  swift_bridgeObjectRelease();

  v3 = *(void **)(v0 + 32);
  if (objc_msgSend(v3, sel_hasEverEnabledAStateOfMindReminderNotification, 0xE000000000000000))
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_endOfDayNotificationsEnabled);
    v4 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v2 = sub_2418A7EFC();
    swift_bridgeObjectRelease();

  }
  return v2;
}

uint64_t sub_2418334B0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = sub_2418A7F80();
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A7F98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2418A8100();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for CustomReminderModel();
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  v23 = v22;
  sub_2417A6C50(v22, (uint64_t)v21);
  sub_2417A6608((uint64_t)v17);
  sub_2418A7F8C();
  sub_2418A7F74();
  v24 = sub_2418A80DC();
  v39 = v25;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  if (qword_25714B958 != -1)
    swift_once();
  v26 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v27 = sub_2418A7EFC();
  v29 = v28;
  swift_bridgeObjectRelease();

  KeyPath = swift_getKeyPath();
  v31 = type metadata accessor for BulletPointView(0);
  *(uint64_t *)((char *)a2 + *(int *)(v31 + 28)) = KeyPath;
  v32 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v33 = v39;
  *a2 = v24;
  a2[1] = v33;
  a2[2] = v27;
  a2[3] = v29;
  a2[4] = 0x6B636F6C63;
  a2[5] = 0xE500000000000000;
  v34 = (uint64_t *)((char *)a2 + *(int *)(v31 + 32));
  *v34 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v32);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2418337B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A8C64();
  sub_2418617E4((uint64_t)v6);
  sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = 0x4024000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  sub_241728944(0, &qword_2571528D8, sub_2418346CC);
  return sub_241832730(v1, a1 + *(int *)(v8 + 44));
}

uint64_t sub_24183389C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = v1;
  v60 = a1;
  sub_241835A50(0);
  v61 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v55 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241731FB0(0, &qword_2571529E0, (uint64_t (*)(uint64_t))sub_241835AA4, v6, MEMORY[0x24BDEF380]);
  v57 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v59 = (uint64_t)&v54 - v9;
  v56 = type metadata accessor for BulletPointContent(0);
  MEMORY[0x24BDAC7A8](v56, v10);
  v12 = (uint64_t *)((char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241835AA4(0);
  v58 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2418A87B4();
  v22 = *(_QWORD *)(v21 - 8);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v27);
  v29 = (char *)&v54 - v28;
  type metadata accessor for BulletPointView(0);
  sub_241861A34((uint64_t)v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v26, *MEMORY[0x24BDECEA8], v21);
  sub_24172159C(&qword_25714CB30, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
  v30 = sub_2418A9D68();
  v31 = *(void (**)(char *, uint64_t))(v22 + 8);
  v31(v26, v21);
  v31(v29, v21);
  if ((v30 & 1) != 0)
  {
    v32 = sub_2418A8B74();
    sub_2418617E4((uint64_t)v16);
    sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
    v33 = (uint64_t)v55;
    *v55 = v32;
    *(_QWORD *)(v33 + 8) = 0x4024000000000000;
    *(_BYTE *)(v33 + 16) = 0;
    sub_241728944(0, qword_257152A08, (void (*)(uint64_t))type metadata accessor for BulletPointContent);
    v35 = v33 + *(int *)(v34 + 44);
    v36 = v2[1];
    v37 = v2[2];
    v38 = v2[3];
    v39 = v2[4];
    v40 = v2[5];
    *v12 = *v2;
    v12[1] = v36;
    v12[2] = v37;
    v12[3] = v38;
    v12[4] = v39;
    v12[5] = v40;
    v41 = (_QWORD *)((char *)v12 + *(int *)(v56 + 28));
    *v41 = swift_getKeyPath();
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    sub_241731B4C((uint64_t)v12, v35, type metadata accessor for BulletPointContent);
    v42 = sub_241835A50;
    sub_2417289A8(v33, v59, (uint64_t (*)(_QWORD))sub_241835A50);
    swift_storeEnumTagMultiPayload();
    sub_24172159C(&qword_2571529F8, (uint64_t (*)(uint64_t))sub_241835AA4, MEMORY[0x24BDF4700]);
    sub_24172159C(&qword_257152A00, (uint64_t (*)(uint64_t))sub_241835A50, MEMORY[0x24BDF4498]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2418A8D24();
    v43 = v33;
  }
  else
  {
    v44 = sub_2418A8C64();
    sub_2418617E4((uint64_t)v16);
    sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
    *(_QWORD *)v20 = v44;
    *((_QWORD *)v20 + 1) = 0x4024000000000000;
    v20[16] = 0;
    sub_241728944(0, &qword_2571529F0, (void (*)(uint64_t))type metadata accessor for BulletPointContent);
    v46 = (uint64_t)&v20[*(int *)(v45 + 44)];
    v47 = v2[1];
    v48 = v2[2];
    v49 = v2[3];
    v50 = v2[4];
    v51 = v2[5];
    *v12 = *v2;
    v12[1] = v47;
    v12[2] = v48;
    v12[3] = v49;
    v12[4] = v50;
    v12[5] = v51;
    v52 = (_QWORD *)((char *)v12 + *(int *)(v56 + 28));
    *v52 = swift_getKeyPath();
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    sub_241731B4C((uint64_t)v12, v46, type metadata accessor for BulletPointContent);
    v42 = sub_241835AA4;
    sub_2417289A8((uint64_t)v20, v59, (uint64_t (*)(_QWORD))sub_241835AA4);
    swift_storeEnumTagMultiPayload();
    sub_24172159C(&qword_2571529F8, (uint64_t (*)(uint64_t))sub_241835AA4, MEMORY[0x24BDF4700]);
    sub_24172159C(&qword_257152A00, (uint64_t (*)(uint64_t))sub_241835A50, MEMORY[0x24BDF4498]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2418A8D24();
    v43 = (uint64_t)v20;
  }
  return sub_24172588C(v43, (uint64_t (*)(_QWORD))v42);
}

uint64_t sub_241833E04@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unsigned int *v44;
  uint64_t v45;
  uint64_t KeyPath;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;

  v76 = a1;
  sub_24173EEE8(0, &qword_257152AB8, (uint64_t (*)(uint64_t))sub_241836564, sub_241836630, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v75 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v74 = (uint64_t *)((char *)&v64 - v7);
  v8 = type metadata accessor for LoggingFlowBlendMode();
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v71 = (uint64_t *)((char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10, v12);
  v72 = (uint64_t)&v64 - v13;
  v14 = sub_2418A91E0();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v64 - v21;
  v23 = type metadata accessor for NotificationsSetupPhaseSpecs();
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v70 = (uint64_t)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v27);
  v29 = (char *)&v64 - v28;
  sub_241731FB0(0, &qword_257152AE0, (uint64_t (*)(uint64_t))sub_24183664C, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v65 = v30;
  MEMORY[0x24BDAC7A8](v30, v31);
  v33 = (char *)&v64 - v32;
  sub_241836798();
  v69 = v34;
  v36 = MEMORY[0x24BDAC7A8](v34, v35);
  v73 = (uint64_t)&v64 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v36, v38);
  v66 = (uint64_t)&v64 - v40;
  MEMORY[0x24BDAC7A8](v39, v41);
  v67 = (uint64_t)&v64 - v42;
  v68 = v1;
  swift_bridgeObjectRetain();
  v64 = sub_2418A9660();
  type metadata accessor for BulletPointContent(0);
  sub_2418617E4((uint64_t)v29);
  sub_2418A9168();
  v43 = sub_2418A879C();
  v44 = (unsigned int *)MEMORY[0x24BDF17C8];
  if ((v43 & 1) == 0)
    v44 = (unsigned int *)MEMORY[0x24BDF17D0];
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v19, *v44, v14);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v19, v14);
  v45 = sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
  sub_24172588C((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  KeyPath = swift_getKeyPath();
  v47 = sub_2418A8E74();
  v48 = swift_getKeyPath();
  v49 = (uint64_t)v71;
  *v71 = v48;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v50 = v72;
  sub_241731B4C(v49, v72, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  sub_2417289A8(v50, (uint64_t)&v33[*(int *)(v65 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  *(_QWORD *)v33 = v64;
  *((_QWORD *)v33 + 1) = KeyPath;
  *((_QWORD *)v33 + 2) = v45;
  *((_DWORD *)v33 + 6) = v47;
  sub_24172588C(v50, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  v51 = v70;
  sub_2418617E4(v70);
  sub_24172588C(v51, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_2418A9960();
  sub_2418A861C();
  v52 = v66;
  sub_241836824((uint64_t)v33, v66);
  v53 = (_OWORD *)(v52 + *(int *)(v69 + 36));
  v54 = v78;
  *v53 = v77;
  v53[1] = v54;
  v53[2] = v79;
  sub_241836888((uint64_t)v33);
  v55 = v67;
  sub_241731B4C(v52, v67, (uint64_t (*)(_QWORD))sub_241836798);
  v56 = sub_2418A8C64();
  v57 = (uint64_t)v74;
  *v74 = v56;
  *(_QWORD *)(v57 + 8) = 0;
  *(_BYTE *)(v57 + 16) = 0;
  sub_241728944(0, &qword_257152B00, sub_241836564);
  sub_241834370(v68, v57 + *(int *)(v58 + 44));
  v59 = v73;
  sub_2417289A8(v55, v73, (uint64_t (*)(_QWORD))sub_241836798);
  v60 = v75;
  sub_2418368E4(v57, v75);
  v61 = v76;
  sub_2417289A8(v59, v76, (uint64_t (*)(_QWORD))sub_241836798);
  sub_241836948();
  sub_2418368E4(v60, v61 + *(int *)(v62 + 48));
  sub_2418369D4(v57);
  sub_24172588C(v55, (uint64_t (*)(_QWORD))sub_241836798);
  sub_2418369D4(v60);
  return sub_24172588C(v59, (uint64_t (*)(_QWORD))sub_241836798);
}

uint64_t sub_241834370@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x24BDAC7A8](v4, v5);
  v59 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A987C();
  v61 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24183661C(0);
  v60 = v11;
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v16);
  v63 = (uint64_t)&v53 - v17;
  v18 = a1[1];
  v64 = *a1;
  v65 = v18;
  sub_241721040();
  swift_bridgeObjectRetain();
  v19 = sub_2418A92D0();
  v21 = v20;
  v23 = v22 & 1;
  v24 = sub_2418A9288();
  v56 = v25;
  v57 = v24;
  v58 = v26;
  v55 = v27 & 1;
  sub_2417289EC(v19, v21, v23);
  swift_bridgeObjectRelease();
  v28 = a1[3];
  v64 = a1[2];
  v65 = v28;
  swift_bridgeObjectRetain();
  v29 = sub_2418A92D0();
  v31 = v30;
  v54 = v32;
  v34 = v33 & 1;
  sub_2418A9870();
  v35 = sub_2418A90E4();
  type metadata accessor for BulletPointContent(0);
  v36 = v59;
  sub_2418617E4(v59);
  sub_24172588C(v36, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_2418A84A8();
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v61;
  v45 = v62;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v15, v10, v62);
  v47 = &v15[*(int *)(v60 + 36)];
  *v47 = v35;
  *((_QWORD *)v47 + 1) = v38;
  *((_QWORD *)v47 + 2) = v40;
  *((_QWORD *)v47 + 3) = v42;
  *((_QWORD *)v47 + 4) = v44;
  v47[40] = 0;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v45);
  v48 = v63;
  sub_241731B4C((uint64_t)v15, v63, (uint64_t (*)(_QWORD))sub_24183661C);
  LOBYTE(v18) = v55;
  LOBYTE(v64) = v55;
  sub_2417289A8(v48, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_24183661C);
  v49 = v56;
  v50 = v57;
  *(_QWORD *)a2 = v57;
  *(_QWORD *)(a2 + 8) = v49;
  *(_BYTE *)(a2 + 16) = v18;
  *(_QWORD *)(a2 + 24) = v58;
  *(_QWORD *)(a2 + 32) = v29;
  *(_QWORD *)(a2 + 40) = v31;
  *(_BYTE *)(a2 + 48) = v34;
  *(_QWORD *)(a2 + 56) = v54;
  *(_WORD *)(a2 + 64) = 256;
  sub_241836580();
  sub_2417289A8((uint64_t)v15, a2 + *(int *)(v51 + 64), (uint64_t (*)(_QWORD))sub_24183661C);
  sub_241728A50(v50, v49, v18);
  swift_bridgeObjectRetain();
  sub_241728A50(v29, v31, v34);
  swift_bridgeObjectRetain();
  sub_24172588C(v63, (uint64_t (*)(_QWORD))sub_24183661C);
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_24183661C);
  sub_2417289EC(v29, v31, v34);
  swift_bridgeObjectRelease();
  sub_2417289EC(v50, v49, v64);
  return swift_bridgeObjectRelease();
}

void sub_2418346CC(uint64_t a1)
{
  sub_24172570C(a1, &qword_2571528E0, (uint64_t (*)(uint64_t))sub_2418346E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2418346E8()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_2571528E8)
  {
    type metadata accessor for BulletPointView(255);
    sub_24172570C(255, &qword_2571528F0, (uint64_t (*)(uint64_t))sub_241834798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_241834884(255);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_2571528E8);
  }
}

uint64_t type metadata accessor for BulletPointView(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257152970);
}

void sub_241834798(uint64_t a1)
{
  sub_24172570C(a1, &qword_2571528F8, (uint64_t (*)(uint64_t))sub_2418347B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2418347B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152900)
  {
    sub_24172570C(255, &qword_25714D568, (uint64_t (*)(uint64_t))sub_2417EAF18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2417EAF18();
    type metadata accessor for BulletPointView(255);
    sub_2417EAF54();
    sub_24172159C(&qword_257150E50, (uint64_t (*)(uint64_t))sub_2417EAF18, MEMORY[0x24BEE5BD8]);
    v0 = sub_2418A98A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152900);
  }
}

void sub_241834884(uint64_t a1)
{
  sub_2417869B0(a1, &qword_257152908, (void (*)(uint64_t))type metadata accessor for EditButton);
}

uint64_t sub_2418348A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for ReminderView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();

  v4 = v3 + *(int *)(v1 + 28);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2418349C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReminderView(0) - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 16))();
}

uint64_t sub_241834A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_2571528F0, (uint64_t (*)(uint64_t))sub_241834798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_241834A60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    v10 = *(int *)(a3 + 28);
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    a1[4] = a2[4];
    a1[5] = v9;
    sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A87B4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = *(int *)(a3 + 32);
    v16 = (uint64_t *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2418A8EB0();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v21 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v22 = (char *)v16 + v21;
      v23 = (char *)v17 + v21;
      v24 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_241834CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 32);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2418A8EB0();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v6 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
  v10 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *sub_241834E10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  v9 = *(int *)(a3 + 28);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  a1[4] = a2[4];
  a1[5] = v8;
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A87B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = *(int *)(a3 + 32);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_2418A8EB0();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v19 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v20 = (char *)v14 + v19;
    v21 = (char *)v15 + v19;
    v22 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_241835038(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
    v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v6, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714DEB8, v9, v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A87B4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v12 = *(int *)(a3 + 32);
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v12, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v15);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_2418A8EB0();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v13, v14, v16);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
      v19 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v20 = (char *)v13 + v19;
      v21 = (char *)v14 + v19;
      v22 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_2418352D0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = *(int *)(a3 + 32);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v17 = v16;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_2418A8EB0();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v14, v15, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
    }
    v21 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v22 = &v14[v21];
    v23 = &v15[v21];
    v24 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_2418354D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
    v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v9, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714DEB8, v12, v13);
    v15 = v14;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v10, v11, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v17 = *(int *)(a3 + 32);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v17, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v20);
    v22 = v21;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_2418A8EB0();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
      }
      v26 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v27 = &v18[v26];
      v28 = &v19[v26];
      v29 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241835740()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24183574C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714DF58, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_24183581C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241835828(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714DF58, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2418358F4()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_2418359BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571529B8;
  if (!qword_2571529B8)
  {
    sub_24173EEE8(255, &qword_2571529C0, (uint64_t (*)(uint64_t))sub_2418346CC, sub_241835A24, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_2571529B8);
  }
  return result;
}

uint64_t sub_241835A24()
{
  return sub_24172159C(&qword_2571529C8, (uint64_t (*)(uint64_t))sub_2418346CC, MEMORY[0x24BDF5428]);
}

uint64_t sub_241835A40()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241835A50(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_2571529D0, type metadata accessor for BulletPointContent, sub_241835A88, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF4480]);
}

uint64_t type metadata accessor for BulletPointContent(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257152A68);
}

uint64_t sub_241835A88()
{
  return sub_24172159C(&qword_2571529D8, type metadata accessor for BulletPointContent, (uint64_t)&unk_2418D8EC4);
}

void sub_241835AA4(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_2571529E8, type metadata accessor for BulletPointContent, sub_241835A88, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
}

uint64_t *sub_241835AC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    v8 = *(int *)(a3 + 28);
    v9 = (uint64_t *)((char *)a2 + v8);
    v10 = (uint64_t *)((char *)a1 + v8);
    a1[4] = a2[4];
    a1[5] = v7;
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v10, v9, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      }
      v15 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v16 = (char *)v10 + v15;
      v17 = (char *)v9 + v15;
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *v10 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_241835C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *sub_241835D7C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 28);
  v8 = (_QWORD *)((char *)a2 + v7);
  v9 = (_QWORD *)((char *)a1 + v7);
  a1[4] = a2[4];
  a1[5] = v6;
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v9, v8, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v14 = (char *)v9 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v9 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_241835F0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v6, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v14 = (char *)v7 + v13;
      v15 = (char *)v8 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_2418360F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v9, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v12);
    v14 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2418A8EB0();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v10, v11, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
      }
      v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v19 = &v10[v18];
      v20 = &v11[v18];
      v21 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2418362B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_241836354()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_2418363F0()
{
  sub_241836400();
}

void sub_241836400()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_241836494()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257152AA8;
  if (!qword_257152AA8)
  {
    sub_241731FB0(255, &qword_257152AB0, (uint64_t (*)(uint64_t))sub_241835AA4, (uint64_t (*)(uint64_t))sub_241835A50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_2571529F8, (uint64_t (*)(uint64_t))sub_241835AA4, MEMORY[0x24BDF4700]);
    v3[1] = sub_24172159C(&qword_257152A00, (uint64_t (*)(uint64_t))sub_241835A50, MEMORY[0x24BDF4498]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257152AA8);
  }
  return result;
}

uint64_t sub_241836554()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241836564(uint64_t a1)
{
  sub_24172570C(a1, &qword_257152AC0, (uint64_t (*)(uint64_t))sub_241836580, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241836580()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_257152AC8)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714CD98, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEDBA0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24183661C(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_257152AC8);
  }
}

void sub_24183661C(uint64_t a1)
{
  sub_2417869B0(a1, &qword_257152AD0, (void (*)(uint64_t))MEMORY[0x24BDF4918]);
}

uint64_t sub_241836630()
{
  return sub_24172159C(&qword_257152AD8, (uint64_t (*)(uint64_t))sub_241836564, MEMORY[0x24BDF5428]);
}

void sub_24183664C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152AE8)
  {
    sub_2418366D0();
    sub_24172835C(255, (unint64_t *)&qword_257150D20, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152AE8);
  }
}

void sub_2418366D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152AF0)
  {
    sub_24172570C(255, (unint64_t *)&qword_25714C1F8, (uint64_t (*)(uint64_t))sub_241836744, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152AF0);
  }
}

void sub_241836744()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C200)
  {
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C200);
  }
}

void sub_241836798()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152AF8)
  {
    sub_241731FB0(255, &qword_257152AE0, (uint64_t (*)(uint64_t))sub_24183664C, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152AF8);
  }
}

uint64_t sub_241836824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241731FB0(0, &qword_257152AE0, (uint64_t (*)(uint64_t))sub_24183664C, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241836888(uint64_t a1)
{
  uint64_t v2;

  sub_241731FB0(0, &qword_257152AE0, (uint64_t (*)(uint64_t))sub_24183664C, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2418368E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24173EEE8(0, &qword_257152AB8, (uint64_t (*)(uint64_t))sub_241836564, sub_241836630, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241836948()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257152B08)
  {
    sub_241836798();
    sub_24173EEE8(255, &qword_257152AB8, (uint64_t (*)(uint64_t))sub_241836564, sub_241836630, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257152B08);
  }
}

uint64_t sub_2418369D4(uint64_t a1)
{
  uint64_t v2;

  sub_24173EEE8(0, &qword_257152AB8, (uint64_t (*)(uint64_t))sub_241836564, sub_241836630, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_241836A34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257152B10;
  if (!qword_257152B10)
  {
    sub_24172570C(255, &qword_257152B18, (uint64_t (*)(uint64_t))sub_241836948, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257152B10);
  }
  return result;
}

uint64_t sub_241836A94(void *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float v7;
  float v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  size_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __n128 v36;
  __n128 *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  int64_t v41;
  uint64_t v42;
  char *v43;
  int64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  size_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  __int128 v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  int64_t v61;
  uint64_t v62;
  char *v63;
  int64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  size_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  int64_t v78;
  uint64_t v79;
  char *v80;
  int64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  size_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  uint64_t result;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  __int128 v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;

  v3 = 0;
  v4 = *(char *)(v2 + 16);
  v5 = qword_2418D9050[v4];
  if (v4 < 2)
    v6 = 3;
  else
    v6 = 4;
  v94 = 116 * *(unsigned __int8 *)(v2 + 16) + 128;
  v96 = v5 - 1;
  v7 = (float)(v5 - 1);
  v8 = (float)(v6 + 1);
  v101 = v6;
  v95 = v6 + 2 * v5;
  v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v10 = (char *)MEMORY[0x24BEE4AF8];
LABEL_7:
  v11 = 0;
  v97 = v3 + 1;
  v102 = v3;
  a2.n128_f32[0] = (float)((float)((float)v3 / (float)v94) * 3.1416) + (float)((float)((float)v3 / (float)v94) * 3.1416);
  v98 = a2;
  *(_QWORD *)&v12 = a2.n128_u64[0];
  *((_QWORD *)&v12 + 1) = COERCE_UNSIGNED_INT(-1.0);
  v99 = v12;
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_24180313C(0, v9[2] + 1, 1, v9);
    v14 = v9[2];
    v13 = v9[3];
    if (v14 >= v13 >> 1)
      v9 = sub_24180313C((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
    v15 = v99;
    *((float *)&v15 + 1) = (float)v11 / v7;
    v9[2] = v14 + 1;
    v16 = &v9[4 * v14];
    *((_OWORD *)v16 + 2) = v15;
    *((_DWORD *)v16 + 12) = 0;
    v17 = sub_241837260(v3, v11);
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *((_QWORD *)v10 + 2);
    v20 = v19 + v18;
    if (__OFADD__(v19, v18))
      break;
    v21 = v17;
    isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v20 <= *((_QWORD *)v10 + 3) >> 1)
    {
      if (*(_QWORD *)(v21 + 16))
        goto LABEL_23;
    }
    else
    {
      if (v19 <= v20)
        v23 = v19 + v18;
      else
        v23 = v19;
      v10 = sub_24180301C(isUniquelyReferenced_nonNull_native, v23, 1, v10);
      if (*(_QWORD *)(v21 + 16))
      {
LABEL_23:
        v24 = *((_QWORD *)v10 + 2);
        if ((*((_QWORD *)v10 + 3) >> 1) - v24 < v18)
          goto LABEL_103;
        v25 = &v10[4 * v24 + 32];
        v26 = (char *)(v21 + 32);
        v27 = 4 * v18;
        if (v21 + 32 < (unint64_t)&v25[4 * v18] && v25 < &v26[v27])
          goto LABEL_115;
        memcpy(v25, v26, v27);
        if (v18)
        {
          v28 = *((_QWORD *)v10 + 2);
          v29 = __OFADD__(v28, v18);
          v30 = v28 + v18;
          if (v29)
            goto LABEL_106;
          *((_QWORD *)v10 + 2) = v30;
        }
        goto LABEL_9;
      }
    }
    if (v18)
      goto LABEL_96;
LABEL_9:
    ++v11;
    swift_bridgeObjectRelease();
    if (v5 == v11)
    {
      v31 = 0;
      v32 = v98;
      v32.n128_u32[1] = 1.0;
      v32.n128_u32[3] = 0;
      v100 = v32;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_24180313C(0, v9[2] + 1, 1, v9);
        v34 = v9[2];
        v33 = v9[3];
        if (v34 >= v33 >> 1)
          v9 = sub_24180313C((_QWORD *)(v33 > 1), v34 + 1, 1, v9);
        v35 = v31 + 1;
        v36 = v100;
        v36.n128_f32[2] = (float)((float)(v31 + 1) / v8) + -1.0;
        v9[2] = v34 + 1;
        v37 = (__n128 *)&v9[4 * v34];
        v37[2] = v36;
        v37[3].n128_u32[0] = 1065353216;
        if (__OFADD__(v31, v5))
          goto LABEL_97;
        v38 = sub_241837260(v3, v31 + v5);
        v39 = *(_QWORD *)(v38 + 16);
        v40 = *((_QWORD *)v10 + 2);
        v41 = v40 + v39;
        if (__OFADD__(v40, v39))
          goto LABEL_98;
        v42 = v38;
        v43 = (char *)swift_isUniquelyReferenced_nonNull_native();
        if ((_DWORD)v43 && v41 <= *((_QWORD *)v10 + 3) >> 1)
        {
          if (*(_QWORD *)(v42 + 16))
            goto LABEL_46;
        }
        else
        {
          if (v40 <= v41)
            v44 = v40 + v39;
          else
            v44 = v40;
          v10 = sub_24180301C(v43, v44, 1, v10);
          if (*(_QWORD *)(v42 + 16))
          {
LABEL_46:
            v45 = *((_QWORD *)v10 + 2);
            if ((*((_QWORD *)v10 + 3) >> 1) - v45 < v39)
              goto LABEL_104;
            v46 = &v10[4 * v45 + 32];
            v47 = (char *)(v42 + 32);
            v48 = 4 * v39;
            if (v42 + 32 < (unint64_t)&v46[4 * v39] && v46 < &v47[v48])
              goto LABEL_115;
            memcpy(v46, v47, v48);
            if (v39)
            {
              v49 = *((_QWORD *)v10 + 2);
              v29 = __OFADD__(v49, v39);
              v50 = v49 + v39;
              if (v29)
                goto LABEL_107;
              *((_QWORD *)v10 + 2) = v50;
            }
            goto LABEL_31;
          }
        }
        if (v39)
          goto LABEL_99;
LABEL_31:
        swift_bridgeObjectRelease();
        v31 = v35;
        if (v101 == v35)
        {
          v51 = v5;
          v52 = v96;
          while (1)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v9 = sub_24180313C(0, v9[2] + 1, 1, v9);
            v54 = v9[2];
            v53 = v9[3];
            if (v54 >= v53 >> 1)
              v9 = sub_24180313C((_QWORD *)(v53 > 1), v54 + 1, 1, v9);
            v55 = v98.n128_u32[0];
            *((float *)&v55 + 1) = (float)v52 / v7;
            v9[2] = v54 + 1;
            v56 = &v9[4 * v54];
            *((_OWORD *)v56 + 2) = v55;
            *((_DWORD *)v56 + 12) = 0;
            if (__OFADD__(v51, v101))
              goto LABEL_100;
            v57 = v5;
            v58 = sub_241837260(v102, v51 + v101);
            v59 = *(_QWORD *)(v58 + 16);
            v60 = *((_QWORD *)v10 + 2);
            v61 = v60 + v59;
            if (__OFADD__(v60, v59))
              goto LABEL_101;
            v62 = v58;
            v63 = (char *)swift_isUniquelyReferenced_nonNull_native();
            if (!(_DWORD)v63 || v61 > *((_QWORD *)v10 + 3) >> 1)
            {
              if (v60 <= v61)
                v64 = v60 + v59;
              else
                v64 = v60;
              v10 = sub_24180301C(v63, v64, 1, v10);
            }
            v5 = v57;
            if (*(_QWORD *)(v62 + 16))
            {
              v65 = *((_QWORD *)v10 + 2);
              if ((*((_QWORD *)v10 + 3) >> 1) - v65 < v59)
                goto LABEL_105;
              v66 = &v10[4 * v65 + 32];
              v67 = (char *)(v62 + 32);
              v68 = 4 * v59;
              if (v62 + 32 < (unint64_t)&v66[4 * v59] && v66 < &v67[v68])
                goto LABEL_115;
              memcpy(v66, v67, v68);
              if (v59)
              {
                v69 = *((_QWORD *)v10 + 2);
                v29 = __OFADD__(v69, v59);
                v70 = v69 + v59;
                if (v29)
                  goto LABEL_108;
                *((_QWORD *)v10 + 2) = v70;
              }
            }
            else if (v59)
            {
              goto LABEL_102;
            }
            swift_bridgeObjectRelease();
            --v52;
            ++v51;
            if (v52 == -1)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v9 = sub_24180313C(0, v9[2] + 1, 1, v9);
              v72 = v9[2];
              v71 = v9[3];
              if (v72 >= v71 >> 1)
                v9 = sub_24180313C((_QWORD *)(v71 > 1), v72 + 1, 1, v9);
              *(_QWORD *)&v73 = v98.n128_u32[0];
              *((_QWORD *)&v73 + 1) = COERCE_UNSIGNED_INT(0.5);
              v9[2] = v72 + 1;
              v74 = (uint64_t)&v9[4 * v72 + 4];
              *(_OWORD *)v74 = v73;
              *(_DWORD *)(v74 + 16) = -1082130432;
              v75 = sub_241837260(v102, v95);
              v76 = *(_QWORD *)(v75 + 16);
              v77 = *((_QWORD *)v10 + 2);
              v78 = v77 + v76;
              if (__OFADD__(v77, v76))
                goto LABEL_109;
              v79 = v75;
              v80 = (char *)swift_isUniquelyReferenced_nonNull_native();
              if (!(_DWORD)v80 || v78 > *((_QWORD *)v10 + 3) >> 1)
              {
                if (v77 <= v78)
                  v81 = v77 + v76;
                else
                  v81 = v77;
                v10 = sub_24180301C(v80, v81, 1, v10);
              }
              v5 = v57;
              if (*(_QWORD *)(v79 + 16))
              {
                v82 = *((_QWORD *)v10 + 2);
                if ((*((_QWORD *)v10 + 3) >> 1) - v82 < v76)
                  goto LABEL_111;
                v83 = &v10[4 * v82 + 32];
                v84 = (char *)(v79 + 32);
                v85 = 4 * v76;
                if (v79 + 32 < (unint64_t)&v83[4 * v76] && v83 < &v84[v85])
                  goto LABEL_115;
                memcpy(v83, v84, v85);
                if (v76)
                {
                  v86 = *((_QWORD *)v10 + 2);
                  v29 = __OFADD__(v86, v76);
                  v87 = v86 + v76;
                  if (v29)
                    goto LABEL_112;
                  *((_QWORD *)v10 + 2) = v87;
                }
              }
              else if (v76)
              {
                goto LABEL_110;
              }
              swift_bridgeObjectRelease();
              v3 = v97;
              if (v97 != v94)
                goto LABEL_7;
              v88 = v9[2];
              *(_QWORD *)(v2 + 48) = v88;
              *(_QWORD *)(v2 + 56) = *((_QWORD *)v10 + 2);
              if (v88 >> 58)
                goto LABEL_113;
              v89 = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v9 + 4, 32 * v88, 0);
              swift_bridgeObjectRelease();
              *(_QWORD *)(v2 + 64) = v89;
              swift_unknownObjectRelease();
              v90 = *(_QWORD *)(v2 + 56);
              if ((unint64_t)(v90 - 0x2000000000000000) >> 62 != 3)
                goto LABEL_114;
              v91 = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v10 + 32, 4 * v90, 0);
              swift_bridgeObjectRelease();
              *(_QWORD *)(v2 + 72) = v91;
              return swift_unknownObjectRelease();
            }
          }
        }
      }
    }
  }
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_241837260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int v14;

  v3 = *(char *)(v2 + 16);
  v4 = 4;
  if (v3 >= 2)
    v4 = 5;
  v5 = v4 + qword_2418D9068[v3];
  v6 = a1 * v5;
  if ((unsigned __int128)(a1 * (__int128)v5) >> 64 != (a1 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_18;
  }
  v7 = v6 + a2;
  if (__OFADD__(v6, a2))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = v8 % v5;
  v10 = v6 + v8 % v5;
  if (__OFADD__(v6, v8 % v5))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (__OFADD__(a1, 1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v11 = (a1 + 1) % (116 * v3 + 128) * v5;
  v12 = v11 + a2;
  if (__OFADD__(v11, a2))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_2417BBB68();
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_2418D5760;
  if ((v7 & 0x8000000000000000) == 0 && !HIDWORD(v7))
  {
    *(_DWORD *)(result + 32) = v7;
    if ((v10 & 0x8000000000000000) == 0 && !HIDWORD(v10))
    {
      v14 = v11 + v9;
      *(_DWORD *)(result + 36) = v10;
      if (((v11 + v9) & 0x8000000000000000) == 0)
      {
        *(_DWORD *)(result + 40) = v14;
        *(_DWORD *)(result + 44) = v7;
        *(_DWORD *)(result + 48) = v14;
        if ((v12 & 0x8000000000000000) == 0 && !HIDWORD(v12))
        {
          *(_DWORD *)(result + 52) = v12;
          return result;
        }
      }
    }
  }
LABEL_23:
  result = sub_2418AA374();
  __break(1u);
  return result;
}

uint64_t sub_241837408()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DiscMesh()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for DiscMesh.Quality(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2418374A0 + 4 * byte_2418D8F7D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2418374D4 + 4 * byte_2418D8F78[v4]))();
}

uint64_t sub_2418374D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2418374DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2418374E4);
  return result;
}

uint64_t sub_2418374F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2418374F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2418374FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241837504(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscMesh.Quality()
{
  return &type metadata for DiscMesh.Quality;
}

unint64_t sub_241837524()
{
  unint64_t result;

  result = qword_257152C80;
  if (!qword_257152C80)
  {
    result = MEMORY[0x24269D47C](&unk_2418D9028, &type metadata for DiscMesh.Quality);
    atomic_store(result, (unint64_t *)&qword_257152C80);
  }
  return result;
}

id sub_241837568()
{
  id v0;
  id v1;
  id v2;
  id result;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD770]), sel_init);
  v1 = objc_msgSend(v0, sel_attributes);
  v2 = objc_msgSend(v0, sel_layouts);
  result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = result;
  objc_msgSend(result, sel_setFormat_, 30);

  result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = result;
  objc_msgSend(result, sel_setOffset_, 0);

  result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = result;
  objc_msgSend(result, sel_setBufferIndex_, 0);

  result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 4);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v7 = result;
  objc_msgSend(result, sel_setFormat_, 28);

  result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 4);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = result;
  objc_msgSend(result, sel_setOffset_, 12);

  result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 4);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = result;
  objc_msgSend(result, sel_setBufferIndex_, 0);

  result = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);
  if (result)
  {
    v10 = result;
    objc_msgSend(result, sel_setStride_, 32);

    return v0;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_241837774(void *a1, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = 1;
  *(_QWORD *)(v2 + 32) = 0x3DCCCCCD3F800000;
  *(_DWORD *)(v2 + 40) = 1097859072;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_BYTE *)(v2 + 16) = a2;
  sub_241836A94(a1, (__n128)0);
  return v2;
}

char *static StateOfMindOverlayRoomViewController.createInteractiveChartViewController(forTypeIdentifier:chartFactory:applicationItems:display:preferredOverlay:restorationUserActivity:trendModel:factorDisplayTypes:additionalChartOptions:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_24183DADC(a3, a4, a5, a6, a7, a9, a10);
}

char *StateOfMindOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:sleepChartFormatter:addDataViewControllerProvider:preferredOverlay:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return StateOfMindOverlayRoomViewController.init(displayDate:applicationItems:factorDisplayTypes:sleepChartFormatter:addDataViewControllerProvider:preferredOverlay:)(a1, a2, a3, a4, a5, a6);
}

char *StateOfMindOverlayRoomViewController.init(displayDate:applicationItems:factorDisplayTypes:sleepChartFormatter:addDataViewControllerProvider:preferredOverlay:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  objc_class *v24;
  char *v25;
  id v26;
  void *v27;
  uint64_t v29;
  id v30;
  uint64_t ObjectType;
  uint64_t v32;
  objc_super v33;

  v7 = v6;
  v32 = a6;
  ObjectType = swift_getObjectType();
  sub_2417C55D4(0, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v29 - v15;
  *(_QWORD *)&v7[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_preferredOverlayContextLocation] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_sleepChartFormatter] = a4;
  *(_QWORD *)&v7[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_addDataViewControllerProvider] = a5;
  sub_241762EFC(0, (unint64_t *)&qword_257152CA0);
  v17 = v7;
  v30 = a4;
  swift_unknownObjectRetain();
  sub_241880A3C(a2, 0, 0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayType] = v18;
  sub_241880A3C(a2, 0, 1);
  *(_QWORD *)&v17[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayTypeWithLegend] = v19;

  sub_2417B1090(a1, (uint64_t)v16);
  v20 = sub_2418A8100();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v16, 1, v20) != 1)
  {
    v22 = (void *)sub_2418A80AC();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v20);
  }
  if (a3)
  {
    v23 = (void *)sub_2418A9EAC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v24 = (objc_class *)type metadata accessor for StateOfMindOverlayRoomViewController();
  v33.receiver = v17;
  v33.super_class = v24;
  v25 = (char *)objc_msgSendSuper2(&v33, sel_initWithDisplayDate_applicationItems_factorDisplayTypes_mode_, v22, a2, v23, 3);

  v26 = static StateOfMindOverlayRoomViewController.stateOfMindContextLocation(for:)();
  swift_unknownObjectRelease();
  sub_2417B10EC(a1);
  v27 = *(void **)&v25[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_preferredOverlayContextLocation];
  *(_QWORD *)&v25[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_preferredOverlayContextLocation] = v26;

  return v25;
}

id static StateOfMindOverlayRoomViewController.stateOfMindContextLocation(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id result;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v0 = sub_2418A8340();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2418AA110();
  result = 0;
  if ((v7 & 1) != 0)
    return result;
  type metadata accessor for StateOfMindOverlayRoomViewController();
  v8 = static StateOfMindOverlayRoomViewController.supportedStateOfMindDomainContexts()();
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
    goto LABEL_9;
  if (*(_QWORD *)(v8 + 32) != v5)
  {
    v10 = 0;
    v11 = v9 - 1;
    while (v11 != v10)
    {
      v12 = *(_QWORD *)(v8 + 40 + 8 * v10++);
      if (v12 == v5)
        goto LABEL_8;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    sub_2418A8328();
    v13 = sub_2418A8334();
    v14 = sub_2418AA044();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v22 = v20;
      *(_DWORD *)v15 = 136446466;
      v16 = sub_2418AA5D8();
      v21 = sub_24176024C(v16, v17, &v22);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2048;
      v21 = v5;
      sub_2418AA1F4();
      _os_log_impl(&dword_24171C000, v13, v14, "[%{public}s] Asked to create context location for unsupported domain: %ld", (uint8_t *)v15, 0x16u);
      v18 = v20;
      swift_arrayDestroy();
      MEMORY[0x24269D548](v18, -1, -1);
      MEMORY[0x24269D548](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
  v10 = 0;
LABEL_8:
  swift_bridgeObjectRelease();
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A798]), sel_initWithContainerIndex_sectionIndex_itemIndex_, 1, 0, v10);
}

id sub_241837F9C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  objc_class *v15;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_2418A8340();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  v7 = sub_2418A8334();
  v8 = sub_2418AA05C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v18 = v1;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    v20 = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = sub_2418AA5D8();
    v19 = sub_24176024C(v12, v13, &v20);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v7, v8, "[%{public}s] View did load", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v11, -1, -1);
    v14 = v10;
    v1 = v18;
    MEMORY[0x24269D548](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v15 = (objc_class *)type metadata accessor for StateOfMindOverlayRoomViewController();
  v21.receiver = v1;
  v21.super_class = v15;
  return objc_msgSendSuper2(&v21, sel_viewDidLoad);
}

id sub_241838200()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  unint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  objc_class *v29;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  objc_super v53;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_2418A8340();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C55D4(0, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v49 - v9;
  sub_2417C55D4(0, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v49 - v13;
  v15 = objc_msgSend(v1, sel_primaryDisplayType);
  if (v15)
  {
    v16 = v15;
    objc_opt_self();
    v17 = swift_dynamicCastObjCClass();
    if (v17)
    {
      v18 = (void *)v17;
      v19 = v16;
      v20 = objc_msgSend(v18, sel_baseDisplayType);
      if (v20)
      {
        v21 = v20;
        v22 = (unint64_t)objc_msgSend(v20, sel_hk_interactiveChartOptions);

      }
      else
      {

        v22 = 0;
      }
    }
    else
    {
      v22 = (unint64_t)objc_msgSend(v16, sel_hk_interactiveChartOptions);
    }
    v50 = (unint64_t)objc_msgSend(v1, sel_additionalChartOptions) | v22;
    v31 = objc_msgSend(v1, sel_applicationItems);
    v49 = objc_msgSend(v31, sel_healthStore);

    v32 = objc_msgSend(v1, sel_applicationItems);
    v33 = objc_msgSend(v32, sel_unitController);

    v34 = objc_msgSend(v1, sel_applicationItems);
    v35 = objc_msgSend(v34, sel_dateCache);

    v36 = objc_msgSend(v1, sel_applicationItems);
    v37 = objc_msgSend(v36, sel_chartDataCacheController);

    v38 = objc_msgSend(v1, sel_applicationItems);
    v39 = objc_msgSend(v38, sel_timeScopeController);

    v40 = objc_msgSend(v1, sel_applicationItems);
    v41 = objc_msgSend(v40, sel_sampleDateRangeController);

    v42 = objc_msgSend(v1, sel_displayDate);
    if (v42)
    {
      v43 = v42;
      sub_2418A80C4();

      v44 = sub_2418A8100();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v14, 0, 1, v44);
    }
    else
    {
      v45 = sub_2418A8100();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v14, 1, 1, v45);
    }
    type metadata accessor for StateOfMindChartViewController();
    v46 = sub_2418A8238();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v10, 1, 1, v46);
    v47 = v16;
    v48 = sub_2417C3BF4(v49, v47, v33, v35, v37, v39, v41, (uint64_t)v14, (uint64_t)v10, v50);
    objc_msgSend(v48, sel_setCurrentOverlayLocationProvider_, v1);

    return v48;
  }
  else
  {
    sub_2418A8328();
    v23 = sub_2418A8334();
    v24 = sub_2418AA050();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v52 = v26;
      *(_DWORD *)v25 = 136446210;
      v50 = (unint64_t)(v25 + 4);
      v27 = sub_2418AA5D8();
      v51 = sub_24176024C(v27, v28, &v52);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v23, v24, "[%{public}s] Asked to create chart overlay without a display type", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v26, -1, -1);
      MEMORY[0x24269D548](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v29 = (objc_class *)type metadata accessor for StateOfMindOverlayRoomViewController();
    v53.receiver = v1;
    v53.super_class = v29;
    return objc_msgSendSuper2(&v53, sel_createChartOverlayViewController);
  }
}

id sub_241838820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id result;

  if (a1 != 3)
    return 0;
  result = *(id *)(v2
                 + OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_preferredOverlayContextLocation);
  if (result)
  {
    *(_QWORD *)(v2
              + OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_preferredOverlayContextLocation) = 0;
    return result;
  }
  if (a2 == 2)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A798]), sel_initWithContainerIndex_sectionIndex_itemIndex_, 2, 0, 0);
  else
    return 0;
}

uint64_t sub_2418389A0(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  objc_class *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  objc_class *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  id v29;
  char *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  unint64_t v53;
  id v54;
  char *v55;
  unint64_t v56;
  id v57;
  void *v58;
  id v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  id v63;
  unint64_t v64;
  unint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  void *v73;
  id v74;
  uint64_t v75;
  void *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  objc_super v82;
  objc_super v83;

  v2 = v1;
  swift_getObjectType();
  if (qword_25714B958 != -1)
    swift_once();
  v4 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  sub_24172887C(0, (unint64_t *)&qword_25714D510, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_2418D4D90;
  v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = xmmword_2418D51D0;
  v5 = objc_msgSend(v1, sel_applicationItems, 0xE000000000000000);
  sub_241762EFC(0, &qword_257152DD0);
  v6 = (void *)qword_25715E110;
  v7 = a1;
  v8 = v6;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  v9 = (void *)sub_2418AA1A0();
  swift_bridgeObjectRelease();
  v10 = (objc_class *)type metadata accessor for StateOfMindSampleCountContext();
  v11 = (char *)objc_allocWithZone(v10);
  v77 = v1;
  v12 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(_QWORD *)&v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  v13 = &v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  *(_QWORD *)v13 = 0x6E6152796C696144;
  *((_QWORD *)v13 + 1) = 0xEA00000000006567;
  *(_QWORD *)&v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = v7;
  sub_241762EFC(0, (unint64_t *)&qword_257152CA0);
  v14 = v7;
  v15 = v11;
  sub_241880A3C(v5, v9, 0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v16;
  *(_QWORD *)&v15[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = v9;
  v17 = *(void **)&v11[v12];
  *(_QWORD *)&v11[v12] = 0;
  v18 = v9;

  v19 = (objc_class *)type metadata accessor for StateOfMindOverlayContext();
  v83.receiver = v15;
  v83.super_class = v19;
  v20 = objc_msgSendSuper2(&v83, sel_init, 0xE000000000000000);

  *(_QWORD *)(v80 + 32) = v20;
  v21 = objc_msgSend(v2, sel_applicationItems);
  v22 = (void *)qword_25715E110;
  v23 = v14;
  v24 = v22;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  v25 = (void *)sub_2418AA1A0();
  swift_bridgeObjectRelease();
  v26 = (char *)objc_allocWithZone(v10);
  v27 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(_QWORD *)&v26[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  v28 = &v26[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  strcpy(&v26[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_], "MomentaryRange");
  v28[15] = -18;
  *(_QWORD *)&v26[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = v23;
  v29 = v23;
  v30 = v26;
  sub_241880A3C(v21, v25, 0);
  *(_QWORD *)&v30[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v31;
  *(_QWORD *)&v30[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = v25;
  v32 = *(void **)&v26[v27];
  *(_QWORD *)&v26[v27] = 0;
  v33 = v25;

  v82.receiver = v30;
  v82.super_class = v19;
  v34 = objc_msgSendSuper2(&v82, sel_init, 0xE000000000000000);

  *(_QWORD *)(v80 + 40) = v34;
  sub_2418A9EC4();
  v35 = objc_allocWithZone(MEMORY[0x24BE4A7A0]);
  sub_24182E42C(0, &qword_257152DD8);
  v36 = (void *)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(v35, sel_initWithSectionTitle_overlayContextItems_, 0, v36);

  *(_QWORD *)(v78 + 32) = v37;
  sub_2418A9EC4();
  v38 = objc_allocWithZone(MEMORY[0x24BE4A7A8]);
  v39 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  sub_241762EFC(0, (unint64_t *)&unk_257152DE0);
  v40 = (void *)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  v79 = objc_msgSend(v38, sel_initWithContainerTitle_overlayContextSections_, v39, v40);

  v41 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_2418D4D90;
  v43 = static StateOfMindOverlayRoomViewController.supportedStateOfMindDomainContexts()();
  v44 = v29;
  v45 = v77;
  sub_24183D718(v43, v45, v44);
  swift_bridgeObjectRelease();

  v46 = objc_allocWithZone(MEMORY[0x24BE4A7A0]);
  v47 = (void *)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v46, sel_initWithSectionTitle_overlayContextItems_, 0, v47, 0xE000000000000000);

  *(_QWORD *)(v42 + 32) = v48;
  sub_2418A9EC4();
  v49 = objc_allocWithZone(MEMORY[0x24BE4A7A8]);
  v50 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  v51 = (void *)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  v52 = objc_msgSend(v49, sel_initWithContainerTitle_overlayContextSections_, v50, v51);

  v53 = sub_241839CB0();
  v54 = v44;
  v55 = (char *)v45;
  v56 = sub_24183D970(v53, v55, v54);
  swift_bridgeObjectRelease();

  v57 = objc_msgSend(v55, sel_buildFactorContextsAllowingDeselection_, 0);
  if (v57)
  {
    v58 = v57;
    v59 = objc_msgSend(v57, sel_activeFactorContexts);
    sub_241762EFC(0, &qword_257152DB8);
    v60 = sub_2418A9EB8();

    if (v60 >> 62)
    {
      sub_241762EFC(0, &qword_25714D530);
      swift_bridgeObjectRetain();
      v61 = sub_2418AA38C();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_2418AA4E8();
      sub_241762EFC(0, &qword_25714D530);
      v61 = v60;
    }
    swift_bridgeObjectRelease();
    sub_241773B0C(v56);
    v62 = v61;
    v63 = objc_msgSend(v58, sel_inactiveFactorContexts);
    v64 = sub_2418A9EB8();

    if (v64 >> 62)
    {
      sub_241762EFC(0, &qword_25714D530);
      swift_bridgeObjectRetain();
      sub_2418AA38C();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_2418AA4E8();
      sub_241762EFC(0, &qword_25714D530);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v65 = swift_bridgeObjectRetain();
    sub_241773B0C(v65);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v56 = v62;
  }
  v66 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_2418D4D90;
  swift_bridgeObjectRetain();
  if (v56 >> 62)
  {
    sub_2418AA38C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2418AA4E8();
  }
  swift_bridgeObjectRelease();
  v68 = objc_allocWithZone(MEMORY[0x24BE4A7A0]);
  v69 = (void *)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  v70 = objc_msgSend(v68, sel_initWithSectionTitle_overlayContextItems_, 0, v69, 0xE000000000000000);

  *(_QWORD *)(v67 + 32) = v70;
  sub_2418A9EC4();
  v71 = objc_allocWithZone(MEMORY[0x24BE4A7A8]);
  v72 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  v73 = (void *)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  v74 = objc_msgSend(v71, sel_initWithContainerTitle_overlayContextSections_, v72, v73);

  v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_2418D9090;
  *(_QWORD *)(v75 + 32) = v79;
  *(_QWORD *)(v75 + 40) = v52;
  *(_QWORD *)(v75 + 48) = v74;
  v81 = v75;
  sub_2418A9EC4();
  return v81;
}

void sub_241839548(void **a1@<X0>, char *a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;

  sub_2417C55D4(0, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v34 - v14;
  v16 = *a1;
  v17 = objc_msgSend(v16, sel_objectType);
  v18 = objc_msgSend(v17, sel_code);

  if (v18 == (id)63)
  {
    sub_241762EFC(0, (unint64_t *)&unk_257152DF0);
    v19 = objc_msgSend(a2, sel_applicationItems);
    v20 = *(void **)&a2[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_sleepChartFormatter];
    v21 = *(void **)&a2[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayTypeWithLegend];
    v22 = sub_2418A8238();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v15, 1, 1, v22);
    v23 = sub_241839824(v19, a3, v20, v21, 0x4D664F6574617453, 0xEB00000000646E69, 0, (uint64_t)v15, 0);
  }
  else
  {
    v24 = objc_msgSend(v16, sel_sampleType);
    v25 = *(void **)&a2[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayTypeWithLegend];
    v26 = sub_2418A8238();
    v27 = *(_QWORD *)(v26 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v12, 1, 1, v26);
    v28 = a3;
    v29 = v25;
    v30 = v24;
    v31 = objc_msgSend(a2, sel_applicationItems);
    v32 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v12, 1, v26) != 1)
    {
      v32 = (void *)sub_2418A81CC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v26);
    }
    LOBYTE(v33) = 0;
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A7C8]), sel_initWithDisplayType_overlayDisplayType_stackedSampleType_overlayChartController_currentCalendarOverride_applicationItems_isInfoButtonHidden_, v29, 0, v30, v28, v32, v31, v33);

  }
  *a4 = v23;
}

id sub_241839824(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, char a9)
{
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v20;

  v14 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  v15 = sub_2418A8238();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a8, 1, v15) != 1)
  {
    v17 = (void *)sub_2418A81CC();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a8, v15);
  }
  LOBYTE(v20) = a9 & 1;
  v18 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithApplicationItems_overlayChartController_sleepChartFormatter_primaryDisplayType_uniqueIdentifier_firstWeekdayOverride_currentCalendarOverride_isInfoButtonHidden_, a1, a2, a3, a4, v14, a7, v17, v20);

  return v18;
}

uint64_t static StateOfMindOverlayRoomViewController.supportedStateOfMindDomainContexts()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_2418AA11C();
  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    v3 = 0;
    v4 = v0 + 32;
    v5 = MEMORY[0x24BEE4AF8];
    while (v3 < *(_QWORD *)(v1 + 16))
    {
      v8 = *(_QWORD *)(v4 + 8 * v3);
      v11 = v8;
      if (sub_241839AA0(&v11))
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v12 = v5;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24183D6A8(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v12;
        }
        v7 = *(_QWORD *)(v5 + 16);
        v6 = *(_QWORD *)(v5 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_24183D6A8(v6 > 1, v7 + 1, 1);
          v5 = v12;
        }
        *(_QWORD *)(v5 + 16) = v7 + 1;
        *(_QWORD *)(v5 + 8 * v7 + 32) = v8;
      }
      if (v2 == ++v3)
        goto LABEL_12;
    }
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
LABEL_12:
    swift_bridgeObjectRelease();
    v12 = v5;
    swift_retain();
    sub_24183B760(&v12);
    swift_release();
    return v12;
  }
  return result;
}

BOOL sub_241839AA0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = sub_2418A8340();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = (id)HKUILocalizedStringForStateOfMindDomain();
  v10 = sub_2418A9DE0();
  v12 = v11;

  swift_bridgeObjectRelease();
  if ((v12 & 0x2000000000000000) != 0)
    v13 = HIBYTE(v12) & 0xF;
  else
    v13 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v13)
  {
    sub_2418A8328();
    v14 = sub_2418A8334();
    v15 = sub_2418AA050();
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v17 = swift_slowAlloc();
      v25 = v16;
      v18 = v17;
      v26 = swift_slowAlloc();
      v29 = v26;
      *(_DWORD *)v18 = 136446466;
      v24[1] = v18 + 4;
      v19 = sub_2418AA5D8();
      v21 = sub_24176024C(v19, v20, &v29);
      v27 = v1;
      v28 = v21;
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2048;
      v28 = v8;
      sub_2418AA1F4();
      _os_log_impl(&dword_24171C000, v14, (os_log_type_t)v25, "[%{public}s] Active domain has empty title: %ld", (uint8_t *)v18, 0x16u);
      v22 = v26;
      swift_arrayDestroy();
      MEMORY[0x24269D548](v22, -1, -1);
      MEMORY[0x24269D548](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return v13 != 0;
}

uint64_t sub_241839CB0()
{
  void *v0;
  void *v1;
  unint64_t inited;
  void *ObjCClassFromMetadata;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;

  v1 = v0;
  sub_24172887C(0, (unint64_t *)&qword_25714D510, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D90A0;
  sub_241762EFC(0, &qword_257152700);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v4 = objc_msgSend(ObjCClassFromMetadata, sel_dataTypeWithCode_, 75);
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_QWORD *)(inited + 32) = v4;
  v5 = objc_msgSend(ObjCClassFromMetadata, sel_dataTypeWithCode_, 99);
  if (!v5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(_QWORD *)(inited + 40) = v5;
  v6 = objc_msgSend(ObjCClassFromMetadata, sel_dataTypeWithCode_, 63);
  if (!v6)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(_QWORD *)(inited + 48) = v6;
  v7 = objc_msgSend(ObjCClassFromMetadata, sel_dataTypeWithCode_, 279);
  if (!v7)
  {
LABEL_13:
    __break(1u);
    result = swift_release();
    __break(1u);
    return result;
  }
  *(_QWORD *)(inited + 56) = v7;
  v13 = inited;
  sub_2418A9EC4();
  v8 = v1;
  v9 = sub_24183DFE8(inited, v8);
  swift_bridgeObjectRelease();

  if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    v12 = swift_bridgeObjectRetain();
    v10 = (uint64_t)sub_241760E14(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v13 = v10;
  sub_24183B7C8((uint64_t *)&v13);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_241839EB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[3];
  uint64_t v25;

  swift_getObjectType();
  v2 = sub_2418A8340();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_241839CB0();
  v8 = v7;
  if (a1 < 0)
    goto LABEL_21;
  if (!(v7 >> 62))
  {
    result = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result > a1)
      goto LABEL_4;
LABEL_21:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_2418AA398();
  if (result <= a1)
    goto LABEL_21;
LABEL_4:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x24269CAD4](a1, v8);
LABEL_7:
    v11 = v10;
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v11, sel_objectType);
    v13 = (uint64_t)objc_msgSend(v12, sel_code);

    if (v13 > 98)
    {
      if (v13 == 99)
      {
        v14 = 1;
        v15 = v11;
        v16 = 0x4E4C5546444E494DLL;
        v17 = (void *)0xEB00000000535345;
      }
      else
      {
        if (v13 != 279)
        {
LABEL_17:
          sub_2418A8328();
          v18 = sub_2418A8334();
          v19 = sub_2418AA044();
          if (os_log_type_enabled(v18, v19))
          {
            v20 = (uint8_t *)swift_slowAlloc();
            v21 = swift_slowAlloc();
            v25 = v21;
            *(_DWORD *)v20 = 136446210;
            v24[1] = v20 + 4;
            v22 = sub_2418AA5D8();
            v24[2] = sub_24176024C(v22, v23, &v25);
            sub_2418AA1F4();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24171C000, v18, v19, "[%{public}s] Unsupported comparison type", v20, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24269D548](v21, -1, -1);
            MEMORY[0x24269D548](v20, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
          return 0;
        }
        v14 = 1;
        v15 = v11;
        v16 = 0x544847494C594144;
        v17 = (void *)0xE800000000000000;
      }
    }
    else
    {
      if (v13 != 63)
      {
        if (v13 == 75)
        {
          sub_24183A5E0(v11, 0x4553494352455845, (void *)0xE800000000000000, 0);

          return 1;
        }
        goto LABEL_17;
      }
      v14 = 1;
      v15 = v11;
      v16 = 0x5045454C53;
      v17 = (void *)0xE500000000000000;
    }
    sub_24183A5E0(v15, v16, v17, 1);

    return v14;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
  {
    v10 = *(id *)(v8 + 8 * a1 + 32);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_24183A1DC(uint64_t a1, void *a2)
{
  char *v2;
  unint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t result;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;

  v5 = sub_241839CB0();
  if (v5 >> 62)
    v6 = sub_2418AA398();
  else
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (!a2)
    return 0;
  v7 = a2;
  v8 = objc_msgSend(v7, sel_activeFactorContexts);
  v9 = sub_241762EFC(0, &qword_257152DB8);
  v10 = sub_2418A9EB8();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_2418AA398();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = swift_bridgeObjectRelease();
  if (v11 > a1)
  {
    v13 = objc_msgSend(v7, sel_activeFactorContexts);
    v14 = sub_2418A9EB8();

    if ((v14 & 0xC000000000000001) != 0)
    {
      v15 = (id)MEMORY[0x24269CAD4](a1, v14);
LABEL_11:
      v16 = v15;
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v16, sel_stackedBaseDisplayType);
      v18 = (void *)objc_opt_self();
      v19 = *(_QWORD *)&v2[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayType];
      v20 = v17;
      v21 = objc_msgSend(v2, sel_applicationItems);
      v22 = objc_msgSend(v21, sel_healthStore);

      v23 = objc_msgSend(v18, sel_infographicViewControllerForDisplayType_factorDisplayType_healthStore_, v19, v20, v22);
      if (v23)
      {
        v24 = v7;
        v25 = v23;
LABEL_25:
        v35 = v16;
        v26 = 1;
        objc_msgSend(v2, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v23, 0, 1, 0);

        v7 = v25;
        v16 = v20;
        v20 = v35;
LABEL_27:

        v7 = v20;
        goto LABEL_28;
      }
      goto LABEL_26;
    }
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
    {
      v15 = *(id *)(v14 + 8 * a1 + 32);
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_35;
  }
  if (__OFADD__(v6, v11))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v6 + v11 > a1)
  {
    v26 = 0;
LABEL_28:

    return v26;
  }
  v27 = objc_msgSend(v7, sel_inactiveFactorContexts);
  v9 = sub_2418A9EB8();

  v28 = a1 - v6;
  if (__OFSUB__(a1, v6))
    goto LABEL_36;
  result = v28 - v11;
  if (__OFSUB__(v28, v11))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_38:
    v29 = (id)MEMORY[0x24269CAD4](result, v9);
LABEL_23:
    v16 = v29;
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v16, sel_stackedBaseDisplayType);
    v31 = (void *)objc_opt_self();
    v32 = *(_QWORD *)&v2[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayType];
    v20 = v30;
    v33 = objc_msgSend(v2, sel_applicationItems);
    v34 = objc_msgSend(v33, sel_healthStore);

    v23 = objc_msgSend(v31, sel_infographicViewControllerForDisplayType_factorDisplayType_healthStore_, v32, v20, v34);
    if (v23)
    {
      v24 = v23;
      v25 = v20;
      v20 = v16;
      v16 = v7;
      goto LABEL_25;
    }
LABEL_26:
    v26 = 0;
    goto LABEL_27;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v29 = *(id *)(v9 + 8 * result + 32);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

void sub_24183A5E0(void *a1, uint64_t a2, void *a3, int a4)
{
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)();
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;

  LODWORD(v75) = a4;
  ObjectType = swift_getObjectType();
  v8 = sub_2418A8340();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  v13 = a1;
  v14 = sub_2418A8334();
  v15 = sub_2418AA05C();
  v16 = os_log_type_enabled(v14, v15);
  v70 = v13;
  v71 = ObjectType;
  if (v16)
  {
    v17 = swift_slowAlloc();
    v73 = swift_slowAlloc();
    v79 = v73;
    *(_DWORD *)v17 = 136446466;
    *(_QWORD *)&v74 = a2;
    v18 = sub_2418AA5D8();
    v76 = a3;
    v78 = sub_24176024C(v18, v19, &v79);
    v72 = v9;
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    v20 = v13;
    v21 = objc_msgSend(v20, sel_description);
    v22 = sub_2418A9DE0();
    v69 = v8;
    v24 = v23;

    v78 = sub_24176024C(v22, v24, &v79);
    sub_2418AA1F4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v14, v15, "[%{public}s] Opening life factor view for type: %{public}s", (uint8_t *)v17, 0x16u);
    v25 = v73;
    swift_arrayDestroy();
    MEMORY[0x24269D548](v25, -1, -1);
    MEMORY[0x24269D548](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v72 + 8))(v12, v69);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  v76 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A718]), sel_init);
  v79 = 0;
  v80 = 0xE000000000000000;
  sub_2418AA2B4();
  swift_bridgeObjectRelease();
  v69 = (uint64_t)"ayTypeWithLegend";
  v79 = 0xD000000000000012;
  v80 = 0x80000002418DE9D0;
  sub_2418A9E40();
  sub_2418A9E40();
  if (qword_25714B958 != -1)
    swift_once();
  v26 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v27 = sub_2418A7EFC();
  v73 = v28;
  *(_QWORD *)&v74 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v79 = 0;
  v80 = 0xE000000000000000;
  sub_2418AA2B4();
  swift_bridgeObjectRelease();
  v79 = 0xD000000000000012;
  v80 = 0x80000002418DE9D0;
  sub_2418A9E40();
  sub_2418A9E40();
  v29 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v30 = sub_2418A7EFC();
  v72 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v32 = 0;
  v33 = 0;
  v34 = 0;
  v35 = 0;
  if ((v75 & 1) != 0)
  {
    v79 = 0;
    v80 = 0xE000000000000000;
    sub_2418AA2B4();
    swift_bridgeObjectRelease();
    v79 = 0xD000000000000012;
    v80 = v69 | 0x8000000000000000;
    sub_2418A9E40();
    sub_2418A9E40();
    v36 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v34 = sub_2418A7EFC();
    v35 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v38 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v33 = (_QWORD *)swift_allocObject();
    v40 = v70;
    v39 = v71;
    v33[2] = v38;
    v33[3] = v40;
    v41 = v76;
    v33[4] = v76;
    v33[5] = v39;
    v42 = v40;
    v43 = v41;
    v32 = sub_24183E78C;
  }
  v44 = objc_allocWithZone(MEMORY[0x24BE4A698]);
  sub_24178B19C((uint64_t)v32);
  v45 = sub_24183B62C(v74, v73, v30, v72, v34, v35, (uint64_t)v32, (uint64_t)v33);
  sub_24172887C(0, (unint64_t *)&qword_25714D510, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v46 = swift_allocObject();
  v74 = xmmword_2418D4D90;
  *(_OWORD *)(v46 + 16) = xmmword_2418D4D90;
  *(_QWORD *)(v46 + 32) = v45;
  v79 = v46;
  sub_2418A9EC4();
  v47 = objc_allocWithZone(MEMORY[0x24BE4A6A0]);
  sub_24182E42C(0, &qword_257152D48);
  v75 = v45;
  v48 = (void *)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  v49 = objc_msgSend(v47, sel_initWithItems_, v48);

  v50 = (void *)qword_25715E110;
  v51 = v49;
  v52 = v50;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  v53 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v51, sel_setTitle_, v53);

  v54 = objc_msgSend(v51, sel_navigationItem);
  v55 = (void *)sub_2418A9DB0();
  v56 = (id)HKUILocalizedString();

  if (v56)
  {
    v57 = sub_2418A9DE0();
    v59 = v58;

  }
  else
  {
    v57 = 0;
    v59 = 0;
  }
  v81 = type metadata accessor for StateOfMindOverlayRoomViewController();
  v60 = (void *)v77;
  v79 = v77;
  v61 = objc_allocWithZone(MEMORY[0x24BEBD410]);
  v62 = v60;
  v63 = sub_24187F778(v57, v59, 2, &v79, (uint64_t)sel_dismissAnimated_);
  objc_msgSend(v54, sel_setRightBarButtonItem_, v63);

  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = v74;
  *(_QWORD *)(v64 + 32) = v51;
  v79 = v64;
  sub_2418A9EC4();
  sub_241762EFC(0, &qword_257152DB0);
  v65 = v51;
  v66 = (void *)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  v67 = v76;
  objc_msgSend(v76, sel_setViewControllers_animated_, v66, 0);

  objc_msgSend(v62, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v67, 0, 1, 0);
  sub_24178B1AC((uint64_t)v32);

}

void sub_24183AE80(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_2418A8340();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = MEMORY[0x24269D5FC](a1 + 16);
  if (v11)
  {
    v12 = (char *)v11;
    sub_2418A8328();
    v13 = a2;
    v14 = sub_2418A8334();
    v15 = sub_2418AA05C();
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v17 = swift_slowAlloc();
      v38 = v7;
      v18 = v17;
      v36 = swift_slowAlloc();
      v41 = v36;
      *(_DWORD *)v18 = 136446466;
      v37 = v6;
      v19 = sub_2418AA5D8();
      v40 = sub_24176024C(v19, v20, &v41);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      v35 = v18 + 14;
      v21 = v13;
      v22 = objc_msgSend(v21, sel_description);
      v23 = sub_2418A9DE0();
      v34 = v16;
      v24 = v12;
      v25 = v13;
      v26 = v23;
      v39 = a3;
      v28 = v27;

      v29 = v26;
      v13 = v25;
      v12 = v24;
      v40 = sub_24176024C(v29, v28, &v41);
      sub_2418AA1F4();

      a3 = v39;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v14, (os_log_type_t)v34, "[%{public}s] Opening logging view for type: %{public}s", (uint8_t *)v18, 0x16u);
      v30 = v36;
      swift_arrayDestroy();
      MEMORY[0x24269D548](v30, -1, -1);
      MEMORY[0x24269D548](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v37);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    v31 = objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_addDataViewControllerProvider], sel_addDataViewControllerForDisplayType_, v13);
    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD7A0]), sel_initWithRootViewController_, v31);
    objc_msgSend(a3, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v32, 0, 1, 0);

  }
}

id sub_24183B17C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_2418A8340();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  v7 = sub_2418A8334();
  v8 = sub_2418AA05C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v17 = v1;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    v19 = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = sub_2418AA5D8();
    v18 = sub_24176024C(v12, v13, &v19);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v7, v8, "[%{public}s] Dismissing", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v11, -1, -1);
    v14 = v10;
    v1 = v17;
    MEMORY[0x24269D548](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id StateOfMindOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:mode:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v5 = v4;
  v10 = sub_2418A8100();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10) != 1)
  {
    v12 = (void *)sub_2418A80AC();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  }
  if (a3)
  {
    sub_241762EFC(0, (unint64_t *)&qword_257152CA0);
    v13 = (void *)sub_2418A9EAC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v14 = objc_msgSend(objc_allocWithZone(v5), sel_initWithDisplayDate_applicationItems_factorDisplayTypes_mode_, v12, a2, v13, a4);

  return v14;
}

void StateOfMindOverlayRoomViewController.init(displayDate:applicationItems:factorDisplayTypes:mode:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StateOfMindOverlayRoomViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindOverlayRoomViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_24183B62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD v18[6];

  v12 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  if (!a6)
  {
    v14 = 0;
    if (a7)
      goto LABEL_3;
LABEL_5:
    v15 = 0;
    goto LABEL_6;
  }
  v14 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  if (!a7)
    goto LABEL_5;
LABEL_3:
  v18[4] = a7;
  v18[5] = a8;
  v18[0] = MEMORY[0x24BDAC760];
  v18[1] = 1107296256;
  v18[2] = sub_2417599E8;
  v18[3] = &block_descriptor_11;
  v15 = _Block_copy(v18);
  swift_release();
LABEL_6:
  v16 = objc_msgSend(v8, sel_initWithTitle_detail_buttonTextString_buttonAction_, v12, v13, v14, v15);
  _Block_release(v15);

  return v16;
}

uint64_t sub_24183B760(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24188F190(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_24183B840(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_24183B7C8(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_241890438();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_24183C0B0(v6);
  return sub_2418AA32C();
}

uint64_t sub_24183B840(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;

  v3 = a1[1];
  result = sub_2418AA4A0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_155;
    if (v3)
      return sub_24183CA48(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_163;
  v124 = v3;
  v121 = result;
  v129 = v1;
  v118 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    v128 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_120:
      v120 = v8;
      if (v12 >= 2)
      {
        v110 = *v118;
        do
        {
          v111 = v12 - 2;
          if (v12 < 2)
            goto LABEL_150;
          if (!v110)
            goto LABEL_162;
          v112 = *(_QWORD *)&v11[16 * v111 + 32];
          v113 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_24183CD40((char *)(v110 + 8 * v112), (char *)(v110 + 8 * *(_QWORD *)&v11[16 * v12 + 16]), v110 + 8 * v113, v128);
          if (v129)
            break;
          if (v113 < v112)
            goto LABEL_151;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v11 = sub_24188E1A4((uint64_t)v11);
          if (v111 >= *((_QWORD *)v11 + 2))
            goto LABEL_152;
          v114 = &v11[16 * v111 + 32];
          *(_QWORD *)v114 = v112;
          *((_QWORD *)v114 + 1) = v113;
          v115 = *((_QWORD *)v11 + 2);
          if (v12 > v115)
            goto LABEL_153;
          memmove(&v11[16 * v12 + 16], &v11[16 * v12 + 32], 16 * (v115 - v12));
          *((_QWORD *)v11 + 2) = v115 - 1;
          v12 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_131:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v120 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v120 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    type metadata accessor for __HKStateOfMindDomain(0);
    v7 = sub_2418A9EE8();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v124;
    v120 = v7;
    v128 = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v119 = v10 + 16;
  v117 = v10 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v13 = v9 + 1;
    v123 = v9;
    if (v9 + 1 >= v3)
      goto LABEL_47;
    v14 = (id)HKUILocalizedStringForStateOfMindDomain();
    v15 = sub_2418A9DE0();
    v17 = v16;

    v18 = (id)HKUILocalizedStringForStateOfMindDomain();
    v19 = sub_2418A9DE0();
    v21 = v20;

    if (v15 == v19 && v17 == v21)
      v23 = 0;
    else
      v23 = sub_2418AA4DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v9 + 2;
    v3 = v124;
    if (v9 + 2 >= v124)
      goto LABEL_37;
    v125 = v10;
    v24 = v119 + 8 * v9;
    while (1)
    {
      v26 = v13;
      v27 = (id)HKUILocalizedStringForStateOfMindDomain();
      v28 = sub_2418A9DE0();
      v30 = v29;

      v31 = (id)HKUILocalizedStringForStateOfMindDomain();
      v32 = sub_2418A9DE0();
      v34 = v33;

      if (v28 == v32 && v30 == v34)
      {
        swift_bridgeObjectRelease_n();
        v13 = v26;
        if ((v23 & 1) != 0)
        {
          v3 = v124;
          v10 = v125;
          v9 = v123;
          goto LABEL_38;
        }
        goto LABEL_26;
      }
      v25 = sub_2418AA4DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v26;
      if (((v23 ^ v25) & 1) != 0)
        break;
LABEL_26:
      v24 += 8;
      ++v13;
      v3 = v124;
      if (v124 == v13)
      {
        v13 = v124;
        goto LABEL_36;
      }
    }
    v3 = v124;
LABEL_36:
    v10 = v125;
    v9 = v123;
LABEL_37:
    if ((v23 & 1) != 0)
    {
LABEL_38:
      if (v13 < v9)
        goto LABEL_156;
      if (v9 < v13)
      {
        v36 = v13 - 1;
        v37 = v9;
        do
        {
          if (v37 != v36)
          {
            if (!v10)
              goto LABEL_161;
            v38 = *(_QWORD *)(v10 + 8 * v37);
            *(_QWORD *)(v10 + 8 * v37) = *(_QWORD *)(v10 + 8 * v36);
            *(_QWORD *)(v10 + 8 * v36) = v38;
          }
          v86 = ++v37 < v36--;
        }
        while (v86);
      }
    }
LABEL_47:
    if (v13 < v3)
    {
      if (__OFSUB__(v13, v9))
        goto LABEL_154;
      if (v13 - v9 < v121)
        break;
    }
LABEL_70:
    if (v13 < v9)
      goto LABEL_149;
    v127 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_24188E004(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v55 = *((_QWORD *)v11 + 2);
    v54 = *((_QWORD *)v11 + 3);
    v12 = v55 + 1;
    if (v55 >= v54 >> 1)
      v11 = sub_24188E004((char *)(v54 > 1), v55 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v56 = v11 + 32;
    v57 = &v11[16 * v55 + 32];
    *(_QWORD *)v57 = v9;
    *((_QWORD *)v57 + 1) = v127;
    if (v55)
    {
      while (1)
      {
        v58 = v12 - 1;
        if (v12 >= 4)
        {
          v63 = &v56[16 * v12];
          v64 = *((_QWORD *)v63 - 8);
          v65 = *((_QWORD *)v63 - 7);
          v69 = __OFSUB__(v65, v64);
          v66 = v65 - v64;
          if (v69)
            goto LABEL_138;
          v68 = *((_QWORD *)v63 - 6);
          v67 = *((_QWORD *)v63 - 5);
          v69 = __OFSUB__(v67, v68);
          v61 = v67 - v68;
          v62 = v69;
          if (v69)
            goto LABEL_139;
          v70 = v12 - 2;
          v71 = &v56[16 * v12 - 32];
          v73 = *(_QWORD *)v71;
          v72 = *((_QWORD *)v71 + 1);
          v69 = __OFSUB__(v72, v73);
          v74 = v72 - v73;
          if (v69)
            goto LABEL_141;
          v69 = __OFADD__(v61, v74);
          v75 = v61 + v74;
          if (v69)
            goto LABEL_144;
          if (v75 >= v66)
          {
            v93 = &v56[16 * v58];
            v95 = *(_QWORD *)v93;
            v94 = *((_QWORD *)v93 + 1);
            v69 = __OFSUB__(v94, v95);
            v96 = v94 - v95;
            if (v69)
              goto LABEL_148;
            v86 = v61 < v96;
            goto LABEL_107;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v87 = *((_QWORD *)v11 + 4);
            v88 = *((_QWORD *)v11 + 5);
            v69 = __OFSUB__(v88, v87);
            v80 = v88 - v87;
            v81 = v69;
            goto LABEL_101;
          }
          v60 = *((_QWORD *)v11 + 4);
          v59 = *((_QWORD *)v11 + 5);
          v69 = __OFSUB__(v59, v60);
          v61 = v59 - v60;
          v62 = v69;
        }
        if ((v62 & 1) != 0)
          goto LABEL_140;
        v70 = v12 - 2;
        v76 = &v56[16 * v12 - 32];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v79 = __OFSUB__(v77, v78);
        v80 = v77 - v78;
        v81 = v79;
        if (v79)
          goto LABEL_143;
        v82 = &v56[16 * v58];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v69 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v69)
          goto LABEL_146;
        if (__OFADD__(v80, v85))
          goto LABEL_147;
        if (v80 + v85 >= v61)
        {
          v86 = v61 < v85;
LABEL_107:
          if (v86)
            v58 = v70;
          goto LABEL_109;
        }
LABEL_101:
        if ((v81 & 1) != 0)
          goto LABEL_142;
        v89 = &v56[16 * v58];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v69 = __OFSUB__(v90, v91);
        v92 = v90 - v91;
        if (v69)
          goto LABEL_145;
        if (v92 < v80)
          goto LABEL_15;
LABEL_109:
        v97 = v58 - 1;
        if (v58 - 1 >= v12)
        {
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        v98 = v10;
        if (!v10)
          goto LABEL_160;
        v99 = v11;
        v100 = v56;
        v101 = &v56[16 * v97];
        v102 = *(_QWORD *)v101;
        v103 = v100;
        v104 = v58;
        v105 = &v100[16 * v58];
        v106 = *((_QWORD *)v105 + 1);
        v107 = v98;
        sub_24183CD40((char *)(v98 + 8 * *(_QWORD *)v101), (char *)(v98 + 8 * *(_QWORD *)v105), v98 + 8 * v106, v128);
        if (v129)
          goto LABEL_131;
        if (v106 < v102)
          goto LABEL_135;
        if (v104 > *((_QWORD *)v99 + 2))
          goto LABEL_136;
        v108 = v104;
        *(_QWORD *)v101 = v102;
        *(_QWORD *)&v103[16 * v97 + 8] = v106;
        v109 = *((_QWORD *)v99 + 2);
        if (v104 >= v109)
          goto LABEL_137;
        v56 = v103;
        v11 = v99;
        v129 = 0;
        v12 = v109 - 1;
        memmove(v105, v105 + 16, 16 * (v109 - 1 - v108));
        *((_QWORD *)v99 + 2) = v109 - 1;
        v10 = v107;
        if (v109 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v124;
    v9 = v127;
    if (v127 >= v124)
    {
      v8 = v120;
      goto LABEL_120;
    }
  }
  if (__OFADD__(v9, v121))
    goto LABEL_157;
  if (v9 + v121 >= v3)
    v39 = v3;
  else
    v39 = v9 + v121;
  if (v39 >= v9)
  {
    if (v13 != v39)
    {
      v116 = v11;
      v40 = (_QWORD *)(v117 + 8 * v13);
      v122 = v39;
      do
      {
        v126 = v40;
        while (1)
        {
          v41 = v10;
          v42 = v13;
          v43 = (id)HKUILocalizedStringForStateOfMindDomain();
          v44 = sub_2418A9DE0();
          v46 = v45;

          v47 = (id)HKUILocalizedStringForStateOfMindDomain();
          v48 = sub_2418A9DE0();
          v50 = v49;

          if (v44 == v48 && v46 == v50)
            break;
          v52 = sub_2418AA4DC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v52 & 1) == 0)
            goto LABEL_58;
          if (!v41)
            goto LABEL_159;
          v13 = v42;
          v10 = v41;
          v53 = *v40;
          *v40 = v40[1];
          v40[1] = v53;
          --v40;
          if (v13 == ++v9)
            goto LABEL_59;
        }
        swift_bridgeObjectRelease_n();
LABEL_58:
        v13 = v42;
        v10 = v41;
LABEL_59:
        ++v13;
        v40 = v126 + 1;
        v9 = v123;
      }
      while (v13 != v122);
      v13 = v122;
      v11 = v116;
    }
    goto LABEL_70;
  }
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  result = sub_2418AA374();
  __break(1u);
  return result;
}

uint64_t sub_24183C0B0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id *v29;
  int v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v70;
  void *v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  char v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  void **v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;

  v3 = a1[1];
  result = sub_2418AA4A0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_149;
    if (v3)
      return sub_24183CB80(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_157;
  v130 = result;
  v135 = v3;
  v127 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v143 = MEMORY[0x24BEE4AF8];
    v138 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_115:
      if (v12 >= 2)
      {
        v121 = *v127;
        do
        {
          v122 = v12 - 2;
          if (v12 < 2)
            goto LABEL_144;
          if (!v121)
            goto LABEL_156;
          v123 = *(_QWORD *)&v8[16 * v122 + 32];
          v124 = *(_QWORD *)&v8[16 * v12 + 24];
          sub_24183D0E4((void **)(v121 + 8 * v123), (id *)(v121 + 8 * *(_QWORD *)&v8[16 * v12 + 16]), (id *)(v121 + 8 * v124), v138);
          if (v1)
            break;
          if (v124 < v123)
            goto LABEL_145;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_24188E1A4((uint64_t)v8);
          if (v122 >= *((_QWORD *)v8 + 2))
            goto LABEL_146;
          v125 = &v8[16 * v122 + 32];
          *(_QWORD *)v125 = v123;
          *((_QWORD *)v125 + 1) = v124;
          v126 = *((_QWORD *)v8 + 2);
          if (v12 > v126)
            goto LABEL_147;
          memmove(&v8[16 * v12 + 16], &v8[16 * v12 + 32], 16 * (v126 - v12));
          *((_QWORD *)v8 + 2) = v126 - 1;
          v12 = v126 - 1;
        }
        while (v126 > 2);
      }
LABEL_126:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v143 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_2418A9EC4();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_241762EFC(0, (unint64_t *)&qword_257152CA0);
    v7 = sub_2418A9EE8();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v138 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v143 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v128 = *a1 + 16;
  v129 = *a1 - 8;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v11 = v135;
  v139 = *a1;
  while (2)
  {
    v13 = v9;
    v14 = v9 + 1;
    v134 = v9;
    if (v9 + 1 >= v11)
      goto LABEL_45;
    v131 = v8;
    v15 = *(void **)(v10 + 8 * v9);
    v16 = *(id *)(v10 + 8 * v14);
    v17 = v15;
    v18 = objc_msgSend(v16, sel_localization);
    v19 = objc_msgSend(v18, sel_displayName);

    v20 = sub_2418A9DE0();
    v22 = v21;

    v23 = objc_msgSend(v17, sel_localization);
    v24 = objc_msgSend(v23, sel_displayName);

    v25 = sub_2418A9DE0();
    v27 = v26;

    if (v20 == v25 && v22 == v27)
      v136 = 0;
    else
      v136 = sub_2418AA4DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v13 = v134;
    v14 = v134 + 2;
    if (v134 + 2 >= v135)
      goto LABEL_36;
    v29 = (id *)(v128 + 8 * v134);
    while (1)
    {
      v140 = v14;
      v31 = *(v29 - 1);
      v32 = *v29;
      v33 = v31;
      v34 = objc_msgSend(v32, sel_localization);
      v35 = objc_msgSend(v34, sel_displayName);

      v36 = sub_2418A9DE0();
      v38 = v37;

      v39 = objc_msgSend(v33, sel_localization);
      v40 = objc_msgSend(v39, sel_displayName);

      v41 = sub_2418A9DE0();
      v43 = v42;

      if (v36 == v41 && v38 == v43)
      {

        swift_bridgeObjectRelease_n();
        if ((v136 & 1) != 0)
        {
          v8 = v131;
          v10 = v139;
          v14 = v140;
          v13 = v134;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      v30 = sub_2418AA4DC();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v136 ^ v30) & 1) != 0)
        break;
LABEL_25:
      v14 = v140 + 1;
      ++v29;
      if (v135 == v140 + 1)
      {
        v14 = v135;
        goto LABEL_35;
      }
    }
    v14 = v140;
LABEL_35:
    v13 = v134;
LABEL_36:
    v8 = v131;
    v10 = v139;
    if ((v136 & 1) != 0)
    {
LABEL_37:
      if (v14 < v13)
        goto LABEL_150;
      if (v13 < v14)
      {
        v45 = (uint64_t *)(v129 + 8 * v14);
        v46 = v14;
        v47 = v13;
        v48 = (uint64_t *)(v10 + 8 * v13);
        do
        {
          if (v47 != --v46)
          {
            if (!v10)
              goto LABEL_155;
            v49 = *v48;
            *v48 = *v45;
            *v45 = v49;
          }
          ++v47;
          --v45;
          ++v48;
        }
        while (v47 < v46);
      }
    }
LABEL_45:
    if (v14 >= v135)
      goto LABEL_67;
    if (__OFSUB__(v14, v13))
      goto LABEL_148;
    if (v14 - v13 >= v130)
    {
LABEL_67:
      if (v14 < v13)
        goto LABEL_143;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_24188E004(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v73 = *((_QWORD *)v8 + 2);
      v72 = *((_QWORD *)v8 + 3);
      v12 = v73 + 1;
      v142 = v14;
      if (v73 >= v72 >> 1)
        v8 = sub_24188E004((char *)(v72 > 1), v73 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v12;
      v74 = v8 + 32;
      v75 = &v8[16 * v73 + 32];
      *(_QWORD *)v75 = v13;
      *((_QWORD *)v75 + 1) = v142;
      if (!v73)
      {
        v12 = 1;
LABEL_14:
        v11 = v135;
        v9 = v142;
        if (v142 >= v135)
          goto LABEL_115;
        continue;
      }
      while (1)
      {
        v76 = v12 - 1;
        if (v12 >= 4)
        {
          v81 = &v74[16 * v12];
          v82 = *((_QWORD *)v81 - 8);
          v83 = *((_QWORD *)v81 - 7);
          v87 = __OFSUB__(v83, v82);
          v84 = v83 - v82;
          if (v87)
            goto LABEL_132;
          v86 = *((_QWORD *)v81 - 6);
          v85 = *((_QWORD *)v81 - 5);
          v87 = __OFSUB__(v85, v86);
          v79 = v85 - v86;
          v80 = v87;
          if (v87)
            goto LABEL_133;
          v88 = v12 - 2;
          v89 = &v74[16 * v12 - 32];
          v91 = *(_QWORD *)v89;
          v90 = *((_QWORD *)v89 + 1);
          v87 = __OFSUB__(v90, v91);
          v92 = v90 - v91;
          if (v87)
            goto LABEL_135;
          v87 = __OFADD__(v79, v92);
          v93 = v79 + v92;
          if (v87)
            goto LABEL_138;
          if (v93 >= v84)
          {
            v111 = &v74[16 * v76];
            v113 = *(_QWORD *)v111;
            v112 = *((_QWORD *)v111 + 1);
            v87 = __OFSUB__(v112, v113);
            v114 = v112 - v113;
            if (v87)
              goto LABEL_142;
            v104 = v79 < v114;
            goto LABEL_104;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v105 = *((_QWORD *)v8 + 4);
            v106 = *((_QWORD *)v8 + 5);
            v87 = __OFSUB__(v106, v105);
            v98 = v106 - v105;
            v99 = v87;
            goto LABEL_98;
          }
          v78 = *((_QWORD *)v8 + 4);
          v77 = *((_QWORD *)v8 + 5);
          v87 = __OFSUB__(v77, v78);
          v79 = v77 - v78;
          v80 = v87;
        }
        if ((v80 & 1) != 0)
          goto LABEL_134;
        v88 = v12 - 2;
        v94 = &v74[16 * v12 - 32];
        v96 = *(_QWORD *)v94;
        v95 = *((_QWORD *)v94 + 1);
        v97 = __OFSUB__(v95, v96);
        v98 = v95 - v96;
        v99 = v97;
        if (v97)
          goto LABEL_137;
        v100 = &v74[16 * v76];
        v102 = *(_QWORD *)v100;
        v101 = *((_QWORD *)v100 + 1);
        v87 = __OFSUB__(v101, v102);
        v103 = v101 - v102;
        if (v87)
          goto LABEL_140;
        if (__OFADD__(v98, v103))
          goto LABEL_141;
        if (v98 + v103 >= v79)
        {
          v104 = v79 < v103;
LABEL_104:
          if (v104)
            v76 = v88;
          goto LABEL_106;
        }
LABEL_98:
        if ((v99 & 1) != 0)
          goto LABEL_136;
        v107 = &v74[16 * v76];
        v109 = *(_QWORD *)v107;
        v108 = *((_QWORD *)v107 + 1);
        v87 = __OFSUB__(v108, v109);
        v110 = v108 - v109;
        if (v87)
          goto LABEL_139;
        if (v110 < v98)
          goto LABEL_14;
LABEL_106:
        v115 = v76 - 1;
        if (v76 - 1 >= v12)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!v10)
          goto LABEL_154;
        v116 = &v74[16 * v115];
        v117 = *(_QWORD *)v116;
        v118 = &v74[16 * v76];
        v119 = *((_QWORD *)v118 + 1);
        sub_24183D0E4((void **)(v10 + 8 * *(_QWORD *)v116), (id *)(v10 + 8 * *(_QWORD *)v118), (id *)(v10 + 8 * v119), v138);
        if (v1)
          goto LABEL_126;
        if (v119 < v117)
          goto LABEL_129;
        if (v76 > *((_QWORD *)v8 + 2))
          goto LABEL_130;
        *(_QWORD *)v116 = v117;
        *(_QWORD *)&v74[16 * v115 + 8] = v119;
        v120 = *((_QWORD *)v8 + 2);
        if (v76 >= v120)
          goto LABEL_131;
        v12 = v120 - 1;
        memmove(&v74[16 * v76], v118 + 16, 16 * (v120 - 1 - v76));
        *((_QWORD *)v8 + 2) = v120 - 1;
        if (v120 <= 2)
          goto LABEL_14;
      }
    }
    break;
  }
  if (__OFADD__(v13, v130))
    goto LABEL_151;
  v50 = v135;
  if (v13 + v130 < v135)
    v50 = v13 + v130;
  if (v50 >= v13)
  {
    if (v14 != v50)
    {
      v132 = v8;
      v133 = v50;
      v51 = v129 + 8 * v14;
      do
      {
        v53 = *(void **)(v10 + 8 * v14);
        v54 = v13;
        v137 = v51;
        v55 = v51;
        v141 = v14;
        while (1)
        {
          v56 = *(void **)v55;
          v57 = v53;
          v58 = v56;
          v59 = objc_msgSend(v57, sel_localization);
          v60 = objc_msgSend(v59, sel_displayName);

          v61 = sub_2418A9DE0();
          v63 = v62;

          v64 = objc_msgSend(v58, sel_localization);
          v65 = objc_msgSend(v64, sel_displayName);

          v66 = sub_2418A9DE0();
          v68 = v67;

          if (v61 == v66 && v63 == v68)
          {

            swift_bridgeObjectRelease_n();
            v10 = v139;
            v52 = v141;
            goto LABEL_55;
          }
          v70 = sub_2418AA4DC();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = v139;
          if ((v70 & 1) == 0)
            break;
          v52 = v141;
          if (!v139)
            goto LABEL_153;
          v71 = *(void **)v55;
          v53 = *(void **)(v55 + 8);
          *(_QWORD *)v55 = v53;
          *(_QWORD *)(v55 + 8) = v71;
          v55 -= 8;
          if (v141 == ++v54)
            goto LABEL_55;
        }
        v52 = v141;
LABEL_55:
        v14 = v52 + 1;
        v51 = v137 + 8;
        v13 = v134;
      }
      while (v14 != v133);
      v14 = v133;
      v8 = v132;
    }
    goto LABEL_67;
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  result = sub_2418AA374();
  __break(1u);
  return result;
}

uint64_t sub_24183CA48(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t *v21;

  v20 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = (uint64_t *)(*a4 + 8 * a3 - 8);
LABEL_6:
    v7 = v20;
    v21 = v6;
    while (1)
    {
      v8 = (id)HKUILocalizedStringForStateOfMindDomain();
      v9 = sub_2418A9DE0();
      v11 = v10;

      v12 = (id)HKUILocalizedStringForStateOfMindDomain();
      v13 = sub_2418A9DE0();
      v15 = v14;

      if (v9 == v13 && v11 == v15)
      {
        result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        v6 = v21 + 1;
        if (v4 == a2)
          return result;
        goto LABEL_6;
      }
      v17 = sub_2418AA4DC();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
        goto LABEL_5;
      if (!v5)
        break;
      v18 = *v6;
      result = v6[1];
      *v6 = result;
      v6[1] = v18;
      --v6;
      if (v4 == ++v7)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24183CB80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v25 = result;
  if (a3 != a2)
  {
    v27 = *a4;
    v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v27 + 8 * a3);
    v7 = v25;
    v26 = v4;
    v28 = a3;
    while (1)
    {
      v8 = *(void **)v4;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, sel_localization);
      v12 = objc_msgSend(v11, sel_displayName);

      v13 = sub_2418A9DE0();
      v15 = v14;

      v16 = objc_msgSend(v10, sel_localization);
      v17 = objc_msgSend(v16, sel_displayName);

      v18 = sub_2418A9DE0();
      v20 = v19;

      if (v13 == v18 && v15 == v20)
      {

        result = swift_bridgeObjectRelease_n();
        v5 = v28;
LABEL_5:
        a3 = v5 + 1;
        v4 = v26 + 8;
        if (a3 == a2)
          return result;
        goto LABEL_6;
      }
      v22 = sub_2418AA4DC();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 = v28;
      if ((v22 & 1) == 0)
        goto LABEL_5;
      if (!v27)
        break;
      v23 = *(void **)v4;
      v6 = *(void **)(v4 + 8);
      *(_QWORD *)v4 = v6;
      *(_QWORD *)(v4 + 8) = v23;
      v4 -= 8;
      if (v28 == ++v7)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24183CD40(char *a1, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t result;
  char *v42;
  char *v44;
  char *v45;
  char *v46;
  char *v47;

  v4 = __src;
  v5 = __src - a1;
  v6 = __src - a1 + 7;
  if (__src - a1 >= 0)
    v6 = __src - a1;
  v7 = v6 >> 3;
  v8 = a3 - (_QWORD)__src;
  v9 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v9 = a3 - (_QWORD)__src;
  v10 = v9 >> 3;
  v47 = a1;
  v46 = a4;
  if (v7 >= v9 >> 3)
  {
    if (v8 < -7)
      goto LABEL_54;
    if (a4 != __src || &__src[8 * v10] <= a4)
      memmove(a4, __src, 8 * v10);
    v26 = &a4[8 * v10];
    v45 = v26;
    v47 = v4;
    if (a1 >= v4 || v8 < 8)
    {
LABEL_53:
      sub_24188E0F8(&v47, &v46, &v45);
      return 1;
    }
    v27 = (char *)(a3 - 8);
    v28 = v4;
    while (1)
    {
      v42 = v27 + 8;
      v44 = v4;
      v28 -= 8;
      v29 = (id)HKUILocalizedStringForStateOfMindDomain();
      v30 = sub_2418A9DE0();
      v32 = v31;

      v33 = (id)HKUILocalizedStringForStateOfMindDomain();
      v34 = sub_2418A9DE0();
      v36 = v35;

      if (v30 == v34 && v32 == v36)
        break;
      v38 = sub_2418AA4DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v38 & 1) == 0)
        goto LABEL_46;
      if (v42 != v44 || v27 >= v44)
        *(_QWORD *)v27 = *(_QWORD *)v28;
      v47 = v28;
LABEL_51:
      if (v28 > a1)
      {
        v27 -= 8;
        v4 = v28;
        if (v26 > a4)
          continue;
      }
      goto LABEL_53;
    }
    swift_bridgeObjectRelease_n();
LABEL_46:
    v45 = v26 - 8;
    v28 = v44;
    if (v42 < v26 || v27 >= v26 || v42 != v26)
      *(_QWORD *)v27 = *((_QWORD *)v26 - 1);
    v26 -= 8;
    goto LABEL_51;
  }
  if (v5 >= -7)
  {
    if (a4 != a1 || &a1[8 * v7] <= a4)
      memmove(a4, a1, 8 * v7);
    v11 = &a4[8 * v7];
    v45 = v11;
    if ((unint64_t)v4 < a3 && v5 >= 8)
    {
      v12 = a4;
      v13 = a1;
      while (1)
      {
        v14 = v4;
        v15 = (id)HKUILocalizedStringForStateOfMindDomain();
        v16 = sub_2418A9DE0();
        v18 = v17;

        v19 = (id)HKUILocalizedStringForStateOfMindDomain();
        v20 = sub_2418A9DE0();
        v22 = v21;

        if (v16 == v20 && v18 == v22)
          break;
        v24 = sub_2418AA4DC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
          goto LABEL_23;
        v25 = v14 + 8;
        if (v13 < v14 || v13 >= v25 || v13 != v14)
          *(_QWORD *)v13 = *(_QWORD *)v14;
LABEL_26:
        v13 += 8;
        if (v12 < v11)
        {
          v4 = v25;
          if ((unint64_t)v25 < a3)
            continue;
        }
        v47 = v13;
        goto LABEL_53;
      }
      swift_bridgeObjectRelease_n();
LABEL_23:
      if (v13 != v12)
        *(_QWORD *)v13 = *(_QWORD *)v12;
      v12 += 8;
      v46 = v12;
      v25 = v14;
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_54:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_24183D0E4(void **__src, id *a2, id *a3, void **__dst)
{
  void **v4;
  id *v5;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  id *v29;
  id *v30;
  void **v31;
  void **v32;
  id *v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  id *v51;
  unint64_t v52;
  uint64_t result;
  void **v54;
  void *v55;
  void **v56;
  id *v57;
  void **v58;
  id *v59;
  id *v60;
  id *v61;
  id *v62;
  id *v63;
  void **v64;
  void **v65;
  id *v66;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = (char *)a3 - (char *)a2;
  v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v12 = (char *)a3 - (char *)a2;
  v13 = v12 >> 3;
  v66 = __src;
  v65 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_53;
    if (__dst != a2 || &a2[v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v54 = v4;
    v32 = &v4[v13];
    v64 = v32;
    v66 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_24188E0F8(&v66, &v65, &v64);
      return 1;
    }
    v33 = v6;
    v59 = v7;
    while (1)
    {
      v61 = v5;
      v63 = v6;
      v57 = v32;
      v35 = *--v32;
      v34 = v35;
      v36 = *--v33;
      v37 = v34;
      v38 = v36;
      v55 = v37;
      v39 = objc_msgSend(v37, sel_localization);
      v40 = objc_msgSend(v39, sel_displayName);

      v41 = sub_2418A9DE0();
      v43 = v42;

      v44 = objc_msgSend(v38, sel_localization);
      v45 = objc_msgSend(v44, sel_displayName);

      v46 = sub_2418A9DE0();
      v48 = v47;

      if (v41 == v46 && v43 == v48)
        break;
      v50 = sub_2418AA4DC();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v51 = v61;
      v5 = v61 - 1;
      if ((v50 & 1) == 0)
        goto LABEL_46;
      v32 = v57;
      v52 = (unint64_t)v59;
      if (v61 != v63 || v5 >= v63)
        *v5 = *v33;
      v66 = v33;
LABEL_50:
      if ((unint64_t)v33 > v52)
      {
        v6 = v33;
        if (v32 > v54)
          continue;
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    v51 = v61;
    v5 = v61 - 1;
LABEL_46:
    v52 = (unint64_t)v59;
    v33 = v63;
    v64 = v32;
    if (v51 < v57 || v5 >= v57 || v51 != v57)
      *v5 = *v32;
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v56 = &v4[v10];
    v64 = v56;
    if (v6 < v5 && v8 >= 8)
    {
      v60 = v5;
      while (1)
      {
        v58 = v7;
        v62 = v6;
        v14 = *v4;
        v15 = *v6;
        v16 = v14;
        v17 = objc_msgSend(v15, sel_localization);
        v18 = objc_msgSend(v17, sel_displayName);

        v19 = sub_2418A9DE0();
        v21 = v20;

        v22 = objc_msgSend(v16, sel_localization);
        v23 = objc_msgSend(v22, sel_displayName);

        v24 = sub_2418A9DE0();
        v26 = v25;

        if (v19 == v24 && v21 == v26)
          break;
        v28 = sub_2418AA4DC();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
          goto LABEL_23;
        v29 = v60;
        v30 = v62 + 1;
        v31 = v58;
        if (v58 < v62 || v58 >= v30 || v58 != v62)
          *v58 = *v62;
LABEL_26:
        v7 = v31 + 1;
        if (v4 < v56)
        {
          v6 = v30;
          if (v30 < v29)
            continue;
        }
        v66 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      v31 = v58;
      v29 = v60;
      if (v58 != v4)
        *v58 = *v4;
      v65 = ++v4;
      v30 = v62;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_24183D590(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24188E1B8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24183D5AC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24188E328(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24183D5C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24188E4A4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24183D5E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24188E614(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24183D600(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24188E780(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_24183D61C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24188E918(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_24183D638(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24188E92C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24183D654(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24188EAB0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24183D670(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24188EC34(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24183D68C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24188EDB0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_24183D6A8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24188EDC4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24183D6C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24188EF40(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_24183D6E0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24188EF54(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_24183D6FC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24188EC20(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24183D718(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  id v19;
  char *v20;
  uint64_t v21;
  void *v22;
  id v23;
  objc_class *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v31 = MEMORY[0x24BEE4AF8];
    sub_2418AA338();
    v8 = a1 + 32;
    sub_241762EFC(0, &qword_257152DD0);
    sub_241762EFC(0, (unint64_t *)&qword_257152CA0);
    v25 = a3;
    do
    {
      v26 = v8 + 8;
      v27 = v4;
      v29 = 0x6E69616D6F44;
      v30 = 0xE600000000000000;
      v9 = (id)NSStringFromHKStateOfMindDomain();
      sub_2418A9DE0();

      sub_2418A9E40();
      swift_bridgeObjectRelease();
      v11 = v29;
      v10 = v30;
      v12 = objc_msgSend(a2, sel_applicationItems);
      v13 = a3;
      v14 = (void *)sub_2418AA1AC();
      v15 = a2;
      v16 = (char *)objc_allocWithZone((Class)type metadata accessor for StateOfMindSampleCountContext());
      v17 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
      *(_QWORD *)&v16[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
      v18 = (uint64_t *)&v16[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
      *v18 = v11;
      v18[1] = v10;
      *(_QWORD *)&v16[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = v13;
      v19 = v13;
      v20 = v16;
      sub_241880A3C(v12, v14, 0);
      *(_QWORD *)&v20[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v21;
      *(_QWORD *)&v20[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = v14;
      v22 = *(void **)&v16[v17];
      *(_QWORD *)&v16[v17] = 0;
      a2 = v15;
      v23 = v14;

      v24 = (objc_class *)type metadata accessor for StateOfMindOverlayContext();
      v28.receiver = v20;
      v28.super_class = v24;
      objc_msgSendSuper2(&v28, sel_init);

      sub_2418AA320();
      sub_2418AA344();
      a3 = v25;
      sub_2418AA350();
      sub_2418AA32C();
      v8 = v26;
      v4 = v27 - 1;
    }
    while (v27 != 1);
    return v31;
  }
  return result;
}

uint64_t sub_24183D970(unint64_t a1, char *a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v6)
      break;
    v14 = MEMORY[0x24BEE4AF8];
    result = sub_2418AA338();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    while (v6 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x24269CAD4](v8, a1);
      else
        v9 = *(id *)(a1 + 8 * v8 + 32);
      v10 = v9;
      v12 = v9;
      sub_241839548(&v12, a2, a3, &v13);

      if (v3)
        return swift_release();
      ++v8;
      sub_2418AA320();
      sub_2418AA344();
      sub_2418AA350();
      sub_2418AA32C();
      if (v6 == v8)
        return v14;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v6 = sub_2418AA398();
    swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_24183DADC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  char *v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v50 = a7;
  v13 = sub_2418A8340();
  v14 = *(_QWORD *)(v13 - 8);
  v51 = v13;
  v52 = v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)&v49 - v20;
  sub_2417C55D4(0, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v49 - v24;
  v26 = objc_msgSend(a1, sel_sleepChartFormatter);
  if (!v26)
  {
    sub_2418A8328();
    v34 = sub_2418A8334();
    v35 = sub_2418AA050();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v54 = v37;
      *(_DWORD *)v36 = 136446210;
      v38 = sub_2418AA5D8();
      v53 = sub_24176024C(v38, v39, &v54);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v34, v35, "[%{public}s] State of mind overlays require a sleep formatter", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v37, -1, -1);
      MEMORY[0x24269D548](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v51);
    return 0;
  }
  v27 = v26;
  v28 = objc_msgSend(a1, sel_addDataViewControllerProvider);
  if (!v28)
  {
    sub_2418A8328();
    v40 = sub_2418A8334();
    v41 = sub_2418AA050();
    v42 = os_log_type_enabled(v40, v41);
    v43 = v51;
    if (v42)
    {
      v44 = (uint8_t *)swift_slowAlloc();
      v45 = swift_slowAlloc();
      v54 = v45;
      *(_DWORD *)v44 = 136446210;
      v46 = sub_2418AA5D8();
      v53 = sub_24176024C(v46, v47, &v54);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v40, v41, "[%{public}s] State of mind requires an add data provider", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v45, -1, -1);
      MEMORY[0x24269D548](v44, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v21, v43);
    return 0;
  }
  v29 = (uint64_t)v28;
  sub_2417B1090(a3, (uint64_t)v25);
  v30 = objc_allocWithZone((Class)type metadata accessor for StateOfMindOverlayRoomViewController());
  swift_bridgeObjectRetain();
  v31 = v27;
  swift_unknownObjectRetain();
  v32 = StateOfMindOverlayRoomViewController.init(displayDate:applicationItems:factorDisplayTypes:sleepChartFormatter:addDataViewControllerProvider:preferredOverlay:)((uint64_t)v25, a2, a6, v31, v29, a4);
  objc_msgSend(v32, sel_setRestorationUserActivity_, a5);
  v33 = v32;
  objc_msgSend(v33, sel_setAdditionalChartOptions_, v50);

  swift_unknownObjectRelease();
  return v33;
}

uint64_t type metadata accessor for StateOfMindOverlayRoomViewController()
{
  return objc_opt_self();
}

void sub_24183DF00(void *a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(a1, sel_displayTypeController);
  v2 = objc_msgSend((id)objc_opt_self(), sel_stateOfMindType);
  v3 = objc_msgSend(v1, sel_displayTypeForObjectType_, v2);

  if (v3)
  {
    v4 = objc_msgSend(v3, sel_localization);

    v5 = objc_msgSend(v4, sel_displayName);
    sub_2418A9DE0();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24183DFE8(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v13;

  v13 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_2418AA398())
  {
    for (i = 4; ; ++i)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24269CAD4](i - 4, a1) : *(id *)(a1 + 8 * i);
      v7 = v6;
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v9 = objc_msgSend(a2, sel_applicationItems);
      v10 = objc_msgSend(v9, sel_displayTypeController);

      v11 = objc_msgSend(v10, sel_displayTypeForObjectType_, v7);
      if (v11)
      {
        MEMORY[0x24269C6A8]();
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2418A9EDC();
        sub_2418A9EF4();
        sub_2418A9EC4();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

void sub_24183E1A8(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t);
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_2418A8340();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v42 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v39 - v11;
  sub_2418A8328();
  v13 = sub_2418A8334();
  v14 = sub_2418AA05C();
  v15 = os_log_type_enabled(v13, v14);
  v41 = ObjectType;
  if (v15)
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v44 = v17;
    *(_DWORD *)v16 = 136446466;
    v40 = a1;
    v18 = sub_2418AA5D8();
    v39 = v6;
    v43 = sub_24176024C(v18, v19, &v44);
    a1 = v40;
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2048;
    v43 = a1;
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v13, v14, "[%{public}s] Did tap info button at index: %ld", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v17, -1, -1);
    MEMORY[0x24269D548](v16, -1, -1);

    v20 = *(void (**)(char *, uint64_t))(v39 + 8);
  }
  else
  {

    v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  }
  v20(v12, v5);
  v21 = objc_msgSend(v2, sel_buildFactorContextsAllowingDeselection_, 0);
  v22 = v21;
  if (v21)
  {
    v23 = objc_msgSend(v21, sel_activeFactorContexts);
    sub_241762EFC(0, &qword_257152DB8);
    v24 = sub_2418A9EB8();

    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      v25 = sub_2418AA398();
      swift_bridgeObjectRelease();
    }
    else
    {
      v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v26 = a1 - v25;
    if (__OFSUB__(a1, v25))
    {
      __break(1u);
      goto LABEL_13;
    }
  }
  else
  {
    v26 = a1;
  }
  if ((sub_241839EB0(v26) & 1) != 0 || (sub_24183A1DC(a1, v22) & 1) != 0)
  {

    return;
  }
LABEL_13:
  v27 = sub_241839CB0();
  if (v27 >> 62)
    v28 = sub_2418AA398();
  else
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v2, sel_factorDisplayTypes);
  if (v29)
  {
    v30 = v29;
    sub_241762EFC(0, (unint64_t *)&qword_257152CA0);
    v31 = sub_2418A9EB8();

    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      v32 = sub_2418AA398();
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = -1;
  }
  sub_2418A8328();
  v33 = sub_2418A8334();
  v34 = sub_2418AA05C();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    v44 = v40;
    *(_DWORD *)v35 = 136446978;
    v39 = v32;
    v36 = sub_2418AA5D8();
    v41 = v5;
    v43 = sub_24176024C(v36, v37, &v44);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2048;
    v43 = a1;
    sub_2418AA1F4();
    *(_WORD *)(v35 + 22) = 2048;
    v43 = v28;
    sub_2418AA1F4();
    *(_WORD *)(v35 + 32) = 2048;
    v43 = v39;
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v33, v34, "[%{public}s] Unable to open context information view controller for index %ld.  Standard count: %ld, Health factors %ld", (uint8_t *)v35, 0x2Au);
    v38 = v40;
    swift_arrayDestroy();
    MEMORY[0x24269D548](v38, -1, -1);
    MEMORY[0x24269D548](v35, -1, -1);

    v20(v42, v41);
  }
  else
  {

    v20(v42, v5);
  }
}

uint64_t method lookup function for StateOfMindOverlayRoomViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateOfMindOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:sleepChartFormatter:addDataViewControllerProvider:preferredOverlay:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of StateOfMindOverlayRoomViewController.supportedDisplayTypesForComparisonContexts()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t sub_24183E734()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24183E758()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_24183E78C()
{
  uint64_t v0;

  sub_24183AE80(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

double sub_24183E7B0()
{
  double *v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  double v9;
  double Height;
  double v11;
  double v12;
  double v14;
  double Width;
  double rect;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v1 = v0[4];
  v2 = v0[5];
  v3 = v0[6];
  v4 = v0[7];
  v17.origin.x = v1;
  v17.origin.y = v2;
  v17.size.width = v3;
  v17.size.height = v4;
  Width = CGRectGetWidth(v17);
  v18.origin.x = v1;
  v18.origin.y = v2;
  v18.size.width = v3;
  v18.size.height = v4;
  CGRectGetHeight(v18);
  v5 = *v0;
  v6 = v0[1];
  v7 = v0[2];
  v8 = v0[3];
  v19.origin.x = *v0;
  v19.origin.y = v6;
  v19.size.width = v7;
  v19.size.height = v8;
  v14 = CGRectGetWidth(v19);
  v20.origin.x = v5;
  v20.origin.y = v6;
  v20.size.width = v7;
  v20.size.height = v8;
  CGRectGetHeight(v20);
  rect = v1;
  v21.origin.x = v1;
  v21.origin.y = v2;
  v21.size.width = v3;
  v21.size.height = v4;
  v9 = 1.0;
  if (CGRectGetHeight(v21) != 0.0)
  {
    v22.origin.x = v5;
    v22.origin.y = v6;
    v22.size.width = v7;
    v22.size.height = v8;
    if (CGRectGetWidth(v22) != 0.0)
    {
      v23.origin.x = v5;
      v23.origin.y = v6;
      v23.size.width = v7;
      v23.size.height = v8;
      if (CGRectGetHeight(v23) != 0.0)
      {
        v24.origin.x = rect;
        v24.origin.y = v2;
        v24.size.width = v3;
        v24.size.height = v4;
        Height = CGRectGetHeight(v24);
        v25.origin.x = v5;
        v25.origin.y = v6;
        v25.size.width = v7;
        v25.size.height = v8;
        v11 = CGRectGetWidth(v25);
        v26.origin.x = v5;
        v26.origin.y = v6;
        v26.size.width = v7;
        v26.size.height = v8;
        v12 = CGRectGetHeight(v26);
        if (v12 >= v11)
          v12 = v11;
        v9 = Height * 1.5 / v12;
      }
    }
  }
  return (rect + Width * 0.5 - (v5 + v14 * 0.5)) / v9;
}

id sub_24183E950@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id result;
  void *v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  int v57;
  uint64_t v58;
  float v59;
  uint64_t v60;
  float32x2_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  char *v83;
  uint64_t (**v84)();
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  _QWORD *v91;
  id v92;
  char *v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (**v104)();
  void (*v105)(char *, uint64_t);
  id v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (**v114)();
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  float32x2_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  int v150;

  v2 = v1;
  v134 = a1;
  v133 = sub_2418AA128();
  v130 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133, v3);
  v132 = (char *)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241786A34(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v122 = (uint64_t *)((char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (int *)type metadata accessor for EmotionShape();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418419DC(0);
  v123 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v125 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418419F0(0);
  v124 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v127 = (uint64_t)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241841A58();
  v126 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v131 = (uint64_t)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241841B68();
  v128 = v21;
  MEMORY[0x24BDAC7A8](v21, v22);
  v129 = (uint64_t)&v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v25 = result;
    v26 = objc_msgSend(result, sel_isiPad);

    if (v26)
      v27 = 2;
    else
      v27 = 1;
    v121 = v27;
    v28 = *(_QWORD *)v2;
    v29 = *(_BYTE *)(v2 + 8);
    sub_241841588(*(_QWORD *)v2, v29);
    v30 = sub_241862334(v28, v29);
    sub_2417F446C(v28, v29);
    if (v30 > 2.2)
      v30 = 2.2;
    sub_2418A9F48();
    sub_241841C30(v2);
    v31 = sub_2418A9F3C();
    v32 = swift_allocObject();
    v33 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v32 + 16) = v31;
    *(_QWORD *)(v32 + 24) = v33;
    v34 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v32 + 128) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v32 + 144) = v34;
    *(_QWORD *)(v32 + 160) = *(_QWORD *)(v2 + 128);
    v35 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v32 + 64) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v32 + 80) = v35;
    v36 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v32 + 96) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v32 + 112) = v36;
    v37 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v32 + 32) = *(_OWORD *)v2;
    *(_OWORD *)(v32 + 48) = v37;
    sub_241841C30(v2);
    v38 = sub_2418A9F3C();
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = v38;
    *(_QWORD *)(v39 + 24) = v33;
    v40 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v39 + 128) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v39 + 144) = v40;
    *(_QWORD *)(v39 + 160) = *(_QWORD *)(v2 + 128);
    v41 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v39 + 64) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v39 + 80) = v41;
    v42 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v39 + 96) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v39 + 112) = v42;
    v43 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v39 + 32) = *(_OWORD *)v2;
    *(_OWORD *)(v39 + 48) = v43;
    sub_2418A9834();
    v120 = v148;
    v119 = v149;
    v44 = v150;
    sub_241841C30(v2);
    v45 = sub_2418A9F3C();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v45;
    *(_QWORD *)(v46 + 24) = v33;
    v47 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v46 + 128) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v46 + 144) = v47;
    *(_QWORD *)(v46 + 160) = *(_QWORD *)(v2 + 128);
    v48 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v46 + 64) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v46 + 80) = v48;
    v49 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v46 + 96) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v46 + 112) = v49;
    v50 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v46 + 32) = *(_OWORD *)v2;
    *(_OWORD *)(v46 + 48) = v50;
    sub_241841C30(v2);
    v51 = sub_2418A9F3C();
    v52 = swift_allocObject();
    *(_QWORD *)(v52 + 16) = v51;
    *(_QWORD *)(v52 + 24) = v33;
    v53 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v52 + 128) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v52 + 144) = v53;
    *(_QWORD *)(v52 + 160) = *(_QWORD *)(v2 + 128);
    v54 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v52 + 64) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v52 + 80) = v54;
    v55 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v52 + 96) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v52 + 112) = v55;
    v56 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v52 + 32) = *(_OWORD *)v2;
    *(_OWORD *)(v52 + 48) = v56;
    sub_2418A9834();
    v118 = v145;
    v117 = v146;
    v57 = v147;
    v139 = vcvt_f32_f64(*(float64x2_t *)(v2 + 112));
    sub_241841F20();
    sub_2418A9840();
    v116 = v142;
    v115 = v143;
    v58 = v144;
    v59 = *(double *)(v2 + 128);
    *(float *)&v136 = v59;
    sub_2418A9840();
    v61 = v139;
    v60 = v140;
    v62 = v141;
    v135 = *(_OWORD *)(v2 + 16);
    sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
    sub_2418A96E4();
    v63 = v136;
    v64 = v137;
    v65 = v138;
    KeyPath = swift_getKeyPath();
    v67 = (uint64_t)v122;
    *v122 = KeyPath;
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    v68 = swift_getKeyPath();
    sub_241731B4C(v67, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_241786A34);
    v69 = &v11[v8[5]];
    *(_QWORD *)v69 = v68;
    v69[8] = 0;
    v11[v8[6]] = v121;
    *(double *)&v11[v8[7]] = v30;
    v70 = &v11[v8[8]];
    v71 = v119;
    *(_QWORD *)v70 = v120;
    *((_QWORD *)v70 + 1) = v71;
    *((_DWORD *)v70 + 4) = v44;
    v72 = &v11[v8[9]];
    v73 = v117;
    *(_QWORD *)v72 = v118;
    *((_QWORD *)v72 + 1) = v73;
    *((_DWORD *)v72 + 4) = v57;
    v74 = &v11[v8[10]];
    v75 = v115;
    *(_QWORD *)v74 = v116;
    *((_QWORD *)v74 + 1) = v75;
    *((_QWORD *)v74 + 2) = v58;
    v76 = &v11[v8[11]];
    *(float32x2_t *)v76 = v61;
    *((_QWORD *)v76 + 1) = v60;
    *((_DWORD *)v76 + 4) = v62;
    v77 = &v11[v8[12]];
    *(_QWORD *)v77 = v63;
    *((_QWORD *)v77 + 1) = v64;
    v77[16] = v65;
    v78 = swift_allocObject();
    v79 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v78 + 112) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v78 + 128) = v79;
    *(_QWORD *)(v78 + 144) = *(_QWORD *)(v2 + 128);
    v80 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v78 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v78 + 64) = v80;
    v81 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v78 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v78 + 96) = v81;
    v82 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v78 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v78 + 32) = v82;
    v83 = v125;
    sub_2417289A8((uint64_t)v11, (uint64_t)v125, (uint64_t (*)(_QWORD))type metadata accessor for EmotionShape);
    v84 = (uint64_t (**)())&v83[*(int *)(v123 + 36)];
    *v84 = sub_241841FB0;
    v84[1] = (uint64_t (*)())v78;
    v84[2] = 0;
    v84[3] = 0;
    sub_241841C30(v2);
    sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EmotionShape);
    v85 = swift_allocObject();
    v86 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v85 + 112) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v85 + 128) = v86;
    *(_QWORD *)(v85 + 144) = *(_QWORD *)(v2 + 128);
    v87 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v85 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v85 + 64) = v87;
    v88 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v85 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v85 + 96) = v88;
    v89 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v85 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v85 + 32) = v89;
    v90 = v127;
    sub_2417289A8((uint64_t)v83, v127, (uint64_t (*)(_QWORD))sub_2418419DC);
    v91 = (_QWORD *)(v90 + *(int *)(v124 + 36));
    *v91 = 0;
    v91[1] = 0;
    v91[2] = sub_241841FBC;
    v91[3] = v85;
    sub_241841C30(v2);
    sub_24172588C((uint64_t)v83, (uint64_t (*)(_QWORD))sub_2418419DC);
    v125 = (char *)objc_opt_self();
    v92 = objc_msgSend(v125, sel_defaultCenter);
    v93 = v132;
    sub_2418AA134();

    v94 = swift_allocObject();
    v95 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v94 + 112) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v94 + 128) = v95;
    *(_QWORD *)(v94 + 144) = *(_QWORD *)(v2 + 128);
    v96 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v94 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v94 + 64) = v96;
    v97 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v94 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v94 + 96) = v97;
    v98 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v94 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v94 + 32) = v98;
    v99 = v131;
    sub_2417289A8(v90, v131, (uint64_t (*)(_QWORD))sub_2418419F0);
    v100 = v126;
    v101 = v99 + *(int *)(v126 + 52);
    v102 = v130;
    v124 = *(_QWORD *)(v130 + 16);
    v103 = v133;
    ((void (*)(uint64_t, char *, uint64_t))v124)(v101, v93, v133);
    v104 = (uint64_t (**)())(v99 + *(int *)(v100 + 56));
    *v104 = sub_241841FC8;
    v104[1] = (uint64_t (*)())v94;
    sub_241841C30(v2);
    v105 = *(void (**)(char *, uint64_t))(v102 + 8);
    v105(v93, v103);
    sub_24172588C(v90, (uint64_t (*)(_QWORD))sub_2418419F0);
    v106 = objc_msgSend(v125, sel_defaultCenter);
    sub_2418AA134();

    v107 = swift_allocObject();
    v108 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v107 + 112) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v107 + 128) = v108;
    *(_QWORD *)(v107 + 144) = *(_QWORD *)(v2 + 128);
    v109 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v107 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v107 + 64) = v109;
    v110 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v107 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v107 + 96) = v110;
    v111 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v107 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v107 + 32) = v111;
    v112 = v129;
    sub_2417289A8(v99, v129, (uint64_t (*)(_QWORD))sub_241841A58);
    v113 = v128;
    ((void (*)(uint64_t, char *, uint64_t))v124)(v112 + *(int *)(v128 + 52), v93, v103);
    v114 = (uint64_t (**)())(v112 + *(int *)(v113 + 56));
    *v114 = sub_241842034;
    v114[1] = (uint64_t (*)())v107;
    sub_241841C30(v2);
    v105(v93, v103);
    sub_24172588C(v99, (uint64_t (*)(_QWORD))sub_241841A58);
    return (id)sub_241731B4C(v112, v134, (uint64_t (*)(_QWORD))sub_241841B68);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24183F308()
{
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96D8();
  return sub_24183F374();
}

uint64_t sub_24183F374()
{
  char v1;

  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  if (v1 == 1)
    sub_2418A96CC();
  return sub_2418A96D8();
}

uint64_t sub_24183F42C()
{
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96D8();
  return sub_24183F374();
}

uint64_t sub_24183F494()
{
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96D8();
  return sub_24183F374();
}

uint64_t sub_24183F500()
{
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96D8();
  return sub_24183F374();
}

id sub_24183F568@<X0>(uint64_t a1@<X8>)
{
  return sub_24183E950(a1);
}

double sub_24183F5B8@<D0>(double *a1@<X8>)
{
  return sub_241840720(a1);
}

uint64_t sub_24183F5CC()
{
  return sub_24179763C();
}

double sub_24183F5E0()
{
  return sub_24183FB0C();
}

uint64_t sub_24183F5FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2418A8424();
}

void (*sub_24183F670(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_2418A840C();
  return sub_24175E0A8;
}

uint64_t sub_24183F6E8()
{
  swift_beginAccess();
  sub_24172887C(0, &qword_25714E938, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A83F4();
  return swift_endAccess();
}

uint64_t sub_24183F760(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v2 = MEMORY[0x24BEE13C8];
  sub_24172887C(0, &qword_25714E940, MEMORY[0x24BEE13C8], MEMORY[0x24BDB9ED8]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v7 = MEMORY[0x24BDAC7A8](v3, v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v15 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13((char *)&v15 - v11, a1, v4);
  v13(v9, (uint64_t)v12, v4);
  swift_beginAccess();
  sub_24172887C(0, &qword_25714E938, v2, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A8400();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v12, v4);
}

uint64_t sub_24183F89C()
{
  swift_beginAccess();
  sub_24172887C(0, &qword_25714E938, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A83F4();
  return swift_endAccess();
}

uint64_t sub_24183F910(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = MEMORY[0x24BEE13C8];
  sub_24172887C(0, &qword_25714E940, MEMORY[0x24BEE13C8], MEMORY[0x24BDB9ED8]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v9 - v7, a1, v4);
  swift_beginAccess();
  sub_24172887C(0, &qword_25714E938, v2, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A8400();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void (*sub_24183FA08(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = MEMORY[0x24BEE13C8];
  sub_24172887C(0, &qword_25714E940, MEMORY[0x24BEE13C8], MEMORY[0x24BDB9ED8]);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  v8 = malloc(v7);
  v9 = OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__valence;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_24172887C(0, &qword_25714E938, v4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v3[16] = v10;
  sub_2418A83F4();
  swift_endAccess();
  return sub_24175E504;
}

double sub_24183FAF8()
{
  return sub_24183FB0C();
}

double sub_24183FB0C()
{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  return v1;
}

uint64_t StateOfMindVisualization.VisualizationPPTModel.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_2418A83E8();
  sub_2418A83E8();
  return v0;
}

uint64_t StateOfMindVisualization.VisualizationPPTModel.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(uint64_t, char *, uint64_t);
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  sub_24172887C(0, &qword_25714E938, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v4);
  v6 = (char *)&v11 - v5;
  v7 = v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__valence;
  v12 = 0;
  sub_2418A83E8();
  v8 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
  v8(v7, v6, v2);
  v9 = v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__effectiveValence;
  v12 = 0;
  sub_2418A83E8();
  v8(v9, v6, v2);
  return v0;
}

uint64_t sub_24183FCD4(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  sub_241840CB4(-1.0, 1.0, 0.002);
  sub_24183FD28(v5, a1, a2, v2);
  return swift_release();
}

uint64_t sub_24183FD28(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  _QWORD aBlock[6];

  v41 = a2;
  v42 = a3;
  v6 = sub_2418A9A44();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2418A9A68();
  v40 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2418A9A80();
  v16 = *(_QWORD *)(v15 - 8);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v18, v21);
  v25 = (char *)&v35 - v24;
  if (!*(_QWORD *)(a1 + 16))
    return v41(v22);
  v26 = *(_QWORD *)(a1 + 32);
  v37 = v6;
  v27 = v23;
  swift_getKeyPath();
  v38 = v7;
  swift_getKeyPath();
  v39 = v11;
  aBlock[0] = v26;
  swift_retain();
  sub_2418A8424();
  sub_24175D33C();
  v35 = sub_2418AA0D4();
  sub_2418A9A74();
  MEMORY[0x24269C2A0](v20, 0.01);
  v36 = *(void (**)(char *, uint64_t))(v16 + 8);
  v28 = v27;
  v36(v20, v27);
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = a4;
  v29[3] = a1;
  v30 = v42;
  v29[4] = v41;
  v29[5] = v30;
  aBlock[4] = sub_241842070;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2417599E8;
  aBlock[3] = &block_descriptor_12;
  v31 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  sub_2418A9A5C();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_24172159C((unint64_t *)&unk_25714F340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_2417F496C(0);
  sub_24172159C((unint64_t *)&qword_25714F350, (uint64_t (*)(uint64_t))sub_2417F496C, MEMORY[0x24BEE12C8]);
  v32 = v37;
  sub_2418AA248();
  v33 = (void *)v35;
  MEMORY[0x24269C8C4](v25, v14, v10, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v32);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v39);
  return ((uint64_t (*)(char *, uint64_t))v36)(v25, v28);
}

uint64_t sub_241840054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *(_QWORD *)(a2 + 16);
  sub_2418AA4F4();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  swift_release();
  if (v10 == v8 - (v8 != 0))
  {
    v11 = swift_dynamicCastClass();
    if (!v11)
    {
      swift_bridgeObjectRelease();
      v11 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = sub_241760F38(a2, a2 + 32, v8 != 0, (2 * v8) | 1);
  }
  swift_bridgeObjectRelease();
  sub_24183FD28(v11, a3, a4, a1);
  return swift_release();
}

uint64_t sub_241840160()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  sub_2418AA590();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  return sub_2418AA590();
}

uint64_t StateOfMindVisualization.VisualizationPPTModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__valence;
  sub_24172887C(0, &qword_25714E938, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v3 = v2;
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v4(v1, v2);
  v4(v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__effectiveValence, v3);
  return v0;
}

uint64_t StateOfMindVisualization.VisualizationPPTModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__valence;
  sub_24172887C(0, &qword_25714E938, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v3 = v2;
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v4(v1, v2);
  v4(v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__effectiveValence, v3);
  return swift_deallocClassInstance();
}

uint64_t sub_24184033C()
{
  sub_2418AA56C();
  sub_241840160();
  return sub_2418AA59C();
}

uint64_t sub_241840378()
{
  sub_2418AA56C();
  sub_241840160();
  return sub_2418AA59C();
}

uint64_t sub_2418403B8()
{
  return sub_241840160();
}

uint64_t sub_2418403D8()
{
  sub_2418AA56C();
  sub_241840160();
  return sub_2418AA59C();
}

uint64_t sub_241840414@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for StateOfMindVisualization.VisualizationPPTModel();
  result = sub_2418A83B8();
  *a1 = result;
  return result;
}

uint64_t sub_241840450()
{
  return _s14MentalHealthUI24StateOfMindVisualizationV0G8PPTModelC2eeoiySbAE_AEtFZ_0();
}

uint64_t StateOfMindVisualization.VisualizationPPTView.model.getter()
{
  return swift_retain();
}

uint64_t StateOfMindVisualization.VisualizationPPTView.model.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*StateOfMindVisualization.VisualizationPPTView.model.modify())()
{
  return nullsub_1;
}

uint64_t StateOfMindVisualization.VisualizationPPTView.$model.getter()
{
  type metadata accessor for StateOfMindVisualization.VisualizationPPTModel();
  sub_24172159C(&qword_257152E10, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindVisualization.VisualizationPPTModel, (uint64_t)&protocol conformance descriptor for StateOfMindVisualization.VisualizationPPTModel);
  return sub_2418A876C();
}

uint64_t StateOfMindVisualization.VisualizationPPTView.init(model:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for StateOfMindVisualization.VisualizationPPTModel();
  sub_24172159C(&qword_257152E10, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindVisualization.VisualizationPPTModel, (uint64_t)&protocol conformance descriptor for StateOfMindVisualization.VisualizationPPTModel);
  result = sub_2418A8760();
  *a1 = result;
  a1[1] = v3;
  return result;
}

__n128 StateOfMindVisualization.VisualizationPPTView.body.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath;
  uint64_t v3;
  char v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  _OWORD v16[8];
  uint64_t v17;

  type metadata accessor for StateOfMindVisualization.VisualizationPPTModel();
  sub_24172159C(&qword_257152E10, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindVisualization.VisualizationPPTModel, (uint64_t)&protocol conformance descriptor for StateOfMindVisualization.VisualizationPPTModel);
  swift_retain();
  sub_2418A876C();
  swift_release();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();
  swift_release();
  swift_retain();
  sub_2418A876C();
  swift_release();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();
  swift_release();
  KeyPath = swift_getKeyPath();
  sub_2418411AC(KeyPath, 0, v13, v14, v10, (uint64_t)v16, v15, v12, 0.0, 0.0, 1.0, v11);
  v3 = sub_2418A882C();
  v4 = sub_2418A90D8();
  v5 = v16[7];
  *(_OWORD *)(a1 + 96) = v16[6];
  *(_OWORD *)(a1 + 112) = v5;
  v6 = v17;
  v7 = v16[3];
  *(_OWORD *)(a1 + 32) = v16[2];
  *(_OWORD *)(a1 + 48) = v7;
  v8 = v16[5];
  *(_OWORD *)(a1 + 64) = v16[4];
  *(_OWORD *)(a1 + 80) = v8;
  result = (__n128)v16[1];
  *(_OWORD *)a1 = v16[0];
  *(__n128 *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 128) = v6;
  *(_QWORD *)(a1 + 136) = v3;
  *(_BYTE *)(a1 + 144) = v4;
  return result;
}

double sub_241840720@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_24184079C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2418A8970();
  *a1 = v3;
  return result;
}

uint64_t sub_2418407C4()
{
  return sub_2418A897C();
}

size_t sub_2418407E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t result;
  unint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;

  sub_2417B5224();
  v3 = v2;
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v52 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v48 = (char *)v47 - v9;
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v47 - v11;
  v54 = v13;
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v51 = v15;
  v47[1] = a1;
  if (v15)
  {
    v49 = (v14 + 32) & ~v14;
    v17 = MEMORY[0x24BEE4AF8] + v49;
    v18 = 0;
    v19 = 0;
    v20 = *(_QWORD *)(_s5EntryVMa() - 8);
    v21 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v50 = *(_QWORD *)(v20 + 72);
    v47[2] = v14 | 7;
    v22 = v16;
    v23 = v48;
    v53 = v12;
    while (1)
    {
      v25 = (uint64_t)&v52[*(int *)(v3 + 48)];
      sub_2417289A8(v21, v25, (uint64_t (*)(_QWORD))_s5EntryVMa);
      v26 = (uint64_t)v23 + *(int *)(v3 + 48);
      *v23 = v18;
      v27 = v25;
      v28 = (uint64_t)v53;
      sub_241731B4C(v27, v26, (uint64_t (*)(_QWORD))_s5EntryVMa);
      result = sub_241731B4C((uint64_t)v23, v28, (uint64_t (*)(_QWORD))sub_2417B5224);
      if (v19)
      {
        v16 = v22;
        v24 = __OFSUB__(v19--, 1);
        if (v24)
          goto LABEL_27;
      }
      else
      {
        v30 = v22[3];
        if ((uint64_t)((v30 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        v31 = v3;
        v32 = v30 & 0xFFFFFFFFFFFFFFFELL;
        if (v32 <= 1)
          v33 = 1;
        else
          v33 = v32;
        sub_24172570C(0, &qword_257152FA0, (uint64_t (*)(uint64_t))sub_2417B5224, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v34 = *(_QWORD *)(v54 + 72);
        v35 = v49;
        v16 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v16);
        if (!v34)
          goto LABEL_34;
        v36 = result - v35;
        if (result - v35 == 0x8000000000000000 && v34 == -1)
          goto LABEL_35;
        v38 = v36 / v34;
        v16[2] = v33;
        v16[3] = 2 * (v36 / v34);
        v39 = (char *)v16 + v35;
        v40 = v22[3] >> 1;
        v41 = v40 * v34;
        v3 = v31;
        if (v22[2])
        {
          if (v16 < v22 || v39 >= (char *)v22 + v49 + v41)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v16 != v22)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v22[2] = 0;
        }
        v17 = (uint64_t)&v39[v41];
        v43 = (v38 & 0x7FFFFFFFFFFFFFFFLL) - v40;
        swift_release();
        v23 = v48;
        v28 = (uint64_t)v53;
        v24 = __OFSUB__(v43, 1);
        v19 = v43 - 1;
        if (v24)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v18;
      sub_241731B4C(v28, v17, (uint64_t (*)(_QWORD))sub_2417B5224);
      v17 += *(_QWORD *)(v54 + 72);
      v21 += v50;
      v22 = v16;
      if (v51 == v18)
        goto LABEL_29;
    }
  }
  v19 = 0;
LABEL_29:
  result = swift_bridgeObjectRelease();
  v44 = v16[3];
  if (v44 >= 2)
  {
    v45 = v44 >> 1;
    v24 = __OFSUB__(v45, v19);
    v46 = v45 - v19;
    if (v24)
      goto LABEL_36;
    v16[2] = v46;
  }
  return (size_t)v16;
}

uint64_t sub_241840B0C(uint64_t result)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(result + 16);
  v2 = (char *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v3 = result;
    result = swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v6 = v2 + 32;
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    while (1)
    {
      v8 = *(_QWORD *)(v3 + 8 * v5 + 32);
      if (v4)
      {
        result = swift_bridgeObjectRetain();
        v9 = __OFSUB__(v4--, 1);
        if (v9)
          goto LABEL_27;
      }
      else
      {
        v10 = *((_QWORD *)v2 + 3);
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        sub_24172570C(0, &qword_257152FA8, (uint64_t (*)(uint64_t))sub_241806394, v7);
        v13 = (char *)swift_allocObject();
        v14 = _swift_stdlib_malloc_size(v13);
        v15 = v14 - 32;
        if (v14 < 32)
          v15 = v14 - 17;
        v16 = v15 >> 4;
        *((_QWORD *)v13 + 2) = v12;
        *((_QWORD *)v13 + 3) = 2 * (v15 >> 4);
        v17 = v13 + 32;
        v18 = *((_QWORD *)v2 + 3) >> 1;
        v6 = &v13[16 * v18 + 32];
        v19 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v18;
        if (*((_QWORD *)v2 + 2))
        {
          v20 = v2 + 32;
          if (v13 != v2 || v17 >= &v20[16 * v18])
            memmove(v17, v20, 16 * v18);
          swift_bridgeObjectRetain();
          *((_QWORD *)v2 + 2) = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        result = swift_release();
        v2 = v13;
        v9 = __OFSUB__(v19, 1);
        v4 = v19 - 1;
        if (v9)
        {
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
      }
      *(_QWORD *)v6 = v5;
      *((_QWORD *)v6 + 1) = v8;
      v6 += 16;
      if (v1 == ++v5)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
  }
  v4 = 0;
LABEL_23:
  v21 = *((_QWORD *)v2 + 3);
  if (v21 >= 2)
  {
    v22 = v21 >> 1;
    v9 = __OFSUB__(v22, v4);
    v23 = v22 - v4;
    if (v9)
      goto LABEL_29;
    *((_QWORD *)v2 + 2) = v23;
  }
  return (uint64_t)v2;
}

void sub_241840CB4(double a1, double a2, double a3)
{
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  BOOL v10;
  double *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  BOOL v19;
  double v20;
  BOOL v21;
  uint64_t (*v22)(void);
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  double *v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  const void *v32;
  BOOL v33;
  BOOL v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;

  v6 = a1 <= a2;
  if (a3 > 0.0)
    v6 = a1 >= a2;
  if (!v6)
  {
    v7 = -1;
    do
    {
      v8 = ++v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_46;
      }
      v9 = a1 + (double)v8 * a3;
      v10 = v9 <= a2;
      if (a3 > 0.0)
        v10 = v9 >= a2;
    }
    while (!v10);
    if (v8 <= 0)
      goto LABEL_18;
    sub_24172887C(0, &qword_25714D508, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v11 = (double *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v14 = v13 >> 3;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v14;
    v15 = v11 + 4;
    v16 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v8;
    v17 = -1;
    v18 = a1;
    while (1)
    {
      v19 = v18 <= a2;
      if (a3 > 0.0)
        v19 = v18 >= a2;
      if (v19)
        goto LABEL_48;
      v20 = a1 + (double)(v17 + 2) * a3;
      *v15++ = v18;
      ++v17;
      v18 = v20;
      if (v7 == v17)
        goto LABEL_19;
    }
  }
LABEL_18:
  v8 = 0;
  v11 = (double *)MEMORY[0x24BEE4AF8];
  v15 = (double *)(MEMORY[0x24BEE4AF8] + 32);
  v16 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
  v20 = a1;
LABEL_19:
  v21 = v20 <= a2;
  if (a3 > 0.0)
    v21 = v20 >= a2;
  if (!v21)
  {
    v22 = MEMORY[0x24BEE3598];
    while (!__OFADD__(v8, 1))
    {
      if (!v16)
      {
        v23 = *((_QWORD *)v11 + 3);
        if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_49;
        v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
        if (v24 <= 1)
          v25 = 1;
        else
          v25 = v24;
        sub_24172887C(0, &qword_25714D508, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))v22);
        v26 = (double *)swift_allocObject();
        v27 = _swift_stdlib_malloc_size(v26);
        v28 = v27 - 32;
        if (v27 < 32)
          v28 = v27 - 25;
        v29 = v28 >> 3;
        *((_QWORD *)v26 + 2) = v25;
        *((_QWORD *)v26 + 3) = 2 * (v28 >> 3);
        v30 = (unint64_t)(v26 + 4);
        v31 = *((_QWORD *)v11 + 3) >> 1;
        if (*((_QWORD *)v11 + 2))
        {
          v32 = v11 + 4;
          if (v26 != v11 || v30 >= (unint64_t)v32 + 8 * v31)
            memmove(v26 + 4, v32, 8 * v31);
          v11[2] = 0.0;
        }
        v15 = (double *)(v30 + 8 * v31);
        v16 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
        swift_release();
        v11 = v26;
      }
      v33 = __OFSUB__(v16--, 1);
      if (v33)
        goto LABEL_47;
      *v15++ = v20;
      v20 = a1 + (double)(v8 + 1) * a3;
      v34 = v20 <= a2;
      if (a3 > 0.0)
        v34 = v20 >= a2;
      ++v8;
      if (v34)
        goto LABEL_41;
    }
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
LABEL_41:
  v35 = *((_QWORD *)v11 + 3);
  if (v35 >= 2)
  {
    v36 = v35 >> 1;
    v33 = __OFSUB__(v36, v16);
    v37 = v36 - v16;
    if (v33)
    {
LABEL_50:
      __break(1u);
      return;
    }
    *((_QWORD *)v11 + 2) = v37;
  }
}

uint64_t _s14MentalHealthUI24StateOfMindVisualizationV0G8PPTModelC2eeoiySbAE_AEtFZ_0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  return 1;
}

double sub_2418410DC@<D0>(double *a1@<X8>)
{
  return sub_241840720(a1);
}

uint64_t sub_241841100()
{
  return sub_24179763C();
}

uint64_t type metadata accessor for StateOfMindVisualization.VisualizationPPTModel()
{
  uint64_t result;

  result = qword_257152E48;
  if (!qword_257152E48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241841160@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2418A8970();
  *a1 = v3;
  return result;
}

uint64_t sub_241841188()
{
  return sub_2418A897C();
}

uint64_t sub_2418411AC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, uint64_t a12)
{
  uint64_t result;
  char v24;
  uint64_t v25;

  sub_2418A96C0();
  sub_2418A96C0();
  result = sub_2418A96C0();
  *(_QWORD *)a6 = a1;
  *(_BYTE *)(a6 + 8) = a2 & 1;
  *(_BYTE *)(a6 + 16) = v24;
  *(_QWORD *)(a6 + 24) = v25;
  *(_BYTE *)(a6 + 32) = v24;
  *(_QWORD *)(a6 + 40) = v25;
  *(_BYTE *)(a6 + 48) = v24;
  *(_QWORD *)(a6 + 56) = v25;
  *(_QWORD *)(a6 + 64) = a3;
  *(_QWORD *)(a6 + 72) = a4;
  *(double *)(a6 + 80) = a7;
  *(_QWORD *)(a6 + 88) = a5;
  *(_QWORD *)(a6 + 96) = a12;
  *(double *)(a6 + 104) = a8;
  *(double *)(a6 + 112) = a9;
  *(double *)(a6 + 120) = a10;
  *(double *)(a6 + 128) = a11;
  return result;
}

uint64_t sub_2418412DC()
{
  return sub_24172159C(&qword_257152E18, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindVisualization.VisualizationPPTModel, (uint64_t)&protocol conformance descriptor for StateOfMindVisualization.VisualizationPPTModel);
}

uint64_t sub_241841308()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241841320@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_24184132C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_24184136C()
{
  return type metadata accessor for StateOfMindVisualization.VisualizationPPTModel();
}

void sub_241841374()
{
  unint64_t v0;

  sub_24172887C(319, &qword_25714E938, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for StateOfMindVisualization.VisualizationPPTModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.valence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.valence.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.valence.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.$valence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.$valence.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.$valence.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.simulateInteraction(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

_QWORD *_s20VisualizationPPTViewVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *_s20VisualizationPPTViewVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.VisualizationPPTView()
{
  return &type metadata for StateOfMindVisualization.VisualizationPPTView;
}

uint64_t sub_2418414F8()
{
  return sub_241721DF8(&qword_257152F50, (uint64_t (*)(uint64_t))sub_24184152C, (uint64_t (*)(void))sub_2417F4518, MEMORY[0x24BDF1050]);
}

void sub_24184152C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257152F58)
  {
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257152F58);
  }
}

uint64_t sub_241841588(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t _s4LiveVwxx(uint64_t a1)
{
  sub_2417F446C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s4LiveVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_241841588(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s4LiveVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_241841588(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2417F446C(v6, v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t _s4LiveVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2417F446C(v6, v7);
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_release();
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_release();
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
  swift_release();
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_release();
  *(_QWORD *)(a1 + 80) = a2[10];
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
  return a1;
}

uint64_t _s4LiveVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s4LiveVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s4LiveVMa()
{
  return &_s4LiveVN;
}

uint64_t sub_2418419CC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2418419DC(uint64_t a1)
{
  sub_241841A04(a1, &qword_257152F60, (void (*)(uint64_t))type metadata accessor for EmotionShape);
}

void sub_2418419F0(uint64_t a1)
{
  sub_241841A04(a1, &qword_257152F68, sub_2418419DC);
}

void sub_241841A04(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_241841A58()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_257152F70)
  {
    sub_2418AA128();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078];
    sub_2418419F0(255);
    sub_24172159C(&qword_257151518, v0, MEMORY[0x24BDD0070]);
    sub_241721DF8(&qword_257152F78, (uint64_t (*)(uint64_t))sub_2418419F0, sub_241841B28, MEMORY[0x24BDF0910]);
    v1 = sub_2418A88C8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_257152F70);
  }
}

uint64_t sub_241841B28()
{
  return sub_241721DF8(&qword_257152F80, (uint64_t (*)(uint64_t))sub_2418419DC, sub_241841B4C, MEMORY[0x24BDF0910]);
}

uint64_t sub_241841B4C()
{
  return sub_24172159C(&qword_257154FE0, (uint64_t (*)(uint64_t))type metadata accessor for EmotionShape, (uint64_t)&unk_2418DB5C8);
}

void sub_241841B68()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_257152F88)
  {
    sub_2418AA128();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078];
    sub_241841A58();
    sub_24172159C(&qword_257151518, v0, MEMORY[0x24BDD0070]);
    sub_24172159C(&qword_257152F90, (uint64_t (*)(uint64_t))sub_241841A58, MEMORY[0x24BDEDA68]);
    v1 = sub_2418A88C8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_257152F88);
  }
}

uint64_t sub_241841C30(uint64_t a1)
{
  sub_241841588(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

float sub_241841CC4@<S0>(float *a1@<X8>)
{
  float result;
  double v3;

  sub_24172887C(0, (unint64_t *)&qword_25714E408, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](&v3);
  result = (v3 + 1.0) * 0.5;
  *a1 = result;
  return result;
}

uint64_t sub_241841D44()
{
  sub_24172887C(0, (unint64_t *)&qword_25714E408, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  return sub_2418A9810();
}

float sub_241841DC0@<S0>(float *a1@<X8>)
{
  float result;
  double v3;

  sub_24172887C(0, (unint64_t *)&qword_25714E408, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](&v3);
  result = (v3 + 1.0) * 0.5;
  *a1 = result;
  return result;
}

uint64_t objectdestroyTm_22()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_2417F446C(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241841EA8()
{
  sub_24172887C(0, (unint64_t *)&qword_25714E408, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  return sub_2418A9810();
}

void sub_241841F20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257155020)
  {
    sub_241804210();
    v0 = sub_2418AA548();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257155020);
  }
}

uint64_t sub_241841F80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A8A54();
  *a1 = result & 1;
  return result;
}

uint64_t sub_241841FB0()
{
  return sub_24183F308();
}

uint64_t sub_241841FBC()
{
  return sub_24183F42C();
}

uint64_t sub_241841FC8()
{
  return sub_24183F494();
}

uint64_t objectdestroy_35Tm()
{
  uint64_t v0;

  sub_2417F446C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241842034()
{
  return sub_24183F500();
}

uint64_t sub_24184203C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241842070()
{
  uint64_t *v0;

  return sub_241840054(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_241842094()
{
  return sub_24172159C(&qword_257152F98, (uint64_t (*)(uint64_t))sub_241841B68, MEMORY[0x24BDEDA68]);
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *_s9PlacementVMa()
{
  return &_s9PlacementVN;
}

_QWORD *sub_2418420E4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v8 = *(int *)(a3 + 44);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = *(int *)(a3 + 48);
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_241842320(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1 + *(int *)(a2 + 44);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = a1 + *(int *)(a2 + 48);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v10 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t sub_241842468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(int *)(a3 + 44);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v17 = *(int *)(a3 + 48);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_241842670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 44);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_24172B778(a1 + v6, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A8EB0();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v12 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v16 = *(int *)(a3 + 48);
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778(a1 + v16, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
    }
    else
    {
      *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2418428D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(int *)(a3 + 44);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A8EB0();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
    v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v19 = *(int *)(a3 + 48);
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_241842AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 44);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    sub_24172B778(a1 + v7, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v19 = *(int *)(a3 + 48);
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778(a1 + v19, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v24 = v23;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v20, v21, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241842D28()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241842D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 44);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v12 = v14;
      v11 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_241842E04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241842E10(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 48) = a2 + 1;
  }
  else
  {
    sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 44);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ConfirmationView()
{
  uint64_t result;

  result = qword_257153008;
  if (!qword_257153008)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241842F14()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_241842FEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241842FFC@<X0>(double *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_241844208();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241843108();
  *v7 = sub_2418A9960();
  v7[1] = v8;
  sub_241844664();
  sub_241843218(a1, (uint64_t)v7 + *(int *)(v9 + 44));
  v10 = sub_2418A9960();
  sub_24185F0CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a2, 0.0, 1, INFINITY, 0, v10, v11);
  return sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))sub_241844208);
}

id sub_241843108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id result;
  void *v5;
  uint64_t v6;

  v0 = type metadata accessor for ValenceSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v5 = result;
    objc_msgSend(result, sel_isiPad);

    sub_2418A8670();
    type metadata accessor for ConfirmationView();
    sub_241861CB8((uint64_t)v3);
    return (id)sub_24172588C((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241843218@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  unsigned int *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t KeyPath;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  uint64_t v88;
  unsigned int *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  _DWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v108[3];
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  char v164;

  v137 = a2;
  v136 = sub_2418A99B4();
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136, v3);
  v134 = (char *)v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_2418A84E4();
  v130 = *(_QWORD *)(v133 - 8);
  v6 = MEMORY[0x24BDAC7A8](v133, v5);
  v129 = (char *)v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v127 = (uint64_t)v108 - v9;
  sub_24172835C(0, &qword_2571530D0, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEF770]);
  v131 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v128 = (char *)v108 - v12;
  v116 = sub_2418A91E0();
  v114 = *(_QWORD *)(v116 - 8);
  v14 = MEMORY[0x24BDAC7A8](v116, v13);
  v113 = (char *)v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v112 = (char *)v108 - v17;
  v110 = type metadata accessor for ValenceSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v110, v18);
  v109 = (uint64_t)v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418444A8();
  v118 = v20;
  v117 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v21);
  v108[0] = (char *)v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24184448C(0);
  v115 = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v111 = (char *)v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241844470(0);
  v120 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v119 = (char *)v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418443F4();
  v124 = v29;
  MEMORY[0x24BDAC7A8](v29, v30);
  v122 = (uint64_t)v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418443D8(0);
  v123 = v32;
  MEMORY[0x24BDAC7A8](v32, v33);
  v121 = (uint64_t)v108 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418443BC(0);
  v37 = MEMORY[0x24BDAC7A8](v35, v36);
  v132 = (uint64_t)v108 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v125 = (char *)v108 - v41;
  MEMORY[0x24BDAC7A8](v40, v42);
  v126 = (uint64_t)v108 - v43;
  sub_2418442EC(0);
  v46 = MEMORY[0x24BDAC7A8](v44, v45);
  v138 = (uint64_t)v108 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46, v48);
  v139 = (uint64_t)v108 - v49;
  v50 = *a1;
  LOBYTE(v157) = 1;
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)((unsigned __int8 *)&v157, v50);
  v51 = v141;
  v52 = v142;
  v53 = v143;
  sub_2418A9960();
  sub_2418A861C();
  v54 = v157;
  v55 = v158;
  v56 = v159;
  v57 = v160;
  v59 = v161;
  v58 = v162;
  v61 = *((_QWORD *)a1 + 1);
  v60 = *((_QWORD *)a1 + 2);
  sub_2418A9A14();
  v62 = *((_QWORD *)a1 + 3);
  v164 = v55;
  v163 = v57;
  v141 = v51;
  v142 = v52;
  v143 = v53;
  v144 = v54;
  v145 = v55;
  v146 = v56;
  v147 = v57;
  v148 = v59;
  v149 = v58;
  v150 = v60;
  v151 = v61;
  v152 = v61;
  v153 = v63;
  v154 = v64;
  v155 = v62;
  v156 = 0;
  v140 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC8E0);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v108[2] = v65;
  v108[1] = sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241844308(0);
  sub_241721DF8(&qword_2571530F0, (uint64_t (*)(uint64_t))sub_241844308, sub_2418446E0, MEMORY[0x24BDEB920]);
  v66 = v138;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241731B4C(v66, v139, (uint64_t (*)(_QWORD))sub_2418442EC);
  v67 = v108[0];
  sub_2418A96A8();
  type metadata accessor for ConfirmationView();
  v68 = v109;
  sub_241861CB8(v109);
  sub_2418A9168();
  v69 = sub_2418A879C();
  v70 = (unsigned int *)MEMORY[0x24BDF17C8];
  v71 = v114;
  if ((v69 & 1) == 0)
    v70 = (unsigned int *)MEMORY[0x24BDF17D0];
  v72 = v113;
  v73 = v116;
  (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v113, *v70, v116);
  v74 = v112;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v112, v72, v73);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v74, v73);
  sub_24172588C(v68, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  v75 = sub_2418A9150();
  swift_release();
  KeyPath = swift_getKeyPath();
  v77 = v117;
  v78 = (uint64_t)v111;
  v79 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v111, v67, v118);
  v80 = (uint64_t *)(v78 + *(int *)(v115 + 36));
  *v80 = KeyPath;
  v80[1] = v75;
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v67, v79);
  v81 = sub_2418A8E74();
  v82 = v127;
  sub_241861034(v127);
  v83 = v130;
  v84 = v129;
  v85 = v133;
  (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v129, *MEMORY[0x24BDEB3F0], v133);
  LOBYTE(KeyPath) = sub_2418A84D8();
  v86 = *(void (**)(char *, uint64_t))(v83 + 8);
  v87 = v84;
  v88 = v85;
  v86(v87, v85);
  v89 = (unsigned int *)MEMORY[0x24BDF5098];
  if ((KeyPath & 1) == 0)
    v89 = (unsigned int *)MEMORY[0x24BDF5080];
  v90 = v135;
  v91 = v134;
  v92 = v136;
  (*(void (**)(char *, _QWORD, uint64_t))(v135 + 104))(v134, *v89, v136);
  v93 = v128;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(&v128[*(int *)(v131 + 36)], v91, v92);
  *v93 = v81;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v92);
  v86((char *)v82, v88);
  v94 = (uint64_t)v119;
  sub_241844730((uint64_t)v93, (uint64_t)&v119[*(int *)(v120 + 36)]);
  sub_2417289A8(v78, v94, (uint64_t (*)(_QWORD))sub_24184448C);
  sub_241844794((uint64_t)v93);
  sub_24172588C(v78, (uint64_t (*)(_QWORD))sub_24184448C);
  v95 = swift_getKeyPath();
  v96 = v122;
  sub_2417289A8(v94, v122, (uint64_t (*)(_QWORD))sub_241844470);
  v97 = v96 + *(int *)(v124 + 36);
  *(_QWORD *)v97 = v95;
  *(_BYTE *)(v97 + 8) = 1;
  sub_24172588C(v94, (uint64_t (*)(_QWORD))sub_241844470);
  v98 = *((_QWORD *)a1 + 5);
  v99 = v121;
  sub_2417289A8(v96, v121, (uint64_t (*)(_QWORD))sub_2418443F4);
  *(_QWORD *)(v99 + *(int *)(v123 + 36)) = v98;
  sub_24172588C(v96, (uint64_t (*)(_QWORD))sub_2418443F4);
  v141 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC910);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241721DF8(&qword_257153108, (uint64_t (*)(uint64_t))sub_2418443D8, (uint64_t (*)(void))sub_2418447F8, MEMORY[0x24BDECC38]);
  v100 = (uint64_t)v125;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_24172588C(v99, (uint64_t (*)(_QWORD))sub_2418443D8);
  v101 = v126;
  sub_241731B4C(v100, v126, (uint64_t (*)(_QWORD))sub_2418443BC);
  v102 = v139;
  v103 = v138;
  sub_2417289A8(v139, v138, (uint64_t (*)(_QWORD))sub_2418442EC);
  v104 = v132;
  sub_2417289A8(v101, v132, (uint64_t (*)(_QWORD))sub_2418443BC);
  v105 = v137;
  sub_2417289A8(v103, v137, (uint64_t (*)(_QWORD))sub_2418442EC);
  sub_241844280();
  sub_2417289A8(v104, v105 + *(int *)(v106 + 48), (uint64_t (*)(_QWORD))sub_2418443BC);
  sub_24172588C(v101, (uint64_t (*)(_QWORD))sub_2418443BC);
  sub_24172588C(v102, (uint64_t (*)(_QWORD))sub_2418442EC);
  sub_24172588C(v104, (uint64_t (*)(_QWORD))sub_2418443BC);
  return sub_24172588C(v103, (uint64_t (*)(_QWORD))sub_2418442EC);
}

uint64_t sub_241843D5C@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_25714B958 != -1)
    swift_once();
  v2 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  sub_241721040();
  result = sub_2418A92D0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_241843E54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A9660();
  *a1 = result;
  return result;
}

double sub_241843E90@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  double v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  double result;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;

  v4 = v2;
  v29 = sub_2418A84E4();
  v6 = *(_QWORD *)(v29 - 8);
  v8 = MEMORY[0x24BDAC7A8](v29, v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v8, v13);
  sub_2417289A8(v4, (uint64_t)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ConfirmationView);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  sub_241731B4C((uint64_t)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(_QWORD))type metadata accessor for ConfirmationView);
  v16 = sub_2418A882C();
  v17 = sub_2418A90D8();
  v18 = *(double *)v4;
  sub_241861034((uint64_t)v10);
  sub_24182F280((uint64_t)v10, (uint64_t)sub_2418441BC, v15, v16, v17, (uint64_t)&v30, v18);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v29);
  swift_release();
  v19 = v31;
  v20 = v32;
  v21 = v33;
  v22 = v36;
  v23 = v37;
  result = *(double *)(v4 + 32);
  v25 = v34;
  v26 = v35;
  v27 = v38;
  *(_OWORD *)a2 = v30;
  *(_QWORD *)(a2 + 16) = v19;
  *(_BYTE *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v21;
  *(_OWORD *)(a2 + 40) = v25;
  *(_OWORD *)(a2 + 56) = v26;
  *(_QWORD *)(a2 + 72) = v22;
  *(_BYTE *)(a2 + 80) = v23;
  *(_OWORD *)(a2 + 88) = v27;
  *(double *)(a2 + 104) = result;
  return result;
}

uint64_t sub_241844044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for ConfirmationView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v0 + v3 + *(int *)(v1 + 44);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v0 + v3 + *(int *)(v1 + 48);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2418441BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ConfirmationView() - 8) + 80);
  return sub_241842FFC((double *)(v1 + ((v3 + 16) & ~v3)), a1);
}

void sub_241844208()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153060)
  {
    sub_24172570C(255, &qword_257153068, (uint64_t (*)(uint64_t))sub_241844280, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_241844604();
    v0 = sub_2418A97F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153060);
  }
}

void sub_241844280()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257153070)
  {
    sub_2418442EC(255);
    sub_2418443BC(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257153070);
  }
}

void sub_2418442EC(uint64_t a1)
{
  sub_241728250(a1, &qword_257153078, sub_241844308, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_241844308(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153080, sub_241844324);
}

void sub_241844324(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153088, (void (*)(uint64_t))sub_241844340);
}

void sub_241844340()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153090)
  {
    sub_24172835C(255, &qword_25714CCB0, (uint64_t)&type metadata for StateOfMindVisualization.ValenceImage, MEMORY[0x24BDEBEF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153090);
  }
}

void sub_2418443BC(uint64_t a1)
{
  sub_241728250(a1, &qword_257153098, sub_2418443D8, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_2418443D8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_2571530A0, (void (*)(uint64_t))sub_2418443F4);
}

void sub_2418443F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571530A8)
  {
    sub_241844470(255);
    sub_24172887C(255, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571530A8);
  }
}

void sub_241844470(uint64_t a1)
{
  sub_241728250(a1, &qword_2571530B0, sub_24184448C, (void (*)(uint64_t))sub_24184451C);
}

void sub_24184448C(uint64_t a1)
{
  sub_241728250(a1, &qword_2571530B8, (void (*)(uint64_t))sub_2418444A8, (void (*)(uint64_t))sub_2417283A4);
}

void sub_2418444A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571530C0)
  {
    v0 = sub_2418A96B4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571530C0);
  }
}

void sub_24184451C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571530C8)
  {
    sub_24172835C(255, &qword_2571530D0, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEF770]);
    sub_24184459C();
    v0 = sub_2418A8F4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571530C8);
  }
}

unint64_t sub_24184459C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571530D8;
  if (!qword_2571530D8)
  {
    sub_24172835C(255, &qword_2571530D0, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEF770]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF780], v1);
    atomic_store(result, (unint64_t *)&qword_2571530D8);
  }
  return result;
}

unint64_t sub_241844604()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571530E0;
  if (!qword_2571530E0)
  {
    sub_24172570C(255, &qword_257153068, (uint64_t (*)(uint64_t))sub_241844280, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_2571530E0);
  }
  return result;
}

void sub_241844664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571530E8)
  {
    sub_24172570C(255, &qword_257153068, (uint64_t (*)(uint64_t))sub_241844280, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571530E8);
  }
}

uint64_t sub_2418446E0()
{
  return sub_241721DF8(&qword_2571530F8, (uint64_t (*)(uint64_t))sub_241844324, sub_241844704, MEMORY[0x24BDEBF50]);
}

uint64_t sub_241844704()
{
  return sub_241721DF8(&qword_257153100, (uint64_t (*)(uint64_t))sub_241844340, (uint64_t (*)(void))sub_24174B5F0, MEMORY[0x24BDECC38]);
}

uint64_t sub_241844730(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172835C(0, &qword_2571530D0, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEF770]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241844794(uint64_t a1)
{
  uint64_t v2;

  sub_24172835C(0, &qword_2571530D0, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEF770]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2418447F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153110;
  if (!qword_257153110)
  {
    sub_2418443F4();
    v2 = v1;
    v3[0] = sub_241844860();
    v3[1] = sub_24174B590();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153110);
  }
  return result;
}

unint64_t sub_241844860()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153118;
  if (!qword_257153118)
  {
    sub_241844470(255);
    v2 = v1;
    v3[0] = sub_2418448E0();
    v3[1] = sub_24172159C(&qword_257153130, (uint64_t (*)(uint64_t))sub_24184451C, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153118);
  }
  return result;
}

unint64_t sub_2418448E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153120;
  if (!qword_257153120)
  {
    sub_24184448C(255);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257153128, (uint64_t (*)(uint64_t))sub_2418444A8, MEMORY[0x24BDF41A8]);
    v3[1] = sub_24172159C(&qword_25714C228, (uint64_t (*)(uint64_t))sub_2417283A4, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153120);
  }
  return result;
}

uint64_t sub_241844978()
{
  return sub_241721DF8(&qword_257153138, (uint64_t (*)(uint64_t))sub_2418449AC, (uint64_t (*)(void))sub_241844B54, MEMORY[0x24BDECC38]);
}

void sub_2418449AC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153140, (void (*)(uint64_t))sub_2418449C8);
}

void sub_2418449C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153148)
  {
    sub_241721CBC(255, &qword_257153150, (void (*)(uint64_t))sub_241844A44);
    sub_2417782FC(255);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153148);
  }
}

void sub_241844A44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153158)
  {
    sub_241721CBC(255, &qword_257153160, (void (*)(uint64_t))sub_241844208);
    sub_241844ABC();
    v0 = sub_2418A8718();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153158);
  }
}

unint64_t sub_241844ABC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153168;
  if (!qword_257153168)
  {
    sub_241721CBC(255, &qword_257153160, (void (*)(uint64_t))sub_241844208);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257153170, (uint64_t (*)(uint64_t))sub_241844208, MEMORY[0x24BDF4750]);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153168);
  }
  return result;
}

unint64_t sub_241844B54()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153178;
  if (!qword_257153178)
  {
    sub_2418449C8();
    v2 = v1;
    v3[0] = sub_241844BD4();
    v3[1] = sub_24172159C(&qword_25714DBA8, (uint64_t (*)(uint64_t))sub_2417782FC, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153178);
  }
  return result;
}

unint64_t sub_241844BD4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153180;
  if (!qword_257153180)
  {
    sub_241721CBC(255, &qword_257153150, (void (*)(uint64_t))sub_241844A44);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257153188, (uint64_t (*)(uint64_t))sub_241844A44, MEMORY[0x24BDEC6F8]);
    v3[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153180);
  }
  return result;
}

uint64_t *sub_241844C6C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2418A8100();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_2418A8238();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v18 = a3[7];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v22 = a3[8];
    v23 = (uint64_t *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_2418A8EB0();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v26 + 16))(v23, v24, v25);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v28 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v29 = (char *)v23 + v28;
      v30 = (char *)v24 + v28;
      v31 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_241844F58(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A8238();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = a1 + a2[7];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = a1 + a2[8];
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v11 = sub_2418A8EB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = v10 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
  v14 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

_QWORD *sub_241845124(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2418A8100();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2418A8238();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_2418A8EB0();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v26 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v27 = (char *)v21 + v26;
    v28 = (char *)v22 + v26;
    v29 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2418453DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2418A8100();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  if (a1 != a2)
  {
    v10 = a3[6];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8];
    sub_24172B778((uint64_t)a1 + v10, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8]);
    sub_24172570C(0, &qword_25714F248, v13, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2418A8238();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[7];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1 + v15, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v20 = a3[8];
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    sub_24172B778((uint64_t)a1 + v20, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_2418A8EB0();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v26 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v27 = (char *)v21 + v26;
      v28 = (char *)v22 + v26;
      v29 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_2418456F0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2418A8100();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v14 = v13;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2418A8238();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v11, v12, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v20 = v19;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v17, v18, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v26 = v25;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v27 = sub_2418A8EB0();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v24, 1, v27))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v23, v24, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v23, 0, 1, v27);
    }
    v30 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v31 = &v23[v30];
    v32 = &v24[v30];
    v33 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_2418459A0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2418A8100();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  if (a1 != a2)
  {
    v11 = a3[6];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8];
    sub_24172B778((uint64_t)a1 + v11, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8]);
    sub_24172570C(0, &qword_25714F248, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2418A8238();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1 + v18, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v23 = v22;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v19, v20, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    v25 = a3[8];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    sub_24172B778((uint64_t)a1 + v25, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v29 = v28;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = sub_2418A8EB0();
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v27, 1, v30))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v26, v27, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v26, 0, 1, v30);
      }
      v33 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v34 = &v26[v33];
      v35 = &v27[v33];
      v36 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241845CB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241845CBC(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2418A8100();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      sub_24172570C(0, qword_257150650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[7];
        }
        else
        {
          sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a3[8];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_241845DEC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241845DF8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_2418A8100();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      sub_24172570C(0, qword_257150650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[7];
        }
        else
        {
          sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a4[8];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ReflectiveIntervalSelectionHeaderText()
{
  uint64_t result;

  result = qword_2571531E8;
  if (!qword_2571531E8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241845F60()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2418A8100();
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
      {
        sub_24172570C(319, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_241846070()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241846080@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  char v81;
  unsigned int *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  double v111;
  uint64_t KeyPath;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  char v128;
  uint64_t v129;
  char v130;
  unsigned int *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;
  void (*v170)(char *, _QWORD, uint64_t);
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;

  v200 = a2;
  sub_24184735C();
  v176 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v180 = (char *)&v167 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418472F4(0);
  v177 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v181 = (uint64_t)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418472D8(0);
  v204 = v9;
  v198 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v179 = (uint64_t)&v167 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v178 = (uint64_t)&v167 - v14;
  v196 = sub_2418A8238();
  v195 = *(_QWORD *)(v196 - 8);
  MEMORY[0x24BDAC7A8](v196, v15);
  v194 = (uint64_t)&v167 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418472BC(0);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v199 = (uint64_t)&v167 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v203 = (uint64_t)&v167 - v22;
  v23 = type metadata accessor for LoggingFlowBlendMode();
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v201 = (uint64_t *)((char *)&v167 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v25, v27);
  v202 = (uint64_t)&v167 - v28;
  v193 = sub_2418A84E4();
  v190 = *(_QWORD *)(v193 - 8);
  v30 = MEMORY[0x24BDAC7A8](v193, v29);
  v189 = (char *)&v167 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30, v32);
  v206 = (char *)&v167 - v33;
  v34 = sub_2418A91E0();
  v185 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x24BDAC7A8](v34, v35);
  v174 = (char *)&v167 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v36, v38);
  v175 = (char *)&v167 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39, v41);
  v44 = (char *)&v167 - v43;
  MEMORY[0x24BDAC7A8](v42, v45);
  v184 = (char *)&v167 - v46;
  v47 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  v49 = MEMORY[0x24BDAC7A8](v47, v48);
  v173 = (uint64_t)&v167 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49, v51);
  v53 = (char *)&v167 - v52;
  sub_2418471F0(0);
  v186 = v54;
  MEMORY[0x24BDAC7A8](v54, v55);
  v57 = (char *)&v167 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418471DC(0);
  v191 = v58;
  MEMORY[0x24BDAC7A8](v58, v59);
  v188 = (uint64_t)&v167 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418471C0(0);
  v192 = v61;
  v63 = MEMORY[0x24BDAC7A8](v61, v62);
  v197 = (uint64_t)&v167 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = MEMORY[0x24BDAC7A8](v63, v65);
  v187 = (uint64_t)&v167 - v67;
  MEMORY[0x24BDAC7A8](v66, v68);
  v207 = (uint64_t)&v167 - v69;
  v70 = a1;
  v71 = *a1;
  v72 = a1[1];
  v73 = v70;
  v183 = v70;
  v208 = v71;
  v209 = v72;
  v74 = sub_241721040();
  swift_bridgeObjectRetain();
  v171 = v74;
  v75 = sub_2418A92D0();
  v77 = v76;
  v182 = v78;
  v80 = v79 & 1;
  v205 = type metadata accessor for ReflectiveIntervalSelectionHeaderText();
  v169 = (uint64_t)v73 + *(int *)(v205 + 32);
  sub_241861F08((uint64_t)v53);
  sub_2418A9120();
  v172 = v47;
  v81 = sub_2418A879C();
  v82 = (unsigned int *)MEMORY[0x24BDF17C8];
  v83 = v185;
  v84 = *(void (**)(char *, uint64_t, uint64_t))(v185 + 104);
  if ((v81 & 1) == 0)
    v82 = (unsigned int *)MEMORY[0x24BDF17D0];
  v85 = *v82;
  v170 = *(void (**)(char *, _QWORD, uint64_t))(v185 + 104);
  v84(v44, v85, v34);
  v86 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
  v87 = v83;
  v88 = v184;
  v168 = v86;
  v86(v184, v44, v34);
  sub_2418A91F8();
  swift_release();
  v89 = *(char **)(v87 + 8);
  v185 = v34;
  v184 = v89;
  ((void (*)(char *, uint64_t))v89)(v88, v34);
  sub_24172588C((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  v90 = sub_2418A9294();
  v92 = v91;
  v94 = v93 & 1;
  sub_2417289EC(v75, v77, v80);
  swift_release();
  swift_bridgeObjectRelease();
  sub_2418A9198();
  v95 = sub_2418A9258();
  v97 = v96;
  v99 = v98 & 1;
  sub_2417289EC(v90, v92, v94);
  swift_bridgeObjectRelease();
  LODWORD(v208) = sub_2418A8E68();
  v100 = sub_2418A9270();
  v102 = v101;
  v104 = v103;
  v106 = v105 & 1;
  sub_2417289EC(v95, v97, v99);
  swift_bridgeObjectRelease();
  sub_241861034((uint64_t)v206);
  v107 = v190;
  v108 = v189;
  v109 = v193;
  (*(void (**)(char *, _QWORD, uint64_t))(v190 + 104))(v189, *MEMORY[0x24BDEB3F0], v193);
  LOBYTE(v95) = sub_2418A84D8();
  v110 = *(void (**)(char *, uint64_t))(v107 + 8);
  v110(v108, v109);
  if ((v95 & 1) != 0)
    v111 = 1.0;
  else
    v111 = 0.8;
  KeyPath = swift_getKeyPath();
  v113 = (uint64_t)v201;
  *v201 = KeyPath;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v190 = v114;
  swift_storeEnumTagMultiPayload();
  v115 = v202;
  sub_241731B4C(v113, v202, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  sub_2417289A8(v115, (uint64_t)&v57[*(int *)(v186 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  *(_QWORD *)v57 = v100;
  *((_QWORD *)v57 + 1) = v102;
  v57[16] = v106;
  *((_QWORD *)v57 + 3) = v104;
  *((double *)v57 + 4) = v111;
  sub_241728A50(v100, v102, v106);
  swift_bridgeObjectRetain();
  sub_24172588C(v115, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  v110(v206, v109);
  sub_2417289EC(v100, v102, v106);
  swift_bridgeObjectRelease();
  v116 = v188;
  sub_2417289A8((uint64_t)v57, v188, (uint64_t (*)(_QWORD))sub_2418471F0);
  *(_WORD *)(v116 + *(int *)(v191 + 36)) = 256;
  sub_24172588C((uint64_t)v57, (uint64_t (*)(_QWORD))sub_2418471F0);
  v117 = swift_getKeyPath();
  v118 = v187;
  sub_2417289A8(v116, v187, (uint64_t (*)(_QWORD))sub_2418471DC);
  v119 = v118 + *(int *)(v192 + 36);
  *(_QWORD *)v119 = v117;
  v120 = 1;
  *(_BYTE *)(v119 + 8) = 1;
  sub_24172588C(v116, (uint64_t (*)(_QWORD))sub_2418471DC);
  sub_241731B4C(v118, v207, (uint64_t (*)(_QWORD))sub_2418471C0);
  v121 = v194;
  sub_241862158(v194);
  v122 = v121;
  LOBYTE(v121) = sub_2418A8178();
  (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v122, v196);
  if ((v121 & 1) == 0)
  {
    v208 = sub_241846DB4();
    v209 = v123;
    v124 = sub_2418A92D0();
    v126 = v125;
    v128 = v127 & 1;
    v129 = v173;
    sub_241861F08(v173);
    sub_2418A9120();
    v130 = sub_2418A879C();
    v131 = (unsigned int *)MEMORY[0x24BDF17C8];
    if ((v130 & 1) == 0)
      v131 = (unsigned int *)MEMORY[0x24BDF17D0];
    v132 = v174;
    v133 = v185;
    v170(v174, *v131, v185);
    v134 = v175;
    v168(v175, v132, v133);
    sub_2418A91F8();
    swift_release();
    ((void (*)(char *, uint64_t))v184)(v134, v133);
    sub_24172588C(v129, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
    v135 = sub_2418A9294();
    v137 = v136;
    v139 = v138 & 1;
    sub_2417289EC(v124, v126, v128);
    swift_release();
    swift_bridgeObjectRelease();
    sub_2418A9198();
    v140 = sub_2418A9258();
    v142 = v141;
    v144 = v143 & 1;
    sub_2417289EC(v135, v137, v139);
    swift_bridgeObjectRelease();
    LODWORD(v208) = sub_2418A8E74();
    v145 = sub_2418A9270();
    v147 = v146;
    LOBYTE(v137) = v148;
    v150 = v149;
    sub_2417289EC(v140, v142, v144);
    swift_bridgeObjectRelease();
    v151 = swift_getKeyPath();
    v152 = (uint64_t)v201;
    *v201 = v151;
    swift_storeEnumTagMultiPayload();
    v153 = v202;
    sub_241731B4C(v152, v202, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
    v154 = (uint64_t)v180;
    sub_2417289A8(v153, (uint64_t)&v180[*(int *)(v176 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
    *(_QWORD *)v154 = v145;
    *(_QWORD *)(v154 + 8) = v147;
    *(_BYTE *)(v154 + 16) = v137 & 1;
    *(_QWORD *)(v154 + 24) = v150;
    sub_24172588C(v153, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
    v155 = v181;
    sub_2417289A8(v154, v181, (uint64_t (*)(_QWORD))sub_24184735C);
    *(_WORD *)(v155 + *(int *)(v177 + 36)) = 256;
    sub_24172588C(v154, (uint64_t (*)(_QWORD))sub_24184735C);
    v156 = swift_getKeyPath();
    v157 = v179;
    sub_2417289A8(v155, v179, (uint64_t (*)(_QWORD))sub_2418472F4);
    v158 = v157 + *(int *)(v204 + 36);
    *(_QWORD *)v158 = v156;
    *(_BYTE *)(v158 + 8) = 1;
    sub_24172588C(v155, (uint64_t (*)(_QWORD))sub_2418472F4);
    v159 = v178;
    sub_241731B4C(v157, v178, (uint64_t (*)(_QWORD))sub_2418472D8);
    sub_241731B4C(v159, v203, (uint64_t (*)(_QWORD))sub_2418472D8);
    v120 = 0;
  }
  v160 = v203;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v198 + 56))(v203, v120, 1, v204);
  v161 = v207;
  v162 = v197;
  sub_2417289A8(v207, v197, (uint64_t (*)(_QWORD))sub_2418471C0);
  v163 = v199;
  sub_2417289A8(v160, v199, (uint64_t (*)(_QWORD))sub_2418472BC);
  v164 = v200;
  sub_2417289A8(v162, v200, (uint64_t (*)(_QWORD))sub_2418471C0);
  sub_241847154();
  sub_2417289A8(v163, v164 + *(int *)(v165 + 48), (uint64_t (*)(_QWORD))sub_2418472BC);
  sub_24172588C(v160, (uint64_t (*)(_QWORD))sub_2418472BC);
  sub_24172588C(v161, (uint64_t (*)(_QWORD))sub_2418471C0);
  sub_24172588C(v163, (uint64_t (*)(_QWORD))sub_2418472BC);
  return sub_24172588C(v162, (uint64_t (*)(_QWORD))sub_2418471C0);
}

uint64_t sub_241846DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v0 = sub_2418A7FD4();
  v45 = *(_QWORD *)(v0 - 8);
  v46 = v0;
  MEMORY[0x24BDAC7A8](v0, v1);
  v44 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2418A801C();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A8058();
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2418A807C();
  v38 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)&v37 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v23 = (char *)&v37 - v22;
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v37 - v25;
  v27 = sub_2418A8100();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v37 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for ReflectiveIntervalSelectionHeaderText();
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 16))(v31, v41 + *(int *)(v32 + 20), v27);
  MEMORY[0x24269A530](v33);
  sub_2418A804C();
  sub_2418A8070();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
  v34 = *(void (**)(char *, uint64_t))(v38 + 8);
  v34(v15, v11);
  sub_2418A8010();
  sub_2418A7FBC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v43);
  v34(v19, v11);
  v35 = v44;
  sub_2418A7FC8();
  sub_2418A7FA4();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v46);
  v34(v23, v11);
  sub_24172159C(&qword_25714F118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
  sub_2418A80E8();
  v34(v26, v11);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
  return v47;
}

uint64_t sub_241847090@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2418A8C58();
  *(_QWORD *)(a1 + 8) = 0x4010000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  sub_2418470D4();
  return sub_241846080(v1, a1 + *(int *)(v3 + 44));
}

void sub_2418470D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153230)
  {
    sub_241847138(255);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153230);
  }
}

void sub_241847138(uint64_t a1)
{
  sub_24172570C(a1, &qword_257153238, (uint64_t (*)(uint64_t))sub_241847154, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241847154()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257153240)
  {
    sub_2418471C0(255);
    sub_2418472BC(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257153240);
  }
}

void sub_2418471C0(uint64_t a1)
{
  sub_241728250(a1, &qword_257153248, sub_2418471DC, (void (*)(uint64_t))sub_241847268);
}

void sub_2418471DC(uint64_t a1)
{
  sub_241847308(a1, &qword_257153250, sub_2418471F0);
}

void sub_2418471F0(uint64_t a1)
{
  sub_241728250(a1, &qword_257153258, (void (*)(uint64_t))sub_24184720C, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
}

void sub_24184720C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153260)
  {
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153260);
  }
}

void sub_241847268()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C278)
  {
    v0 = sub_2418A9090();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C278);
  }
}

void sub_2418472BC(uint64_t a1)
{
  sub_24172570C(a1, &qword_257153268, (uint64_t (*)(uint64_t))sub_2418472D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2418472D8(uint64_t a1)
{
  sub_241728250(a1, &qword_257153270, sub_2418472F4, (void (*)(uint64_t))sub_241847268);
}

void sub_2418472F4(uint64_t a1)
{
  sub_241847308(a1, &qword_257153278, (void (*)(uint64_t))sub_24184735C);
}

void sub_241847308(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_24184735C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257151750)
  {
    type metadata accessor for LoggingFlowBlendMode();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257151750);
  }
}

uint64_t sub_2418473C8()
{
  return sub_24172159C(&qword_257153280, (uint64_t (*)(uint64_t))sub_2418473F4, MEMORY[0x24BDF4700]);
}

void sub_2418473F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153288)
  {
    sub_241847138(255);
    sub_24172159C(&qword_257153290, (uint64_t (*)(uint64_t))sub_241847138, MEMORY[0x24BDF5428]);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153288);
  }
}

uint64_t destroy for OnFirstAppear()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for OnFirstAppear(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for OnFirstAppear(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for OnFirstAppear(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for OnFirstAppear()
{
  return &type metadata for OnFirstAppear;
}

uint64_t sub_241847598()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2418475A8(void (*a1)(uint64_t))
{
  uint64_t result;
  char v3;

  sub_241752F50();
  result = sub_2418A96CC();
  if ((v3 & 1) == 0)
  {
    a1(result);
    return sub_2418A96D8();
  }
  return result;
}

uint64_t sub_24184763C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)();

  v6 = *v2;
  v5 = v2[1];
  v7 = *((_BYTE *)v2 + 16);
  v8 = v2[3];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v5;
  *(_BYTE *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v8;
  sub_24184772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, a1, v10);
  sub_241847784();
  v12 = (uint64_t (**)())(a2 + *(int *)(v11 + 36));
  *v12 = sub_24184771C;
  v12[1] = (uint64_t (*)())v9;
  v12[2] = 0;
  v12[3] = 0;
  swift_retain();
  return swift_retain();
}

uint64_t sub_2418476F0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24184771C()
{
  uint64_t v0;

  return sub_2418475A8(*(void (**)(uint64_t))(v0 + 16));
}

void sub_24184772C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153298)
  {
    sub_2417D7214();
    v0 = sub_2418A8E5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153298);
  }
}

void sub_241847784()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571532A0)
  {
    sub_24184772C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571532A0);
  }
}

unint64_t sub_2418477E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2571532A8;
  if (!qword_2571532A8)
  {
    sub_241847784();
    v2 = v1;
    v3[0] = sub_24184784C();
    v3[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2571532A8);
  }
  return result;
}

unint64_t sub_24184784C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571532B0;
  if (!qword_2571532B0)
  {
    sub_24184772C();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEFB78], v1);
    atomic_store(result, (unint64_t *)&qword_2571532B0);
  }
  return result;
}

uint64_t sub_241847894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v74 = a1;
  v72 = a2;
  v2 = sub_2418A819C();
  v70 = *(_QWORD *)(v2 - 8);
  v71 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v69 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_2418A81C0();
  v5 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67, v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_2418A8184();
  v60 = *(_QWORD *)(v73 - 8);
  v9 = v60;
  MEMORY[0x24BDAC7A8](v73, v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C55D4(0, (unint64_t *)&qword_25714F360, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v68 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v64 = (char *)&v57 - v18;
  v19 = sub_2418A8100();
  v65 = *(_QWORD *)(v19 - 8);
  v66 = v19;
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v63 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v57 - v24;
  sub_2417C55D4(0, qword_2571532B8, (void (*)(uint64_t))MEMORY[0x24BDCF510]);
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v57 - v28;
  sub_2417C55D4(0, &qword_25714FB40, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  MEMORY[0x24BDAC7A8](v30, v31);
  v33 = (char *)&v57 - v32;
  v34 = sub_2418A7EC0();
  v61 = *(_QWORD *)(v34 - 8);
  v62 = v34;
  MEMORY[0x24BDAC7A8](v34, v35);
  v59 = (char *)&v57 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_2418A8238();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v33, 1, 1, v37);
  v38 = sub_2418A8244();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v29, 1, 1, v38);
  sub_2418A7EB4();
  v58 = v25;
  sub_2418A816C();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x24BDCF020], v73);
  v39 = v5;
  v40 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v41 = v8;
  v42 = v67;
  v40(v8, *MEMORY[0x24BDCF0B0], v67);
  v44 = v69;
  v43 = v70;
  v45 = v71;
  (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v69, *MEMORY[0x24BDCF068], v71);
  v46 = (uint64_t)v64;
  v47 = v59;
  sub_2418A8214();
  v48 = v45;
  v49 = v63;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v48);
  v50 = v42;
  v51 = v65;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v50);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v12, v73);
  v52 = *(void (**)(char *, uint64_t))(v51 + 8);
  v53 = v66;
  v52(v58, v66);
  v54 = v47;
  v55 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v54, v62);
  sub_241806C14(v46, v55);
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v49, v74, v53);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v55, 1, v53) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v72, v49, v53);
    return sub_2417B10EC(v55);
  }
  else
  {
    v52(v49, v53);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v72, v55, v53);
  }
}

uint64_t *sub_241847D64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
    }
    else
    {
      v6 = sub_2418A9CFC();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      sub_2417340BC();
      v8 = *(int *)(v7 + 48);
      v9 = (uint64_t *)((char *)a1 + v8);
      v10 = (uint64_t *)((char *)a2 + v8);
      v11 = v10[1];
      *v9 = *v10;
      v9[1] = v11;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241847E98(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result >= 2)
  {
    if ((_DWORD)result != 2)
      return result;
  }
  else
  {
    v3 = sub_2418A9CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    sub_2417340BC();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_241847F08(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
  }
  else
  {
    v4 = sub_2418A9CFC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    sub_2417340BC();
    v6 = *(int *)(v5 + 48);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    v9 = v8[1];
    *v7 = *v8;
    v7[1] = v9;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_241848010(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  if (a1 != a2)
  {
    sub_24172588C((uint64_t)a1, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
    }
    else
    {
      v4 = sub_2418A9CFC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
      sub_2417340BC();
      v6 = *(int *)(v5 + 48);
      v7 = (_QWORD *)((char *)a1 + v6);
      v8 = (_QWORD *)((char *)a2 + v6);
      *v7 = *v8;
      v7[1] = v8[1];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s9ViewModelOMa()
{
  uint64_t result;

  result = qword_257153330;
  if (!qword_257153330)
    return swift_getSingletonMetadata();
  return result;
}

char *sub_241848184(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_2418A9CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    sub_2417340BC();
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_241848270(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_24172588C((uint64_t)a1, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_2418A9CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      sub_2417340BC();
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_241848374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_241848380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_241848390()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2418483A0()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char v3;
  char *v4;
  char *v5;
  void *v6;

  result = sub_2418A9CFC();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v4 = &v3;
    swift_getTupleTypeLayout2();
    v5 = &v2;
    v6 = &unk_2418D9648;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_241848440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417289A8(v1, (uint64_t)v10, v11);
  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    sub_2417340BC();
    v14 = *(uint64_t *)((char *)v10 + *(int *)(v13 + 48));
    v15 = sub_2418A9CFC();
    (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v10, v15);
    return v14;
  }
  v16 = v10[1];
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v17 = *v10;
    if (v16 < *(_QWORD *)(v17 + 16))
    {
      sub_2417289A8(v17+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v16, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)&v6[*(int *)(v2 + 24)];
      swift_bridgeObjectRetain();
      sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
      return v14;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_2418485BC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417289A8(v2, (uint64_t)v7, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_2417340BC();
      swift_bridgeObjectRelease();
      v10 = sub_2418A9CFC();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
      v11 = 1;
    }
    else
    {
      v11 = *((_QWORD *)v7 + 1);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v12 = sub_2418A9CFC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v7, v12);
    v11 = 0;
  }
  return v11 == *a1;
}

uint64_t sub_2418486D8(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417289A8((uint64_t)v1, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    v11 = *v6;
    v10 = v6[1];
    v12 = *a1;
    if (v10 == *a1)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_24172588C((uint64_t)v1, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
      *v1 = v11;
      v1[1] = v12;
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v8 = sub_2418A9CFC();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
}

uint64_t sub_2418487E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417289A8(v0, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    v8 = *(_QWORD *)(*(_QWORD *)v4 + 16);
    swift_bridgeObjectRelease();
    return v8 - 1;
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v6 = sub_2418A9CFC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    return 0;
  }
}

uint64_t sub_2418488B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417289A8((uint64_t)v0, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    v9 = *v4;
    v8 = v4[1];
    if (v8 >= sub_2418487E4())
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_24172588C((uint64_t)v0, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
      *v0 = v9;
      v0[1] = v8 + 1;
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v6 = sub_2418A9CFC();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
}

uint64_t sub_2418489BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417289A8((uint64_t)v0, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    v9 = *v4;
    v8 = v4[1];
    v10 = v8 - 1;
    if (v8 < 1)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_24172588C((uint64_t)v0, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
      *v0 = v9;
      v0[1] = v10;
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v6 = sub_2418A9CFC();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
}

uint64_t sub_241848AB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  void (*v19)(char *, uint64_t *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (uint64_t *)((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_2418A9CFC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417289A8(v2, (uint64_t)v12, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v19 = *(void (**)(char *, uint64_t *, uint64_t))(v14 + 32);
    v19(v17, v12, v13);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a1, v17, v13);
  }
  v20 = v12[1];
  if ((v20 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v21 = *v12;
  if (v20 >= *(_QWORD *)(v21 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  sub_2417289A8(v21+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v20, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(a1, &v8[*(int *)(v4 + 20)], v13);
  return sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
}

uint64_t sub_241848C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t (*v25)(_QWORD);
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a2;
  v5 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v49 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v50 = (uint64_t)&v46 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v46 - v14;
  v16 = sub_2418A9CFC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (uint64_t *)((char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417289A8(a1, (uint64_t)v24, v25);
  v51 = v21;
  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    sub_24172588C(a1, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    sub_2417340BC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v17 + 8))(v24, v16);
    v27 = v52;
    v28 = *(_QWORD *)(v52 + 16) - 1;
LABEL_17:
    *a3 = v27;
    a3[1] = v28;
    return swift_storeEnumTagMultiPayload();
  }
  v29 = v24[1];
  if ((v29 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v30 = *v24;
  if (v29 >= *(_QWORD *)(v30 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v47 = a3;
  v48 = a1;
  v31 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v32 = v17;
  v33 = *(_QWORD *)(v6 + 72);
  sub_2417289A8(v30 + v31 + v33 * v29, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  swift_bridgeObjectRelease();
  v34 = &v15[*(int *)(v5 + 20)];
  v46 = v32;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v20, v34, v16);
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  v27 = v52;
  v35 = *(_QWORD *)(v52 + 16);
  if (!v35)
  {
LABEL_12:
    sub_24172588C(v48, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    v38 = 0;
LABEL_13:
    v28 = v38 - 1;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v16);
    a3 = v47;
    goto LABEL_17;
  }
  v36 = v52 + v31;
  sub_2418490A0((unint64_t *)&unk_2571526A0, MEMORY[0x24BDD24C0]);
  v28 = 0;
  v37 = v27 + v31;
  do
  {
    sub_2418AA218();
    if (!v53)
    {
      sub_24172588C(v48, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v16);
      goto LABEL_16;
    }
    ++v28;
    v37 += v33;
  }
  while (v35 != v28);
  v27 = v52;
  v38 = *(_QWORD *)(v52 + 16);
  if (!v38)
    goto LABEL_12;
  v39 = v50;
  sub_2417289A8(v36, v50, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  sub_2418490A0((unint64_t *)&unk_257154500, MEMORY[0x24BDD24A8]);
  v40 = sub_2418A9D68();
  result = sub_24172588C(v39, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  if ((v40 & 1) != 0)
  {
    sub_24172588C(v48, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v16);
    v28 = 0;
LABEL_16:
    a3 = v47;
    v27 = v52;
    goto LABEL_17;
  }
  v41 = v36;
  v42 = v52;
  v43 = v48;
  if (v38 <= *(_QWORD *)(v52 + 16))
  {
    v28 = v38 - 1;
    v44 = v49;
    sub_2417289A8(v41 + (v38 - 1) * v33, v49, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
    v45 = sub_2418A9C90();
    sub_24172588C(v43, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    sub_24172588C(v44, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
    v27 = v42;
    if ((v45 & 1) != 0)
      goto LABEL_14;
    goto LABEL_13;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2418490A0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2418A9CFC();
    result = MEMORY[0x24269D47C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

id sub_2418490E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  id v25[2];

  v25[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_2418A8340();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + 16);
  v7 = (void *)sub_2418A80AC();
  v25[0] = 0;
  v8 = objc_msgSend(v6, sel_ageWithCurrentDate_error_, v7, v25);

  v9 = v25[0];
  if (!v8)
  {
    v10 = v9;
    v11 = (void *)sub_2418A7F14();

    swift_willThrow();
    sub_2418A8328();
    v12 = v11;
    v13 = v11;
    v14 = sub_2418A8334();
    v15 = sub_2418AA044();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = (void *)swift_slowAlloc();
      v25[0] = v17;
      *(_DWORD *)v16 = 136446466;
      v18 = sub_2418AA5D8();
      v24 = sub_24176024C(v18, v19, (uint64_t *)v25);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      v24 = (uint64_t)v11;
      v20 = v11;
      sub_2417609B0();
      v21 = sub_2418A9DF8();
      v24 = sub_24176024C(v21, v22, (uint64_t *)v25);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24171C000, v14, v15, "[%{public}s] Could not fetch age from data source with error %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v17, -1, -1);
      MEMORY[0x24269D548](v16, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return 0;
  }
  return v8;
}

uint64_t sub_2418493A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  id v27[2];

  v27[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_2418A8340();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + 16);
  v27[0] = 0;
  v7 = objc_msgSend(v6, sel_biologicalSexWithError_, v27);
  if (v7)
  {
    v8 = v7;
    v9 = v27[0];
    v10 = (id)HKAnalyticsPropertyValueForBiologicalSex();
    v11 = sub_2418A9DE0();

  }
  else
  {
    v12 = v27[0];
    v13 = (void *)sub_2418A7F14();

    swift_willThrow();
    sub_2418A8328();
    v14 = v13;
    v15 = v13;
    v16 = sub_2418A8334();
    v17 = sub_2418AA044();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = (void *)swift_slowAlloc();
      v27[0] = v19;
      *(_DWORD *)v18 = 136446466;
      v20 = sub_2418AA5D8();
      v26 = sub_24176024C(v20, v21, (uint64_t *)v27);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      v26 = (uint64_t)v13;
      v22 = v13;
      sub_2417609B0();
      v23 = sub_2418A9DF8();
      v26 = sub_24176024C(v23, v24, (uint64_t *)v27);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24171C000, v16, v17, "[%{public}s] Could not fetch age from data source with error %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v19, -1, -1);
      MEMORY[0x24269D548](v18, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return 0;
  }
  return v11;
}

uint64_t sub_241849688()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MentalHealthGenericFieldsProvider()
{
  return objc_opt_self();
}

uint64_t *sub_2418496CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v16 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v20 = *(int *)(a3 + 28);
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    *v21 = *v22;
    *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  }
  swift_retain();
  return v4;
}

uint64_t sub_24184989C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_241849994(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8EB0();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v15 = (char *)v9 + v14;
    v16 = (char *)v10 + v14;
    v17 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *v19 = *v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_retain();
  return a1;
}

_QWORD *sub_241849B3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v6, (uint64_t)&qword_25714CE28, (uint64_t)type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v14 = (char *)v7 + v13;
      v15 = (char *)v8 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v17 = *(int *)(a3 + 28);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *v18 = *v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_241849D40(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A8EB0();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
    v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_241849EC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v8, (uint64_t)&qword_25714CE28, (uint64_t)type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v11);
    v13 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2418A8EB0();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v9, v10, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
      }
      v17 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v18 = &v9[v17];
      v19 = &v10[v17];
      v20 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v21 = *(int *)(a3 + 28);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *v22 = *v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_release();
  return a1;
}

uint64_t sub_24184A0A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24184A0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_24184A140()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24184A14C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ExpandableInfoSectionHeader()
{
  uint64_t result;

  result = qword_257153488;
  if (!qword_257153488)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24184A214()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24184A2A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24184A2B8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  unsigned __int8 v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v122;
  _QWORD *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned __int8 v142;

  v128 = a1;
  v127 = sub_2418A8B5C();
  v126 = *(_QWORD *)(v127 - 8);
  v3 = MEMORY[0x24BDAC7A8](v127, v2);
  v124 = (char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v125 = (char *)&v122 - v6;
  v135 = sub_2418A987C();
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135, v7);
  v131 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDECC80];
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
  sub_241782A08(0, &qword_257152AD0, v11, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v133 = v12;
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v138 = (uint64_t)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v132 = (char *)&v122 - v18;
  MEMORY[0x24BDAC7A8](v17, v19);
  v139 = (uint64_t)&v122 - v20;
  v21 = type metadata accessor for AssociationSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24184B61C();
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v122 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241782A08(0, &qword_257153528, v29, v9, v10);
  v31 = v30;
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v137 = (uint64_t)&v122 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v33, v35);
  v38 = (char *)&v122 - v37;
  MEMORY[0x24BDAC7A8](v36, v39);
  v41 = (char *)&v122 - v40;
  *(_QWORD *)v28 = sub_2418A8B80();
  *((_QWORD *)v28 + 1) = 0;
  v28[16] = 0;
  sub_24184BA54();
  sub_24184AAF0(v1, (uint64_t)&v28[*(int *)(v42 + 44)]);
  v43 = sub_2418A90F0();
  v44 = type metadata accessor for ExpandableInfoSectionHeader();
  v45 = (char *)v1 + *(int *)(v44 + 24);
  sub_241861594((uint64_t)v24);
  sub_24172588C((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A84A8();
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  sub_2417289A8((uint64_t)v28, (uint64_t)v38, (uint64_t (*)(_QWORD))sub_24184B61C);
  v54 = &v38[*(int *)(v31 + 36)];
  *v54 = v43;
  *((_QWORD *)v54 + 1) = v47;
  *((_QWORD *)v54 + 2) = v49;
  *((_QWORD *)v54 + 3) = v51;
  *((_QWORD *)v54 + 4) = v53;
  v54[40] = 0;
  sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))sub_24184B61C);
  v136 = v41;
  v55 = (uint64_t)v41;
  v56 = (uint64_t)v24;
  sub_24184BAD0((uint64_t)v38, v55, &qword_257153528, (uint64_t (*)(uint64_t))sub_24184B61C);
  v57 = v131;
  sub_2418A9870();
  v58 = sub_2418A90F0();
  v59 = *(int *)(v44 + 28);
  v123 = v1;
  v60 = (char *)v1 + v59;
  v61 = *(_QWORD *)((char *)v1 + v59 + 8);
  LOBYTE(v140) = *((_BYTE *)v1 + v59);
  v141 = v61;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  v122 = v45;
  sub_241861594((uint64_t)v24);
  sub_24172588C((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A84A8();
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v134;
  v70 = v135;
  v72 = (uint64_t)v132;
  (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v132, v57, v135);
  v73 = v72 + *(int *)(v133 + 36);
  *(_BYTE *)v73 = v58;
  *(_QWORD *)(v73 + 8) = v63;
  *(_QWORD *)(v73 + 16) = v65;
  *(_QWORD *)(v73 + 24) = v67;
  *(_QWORD *)(v73 + 32) = v69;
  *(_BYTE *)(v73 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v71 + 8))(v57, v70);
  sub_24184BAD0(v72, v139, &qword_257152AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4918]);
  v74 = *((_QWORD *)v60 + 1);
  LOBYTE(v140) = *v60;
  v141 = v74;
  sub_2418A96CC();
  v134 = 0;
  v135 = 0;
  v75 = 0;
  v133 = 0;
  v76 = 0;
  v130 = 0;
  v129 = 0;
  v131 = 0;
  v132 = 0;
  v77 = 0;
  v78 = 0;
  if (v142 == 1)
  {
    v79 = v123[3];
    v140 = v123[2];
    v141 = v79;
    sub_241721040();
    swift_bridgeObjectRetain();
    v80 = sub_2418A92D0();
    v82 = v81;
    v84 = v83 & 1;
    sub_2418A9144();
    v85 = sub_2418A9294();
    v87 = v86;
    v89 = v88;
    swift_release();
    sub_2417289EC(v80, v82, v84);
    swift_bridgeObjectRelease();
    sub_2418A963C();
    v90 = sub_2418A9264();
    v134 = v91;
    v135 = v90;
    LOBYTE(v80) = v92;
    v133 = v93;
    swift_release();
    sub_2417289EC(v85, v87, v89 & 1);
    swift_bridgeObjectRelease();
    v94 = sub_2418A90F0();
    sub_241861594(v56);
    sub_24172588C(v56, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_2418A84A8();
    v130 = v95;
    v129 = v96;
    v131 = v97;
    v132 = v98;
    v99 = v125;
    sub_2418A8B50();
    v100 = v126;
    v101 = v127;
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v124, v99, v127);
    sub_24172159C(&qword_257151448, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
    v78 = sub_2418A8634();
    LOBYTE(v140) = v80 & 1;
    v142 = 0;
    (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
    v75 = v140;
    v77 = v142;
    v76 = v94;
  }
  v102 = v137;
  v103 = v76;
  v104 = v77;
  sub_24184BB30((uint64_t)v136, v137, &qword_257153528, (uint64_t (*)(uint64_t))sub_24184B61C);
  v105 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF4918];
  v106 = v138;
  sub_24184BB30(v139, v138, &qword_257152AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4918]);
  v107 = v102;
  v108 = v78;
  v109 = v128;
  sub_24184BB30(v107, v128, &qword_257153528, (uint64_t (*)(uint64_t))sub_24184B61C);
  sub_24184BB90();
  v111 = v110;
  sub_24184BB30(v106, v109 + *(int *)(v110 + 48), &qword_257152AD0, v105);
  v112 = (uint64_t *)(v109 + *(int *)(v111 + 64));
  v114 = v134;
  v113 = v135;
  *v112 = v135;
  v112[1] = v114;
  v115 = v75;
  v112[2] = v75;
  v117 = v130;
  v116 = v131;
  v118 = v129;
  v119 = v133;
  v112[3] = v133;
  v112[4] = v103;
  v127 = v103;
  v112[5] = v117;
  v112[6] = v118;
  v120 = v132;
  v112[7] = (uint64_t)v116;
  v112[8] = (uint64_t)v120;
  v112[9] = v104;
  v112[10] = v108;
  sub_24184BD10(v113, v114, v115, v119);
  sub_24184BD4C(v139, &qword_257152AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4918]);
  sub_24184BD4C((uint64_t)v136, &qword_257153528, (uint64_t (*)(uint64_t))sub_24184B61C);
  sub_24184BD98(v113, v114, v115, v119);
  sub_24184BD4C(v138, &qword_257152AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4918]);
  return sub_24184BD4C(v137, &qword_257153528, (uint64_t (*)(uint64_t))sub_24184B61C);
}

uint64_t sub_24184AAF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v128 = a2;
  v118 = type metadata accessor for ExpandableInfoSectionHeader();
  v3 = *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64);
  v120 = *(_QWORD *)(v118 - 8);
  v121 = v3;
  MEMORY[0x24BDAC7A8](v118, v4);
  v119 = (uint64_t)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24184B858();
  v126 = *(_QWORD *)(v6 - 8);
  v127 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v122 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDECC80];
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
  sub_241782A08(0, &qword_2571534F8, v11, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v125 = v12;
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v123 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v124 = (uint64_t)&v106 - v17;
  v18 = type metadata accessor for AssociationSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v18, v19);
  v117 = (uint64_t)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LoggingFlowBlendMode();
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v110 = (uint64_t *)((char *)&v106 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v23, v25);
  v112 = (uint64_t)&v106 - v26;
  v27 = sub_2418A91E0();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v106 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417F3DD4(0, (unint64_t *)&qword_257151750, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  v107 = v32;
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)&v106 - v34;
  sub_24184B7E4();
  MEMORY[0x24BDAC7A8](v36, v37);
  v109 = (uint64_t)&v106 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24184B768();
  v113 = v39;
  MEMORY[0x24BDAC7A8](v39, v40);
  v111 = (uint64_t)&v106 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241782A08(0, &qword_2571534E0, v42, v9, v10);
  v116 = v43;
  v45 = MEMORY[0x24BDAC7A8](v43, v44);
  v114 = (uint64_t)&v106 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45, v47);
  v115 = (uint64_t)&v106 - v48;
  v108 = a1;
  v49 = a1[1];
  v129 = *a1;
  v130 = v49;
  sub_241721040();
  swift_bridgeObjectRetain();
  v50 = sub_2418A92D0();
  v52 = v51;
  LOBYTE(v9) = v53 & 1;
  sub_2418A921C();
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v31, *MEMORY[0x24BDF17C8], v27);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
  v54 = sub_2418A9294();
  v56 = v55;
  LOBYTE(v28) = v57;
  swift_release();
  LOBYTE(a1) = v28 & 1;
  sub_2417289EC(v50, v52, v9);
  swift_bridgeObjectRelease();
  LODWORD(v129) = sub_2418A8E68();
  HIDWORD(v129) = 1059648963;
  sub_24172835C(0, (unint64_t *)&qword_25714F5B0, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEEC90]);
  sub_24184BDD4();
  v58 = sub_2418A9270();
  v60 = v59;
  LOBYTE(v9) = v61;
  v63 = v62;
  sub_2417289EC(v54, v56, (char)a1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v65 = (uint64_t)v110;
  *v110 = KeyPath;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v66 = v112;
  sub_241731B4C(v65, v112, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  sub_2417289A8(v66, (uint64_t)&v35[*(int *)(v107 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  *(_QWORD *)v35 = v58;
  *((_QWORD *)v35 + 1) = v60;
  v35[16] = v9 & 1;
  *((_QWORD *)v35 + 3) = v63;
  sub_24172588C(v66, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  v67 = sub_2418A996C();
  v68 = v109;
  sub_24185F124(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v109, 0.0, 1, 0.0, 1, v67, v69);
  sub_241784BA4((uint64_t)v35, (uint64_t)&qword_257151750, (uint64_t)type metadata accessor for LoggingFlowBlendMode, MEMORY[0x24BDF1FA8], (uint64_t (*)(_QWORD))sub_2417F3DD4);
  v70 = swift_getKeyPath();
  v71 = v111;
  sub_2417289A8(v68, v111, (uint64_t (*)(_QWORD))sub_24184B7E4);
  v72 = v71 + *(int *)(v113 + 36);
  *(_QWORD *)v72 = v70;
  *(_BYTE *)(v72 + 8) = 0;
  sub_24172588C(v68, (uint64_t (*)(_QWORD))sub_24184B7E4);
  LOBYTE(v70) = sub_2418A9108();
  v73 = v117;
  v74 = (uint64_t)v108;
  sub_241861594(v117);
  sub_24172588C(v73, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A84A8();
  v76 = v75;
  v78 = v77;
  v80 = v79;
  v82 = v81;
  v83 = v114;
  sub_2417289A8(v71, v114, (uint64_t (*)(_QWORD))sub_24184B768);
  v84 = v83 + *(int *)(v116 + 36);
  *(_BYTE *)v84 = v70;
  *(_QWORD *)(v84 + 8) = v76;
  *(_QWORD *)(v84 + 16) = v78;
  *(_QWORD *)(v84 + 24) = v80;
  *(_QWORD *)(v84 + 32) = v82;
  *(_BYTE *)(v84 + 40) = 0;
  sub_24172588C(v71, (uint64_t (*)(_QWORD))sub_24184B768);
  v85 = v115;
  sub_24184BAD0(v83, v115, &qword_2571534E0, (uint64_t (*)(uint64_t))sub_24184B768);
  v86 = v119;
  sub_2417289A8(v74, v119, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableInfoSectionHeader);
  v87 = (*(unsigned __int8 *)(v120 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
  v88 = swift_allocObject();
  sub_241731B4C(v86, v88 + v87, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableInfoSectionHeader);
  sub_24184B8B8();
  sub_24184B954();
  v89 = v122;
  sub_2418A9708();
  LOBYTE(v70) = sub_2418A9108();
  sub_241861594(v73);
  sub_24172588C(v73, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A84A8();
  v91 = v90;
  v93 = v92;
  v95 = v94;
  v97 = v96;
  v99 = v126;
  v98 = v127;
  v100 = (uint64_t)v123;
  (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v123, v89, v127);
  v101 = v100 + *(int *)(v125 + 36);
  *(_BYTE *)v101 = v70;
  *(_QWORD *)(v101 + 8) = v91;
  *(_QWORD *)(v101 + 16) = v93;
  *(_QWORD *)(v101 + 24) = v95;
  *(_QWORD *)(v101 + 32) = v97;
  *(_BYTE *)(v101 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v99 + 8))(v89, v98);
  v102 = v124;
  sub_24184BAD0(v100, v124, &qword_2571534F8, (uint64_t (*)(uint64_t))sub_24184B858);
  sub_24184BB30(v85, v83, &qword_2571534E0, (uint64_t (*)(uint64_t))sub_24184B768);
  sub_24184BB30(v102, v100, &qword_2571534F8, (uint64_t (*)(uint64_t))sub_24184B858);
  v103 = v128;
  sub_24184BB30(v83, v128, &qword_2571534E0, (uint64_t (*)(uint64_t))sub_24184B768);
  sub_24184B6B4();
  sub_24184BB30(v100, v103 + *(int *)(v104 + 48), &qword_2571534F8, (uint64_t (*)(uint64_t))sub_24184B858);
  sub_24184BD4C(v102, &qword_2571534F8, (uint64_t (*)(uint64_t))sub_24184B858);
  sub_24184BD4C(v85, &qword_2571534E0, (uint64_t (*)(uint64_t))sub_24184B768);
  sub_24184BD4C(v100, &qword_2571534F8, (uint64_t (*)(uint64_t))sub_24184B858);
  return sub_24184BD4C(v83, &qword_2571534E0, (uint64_t (*)(uint64_t))sub_24184B768);
}

uint64_t sub_24184B3D8()
{
  sub_2418A9990();
  sub_2418A8700();
  return swift_release();
}

uint64_t sub_24184B434()
{
  type metadata accessor for ExpandableInfoSectionHeader();
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  swift_retain();
  sub_2418A96CC();
  sub_2418A96D8();
  return swift_release();
}

uint64_t sub_24184B4FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  id v10;
  uint64_t result;
  uint64_t v12;

  v2 = sub_2418A91E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A9660();
  sub_2418A921C();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BDF17C8], v2);
  v8 = sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  KeyPath = swift_getKeyPath();
  v10 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  result = MEMORY[0x24269BDB4](v10);
  *a1 = v7;
  a1[1] = KeyPath;
  a1[2] = v8;
  a1[3] = result;
  return result;
}

void sub_24184B61C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571534C8)
  {
    sub_24172570C(255, &qword_2571534D0, (uint64_t (*)(uint64_t))sub_24184B6B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417406BC(&qword_257153520, &qword_2571534D0, (uint64_t (*)(uint64_t))sub_24184B6B4);
    v0 = sub_2418A972C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571534C8);
  }
}

void sub_24184B6B4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  unint64_t TupleTypeMetadata2;
  uint64_t v3;

  if (!qword_2571534D8)
  {
    v0 = MEMORY[0x24BDECC80];
    v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
    sub_241782A08(255, &qword_2571534E0, (uint64_t (*)(uint64_t))sub_24184B768, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_241782A08(255, &qword_2571534F8, (uint64_t (*)(uint64_t))sub_24184B858, v0, v1);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v3)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2571534D8);
  }
}

void sub_24184B768()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571534E8)
  {
    sub_24184B7E4();
    sub_24172887C(255, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571534E8);
  }
}

void sub_24184B7E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571534F0)
  {
    sub_2417F3DD4(255, (unint64_t *)&qword_257151750, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571534F0);
  }
}

void sub_24184B858()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153500)
  {
    sub_24184B8B8();
    sub_24184B954();
    v0 = sub_2418A9720();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153500);
  }
}

void sub_24184B8B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153508)
  {
    sub_2417F3DD4(255, (unint64_t *)&qword_257152AF0, (void (*)(uint64_t))sub_2417283A4);
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153508);
  }
}

unint64_t sub_24184B954()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153510;
  if (!qword_257153510)
  {
    sub_24184B8B8();
    v2 = v1;
    v3[0] = sub_24184B9BC();
    v3[1] = sub_241728524();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153510);
  }
  return result;
}

unint64_t sub_24184B9BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_257153518;
  if (!qword_257153518)
  {
    sub_2417F3DD4(255, (unint64_t *)&qword_257152AF0, (void (*)(uint64_t))sub_2417283A4);
    v2 = v1;
    v3 = sub_24172159C(&qword_25714C228, (uint64_t (*)(uint64_t))sub_2417283A4, MEMORY[0x24BDF1028]);
    v4[0] = MEMORY[0x24BDF40E8];
    v4[1] = v3;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257153518);
  }
  return result;
}

void sub_24184BA54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153530)
  {
    sub_24172570C(255, &qword_2571534D0, (uint64_t (*)(uint64_t))sub_24184B6B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153530);
  }
}

uint64_t sub_24184BAD0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_241782A08(0, a3, a4, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_24184BB30(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_241782A08(0, a3, a4, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_24184BB90()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  unint64_t TupleTypeMetadata3;
  uint64_t v3;

  if (!qword_257153538)
  {
    v0 = MEMORY[0x24BDECC80];
    v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
    sub_241782A08(255, &qword_257153528, (uint64_t (*)(uint64_t))sub_24184B61C, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_241782A08(255, &qword_257152AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4918], v0, v1);
    sub_24172570C(255, &qword_257153540, (uint64_t (*)(uint64_t))sub_24184BC6C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v3)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_257153538);
  }
}

void sub_24184BC6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153548)
  {
    sub_24172835C(255, &qword_25714E030, MEMORY[0x24BDF1FA8], MEMORY[0x24BDECC80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_241782A08(255, &qword_257151428, MEMORY[0x24BDEEBE0], MEMORY[0x24BDEEBD8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEFB28]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153548);
  }
}

uint64_t sub_24184BD10(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_241728A50(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24184BD4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_241782A08(0, a2, a3, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24184BD98(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_2417289EC(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24184BDD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714F5B8;
  if (!qword_25714F5B8)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714F5B0, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEEC90]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEECA0], v1);
    atomic_store(result, (unint64_t *)&qword_25714F5B8);
  }
  return result;
}

uint64_t sub_24184BE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for ExpandableInfoSectionHeader();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 24);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v6 = v3 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v7 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24184BF88()
{
  type metadata accessor for ExpandableInfoSectionHeader();
  return sub_24184B3D8();
}

uint64_t sub_24184BFBC()
{
  return sub_24184B434();
}

uint64_t sub_24184BFD4()
{
  return sub_2417406BC(&qword_257153550, qword_257153558, (uint64_t (*)(uint64_t))sub_24184BB90);
}

uint64_t *sub_24184C000(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v81 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      v80 = v8;
      v79 = v6;
      if (v81(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v13, v14, v15);
      *((_BYTE *)a1 + v11[6]) = *((_BYTE *)a2 + v11[6]);
      v17 = v11[7];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_2418A84E4();
      v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v78(v18, v19, v20);
      v21 = v11[8];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      if (v81((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v22, v23, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v7);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      if (v81((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v27, v28, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v7);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      if (v81((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v32, v33, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v7);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      if (v81((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v37, v38, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v7);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      if (v81((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v42, v43, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v7);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      if (v81((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v80;
      }
      else
      {
        v50 = v80;
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v47, v48, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v7);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      if (v81((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      if (v81((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      if (v81((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      if (v81((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      if (v81((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      v6 = v79;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
  }
  return a1;
}

