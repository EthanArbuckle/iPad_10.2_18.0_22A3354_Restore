_QWORD *sub_24184C9B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(_QWORD *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v79 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
    v78 = v7;
    if (v79(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v76(v16, v17, v18);
    v19 = v9[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v79((_QWORD *)((char *)a2 + v19), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v77 = a3;
    if (v79((_QWORD *)((char *)a2 + v24), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v79((_QWORD *)((char *)a2 + v29), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v30, 0, 1, v6);
    }
    v33 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    v34 = v9[11];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v79((_QWORD *)((char *)a2 + v34), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v35, 0, 1, v6);
    }
    v38 = _s6StylesV6SymbolVMa(0);
    v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    v39 = v9[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    if (v79((_QWORD *)((char *)a2 + v39), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v40, v41, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v40, 0, 1, v6);
    }
    v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v76(&v40[v43[7]], &v41[v43[7]], v18);
    v44 = v9[13];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v79((_QWORD *)((char *)a2 + v44), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v78;
    }
    else
    {
      v48 = v78;
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v45, v46, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v45, 0, 1, v6);
    }
    v49 = _s6StylesV5EmptyVMa(0);
    v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    v50 = v9[14];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    if (v79((_QWORD *)((char *)a2 + v50), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    v54 = _s6StylesV5DailyVMa(0);
    v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v9[15];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v79((_QWORD *)((char *)a2 + v55), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v77;
    v59 = _s6StylesV9MomentaryVMa(0);
    v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    v60 = v9[16];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    if (v79((_QWORD *)((char *)a2 + v60), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    v64 = _s6StylesV6HeaderVMa(0);
    v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    v65 = v9[17];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    if (v79((_QWORD *)((char *)a2 + v65), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    v69 = _s6StylesV11ChartButtonVMa(0);
    v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    v70 = v9[18];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    if (v79((_QWORD *)((char *)a2 + v70), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    v74 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_24184D334(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(_QWORD *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A8EB0();
      v7 = *(_QWORD *)(v6 - 8);
      v79 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
      v77 = a3;
      v78 = v7;
      if (v79(a2, 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2418A87B4();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
      v15 = v9[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_2418A84E4();
      v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v76(v16, v17, v18);
      v19 = v9[8];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (v79((_QWORD *)((char *)a2 + v19), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v20, v21, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v20, 0, 1, v6);
      }
      v23 = _s6StylesV8TimelineVMa(0);
      v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      v24 = v9[9];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      if (v79((_QWORD *)((char *)a2 + v24), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v25, v26, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v25, 0, 1, v6);
      }
      v28 = _s6StylesV6NoDataVMa(0);
      v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      v29 = v9[10];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      if (v79((_QWORD *)((char *)a2 + v29), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v30, v31, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v30, 0, 1, v6);
      }
      v33 = _s6StylesV11PlaceholderVMa(0);
      v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
      v34 = v9[11];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      if (v79((_QWORD *)((char *)a2 + v34), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v35, v36, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v35, 0, 1, v6);
      }
      v38 = _s6StylesV6SymbolVMa(0);
      v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
      v39 = v9[12];
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      if (v79((_QWORD *)((char *)a2 + v39), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v40, v41, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v40, 0, 1, v6);
      }
      v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v14(&v40[v43[5]], &v41[v43[5]], v13);
      v40[v43[6]] = v41[v43[6]];
      v76(&v40[v43[7]], &v41[v43[7]], v18);
      v44 = v9[13];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      if (v79((_QWORD *)((char *)a2 + v44), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v78;
      }
      else
      {
        v48 = v78;
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v45, v46, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v45, 0, 1, v6);
      }
      v49 = _s6StylesV5EmptyVMa(0);
      v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      v50 = v9[14];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      if (v79((_QWORD *)((char *)a2 + v50), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
      }
      v54 = _s6StylesV5DailyVMa(0);
      v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v9[15];
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      if (v79((_QWORD *)((char *)a2 + v55), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
      }
      v59 = _s6StylesV9MomentaryVMa(0);
      v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
      v60 = v9[16];
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      if (v79((_QWORD *)((char *)a2 + v60), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
      }
      v64 = _s6StylesV6HeaderVMa(0);
      v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
      v65 = v9[17];
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      if (v79((_QWORD *)((char *)a2 + v65), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
      }
      v69 = _s6StylesV11ChartButtonVMa(0);
      v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
      v70 = v9[18];
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      if (v79((_QWORD *)((char *)a2 + v70), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
      }
      v74 = _s6StylesV15LogButtonFooterVMa(0);
      v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
      a3 = v77;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

char *sub_24184DCC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    v80 = v9;
    if (v81(a2, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2418A87B4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    v17 = v11[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_2418A84E4();
    v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
    v78(v18, v19, v20);
    v21 = v11[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (v81(&a2[v21], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v22, v23, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v8);
    }
    v25 = _s6StylesV8TimelineVMa(0);
    v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    v26 = v11[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v79 = a3;
    if (v81(&a2[v26], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v27, v28, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v8);
    }
    v30 = _s6StylesV6NoDataVMa(0);
    v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    v31 = v11[10];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (v81(&a2[v31], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v32, v33, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v8);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    v36 = v11[11];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if (v81(&a2[v36], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v37, v38, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v8);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    v41 = v11[12];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v81(&a2[v41], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v42, v43, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v8);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v16(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v78(&v42[v45[7]], &v43[v45[7]], v20);
    v46 = v11[13];
    v47 = &a1[v46];
    v48 = &a2[v46];
    if (v81(&a2[v46], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = v80;
    }
    else
    {
      v50 = v80;
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v47, v48, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v8);
    }
    v51 = _s6StylesV5EmptyVMa(0);
    v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    v52 = v11[14];
    v53 = &a1[v52];
    v54 = &a2[v52];
    if (v81(&a2[v52], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    v56 = _s6StylesV5DailyVMa(0);
    v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = v11[15];
    v58 = &a1[v57];
    v59 = &a2[v57];
    if (v81(&a2[v57], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v79;
    v61 = _s6StylesV9MomentaryVMa(0);
    v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    v62 = v11[16];
    v63 = &a1[v62];
    v64 = &a2[v62];
    if (v81(&a2[v62], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    v66 = _s6StylesV6HeaderVMa(0);
    v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    v67 = v11[17];
    v68 = &a1[v67];
    v69 = &a2[v67];
    if (v81(&a2[v67], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    v71 = _s6StylesV11ChartButtonVMa(0);
    v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    v72 = v11[18];
    v73 = &a1[v72];
    v74 = &a2[v72];
    if (v81(&a2[v72], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    v76 = _s6StylesV15LogButtonFooterVMa(0);
    v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_24184E640(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A8EB0();
      v9 = *(_QWORD *)(v8 - 8);
      v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      v79 = a3;
      v80 = v9;
      if (v81(a2, 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      v17 = v11[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_2418A84E4();
      v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
      v78(v18, v19, v20);
      v21 = v11[8];
      v22 = &a1[v21];
      v23 = &a2[v21];
      if (v81(&a2[v21], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v22, v23, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v8);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = &a1[v26];
      v28 = &a2[v26];
      if (v81(&a2[v26], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v27, v28, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v8);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = &a1[v31];
      v33 = &a2[v31];
      if (v81(&a2[v31], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v32, v33, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v8);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = &a1[v36];
      v38 = &a2[v36];
      if (v81(&a2[v36], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v37, v38, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v8);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = &a1[v41];
      v43 = &a2[v41];
      if (v81(&a2[v41], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v42, v43, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v8);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = &a1[v46];
      v48 = &a2[v46];
      if (v81(&a2[v46], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v80;
      }
      else
      {
        v50 = v80;
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v47, v48, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v8);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = &a1[v52];
      v54 = &a2[v52];
      if (v81(&a2[v52], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = &a1[v57];
      v59 = &a2[v57];
      if (v81(&a2[v57], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = &a1[v62];
      v64 = &a2[v62];
      if (v81(&a2[v62], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = &a1[v67];
      v69 = &a2[v67];
      if (v81(&a2[v67], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = &a1[v72];
      v74 = &a2[v72];
      if (v81(&a2[v72], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      a3 = v79;
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_24184EFC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24184EFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_24184F078()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24184F084(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
}

uint64_t _s20EntryPlaceholderViewVMa()
{
  uint64_t result;

  result = qword_2571535B8;
  if (!qword_2571535B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24184F150()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24184F1D8()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_24184F1E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id result;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[14];
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  __int128 v62;
  __int128 v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  __int128 v69;

  v2 = v1;
  v50 = a1;
  sub_24184FADC();
  v46 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v49 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v44 - v13;
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v44 - v16;
  sub_24184FCA8();
  v45 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24184FDC0(0);
  v47 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v48 = (uint64_t)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_2418A8C58();
  v26 = sub_2418A90D8();
  sub_241860D60((uint64_t)v17);
  sub_24172588C((uint64_t)v17, type metadata accessor for StateOfMindTimeline.Styles);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v28 = result;
    objc_msgSend(result, sel_isiPad);

    sub_2418A9960();
    sub_2418A861C();
    v58 = v25;
    v59 = 0;
    v60 = 0;
    v61 = v26;
    v62 = 0u;
    v63 = 0u;
    v64 = 1;
    v65 = v53;
    v66 = v54;
    v67 = v55;
    v68 = v56;
    v69 = v57;
    sub_241860D60((uint64_t)v14);
    sub_24172588C((uint64_t)v14, type metadata accessor for StateOfMindTimeline.Styles);
    sub_2418A9960();
    sub_24185F17C(0.0, 1, 0.0, 1, 373.0, 0, 0.0, 1, (uint64_t)v51, 0.0, 1, 0.0, 1);
    v29 = sub_2418A9960();
    v31 = v30;
    sub_24184F60C(v2, (uint64_t)v6);
    v32 = (uint64_t *)&v6[*(int *)(v46 + 36)];
    *v32 = v29;
    v32[1] = v31;
    sub_2417289A8((uint64_t)v6, (uint64_t)&v21[*(int *)(v45 + 36)], (uint64_t (*)(_QWORD))sub_24184FADC);
    v33 = v51[13];
    *((_OWORD *)v21 + 12) = v51[12];
    *((_OWORD *)v21 + 13) = v33;
    *((_QWORD *)v21 + 28) = v52;
    v34 = v51[9];
    *((_OWORD *)v21 + 8) = v51[8];
    *((_OWORD *)v21 + 9) = v34;
    v35 = v51[11];
    *((_OWORD *)v21 + 10) = v51[10];
    *((_OWORD *)v21 + 11) = v35;
    v36 = v51[5];
    *((_OWORD *)v21 + 4) = v51[4];
    *((_OWORD *)v21 + 5) = v36;
    v37 = v51[7];
    *((_OWORD *)v21 + 6) = v51[6];
    *((_OWORD *)v21 + 7) = v37;
    v38 = v51[1];
    *(_OWORD *)v21 = v51[0];
    *((_OWORD *)v21 + 1) = v38;
    v39 = v51[3];
    *((_OWORD *)v21 + 2) = v51[2];
    *((_OWORD *)v21 + 3) = v39;
    sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))sub_24184FADC);
    sub_241860D60((uint64_t)v14);
    sub_24172588C((uint64_t)v14, type metadata accessor for StateOfMindTimeline.Styles);
    sub_2418A9600();
    v40 = sub_2418A9624();
    swift_release();
    v41 = v49;
    sub_241860D60(v49);
    sub_24172588C(v41, type metadata accessor for StateOfMindTimeline.Styles);
    v42 = v48;
    sub_2417289A8((uint64_t)v21, v48, (uint64_t (*)(_QWORD))sub_24184FCA8);
    v43 = (uint64_t *)(v42 + *(int *)(v47 + 36));
    *v43 = v40;
    v43[1] = 0x4028000000000000;
    v43[2] = 0;
    v43[3] = 0;
    sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))sub_24184FCA8);
    return (id)sub_241731B4C(v42, v50, (uint64_t (*)(_QWORD))sub_24184FDC0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24184F60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  uint64_t v33;
  __int128 v34;

  v4 = sub_2418A88BC();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (_OWORD *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v33 - v14;
  sub_24184FB3C();
  v17 = v16;
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241860D60((uint64_t)v15);
  sub_24172588C((uint64_t)v15, type metadata accessor for StateOfMindTimeline.Styles);
  v21 = (char *)v7 + *(int *)(v4 + 20);
  v22 = *MEMORY[0x24BDEEB68];
  v23 = sub_2418A8BE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);
  __asm { FMOV            V0.2D, #18.0 }
  *v7 = _Q0;
  if (*(_BYTE *)(a1 + *(int *)(_s20EntryPlaceholderViewVMa() + 20)) == 1)
  {
    sub_24184F83C(&v34);
  }
  else
  {
    sub_241860D60((uint64_t)v12);
    sub_24172588C((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
    v29 = objc_msgSend((id)objc_opt_self(), sel_systemGray5Color);
    *(_QWORD *)&v34 = MEMORY[0x24269BE5C](v29);
  }
  v30 = sub_2418A8628();
  v31 = MEMORY[0x24BDED998];
  sub_2417289A8((uint64_t)v7, (uint64_t)v20, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_QWORD *)&v20[*(int *)(v17 + 36)] = v30;
  sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))v31);
  return sub_241731B4C((uint64_t)v20, a2, (uint64_t (*)(_QWORD))sub_24184FB3C);
}

double sub_24184F83C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  __int128 v24;
  _OWORD *v25;
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v27 = a1;
  v28 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v2 = MEMORY[0x24BDAC7A8](v28, v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2, v5);
  v7 = (char *)&v26 - v6;
  v8 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)&v26 - v15;
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v26 - v18;
  sub_24184FDDC();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_2418D1940;
  sub_241860D60((uint64_t)v19);
  sub_24172588C((uint64_t)v19, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A95F4();
  sub_2418A9624();
  swift_release();
  *(_QWORD *)(v20 + 32) = sub_2418A9900();
  *(_QWORD *)(v20 + 40) = v21;
  sub_241860D60((uint64_t)v16);
  sub_2417289A8((uint64_t)&v16[*(int *)(v8 + 48)], (uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_24172588C((uint64_t)v16, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2417CC290();
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_241860D60((uint64_t)v12);
  sub_2417289A8((uint64_t)&v12[*(int *)(v8 + 48)], (uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_24172588C((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  sub_24172588C((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  *(_QWORD *)(v20 + 48) = sub_2418A9900();
  *(_QWORD *)(v20 + 56) = v22;
  MEMORY[0x24269C114](v20);
  sub_2418A99FC();
  sub_2418A9A08();
  sub_2418A873C();
  result = *(double *)&v29;
  v24 = v30;
  v25 = v27;
  *v27 = v29;
  v25[1] = v24;
  *((_QWORD *)v25 + 4) = v31;
  return result;
}

void sub_24184FADC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571535F0)
  {
    sub_24184FB3C();
    sub_24184FBC0();
    v0 = sub_2418A8D18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571535F0);
  }
}

void sub_24184FB3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571535F8)
  {
    sub_2418A88BC();
    sub_24172835C(255, &qword_257153600, MEMORY[0x24BDEBF80], MEMORY[0x24BDEBF68], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571535F8);
  }
}

unint64_t sub_24184FBC0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153608;
  if (!qword_257153608)
  {
    sub_24184FB3C();
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714C480, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED988]);
    v3[1] = sub_24184FC40();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153608);
  }
  return result;
}

unint64_t sub_24184FC40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257153610;
  if (!qword_257153610)
  {
    sub_24172835C(255, &qword_257153600, MEMORY[0x24BDEBF80], MEMORY[0x24BDEBF68], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF0710], v1);
    atomic_store(result, (unint64_t *)&qword_257153610);
  }
  return result;
}

void sub_24184FCA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153618)
  {
    sub_24184FD0C(255);
    sub_24184FADC();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153618);
  }
}

void sub_24184FD0C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153620, sub_24184FD28);
}

void sub_24184FD28(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153628, (void (*)(uint64_t))sub_24184FD44);
}

void sub_24184FD44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153630)
  {
    sub_24172835C(255, &qword_257153638, MEMORY[0x24BDF5158], MEMORY[0x24BDF5138], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153630);
  }
}

void sub_24184FDC0(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153640, (void (*)(uint64_t))sub_24184FCA8);
}

void sub_24184FDDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153648)
  {
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153648);
  }
}

uint64_t sub_24184FE30()
{
  return sub_241721DF8(&qword_257153650, (uint64_t (*)(uint64_t))sub_24184FDC0, (uint64_t (*)(void))sub_24184FE64, MEMORY[0x24BDEC468]);
}

unint64_t sub_24184FE64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153658;
  if (!qword_257153658)
  {
    sub_24184FCA8();
    v2 = v1;
    v3[0] = sub_241721DF8(&qword_257153660, (uint64_t (*)(uint64_t))sub_24184FD0C, sub_24184FF04, MEMORY[0x24BDEDBB8]);
    v3[1] = sub_24172159C(qword_257153680, (uint64_t (*)(uint64_t))sub_24184FADC, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153658);
  }
  return result;
}

uint64_t sub_24184FF04()
{
  return sub_241721DF8(&qword_257153668, (uint64_t (*)(uint64_t))sub_24184FD28, sub_24184FF28, MEMORY[0x24BDEBEE0]);
}

uint64_t sub_24184FF28()
{
  return sub_241721DF8(&qword_257153670, (uint64_t (*)(uint64_t))sub_24184FD44, (uint64_t (*)(void))sub_24184FF4C, MEMORY[0x24BDECC60]);
}

unint64_t sub_24184FF4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257153678;
  if (!qword_257153678)
  {
    sub_24172835C(255, &qword_257153638, MEMORY[0x24BDF5158], MEMORY[0x24BDF5138], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_257153678);
  }
  return result;
}

_QWORD *sub_24184FFB4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    v7 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = v7;
    v8 = *(int *)(a3 + 24);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_2418A8688();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    swift_retain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 28);
    v14 = (_QWORD *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_2418A8EB0();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v20 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v21 = (char *)v14 + v20;
      v22 = (char *)v15 + v20;
      v23 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_2418501B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2418A8688();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2418A8EB0();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v6 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
  v10 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t sub_2418502C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2418A8688();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2418A8EB0();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v19 = (char *)v13 + v18;
    v20 = (char *)v14 + v18;
    v21 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_241850494(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2418A8688();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 28);
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v11, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2418A8EB0();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v12, v13, v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v19 = (char *)v12 + v18;
      v20 = (char *)v13 + v18;
      v21 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_241850680(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2418A8688();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v15 = v14;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_2418A8EB0();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v13, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    }
    v19 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v20 = &v12[v19];
    v21 = &v13[v19];
    v22 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_241850818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2418A8688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 28);
    v12 = (char *)(a1 + v11);
    v13 = (char *)(a2 + v11);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60(a1 + v11, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v14);
    v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2418A8EB0();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v13, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
      }
      v20 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v21 = &v12[v20];
      v22 = &v13[v20];
      v23 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2418509F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2418509FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2418A8688();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_241850AB4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241850AC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_2418A8688();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for NotificationsSetupPhaseContent()
{
  uint64_t result;

  result = qword_2571536E0;
  if (!qword_2571536E0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241850BB0()
{
  unint64_t v0;
  unint64_t v1;

  sub_2418A8688();
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_241850C64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241850C74@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  unsigned int v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char v108;
  double v109;
  char *v110;
  char *v111;
  char *v112;
  char v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  double *v142;
  int *v143;
  int *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v157;
  uint64_t v158;
  unsigned int v159;
  void (*v160)(char *, uint64_t, uint64_t);
  unsigned int v161;
  void (*v162)(uint64_t, uint64_t);
  void (*v163)(uint64_t, uint64_t, uint64_t);
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  double *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;

  v179 = a2;
  v3 = type metadata accessor for NotificationsSetupPhaseContent();
  v170 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v171 = v5;
  v173 = (uint64_t)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = type metadata accessor for ReminderView(0);
  MEMORY[0x24BDAC7A8](v174, v6);
  v176 = (uint64_t *)((char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241851DC4(0);
  v175 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v178 = (uint64_t)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728250(0, &qword_257153740, sub_241851DA8, (void (*)(uint64_t))sub_2417E8538);
  v177 = v11;
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v188 = (uint64_t)&v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v187 = (uint64_t)&v157 - v16;
  v184 = sub_2418A91E0();
  v182 = *(_QWORD *)(v184 - 8);
  v18 = MEMORY[0x24BDAC7A8](v184, v17);
  v168 = (char *)&v157 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v169 = (char *)&v157 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v180 = (char *)&v157 - v25;
  MEMORY[0x24BDAC7A8](v24, v26);
  v181 = (uint64_t)&v157 - v27;
  v28 = type metadata accessor for LoggingFlowBlendMode();
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v32 = (uint64_t *)((char *)&v157 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v30, v33);
  v35 = (char *)&v157 - v34;
  sub_24172570C(0, &qword_25714CD68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)&v157 - v38;
  sub_241728250(0, &qword_257152AE0, (void (*)(uint64_t))sub_24183664C, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  v185 = (char *)v40;
  v42 = MEMORY[0x24BDAC7A8](v40, v41);
  v44 = (char *)&v157 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42, v45);
  v47 = (char *)&v157 - v46;
  v183 = type metadata accessor for NotificationsSetupPhaseSpecs();
  v49 = MEMORY[0x24BDAC7A8](v183, v48);
  v166 = (uint64_t)&v157 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x24BDAC7A8](v49, v51);
  v165 = (uint64_t)&v157 - v53;
  MEMORY[0x24BDAC7A8](v52, v54);
  v56 = (char *)&v157 - v55;
  sub_2418A8670();
  v58 = v57;
  v59 = *(int *)(v3 + 28);
  v172 = a1;
  v60 = a1 + v59;
  sub_2418617E4((uint64_t)v56);
  sub_24172588C((uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  v61 = sub_2418A9660();
  sub_2418617E4((uint64_t)v56);
  sub_24172588C((uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_2418A918C();
  v62 = sub_2418A9174();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v39, 1, 1, v62);
  v63 = sub_2418A91A4();
  sub_24173FC60((uint64_t)v39, &qword_25714CD68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  KeyPath = swift_getKeyPath();
  LODWORD(a1) = sub_2418A8E74();
  *v32 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  sub_241731B4C((uint64_t)v32, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  sub_2417289A8((uint64_t)v35, (uint64_t)&v44[*((int *)v185 + 9)], (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  *(_QWORD *)v44 = v61;
  *((_QWORD *)v44 + 1) = KeyPath;
  *((_QWORD *)v44 + 2) = v63;
  *((_DWORD *)v44 + 6) = a1;
  sub_24172588C((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  v185 = v47;
  v186 = v44;
  sub_241851F78((uint64_t)v44, (uint64_t)v47, &qword_257152AE0, (void (*)(uint64_t))sub_24183664C, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  sub_2418617E4((uint64_t)v56);
  v167 = v56;
  sub_24172588C((uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  if (qword_25714B958 != -1)
    swift_once();
  v65 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v66 = sub_2418A7EFC();
  v68 = v67;
  swift_bridgeObjectRelease();

  v189 = v66;
  v190 = v68;
  v164 = sub_241721040();
  v69 = sub_2418A92D0();
  v158 = v70;
  v72 = v71 & 1;
  v73 = v165;
  v74 = v60;
  sub_2418617E4(v165);
  sub_2418A9168();
  v75 = sub_2418A879C();
  v76 = v182;
  v77 = *(void (**)(char *, uint64_t, uint64_t))(v182 + 104);
  v160 = v77;
  v78 = *MEMORY[0x24BDF17C8];
  v159 = *MEMORY[0x24BDF17C8];
  v79 = *MEMORY[0x24BDF17D0];
  v161 = *MEMORY[0x24BDF17D0];
  if ((v75 & 1) != 0)
    v80 = v78;
  else
    v80 = v79;
  v81 = (uint64_t)v180;
  v82 = v184;
  v77(v180, v80, v184);
  v163 = *(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 32);
  v83 = v181;
  v163(v181, v81, v82);
  sub_2418A91F8();
  swift_release();
  v162 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v162(v83, v82);
  sub_24172588C(v73, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  v84 = v158;
  v85 = sub_2418A9294();
  v87 = v86;
  v89 = v88 & 1;
  sub_2417289EC(v69, v84, v72);
  swift_release();
  swift_bridgeObjectRelease();
  v90 = sub_2418A9288();
  v180 = (char *)v91;
  v181 = v90;
  LODWORD(v158) = v92;
  v182 = v93;
  sub_2417289EC(v85, v87, v89);
  swift_bridgeObjectRelease();
  v165 = swift_getKeyPath();
  v94 = (uint64_t)v167;
  v157 = v74;
  sub_2418617E4((uint64_t)v167);
  sub_24172588C(v94, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  v95 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v96 = sub_2418A7EFC();
  v98 = v97;
  swift_bridgeObjectRelease();

  v189 = v96;
  v190 = v98;
  v99 = sub_2418A92D0();
  v101 = v100;
  v103 = v102;
  v104 = v166;
  sub_2418617E4(v166);
  sub_2418A9144();
  if ((sub_2418A879C() & 1) != 0)
    v105 = v159;
  else
    v105 = v161;
  v106 = v168;
  v107 = v184;
  v160(v168, v105, v184);
  v108 = v103 & 1;
  LODWORD(v183) = v158 & 1;
  v109 = v58 * 0.09;
  v110 = v169;
  v163((uint64_t)v169, (uint64_t)v106, v107);
  sub_2418A91F8();
  swift_release();
  v162((uint64_t)v110, v107);
  sub_24172588C(v104, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  v166 = sub_2418A9294();
  v169 = v111;
  v168 = v112;
  LODWORD(v164) = v113 & 1;
  sub_2417289EC(v99, v101, v108);
  swift_release();
  swift_bridgeObjectRelease();
  v184 = swift_getKeyPath();
  sub_2418617E4(v94);
  sub_24172588C(v94, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  v114 = v173;
  sub_2417289A8(v172, v173, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseContent);
  v115 = (*(unsigned __int8 *)(v170 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80);
  v116 = swift_allocObject();
  sub_241731B4C(v114, v116 + v115, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseContent);
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  swift_retain();
  v117 = sub_2418A8760();
  v118 = v176;
  *v176 = v117;
  v118[1] = v119;
  v118[2] = (uint64_t)sub_241851F38;
  v118[3] = v116;
  v118[4] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE65DF0]), sel_init);
  v120 = (uint64_t *)((char *)v118 + *(int *)(v174 + 28));
  *v120 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v120) = sub_2418A90D8();
  sub_2418A84A8();
  v122 = v121;
  v124 = v123;
  v126 = v125;
  v128 = v127;
  v129 = v178;
  sub_2417289A8((uint64_t)v118, v178, type metadata accessor for ReminderView);
  v130 = v129 + *(int *)(v175 + 36);
  *(_BYTE *)v130 = (_BYTE)v120;
  *(_QWORD *)(v130 + 8) = v122;
  *(_QWORD *)(v130 + 16) = v124;
  *(_QWORD *)(v130 + 24) = v126;
  *(_QWORD *)(v130 + 32) = v128;
  *(_BYTE *)(v130 + 40) = 0;
  sub_24172588C((uint64_t)v118, type metadata accessor for ReminderView);
  v131 = sub_2418A996C();
  v132 = v188;
  sub_24185F340(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v188, 0.0, 1, 0.0, 1, v131, v133);
  v134 = sub_2418A9960();
  v136 = v135;
  v137 = v132 + *(int *)(v177 + 36);
  sub_2417E5CFC(v137);
  sub_2417E8538();
  v139 = (uint64_t *)(v137 + *(int *)(v138 + 36));
  *v139 = v134;
  v139[1] = v136;
  sub_24172588C(v129, (uint64_t (*)(_QWORD))sub_241851DC4);
  v140 = v187;
  sub_241851F78(v132, v187, &qword_257153740, sub_241851DA8, (void (*)(uint64_t))sub_2417E8538);
  v141 = (uint64_t)v186;
  sub_241728BBC((uint64_t)v185, (uint64_t)v186, &qword_257152AE0, (void (*)(uint64_t))sub_24183664C, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  LOBYTE(v129) = v183;
  LOBYTE(v189) = v183;
  sub_241728BBC(v140, v132, &qword_257153740, sub_241851DA8, (void (*)(uint64_t))sub_2417E8538);
  v142 = v179;
  *v179 = v109;
  *((_BYTE *)v142 + 8) = 0;
  sub_241851C48();
  v144 = v143;
  sub_241728BBC(v141, (uint64_t)v142 + v143[12], &qword_257152AE0, (void (*)(uint64_t))sub_24183664C, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  v145 = (char *)v142 + v144[16];
  *(_QWORD *)v145 = 0x4034000000000000;
  v145[8] = 0;
  v146 = (char *)v142 + v144[20];
  v147 = (uint64_t)v180;
  v148 = v181;
  *(_QWORD *)v146 = v181;
  *((_QWORD *)v146 + 1) = v147;
  v146[16] = v129;
  *((_QWORD *)v146 + 3) = v182;
  *((_WORD *)v146 + 16) = 256;
  *((_QWORD *)v146 + 5) = v165;
  v146[48] = 1;
  v149 = (char *)v142 + v144[24];
  *(_QWORD *)v149 = 0x402E000000000000;
  v149[8] = 0;
  v150 = (char *)v142 + v144[28];
  v151 = v166;
  v152 = (uint64_t)v169;
  *(_QWORD *)v150 = v166;
  *((_QWORD *)v150 + 1) = v152;
  LOBYTE(v134) = v164;
  v150[16] = v164;
  *((_QWORD *)v150 + 3) = v168;
  *((_WORD *)v150 + 16) = 256;
  *((_QWORD *)v150 + 5) = v184;
  v150[48] = 1;
  v153 = (char *)v142 + v144[32];
  *(_QWORD *)v153 = 0x402E000000000000;
  v153[8] = 0;
  v154 = (uint64_t)v142 + v144[36];
  v155 = v188;
  sub_241728BBC(v188, v154, &qword_257153740, sub_241851DA8, (void (*)(uint64_t))sub_2417E8538);
  sub_241728A50(v148, v147, v183);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_241728A50(v151, v152, v134);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_241728C0C(v187, &qword_257153740, sub_241851DA8, (void (*)(uint64_t))sub_2417E8538);
  sub_241728C0C((uint64_t)v185, &qword_257152AE0, (void (*)(uint64_t))sub_24183664C, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  sub_241728C0C(v155, &qword_257153740, sub_241851DA8, (void (*)(uint64_t))sub_2417E8538);
  sub_2417289EC(v151, v152, v134);
  swift_release();
  swift_bridgeObjectRelease();
  sub_2417289EC(v181, (uint64_t)v180, v189);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_241728C0C((uint64_t)v186, &qword_257152AE0, (void (*)(uint64_t))sub_24183664C, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
}

uint64_t sub_241851B8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2418A8C58();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_241851BCC();
  return sub_241850C74(v1, (double *)(a1 + *(int *)(v3 + 44)));
}

void sub_241851BCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153720)
  {
    sub_24172570C(255, &qword_257153728, (uint64_t (*)(uint64_t))sub_241851C48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153720);
  }
}

void sub_241851C48()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_257153730)
  {
    sub_241728250(255, &qword_257152AE0, (void (*)(uint64_t))sub_24183664C, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    sub_241851D0C();
    sub_241728250(255, &qword_257153740, sub_241851DA8, (void (*)(uint64_t))sub_2417E8538);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_257153730);
  }
}

void sub_241851D0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153738)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714CD98, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEDBA0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24172887C(255, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153738);
  }
}

void sub_241851DA8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153748, sub_241851DC4);
}

void sub_241851DC4(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153750, (void (*)(uint64_t))type metadata accessor for ReminderView);
}

uint64_t sub_241851DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for NotificationsSetupPhaseContent();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 24);
  v5 = sub_2418A8688();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v3 + *(int *)(v1 + 28);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A8EB0();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v9 = v6 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v10 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241851F38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NotificationsSetupPhaseContent() - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 16))();
}

uint64_t sub_241851F78(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v7;

  sub_241728250(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_241851FC8()
{
  return sub_24172159C(&qword_257153758, (uint64_t (*)(uint64_t))sub_241851FF4, MEMORY[0x24BDF4700]);
}

void sub_241851FF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153760)
  {
    sub_24172570C(255, &qword_257153728, (uint64_t (*)(uint64_t))sub_241851C48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_24185206C();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153760);
  }
}

unint64_t sub_24185206C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257153768;
  if (!qword_257153768)
  {
    sub_24172570C(255, &qword_257153728, (uint64_t (*)(uint64_t))sub_241851C48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257153768);
  }
  return result;
}

uint64_t *sub_2418520CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2418A8130();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2418521C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241852238(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241852300(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_24185240C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_241852490(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_24185255C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241852568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2418A8130();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2418525E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2418525F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2418A8130();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t _s5EntryVMa()
{
  uint64_t result;

  result = qword_2571537C8;
  if (!qword_2571537C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2418526AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2418A8130();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241852730()
{
  return sub_24172159C(&qword_25714F120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_24185275C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_24183D5AC(0, v1, 0);
    v2 = v13;
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      v5 = (id)HKUILocalizedStringForStateOfMindDomain();
      v6 = sub_2418A9DE0();
      v8 = v7;

      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      if (v10 >= v9 >> 1)
        sub_24183D5AC(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

int *sub_241852844@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *result;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_2418A8130();
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_UUID);
  sub_2418A8124();

  v9 = objc_msgSend(a1, sel_reflectiveInterval);
  if (v9 == (id)2)
  {
    objc_msgSend(a1, sel_valenceClassification);
    objc_msgSend(a1, sel_reflectiveInterval);
    v10 = (void *)HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
  }
  else
  {
    if (v9 != (id)1)
    {
      v31 = 0;
      v13 = 0xE000000000000000;
      goto LABEL_7;
    }
    objc_msgSend(a1, sel_valenceClassification);
    v10 = (void *)HKUILocalizedStringForValenceClassification();
  }
  v11 = v10;
  v31 = sub_2418A9DE0();
  v13 = v12;

LABEL_7:
  v14 = sub_241852C2C();
  v16 = v15;
  v17 = sub_241852D78();
  v19 = v18;
  v20 = sub_241852FC4();
  v22 = v21;
  objc_msgSend(a1, sel_valence);
  v24 = v23;

  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(a2, v7, v33);
  result = (int *)_s5EntryVMa();
  v26 = (uint64_t *)(a2 + result[5]);
  *v26 = v31;
  v26[1] = v13;
  v27 = (uint64_t *)(a2 + result[6]);
  *v27 = v14;
  v27[1] = v16;
  v28 = (uint64_t *)(a2 + result[7]);
  *v28 = v17;
  v28[1] = v19;
  v29 = (uint64_t *)(a2 + result[8]);
  *v29 = v20;
  v29[1] = v22;
  *(_QWORD *)(a2 + result[9]) = v24;
  return result;
}

uint64_t sub_241852A14()
{
  sub_2418A8130();
  sub_24172159C(&qword_25714F120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2418A9D44();
  _s5EntryVMa();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA590();
}

uint64_t sub_241852B50()
{
  sub_2418AA56C();
  sub_241852A14();
  return sub_2418AA59C();
}

uint64_t sub_241852B90()
{
  sub_2418AA56C();
  sub_241852A14();
  return sub_2418AA59C();
}

uint64_t sub_241852BC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2418A8130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_241852C00()
{
  return sub_24172159C(qword_257153810, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t)&unk_2418D9A38);
}

uint64_t sub_241852C2C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v0 = sub_2418AA014();
  sub_2417A8280(v0);
  swift_bridgeObjectRelease();
  if (qword_25714B958 != -1)
    swift_once();
  v1 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  sub_241773FD4();
  sub_24172159C((unint64_t *)&qword_2543915D8, (uint64_t (*)(uint64_t))sub_241773FD4, MEMORY[0x24BEE12B0]);
  v2 = sub_2418A9D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_241852D78()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v21;

  sub_24172570C(0, &qword_257151E78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v21 - v3;
  v5 = *(_QWORD *)(sub_2418AA020() + 16);
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v0, sel_context);
  if (!v6)
  {
    if (!v5)
      return 0;
    return sub_241853260();
  }
  v7 = v6;
  v8 = sub_2418A9DE0();
  v10 = v9;

  if (!v5)
  {
    if (v10)
      return v8;
    else
      return 0;
  }
  if (!v10)
    return sub_241853260();
  v11 = sub_2418A8148();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_24172570C(0, (unint64_t *)&qword_257151E80, (uint64_t (*)(uint64_t))sub_2418534D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2418D1940;
  v13 = sub_241853260();
  v15 = v14;
  v16 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
  v17 = sub_24180E478();
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  *(_QWORD *)(v12 + 96) = v16;
  *(_QWORD *)(v12 + 104) = v17;
  *(_QWORD *)(v12 + 64) = v17;
  *(_QWORD *)(v12 + 72) = v8;
  *(_QWORD *)(v12 + 80) = v10;
  if (qword_25714B958 != -1)
    swift_once();
  v18 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  v19 = sub_2418A9DEC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_241853528((uint64_t)v4);
  return v19;
}

uint64_t sub_241852FC4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v2 = sub_2418A8034();
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2418A7FF8();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2418A8004();
  v34 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2418A807C();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v23 = (char *)&v34 - v22;
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v34 - v25;
  v27 = sub_2418A8100();
  v38 = *(_QWORD *)(v27 - 8);
  v39 = v27;
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = objc_msgSend(v1, sel_startDate);
  sub_2418A80C4();

  MEMORY[0x24269A530]();
  sub_2418A7FEC();
  sub_2418A7FE0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v37);
  sub_2418A7FB0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
  v32 = *(void (**)(char *, uint64_t))(v15 + 8);
  v32(v19, v14);
  sub_2418A8028();
  sub_2418A8064();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v41);
  v32(v23, v14);
  sub_24172159C(&qword_25714F118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
  sub_2418A80E8();
  v32(v26, v14);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v39);
  return v42;
}

uint64_t sub_241853260()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v0 = sub_2418AA020();
  sub_24185275C(v0);
  swift_bridgeObjectRelease();
  if (qword_25714B958 != -1)
    swift_once();
  v1 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  sub_241773FD4();
  sub_24172159C((unint64_t *)&qword_2543915D8, (uint64_t (*)(uint64_t))sub_241773FD4, MEMORY[0x24BEE12B0]);
  v2 = sub_2418A9D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

BOOL sub_2418533AC(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char v29;

  if ((sub_2418A8118() & 1) == 0)
    return 0;
  v4 = (int *)_s5EntryVMa();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_2418AA4DC(), result = 0, (v10 & 1) != 0))
  {
    v12 = v4[6];
    v13 = *(_QWORD *)(a1 + v12);
    v14 = *(_QWORD *)(a1 + v12 + 8);
    v15 = (_QWORD *)(a2 + v12);
    v16 = v13 == *v15 && v14 == v15[1];
    if (v16 || (v17 = sub_2418AA4DC(), result = 0, (v17 & 1) != 0))
    {
      v18 = v4[7];
      v19 = *(_QWORD *)(a1 + v18);
      v20 = *(_QWORD *)(a1 + v18 + 8);
      v21 = (_QWORD *)(a2 + v18);
      v22 = v19 == *v21 && v20 == v21[1];
      if (v22 || (v23 = sub_2418AA4DC(), result = 0, (v23 & 1) != 0))
      {
        v24 = v4[8];
        v25 = *(_QWORD *)(a1 + v24);
        v26 = *(_QWORD *)(a1 + v24 + 8);
        v27 = (_QWORD *)(a2 + v24);
        if (v25 == *v27 && v26 == v27[1])
          return *(double *)(a1 + v4[9]) == *(double *)(a2 + v4[9]);
        v29 = sub_2418AA4DC();
        result = 0;
        if ((v29 & 1) != 0)
          return *(double *)(a1 + v4[9]) == *(double *)(a2 + v4[9]);
      }
    }
  }
  return result;
}

unint64_t sub_2418534D4()
{
  unint64_t result;

  result = qword_257151E88;
  if (!qword_257151E88)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_257151E88);
  }
  return result;
}

uint64_t sub_241853528(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, &qword_257151E78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24185357C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t *v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  *a3 = swift_getKeyPath();
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v7 = (int *)_s16EntryMomentsViewVMa();
  v8 = (uint64_t *)((char *)a3 + v7[5]);
  *v8 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)a3 + v7[6]) = a1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_241802714(0, a2[2] + 1, 1, a2);
    a2 = (_QWORD *)result;
  }
  v11 = a2[2];
  v10 = a2[3];
  if (v11 >= v10 >> 1)
  {
    result = (uint64_t)sub_241802714((_QWORD *)(v10 > 1), v11 + 1, 1, a2);
    a2 = (_QWORD *)result;
  }
  a2[2] = v11 + 1;
  v12 = &a2[2 * v11];
  v12[4] = 0x7261746E656D6F4DLL;
  v12[5] = 0xE900000000000079;
  *(uint64_t *)((char *)a3 + v7[7]) = (uint64_t)a2;
  return result;
}

uint64_t _s16EntryMomentsViewVMa()
{
  uint64_t result;

  result = qword_257153870;
  if (!qword_257153870)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24185371C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char v75;
  unsigned int *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)();
  uint64_t v116;
  uint64_t v117;
  unint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t);
  char *v152;
  uint64_t v153;
  uint64_t KeyPath;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void *v181;
  uint64_t v182;

  v180 = a1;
  v174 = a2;
  v146 = _s20EntryMomentsDataViewVMa();
  MEMORY[0x24BDAC7A8](v146, v2);
  v148 = (uint64_t *)((char *)&v142 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241721CBC(0, &qword_2571538F8, v4);
  v173 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v147 = (uint64_t)&v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v149 = (uint64_t)&v142 - v10;
  sub_241858018(0, &qword_257153900, MEMORY[0x24BDEF380]);
  v169 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v171 = (uint64_t)&v142 - v13;
  v142 = _s21EntryMomentsEmptyViewVMa();
  MEMORY[0x24BDAC7A8](v142, v14);
  v144 = (uint64_t *)((char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241721CBC(0, &qword_2571538F0, v16);
  v168 = v17;
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v143 = (uint64_t)&v142 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v145 = (uint64_t)&v142 - v22;
  sub_241858018(0, &qword_2571538E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v172 = (uint64_t)&v142 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v27);
  v170 = (char *)&v142 - v28;
  v29 = sub_2418A88D4();
  MEMORY[0x24BDAC7A8](v29, v30);
  v163 = (char *)&v142 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_2418A99B4();
  v161 = *(_QWORD *)(v162 - 8);
  MEMORY[0x24BDAC7A8](v162, v32);
  v159 = (char *)&v142 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_2418A84E4();
  v158 = *(char **)(v179 - 8);
  v35 = MEMORY[0x24BDAC7A8](v179, v34);
  v157 = (char *)&v142 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35, v37);
  v39 = (char *)&v142 - v38;
  v40 = sub_2418A91E0();
  v41 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40, v42);
  v44 = (char *)&v142 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v45, v46);
  v48 = (char *)&v142 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241857F64(0);
  v178 = v49;
  MEMORY[0x24BDAC7A8](v49, v50);
  v52 = (char *)&v142 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241857F48(0);
  v55 = MEMORY[0x24BDAC7A8](v53, v54);
  v167 = (uint64_t)&v142 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = MEMORY[0x24BDAC7A8](v55, v57);
  v164 = (char *)&v142 - v59;
  MEMORY[0x24BDAC7A8](v58, v60);
  v166 = (char *)&v142 - v61;
  if (qword_25714B958 != -1)
    swift_once();
  v62 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v63 = sub_2418A7EFC();
  v65 = v64;
  swift_bridgeObjectRelease();

  v181 = (void *)v63;
  v182 = v65;
  sub_241721040();
  v176 = sub_2418A92D0();
  v155 = v66;
  v177 = v67;
  v175 = v68 & 1;
  KeyPath = swift_getKeyPath();
  v156 = _s16EntryMomentsViewVMa();
  v69 = v180 + *(int *)(v156 + 20);
  sub_241860D60((uint64_t)v48);
  sub_24172588C((uint64_t)v48, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9210();
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v44, *MEMORY[0x24BDF17C8], v40);
  v153 = sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v40);
  v70 = swift_getKeyPath();
  v165 = v69;
  sub_241860D60((uint64_t)v48);
  v160 = v48;
  sub_24172588C((uint64_t)v48, type metadata accessor for StateOfMindTimeline.Styles);
  v71 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v150 = MEMORY[0x24269BDB4](v71);
  v152 = v39;
  sub_241861034((uint64_t)v39);
  v72 = v158;
  v73 = v157;
  v74 = v179;
  (*((void (**)(char *, _QWORD, uint64_t))v158 + 13))(v157, *MEMORY[0x24BDEB400], v179);
  v75 = sub_2418A84D8();
  v151 = (void (*)(char *, uint64_t))*((_QWORD *)v72 + 1);
  v151(v73, v74);
  v76 = (unsigned int *)MEMORY[0x24BDF5080];
  v77 = v161;
  if ((v75 & 1) == 0)
    v76 = (unsigned int *)MEMORY[0x24BDF5098];
  v78 = v159;
  v79 = v162;
  (*(void (**)(char *, _QWORD, uint64_t))(v161 + 104))(v159, *v76, v162);
  v80 = (uint64_t)v163;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v163, v78, v79);
  sub_2417289A8(v80, (uint64_t)&v52[*(int *)(v178 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  v81 = v176;
  v82 = v177;
  v83 = v155;
  *(_QWORD *)v52 = v176;
  *((_QWORD *)v52 + 1) = v83;
  v84 = v175;
  v52[16] = v175;
  v85 = KeyPath;
  *((_QWORD *)v52 + 3) = v82;
  *((_QWORD *)v52 + 4) = v85;
  *((_WORD *)v52 + 20) = 0;
  v52[42] = 1;
  v86 = v153;
  *((_QWORD *)v52 + 6) = v70;
  *((_QWORD *)v52 + 7) = v86;
  v158 = v52;
  *((_QWORD *)v52 + 8) = v150;
  v87 = v83;
  sub_241728A50(v81, v83, v84);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24172588C(v80, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  v88 = *(void (**)(char *, uint64_t))(v77 + 8);
  v89 = v156;
  v88(v78, v79);
  v151(v152, v179);
  sub_2417289EC(v176, v87, v175);
  swift_release();
  v90 = v180;
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v91 = *(int *)(v89 + 28);
  v92 = *(_QWORD **)(v90 + v91);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v92 = sub_241802714(0, v92[2] + 1, 1, v92);
  v94 = v92[2];
  v93 = v92[3];
  v95 = (uint64_t)v166;
  v96 = (uint64_t)v158;
  if (v94 >= v93 >> 1)
    v92 = sub_241802714((_QWORD *)(v93 > 1), v94 + 1, 1, v92);
  v92[2] = v94 + 1;
  v97 = &v92[2 * v94];
  v97[4] = 0x6E6F6974706143;
  v97[5] = 0xE700000000000000;
  v181 = &unk_2511AB450;
  v98 = swift_bridgeObjectRetain();
  sub_2417739BC(v98);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241858160();
  v99 = (uint64_t)v164;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24172588C(v96, (uint64_t (*)(_QWORD))sub_241857F64);
  sub_241858348(v99, v95);
  v100 = *(_QWORD *)(v90 + *(int *)(v89 + 24));
  v101 = *(_QWORD *)(v90 + v91);
  if (*(_QWORD *)(v100 + 16))
  {
    v102 = swift_getKeyPath();
    v103 = (uint64_t)v148;
    *v148 = v102;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    v104 = v146;
    *(_QWORD *)(v103 + *(int *)(v146 + 20)) = v100;
    *(_QWORD *)(v103 + *(int *)(v104 + 24)) = v101;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v105 = sub_2418A90E4();
    v106 = (uint64_t)v160;
    sub_241860D60((uint64_t)v160);
    sub_24172588C(v106, type metadata accessor for StateOfMindTimeline.Styles);
    sub_2418A84A8();
    v108 = v107;
    v110 = v109;
    v112 = v111;
    v114 = v113;
    v115 = _s20EntryMomentsDataViewVMa;
    v116 = v147;
    sub_2417289A8(v103, v147, (uint64_t (*)(_QWORD))_s20EntryMomentsDataViewVMa);
    v117 = v116 + *(int *)(v173 + 36);
    *(_BYTE *)v117 = v105;
    *(_QWORD *)(v117 + 8) = v108;
    *(_QWORD *)(v117 + 16) = v110;
    *(_QWORD *)(v117 + 24) = v112;
    *(_QWORD *)(v117 + 32) = v114;
    *(_BYTE *)(v117 + 40) = 0;
    sub_24172588C(v103, (uint64_t (*)(_QWORD))_s20EntryMomentsDataViewVMa);
    v118 = &qword_2571538F8;
    v119 = v149;
    sub_24178CEC8(v116, v149, &qword_2571538F8, (void (*)(uint64_t))_s20EntryMomentsDataViewVMa);
    sub_24178CF24(v119, v171, &qword_2571538F8, (void (*)(uint64_t))_s20EntryMomentsDataViewVMa);
  }
  else
  {
    v121 = swift_getKeyPath();
    v122 = (uint64_t)v144;
    *v144 = v121;
    v123 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    v124 = v142;
    v125 = (uint64_t *)(v122 + *(int *)(v142 + 20));
    *v125 = swift_getKeyPath();
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v123);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v122 + *(int *)(v124 + 24)) = v101;
    swift_bridgeObjectRetain();
    LOBYTE(v125) = sub_2418A90E4();
    v126 = (uint64_t)v160;
    sub_241860D60((uint64_t)v160);
    sub_24172588C(v126, type metadata accessor for StateOfMindTimeline.Styles);
    sub_2418A84A8();
    v128 = v127;
    v130 = v129;
    v132 = v131;
    v134 = v133;
    v115 = _s21EntryMomentsEmptyViewVMa;
    v135 = v143;
    sub_2417289A8(v122, v143, (uint64_t (*)(_QWORD))_s21EntryMomentsEmptyViewVMa);
    v136 = v135 + *(int *)(v168 + 36);
    *(_BYTE *)v136 = (_BYTE)v125;
    *(_QWORD *)(v136 + 8) = v128;
    *(_QWORD *)(v136 + 16) = v130;
    *(_QWORD *)(v136 + 24) = v132;
    *(_QWORD *)(v136 + 32) = v134;
    *(_BYTE *)(v136 + 40) = 0;
    sub_24172588C(v122, (uint64_t (*)(_QWORD))_s21EntryMomentsEmptyViewVMa);
    v118 = &qword_2571538F0;
    v119 = v145;
    sub_24178CEC8(v135, v145, &qword_2571538F0, (void (*)(uint64_t))_s21EntryMomentsEmptyViewVMa);
    sub_24178CF24(v119, v171, &qword_2571538F0, (void (*)(uint64_t))_s21EntryMomentsEmptyViewVMa);
  }
  swift_storeEnumTagMultiPayload();
  sub_24185838C();
  sub_241858424();
  v120 = (uint64_t)v170;
  sub_2418A8D24();
  sub_2418584BC(v119, v118, (void (*)(uint64_t))v115);
  v137 = v167;
  sub_2417289A8(v95, v167, (uint64_t (*)(_QWORD))sub_241857F48);
  v138 = v172;
  sub_241858500(v120, v172);
  v139 = v174;
  sub_2417289A8(v137, v174, (uint64_t (*)(_QWORD))sub_241857F48);
  sub_241857ECC();
  sub_241858500(v138, v139 + *(int *)(v140 + 48));
  sub_241858554(v120);
  sub_24172588C(v95, (uint64_t (*)(_QWORD))sub_241857F48);
  sub_241858554(v138);
  return sub_24172588C(v137, (uint64_t (*)(_QWORD))sub_241857F48);
}

uint64_t sub_241854494@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2418A8C64();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_241857E50();
  return sub_24185371C(v1, a1 + *(int *)(v3 + 44));
}

_QWORD *sub_2418544D4(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v82)(char *, char *);
  uint64_t v83;
  _QWORD *v84;
  int *v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = v6[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)v3 + v9);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v84 = v3;
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      v86 = v13;
      if (v14((char *)v11, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v16 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v17 = v16[5];
      v18 = (char *)v10 + v17;
      v19 = (char *)v11 + v17;
      v20 = sub_2418A87B4();
      v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v87(v18, v19, v20);
      *((_BYTE *)v10 + v16[6]) = *((_BYTE *)v11 + v16[6]);
      v21 = v16[7];
      v22 = (char *)v10 + v21;
      v23 = (char *)v11 + v21;
      v24 = sub_2418A84E4();
      v82 = *(void (**)(char *, char *))(*(_QWORD *)(v24 - 8) + 16);
      v83 = v24;
      v82(v22, v23);
      v25 = v16[8];
      v26 = (char *)v10 + v25;
      v27 = (char *)v11 + v25;
      if (v14((char *)v11 + v25, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v26, v27, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v26, 0, 1, v12);
      }
      v29 = _s6StylesV8TimelineVMa(0);
      v87(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v20);
      v30 = v16[9];
      v31 = (char *)v10 + v30;
      v32 = (char *)v11 + v30;
      v85 = v6;
      if (v14((char *)v11 + v30, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v31, v32, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v31, 0, 1, v12);
      }
      v34 = _s6StylesV6NoDataVMa(0);
      v87(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v20);
      v31[*(int *)(v34 + 24)] = v32[*(int *)(v34 + 24)];
      v35 = v16[10];
      v36 = (char *)v10 + v35;
      v37 = (char *)v11 + v35;
      if (v14((char *)v11 + v35, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v36, v37, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v36, 0, 1, v12);
      }
      v39 = _s6StylesV11PlaceholderVMa(0);
      v87(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v20);
      v40 = v16[11];
      v41 = (char *)v10 + v40;
      v42 = (char *)v11 + v40;
      if (v14((char *)v11 + v40, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v41, v42, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v41, 0, 1, v12);
      }
      v44 = _s6StylesV6SymbolVMa(0);
      v87(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v20);
      v45 = v16[12];
      v46 = (char *)v10 + v45;
      v47 = (char *)v11 + v45;
      if (v14((char *)v11 + v45, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v46, v47, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v46, 0, 1, v12);
      }
      v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v87(&v46[v49[5]], &v47[v49[5]], v20);
      v46[v49[6]] = v47[v49[6]];
      ((void (*)(char *, char *, uint64_t))v82)(&v46[v49[7]], &v47[v49[7]], v83);
      v50 = v16[13];
      v51 = (char *)v10 + v50;
      v52 = (char *)v11 + v50;
      if (v14((char *)v11 + v50, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v51, v52, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v51, 0, 1, v12);
      }
      v54 = _s6StylesV5EmptyVMa(0);
      v87(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v20);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v16[14];
      v56 = (char *)v10 + v55;
      v57 = (char *)v11 + v55;
      if (v14((char *)v11 + v55, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v56, v57, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v56, 0, 1, v12);
      }
      v59 = _s6StylesV5DailyVMa(0);
      v87(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v20);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      v60 = v16[15];
      v61 = (char *)v10 + v60;
      v62 = (char *)v11 + v60;
      if (v14((char *)v11 + v60, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v61, v62, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v61, 0, 1, v12);
      }
      v6 = v85;
      v64 = _s6StylesV9MomentaryVMa(0);
      v87(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v20);
      v65 = v16[16];
      v66 = (char *)v10 + v65;
      v67 = (char *)v11 + v65;
      if (v14((char *)v11 + v65, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v66, v67, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v66, 0, 1, v12);
      }
      v69 = _s6StylesV6HeaderVMa(0);
      v87(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v20);
      v70 = v16[17];
      v71 = (char *)v10 + v70;
      v72 = (char *)v11 + v70;
      if (v14((char *)v11 + v70, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v71, v72, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v71, 0, 1, v12);
      }
      v74 = _s6StylesV11ChartButtonVMa(0);
      v87(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v20);
      v75 = v16[18];
      v76 = (char *)v10 + v75;
      v77 = (char *)v11 + v75;
      if (v14(v77, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v76, v77, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v76, 0, 1, v12);
      }
      v3 = v84;
      v79 = _s6StylesV15LogButtonFooterVMa(0);
      v87(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v20);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v80 = v6[7];
    *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)v3 + v6[6]);
    *(_QWORD *)((char *)a1 + v80) = *(_QWORD *)((char *)v3 + v80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241854F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v41)(uint64_t);
  uint64_t v42;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v5 + v9[5];
    v11 = sub_2418A87B4();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v10, v11);
    v13 = v5 + v9[7];
    v14 = sub_2418A84E4();
    v41 = *(void (**)(uint64_t))(*(_QWORD *)(v14 - 8) + 8);
    v42 = v14;
    v41(v13);
    v15 = v5 + v9[8];
    if (!v8(v15, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
    v16 = _s6StylesV8TimelineVMa(0);
    v12(v15 + *(int *)(v16 + 20), v11);
    v17 = v5 + v9[9];
    if (!v8(v17, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    v18 = _s6StylesV6NoDataVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    v19 = v5 + v9[10];
    if (!v8(v19, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    v20 = _s6StylesV11PlaceholderVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    v21 = v5 + v9[11];
    if (!v8(v21, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    v22 = _s6StylesV6SymbolVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    v23 = v5 + v9[12];
    if (!v8(v23, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    v24 = v7;
    v25 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v23 + *(int *)(v25 + 20), v11);
    v26 = *(int *)(v25 + 28);
    v27 = v24;
    ((void (*)(uint64_t, uint64_t))v41)(v23 + v26, v42);
    v28 = v5 + v9[13];
    if (!v8(v28, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v6);
    v29 = _s6StylesV5EmptyVMa(0);
    v12(v28 + *(int *)(v29 + 20), v11);
    v30 = v5 + v9[14];
    if (!v8(v30, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v6);
    v31 = _s6StylesV5DailyVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    v32 = v5 + v9[15];
    if (!v8(v32, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v32, v6);
    v33 = _s6StylesV9MomentaryVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    v34 = v5 + v9[16];
    if (!v8(v34, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v34, v6);
    v35 = _s6StylesV6HeaderVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    v36 = v5 + v9[17];
    if (!v8(v36, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v36, v6);
    v37 = _s6StylesV11ChartButtonVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
    v38 = v5 + v9[18];
    if (!v8(v38, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v38, v6);
    v39 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v38 + *(int *)(v39 + 20), v11);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2418553DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v83)(char *, char *);
  uint64_t v84;
  int *v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v86 = a2;
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
    v87 = a1;
    v85 = a3;
    if (v12(v9, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v15 = v14[5];
    v16 = (char *)v8 + v15;
    v17 = (char *)v9 + v15;
    v18 = sub_2418A87B4();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v19(v16, v17, v18);
    *((_BYTE *)v8 + v14[6]) = *((_BYTE *)v9 + v14[6]);
    v20 = v14[7];
    v21 = (char *)v8 + v20;
    v22 = (char *)v9 + v20;
    v23 = sub_2418A84E4();
    v83 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
    v84 = v23;
    v83(v21, v22);
    v24 = v14[8];
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    if (v12((_QWORD *)((char *)v9 + v24), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v26, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
    }
    v28 = _s6StylesV8TimelineVMa(0);
    v19(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v18);
    v29 = v14[9];
    v30 = (char *)v8 + v29;
    v31 = (char *)v9 + v29;
    v88 = v11;
    if (v12((_QWORD *)((char *)v9 + v29), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v30, v31, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
    }
    v33 = _s6StylesV6NoDataVMa(0);
    v19(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v18);
    v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
    v34 = v14[10];
    v35 = (char *)v8 + v34;
    v36 = (char *)v9 + v34;
    if (v12((_QWORD *)((char *)v9 + v34), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      v38 = v88;
    }
    else
    {
      v38 = v88;
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v35, v36, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v35, 0, 1, v10);
    }
    v39 = _s6StylesV11PlaceholderVMa(0);
    v19(&v35[*(int *)(v39 + 20)], &v36[*(int *)(v39 + 20)], v18);
    v40 = v14[11];
    v41 = (char *)v8 + v40;
    v42 = (char *)v9 + v40;
    if (v12((_QWORD *)((char *)v9 + v40), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v41, v42, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v10);
    }
    v44 = _s6StylesV6SymbolVMa(0);
    v19(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v18);
    v45 = v14[12];
    v46 = (char *)v8 + v45;
    v47 = (char *)v9 + v45;
    if (v12((_QWORD *)((char *)v9 + v45), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v46, v47, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v46, 0, 1, v10);
    }
    v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v19(&v46[v49[5]], &v47[v49[5]], v18);
    v46[v49[6]] = v47[v49[6]];
    ((void (*)(char *, char *, uint64_t))v83)(&v46[v49[7]], &v47[v49[7]], v84);
    v50 = v14[13];
    v51 = (char *)v8 + v50;
    v52 = (char *)v9 + v50;
    if (v12((_QWORD *)((char *)v9 + v50), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v51, v52, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v51, 0, 1, v10);
    }
    v54 = _s6StylesV5EmptyVMa(0);
    v19(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v18);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v14[14];
    v56 = (char *)v8 + v55;
    v57 = (char *)v9 + v55;
    if (v12((_QWORD *)((char *)v9 + v55), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v56, v57, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v56, 0, 1, v10);
    }
    v59 = _s6StylesV5DailyVMa(0);
    v19(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v18);
    v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
    v60 = v14[15];
    v61 = (char *)v8 + v60;
    v62 = (char *)v9 + v60;
    if (v12((_QWORD *)((char *)v9 + v60), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      v64 = v88;
    }
    else
    {
      v64 = v88;
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v61, v62, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v61, 0, 1, v10);
    }
    v65 = _s6StylesV9MomentaryVMa(0);
    v19(&v61[*(int *)(v65 + 20)], &v62[*(int *)(v65 + 20)], v18);
    v66 = v14[16];
    v67 = (char *)v8 + v66;
    v68 = (char *)v9 + v66;
    if (v12((_QWORD *)((char *)v9 + v66), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v67, v68, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v67, 0, 1, v10);
    }
    v70 = _s6StylesV6HeaderVMa(0);
    v19(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v18);
    v71 = v14[17];
    v72 = (char *)v8 + v71;
    v73 = (char *)v9 + v71;
    if (v12((_QWORD *)((char *)v9 + v71), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v72, v73, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v72, 0, 1, v10);
    }
    v75 = _s6StylesV11ChartButtonVMa(0);
    v19(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v18);
    v76 = v14[18];
    v77 = (char *)v8 + v76;
    v78 = (char *)v9 + v76;
    if (v12((_QWORD *)((char *)v9 + v76), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v77, v78, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v77, 0, 1, v10);
    }
    a2 = v86;
    v80 = _s6StylesV15LogButtonFooterVMa(0);
    v19(&v77[*(int *)(v80 + 20)], &v78[*(int *)(v80 + 20)], v18);
    a1 = v87;
    a3 = v85;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v81 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v81) = *(_QWORD *)((char *)a2 + v81);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_241855DA4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v80)(char *, char *);
  uint64_t v81;
  int *v82;
  unsigned int (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  void (*v85)(char *, char *);
  uint64_t v86;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    sub_24172B778((uint64_t)a1 + v8, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      v84 = v12;
      v82 = a3;
      if (v83((char *)v10, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v15 = v14[5];
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_2418A87B4();
      v85 = *(void (**)(char *, char *))(*(_QWORD *)(v18 - 8) + 16);
      v86 = v18;
      v85(v16, v17);
      *((_BYTE *)v9 + v14[6]) = *((_BYTE *)v10 + v14[6]);
      v19 = v14[7];
      v20 = (char *)v9 + v19;
      v21 = (char *)v10 + v19;
      v22 = sub_2418A84E4();
      v80 = *(void (**)(char *, char *))(*(_QWORD *)(v22 - 8) + 16);
      v81 = v22;
      v80(v20, v21);
      v23 = v14[8];
      v24 = (char *)v9 + v23;
      v25 = (char *)v10 + v23;
      v26 = v83;
      if (v83((char *)v10 + v23, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v24, v25, v11);
        v26 = v83;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v24, 0, 1, v11);
      }
      v28 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v24[*(int *)(v28 + 20)], &v25[*(int *)(v28 + 20)], v86);
      v29 = v14[9];
      v30 = (char *)v9 + v29;
      v31 = (char *)v10 + v29;
      if (v26((char *)v10 + v29, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v30, v31, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v30, 0, 1, v11);
      }
      v33 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v86);
      v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
      v34 = v14[10];
      v35 = (char *)v9 + v34;
      v36 = (char *)v10 + v34;
      if (v26((char *)v10 + v34, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v35, v36, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v35, 0, 1, v11);
      }
      v38 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v86);
      v39 = v14[11];
      v40 = (char *)v9 + v39;
      v41 = (char *)v10 + v39;
      if (v26((char *)v10 + v39, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v40, v41, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v40, 0, 1, v11);
      }
      v43 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v86);
      v44 = v14[12];
      v45 = (char *)v9 + v44;
      v46 = (char *)v10 + v44;
      if (v26((char *)v10 + v44, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v45, v46, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v45, 0, 1, v11);
      }
      v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v45[v48[5]], &v46[v48[5]], v86);
      v45[v48[6]] = v46[v48[6]];
      ((void (*)(char *, char *, uint64_t))v80)(&v45[v48[7]], &v46[v48[7]], v81);
      v49 = v14[13];
      v50 = (char *)v9 + v49;
      v51 = (char *)v10 + v49;
      if (v26((char *)v10 + v49, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v50, v51, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v50, 0, 1, v11);
      }
      v53 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v86);
      v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
      v54 = v14[14];
      v55 = (char *)v9 + v54;
      v56 = (char *)v10 + v54;
      if (v26((char *)v10 + v54, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v55, v56, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v55, 0, 1, v11);
      }
      v58 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v86);
      v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
      v59 = v14[15];
      v60 = (char *)v9 + v59;
      v61 = (char *)v10 + v59;
      if (v26((char *)v10 + v59, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v60, v61, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v60, 0, 1, v11);
      }
      v63 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v86);
      v64 = v14[16];
      v65 = (char *)v9 + v64;
      v66 = (char *)v10 + v64;
      if (v26((char *)v10 + v64, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v65, v66, v11);
        v26 = v83;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v65, 0, 1, v11);
      }
      v68 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v86);
      v69 = v14[17];
      v70 = (char *)v9 + v69;
      v71 = (char *)v10 + v69;
      if (v26((char *)v10 + v69, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v70, v71, v11);
        v26 = v83;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v70, 0, 1, v11);
      }
      v73 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v86);
      v74 = v14[18];
      v75 = (char *)v9 + v74;
      v76 = (char *)v10 + v74;
      if (v26(v76, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v75, v76, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v75, 0, 1, v11);
      }
      v78 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v86);
      a3 = v82;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_2418567DC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v87)(char *, char *);
  uint64_t v88;
  int *v89;
  char *v90;
  char *v91;
  uint64_t v92;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v91 = a1;
    v14 = sub_2418A8EB0();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v89 = a3;
    v90 = a2;
    if (v16(v11, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v19 = v18[5];
    v20 = &v10[v19];
    v21 = &v11[v19];
    v22 = sub_2418A87B4();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
    v23(v20, v21, v22);
    v10[v18[6]] = v11[v18[6]];
    v24 = v18[7];
    v25 = &v10[v24];
    v26 = &v11[v24];
    v27 = sub_2418A84E4();
    v87 = *(void (**)(char *, char *))(*(_QWORD *)(v27 - 8) + 32);
    v88 = v27;
    v87(v25, v26);
    v28 = v18[8];
    v29 = &v10[v28];
    v30 = &v11[v28];
    if (v16(&v11[v28], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v29, v30, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v29, 0, 1, v14);
    }
    v32 = _s6StylesV8TimelineVMa(0);
    v23(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v22);
    v33 = v18[9];
    v34 = &v10[v33];
    v35 = &v11[v33];
    v92 = v15;
    if (v16(&v11[v33], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v34, v35, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v34, 0, 1, v14);
    }
    v37 = _s6StylesV6NoDataVMa(0);
    v23(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v22);
    v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
    v38 = v18[10];
    v39 = &v10[v38];
    v40 = &v11[v38];
    if (v16(&v11[v38], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      v42 = v92;
    }
    else
    {
      v42 = v92;
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v39, v40, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v39, 0, 1, v14);
    }
    v43 = _s6StylesV11PlaceholderVMa(0);
    v23(&v39[*(int *)(v43 + 20)], &v40[*(int *)(v43 + 20)], v22);
    v44 = v18[11];
    v45 = &v10[v44];
    v46 = &v11[v44];
    if (v16(&v11[v44], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v45, v46, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v14);
    }
    v48 = _s6StylesV6SymbolVMa(0);
    v23(&v45[*(int *)(v48 + 20)], &v46[*(int *)(v48 + 20)], v22);
    v49 = v18[12];
    v50 = &v10[v49];
    v51 = &v11[v49];
    if (v16(&v11[v49], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v50, v51, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v50, 0, 1, v14);
    }
    v53 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v23(&v50[v53[5]], &v51[v53[5]], v22);
    v50[v53[6]] = v51[v53[6]];
    ((void (*)(char *, char *, uint64_t))v87)(&v50[v53[7]], &v51[v53[7]], v88);
    v54 = v18[13];
    v55 = &v10[v54];
    v56 = &v11[v54];
    if (v16(&v11[v54], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v55, v56, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v55, 0, 1, v14);
    }
    v58 = _s6StylesV5EmptyVMa(0);
    v23(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v22);
    v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
    v59 = v18[14];
    v60 = &v10[v59];
    v61 = &v11[v59];
    if (v16(&v11[v59], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v60, v61, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v60, 0, 1, v14);
    }
    v63 = _s6StylesV5DailyVMa(0);
    v23(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v22);
    v60[*(int *)(v63 + 24)] = v61[*(int *)(v63 + 24)];
    v64 = v18[15];
    v65 = &v10[v64];
    v66 = &v11[v64];
    if (v16(&v11[v64], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      v68 = v92;
    }
    else
    {
      v68 = v92;
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v65, v66, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v65, 0, 1, v14);
    }
    v69 = _s6StylesV9MomentaryVMa(0);
    v23(&v65[*(int *)(v69 + 20)], &v66[*(int *)(v69 + 20)], v22);
    v70 = v18[16];
    v71 = &v10[v70];
    v72 = &v11[v70];
    if (v16(&v11[v70], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v71, v72, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v71, 0, 1, v14);
    }
    v74 = _s6StylesV6HeaderVMa(0);
    v23(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v22);
    v75 = v18[17];
    v76 = &v10[v75];
    v77 = &v11[v75];
    if (v16(&v11[v75], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v76, v77, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v76, 0, 1, v14);
    }
    v79 = _s6StylesV11ChartButtonVMa(0);
    v23(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v22);
    v80 = v18[18];
    v81 = &v10[v80];
    v82 = &v11[v80];
    if (v16(&v11[v80], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v81, v82, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v81, 0, 1, v14);
    }
    a1 = v91;
    v84 = _s6StylesV15LogButtonFooterVMa(0);
    v23(&v81[*(int *)(v84 + 20)], &v82[*(int *)(v84 + 20)], v22);
    swift_storeEnumTagMultiPayload();
    a3 = v89;
    a2 = v90;
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v85 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v85] = *(_QWORD *)&a2[v85];
  return a1;
}

char *sub_241857194(char *a1, char *a2, int *a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v84)(char *, char *);
  uint64_t v85;
  int *v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  void (*v89)(char *, char *);
  uint64_t v90;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    sub_24172B778((uint64_t)&a1[v10], &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v14 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2418A8EB0();
      v16 = *(_QWORD *)(v15 - 8);
      v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v88 = v16;
      if (v87(v12, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v12, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      }
      v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v19 = v18[5];
      v20 = &v11[v19];
      v21 = &v12[v19];
      v22 = sub_2418A87B4();
      v89 = *(void (**)(char *, char *))(*(_QWORD *)(v22 - 8) + 32);
      v90 = v22;
      v89(v20, v21);
      v11[v18[6]] = v12[v18[6]];
      v23 = v18[7];
      v24 = &v11[v23];
      v25 = &v12[v23];
      v26 = sub_2418A84E4();
      v84 = *(void (**)(char *, char *))(*(_QWORD *)(v26 - 8) + 32);
      v85 = v26;
      v84(v24, v25);
      v27 = v18[8];
      v28 = &v11[v27];
      v29 = &v12[v27];
      v30 = v87;
      if (v87(&v12[v27], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v28, v29, v15);
        v30 = v87;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v28, 0, 1, v15);
      }
      v32 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v90);
      v33 = v18[9];
      v34 = &v11[v33];
      v35 = &v12[v33];
      v86 = a3;
      if (v30(&v12[v33], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v34, v35, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v34, 0, 1, v15);
      }
      v37 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v90);
      v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
      v38 = v18[10];
      v39 = &v11[v38];
      v40 = &v12[v38];
      if (v30(&v12[v38], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v39, v40, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v39, 0, 1, v15);
      }
      v42 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v90);
      v43 = v18[11];
      v44 = &v11[v43];
      v45 = &v12[v43];
      if (v30(&v12[v43], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v44, v45, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v44, 0, 1, v15);
      }
      v47 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v90);
      v48 = v18[12];
      v49 = &v11[v48];
      v50 = &v12[v48];
      if (v30(&v12[v48], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v49, v50, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v49, 0, 1, v15);
      }
      v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v49[v52[5]], &v50[v52[5]], v90);
      v49[v52[6]] = v50[v52[6]];
      ((void (*)(char *, char *, uint64_t))v84)(&v49[v52[7]], &v50[v52[7]], v85);
      v53 = v18[13];
      v54 = &v11[v53];
      v55 = &v12[v53];
      if (v30(&v12[v53], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v54, v55, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v54, 0, 1, v15);
      }
      v57 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v90);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      v58 = v18[14];
      v59 = &v11[v58];
      v60 = &v12[v58];
      if (v30(&v12[v58], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v59, v60, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v59, 0, 1, v15);
      }
      v62 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v90);
      v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
      v63 = v18[15];
      v64 = &v11[v63];
      v65 = &v12[v63];
      if (v30(&v12[v63], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v64, v65, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v64, 0, 1, v15);
      }
      a3 = v86;
      v67 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v90);
      v68 = v18[16];
      v69 = &v11[v68];
      v70 = &v12[v68];
      if (v30(&v12[v68], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v69, v70, v15);
        v30 = v87;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v69, 0, 1, v15);
      }
      v72 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v90);
      v73 = v18[17];
      v74 = &v11[v73];
      v75 = &v12[v73];
      if (v30(&v12[v73], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v74, v75, v15);
        v30 = v87;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v74, 0, 1, v15);
      }
      v77 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v90);
      v78 = v18[18];
      v79 = &v11[v78];
      v80 = &v12[v78];
      if (v30(v80, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v79, v80, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v79, 0, 1, v15);
      }
      v82 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v90);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241857BB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241857BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_241857C9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_241857CA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_5:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
}

void sub_241857D7C()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_241857E40()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241857E50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571538B0)
  {
    sub_24172570C(255, &qword_2571538B8, (uint64_t (*)(uint64_t))sub_241857ECC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571538B0);
  }
}

void sub_241857ECC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2571538C0)
  {
    sub_241857F48(255);
    sub_241858018(255, &qword_2571538E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2571538C0);
  }
}

void sub_241857F48(uint64_t a1)
{
  sub_241728250(a1, &qword_2571538C8, sub_241857F64, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_241857F64(uint64_t a1)
{
  sub_241728250(a1, &qword_2571538D0, sub_241857F80, (void (*)(uint64_t))MEMORY[0x24BDEDB60]);
}

void sub_241857F80(uint64_t a1)
{
  sub_241728250(a1, &qword_2571538D8, (void (*)(uint64_t))sub_241857F9C, (void (*)(uint64_t))sub_2417E5F3C);
}

void sub_241857F9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571538E0)
  {
    sub_241721CBC(255, &qword_25714F578, (void (*)(uint64_t))sub_241728808);
    sub_2417283A4();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571538E0);
  }
}

void sub_241858018(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_241721CBC(255, &qword_2571538F0, (void (*)(uint64_t))_s21EntryMomentsEmptyViewVMa);
    v7 = v6;
    sub_241721CBC(255, &qword_2571538F8, (void (*)(uint64_t))_s20EntryMomentsDataViewVMa);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2418580B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A8A60();
  *a1 = result;
  return result;
}

uint64_t sub_2418580E0()
{
  swift_retain();
  return sub_2418A8A6C();
}

uint64_t sub_241858110@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A8A60();
  *a1 = result;
  return result;
}

uint64_t sub_241858138()
{
  swift_retain();
  return sub_2418A8A6C();
}

unint64_t sub_241858160()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153908;
  if (!qword_257153908)
  {
    sub_241857F64(255);
    v2 = v1;
    v3[0] = sub_2418581C8();
    v3[1] = MEMORY[0x24BDEDB58];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153908);
  }
  return result;
}

unint64_t sub_2418581C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153910;
  if (!qword_257153910)
  {
    sub_241857F80(255);
    v2 = v1;
    v3[0] = sub_241858248();
    v3[1] = sub_24172159C((unint64_t *)&qword_25714C220, (uint64_t (*)(uint64_t))sub_2417E5F3C, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153910);
  }
  return result;
}

unint64_t sub_241858248()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153918;
  if (!qword_257153918)
  {
    sub_241857F9C();
    v2 = v1;
    v3[0] = sub_2418582C8();
    v3[1] = sub_24172159C(&qword_25714C228, (uint64_t (*)(uint64_t))sub_2417283A4, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153918);
  }
  return result;
}

unint64_t sub_2418582C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153920;
  if (!qword_257153920)
  {
    sub_241721CBC(255, &qword_25714F578, (void (*)(uint64_t))sub_241728808);
    v2 = v1;
    v3[0] = sub_24174B6B4();
    v3[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153920);
  }
  return result;
}

uint64_t sub_241858348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241857F48(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24185838C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153928;
  if (!qword_257153928)
  {
    sub_241721CBC(255, &qword_2571538F0, (void (*)(uint64_t))_s21EntryMomentsEmptyViewVMa);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257153930, (uint64_t (*)(uint64_t))_s21EntryMomentsEmptyViewVMa, (uint64_t)&unk_2418D7B18);
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153928);
  }
  return result;
}

unint64_t sub_241858424()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153938;
  if (!qword_257153938)
  {
    sub_241721CBC(255, &qword_2571538F8, (void (*)(uint64_t))_s20EntryMomentsDataViewVMa);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257153940, (uint64_t (*)(uint64_t))_s20EntryMomentsDataViewVMa, (uint64_t)&unk_2418D5418);
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153938);
  }
  return result;
}

uint64_t sub_2418584BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_241721CBC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241858500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241858018(0, &qword_2571538E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241858554(uint64_t a1)
{
  uint64_t v2;

  sub_241858018(0, &qword_2571538E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2418585A0()
{
  return sub_24172159C(&qword_257153948, (uint64_t (*)(uint64_t))sub_2418585CC, MEMORY[0x24BDF4700]);
}

void sub_2418585CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153950)
  {
    sub_24172570C(255, &qword_2571538B8, (uint64_t (*)(uint64_t))sub_241857ECC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_241858644();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153950);
  }
}

unint64_t sub_241858644()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257153958;
  if (!qword_257153958)
  {
    sub_24172570C(255, &qword_2571538B8, (uint64_t (*)(uint64_t))sub_241857ECC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257153958);
  }
  return result;
}

uint64_t sub_2418586A4(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = (uint64_t)v1 + OBJC_IVAR____TtC14MentalHealthUI26StateOfMindCalendarDayCell_day;
  swift_beginAccess();
  sub_241859FC4(a1, v3);
  swift_endAccess();
  v4 = type metadata accessor for StateOfMindCalendarDay();
  v5 = 0;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
  {
    swift_bridgeObjectRetain();
    v5 = (void *)sub_2418A9DB0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v5);

  objc_msgSend(v1, sel_setNeedsUpdateConfiguration);
  return sub_24172588C(a1, (uint64_t (*)(_QWORD))sub_241859AE0);
}

uint64_t sub_24185892C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13[5];

  sub_241859B28();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = a3;
  sub_241859BBC();
  sub_24172159C(&qword_257153A08, (uint64_t (*)(uint64_t))sub_241859BBC, MEMORY[0x24BDF4700]);
  sub_2418A8E98();
  sub_2418A90D8();
  v13[3] = v5;
  v13[4] = sub_24172159C(&qword_257153A10, (uint64_t (*)(uint64_t))sub_241859B28, MEMORY[0x24BDEFEA0]);
  __swift_allocate_boxed_opaque_existential_1(v13);
  sub_2418A8E8C();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  return MEMORY[0x24269C948](v13);
}

uint64_t sub_241858A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = sub_2418A8C58();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  sub_241859E14();
  return sub_241858A8C(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_241858A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  int v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _OWORD *v111;
  __int128 v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  void (*v127)(uint64_t, char *, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  double v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  int *v142;
  uint64_t v143;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t (*v170)(char *, uint64_t, uint64_t);
  __int128 v171;
  __int128 v172;
  __int128 v173;

  v164 = a2;
  sub_241859DA8(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v155 = (uint64_t)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241859D84(0);
  v153 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v158 = (uint64_t)&v145 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241859D60(0);
  v156 = v9;
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v163 = (char *)&v145 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v169 = (uint64_t)&v145 - v14;
  v149 = type metadata accessor for StateOfMindCalendarDateView();
  MEMORY[0x24BDAC7A8](v149, v15);
  v17 = (uint64_t *)((char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241859D3C(0);
  v151 = v18;
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v162 = (uint64_t)&v145 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v150 = (uint64_t)&v145 - v24;
  MEMORY[0x24BDAC7A8](v23, v25);
  v168 = (uint64_t)&v145 - v26;
  sub_241859AE0(0);
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v157 = (char *)&v145 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v31);
  v33 = (char *)&v145 - v32;
  v34 = type metadata accessor for StateOfMindCalendarDay();
  v35 = *(_QWORD *)(v34 - 8);
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v145 = (uint64_t)&v145 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37, v39);
  v41 = (char *)&v145 - v40;
  v166 = sub_2418A987C();
  v42 = *(_QWORD *)(v166 - 8);
  v44 = MEMORY[0x24BDAC7A8](v166, v43);
  v148 = (char *)&v145 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44, v46);
  v48 = (char *)&v145 - v47;
  sub_241859D18(0);
  v165 = v49;
  v51 = MEMORY[0x24BDAC7A8](v49, v50);
  v161 = (uint64_t)&v145 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x24BDAC7A8](v51, v53);
  v147 = (char *)&v145 - v55;
  v57 = MEMORY[0x24BDAC7A8](v54, v56);
  v159 = (uint64_t)&v145 - v58;
  MEMORY[0x24BDAC7A8](v57, v59);
  v61 = (char *)&v145 - v60;
  sub_241859CF4(0);
  v146 = v62;
  v64 = MEMORY[0x24BDAC7A8](v62, v63);
  v160 = (uint64_t)&v145 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = MEMORY[0x24BDAC7A8](v64, v66);
  v69 = (char *)&v145 - v68;
  MEMORY[0x24BDAC7A8](v67, v70);
  v167 = (uint64_t)&v145 - v71;
  sub_2418A9870();
  v152 = a1;
  v72 = (_QWORD *)(a1 + OBJC_IVAR____TtC14MentalHealthUI26StateOfMindCalendarDayCell_day);
  swift_beginAccess();
  sub_2417289A8((uint64_t)v72, (uint64_t)v33, (uint64_t (*)(_QWORD))sub_241859AE0);
  v170 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v73 = v170(v33, 1, v34);
  v154 = v34;
  if (v73 == 1)
  {
    sub_24172588C((uint64_t)v33, (uint64_t (*)(_QWORD))sub_241859AE0);
    v74 = v148;
    v75 = v146;
  }
  else
  {
    sub_241731B4C((uint64_t)v33, (uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay);
    v76 = *(_QWORD *)&v41[*(int *)(v34 + 36)];
    sub_24172588C((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay);
    v77 = 1.0;
    v74 = v148;
    v75 = v146;
    if (v76 < 14)
      goto LABEL_5;
  }
  v77 = 0.0;
LABEL_5:
  v78 = v166;
  v148 = *(char **)(v42 + 16);
  ((void (*)(char *, char *, uint64_t))v148)(v61, v48, v166);
  *(double *)&v61[*(int *)(v165 + 36)] = v77;
  v79 = *(void (**)(char *, uint64_t))(v42 + 8);
  v79(v48, v78);
  v80 = sub_2418A90F0();
  sub_2418A84A8();
  v82 = v81;
  v84 = v83;
  v86 = v85;
  v88 = v87;
  sub_2417289A8((uint64_t)v61, (uint64_t)v69, (uint64_t (*)(_QWORD))sub_241859D18);
  v89 = &v69[*(int *)(v75 + 36)];
  *v89 = v80;
  *((_QWORD *)v89 + 1) = v82;
  *((_QWORD *)v89 + 2) = v84;
  *((_QWORD *)v89 + 3) = v86;
  *((_QWORD *)v89 + 4) = v88;
  v89[40] = 0;
  sub_24172588C((uint64_t)v61, (uint64_t (*)(_QWORD))sub_241859D18);
  sub_241731B4C((uint64_t)v69, v167, (uint64_t (*)(_QWORD))sub_241859CF4);
  v90 = v154;
  if (v170((char *)v72, 1, v154))
  {
    v91 = 0;
    v92 = 0xE000000000000000;
    v93 = 2;
  }
  else
  {
    v93 = *((_BYTE *)v72 + *(int *)(v90 + 32));
    v91 = v72[2];
    v92 = v72[3];
    swift_bridgeObjectRetain();
  }
  v94 = (uint64_t)v163;
  v95 = v169;
  *v17 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714CA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v96 = v149;
  *((_BYTE *)v17 + *(int *)(v149 + 20)) = v93;
  v97 = (uint64_t *)((char *)v17 + *(int *)(v96 + 24));
  *v97 = v91;
  v97[1] = v92;
  v98 = sub_2418A90F0();
  sub_2418A84A8();
  v100 = v99;
  v102 = v101;
  v104 = v103;
  v106 = v105;
  v107 = v150;
  sub_2417289A8((uint64_t)v17, v150, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDateView);
  v108 = v107 + *(int *)(v151 + 36);
  *(_BYTE *)v108 = v98;
  *(_QWORD *)(v108 + 8) = v100;
  *(_QWORD *)(v108 + 16) = v102;
  *(_QWORD *)(v108 + 24) = v104;
  *(_QWORD *)(v108 + 32) = v106;
  *(_BYTE *)(v108 + 40) = 0;
  sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDateView);
  sub_241731B4C(v107, v168, (uint64_t (*)(_QWORD))sub_241859D3C);
  v109 = v155;
  sub_241859534(v152, v155);
  sub_2418A9960();
  sub_2418A861C();
  v110 = v158;
  sub_2417289A8(v109, v158, (uint64_t (*)(_QWORD))sub_241859DA8);
  v111 = (_OWORD *)(v110 + *(int *)(v153 + 36));
  v112 = v172;
  *v111 = v171;
  v111[1] = v112;
  v111[2] = v173;
  sub_24172588C(v109, (uint64_t (*)(_QWORD))sub_241859DA8);
  v113 = sub_2418A90F0();
  sub_2418A84A8();
  v115 = v114;
  v117 = v116;
  v119 = v118;
  v121 = v120;
  sub_2417289A8(v110, v94, (uint64_t (*)(_QWORD))sub_241859D84);
  v122 = v94 + *(int *)(v156 + 36);
  *(_BYTE *)v122 = v113;
  *(_QWORD *)(v122 + 8) = v115;
  *(_QWORD *)(v122 + 16) = v117;
  *(_QWORD *)(v122 + 24) = v119;
  *(_QWORD *)(v122 + 32) = v121;
  *(_BYTE *)(v122 + 40) = 0;
  sub_24172588C(v110, (uint64_t (*)(_QWORD))sub_241859D84);
  sub_241731B4C(v94, v95, (uint64_t (*)(_QWORD))sub_241859D60);
  if (v170((char *)v72, 1, v90))
  {
    v123 = (char *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v123 = (char *)v72[1];
    swift_bridgeObjectRetain();
  }
  v124 = (uint64_t)v157;
  sub_2418A9870();
  sub_2417289A8((uint64_t)v72, v124, (uint64_t (*)(_QWORD))sub_241859AE0);
  v125 = v170((char *)v124, 1, v90);
  v163 = v123;
  if (v125 == 1)
  {
    sub_24172588C(v124, (uint64_t (*)(_QWORD))sub_241859AE0);
    v126 = (uint64_t)v147;
    v127 = (void (*)(uint64_t, char *, uint64_t))v148;
LABEL_14:
    v131 = 0.0;
    goto LABEL_15;
  }
  v128 = v124;
  v129 = v145;
  sub_241731B4C(v128, v145, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay);
  v130 = *(_QWORD *)(v129 + *(int *)(v90 + 36));
  sub_24172588C(v129, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay);
  v131 = 1.0;
  v126 = (uint64_t)v147;
  v127 = (void (*)(uint64_t, char *, uint64_t))v148;
  if (v130 < 7)
    goto LABEL_14;
LABEL_15:
  v132 = v166;
  v127(v126, v74, v166);
  *(double *)(v126 + *(int *)(v165 + 36)) = v131;
  v79(v74, v132);
  v133 = v159;
  sub_241731B4C(v126, v159, (uint64_t (*)(_QWORD))sub_241859D18);
  v134 = v167;
  v135 = v160;
  sub_2417289A8(v167, v160, (uint64_t (*)(_QWORD))sub_241859CF4);
  v136 = v168;
  v137 = v162;
  sub_2417289A8(v168, v162, (uint64_t (*)(_QWORD))sub_241859D3C);
  sub_2417289A8(v95, v94, (uint64_t (*)(_QWORD))sub_241859D60);
  v138 = v94;
  v139 = v161;
  sub_2417289A8(v133, v161, (uint64_t (*)(_QWORD))sub_241859D18);
  v140 = v164;
  sub_2417289A8(v135, v164, (uint64_t (*)(_QWORD))sub_241859CF4);
  sub_241859C50();
  v142 = v141;
  sub_2417289A8(v137, v140 + v141[12], (uint64_t (*)(_QWORD))sub_241859D3C);
  sub_2417289A8(v138, v140 + v142[16], (uint64_t (*)(_QWORD))sub_241859D60);
  *(_QWORD *)(v140 + v142[20]) = v163;
  v143 = v140 + v142[24];
  *(_QWORD *)v143 = 0;
  *(_BYTE *)(v143 + 8) = 1;
  sub_2417289A8(v139, v140 + v142[28], (uint64_t (*)(_QWORD))sub_241859D18);
  swift_bridgeObjectRetain();
  sub_24172588C(v133, (uint64_t (*)(_QWORD))sub_241859D18);
  sub_24172588C(v169, (uint64_t (*)(_QWORD))sub_241859D60);
  sub_24172588C(v136, (uint64_t (*)(_QWORD))sub_241859D3C);
  sub_24172588C(v134, (uint64_t (*)(_QWORD))sub_241859CF4);
  sub_24172588C(v139, (uint64_t (*)(_QWORD))sub_241859D18);
  swift_bridgeObjectRelease();
  sub_24172588C(v138, (uint64_t (*)(_QWORD))sub_241859D60);
  sub_24172588C(v137, (uint64_t (*)(_QWORD))sub_241859D3C);
  return sub_24172588C(v135, (uint64_t (*)(_QWORD))sub_241859CF4);
}

uint64_t sub_241859534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  id v33;
  double v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  _QWORD v40[6];
  _QWORD v41[2];

  v40[5] = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380];
  sub_241782A08(0, &qword_257153A20, (uint64_t (*)(uint64_t))sub_241859DE8, MEMORY[0x24BDF4638], MEMORY[0x24BDEF380]);
  v40[4] = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v40 - v6;
  sub_241782A08(0, &qword_257153A28, (uint64_t (*)(uint64_t))sub_24177DE90, (uint64_t)&type metadata for StateOfMindCalendarPlaceholderView, v3);
  v40[2] = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v40 - v10;
  sub_241859DE8(0);
  v40[3] = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177DE90();
  v40[1] = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241859AE0(0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for StateOfMindCalendarDay();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (id *)((char *)v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = a1 + OBJC_IVAR____TtC14MentalHealthUI26StateOfMindCalendarDayCell_day;
  swift_beginAccess();
  sub_2417289A8(v29, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_241859AE0);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v30(v23, 1, v24) == 1)
  {
    v31 = (uint64_t (*)(_QWORD))sub_241859AE0;
    v32 = (uint64_t)v23;
  }
  else
  {
    sub_241731B4C((uint64_t)v23, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay);
    if (*v28)
    {
      v33 = *v28;
      objc_msgSend(v33, sel_valence);
      LOBYTE(v41[0]) = 0;
      StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)((unsigned __int8 *)v41, v34);
      v35 = (id *)((char *)v28 + *(int *)(v24 + 40));
      v36 = v35[1];
      v41[0] = *v35;
      v41[1] = v36;
      swift_bridgeObjectRetain();
      sub_2418A9E40();
      sub_24174B670();
      sub_2418A9450();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2417289A8((uint64_t)v19, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_24177DE90);
      swift_storeEnumTagMultiPayload();
      sub_2417F4CE8();
      sub_241859F18();
      sub_2418A8D24();
      sub_2417289A8((uint64_t)v15, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_241859DE8);
      swift_storeEnumTagMultiPayload();
      sub_241859F5C();
      sub_2418A8D24();

      sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_241859DE8);
      sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))sub_24177DE90);
      v37 = (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay;
      v38 = (uint64_t)v28;
      return sub_24172588C(v38, v37);
    }
    v31 = (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay;
    v32 = (uint64_t)v28;
  }
  sub_24172588C(v32, v31);
  v30((char *)v29, 1, v24);
  if ((sub_2418A8298() & 1) != 0)
  {
    *(_QWORD *)v7 = 0;
    v7[8] = 1;
    swift_storeEnumTagMultiPayload();
    sub_241859F5C();
    return sub_2418A8D24();
  }
  swift_storeEnumTagMultiPayload();
  sub_2417F4CE8();
  sub_241859F18();
  sub_2418A8D24();
  sub_2417289A8((uint64_t)v15, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_241859DE8);
  swift_storeEnumTagMultiPayload();
  sub_241859F5C();
  sub_2418A8D24();
  v38 = (uint64_t)v15;
  v37 = (uint64_t (*)(_QWORD))sub_241859DE8;
  return sub_24172588C(v38, v37);
}

uint64_t sub_241859A30()
{
  return type metadata accessor for StateOfMindCalendarDayCell();
}

uint64_t type metadata accessor for StateOfMindCalendarDayCell()
{
  uint64_t result;

  result = qword_257153988;
  if (!qword_257153988)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241859A74()
{
  unint64_t v0;

  sub_241859AE0(319);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_241859AE0(uint64_t a1)
{
  sub_24172570C(a1, &qword_257153998, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarDay, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_241859AFC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_241859B20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24185892C(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_241859B28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571539A0)
  {
    sub_241859BBC();
    sub_24172159C(&qword_257153A08, (uint64_t (*)(uint64_t))sub_241859BBC, MEMORY[0x24BDF4700]);
    v0 = sub_2418A8EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571539A0);
  }
}

void sub_241859BBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571539A8)
  {
    sub_241859C34(255);
    sub_24172159C(&qword_257153A00, (uint64_t (*)(uint64_t))sub_241859C34, MEMORY[0x24BDF5428]);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571539A8);
  }
}

void sub_241859C34(uint64_t a1)
{
  sub_24172570C(a1, &qword_2571539B0, (uint64_t (*)(uint64_t))sub_241859C50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241859C50()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_2571539B8)
  {
    sub_241859CF4(255);
    sub_241859D3C(255);
    sub_241859D60(255);
    sub_241859D18(255);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_2571539B8);
  }
}

void sub_241859CF4(uint64_t a1)
{
  sub_241782A08(a1, &qword_2571539C0, (uint64_t (*)(uint64_t))sub_241859D18, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_241859D18(uint64_t a1)
{
  sub_241782A08(a1, &qword_2571539C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4918], MEMORY[0x24BDECC50], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_241859D3C(uint64_t a1)
{
  sub_241782A08(a1, &qword_2571539D0, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarDateView, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_241859D60(uint64_t a1)
{
  sub_241782A08(a1, &qword_2571539D8, (uint64_t (*)(uint64_t))sub_241859D84, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_241859D84(uint64_t a1)
{
  sub_241782A08(a1, &qword_2571539E0, (uint64_t (*)(uint64_t))sub_241859DA8, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_241859DA8(uint64_t a1)
{
  sub_24172570C(a1, &qword_2571539E8, (uint64_t (*)(uint64_t))sub_241859DC4, MEMORY[0x24BDF3F28]);
}

void sub_241859DC4(uint64_t a1)
{
  sub_241782A08(a1, &qword_2571539F0, (uint64_t (*)(uint64_t))sub_241859DE8, MEMORY[0x24BDF4638], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_241859DE8(uint64_t a1)
{
  sub_241782A08(a1, &qword_2571539F8, (uint64_t (*)(uint64_t))sub_24177DE90, (uint64_t)&type metadata for StateOfMindCalendarPlaceholderView, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

uint64_t sub_241859E0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_241858A48(*(_QWORD *)(v1 + 16), a1);
}

void sub_241859E14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153A18)
  {
    sub_241859C34(255);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153A18);
  }
}

uint64_t sub_241859E78()
{
  return sub_2418A8988();
}

uint64_t sub_241859E98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2418A8C4C();
  MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_2418A8994();
}

unint64_t sub_241859F18()
{
  unint64_t result;

  result = qword_257153A30;
  if (!qword_257153A30)
  {
    result = MEMORY[0x24269D47C](&unk_2418D74D4, &type metadata for StateOfMindCalendarPlaceholderView);
    atomic_store(result, (unint64_t *)&qword_257153A30);
  }
  return result;
}

unint64_t sub_241859F5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153A38;
  if (!qword_257153A38)
  {
    sub_241859DE8(255);
    v2 = v1;
    v3[0] = sub_2417F4CE8();
    v3[1] = sub_241859F18();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153A38);
  }
  return result;
}

uint64_t sub_241859FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241859AE0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t *sub_24185A008(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t *v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  unsigned int (*v96)(char *, uint64_t, int *);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, _QWORD, uint64_t, int *);
  void (*v117)(char *, char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  unsigned int (*v122)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v123;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v122 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      v118 = v6;
      if (v122(a2, 1, v7))
      {
        sub_2417790D8();
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v13 = v12[5];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_2418A87B4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(v14, v15, v16);
      *((_BYTE *)a1 + v12[6]) = *((_BYTE *)a2 + v12[6]);
      v18 = v12[7];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_2418A84E4();
      v117 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      v117(v19, v20, v21);
      v22 = v12[8];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      if (v122((uint64_t *)((char *)a2 + v22), 1, v7))
      {
        sub_2417790D8();
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v23, v24, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v23, 0, 1, v7);
      }
      v26 = _s6StylesV8TimelineVMa(0);
      v17(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      v27 = v12[9];
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v120 = v8;
      if (v122((uint64_t *)((char *)a2 + v27), 1, v7))
      {
        sub_2417790D8();
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v28, v29, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v28, 0, 1, v7);
      }
      v31 = _s6StylesV6NoDataVMa(0);
      v17(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      v32 = v12[10];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      if (v122((uint64_t *)((char *)a2 + v32), 1, v7))
      {
        sub_2417790D8();
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        v36 = v120;
      }
      else
      {
        v36 = v120;
        (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v33, v34, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v33, 0, 1, v7);
      }
      v37 = _s6StylesV11PlaceholderVMa(0);
      v17(&v33[*(int *)(v37 + 20)], &v34[*(int *)(v37 + 20)], v16);
      v38 = v12[11];
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      if (v122((uint64_t *)((char *)a2 + v38), 1, v7))
      {
        sub_2417790D8();
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v39, v40, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v7);
      }
      v42 = _s6StylesV6SymbolVMa(0);
      v17(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v16);
      v43 = v12[12];
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      if (v122((uint64_t *)((char *)a2 + v43), 1, v7))
      {
        sub_2417790D8();
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v44, v45, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v44, 0, 1, v7);
      }
      v47 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v17(&v44[v47[5]], &v45[v47[5]], v16);
      v44[v47[6]] = v45[v47[6]];
      v117(&v44[v47[7]], &v45[v47[7]], v21);
      v48 = v12[13];
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      if (v122((uint64_t *)((char *)a2 + v48), 1, v7))
      {
        sub_2417790D8();
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v49, v50, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v49, 0, 1, v7);
      }
      v6 = v118;
      v52 = _s6StylesV5EmptyVMa(0);
      v17(&v49[*(int *)(v52 + 20)], &v50[*(int *)(v52 + 20)], v16);
      v49[*(int *)(v52 + 24)] = v50[*(int *)(v52 + 24)];
      v53 = v12[14];
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      if (v122((uint64_t *)((char *)a2 + v53), 1, v7))
      {
        sub_2417790D8();
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v54, v55, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v54, 0, 1, v7);
      }
      v57 = _s6StylesV5DailyVMa(0);
      v17(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      v58 = v12[15];
      v59 = (char *)a1 + v58;
      v60 = (char *)a2 + v58;
      if (v122((uint64_t *)((char *)a2 + v58), 1, v7))
      {
        sub_2417790D8();
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        v62 = v120;
      }
      else
      {
        v62 = v120;
        (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v59, v60, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v59, 0, 1, v7);
      }
      v63 = _s6StylesV9MomentaryVMa(0);
      v17(&v59[*(int *)(v63 + 20)], &v60[*(int *)(v63 + 20)], v16);
      v64 = v12[16];
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      if (v122((uint64_t *)((char *)a2 + v64), 1, v7))
      {
        sub_2417790D8();
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v65, v66, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v65, 0, 1, v7);
      }
      v68 = _s6StylesV6HeaderVMa(0);
      v17(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v16);
      v69 = v12[17];
      v70 = (char *)a1 + v69;
      v71 = (char *)a2 + v69;
      if (v122((uint64_t *)((char *)a2 + v69), 1, v7))
      {
        sub_2417790D8();
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v70, v71, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v70, 0, 1, v7);
      }
      v73 = _s6StylesV11ChartButtonVMa(0);
      v17(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v16);
      v74 = v12[18];
      v75 = (char *)a1 + v74;
      v76 = (char *)a2 + v74;
      if (v122((uint64_t *)((char *)a2 + v74), 1, v7))
      {
        sub_2417790D8();
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v75, v76, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v75, 0, 1, v7);
      }
      v78 = _s6StylesV15LogButtonFooterVMa(0);
      v17(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v16);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v79 = *(int *)(v6 + 20);
    v121 = a1;
    v123 = a2;
    v80 = (char *)a1 + v79;
    v81 = (uint64_t *)((char *)a2 + v79);
    *(uint64_t *)((char *)a1 + v79) = *v81;
    v82 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
    v83 = v82[5];
    v84 = &v80[v83];
    v85 = (char *)v81 + v83;
    v86 = sub_2418A9CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
    v87 = v82[6];
    v88 = &v80[v87];
    v89 = (uint64_t *)((char *)v81 + v87);
    v90 = v89[1];
    *(_QWORD *)v88 = *v89;
    *((_QWORD *)v88 + 1) = v90;
    v91 = v82[7];
    v92 = &v80[v91];
    v93 = (char *)v81 + v91;
    v94 = (int *)_s5EntryVMa();
    v95 = *((_QWORD *)v94 - 1);
    v96 = *(unsigned int (**)(char *, uint64_t, int *))(v95 + 48);
    swift_bridgeObjectRetain();
    if (v96(v93, 1, v94))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      v98 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v92, v93, v98);
      v99 = v94[5];
      v100 = &v92[v99];
      v101 = &v93[v99];
      v102 = *((_QWORD *)v101 + 1);
      *(_QWORD *)v100 = *(_QWORD *)v101;
      *((_QWORD *)v100 + 1) = v102;
      v103 = v94[6];
      v104 = &v92[v103];
      v105 = &v93[v103];
      v106 = *((_QWORD *)v105 + 1);
      *(_QWORD *)v104 = *(_QWORD *)v105;
      *((_QWORD *)v104 + 1) = v106;
      v107 = v94[7];
      v108 = &v92[v107];
      v109 = &v93[v107];
      v110 = *((_QWORD *)v109 + 1);
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *((_QWORD *)v108 + 1) = v110;
      v111 = v94[8];
      v112 = &v92[v111];
      v113 = &v93[v111];
      v119 = v6;
      v114 = *((_QWORD *)v113 + 1);
      *(_QWORD *)v112 = *(_QWORD *)v113;
      *((_QWORD *)v112 + 1) = v114;
      *(_QWORD *)&v92[v94[9]] = *(_QWORD *)&v93[v94[9]];
      v115 = *(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v6 = v119;
      swift_bridgeObjectRetain();
      v115(v92, 0, 1, v94);
    }
    v11 = v121;
    *(_QWORD *)&v80[v82[8]] = *(uint64_t *)((char *)v81 + v82[8]);
    *(_QWORD *)&v80[v82[9]] = *(uint64_t *)((char *)v81 + v82[9]);
    *(uint64_t *)((char *)v121 + *(int *)(v6 + 24)) = *(uint64_t *)((char *)v123 + *(int *)(v6 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v11;
}

uint64_t sub_24185AA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v44 = a2;
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(a1, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v8 = a1 + v7[5];
    v9 = sub_2418A87B4();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v8, v9);
    v11 = a1 + v7[7];
    v12 = sub_2418A84E4();
    v43 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v43(v11, v12);
    v13 = a1 + v7[8];
    if (!v6(v13, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v4);
    v14 = _s6StylesV8TimelineVMa(0);
    v10(v13 + *(int *)(v14 + 20), v9);
    v15 = a1 + v7[9];
    if (!v6(v15, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    v16 = _s6StylesV6NoDataVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    v17 = a1 + v7[10];
    if (!v6(v17, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    v18 = _s6StylesV11PlaceholderVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    v19 = a1 + v7[11];
    if (!v6(v19, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    v20 = _s6StylesV6SymbolVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    v21 = a1 + v7[12];
    if (!v6(v21, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    v22 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    v43(v21 + *(int *)(v22 + 28), v12);
    v23 = a1 + v7[13];
    if (!v6(v23, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    v24 = _s6StylesV5EmptyVMa(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    v25 = a1 + v7[14];
    if (!v6(v25, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v25, v4);
    v26 = _s6StylesV5DailyVMa(0);
    v10(v25 + *(int *)(v26 + 20), v9);
    v27 = a1 + v7[15];
    if (!v6(v27, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v27, v4);
    v28 = _s6StylesV9MomentaryVMa(0);
    v10(v27 + *(int *)(v28 + 20), v9);
    v29 = a1 + v7[16];
    if (!v6(v29, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
    v30 = _s6StylesV6HeaderVMa(0);
    v10(v29 + *(int *)(v30 + 20), v9);
    v31 = a1 + v7[17];
    if (!v6(v31, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v31, v4);
    v32 = _s6StylesV11ChartButtonVMa(0);
    v10(v31 + *(int *)(v32 + 20), v9);
    v33 = a1 + v7[18];
    if (!v6(v33, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v33, v4);
    v34 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v33 + *(int *)(v34 + 20), v9);
    a2 = v44;
  }
  else
  {
    swift_release();
  }
  v35 = a1 + *(int *)(a2 + 20);
  v36 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v37 = v35 + *(int *)(v36 + 20);
  v38 = sub_2418A9CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
  swift_bridgeObjectRelease();
  v39 = v35 + *(int *)(v36 + 28);
  v40 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40))
  {
    v41 = sub_2418A8130();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v39, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_24185AF34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  int *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int *v90;
  uint64_t v91;
  unsigned int (*v92)(char *, uint64_t, int *);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, _QWORD, uint64_t, int *);
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  unsigned int (*v118)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v119;

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v118 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
    v114 = a3;
    v116 = v7;
    if (v118(a2, 1, v6))
    {
      sub_2417790D8();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    v113 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v113(v16, v17, v18);
    v19 = v9[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v118((_QWORD *)((char *)a2 + v19), 1, v6))
    {
      sub_2417790D8();
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    if (v118((_QWORD *)((char *)a2 + v24), 1, v6))
    {
      sub_2417790D8();
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v118((_QWORD *)((char *)a2 + v29), 1, v6))
    {
      sub_2417790D8();
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v30, 0, 1, v6);
    }
    v33 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    v34 = v9[11];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v118((_QWORD *)((char *)a2 + v34), 1, v6))
    {
      sub_2417790D8();
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v35, 0, 1, v6);
    }
    v38 = _s6StylesV6SymbolVMa(0);
    v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    v39 = v9[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    if (v118((_QWORD *)((char *)a2 + v39), 1, v6))
    {
      sub_2417790D8();
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v40, v41, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v40, 0, 1, v6);
    }
    v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v113(&v40[v43[7]], &v41[v43[7]], v18);
    v44 = v9[13];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v118((_QWORD *)((char *)a2 + v44), 1, v6))
    {
      sub_2417790D8();
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v116;
    }
    else
    {
      v48 = v116;
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v45, v46, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v45, 0, 1, v6);
    }
    v49 = _s6StylesV5EmptyVMa(0);
    v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    v50 = v9[14];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    if (v118((_QWORD *)((char *)a2 + v50), 1, v6))
    {
      sub_2417790D8();
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    v54 = _s6StylesV5DailyVMa(0);
    v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v9[15];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v118((_QWORD *)((char *)a2 + v55), 1, v6))
    {
      sub_2417790D8();
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    v59 = _s6StylesV9MomentaryVMa(0);
    v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    v60 = v9[16];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    if (v118((_QWORD *)((char *)a2 + v60), 1, v6))
    {
      sub_2417790D8();
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    v64 = _s6StylesV6HeaderVMa(0);
    v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    v65 = v9[17];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    if (v118((_QWORD *)((char *)a2 + v65), 1, v6))
    {
      sub_2417790D8();
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    v69 = _s6StylesV11ChartButtonVMa(0);
    v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    v70 = v9[18];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    if (v118((_QWORD *)((char *)a2 + v70), 1, v6))
    {
      sub_2417790D8();
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    a3 = v114;
    v74 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v75 = *(int *)(a3 + 20);
  v117 = a1;
  v119 = a2;
  v76 = (char *)a1 + v75;
  v77 = (_QWORD *)((char *)a2 + v75);
  *(_QWORD *)((char *)a1 + v75) = *v77;
  v78 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v79 = v78[5];
  v80 = &v76[v79];
  v81 = (char *)v77 + v79;
  v82 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
  v83 = v78[6];
  v84 = &v76[v83];
  v85 = (_QWORD *)((char *)v77 + v83);
  v86 = v85[1];
  *(_QWORD *)v84 = *v85;
  *((_QWORD *)v84 + 1) = v86;
  v87 = v78[7];
  v88 = &v76[v87];
  v89 = (char *)v77 + v87;
  v90 = (int *)_s5EntryVMa();
  v91 = *((_QWORD *)v90 - 1);
  v92 = *(unsigned int (**)(char *, uint64_t, int *))(v91 + 48);
  swift_bridgeObjectRetain();
  if (v92(v89, 1, v90))
  {
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  else
  {
    v94 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v88, v89, v94);
    v95 = v90[5];
    v96 = &v88[v95];
    v97 = &v89[v95];
    v98 = *((_QWORD *)v97 + 1);
    *(_QWORD *)v96 = *(_QWORD *)v97;
    *((_QWORD *)v96 + 1) = v98;
    v99 = v90[6];
    v100 = &v88[v99];
    v101 = &v89[v99];
    v102 = *((_QWORD *)v101 + 1);
    *(_QWORD *)v100 = *(_QWORD *)v101;
    *((_QWORD *)v100 + 1) = v102;
    v103 = v90[7];
    v104 = &v88[v103];
    v105 = &v89[v103];
    v106 = *((_QWORD *)v105 + 1);
    *(_QWORD *)v104 = *(_QWORD *)v105;
    *((_QWORD *)v104 + 1) = v106;
    v107 = v90[8];
    v108 = &v88[v107];
    v109 = &v89[v107];
    v115 = a3;
    v110 = *((_QWORD *)v109 + 1);
    *(_QWORD *)v108 = *(_QWORD *)v109;
    *((_QWORD *)v108 + 1) = v110;
    *(_QWORD *)&v88[v90[9]] = *(_QWORD *)&v89[v90[9]];
    v111 = *(void (**)(char *, _QWORD, uint64_t, int *))(v91 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3 = v115;
    swift_bridgeObjectRetain();
    v111(v88, 0, 1, v90);
  }
  *(_QWORD *)&v76[v78[8]] = *(_QWORD *)((char *)v77 + v78[8]);
  *(_QWORD *)&v76[v78[9]] = *(_QWORD *)((char *)v77 + v78[9]);
  *(_QWORD *)((char *)v117 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)v119 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v117;
}

_QWORD *sub_24185B948(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  _QWORD *v79;
  int *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int *v91;
  uint64_t v92;
  uint64_t (*v93)(char *, uint64_t, int *);
  int v94;
  int v95;
  uint64_t (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  void (*v111)(char *, _QWORD, uint64_t, int *);
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  unsigned int (*v130)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v131;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v130 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48);
      v127 = a3;
      if (v130(a2, 1, v7))
      {
        sub_2417790D8();
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2418A87B4();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      v15(v12, v13, v14);
      *((_BYTE *)a1 + v10[6]) = *((_BYTE *)a2 + v10[6]);
      v16 = v10[7];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_2418A84E4();
      v126 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v126(v17, v18, v19);
      v20 = v10[8];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      if (v130((_QWORD *)((char *)a2 + v20), 1, v7))
      {
        sub_2417790D8();
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
      }
      v24 = _s6StylesV8TimelineVMa(0);
      v15(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      v25 = v10[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v128 = v8;
      if (v130((_QWORD *)((char *)a2 + v25), 1, v7))
      {
        sub_2417790D8();
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v26, v27, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v26, 0, 1, v7);
      }
      v29 = _s6StylesV6NoDataVMa(0);
      v15(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      v30 = v10[10];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      if (v130((_QWORD *)((char *)a2 + v30), 1, v7))
      {
        sub_2417790D8();
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        v34 = v128;
      }
      else
      {
        v34 = v128;
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v31, v32, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v31, 0, 1, v7);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v15(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v14);
      v36 = v10[11];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      if (v130((_QWORD *)((char *)a2 + v36), 1, v7))
      {
        sub_2417790D8();
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v37, v38, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v7);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v15(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v14);
      v41 = v10[12];
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      if (v130((_QWORD *)((char *)a2 + v41), 1, v7))
      {
        sub_2417790D8();
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v42, v43, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v42, 0, 1, v7);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v15(&v42[v45[5]], &v43[v45[5]], v14);
      v42[v45[6]] = v43[v45[6]];
      v126(&v42[v45[7]], &v43[v45[7]], v19);
      v46 = v10[13];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      if (v130((_QWORD *)((char *)a2 + v46), 1, v7))
      {
        sub_2417790D8();
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v47, v48, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v47, 0, 1, v7);
      }
      a3 = v127;
      v50 = _s6StylesV5EmptyVMa(0);
      v15(&v47[*(int *)(v50 + 20)], &v48[*(int *)(v50 + 20)], v14);
      v47[*(int *)(v50 + 24)] = v48[*(int *)(v50 + 24)];
      v51 = v10[14];
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      if (v130((_QWORD *)((char *)a2 + v51), 1, v7))
      {
        sub_2417790D8();
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v52, v53, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v52, 0, 1, v7);
      }
      v55 = _s6StylesV5DailyVMa(0);
      v15(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v14);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      v56 = v10[15];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      if (v130((_QWORD *)((char *)a2 + v56), 1, v7))
      {
        sub_2417790D8();
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        v60 = v128;
      }
      else
      {
        v60 = v128;
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v57, v58, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v57, 0, 1, v7);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v15(&v57[*(int *)(v61 + 20)], &v58[*(int *)(v61 + 20)], v14);
      v62 = v10[16];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      if (v130((_QWORD *)((char *)a2 + v62), 1, v7))
      {
        sub_2417790D8();
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v63, v64, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v63, 0, 1, v7);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v15(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v14);
      v67 = v10[17];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      if (v130((_QWORD *)((char *)a2 + v67), 1, v7))
      {
        sub_2417790D8();
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v68, v69, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v68, 0, 1, v7);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v15(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v14);
      v72 = v10[18];
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      if (v130((_QWORD *)((char *)a2 + v72), 1, v7))
      {
        sub_2417790D8();
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v73, v74, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v73, 0, 1, v7);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v15(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v14);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v77 = *(int *)(a3 + 20);
  v129 = a1;
  v131 = a2;
  v78 = (char *)a1 + v77;
  v79 = (_QWORD *)((char *)a2 + v77);
  *(_QWORD *)((char *)a1 + v77) = *v79;
  v80 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v81 = v80[5];
  v82 = &v78[v81];
  v83 = (char *)v79 + v81;
  v84 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 24))(v82, v83, v84);
  v85 = v80[6];
  v86 = &v78[v85];
  v87 = (_QWORD *)((char *)v79 + v85);
  *(_QWORD *)v86 = *v87;
  *((_QWORD *)v86 + 1) = v87[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v88 = v80[7];
  v89 = &v78[v88];
  v90 = (char *)v79 + v88;
  v91 = (int *)_s5EntryVMa();
  v92 = *((_QWORD *)v91 - 1);
  v93 = *(uint64_t (**)(char *, uint64_t, int *))(v92 + 48);
  v94 = v93(v89, 1, v91);
  v95 = v93(v90, 1, v91);
  if (v94)
  {
    if (!v95)
    {
      v98 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v89, v90, v98);
      v99 = v91[5];
      v100 = &v89[v99];
      v101 = &v90[v99];
      *(_QWORD *)v100 = *(_QWORD *)v101;
      *((_QWORD *)v100 + 1) = *((_QWORD *)v101 + 1);
      v102 = v91[6];
      v103 = &v89[v102];
      v104 = &v90[v102];
      *(_QWORD *)v103 = *(_QWORD *)v104;
      *((_QWORD *)v103 + 1) = *((_QWORD *)v104 + 1);
      v105 = v91[7];
      v106 = &v89[v105];
      v107 = &v90[v105];
      *(_QWORD *)v106 = *(_QWORD *)v107;
      *((_QWORD *)v106 + 1) = *((_QWORD *)v107 + 1);
      v108 = v91[8];
      v109 = &v89[v108];
      v110 = &v90[v108];
      *(_QWORD *)v109 = *(_QWORD *)v110;
      *((_QWORD *)v109 + 1) = *((_QWORD *)v110 + 1);
      *(_QWORD *)&v89[v91[9]] = *(_QWORD *)&v90[v91[9]];
      v111 = *(void (**)(char *, _QWORD, uint64_t, int *))(v92 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v111(v89, 0, 1, v91);
      goto LABEL_50;
    }
    v96 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v95)
    {
      v112 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 24))(v89, v90, v112);
      v113 = v91[5];
      v114 = &v89[v113];
      v115 = &v90[v113];
      *(_QWORD *)v114 = *(_QWORD *)v115;
      *((_QWORD *)v114 + 1) = *((_QWORD *)v115 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v116 = v91[6];
      v117 = &v89[v116];
      v118 = &v90[v116];
      *(_QWORD *)v117 = *(_QWORD *)v118;
      *((_QWORD *)v117 + 1) = *((_QWORD *)v118 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v119 = v91[7];
      v120 = &v89[v119];
      v121 = &v90[v119];
      *(_QWORD *)v120 = *(_QWORD *)v121;
      *((_QWORD *)v120 + 1) = *((_QWORD *)v121 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v122 = v91[8];
      v123 = &v89[v122];
      v124 = &v90[v122];
      *(_QWORD *)v123 = *(_QWORD *)v124;
      *((_QWORD *)v123 + 1) = *((_QWORD *)v124 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v89[v91[9]] = *(_QWORD *)&v90[v91[9]];
      goto LABEL_50;
    }
    sub_24172588C((uint64_t)v89, (uint64_t (*)(_QWORD))_s5EntryVMa);
    v96 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v96);
  memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
LABEL_50:
  *(_QWORD *)&v78[v80[8]] = *(_QWORD *)((char *)v79 + v80[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v78[v80[9]] = *(_QWORD *)((char *)v79 + v80[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v129 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)v131 + *(int *)(a3 + 24));
  return v129;
}

char *sub_24185C4CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    v93 = a3;
    v94 = v9;
    if (v95(a2, 1, v8))
    {
      sub_2417790D8();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2418A87B4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    v17 = v11[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_2418A84E4();
    v92 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
    v92(v18, v19, v20);
    v21 = v11[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (v95(&a2[v21], 1, v8))
    {
      sub_2417790D8();
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v22, v23, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v22, 0, 1, v8);
    }
    v25 = _s6StylesV8TimelineVMa(0);
    v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    v26 = v11[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    if (v95(&a2[v26], 1, v8))
    {
      sub_2417790D8();
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v27, v28, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v27, 0, 1, v8);
    }
    v30 = _s6StylesV6NoDataVMa(0);
    v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    v31 = v11[10];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (v95(&a2[v31], 1, v8))
    {
      sub_2417790D8();
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v32, v33, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v32, 0, 1, v8);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    v36 = v11[11];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if (v95(&a2[v36], 1, v8))
    {
      sub_2417790D8();
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v37, v38, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v37, 0, 1, v8);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    v41 = v11[12];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v95(&a2[v41], 1, v8))
    {
      sub_2417790D8();
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v42, v43, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v42, 0, 1, v8);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v16(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v92(&v42[v45[7]], &v43[v45[7]], v20);
    v46 = v11[13];
    v47 = &a1[v46];
    v48 = &a2[v46];
    if (v95(&a2[v46], 1, v8))
    {
      sub_2417790D8();
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v47, v48, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v47, 0, 1, v8);
    }
    a3 = v93;
    v50 = _s6StylesV5EmptyVMa(0);
    v16(&v47[*(int *)(v50 + 20)], &v48[*(int *)(v50 + 20)], v15);
    v47[*(int *)(v50 + 24)] = v48[*(int *)(v50 + 24)];
    v51 = v11[14];
    v52 = &a1[v51];
    v53 = &a2[v51];
    if (v95(&a2[v51], 1, v8))
    {
      sub_2417790D8();
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v52, v53, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v52, 0, 1, v8);
    }
    v55 = _s6StylesV5DailyVMa(0);
    v16(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v15);
    v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
    v56 = v11[15];
    v57 = &a1[v56];
    v58 = &a2[v56];
    if (v95(&a2[v56], 1, v8))
    {
      sub_2417790D8();
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v57, v58, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v57, 0, 1, v8);
    }
    v60 = _s6StylesV9MomentaryVMa(0);
    v16(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v15);
    v61 = v11[16];
    v62 = &a1[v61];
    v63 = &a2[v61];
    if (v95(&a2[v61], 1, v8))
    {
      sub_2417790D8();
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v62, v63, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v62, 0, 1, v8);
    }
    v65 = _s6StylesV6HeaderVMa(0);
    v16(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v15);
    v66 = v11[17];
    v67 = &a1[v66];
    v68 = &a2[v66];
    if (v95(&a2[v66], 1, v8))
    {
      sub_2417790D8();
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v67, v68, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v67, 0, 1, v8);
    }
    v70 = _s6StylesV11ChartButtonVMa(0);
    v16(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v15);
    v71 = v11[18];
    v72 = &a1[v71];
    v73 = &a2[v71];
    if (v95(&a2[v71], 1, v8))
    {
      sub_2417790D8();
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v72, v73, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v72, 0, 1, v8);
    }
    v75 = _s6StylesV15LogButtonFooterVMa(0);
    v16(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v76 = *(int *)(a3 + 20);
  v77 = &a1[v76];
  v78 = &a2[v76];
  *(_QWORD *)&a1[v76] = *(_QWORD *)&a2[v76];
  v79 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v80 = v79[5];
  v81 = &v77[v80];
  v82 = &v78[v80];
  v83 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
  *(_OWORD *)&v77[v79[6]] = *(_OWORD *)&v78[v79[6]];
  v84 = v79[7];
  v85 = &v77[v84];
  v86 = &v78[v84];
  v87 = (int *)_s5EntryVMa();
  v88 = *((_QWORD *)v87 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v88 + 48))(v86, 1, v87))
  {
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    v90 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v85, v86, v90);
    *(_OWORD *)&v85[v87[5]] = *(_OWORD *)&v86[v87[5]];
    *(_OWORD *)&v85[v87[6]] = *(_OWORD *)&v86[v87[6]];
    *(_OWORD *)&v85[v87[7]] = *(_OWORD *)&v86[v87[7]];
    *(_OWORD *)&v85[v87[8]] = *(_OWORD *)&v86[v87[8]];
    *(_QWORD *)&v85[v87[9]] = *(_QWORD *)&v86[v87[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v88 + 56))(v85, 0, 1, v87);
  }
  *(_QWORD *)&v77[v79[8]] = *(_QWORD *)&v78[v79[8]];
  *(_QWORD *)&v77[v79[9]] = *(_QWORD *)&v78[v79[9]];
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_24185CE80(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, int *);
  int v97;
  int v98;
  uint64_t (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  unsigned int (*v127)(char *, uint64_t, uint64_t);
  char *v128;

  v3 = a3;
  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A8EB0();
      v10 = *(_QWORD *)(v9 - 8);
      v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      v125 = v10;
      if (v127(a2, 1, v9))
      {
        sub_2417790D8();
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v13 = v12[5];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_2418A87B4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v17(v14, v15, v16);
      a1[v12[6]] = a2[v12[6]];
      v18 = v12[7];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = sub_2418A84E4();
      v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
      v124(v19, v20, v21);
      v22 = v12[8];
      v23 = &a1[v22];
      v24 = &a2[v22];
      if (v127(&a2[v22], 1, v9))
      {
        sub_2417790D8();
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v23, v24, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v23, 0, 1, v9);
      }
      v26 = _s6StylesV8TimelineVMa(0);
      v17(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      v27 = v12[9];
      v28 = &a1[v27];
      v29 = &a2[v27];
      if (v127(&a2[v27], 1, v9))
      {
        sub_2417790D8();
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v28, v29, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v28, 0, 1, v9);
      }
      v31 = _s6StylesV6NoDataVMa(0);
      v17(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      v32 = v12[10];
      v33 = &a1[v32];
      v34 = &a2[v32];
      if (v127(&a2[v32], 1, v9))
      {
        sub_2417790D8();
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v33, v34, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v33, 0, 1, v9);
      }
      v36 = _s6StylesV11PlaceholderVMa(0);
      v17(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v16);
      v37 = v12[11];
      v38 = &a1[v37];
      v39 = &a2[v37];
      if (v127(&a2[v37], 1, v9))
      {
        sub_2417790D8();
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v38, v39, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v38, 0, 1, v9);
      }
      v41 = _s6StylesV6SymbolVMa(0);
      v17(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v16);
      v42 = v12[12];
      v43 = &a1[v42];
      v44 = &a2[v42];
      if (v127(&a2[v42], 1, v9))
      {
        sub_2417790D8();
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v43, v44, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v43, 0, 1, v9);
      }
      v46 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v17(&v43[v46[5]], &v44[v46[5]], v16);
      v43[v46[6]] = v44[v46[6]];
      v124(&v43[v46[7]], &v44[v46[7]], v21);
      v47 = v12[13];
      v48 = &a1[v47];
      v49 = &a2[v47];
      if (v127(&a2[v47], 1, v9))
      {
        sub_2417790D8();
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        v51 = v125;
      }
      else
      {
        v51 = v125;
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v48, v49, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v48, 0, 1, v9);
      }
      v52 = _s6StylesV5EmptyVMa(0);
      v17(&v48[*(int *)(v52 + 20)], &v49[*(int *)(v52 + 20)], v16);
      v48[*(int *)(v52 + 24)] = v49[*(int *)(v52 + 24)];
      v53 = v12[14];
      v54 = &a1[v53];
      v55 = &a2[v53];
      if (v127(&a2[v53], 1, v9))
      {
        sub_2417790D8();
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v54, v55, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v9);
      }
      v57 = _s6StylesV5DailyVMa(0);
      v17(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      v58 = v12[15];
      v59 = &a1[v58];
      v60 = &a2[v58];
      if (v127(&a2[v58], 1, v9))
      {
        sub_2417790D8();
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v59, v60, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v59, 0, 1, v9);
      }
      v62 = _s6StylesV9MomentaryVMa(0);
      v17(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v16);
      v63 = v12[16];
      v64 = &a1[v63];
      v65 = &a2[v63];
      if (v127(&a2[v63], 1, v9))
      {
        sub_2417790D8();
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v64, v65, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v64, 0, 1, v9);
      }
      v67 = _s6StylesV6HeaderVMa(0);
      v17(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v16);
      v68 = v12[17];
      v69 = &a1[v68];
      v70 = &a2[v68];
      if (v127(&a2[v68], 1, v9))
      {
        sub_2417790D8();
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v69, v70, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v69, 0, 1, v9);
      }
      v72 = _s6StylesV11ChartButtonVMa(0);
      v17(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v16);
      v73 = v12[18];
      v74 = &a1[v73];
      v75 = &a2[v73];
      if (v127(&a2[v73], 1, v9))
      {
        sub_2417790D8();
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v74, v75, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v74, 0, 1, v9);
      }
      v77 = _s6StylesV15LogButtonFooterVMa(0);
      v17(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v16);
      swift_storeEnumTagMultiPayload();
      v3 = a3;
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
  }
  v78 = *(int *)(v3 + 20);
  v79 = &a1[v78];
  v128 = a2;
  v80 = &a2[v78];
  *(_QWORD *)&a1[v78] = *(_QWORD *)&a2[v78];
  v81 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v82 = v81[5];
  v83 = &v79[v82];
  v84 = &v80[v82];
  v85 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 40))(v83, v84, v85);
  v86 = v81[6];
  v87 = &v79[v86];
  v88 = &v80[v86];
  v90 = *(_QWORD *)v88;
  v89 = *((_QWORD *)v88 + 1);
  *(_QWORD *)v87 = v90;
  *((_QWORD *)v87 + 1) = v89;
  swift_bridgeObjectRelease();
  v91 = v81[7];
  v92 = &v79[v91];
  v93 = &v80[v91];
  v94 = (int *)_s5EntryVMa();
  v95 = *((_QWORD *)v94 - 1);
  v96 = *(uint64_t (**)(char *, uint64_t, int *))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (v97)
  {
    if (!v98)
    {
      v101 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v92, v93, v101);
      *(_OWORD *)&v92[v94[5]] = *(_OWORD *)&v93[v94[5]];
      *(_OWORD *)&v92[v94[6]] = *(_OWORD *)&v93[v94[6]];
      *(_OWORD *)&v92[v94[7]] = *(_OWORD *)&v93[v94[7]];
      *(_OWORD *)&v92[v94[8]] = *(_OWORD *)&v93[v94[8]];
      *(_QWORD *)&v92[v94[9]] = *(_QWORD *)&v93[v94[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56))(v92, 0, 1, v94);
      goto LABEL_49;
    }
    v99 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v98)
    {
      v102 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 40))(v92, v93, v102);
      v103 = v94[5];
      v104 = &v92[v103];
      v105 = &v93[v103];
      v107 = *(_QWORD *)v105;
      v106 = *((_QWORD *)v105 + 1);
      *(_QWORD *)v104 = v107;
      *((_QWORD *)v104 + 1) = v106;
      swift_bridgeObjectRelease();
      v108 = v94[6];
      v109 = &v92[v108];
      v110 = &v93[v108];
      v112 = *(_QWORD *)v110;
      v111 = *((_QWORD *)v110 + 1);
      *(_QWORD *)v109 = v112;
      *((_QWORD *)v109 + 1) = v111;
      swift_bridgeObjectRelease();
      v113 = v94[7];
      v114 = &v92[v113];
      v115 = &v93[v113];
      v117 = *(_QWORD *)v115;
      v116 = *((_QWORD *)v115 + 1);
      *(_QWORD *)v114 = v117;
      *((_QWORD *)v114 + 1) = v116;
      swift_bridgeObjectRelease();
      v118 = v94[8];
      v119 = &v92[v118];
      v120 = &v93[v118];
      v122 = *(_QWORD *)v120;
      v121 = *((_QWORD *)v120 + 1);
      *(_QWORD *)v119 = v122;
      *((_QWORD *)v119 + 1) = v121;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v92[v94[9]] = *(_QWORD *)&v93[v94[9]];
      goto LABEL_49;
    }
    sub_24172588C((uint64_t)v92, (uint64_t (*)(_QWORD))_s5EntryVMa);
    v99 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v99);
  memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
LABEL_49:
  *(_QWORD *)&v79[v81[8]] = *(_QWORD *)&v80[v81[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v79[v81[9]] = *(_QWORD *)&v80[v81[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&v128[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_24185D968()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24185D974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for StateOfMindTimeline.DaySummary();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_24185DA00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24185DA0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for StateOfMindTimeline.DaySummary();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s13EntryBaseViewVMa()
{
  uint64_t result;

  result = qword_257153A98;
  if (!qword_257153A98)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24185DADC()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for StateOfMindTimeline.DaySummary();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_24185DB84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24185DB94@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  __int128 *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _BYTE v39[32];

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2418AA050();
    v23 = (void *)sub_2418A90A8();
    sub_2418A831C();

  }
  sub_2418A88E0();
  v24 = v13[1];
  v36 = *v13;
  v37 = v24;
  sub_2418633FC((uint64_t)&v36, (uint64_t)v39);
  v38 = *((_QWORD *)&v37 + 1);
  v34 = *((_QWORD *)v13 + 4);
  v35 = *((_BYTE *)v13 + 40);
  v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(__int128 *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_241863438((uint64_t)v39);
  sub_241863468((uint64_t)&v38);
  return sub_24174DDB4((uint64_t)&v34);
}

double sub_24185DD6C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862738, (uint64_t (*)(_QWORD))sub_241730470).n128_u64[0];
  return result;
}

double sub_24185DDC4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_24186272C, (uint64_t (*)(_QWORD))sub_241730F94).n128_u64[0];
  return result;
}

__n128 sub_24185DE1C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t, uint64_t), uint64_t (*a17)(_QWORD))
{
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v20)(_QWORD);
  void *v29;
  _OWORD *v30;
  __n128 result;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __n128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v18 = v17;
  v20 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2418AA050();
    v29 = (void *)sub_2418A90A8();
    sub_2418A831C();

    v20 = a17;
  }
  sub_2418A88E0();
  a16(v18, a9);
  v30 = (_OWORD *)(a9 + *(int *)(v20(0) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *v30 = v32;
  v30[1] = v33;
  result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

double sub_24185DFE4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862720, (uint64_t (*)(_QWORD))sub_24173D988).n128_u64[0];
  return result;
}

double sub_24185E03C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_2418626B8, (uint64_t (*)(_QWORD))sub_241862704).n128_u64[0];
  return result;
}

uint64_t sub_24185E094@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v20 = a19;
  v21 = a18;
  v22 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2418AA050();
    v31 = (void *)sub_2418A90A8();
    sub_2418A831C();

    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  sub_2418A88E0();
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_241728A50(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

double sub_24185E274@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862DA4, (uint64_t (*)(_QWORD))sub_24174B110).n128_u64[0];
  return result;
}

double sub_24185E2CC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_24186294C, (uint64_t (*)(_QWORD))sub_241862958).n128_u64[0];
  return result;
}

double sub_24185E324@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862B98, (uint64_t (*)(_QWORD))sub_24177D40C).n128_u64[0];
  return result;
}

double sub_24185E37C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862B8C, (uint64_t (*)(_QWORD))sub_24177D39C).n128_u64[0];
  return result;
}

double sub_24185E3D4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185EE98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t (*)(_QWORD))MEMORY[0x24BDF0440], (uint64_t (*)(_QWORD))sub_2417A6104).n128_u64[0];
  return result;
}

double sub_24185E42C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_2418626AC, (uint64_t (*)(_QWORD))sub_2417C3210).n128_u64[0];
  return result;
}

uint64_t sub_24185E484@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2418AA050();
    v25 = (void *)sub_2418A90A8();
    sub_2418A831C();

  }
  sub_2418A88E0();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(_QWORD *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;
  return swift_retain();
}

double sub_24185E62C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862744, (uint64_t (*)(_QWORD))sub_241862750).n128_u64[0];
  return result;
}

double sub_24185E684@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241863538, (uint64_t (*)(_QWORD))sub_2417E851C).n128_u64[0];
  return result;
}

uint64_t sub_24185E6DC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __int16 a18)
{
  __int16 v19;
  void *v28;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v19 = a18;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2418AA050();
    v28 = (void *)sub_2418A90A8();
    sub_2418A831C();

    v19 = a18;
  }
  sub_2418A88E0();
  *(_OWORD *)(a9 + 72) = v33;
  *(_OWORD *)(a9 + 88) = v34;
  *(_OWORD *)(a9 + 104) = v35;
  *(_OWORD *)(a9 + 120) = v36;
  *(_OWORD *)(a9 + 24) = v30;
  *(_OWORD *)(a9 + 40) = v31;
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = a17;
  *(_BYTE *)(a9 + 16) = v19 & 1;
  *(_BYTE *)(a9 + 17) = HIBYTE(v19) & 1;
  *(_OWORD *)(a9 + 56) = v32;
  return swift_retain();
}

double sub_24185E8B0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862CA8, (uint64_t (*)(_QWORD))sub_2417F3D50).n128_u64[0];
  return result;
}

double sub_24185E908@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862C78, (uint64_t (*)(_QWORD))sub_24177DAEC).n128_u64[0];
  return result;
}

double sub_24185E960@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862C6C, (uint64_t (*)(_QWORD))sub_2417F3E8C).n128_u64[0];
  return result;
}

double sub_24185E9B8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862C84, (uint64_t (*)(_QWORD))sub_24177DF08).n128_u64[0];
  return result;
}

uint64_t sub_24185EA10@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2418AA050();
    v23 = (void *)sub_2418A90A8();
    sub_2418A831C();

  }
  sub_2418A88E0();
  v24 = *(_OWORD *)(v13 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v13 + 128);
  *(_OWORD *)(a9 + 144) = v24;
  v25 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v25;
  v26 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v26;
  v27 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v27;
  v28 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v28;
  *(_OWORD *)(a9 + 216) = v33;
  *(_OWORD *)(a9 + 232) = v34;
  *(_OWORD *)(a9 + 248) = v35;
  *(_OWORD *)(a9 + 264) = v36;
  *(_OWORD *)(a9 + 168) = v30;
  *(_OWORD *)(a9 + 184) = v31;
  *(_QWORD *)(a9 + 160) = *(_QWORD *)(v13 + 160);
  *(_OWORD *)(a9 + 200) = v32;
  return sub_241862BBC(v13);
}

double sub_24185EBE4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862BB0, (uint64_t (*)(_QWORD))sub_2417F3EF0).n128_u64[0];
  return result;
}

uint64_t sub_24185EC3C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  void *v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v18 = a16;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2418AA050();
    v27 = (void *)sub_2418A90A8();
    sub_2418A831C();

    v18 = a16;
  }
  sub_2418A88E0();
  *(_QWORD *)a9 = v18;
  *(_QWORD *)(a9 + 8) = a17;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  *(_OWORD *)(a9 + 48) = v31;
  *(_OWORD *)(a9 + 64) = v32;
  return swift_retain();
}

double sub_24185EDE8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862BA4, (uint64_t (*)(_QWORD))sub_241816B64).n128_u64[0];
  return result;
}

double sub_24185EE40@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185EE98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t (*)(_QWORD))sub_241818F00, (uint64_t (*)(_QWORD))sub_241818EE4).n128_u64[0];
  return result;
}

__n128 sub_24185EE98@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(_QWORD), uint64_t (*a17)(_QWORD))
{
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v20)(_QWORD);
  void *v29;
  uint64_t v30;
  _OWORD *v31;
  __n128 result;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __n128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v18 = v17;
  v20 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2418AA050();
    v29 = (void *)sub_2418A90A8();
    sub_2418A831C();

    v20 = a17;
  }
  sub_2418A88E0();
  v30 = a16(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a9, v18, v30);
  v31 = (_OWORD *)(a9 + *(int *)(v20(0) + 36));
  v31[4] = v37;
  v31[5] = v38;
  v31[6] = v39;
  *v31 = v33;
  v31[1] = v34;
  result = v36;
  v31[2] = v35;
  v31[3] = v36;
  return result;
}

double sub_24185F074@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862B80, (uint64_t (*)(_QWORD))sub_241819020).n128_u64[0];
  return result;
}

double sub_24185F0CC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862D1C, (uint64_t (*)(_QWORD))sub_241862D7C).n128_u64[0];
  return result;
}

double sub_24185F124@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_2418634B8, (uint64_t (*)(_QWORD))sub_24184B7E4).n128_u64[0];
  return result;
}

__n128 sub_24185F17C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __n128 result;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __n128 v32;
  __int128 v33;
  __int128 v34;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2418AA050();
    v23 = (void *)sub_2418A90A8();
    sub_2418A831C();

  }
  sub_2418A88E0();
  v24 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v24;
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_QWORD *)(a9 + 112) = *(_QWORD *)(v13 + 112);
  v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  v26 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 152) = v30;
  *(_OWORD *)(a9 + 136) = v29;
  *(_OWORD *)(a9 + 120) = v28;
  result = v32;
  *(_OWORD *)(a9 + 216) = v34;
  *(_OWORD *)(a9 + 200) = v33;
  *(__n128 *)(a9 + 184) = v32;
  *(_OWORD *)(a9 + 168) = v31;
  return result;
}

double sub_24185F340@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862D98, (uint64_t (*)(_QWORD))sub_241851DA8).n128_u64[0];
  return result;
}

double sub_24185F398@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241863490, (uint64_t (*)(_QWORD))sub_24186349C).n128_u64[0];
  return result;
}

double sub_24185F3F0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862E44, (uint64_t (*)(_QWORD))sub_241862FFC).n128_u64[0];
  return result;
}

double sub_24185F448@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241863018, (uint64_t (*)(_QWORD))sub_2418633E0).n128_u64[0];
  return result;
}

double sub_24185F4A0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241863600, (uint64_t (*)(_QWORD))sub_241863AB4).n128_u64[0];
  return result;
}

double sub_24185F4F8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241863544, (uint64_t (*)(_QWORD))sub_2418635E4).n128_u64[0];
  return result;
}

double sub_24185F550@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24185DE1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241862974, (uint64_t (*)(_QWORD))sub_241862B64).n128_u64[0];
  return result;
}

uint64_t sub_24185F5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  void (*v27)();
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;

  v1 = v0;
  v2 = sub_2418A8EB0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241779078();
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417790D8();
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v14, v17);
  v20 = (char *)&v31 - v19;
  MEMORY[0x24BDAC7A8](v18, v21);
  v23 = (char *)&v31 - v22;
  sub_2417289A8(v1, (uint64_t)&v31 - v22, (uint64_t (*)(_QWORD))sub_2417790D8);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v20, *MEMORY[0x24BDEFEF0], v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v20, 0, 1, v2);
  v24 = (uint64_t)&v11[*(int *)(v8 + 48)];
  sub_2417289A8((uint64_t)v23, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_2417790D8);
  sub_2417289A8((uint64_t)v20, v24, (uint64_t (*)(_QWORD))sub_2417790D8);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v25((uint64_t)v11, 1, v2) == 1)
  {
    sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))sub_2417790D8);
    sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417790D8);
    v26 = v25(v24, 1, v2);
    if (v26 == 1)
      v27 = sub_2417790D8;
    else
      v27 = sub_241779078;
    if (v26 == 1)
      v28 = -1;
    else
      v28 = 0;
  }
  else
  {
    sub_2417289A8((uint64_t)v11, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_2417790D8);
    if (v25(v24, 1, v2) == 1)
    {
      sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))sub_2417790D8);
      sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417790D8);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v16, v2);
      v28 = 0;
      v27 = sub_241779078;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v6, v24, v2);
      sub_24172159C(qword_25714DBB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], MEMORY[0x24BDEFF08]);
      v28 = sub_2418A9DA4();
      v29 = *(void (**)(char *, uint64_t))(v3 + 8);
      v29(v6, v2);
      v27 = sub_2417790D8;
      sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))sub_2417790D8);
      sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417790D8);
      v29(v16, v2);
    }
  }
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))v27);
  return v28 & 1;
}

uint64_t sub_24185F894@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t KeyPath;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;

  v144 = a1;
  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  MEMORY[0x24BDAC7A8](v2, v3);
  v142 = (uint64_t *)((char *)&v123 - v4);
  v5 = type metadata accessor for StateOfMindTimeline.DaySummary();
  MEMORY[0x24BDAC7A8](v5, v6);
  v140 = (uint64_t)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = _s22DaySummaryGradientViewVMa();
  MEMORY[0x24BDAC7A8](v138, v8);
  v141 = (uint64_t *)((char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241860950(0);
  v139 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v143 = (uint64_t)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v14 = MEMORY[0x24BDAC7A8](v125, v13);
  v133 = (uint64_t)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v130 = (uint64_t)&v123 - v18;
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v123 - v20;
  v22 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v132 = (uint64_t)&v123 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v127 = (uint64_t)&v123 - v28;
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v123 - v30;
  sub_24186096C();
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)&v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241860B4C(0);
  v124 = v36;
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)&v123 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241860B68(0);
  v126 = v40;
  MEMORY[0x24BDAC7A8](v40, v41);
  v43 = (char *)&v123 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241860B84(0);
  v128 = v44;
  MEMORY[0x24BDAC7A8](v44, v45);
  v131 = (uint64_t)&v123 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241860BA0(0);
  v129 = v47;
  MEMORY[0x24BDAC7A8](v47, v48);
  v136 = (char *)&v123 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241731FB0(0, &qword_257153B38, v50, (uint64_t (*)(uint64_t))sub_241860BC4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v134 = v51;
  MEMORY[0x24BDAC7A8](v51, v52);
  v137 = (char *)&v123 - v53;
  sub_241860C60();
  MEMORY[0x24BDAC7A8](v54, v55);
  v135 = (uint64_t)&v123 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v35 = sub_2418A8C64();
  *((_QWORD *)v35 + 1) = 0;
  v35[16] = 0;
  sub_241860CDC();
  sub_2418601DC(v1, (uint64_t)&v35[*(int *)(v57 + 44)]);
  v58 = sub_2418A90CC();
  sub_241860D60((uint64_t)v31);
  v59 = v22;
  sub_2417289A8((uint64_t)&v31[*(int *)(v22 + 48)], (uint64_t)v21, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  v60 = v125;
  sub_24172588C((uint64_t)v31, type metadata accessor for StateOfMindTimeline.Styles);
  if (v21[*(int *)(v60 + 24)] == 1 && (sub_2418A879C() & 1) == 0)
    sub_24185F5A8();
  sub_24172588C((uint64_t)v21, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_2418A84A8();
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v68 = v67;
  sub_2417289A8((uint64_t)v35, (uint64_t)v39, (uint64_t (*)(_QWORD))sub_24186096C);
  v69 = &v39[*(int *)(v124 + 36)];
  *v69 = v58;
  *((_QWORD *)v69 + 1) = v62;
  *((_QWORD *)v69 + 2) = v64;
  *((_QWORD *)v69 + 3) = v66;
  *((_QWORD *)v69 + 4) = v68;
  v69[40] = 0;
  sub_24172588C((uint64_t)v35, (uint64_t (*)(_QWORD))sub_24186096C);
  v70 = sub_2418A90E4();
  v71 = v127;
  sub_241860D60(v127);
  v72 = v130;
  sub_2417289A8(v71 + *(int *)(v59 + 48), v130, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_24172588C(v71, type metadata accessor for StateOfMindTimeline.Styles);
  sub_24172588C(v72, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_2418A84A8();
  v74 = v73;
  v76 = v75;
  v78 = v77;
  v80 = v79;
  sub_2417289A8((uint64_t)v39, (uint64_t)v43, (uint64_t (*)(_QWORD))sub_241860B4C);
  v81 = &v43[*(int *)(v126 + 36)];
  *v81 = v70;
  *((_QWORD *)v81 + 1) = v74;
  *((_QWORD *)v81 + 2) = v76;
  *((_QWORD *)v81 + 3) = v78;
  *((_QWORD *)v81 + 4) = v80;
  v81[40] = 0;
  sub_24172588C((uint64_t)v39, (uint64_t (*)(_QWORD))sub_241860B4C);
  v82 = sub_2418A90F0();
  v83 = v132;
  sub_241860D60(v132);
  v84 = v133;
  sub_2417289A8(v83 + *(int *)(v59 + 48), v133, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_24172588C(v83, type metadata accessor for StateOfMindTimeline.Styles);
  sub_24172588C(v84, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_2418A84A8();
  v86 = v85;
  v88 = v87;
  v90 = v89;
  v92 = v91;
  v93 = v131;
  sub_2417289A8((uint64_t)v43, v131, (uint64_t (*)(_QWORD))sub_241860B68);
  v94 = v93 + *(int *)(v128 + 36);
  *(_BYTE *)v94 = v82;
  *(_QWORD *)(v94 + 8) = v86;
  *(_QWORD *)(v94 + 16) = v88;
  *(_QWORD *)(v94 + 24) = v90;
  *(_QWORD *)(v94 + 32) = v92;
  *(_BYTE *)(v94 + 40) = 0;
  sub_24172588C((uint64_t)v43, (uint64_t (*)(_QWORD))sub_241860B68);
  sub_2418A90E4();
  v95 = _s13EntryBaseViewVMa();
  sub_2418A84A8();
  v145 = v96;
  v146 = v97;
  v147 = v98;
  v148 = v99;
  v149 = 0;
  v100 = (uint64_t)v136;
  sub_2418A8EE0();
  sub_241731B4C(v93, v100, (uint64_t (*)(_QWORD))sub_241860B84);
  v101 = v140;
  sub_2417289A8(v1 + *(int *)(v95 + 20), v140, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  KeyPath = swift_getKeyPath();
  v103 = (uint64_t)v142;
  *v142 = KeyPath;
  v104 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v105 = swift_getKeyPath();
  v106 = (uint64_t)v141;
  *v141 = v105;
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v104);
  swift_storeEnumTagMultiPayload();
  v107 = v138;
  sub_241751234(v103, v106 + *(int *)(v138 + 20));
  sub_241731B4C(v101, v106 + *(int *)(v107 + 24), (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  v108 = sub_2418A90E4();
  v109 = sub_2418A882C();
  v110 = v143;
  sub_2417289A8(v106, v143, (uint64_t (*)(_QWORD))_s22DaySummaryGradientViewVMa);
  v111 = v110 + *(int *)(v139 + 36);
  *(_QWORD *)v111 = v109;
  *(_BYTE *)(v111 + 8) = v108;
  sub_24172588C(v106, (uint64_t (*)(_QWORD))_s22DaySummaryGradientViewVMa);
  v112 = sub_2418A9960();
  v114 = v113;
  v115 = (uint64_t)v137;
  v116 = (uint64_t)&v137[*(int *)(v134 + 36)];
  sub_2417289A8(v110, v116, (uint64_t (*)(_QWORD))sub_241860950);
  sub_241860BC4();
  v118 = (uint64_t *)(v116 + *(int *)(v117 + 36));
  *v118 = v112;
  v118[1] = v114;
  sub_2417289A8(v100, v115, (uint64_t (*)(_QWORD))sub_241860BA0);
  sub_24172588C(v110, (uint64_t (*)(_QWORD))sub_241860950);
  sub_24172588C(v100, (uint64_t (*)(_QWORD))sub_241860BA0);
  v119 = sub_2418A9960();
  v120 = v135;
  sub_24185DE1C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v135, 0.0, 1, INFINITY, 0, v119, v121, (void (*)(uint64_t, uint64_t))sub_241861010, (uint64_t (*)(_QWORD))sub_241860C60);
  sub_241860FB4(v115);
  return sub_241731B4C(v120, v144, (uint64_t (*)(_QWORD))sub_241860C60);
}

uint64_t sub_2418601DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)();
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t KeyPath;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v88 = a2;
  sub_2418609EC(0);
  v89 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v84 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s16EntryMomentsViewVMa();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v81 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v83 = (uint64_t *)((char *)&v74 - v11);
  v12 = _s18EntrySeparatorViewVMa();
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v77 = (uint64_t *)((char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14, v16);
  v82 = (uint64_t)&v74 - v17;
  v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_24172570C(0, &qword_257151EE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v19, v20);
  v78 = (uint64_t)&v74 - v21;
  v22 = _s12EntryDayViewVMa();
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v79 = (uint64_t)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v26);
  v80 = (uint64_t *)((char *)&v74 - v27);
  sub_241731FB0(0, &qword_257153B68, (uint64_t (*)(uint64_t))_s14EntryEmptyViewVMa, (uint64_t (*)(uint64_t))sub_2418609EC, MEMORY[0x24BDEF380]);
  v85 = v28;
  MEMORY[0x24BDAC7A8](v28, v29);
  v87 = (uint64_t)&v74 - v30;
  v86 = _s14EntryEmptyViewVMa();
  v32 = MEMORY[0x24BDAC7A8](v86, v31);
  v75 = (uint64_t *)((char *)&v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v32, v34);
  v76 = (uint64_t)&v74 - v35;
  v36 = _s13EntryBaseViewVMa();
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)&v74 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v18);
  MEMORY[0x24BDAC7A8](v40, v41);
  v43 = (char *)&v74 - v42;
  v44 = a1 + *(int *)(v36 + 20);
  v45 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  sub_241862CCC(v44 + v45[7], (uint64_t)v43, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v18);
  v46 = _s5EntryVMa();
  v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v43, 1, v46);
  sub_24173FC60((uint64_t)v43, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v18);
  sub_2417289A8(a1, (uint64_t)v39, (uint64_t (*)(_QWORD))_s13EntryBaseViewVMa);
  if (v47 != 1)
  {
    sub_24172588C((uint64_t)v39, (uint64_t (*)(_QWORD))_s13EntryBaseViewVMa);
    goto LABEL_5;
  }
  v48 = *(_QWORD *)(*(_QWORD *)&v39[*(int *)(v36 + 20) + v45[8]] + 16);
  sub_24172588C((uint64_t)v39, (uint64_t (*)(_QWORD))_s13EntryBaseViewVMa);
  if (v48)
  {
LABEL_5:
    v58 = v78;
    sub_2417289A8(v44, v78, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v45 - 1) + 56))(v58, 0, 1, v45);
    v59 = v45[9];
    v60 = *(_QWORD **)(v44 + v59);
    swift_bridgeObjectRetain();
    v61 = v80;
    sub_2418107AC(v58, v60, v80);
    KeyPath = swift_getKeyPath();
    v63 = (uint64_t)v77;
    *v77 = KeyPath;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    v64 = v82;
    sub_241731B4C(v63, v82, (uint64_t (*)(_QWORD))_s18EntrySeparatorViewVMa);
    v65 = *(_QWORD *)(v44 + v45[8]);
    v66 = *(_QWORD **)(v44 + v59);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v67 = v83;
    sub_24185357C(v65, v66, v83);
    v68 = v79;
    sub_2417289A8((uint64_t)v61, v79, (uint64_t (*)(_QWORD))_s12EntryDayViewVMa);
    sub_2417289A8(v64, v63, (uint64_t (*)(_QWORD))_s18EntrySeparatorViewVMa);
    v69 = v81;
    sub_2417289A8((uint64_t)v67, v81, (uint64_t (*)(_QWORD))_s16EntryMomentsViewVMa);
    v70 = v84;
    sub_2417289A8(v68, v84, (uint64_t (*)(_QWORD))_s12EntryDayViewVMa);
    sub_241860A08();
    v72 = v71;
    sub_2417289A8(v63, v70 + *(int *)(v71 + 48), (uint64_t (*)(_QWORD))_s18EntrySeparatorViewVMa);
    sub_2417289A8(v69, v70 + *(int *)(v72 + 64), (uint64_t (*)(_QWORD))_s16EntryMomentsViewVMa);
    sub_24172588C(v69, (uint64_t (*)(_QWORD))_s16EntryMomentsViewVMa);
    sub_24172588C(v63, (uint64_t (*)(_QWORD))_s18EntrySeparatorViewVMa);
    sub_24172588C(v68, (uint64_t (*)(_QWORD))_s12EntryDayViewVMa);
    sub_2417289A8(v70, v87, (uint64_t (*)(_QWORD))sub_2418609EC);
    swift_storeEnumTagMultiPayload();
    sub_24172159C(&qword_257153B08, (uint64_t (*)(uint64_t))_s14EntryEmptyViewVMa, (uint64_t)&unk_2418D32E8);
    sub_24172159C(&qword_257153B10, (uint64_t (*)(uint64_t))sub_2418609EC, MEMORY[0x24BDF5428]);
    sub_2418A8D24();
    sub_24172588C(v70, (uint64_t (*)(_QWORD))sub_2418609EC);
    sub_24172588C((uint64_t)v67, (uint64_t (*)(_QWORD))_s16EntryMomentsViewVMa);
    sub_24172588C(v64, (uint64_t (*)(_QWORD))_s18EntrySeparatorViewVMa);
    v56 = (uint64_t)v61;
    v57 = _s12EntryDayViewVMa;
    return sub_24172588C(v56, (uint64_t (*)(_QWORD))v57);
  }
  v49 = *(_QWORD *)(v44 + v45[9]);
  v50 = swift_getKeyPath();
  v51 = (uint64_t)v75;
  *v75 = v50;
  v52 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v53 = v86;
  v54 = (uint64_t *)(v51 + *(int *)(v86 + 20));
  *v54 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v52);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v51 + *(int *)(v53 + 24)) = v49;
  v55 = v76;
  sub_241731B4C(v51, v76, (uint64_t (*)(_QWORD))_s14EntryEmptyViewVMa);
  sub_2417289A8(v55, v87, (uint64_t (*)(_QWORD))_s14EntryEmptyViewVMa);
  swift_storeEnumTagMultiPayload();
  sub_24172159C(&qword_257153B08, (uint64_t (*)(uint64_t))_s14EntryEmptyViewVMa, (uint64_t)&unk_2418D32E8);
  sub_24172159C(&qword_257153B10, (uint64_t (*)(uint64_t))sub_2418609EC, MEMORY[0x24BDF5428]);
  swift_bridgeObjectRetain();
  sub_2418A8D24();
  v56 = v55;
  v57 = _s14EntryEmptyViewVMa;
  return sub_24172588C(v56, (uint64_t (*)(_QWORD))v57);
}

void sub_241860950(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153AD8, (void (*)(uint64_t))_s22DaySummaryGradientViewVMa);
}

void sub_24186096C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153AE0)
  {
    sub_241731FB0(255, &qword_257153AE8, (uint64_t (*)(uint64_t))_s14EntryEmptyViewVMa, (uint64_t (*)(uint64_t))sub_2418609EC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    sub_241860A8C();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153AE0);
  }
}

void sub_2418609EC(uint64_t a1)
{
  sub_24172570C(a1, &qword_257153AF0, (uint64_t (*)(uint64_t))sub_241860A08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241860A08()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_257153AF8)
  {
    _s12EntryDayViewVMa();
    _s18EntrySeparatorViewVMa();
    _s16EntryMomentsViewVMa();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_257153AF8);
  }
}

unint64_t sub_241860A8C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153B00;
  if (!qword_257153B00)
  {
    sub_241731FB0(255, &qword_257153AE8, (uint64_t (*)(uint64_t))_s14EntryEmptyViewVMa, (uint64_t (*)(uint64_t))sub_2418609EC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257153B08, (uint64_t (*)(uint64_t))_s14EntryEmptyViewVMa, (uint64_t)&unk_2418D32E8);
    v3[1] = sub_24172159C(&qword_257153B10, (uint64_t (*)(uint64_t))sub_2418609EC, MEMORY[0x24BDF5428]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153B00);
  }
  return result;
}

void sub_241860B4C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153B18, (void (*)(uint64_t))sub_24186096C);
}

void sub_241860B68(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153B20, sub_241860B4C);
}

void sub_241860B84(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153B28, sub_241860B68);
}

void sub_241860BA0(uint64_t a1)
{
  sub_241731FB0(a1, &qword_257153B30, (uint64_t (*)(uint64_t))sub_241860B84, MEMORY[0x24BDF02F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_241860BC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153B40)
  {
    sub_241860950(255);
    sub_241721DF8(&qword_257153B48, (uint64_t (*)(uint64_t))sub_241860950, sub_241860C44, MEMORY[0x24BDF1050]);
    v0 = sub_2418A8D18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153B40);
  }
}

uint64_t sub_241860C44()
{
  return sub_24172159C(&qword_257153B50, (uint64_t (*)(uint64_t))_s22DaySummaryGradientViewVMa, (uint64_t)&unk_2418D2BD8);
}

void sub_241860C60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153B58)
  {
    sub_241731FB0(255, &qword_257153B38, (uint64_t (*)(uint64_t))sub_241860BA0, (uint64_t (*)(uint64_t))sub_241860BC4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153B58);
  }
}

void sub_241860CDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153B60)
  {
    sub_241731FB0(255, &qword_257153AE8, (uint64_t (*)(uint64_t))_s14EntryEmptyViewVMa, (uint64_t (*)(uint64_t))sub_2418609EC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153B60);
  }
}

uint64_t sub_241860D60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v2 = v1;
  v4 = sub_2418A8B20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v20 - v12;
  sub_241862CCC(v2, (uint64_t)v20 - v12, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_241731B4C((uint64_t)v13, a1, type metadata accessor for StateOfMindTimeline.Styles);
  v15 = sub_2418AA050();
  v16 = sub_2418A90A8();
  v17 = v15;
  if (os_log_type_enabled(v16, v15))
  {
    v20[1] = a1;
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v18 = 136315138;
    v20[2] = sub_24176024C(0x73656C797453, 0xE600000000000000, &v21);
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v19, -1, -1);
    MEMORY[0x24269D548](v18, -1, -1);
  }

  sub_2418A8B14();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_241860FB4(uint64_t a1)
{
  uint64_t v2;

  sub_241731FB0(0, &qword_257153B38, (uint64_t (*)(uint64_t))sub_241860BA0, (uint64_t (*)(uint64_t))sub_241860BC4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241861010(uint64_t a1, uint64_t a2)
{
  return sub_2418634DC(a1, a2, (uint64_t)&qword_257153B38, (uint64_t)sub_241860BA0, (uint64_t)sub_241860BC4, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_241731FB0);
}

uint64_t sub_241861034@<X0>(uint64_t a1@<X8>)
{
  return sub_2418612F0((unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_241861064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v2 = v1;
  v4 = sub_2418A8B20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v20 - v12;
  sub_241862CCC(v2, (uint64_t)v20 - v12, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_241731B4C((uint64_t)v13, a1, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  v15 = sub_2418AA050();
  v16 = sub_2418A90A8();
  v17 = v15;
  if (os_log_type_enabled(v16, v15))
  {
    v20[1] = a1;
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v18 = 136315138;
    v20[2] = sub_24176024C(0x6168506F72746E49, 0xEF73636570536573, &v21);
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v19, -1, -1);
    MEMORY[0x24269D548](v18, -1, -1);
  }

  sub_2418A8B14();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_2418612BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2418612F0(&qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_2418612F0@<X0>(unint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  os_log_type_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v28 = a3;
  v29 = a4;
  v8 = v5;
  v10 = sub_2418A8B20();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)v27 - v18;
  sub_241862CCC(v8, (uint64_t)v27 - v18, a1, a2, v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a5, v19, v20);
  }
  else
  {
    v22 = sub_2418AA050();
    v23 = sub_2418A90A8();
    v24 = v22;
    if (os_log_type_enabled(v23, v22))
    {
      v27[1] = a5;
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v31 = v26;
      *(_DWORD *)v25 = 136315138;
      v30 = sub_24176024C(v28, v29, &v31);
      sub_2418AA1F4();
      _os_log_impl(&dword_24171C000, v23, v24, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v26, -1, -1);
      MEMORY[0x24269D548](v25, -1, -1);
    }

    sub_2418A8B14();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
}

uint64_t sub_241861534@<X0>(uint64_t a1@<X8>)
{
  return sub_2418612F0(&qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_241861568@<X0>(uint64_t a1@<X8>)
{
  return sub_2418612F0(&qword_25714CA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], 0xD000000000000013, 0x80000002418DEDE0, a1);
}

uint64_t sub_241861594@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v2 = v1;
  v4 = sub_2418A8B20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v20 - v12;
  sub_241862CCC(v2, (uint64_t)v20 - v12, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_241731B4C((uint64_t)v13, a1, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  v15 = sub_2418AA050();
  v16 = sub_2418A90A8();
  v17 = v15;
  if (os_log_type_enabled(v16, v15))
  {
    v20[1] = a1;
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v18 = 136315138;
    v20[2] = sub_24176024C(0xD00000000000001ELL, 0x80000002418DEE00, &v21);
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v19, -1, -1);
    MEMORY[0x24269D548](v18, -1, -1);
  }

  sub_2418A8B14();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_2418617E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v2 = v1;
  v4 = sub_2418A8B20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v20 - v12;
  sub_241862CCC(v2, (uint64_t)v20 - v12, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_241731B4C((uint64_t)v13, a1, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  v15 = sub_2418AA050();
  v16 = sub_2418A90A8();
  v17 = v15;
  if (os_log_type_enabled(v16, v15))
  {
    v20[1] = a1;
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v18 = 136315138;
    v20[2] = sub_24176024C(0xD00000000000001CLL, 0x80000002418DEDC0, &v21);
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v19, -1, -1);
    MEMORY[0x24269D548](v18, -1, -1);
  }

  sub_2418A8B14();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_241861A34@<X0>(uint64_t a1@<X8>)
{
  return sub_2418612F0(&qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_241861A68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v2 = v1;
  v4 = sub_2418A8B20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714DEC0, (uint64_t (*)(uint64_t))sub_2417790D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v20 - v12;
  sub_241862CCC(v2, (uint64_t)v20 - v12, &qword_25714DEC0, (uint64_t (*)(uint64_t))sub_2417790D8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_241731B4C((uint64_t)v13, a1, (uint64_t (*)(_QWORD))sub_2417790D8);
  v15 = sub_2418AA050();
  v16 = sub_2418A90A8();
  v17 = v15;
  if (os_log_type_enabled(v16, v15))
  {
    v20[1] = a1;
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v18 = 136315138;
    v20[2] = sub_24176024C(0xD000000000000020, 0x80000002418DED40, &v21);
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v19, -1, -1);
    MEMORY[0x24269D548](v18, -1, -1);
  }

  sub_2418A8B14();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_241861CB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v2 = v1;
  v4 = sub_2418A8B20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v20 - v12;
  sub_241862CCC(v2, (uint64_t)v20 - v12, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_241731B4C((uint64_t)v13, a1, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  v15 = sub_2418AA050();
  v16 = sub_2418A90A8();
  v17 = v15;
  if (os_log_type_enabled(v16, v15))
  {
    v20[1] = a1;
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v18 = 136315138;
    v20[2] = sub_24176024C(0xD00000000000001ALL, 0x80000002418DEDA0, &v21);
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v19, -1, -1);
    MEMORY[0x24269D548](v18, -1, -1);
  }

  sub_2418A8B14();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_241861F08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v2 = v1;
  v4 = sub_2418A8B20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v20 - v12;
  sub_241862CCC(v2, (uint64_t)v20 - v12, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_241731B4C((uint64_t)v13, a1, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  v15 = sub_2418AA050();
  v16 = sub_2418A90A8();
  v17 = v15;
  if (os_log_type_enabled(v16, v15))
  {
    v20[1] = a1;
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v18 = 136315138;
    v20[2] = sub_24176024C(0xD000000000000025, 0x80000002418DED70, &v21);
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v19, -1, -1);
    MEMORY[0x24269D548](v18, -1, -1);
  }

  sub_2418A8B14();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_241862158@<X0>(uint64_t a1@<X8>)
{
  return sub_2418612F0(&qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], 0x7261646E656C6143, 0xE800000000000000, a1);
}

uint64_t sub_241862180(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_2418A8B20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v9 = sub_2418AA050();
    v10 = sub_2418A90A8();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v16 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = sub_24176024C(0x726F6C6F43, 0xE500000000000000, &v16);
      sub_2418AA1F4();
      _os_log_impl(&dword_24171C000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v13, -1, -1);
      MEMORY[0x24269D548](v12, -1, -1);
    }

    sub_2418A8B14();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return v16;
  }
  return a1;
}

double sub_241862334(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  double v16;

  v4 = sub_2418A8B20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  swift_retain();
  v9 = sub_2418AA050();
  v10 = sub_2418A90A8();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v16 = *(double *)&v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_24176024C(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v16);
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v13, -1, -1);
    MEMORY[0x24269D548](v12, -1, -1);
  }

  sub_2418A8B14();
  swift_getAtKeyPath();
  sub_2417F446C(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v16;
}

uint64_t sub_2418624F4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_2418A8B20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v9 = sub_2418AA050();
  v10 = sub_2418A90A8();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_24176024C(1819242306, 0xE400000000000000, &v16);
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v13, -1, -1);
    MEMORY[0x24269D548](v12, -1, -1);
  }

  sub_2418A8B14();
  swift_getAtKeyPath();
  sub_2417F446C(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v16;
}

uint64_t sub_2418626AC(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_2417C31F4);
}

uint64_t sub_2418626B8(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_24173EBCC);
}

uint64_t sub_2418626C4(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2417B7FC0(255, a2, a3, a4);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF1028], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_241862704(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C960, sub_24173EBCC);
}

uint64_t sub_241862720(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_24173D9A4);
}

uint64_t sub_24186272C(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_241730FB0);
}

uint64_t sub_241862738(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_24173048C);
}

uint64_t sub_241862744(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_2417E04E8);
}

void sub_241862750(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257150A10, (void (*)(uint64_t))sub_2417E04E8);
}

uint64_t sub_24186276C()
{
  return sub_241721DF8(&qword_257153B70, (uint64_t (*)(uint64_t))sub_241860C60, (uint64_t (*)(void))sub_2418627A0, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_2418627A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153B78;
  if (!qword_257153B78)
  {
    sub_241731FB0(255, &qword_257153B38, (uint64_t (*)(uint64_t))sub_241860BA0, (uint64_t (*)(uint64_t))sub_241860BC4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v2 = v1;
    v3[0] = sub_241862848();
    v3[1] = sub_24172159C(&qword_257153BB0, (uint64_t (*)(uint64_t))sub_241860BC4, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153B78);
  }
  return result;
}

unint64_t sub_241862848()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153B80;
  if (!qword_257153B80)
  {
    sub_241860BA0(255);
    v2 = v1;
    v3[0] = sub_241721DF8(&qword_257153B88, (uint64_t (*)(uint64_t))sub_241860B84, sub_2418628E8, MEMORY[0x24BDECC60]);
    v3[1] = sub_24172159C(&qword_257153BA8, MEMORY[0x24BDF02F8], MEMORY[0x24BDF02F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153B80);
  }
  return result;
}

uint64_t sub_2418628E8()
{
  return sub_241721DF8(&qword_257153B90, (uint64_t (*)(uint64_t))sub_241860B68, sub_24186290C, MEMORY[0x24BDECC60]);
}

uint64_t sub_24186290C()
{
  return sub_241721DF8(&qword_257153B98, (uint64_t (*)(uint64_t))sub_241860B4C, sub_241862930, MEMORY[0x24BDECC60]);
}

uint64_t sub_241862930()
{
  return sub_24172159C(&qword_257153BA0, (uint64_t (*)(uint64_t))sub_24186096C, MEMORY[0x24BDF4700]);
}

uint64_t sub_24186294C(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_241773124);
}

void sub_241862958(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714D8B0, (void (*)(uint64_t))sub_241773124);
}

uint64_t sub_241862974(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_241862980);
}

void sub_241862980()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153BB8)
  {
    sub_2418629F8(255);
    sub_24172159C(&qword_257153BE8, (uint64_t (*)(uint64_t))sub_2418629F8, MEMORY[0x24BDF5428]);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153BB8);
  }
}

void sub_2418629F8(uint64_t a1)
{
  sub_24172570C(a1, &qword_257153BC0, (uint64_t (*)(uint64_t))sub_241862A14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241862A14(uint64_t a1)
{
  sub_241862A38(a1, &qword_257153BC8, (void (*)(uint64_t))MEMORY[0x24BDF4918], &qword_257153BD0, (uint64_t (*)(uint64_t))sub_241862ACC);
}

void sub_241862A38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    sub_241731FB0(255, a4, a5, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v9)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_241862ACC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153BD8, (void (*)(uint64_t))sub_241862AE8);
}

void sub_241862AE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153BE0)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153BE0);
  }
}

void sub_241862B64(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153BF0, (void (*)(uint64_t))sub_241862980);
}

uint64_t sub_241862B80(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_241818EC8);
}

uint64_t sub_241862B8C(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_24177D3B8);
}

uint64_t sub_241862B98(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseContent);
}

uint64_t sub_241862BA4(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_2418169C8);
}

uint64_t sub_241862BB0(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_2417F3F0C);
}

uint64_t sub_241862BBC(uint64_t a1)
{
  sub_241841588(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_241862C6C(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_24177E1D0);
}

uint64_t sub_241862C78(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_2417F3C04);
}

uint64_t sub_241862C84(uint64_t a1, uint64_t a2)
{
  return sub_2418634DC(a1, a2, (uint64_t)&qword_25714DE00, (uint64_t)type metadata accessor for ValenceSelectionTitleText, (uint64_t)MEMORY[0x24BDF1088], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_241731FB0);
}

uint64_t sub_241862CA8(uint64_t a1, uint64_t a2)
{
  return sub_2418634DC(a1, a2, (uint64_t)&qword_25714DE40, (uint64_t)MEMORY[0x24BDF1088], (uint64_t)&type metadata for StateOfMindVisualization.ValenceImage, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_24174AE94);
}

uint64_t sub_241862CCC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;

  sub_24172570C(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_241862D1C(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_241844208);
}

uint64_t sub_241862D28(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_24172835C(255, a2, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], a3);
    result = MEMORY[0x24269D47C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_241862D7C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153160, (void (*)(uint64_t))sub_241844208);
}

uint64_t sub_241862D98(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_241851DC4);
}

uint64_t sub_241862DA4(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_241862DB0);
}

void sub_241862DB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CC90)
  {
    sub_241862E28(255);
    sub_24172159C(&qword_25714CD08, (uint64_t (*)(uint64_t))sub_241862E28, MEMORY[0x24BDF5428]);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CC90);
  }
}

void sub_241862E28(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714CC98, (uint64_t (*)(uint64_t))sub_24174ABCC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

uint64_t sub_241862E44(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_241862E50);
}

void sub_241862E50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153BF8)
  {
    sub_241862EC8(255);
    sub_24172159C(&qword_257153C20, (uint64_t (*)(uint64_t))sub_241862EC8, MEMORY[0x24BDF5428]);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153BF8);
  }
}

void sub_241862EC8(uint64_t a1)
{
  sub_24172570C(a1, &qword_257153C00, (uint64_t (*)(uint64_t))sub_241862EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241862EE4(uint64_t a1)
{
  sub_241862EF8(a1, &qword_257153C08, (void (*)(uint64_t))sub_241862F80);
}

void sub_241862EF8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata;
  uint64_t v6;

  if (!*a2)
  {
    sub_2417306AC(255);
    a3(255);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v6)
      atomic_store(TupleTypeMetadata, a2);
  }
}

void sub_241862F80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153C10)
  {
    sub_241731FB0(255, &qword_257153C18, (uint64_t (*)(uint64_t))sub_241728808, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153C10);
  }
}

void sub_241862FFC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153C28, (void (*)(uint64_t))sub_241862E50);
}

uint64_t sub_241863018(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_241863024);
}

void sub_241863024(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153C30, (void (*)(uint64_t))sub_241863040);
}

void sub_241863040()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153C38)
  {
    sub_241731FB0(255, &qword_257153C40, (uint64_t (*)(uint64_t))sub_2418630BC, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153C38);
  }
}

void sub_2418630BC(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_257153C48, (uint64_t (*)(uint64_t))sub_2418630E0, (uint64_t (*)(void))sub_2418632D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
}

void sub_2418630E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153C50)
  {
    sub_241863164();
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153C50);
  }
}

void sub_241863164()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153C58)
  {
    sub_2418631E0();
    sub_2417B7FC0(255, (unint64_t *)&qword_25714C1F8, (unint64_t *)&qword_25714C200, MEMORY[0x24BDF1948]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153C58);
  }
}

void sub_2418631E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153C60)
  {
    sub_241863258(255);
    sub_24172159C(&qword_257153C78, (uint64_t (*)(uint64_t))sub_241863258, MEMORY[0x24BDF5428]);
    v0 = sub_2418A972C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153C60);
  }
}

void sub_241863258(uint64_t a1)
{
  sub_24172570C(a1, &qword_257153C68, (uint64_t (*)(uint64_t))sub_241863274, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241863274()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257153C70)
  {
    sub_241750AD4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257153C70);
  }
}

unint64_t sub_2418632D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153C80;
  if (!qword_257153C80)
  {
    sub_2418630E0();
    v2 = v1;
    v3[0] = sub_241863340();
    v3[1] = sub_241728524();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153C80);
  }
  return result;
}

unint64_t sub_241863340()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153C88;
  if (!qword_257153C88)
  {
    sub_241863164();
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257153C90, (uint64_t (*)(uint64_t))sub_2418631E0, MEMORY[0x24BDF4498]);
    v3[1] = sub_2418626C4(&qword_25714C228, (unint64_t *)&qword_25714C1F8, (unint64_t *)&qword_25714C200, MEMORY[0x24BDF1948]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153C88);
  }
  return result;
}

void sub_2418633E0(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153C98, sub_241863024);
}

uint64_t sub_2418633FC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BDF1EB8] - 8) + 32))(a2, a1);
  return a2;
}

uint64_t sub_241863438(uint64_t a1)
{
  sub_241728A50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_241863468(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241863490(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_241730780);
}

void sub_24186349C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153CA0, (void (*)(uint64_t))sub_241730780);
}

uint64_t sub_2418634B8(uint64_t a1, uint64_t a2)
{
  return sub_2418634DC(a1, a2, (uint64_t)&qword_257151750, (uint64_t)type metadata accessor for LoggingFlowBlendMode, MEMORY[0x24BDF1FA8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_24174AE94);
}

uint64_t sub_2418634DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5, MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_241863538(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_2417E8500);
}

uint64_t sub_241863544(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_241863550);
}

void sub_241863550()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153CA8)
  {
    sub_241721CBC(255, &qword_257153CB0, sub_2418471F0);
    sub_24172887C(255, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153CA8);
  }
}

void sub_2418635E4(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153CB8, (void (*)(uint64_t))sub_241863550);
}

uint64_t sub_241863600(uint64_t a1, uint64_t a2)
{
  return sub_2417289A8(a1, a2, (uint64_t (*)(_QWORD))sub_24186360C);
}

void sub_24186360C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153CC0)
  {
    sub_241863690();
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153CC0);
  }
}

void sub_241863690()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153CC8)
  {
    sub_241863708(255);
    sub_24172159C(&qword_257153D08, (uint64_t (*)(uint64_t))sub_241863708, MEMORY[0x24BDF5428]);
    v0 = sub_2418A972C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153CC8);
  }
}

void sub_241863708(uint64_t a1)
{
  sub_24172570C(a1, &qword_257153CD0, (uint64_t (*)(uint64_t))sub_241863724, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241863724()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257153CD8)
  {
    sub_2418637A8(255);
    sub_241721CBC(255, &qword_25714C268, (void (*)(uint64_t))sub_241728808);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257153CD8);
  }
}

void sub_2418637A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_257153CE0)
  {
    sub_24186381C();
    v5[0] = v2;
    v5[1] = sub_24186391C();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2150], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257153CE0);
  }
}

void sub_24186381C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153CE8)
  {
    sub_241863898();
    sub_2417B7FC0(255, (unint64_t *)&qword_25714C1F8, (unint64_t *)&qword_25714C200, MEMORY[0x24BDF1948]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153CE8);
  }
}

void sub_241863898()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257153CF0)
  {
    sub_241750AD4();
    sub_24172835C(255, (unint64_t *)&qword_257150D20, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257153CF0);
  }
}

unint64_t sub_24186391C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153CF8;
  if (!qword_257153CF8)
  {
    sub_24186381C();
    v2 = v1;
    v3[0] = sub_2418639A4();
    v3[1] = sub_2418626C4(&qword_25714C228, (unint64_t *)&qword_25714C1F8, (unint64_t *)&qword_25714C200, MEMORY[0x24BDF1948]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153CF8);
  }
  return result;
}

unint64_t sub_2418639A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257153D00;
  if (!qword_257153D00)
  {
    sub_241863898();
    v2 = v1;
    v3[0] = sub_241863A4C((unint64_t *)&qword_25714CFA0, (uint64_t (*)(uint64_t))sub_241750AD4, (uint64_t (*)(void))sub_241750BB0, MEMORY[0x24BDF40E8]);
    v3[1] = sub_241862D28((unint64_t *)&qword_257150D38, (unint64_t *)&qword_257150D20, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8], MEMORY[0x24BDF0710]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257153D00);
  }
  return result;
}

uint64_t sub_241863A4C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a4;
    v9[1] = a3();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_241863AB4(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153D10, (void (*)(uint64_t))sub_24186360C);
}

uint64_t sub_241863B5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22[9];

  v2 = v1;
  v4 = sub_2418A8340();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2418A8100();
  v21[0] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = objc_msgSend(a1, sel_healthDataSource);
  if (v11)
  {
    v12 = v11;
    type metadata accessor for MentalHealthGenericFieldsProvider();
    *(_QWORD *)(swift_initStackObject() + 16) = v12;
    swift_unknownObjectRetain();
    v22[8] = sub_241875268(MEMORY[0x24BEE4AF8]);
    __asm { BR              X12 }
  }
  sub_2418A8328();
  v13 = sub_2418A8334();
  v14 = sub_2418AA050();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v22[0] = v16;
    *(_DWORD *)v15 = 136446210;
    v21[1] = v15 + 4;
    v17 = sub_2418AA5D8();
    v21[3] = sub_24176024C(v17, v18, v22);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v13, v14, "[%{public}s] Tried to create a payload with a dataSource containing nil healthDataSource", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v16, -1, -1);
    MEMORY[0x24269D548](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_2418648EC();
  swift_allocError();
  *v19 = 0xD000000000000028;
  v19[1] = 0x80000002418DEEA0;
  return swift_willThrow();
}

uint64_t sub_2418648BC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MentalHealthAssessmentsEvent()
{
  return objc_opt_self();
}

unint64_t sub_2418648EC()
{
  unint64_t result;

  result = qword_257153DE8;
  if (!qword_257153DE8)
  {
    result = MEMORY[0x24269D47C](&unk_2418D9D64, &type metadata for MentalHealthAssessmentsEvent.AnalyticsEventPayloadError);
    atomic_store(result, (unint64_t *)&qword_257153DE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsEvent.AnalyticsEventPayloadError()
{
  return &type metadata for MentalHealthAssessmentsEvent.AnalyticsEventPayloadError;
}

void sub_241864944(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2418649A8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_241864A38 + 4 * byte_2418D9DB5[a2]))(0x6574617453676F6CLL);
}

uint64_t sub_241864A38(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6574617453676F6CLL && v1 == 0xEE00646E694D664FLL)
    v2 = 1;
  else
    v2 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_241864B14(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_241864B80(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_241864C1C + 4 * byte_2418D9DC0[a2]))(0x7373656E746946);
}

uint64_t sub_241864C1C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7373656E746946 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_241864D00(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_241864D50(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_241864E40 + 4 * byte_2418D9DD1[a2]))(0xD000000000000012);
}

uint64_t sub_241864E40(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000012 && v1 == 0x80000002418DB970)
    v2 = 1;
  else
    v2 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_241864F7C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_241864FBC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_241865040 + 4 * byte_2418D9DE2[a2]))(0x6C65636E6143);
}

uint64_t sub_241865040(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C65636E6143 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_241865114(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x80000002418DBFD0;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000014;
    else
      v4 = 0xD000000000000011;
    if (v3 == 1)
      v5 = 0x80000002418DBFF0;
    else
      v5 = 0x80000002418DC010;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v7 = 0xD000000000000014;
      else
        v7 = 0xD000000000000011;
      if (v6 == 1)
        v2 = 0x80000002418DBFF0;
      else
        v2 = 0x80000002418DC010;
      if (v4 != v7)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xD000000000000017;
    v5 = 0x80000002418DBFD0;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  if (v4 != 0xD000000000000017)
  {
LABEL_21:
    v8 = sub_2418AA4DC();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_241865210(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000012;
  v3 = 0x80000002418DBF80;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000013;
    else
      v5 = 0x6F65675F64617571;
    if (v4 == 1)
      v6 = 0x80000002418DBFA0;
    else
      v6 = 0xED0000797274656DLL;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000012;
  v6 = 0x80000002418DBF80;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000013;
    else
      v2 = 0x6F65675F64617571;
    if (v7 == 1)
      v3 = 0x80000002418DBFA0;
    else
      v3 = 0xED0000797274656DLL;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_241865324(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 927220039;
    else
      v3 = 0x50646E6137444147;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xEB00000000395148;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 927220039;
      else
        v6 = 0x50646E6137444147;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xEB00000000395148;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 961628240;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 961628240)
  {
LABEL_21:
    v8 = sub_2418AA4DC();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_24186542C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_24186547C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_24186550C + 4 * byte_2418D9DED[a2]))(0x7079542065746144);
}

uint64_t sub_24186550C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7079542065746144 && v1 == 0xEE006D6F6F522065)
    v2 = 1;
  else
    v2 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2418655E4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_241865630(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2418656DC + 4 * byte_2418D9DFC[a2]))(a3 + 1);
}

uint64_t sub_2418656DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 1 && v3 == 0x80000002418DBC30)
    v4 = 1;
  else
    v4 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_2418657BC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_241865804(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_241865910 + 4 * byte_2418D9E11[a2]))(0x65736F6C43);
}

uint64_t sub_241865910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x65736F6C43 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_241865A50(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_241865A9C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_241865B20 + 4 * byte_2418D9E21[a2]))(0x6574614720656741);
}

uint64_t sub_241865B20(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6574614720656741 && v1 == 0xEF6F72746E492064)
    v2 = 1;
  else
    v2 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_241865BEC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x796C696144;
  else
    v3 = 0x7261746E656D6F4DLL;
  if (v2)
    v4 = 0xE900000000000079;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x796C696144;
  else
    v5 = 0x7261746E656D6F4DLL;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE900000000000079;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_241865C90(char a1)
{
  sub_2418AA56C();
  __asm { BR              X10 }
}

uint64_t sub_241865CD8()
{
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

void sub_241865D68(char a1)
{
  sub_2418AA56C();
  __asm { BR              X10 }
}

uint64_t sub_241865DC4()
{
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

void sub_241865E70(char a1)
{
  sub_2418AA56C();
  __asm { BR              X10 }
}

uint64_t sub_241865EC4()
{
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

void sub_241865F54(char a1)
{
  sub_2418AA56C();
  __asm { BR              X10 }
}

uint64_t sub_241865FA4()
{
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_241866040()
{
  sub_2418AA56C();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_2418660F0()
{
  sub_2418AA56C();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

void sub_241866194(char a1)
{
  sub_2418AA56C();
  __asm { BR              X10 }
}

uint64_t sub_2418661EC()
{
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

void sub_24186628C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2418662D4()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

void sub_241866360(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_2418663AC()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

void sub_241866490(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2418664C8()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241866544()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

void sub_2418665C0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_241866604()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

void sub_2418666A8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2418666E4()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

void sub_2418667E8(uint64_t a1, char a2)
{
  sub_2418AA56C();
  __asm { BR              X10 }
}

uint64_t sub_241866838()
{
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

void sub_2418668C8(uint64_t a1, char a2)
{
  sub_2418AA56C();
  __asm { BR              X10 }
}

uint64_t sub_241866914()
{
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_2418669B0()
{
  sub_2418AA56C();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_241866A5C()
{
  sub_2418AA56C();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

void sub_241866AFC(uint64_t a1, char a2)
{
  sub_2418AA56C();
  __asm { BR              X10 }
}

uint64_t sub_241866B40()
{
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

void sub_241866BD0(uint64_t a1, char a2)
{
  sub_2418AA56C();
  __asm { BR              X10 }
}

uint64_t sub_241866C28()
{
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

void sub_241866CD4(uint64_t a1, char a2)
{
  sub_2418AA56C();
  __asm { BR              X10 }
}

uint64_t sub_241866D28()
{
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_241866DC8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RingBufferHelper()
{
  return objc_opt_self();
}

uint64_t sub_241866DF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_241865210(*a1, *a2);
}

uint64_t sub_241866E04()
{
  return sub_241866040();
}

uint64_t sub_241866E0C()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241866E94()
{
  return sub_2418669B0();
}

uint64_t sub_241866E9C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24186C728();
  *a1 = result;
  return result;
}

void sub_241866ED0(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = 0xD000000000000012;
  v3 = 0x80000002418DBFA0;
  v4 = 0x6F65675F64617571;
  if (*v1 == 1)
    v4 = 0xD000000000000013;
  else
    v3 = 0xED0000797274656DLL;
  if (*v1)
  {
    v2 = v4;
    v5 = v3;
  }
  else
  {
    v5 = 0x80000002418DBF80;
  }
  *a1 = v2;
  a1[1] = v5;
}

void sub_241866F3C()
{
  off_257153DF0 = &unk_2511AC1A0;
}

unint64_t sub_241866F50(char a1)
{
  if (!a1)
    return 0xD000000000000017;
  if (a1 == 1)
    return 0xD000000000000014;
  return 0xD000000000000011;
}

uint64_t sub_241866FAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_241865114(*a1, *a2);
}

uint64_t sub_241866FB8()
{
  return sub_2418660F0();
}

uint64_t sub_241866FC0()
{
  return sub_241866544();
}

uint64_t sub_241866FC8()
{
  return sub_241866A5C();
}

uint64_t sub_241866FD0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24186C728();
  *a1 = result;
  return result;
}

unint64_t sub_241867004@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_241866F50(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_24186702C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  void *v3;
  id v4;
  CGFloat Width;
  uint64_t v6;
  double v7;
  double Height;
  double v9;
  uint64_t v10;
  uint64_t *v11;
  CGRect v12;
  CGRect v13;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode);
  v2 = 80;
  if (v1 == 1)
  {
    v11 = &OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount;
    v10 = 4;
    goto LABEL_12;
  }
  if (v1)
  {
LABEL_13:
    sub_24186907C();
    sub_241867520();
    sub_2418671B8();
    sub_241868A60(v2);
    return;
  }
  v3 = *(void **)(v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
  if (!v3)
  {
    v2 = 80;
    goto LABEL_13;
  }
  v4 = v3;
  v2 = (uint64_t)objc_msgSend(v4, sel_pixelFormat);
  objc_msgSend(v4, sel_bounds);
  Width = CGRectGetWidth(v12);
  v6 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling;
  v7 = Width * *(double *)(v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling);
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(_QWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth) = (uint64_t)v7;
  objc_msgSend(v4, sel_bounds);
  Height = CGRectGetHeight(v13);

  v9 = Height * *(double *)(v0 + v6);
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v9 < 9.22337204e18)
  {
    v10 = (uint64_t)v9;
    v11 = &OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight;
LABEL_12:
    *(_QWORD *)(v0 + *v11) = v10;
    goto LABEL_13;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_2418671B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  int v20;

  v1 = v0;
  v2 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device;
  v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_meshQuality);
  type metadata accessor for DiscMesh();
  swift_allocObject();
  v4 = (void *)swift_unknownObjectRetain();
  v5 = sub_241837774(v4, v3);
  swift_unknownObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_disc) = v5;
  swift_release();
  type metadata accessor for QuadMesh();
  v6 = swift_allocObject();
  *(int64x2_t *)(v6 + 16) = vdupq_n_s64(0x10uLL);
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  v7 = (void *)swift_unknownObjectRetain();
  sub_2417BB668(v7);
  swift_unknownObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_quad) = v6;
  swift_release();
  v8 = *(void **)(v1 + v2);
  if (*(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1)
  {
    v9 = objc_msgSend(v8, sel_newBufferWithLength_options_, 312, 0);
    v10 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances;
    *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances) = v9;
    swift_unknownObjectRelease();
    v11 = *(void **)(v1 + v10);
    if (v11)
    {
      v12 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      v13 = v11;
    }
    else
    {
      v12 = 0;
    }
    v15 = v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_randomNumberGenerator;
    swift_beginAccess();
    for (i = 20; i != 332; i += 52)
    {
      if (v12)
      {
        __swift_mutable_project_boxed_opaque_existential_1(v15, *(_QWORD *)(v15 + 24));
        sub_24186CC80();
        sub_24186CCC4();
        sub_2418A9D08();
        *(_DWORD *)&v12[i] = v20;
      }
    }
    swift_endAccess();
  }
  else
  {
    v14 = objc_msgSend(v8, sel_newBufferWithLength_options_, 312, 32);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances) = v14;
    swift_unknownObjectRelease();
  }
  v17 = *(_QWORD *)(v1 + v2);
  swift_unknownObjectRetain();
  v18 = sub_24186C250(0x70614D746867694CLL, 0xEC000000676E702ELL, v17);
  swift_unknownObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_environmentMap) = v18;
  return swift_unknownObjectRelease();
}

BOOL sub_241867454(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, sel_commandBuffer);
  if (v1)
  {
    sub_2418691E4();
    sub_24186A75C(v1);
    sub_24186A324(v1);
    sub_241869B74(v1, 0);
    sub_24186AE1C(v1);
    sub_24186AEF8(v1);
    sub_241869B74(v1, 1);
    objc_msgSend(v1, sel_commit);
    swift_unknownObjectRelease();
  }
  return v1 != 0;
}

id sub_2418674E4(uint64_t a1, void *a2)
{
  uint64_t v2;
  id result;

  sub_24186B1BC(a1, a2);
  result = objc_msgSend(a2, sel_commit);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_firstRun) = 0;
  return result;
}

void sub_241867520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  void (**v28)(char *, _QWORD, uint64_t);
  void (*v29)(char *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  id v49;
  char isUniquelyReferenced_nonNull_native;
  void *v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *boxed_opaque_existential_1;
  id v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  unint64_t v63;
  const char *v64;
  unint64_t v65;
  const char *v66;
  unint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (**v73)(char *, _QWORD, uint64_t);
  uint64_t v74;
  uint64_t v75;
  id v76;
  char v77;
  _BOOL4 v78;
  int v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v1 = v0;
  v84 = *MEMORY[0x24BDAC8D0];
  v2 = sub_2418A84E4();
  v73 = *(void (***)(char *, _QWORD, uint64_t))(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v59 - v8;
  v72 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device;
  v10 = *(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurSigma);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
  v13 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_kernelCache);
  v71 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive;
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive);
  v70 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary;
  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v16 = v13;
  MTLRegionMake2D(v11, v12, &v80);
  v69 = v80;
  v68 = v81;
  v17 = v82;
  v18 = v83;
  v19 = objc_allocWithZone((Class)HKCVGaussianBlur);
  v80 = v69;
  v81 = v68;
  v82 = v17;
  v83 = v18;
  v20 = objc_msgSend(v19, sel_initWithSigma_clipRect_kernelCache_archive_library_, &v80, v16, v14, v15, COERCE_DOUBLE(__PAIR64__(DWORD1(v68), v10)));
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v21 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurPipeline);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurPipeline) = v20;

  v22 = swift_allocObject();
  v23 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode;
  if (*(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1)
  {
    v24 = 80;
  }
  else
  {
    v25 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
    if (!v25)
      goto LABEL_18;
    v24 = (uint64_t)objc_msgSend(v25, sel_pixelFormat);
  }
  *(_QWORD *)(v22 + 16) = v24;
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD5A0]), sel_init);
  v79 = *(_DWORD *)(v1 + v23);
  v27 = v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_colorScheme;
  swift_beginAccess();
  v28 = v73;
  v73[2](v9, v27, v2);
  v28[13](v6, *MEMORY[0x24BDEB400], v2);
  LOBYTE(v27) = sub_2418A84D8();
  v29 = (void (*)(char *, uint64_t))v28[1];
  v29(v6, v2);
  v29(v9, v2);
  v78 = (v27 & 1) == 0;
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion);
  objc_msgSend(v26, sel_setConstantValue_type_atIndex_, &v79, 29, 0);
  objc_msgSend(v26, sel_setConstantValue_type_atIndex_, &v78, 29, 1);
  objc_msgSend(v26, sel_setConstantValue_type_atIndex_, &v77, 53, 2);
  v73 = (void (**)(char *, _QWORD, uint64_t))objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD5B0]), sel_init);
  objc_msgSend(v73, sel_setConstantValues_, v26);
  v30 = (id)sub_2418753C4(MEMORY[0x24BEE4AF8]);
  if (qword_25714B980 != -1)
    swift_once();
  *(_QWORD *)&v69 = *((_QWORD *)off_257153DF0 + 2);
  if ((_QWORD)v69)
  {
    v59 = v26;
    v60 = v22;
    v31 = swift_bridgeObjectRetain();
    v32 = 0;
    *(_QWORD *)&v68 = "ont";
    v67 = 0x80000002418DBFD0;
    v66 = "compute_final_composite";
    v65 = 0x80000002418DBFF0;
    v64 = "compute_bg_composite";
    v63 = 0x80000002418DC010;
    v62 = MEMORY[0x24BEE4AD0] + 8;
    v61 = xmmword_2418D4D90;
    while (1)
    {
      v33 = v31;
      v34 = *(unsigned __int8 *)(v31 + v32++ + 32);
      v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD550]), sel_init);
      v36 = (void *)sub_2418A9DB0();
      swift_bridgeObjectRelease();
      objc_msgSend(v35, sel_setLabel_, v36);

      v37 = *(_QWORD *)(v1 + v71);
      if (v37)
      {
        sub_24172887C(0, (unint64_t *)&qword_25714D510, v62, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
        v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = v61;
        *(_QWORD *)(v38 + 32) = v37;
        v76 = (id)v38;
        sub_2418A9EC4();
        sub_24186CF3C();
        swift_unknownObjectRetain_n();
        v39 = (void *)sub_2418A9EAC();
        swift_bridgeObjectRelease();
        objc_msgSend(v35, sel_setBinaryArchives_, v39);
        swift_unknownObjectRelease();

      }
      v40 = (void *)sub_2418A9DB0();
      swift_bridgeObjectRelease();
      v41 = v73;
      objc_msgSend(v73, sel_setName_, v40);

      v42 = *(void **)(v1 + v70);
      v76 = 0;
      v43 = objc_msgSend(v42, sel_newFunctionWithDescriptor_error_, v41, &v76);
      if (!v43)
        break;
      v44 = v43;
      v45 = v76;
      objc_msgSend(v35, sel_setComputeFunction_, v44);
      v46 = *(void **)(v1 + v72);
      v76 = 0;
      v47 = objc_msgSend(v46, sel_newComputePipelineStateWithDescriptor_options_reflection_error_, v35, 0, 0, &v76);
      if (!v47)
      {
        v54 = v76;
        sub_2418A7F14();

        swift_willThrow();
        sub_24172887C(0, (unint64_t *)&qword_25714E500, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
        v55 = swift_allocObject();
        *(_OWORD *)(v55 + 16) = xmmword_2418D23E0;
        swift_getErrorValue();
        v56 = v74;
        v57 = v75;
        *(_QWORD *)(v55 + 56) = v75;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v55 + 32));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(boxed_opaque_existential_1, v56, v57);
        sub_2418AA554();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      v48 = (uint64_t)v47;
      v49 = v76;
      swift_unknownObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v76 = v30;
      sub_24186BF68(v48, v34, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_241878DB4, (uint64_t (*)(void))sub_24182DC78, (void (*)(void))sub_24182D250);
      v30 = v76;

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v31 = v33;
      if ((_QWORD)v69 == v32)
      {
        swift_bridgeObjectRelease();
        v22 = v60;
        v26 = v59;
        goto LABEL_15;
      }
    }
    v52 = v76;
    v53 = (void *)sub_2418A7F14();

    swift_willThrow();
    while (1)
    {
LABEL_18:
      sub_2418AA380();
      __break(1u);
    }
  }
LABEL_15:
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_computePipelines) = v30;
  swift_bridgeObjectRelease();
  v51 = v73;
  sub_241867E68(0, v73, v1, v22);
  sub_241867E68(1, v51, v1, v22);
  sub_24186846C(v51, v1, v22);
  swift_release();

}

uint64_t sub_241867E68(int a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  id v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v42;
  uint64_t v43;
  id v44[3];
  id v45[4];

  v45[3] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = (void *)sub_2418A9DB0();
  objc_msgSend(a2, sel_setName_, v8);

  v9 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary;
  v10 = *(void **)(a3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary);
  v45[0] = 0;
  v11 = objc_msgSend(v10, sel_newFunctionWithDescriptor_error_, a2, v45);
  if (!v11)
    goto LABEL_12;
  v12 = v11;
  v13 = v45[0];
  v14 = (void *)sub_2418A9DB0();
  objc_msgSend(a2, sel_setName_, v14);

  v15 = *(void **)(a3 + v9);
  v45[0] = 0;
  v16 = objc_msgSend(v15, sel_newFunctionWithDescriptor_error_, a2, v45);
  v17 = v45[0];
  if (v16)
  {
    v18 = v16;
    v19 = objc_allocWithZone(MEMORY[0x24BDDD6B8]);
    v20 = v17;
    v21 = objc_msgSend(v19, sel_init);
    objc_msgSend(v21, sel_setVertexFunction_, v12);
    objc_msgSend(v21, sel_setFragmentFunction_, v18);
    if (*(_QWORD *)(a3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_disc))
      v22 = sub_241837568();
    else
      v22 = 0;
    objc_msgSend(v21, sel_setVertexDescriptor_, v22);

    objc_msgSend(v21, sel_setRasterSampleCount_, *(_QWORD *)(a3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount));
    v23 = objc_msgSend(v21, sel_colorAttachments);
    v24 = objc_msgSend(v23, sel_objectAtIndexedSubscript_, 0);

    if (!v24)
      __break(1u);
    swift_beginAccess();
    objc_msgSend(v24, sel_setPixelFormat_, *(_QWORD *)(a4 + 16));

    v25 = (void *)sub_2418A9DB0();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setLabel_, v25);

    v26 = *(_QWORD *)(a3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive);
    if (v26)
    {
      sub_24172887C(0, (unint64_t *)&qword_25714D510, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_2418D4D90;
      *(_QWORD *)(v27 + 32) = v26;
      v44[0] = (id)v27;
      sub_2418A9EC4();
      sub_24186CF3C();
      swift_unknownObjectRetain_n();
      v28 = (void *)sub_2418A9EAC();
      swift_bridgeObjectRelease();
      objc_msgSend(v21, sel_setBinaryArchives_, v28);
      swift_unknownObjectRelease();

    }
    v29 = *(void **)(a3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device);
    v44[0] = 0;
    v30 = objc_msgSend(v29, sel_newRenderPipelineStateWithDescriptor_options_reflection_error_, v21, 0, 0, v44);
    v31 = v44[0];
    if (v30)
    {
      v32 = (uint64_t)v30;
      v33 = (uint64_t *)(a3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_renderPipelines);
      swift_beginAccess();
      v34 = v31;
      swift_unknownObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v42 = *v33;
      *v33 = 0x8000000000000000;
      sub_24186BF68(v32, a1 != 0, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_241878CF0, (uint64_t (*)(void))sub_24182DC6C, (void (*)(void))sub_24182CEEC);
      *v33 = v42;
      swift_bridgeObjectRelease();
      swift_endAccess();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return swift_unknownObjectRelease();
    }
    v39 = v44[0];
    sub_2418A7F14();

    swift_willThrow();
    sub_24172887C(0, (unint64_t *)&qword_25714E500, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_2418D23E0;
    swift_getErrorValue();
    *(_QWORD *)(v40 + 56) = v43;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v40 + 32));
    (*(void (**)(uint64_t *))(*(_QWORD *)(v43 - 8) + 16))(boxed_opaque_existential_1);
    sub_2418AA554();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_12:
    v37 = v45[0];
    v38 = (void *)sub_2418A7F14();

    swift_willThrow();
  }
  result = sub_2418AA380();
  __break(1u);
  return result;
}

uint64_t sub_24186846C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t *v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v40;
  uint64_t v41;
  id v42[3];
  id v43[4];

  v43[3] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = (void *)sub_2418A9DB0();
  objc_msgSend(a1, sel_setName_, v6);

  v7 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary;
  v8 = *(void **)(a2 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary);
  v43[0] = 0;
  v9 = objc_msgSend(v8, sel_newFunctionWithDescriptor_error_, a1, v43);
  if (!v9)
    goto LABEL_12;
  v10 = v9;
  v11 = v43[0];
  v12 = (void *)sub_2418A9DB0();
  objc_msgSend(a1, sel_setName_, v12);

  v13 = *(void **)(a2 + v7);
  v43[0] = 0;
  v14 = objc_msgSend(v13, sel_newFunctionWithDescriptor_error_, a1, v43);
  v15 = v43[0];
  if (v14)
  {
    v16 = v14;
    v17 = objc_allocWithZone(MEMORY[0x24BDDD6B8]);
    v18 = v15;
    v19 = objc_msgSend(v17, sel_init);
    objc_msgSend(v19, sel_setVertexFunction_, v10);
    objc_msgSend(v19, sel_setFragmentFunction_, v16);
    if (*(_QWORD *)(a2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_quad))
      v20 = sub_2417BBA00();
    else
      v20 = 0;
    objc_msgSend(v19, sel_setVertexDescriptor_, v20);

    objc_msgSend(v19, sel_setRasterSampleCount_, 1);
    v21 = objc_msgSend(v19, sel_colorAttachments);
    v22 = objc_msgSend(v21, sel_objectAtIndexedSubscript_, 0);

    if (!v22)
      __break(1u);
    swift_beginAccess();
    objc_msgSend(v22, sel_setPixelFormat_, *(_QWORD *)(a3 + 16));

    v23 = (void *)sub_2418A9DB0();
    objc_msgSend(v19, sel_setLabel_, v23);

    v24 = *(_QWORD *)(a2 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive);
    if (v24)
    {
      sub_24172887C(0, (unint64_t *)&qword_25714D510, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_2418D4D90;
      *(_QWORD *)(v25 + 32) = v24;
      v42[0] = (id)v25;
      sub_2418A9EC4();
      sub_24186CF3C();
      swift_unknownObjectRetain_n();
      v26 = (void *)sub_2418A9EAC();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_setBinaryArchives_, v26);
      swift_unknownObjectRelease();

    }
    v27 = *(void **)(a2 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device);
    v42[0] = 0;
    v28 = objc_msgSend(v27, sel_newRenderPipelineStateWithDescriptor_options_reflection_error_, v19, 0, 0, v42);
    v29 = v42[0];
    if (v28)
    {
      v30 = (uint64_t)v28;
      v31 = (uint64_t *)(a2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_renderPipelines);
      swift_beginAccess();
      v32 = v29;
      swift_unknownObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v40 = *v31;
      *v31 = 0x8000000000000000;
      sub_24186BF68(v30, 2, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_241878CF0, (uint64_t (*)(void))sub_24182DC6C, (void (*)(void))sub_24182CEEC);
      *v31 = v40;
      swift_bridgeObjectRelease();
      swift_endAccess();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return swift_unknownObjectRelease();
    }
    v37 = v42[0];
    sub_2418A7F14();

    swift_willThrow();
    sub_24172887C(0, (unint64_t *)&qword_25714E500, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_2418D23E0;
    swift_getErrorValue();
    *(_QWORD *)(v38 + 56) = v41;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v38 + 32));
    (*(void (**)(uint64_t *))(*(_QWORD *)(v41 - 8) + 16))(boxed_opaque_existential_1);
    sub_2418AA554();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_12:
    v35 = v43[0];
    v36 = (void *)sub_2418A7F14();

    swift_willThrow();
  }
  result = sub_2418AA380();
  __break(1u);
  return result;
}

void sub_241868A60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _QWORD *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
    if (v3)
    {
      v4 = objc_msgSend((id)objc_opt_self(), sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, a1, v2, v3, 0);
      v5 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device;
      v6 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device), sel_supportsFamily_, 1001);
      v7 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount;
      if (*(uint64_t *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount) >= 2)
      {
        if (v6)
          v8 = 3;
        else
          v8 = 2;
        objc_msgSend(v4, sel_setUsage_, 4);
        objc_msgSend(v4, sel_setSampleCount_, *(_QWORD *)(v1 + v7));
        objc_msgSend(v4, sel_setTextureType_, 4);
        objc_msgSend(v4, sel_setStorageMode_, v8);
        v9 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
        *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_msaaAlbedo) = v9;
        swift_unknownObjectRelease();
        v10 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
        *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_msaaBackShape) = v10;
        swift_unknownObjectRelease();
      }
      objc_msgSend(v4, sel_setSampleCount_, 1);
      objc_msgSend(v4, sel_setTextureType_, 2);
      objc_msgSend(v4, sel_setStorageMode_, 2);
      objc_msgSend(v4, sel_setUsage_, 5);
      v11 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_albedo) = v11;
      swift_unknownObjectRelease();
      objc_msgSend(v4, sel_setUsage_, 7);
      v12 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background) = v12;
      swift_unknownObjectRelease();
      objc_msgSend(v4, sel_setUsage_, 7);
      v13 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
      v14 = (_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_backShape);
      swift_beginAccess();
      *v14 = v13;
      swift_unknownObjectRelease();
      if (*(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1)
      {
        objc_msgSend(v4, sel_setStorageMode_, 0);
        objc_msgSend(v4, sel_setUsage_, 3);
        v15 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
        *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_result) = v15;
        swift_unknownObjectRelease();
        v16 = (unint64_t)objc_msgSend(v4, sel_width);
        if ((v16 - 0x2000000000000000) >> 62 == 3)
        {
          v17 = 4 * v16;
          v18 = (uint64_t)objc_msgSend(v4, sel_height);
          if ((unsigned __int128)(v17 * (__int128)v18) >> 64 == (v17 * v18) >> 63)
          {
            v19 = objc_msgSend(*(id *)(v1 + v5), sel_newBufferWithLength_options_);
            *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_resultBuffer) = v19;
LABEL_13:
            swift_unknownObjectRelease();
            sub_24172887C(0, (unint64_t *)&qword_25714E500, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
            v20 = swift_allocObject();
            *(_OWORD *)(v20 + 16) = xmmword_2418D8510;
            *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
            *(_QWORD *)(v20 + 32) = 0xD00000000000001ALL;
            *(_QWORD *)(v20 + 40) = 0x80000002418DF1E0;
            v21 = objc_msgSend(v4, sel_width);
            v22 = MEMORY[0x24BEE1768];
            *(_QWORD *)(v20 + 88) = MEMORY[0x24BEE1768];
            *(_QWORD *)(v20 + 64) = v21;
            v23 = objc_msgSend(v4, sel_height);
            *(_QWORD *)(v20 + 120) = v22;
            *(_QWORD *)(v20 + 96) = v23;
            sub_2418AA554();
            swift_bridgeObjectRelease();

            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return;
      }
      *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_result) = 0;
      swift_unknownObjectRelease();
      *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_resultBuffer) = 0;
      goto LABEL_13;
    }
  }
}

void sub_241868E8C(float a1, float a2)
{
  uint64_t v2;
  void *v3;
  float Width;
  float Height;
  float v8;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t *v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  id v31;
  CGRect v32;
  CGRect v33;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
  if (v3)
  {
    v31 = v3;
    objc_msgSend(v31, sel_bounds);
    Width = CGRectGetWidth(v32);
    objc_msgSend(v31, sel_bounds);
    Height = CGRectGetHeight(v33);
    v8 = Width / Height;
    if ((~COERCE_INT(Width / Height) & 0x7F800000) != 0 || (COERCE_UNSIGNED_INT(Width / Height) & 0x7FFFFF) == 0)
    {
      *(__n64 *)v10.f32 = sub_2418A3FB8((float)((float)(a1 / Width) * v8) * 3.0, (float32x4_t)xmmword_2418AB3A0);
      v20 = v10;
      v22 = v11;
      v24 = v12;
      v27 = v13;
      *(__n64 *)v14.f32 = sub_2418A3FB8((float)((float)(a2 / Height) * v8) * 3.0, (float32x4_t)xmmword_2418AB400);
      v30 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v20, v14.f32[0]), v22, *(float32x2_t *)v14.f32, 1), v24, v14, 2), v27, v14, 3);
      v29 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v20, v15.f32[0]), v22, *(float32x2_t *)v15.f32, 1), v24, v15, 2), v27, v15, 3);
      v26 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v20, v16.f32[0]), v22, *(float32x2_t *)v16.f32, 1), v24, v16, 2), v27, v16, 3);
      v23 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v20, v17.f32[0]), v22, *(float32x2_t *)v17.f32, 1), v24, v17, 2), v27, v17, 3);
      v18 = (float32x4_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation);
      v19 = *(float32x4_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation);
      v21 = *(float32x4_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation + 16);
      v25 = *(float32x4_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation + 32);
      v28 = *(float32x4_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation + 48);

      *v18 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v19.f32[0]), v29, *(float32x2_t *)v19.f32, 1), v26, v19, 2), v23, v19, 3);
      v18[1] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v21.f32[0]), v29, *(float32x2_t *)v21.f32, 1), v26, v21, 2), v23, v21, 3);
      v18[2] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v25.f32[0]), v29, *(float32x2_t *)v25.f32, 1), v26, v25, 2), v23, v25, 3);
      v18[3] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v28.f32[0]), v29, *(float32x2_t *)v28.f32, 1), v26, v28, 2), v23, v28, 3);
    }
    else
    {

    }
  }
}

uint64_t sub_24186907C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  int v9;
  float v10;
  int v11;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_firstRun) = 1;
  *(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time) = 0;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers);
  if (v1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain_n();
  if (v2)
  {
    while (v2 >= 1)
    {
      v4 = 0;
      v5 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion;
      while (1)
      {
        v6 = (v1 & 0xC000000000000001) != 0 ? MEMORY[0x24269CAD4](v4, v1) : swift_retain();
        v7 = *(_DWORD *)(v6 + 24);
        v8 = v7 != 0;
        v9 = v7 - 1;
        if (!v8)
          break;
        *(_DWORD *)(v6 + 28) = v9;
        v10 = *(float *)(v6 + 16);
        if (*(_BYTE *)(v0 + v5))
          v10 = v10 * 1.8;
        ++v4;
        *(float *)(v6 + 36) = v10;
        *(float *)(v6 + 40) = v10;
        swift_release();
        if (v2 == v4)
          goto LABEL_13;
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain_n();
      result = sub_2418AA398();
      v2 = result;
      if (!result)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    result = swift_bridgeObjectRelease_n();
    if (*(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1)
      v11 = 1069379748;
    else
      v11 = *(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale);
    *(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale) = v11;
  }
  return result;
}

_QWORD *sub_2418691E4()
{
  uint64_t v0;
  uint64_t v1;
  float32x4_t v2;
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v13;
  float32x4_t *v14;
  simd_float4x4 v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t *v28;
  float32x4_t v29;
  float v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  unint64_t v35;
  uint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  float32x2_t v40;
  float32x2_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  float32x2_t v47;
  float32x2_t v48;
  _QWORD *v49;
  _QWORD *v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  float32x2_t v54;
  float32x2_t v55;
  _QWORD *v56;
  float v57;
  _QWORD *result;
  uint64_t v59;
  uint64_t v60;
  float v61;
  float v62;
  int v63;
  unsigned int v64;
  float v65;
  uint64_t v66;
  float v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  float v71;
  uint64_t v72;
  int v73;
  float v74;
  uint64_t v75;
  uint64_t v76;
  int v77;

  v1 = v0;
  sub_241869880(v0, (float)*(uint64_t *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth)/ (float)*(uint64_t *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight));
  v2 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16);
  v4 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32);
  v3 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 48);
  v5 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*MEMORY[0x24BDAEE00], COERCE_FLOAT(*MEMORY[0x24BDAEE00])), v2, *MEMORY[0x24BDAEE00], 1), v4, *MEMORY[0x24BDAEE00], 2), v3, *MEMORY[0x24BDAEE00], 3);
  v6 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*MEMORY[0x24BDAEE00], v2.f32[0]), v2, *(float32x2_t *)v2.f32, 1), v4, v2, 2), v3, v2, 3);
  v7 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*MEMORY[0x24BDAEE00], v4.f32[0]), v2, *(float32x2_t *)v4.f32, 1), v4, v4, 2), v3, v4, 3);
  __asm { FMOV            V0.4S, #1.5 }
  v13 = vmlaq_laneq_f32(vmlaq_f32(vmlaq_f32(vmulq_f32(*MEMORY[0x24BDAEE00], (float32x4_t)0), (float32x4_t)0, v2), _Q0, v4), v3, v3, 3);
  v14 = (float32x4_t *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation);
  v15 = *(simd_float4x4 *)v14->i8;
  v16 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v5, COERCE_FLOAT(*v14)), v6, *(float32x2_t *)v14->f32, 1), v7, *v14, 2), v13, *v14, 3);
  v17 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v5, v15.columns[1].f32[0]), v6, *(float32x2_t *)v15.columns[1].f32, 1), v7, (float32x4_t)v15.columns[1], 2), v13, (float32x4_t)v15.columns[1], 3);
  v18 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v5, v15.columns[2].f32[0]), v6, *(float32x2_t *)v15.columns[2].f32, 1), v7, (float32x4_t)v15.columns[2], 2), v13, (float32x4_t)v15.columns[2], 3);
  v19 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v5, v15.columns[3].f32[0]), v6, *(float32x2_t *)v15.columns[3].f32, 1), v7, (float32x4_t)v15.columns[3], 2), v13, (float32x4_t)v15.columns[3], 3);
  v20 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v16, COERCE_FLOAT(*MEMORY[0x24BDAEE00])), v17, *MEMORY[0x24BDAEE00], 1), v18, *MEMORY[0x24BDAEE00], 2), v19, *MEMORY[0x24BDAEE00], 3);
  v21 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v16, v2.f32[0]), v17, *(float32x2_t *)v2.f32, 1), v18, v2, 2), v19, v2, 3);
  v22 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v16, v4.f32[0]), v17, *(float32x2_t *)v4.f32, 1), v18, v4, 2), v19, v4, 3);
  __asm { FMOV            V19.4S, #-1.5 }
  v24 = vmlaq_laneq_f32(vmlaq_f32(vmlaq_f32(vmulq_f32(v16, (float32x4_t)0), (float32x4_t)0, v17), _Q19, v18), v19, v3, 3);
  v25 = vmulq_f32(v20, (float32x4_t)0);
  v26 = vmlaq_f32(vmlaq_f32(vaddq_f32(v21, v25), (float32x4_t)0, v22), (float32x4_t)0, v24);
  v27 = vmlaq_f32(v25, (float32x4_t)0, v21);
  v28 = (float32x4_t *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model);
  *v28 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v20, (float32x4_t)0, v21), (float32x4_t)0, v22), (float32x4_t)0, v24);
  v28[1] = v26;
  v28[2] = vmlaq_f32(vaddq_f32(v22, v27), (float32x4_t)0, v24);
  v28[3] = vaddq_f32(v24, vmlaq_f32(v27, (float32x4_t)0, v22));
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_isDragging) & 1) == 0)
  {
    *(double *)v29.i64 = simd_quaternion(v15);
    simd_slerp(v29, (float32x4_t)_PromotedConst, v30);
    *(double *)v31.i64 = MEMORY[0x24269C870]();
    *v14 = v31;
    v14[1] = v32;
    v14[2] = v33;
    v14[3] = v34;
  }
  v35 = v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_lights;
  swift_beginAccess();
  *(_QWORD *)v35 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v36 = *(_QWORD *)v35;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v35 = v36;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_31:
    v36 = (uint64_t)sub_241803364(0, *(_QWORD *)(v36 + 16) + 1, 1, (_QWORD *)v36);
    *(_QWORD *)v35 = v36;
  }
  v39 = *(_QWORD *)(v36 + 16);
  v38 = *(_QWORD *)(v36 + 24);
  if (v39 >= v38 >> 1)
  {
    v36 = (uint64_t)sub_241803364((_QWORD *)(v38 > 1), v39 + 1, 1, (_QWORD *)v36);
    *(_QWORD *)v35 = v36;
  }
  v40 = vrsqrte_f32((float32x2_t)1107296256);
  v41 = vmul_f32(v40, vrsqrts_f32((float32x2_t)1107296256, vmul_f32(v40, v40)));
  *(_QWORD *)(v36 + 16) = v39 + 1;
  v42 = v36 + 48 * v39;
  *(_OWORD *)(v42 + 32) = xmmword_2418DA150;
  *(float32x4_t *)(v42 + 48) = vmulq_n_f32((float32x4_t)xmmword_2418DA140, vmul_f32(v41, vrsqrts_f32((float32x2_t)1107296256, vmul_f32(v41, v41))).f32[0]);
  *(_DWORD *)(v42 + 64) = 1109393408;
  v43 = *(_QWORD **)v35;
  v44 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v35 = v43;
  if ((v44 & 1) == 0)
  {
    v43 = sub_241803364(0, v43[2] + 1, 1, v43);
    *(_QWORD *)v35 = v43;
  }
  v46 = v43[2];
  v45 = v43[3];
  if (v46 >= v45 >> 1)
  {
    v43 = sub_241803364((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
    *(_QWORD *)v35 = v43;
  }
  v47 = vrsqrte_f32((float32x2_t)1105723393);
  v48 = vmul_f32(v47, vrsqrts_f32((float32x2_t)1105723393, vmul_f32(v47, v47)));
  v43[2] = v46 + 1;
  v49 = &v43[6 * v46];
  *((_OWORD *)v49 + 2) = xmmword_2418DA170;
  *((float32x4_t *)v49 + 3) = vmulq_n_f32((float32x4_t)xmmword_2418DA160, vmul_f32(v48, vrsqrts_f32((float32x2_t)1105723393, vmul_f32(v48, v48))).f32[0]);
  *((_DWORD *)v49 + 16) = 1101004800;
  v50 = *(_QWORD **)v35;
  v51 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v35 = v50;
  if ((v51 & 1) == 0)
  {
    v50 = sub_241803364(0, v50[2] + 1, 1, v50);
    *(_QWORD *)v35 = v50;
  }
  v53 = v50[2];
  v52 = v50[3];
  if (v53 >= v52 >> 1)
  {
    v50 = sub_241803364((_QWORD *)(v52 > 1), v53 + 1, 1, v50);
    *(_QWORD *)v35 = v50;
  }
  v54 = vrsqrte_f32((float32x2_t)1105723391);
  v55 = vmul_f32(v54, vrsqrts_f32((float32x2_t)1105723391, vmul_f32(v54, v54)));
  v50[2] = v53 + 1;
  v56 = &v50[6 * v53];
  *((_OWORD *)v56 + 2) = xmmword_2418DA190;
  *((float32x4_t *)v56 + 3) = vmulq_n_f32((float32x4_t)xmmword_2418DA180, vmul_f32(v55, vrsqrts_f32((float32x2_t)1105723391, vmul_f32(v55, v55))).f32[0]);
  *((_DWORD *)v56 + 16) = 1101004800;
  swift_endAccess();
  if (*(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1)
    v57 = 0.016667;
  else
    v57 = *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_timeDelta);
  *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time) = v57
                                                                            + *(float *)(v1
                                                                                       + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time);
  v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers);
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = (_QWORD *)sub_2418AA398();
    v36 = (uint64_t)result;
    if (result)
      goto LABEL_19;
LABEL_33:
    swift_bridgeObjectRelease_n();
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_firstRun) & 1) != 0)
    {
      v65 = *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valence);
      v66 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed;
    }
    else
    {
      v67 = 0.1;
      v66 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed;
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion))
        v67 = 0.02;
      v65 = *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed)
          + (float)(v67
                  * (float)(*(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valence)
                          - *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed)));
    }
    *(float *)(v1 + v66) = v65;
    v68 = v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer__effectiveValence;
    v69 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer__effectiveValence + 8);
    v70 = *(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer__effectiveValence + 16);
    v75 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer__effectiveValence);
    v76 = v69;
    v77 = v70;
    sub_24172887C(0, &qword_257155010, MEMORY[0x24BEE14E8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
    result = MEMORY[0x24269C00C](&v74);
    v71 = *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed);
    if (vabds_f32(v74, v71) > 0.001)
    {
      v72 = *(_QWORD *)(v68 + 8);
      v73 = *(_DWORD *)(v68 + 16);
      v75 = *(_QWORD *)v68;
      v76 = v72;
      v77 = v73;
      v74 = v71;
      return (_QWORD *)sub_2418A9810();
    }
    return result;
  }
  v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (_QWORD *)swift_bridgeObjectRetain_n();
  if (!v36)
    goto LABEL_33;
LABEL_19:
  if (v36 >= 1)
  {
    v59 = 0;
    while (1)
    {
      if ((v35 & 0xC000000000000001) != 0)
        v60 = MEMORY[0x24269CAD4](v59, v35);
      else
        v60 = swift_retain();
      v61 = *(float *)(v60 + 40);
      v62 = v57 + *(float *)(v60 + 36);
      *(float *)(v60 + 36) = v62;
      if (v61 > v62)
      {
        *(_BYTE *)(v60 + 32) = 0;
      }
      else
      {
        *(float *)(v60 + 36) = v62 - v61;
        v63 = *(_DWORD *)(v60 + 28);
        _CF = __CFADD__(v63, 1);
        v64 = v63 + 1;
        if (_CF)
        {
          __break(1u);
          goto LABEL_31;
        }
        *(_DWORD *)(v60 + 28) = v64;
        *(_BYTE *)(v60 + 32) = 1;
        if (v64 >= *(_DWORD *)(v60 + 24))
          *(_DWORD *)(v60 + 28) = *(_DWORD *)(v60 + 20);
      }
      swift_release();
      if (v36 == ++v59)
        goto LABEL_33;
    }
  }
  __break(1u);
  return result;
}

float32x4_t sub_241869880(uint64_t a1, float a2)
{
  unint64_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  int32x4_t v15;
  float v16;
  float v17;
  float v18;
  float v19;
  __float2 v20;
  __float2 v21;
  float32x4_t v22;
  float32x4_t *v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t result;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t *v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;

  v30 = (float32x4_t)*(unsigned int *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale);
  LODWORD(v3) = 0;
  HIDWORD(v3) = *(_DWORD *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale);
  v31 = (float32x4_t)v3;
  v4.f32[0] = sub_2418A40E8(35.0, a2);
  if (a2 >= 1.0)
  {
    v34 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v5.f32[0]), v31, *(float32x2_t *)v5.f32, 1), (float32x4_t)xmmword_2418AB3B0, v5, 2), (float32x4_t)xmmword_2418DA1A0, v5, 3);
    v35 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v4.f32[0]), v31, *(float32x2_t *)v4.f32, 1), (float32x4_t)xmmword_2418AB3B0, v4, 2), (float32x4_t)xmmword_2418DA1A0, v4, 3);
    v33 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v6.f32[0]), v31, *(float32x2_t *)v6.f32, 1), (float32x4_t)xmmword_2418AB3B0, v6, 2), (float32x4_t)xmmword_2418DA1A0, v6, 3);
    v14 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v7.f32[0]), v31, *(float32x2_t *)v7.f32, 1), (float32x4_t)xmmword_2418AB3B0, v7, 2), (float32x4_t)xmmword_2418DA1A0, v7, 3);
  }
  else
  {
    v8 = vaddq_f32(vmlaq_f32(vmulq_n_f32(v30, a2), (float32x4_t)0, v31), (float32x4_t)0);
    v9 = vmulq_f32(v30, (float32x4_t)0);
    v10 = vaddq_f32(vmlaq_n_f32(v9, v31, a2), (float32x4_t)0);
    v11 = vmlaq_f32(v9, (float32x4_t)0, v31);
    v12 = vaddq_f32(v11, (float32x4_t)xmmword_2418AB3B0);
    v13 = vaddq_f32(vaddq_f32(v11, (float32x4_t)0), (float32x4_t)xmmword_2418DA1A0);
    v35 = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v8, v4.f32[0]), (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v4.f32, 1), v10), (float32x4_t)vdupq_laneq_s32((int32x4_t)v4, 2), v12), (float32x4_t)vdupq_laneq_s32((int32x4_t)v4, 3), v13);
    v34 = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v8, v5.f32[0]), (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v5.f32, 1), v10), (float32x4_t)vdupq_laneq_s32((int32x4_t)v5, 2), v12), (float32x4_t)vdupq_laneq_s32((int32x4_t)v5, 3), v13);
    v33 = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v8, v6.f32[0]), (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v6.f32, 1), v10), (float32x4_t)vdupq_laneq_s32((int32x4_t)v6, 2), v12), (float32x4_t)vdupq_laneq_s32((int32x4_t)v6, 3), v13);
    v14 = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v8, v7.f32[0]), (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v7.f32, 1), v10), (float32x4_t)vdupq_laneq_s32((int32x4_t)v7, 2), v12), (float32x4_t)vdupq_laneq_s32((int32x4_t)v7, 3), v13);
  }
  v32 = v14;
  if (*(_DWORD *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode))
  {
    v15 = (int32x4_t)xmmword_2418DA1B0;
  }
  else
  {
    v16 = 0.61087;
    v17 = a2 * 0.61087;
    if (a2 < 1.0)
      v17 = 0.61087;
    v18 = (float)(v17
                * (float)(COERCE_FLOAT(*(_QWORD *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset))
                        / (float)((float)*(uint64_t *)(a1
                                                    + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth)
                                * 0.5)))
        + 3.1416;
    if ((float)(1.0 / a2) >= 1.0)
      v16 = (float)(1.0 / a2) * 0.61087;
    v19 = 3.1416
        - (float)(v16
                * (float)(COERCE_FLOAT(HIDWORD(*(_QWORD *)(a1
                                                         + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset)))
                        / (float)((float)*(uint64_t *)(a1
                                                    + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight)
                                * 0.5)));
    v20 = __sincosf_stret(v18);
    v21 = __sincosf_stret(v19);
    v15.i64[0] = __PAIR64__(LODWORD(v21.__sinval), LODWORD(v20.__sinval));
    v15.i64[1] = COERCE_UNSIGNED_INT(-(float)(v20.__cosval * v21.__cosval));
  }
  *(__n64 *)v22.f32 = sub_2418A4174(0.0, v15, (int32x4_t)xmmword_2418AB3A0);
  v23 = (float32x4_t *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_projection);
  *v23 = v35;
  v23[1] = v34;
  v23[2] = v33;
  v23[3] = v32;
  v24 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v35, v22.f32[0]), v34, *(float32x2_t *)v22.f32, 1), v33, v22, 2), v32, v22, 3);
  result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v35, v25.f32[0]), v34, *(float32x2_t *)v25.f32, 1), v33, v25, 2), v32, v25, 3);
  v29 = (float32x4_t *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera);
  *v29 = v24;
  v29[1] = result;
  v29[2] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v35, v27.f32[0]), v34, *(float32x2_t *)v27.f32, 1), v33, v27, 2), v32, v27, 3);
  v29[3] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v35, v28.f32[0]), v34, *(float32x2_t *)v28.f32, 1), v33, v28, 2), v32, v28, 3);
  return result;
}

void sub_241869B74(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  float32x2_t v26;
  float v27;
  float32x2_t v28;
  int64x2_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t i;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  float v51;
  float32x2_t v52;
  int v53;
  uint64_t v54;

  v3 = v2;
  v54 = *MEMORY[0x24BDAC8D0];
  v6 = a2 != 0;
  sub_24186B498(a2);
  v8 = v7;
  v9 = objc_msgSend(a1, sel_renderCommandEncoderWithDescriptor_, v7);

  if (v9)
  {
    v10 = *(_QWORD **)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_disc);
    if (!v10)
    {
      swift_unknownObjectRelease();
      return;
    }
    v11 = (uint64_t *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_renderPipelines);
    swift_beginAccess();
    v12 = *v11;
    if (!*(_QWORD *)(*v11 + 16))
      goto LABEL_41;
    swift_retain();
    swift_bridgeObjectRetain();
    v13 = sub_241878CF0(v6);
    if ((v14 & 1) == 0)
    {
      swift_unknownObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    if (v10[9])
    {
      v16 = 6;
      if (!a2)
        v16 = 1;
      v43 = v16;
      v44 = v10[9];
      v53 = a2;
      v17 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers;
      v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers);
      if (v18 >> 62)
        goto LABEL_28;
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRetain();
      for (i = v15; v19; i = v15)
      {
        v20 = 0;
        v21 = (char *)MEMORY[0x24BEE4AF8];
        while (1)
        {
          v22 = *(_QWORD *)(v3 + v17);
          if ((v22 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            v23 = MEMORY[0x24269CAD4](v20, v22);
            swift_bridgeObjectRelease();
            goto LABEL_15;
          }
          if ((v20 & 0x8000000000000000) != 0)
            break;
          if (v20 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_27;
          v23 = *(_QWORD *)(v22 + 8 * v20 + 32);
          swift_retain();
LABEL_15:
          v24 = *(_DWORD *)(v23 + 28);
          swift_release();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_24180301C(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
          v15 = *((_QWORD *)v21 + 2);
          v25 = *((_QWORD *)v21 + 3);
          if (v15 >= v25 >> 1)
            v21 = sub_24180301C((char *)(v25 > 1), v15 + 1, 1, v21);
          ++v20;
          *((_QWORD *)v21 + 2) = v15 + 1;
          *(_DWORD *)&v21[4 * v15 + 32] = v24;
          if (v19 == v20)
            goto LABEL_32;
        }
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        v19 = sub_2418AA398();
        swift_bridgeObjectRelease();
        if (v19 < 0)
          __break(1u);
      }
      v21 = (char *)MEMORY[0x24BEE4AF8];
LABEL_32:
      if (*(_DWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1)
      {
        v26.f32[0] = (float)*(uint64_t *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
        v27 = (float)*(uint64_t *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
        v28 = 0;
      }
      else
      {
        v29.i64[0] = *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
        v29.i64[1] = *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
        v26 = vcvt_f32_f64(vcvtq_f64_s64(v29));
        v28 = vdiv_f32(*(float32x2_t *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset), vmul_f32(v26, (float32x2_t)0x3F0000003F000000));
        v27 = v26.f32[1];
      }
      v52 = v28;
      v51 = *(float *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale) * fminf(v26.f32[0] / v27, 1.0);
      v30 = v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_lights;
      swift_beginAccess();
      v50 = *(_QWORD *)(*(_QWORD *)v30 + 16);
      objc_msgSend(v9, sel_setFrontFacingWinding_, 1);
      objc_msgSend(v9, sel_setCullMode_, 2);
      v31 = (void *)sub_2418A9DB0();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setLabel_, v31);

      v32 = objc_msgSend(v9, sel_label);
      if (!v32)
      {
        __break(1u);
        return;
      }
      v33 = v32;
      objc_msgSend(v9, sel_pushDebugGroup_, v32);

      objc_msgSend(v9, sel_setRenderPipelineState_, i);
      objc_msgSend(v9, sel_setVertexBuffer_offset_atIndex_, v10[8], 0, 0);
      objc_msgSend(v9, sel_setVertexBuffer_offset_atIndex_, *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances), 0, 1);
      v34 = *(_QWORD *)(v3 + v17);
      if (v34 >> 62)
      {
        swift_bridgeObjectRetain();
        v35 = sub_2418AA398();
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if ((unint64_t)(v35 - 0x2000000000000000) >> 62 == 3)
      {
        objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, v21 + 32, 4 * v35, 2);
        swift_bridgeObjectRelease();
        v36 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model + 16);
        v37 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model + 32);
        v38 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model + 48);
        v46 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model);
        v47 = v36;
        v48 = v37;
        v49 = v38;
        objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, &v46, 64, 3);
        v39 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera + 16);
        v40 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera + 32);
        v41 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera + 48);
        v46 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera);
        v47 = v39;
        v48 = v40;
        v49 = v41;
        objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, &v46, 64, 4);
        v42 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time;
        LODWORD(v46) = *(_DWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time);
        objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, &v46, 4, 5);
        LODWORD(v46) = *(_DWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed);
        objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, &v46, 4, 6);
        objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, &v53, 8, 7);
        objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, &v52, 8, 0);
        objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, &v51, 4, 1);
        if ((unsigned __int128)(*(uint64_t *)(*(_QWORD *)v30 + 16) * (__int128)48) >> 64 == (48
                                                                                               * *(_QWORD *)(*(_QWORD *)v30 + 16)) >> 63)
        {
          objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, *(_QWORD *)v30 + 32);
          objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, &v50, 8, 3);
          objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, &v53, 8, 4);
          LODWORD(v46) = *(_DWORD *)(v3 + v42);
          objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, &v46, 4, 5);
          objc_msgSend(v9, sel_setFragmentTexture_atIndex_, *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background), 0);
          objc_msgSend(v9, sel_setFragmentTexture_atIndex_, *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_environmentMap), 1);
          objc_msgSend(v9, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_, 3, v10[7], 1, v44, 0, v43);
          objc_msgSend(v9, sel_popDebugGroup);
          objc_msgSend(v9, sel_endEncoding);
          swift_unknownObjectRelease();
          swift_release();
          swift_unknownObjectRelease();
          goto LABEL_41;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    swift_unknownObjectRelease();
    swift_release();
LABEL_41:
    swift_unknownObjectRelease();
  }
}

void sub_24186A324(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64x2_t v16;
  void *v17;
  void *v18;
  int v19;
  float32x2_t v20;
  _QWORD v21[5];

  v2 = v1;
  v21[4] = *MEMORY[0x24BDAC8D0];
  sub_24186B74C();
  v5 = v4;
  v6 = objc_msgSend(a1, sel_renderCommandEncoderWithDescriptor_, v4);

  if (v6)
  {
    v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_quad);
    if (!v7)
    {
      swift_unknownObjectRelease();
      return;
    }
    v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_renderPipelines);
    swift_beginAccess();
    v9 = *v8;
    if (*(_QWORD *)(*v8 + 16))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v10 = sub_241878CF0(2);
      if ((v11 & 1) == 0)
      {
        swift_unknownObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      v13 = v7[7];
      if (v13)
      {
        v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
        if ((v14 & 0x8000000000000000) != 0
          || HIDWORD(v14)
          || (v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight),
              (v15 & 0x8000000000000000) != 0)
          || HIDWORD(v15))
        {
          sub_2418AA374();
          __break(1u);
          return;
        }
        v21[0] = __PAIR64__(v15, v14);
        v16.i64[0] = v14;
        v16.i64[1] = v15;
        v20 = vdiv_f32(vadd_f32(*(float32x2_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset), *(float32x2_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset)), vmul_f32(vcvt_f32_f64(vcvtq_f64_s64(v16)), (float32x2_t)0x3F0000003F000000));
        swift_unknownObjectRetain();
        objc_msgSend(v6, sel_setFrontFacingWinding_, 1);
        objc_msgSend(v6, sel_setCullMode_, 2);
        v17 = (void *)sub_2418A9DB0();
        objc_msgSend(v6, sel_setLabel_, v17);

        v18 = (void *)sub_2418A9DB0();
        objc_msgSend(v6, sel_pushDebugGroup_, v18);

        objc_msgSend(v6, sel_setRenderPipelineState_, v12);
        objc_msgSend(v6, sel_setVertexBuffer_offset_atIndex_, v7[6], 0, 0);
        v19 = *(_DWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time);
        objc_msgSend(v6, sel_setVertexBytes_length_atIndex_, &v19, 4, 1);
        v19 = *(_DWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed);
        objc_msgSend(v6, sel_setVertexBytes_length_atIndex_, &v19, 4, 2);
        objc_msgSend(v6, sel_setVertexBytes_length_atIndex_, v21, 8, 3);
        objc_msgSend(v6, sel_setVertexBytes_length_atIndex_, &v20, 8, 4);
        objc_msgSend(v6, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_, 3, v7[5], 1, v13, 0, 1);
        objc_msgSend(v6, sel_popDebugGroup);
        objc_msgSend(v6, sel_endEncoding);
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
        swift_release();
      }
    }
    swift_unknownObjectRelease();
  }
}

id sub_24186A75C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  void *v27;
  unint64_t v28;
  uint64_t p_align;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  int v40;
  _BYTE v41[4];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  v44 = *MEMORY[0x24BDAC8D0];
  result = objc_msgSend(a1, sel_computeCommandEncoder);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_computePipelines);
    if (!*(_QWORD *)(v5 + 16))
      return (id)swift_unknownObjectRelease();
    swift_bridgeObjectRetain();
    v6 = sub_241878DB4(2);
    if ((v7 & 1) == 0)
    {
      swift_unknownObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v38 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_thetaOffsetRange);
    v9 = v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_randomNumberGenerator;
    swift_beginAccess();
    __swift_mutable_project_boxed_opaque_existential_1(v9, *(_QWORD *)(v9 + 24));
    sub_24186CC80();
    sub_24186CCC4();
    sub_2418A9D08();
    swift_endAccess();
    if (*(_DWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1)
      v10 = 1015580987;
    else
      v10 = *(_DWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_timeDelta);
    v40 = v10;
    v11 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers;
    v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers);
    v37 = v8;
    if ((unint64_t)v12 >> 62)
      goto LABEL_45;
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_11:
    if (v13)
    {
      v14 = 0;
      v15 = MEMORY[0x24BEE4AF8];
      v12 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        v16 = *(_QWORD *)(v2 + v11);
        if ((v16 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v17 = MEMORY[0x24269CAD4](v14, v16);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            if (v12 < 0)
              v15 = v12;
            else
              v15 = v12 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v13 = sub_2418AA398();
            swift_bridgeObjectRelease();
            if (v13 < 0)
            {
              __break(1u);
              goto LABEL_50;
            }
            goto LABEL_11;
          }
          if (v14 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_42;
          v17 = *(_QWORD *)(v16 + 8 * v14 + 32);
          swift_retain();
        }
        v18 = *(_DWORD *)(v17 + 28);
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = (uint64_t)sub_24180301C(0, *(_QWORD *)(v15 + 16) + 1, 1, (char *)v15);
        v20 = *(_QWORD *)(v15 + 16);
        v19 = *(_QWORD *)(v15 + 24);
        if (v20 >= v19 >> 1)
          v15 = (uint64_t)sub_24180301C((char *)(v19 > 1), v20 + 1, 1, (char *)v15);
        *(_QWORD *)(v15 + 16) = v20 + 1;
        *(_DWORD *)(v15 + 4 * v20 + 32) = v18;
        v21 = *(_QWORD *)(v2 + v11);
        if ((v21 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v22 = MEMORY[0x24269CAD4](v14, v21);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0)
            goto LABEL_43;
          if (v14 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_44;
          v22 = *(_QWORD *)(v21 + 8 * v14 + 32);
          swift_retain();
        }
        v23 = *(_BYTE *)(v22 + 32);
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = (uint64_t)sub_24180349C(0, *(_QWORD *)(v12 + 16) + 1, 1, (char *)v12);
        v25 = *(_QWORD *)(v12 + 16);
        v24 = *(_QWORD *)(v12 + 24);
        if (v25 >= v24 >> 1)
          v12 = (uint64_t)sub_24180349C((char *)(v24 > 1), v25 + 1, 1, (char *)v12);
        ++v14;
        *(_QWORD *)(v12 + 16) = v25 + 1;
        *(_BYTE *)(v12 + v25 + 32) = v23;
        if (v13 == v14)
          goto LABEL_34;
      }
    }
    v15 = MEMORY[0x24BEE4AF8];
    v12 = MEMORY[0x24BEE4AF8];
LABEL_34:
    v26 = (void *)sub_2418A9DB0();
    objc_msgSend(v4, sel_setLabel_, v26);

    v27 = (void *)sub_2418A9DB0();
    objc_msgSend(v4, sel_pushDebugGroup_, v27);

    objc_msgSend(v4, sel_setComputePipelineState_, v37);
    objc_msgSend(v4, sel_setBuffer_offset_atIndex_, *(_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances), 0, 0);
    v28 = *(_QWORD *)(v2 + v11);
    if (v28 >> 62)
    {
LABEL_50:
      swift_bridgeObjectRetain();
      p_align = sub_2418AA398();
      swift_bridgeObjectRelease();
    }
    else
    {
      p_align = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if ((unint64_t)(p_align - 0x2000000000000000) >> 62 == 3)
    {
      v30 = 4 * p_align;
      p_align = (uint64_t)&stru_2511B9FE8.align;
      objc_msgSend(v4, sel_setBytes_length_atIndex_, v15 + 32, v30, 1);
      swift_bridgeObjectRelease();
      v31 = *(_QWORD *)(v2 + v11);
      if (!(v31 >> 62))
      {
        v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_39;
      }
    }
    else
    {
      __break(1u);
    }
    swift_bridgeObjectRetain();
    v32 = sub_2418AA398();
    swift_bridgeObjectRelease();
LABEL_39:
    objc_msgSend(v4, *(SEL *)(p_align + 2896), v12 + 32, v32, 2);
    swift_bridgeObjectRelease();
    objc_msgSend(v4, *(SEL *)(p_align + 2896), &v40, 4, 3);
    LODWORD(v42) = *(_DWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed);
    objc_msgSend(v4, *(SEL *)(p_align + 2896), &v42, 4, 4);
    LOBYTE(v42) = *(_BYTE *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_firstRun);
    objc_msgSend(v4, *(SEL *)(p_align + 2896), &v42, 1, 5);
    objc_msgSend(v4, *(SEL *)(p_align + 2896), v41, 4, 6);
    MTLSizeMake(2, 1, &v42);
    v36 = v42;
    v33 = v43;
    MTLSizeMake(4, 1, &v42);
    v34 = v43;
    v35 = v42;
    v42 = v36;
    v43 = v33;
    v38 = v35;
    v39 = v34;
    objc_msgSend(v4, sel_dispatchThreadgroups_threadsPerThreadgroup_, &v42, &v38);
    objc_msgSend(v4, sel_popDebugGroup);
    objc_msgSend(v4, sel_endEncoding);
    swift_unknownObjectRelease();
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24186AE1C(void *a1)
{
  uint64_t v1;
  void *v2;
  void **v4;
  id v5;
  void *v6;
  void *v8[5];

  v8[4] = *(void **)MEMORY[0x24BDAC8D0];
  v2 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurPipeline);
  if (!v2)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  v4 = (void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_backShape);
  swift_beginAccess();
  if (!*v4)
    goto LABEL_5;
  v8[0] = *v4;
  v5 = v2;
  -[HKCVGaussianBlur encodeCommandBuffer:inPlaceTexture:]((uint64_t)v5, a1, v8);
  v6 = v8[0];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *v4 = v6;

  return swift_endAccess();
}

id sub_24186AEF8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  v2 = v1;
  result = objc_msgSend(a1, sel_computeCommandEncoder);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_computePipelines);
    if (!*(_QWORD *)(v5 + 16))
      return (id)swift_unknownObjectRelease();
    swift_bridgeObjectRetain();
    v6 = sub_241878DB4(1);
    if ((v7 & 1) == 0)
    {
      swift_unknownObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_2418A9DB0();
    objc_msgSend(v4, sel_setLabel_, v9);

    v10 = (void *)sub_2418A9DB0();
    objc_msgSend(v4, sel_pushDebugGroup_, v10);

    objc_msgSend(v4, sel_setComputePipelineState_, v8);
    v11 = (_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_backShape);
    swift_beginAccess();
    objc_msgSend(v4, sel_setTexture_atIndex_, *v11, 0);
    v12 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background;
    objc_msgSend(v4, sel_setTexture_atIndex_, *(_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background), 1);
    objc_msgSend(v4, sel_setTexture_atIndex_, *(_QWORD *)(v2 + v12), 2);
    v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
    v14 = v13 + 3;
    if (v13 >= 0)
      v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
    v15 = v14 >> 2;
    if ((v13 & 3) != 0)
      result = (id)(v15 + 1);
    else
      result = (id)v15;
    if (((unint64_t)result - 0x2000000000000000) >> 62 == 3)
    {
      v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
      v17 = v16 + 3;
      if (v16 >= 0)
        v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
      v18 = v17 >> 2;
      if ((v16 & 3) != 0)
        v19 = v18 + 1;
      else
        v19 = v18;
      if ((unint64_t)(v19 - 0x2000000000000000) >> 62 == 3)
      {
        MTLSizeMake((uint64_t)result, v19, &v26);
        v23 = v26;
        v20 = v27;
        MTLSizeMake(4, 4, &v26);
        v21 = v27;
        v22 = v26;
        v26 = v23;
        v27 = v20;
        v24 = v22;
        v25 = v21;
        objc_msgSend(v4, sel_dispatchThreadgroups_threadsPerThreadgroup_, &v26, &v24);
        objc_msgSend(v4, sel_popDebugGroup);
        objc_msgSend(v4, sel_endEncoding);
        swift_unknownObjectRelease();
        return (id)swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

id sub_24186B1BC(uint64_t a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  id result;
  id v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  v3 = v2;
  result = objc_msgSend(a2, sel_computeCommandEncoder);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_computePipelines);
    if (!*(_QWORD *)(v7 + 16))
      return (id)swift_unknownObjectRelease();
    swift_bridgeObjectRetain();
    v8 = sub_241878DB4(0);
    if ((v9 & 1) == 0)
    {
      swift_unknownObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v11 = (void *)sub_2418A9DB0();
    objc_msgSend(v6, sel_setLabel_, v11);

    v12 = (void *)sub_2418A9DB0();
    objc_msgSend(v6, sel_pushDebugGroup_, v12);

    objc_msgSend(v6, sel_setComputePipelineState_, v10);
    objc_msgSend(v6, sel_setTexture_atIndex_, *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_albedo), 0);
    objc_msgSend(v6, sel_setTexture_atIndex_, *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background), 1);
    objc_msgSend(v6, sel_setTexture_atIndex_, *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_result), 2);
    objc_msgSend(v6, sel_setTexture_atIndex_, a1, 3);
    v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
    v14 = v13 + 3;
    if (v13 >= 0)
      v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
    v15 = v14 >> 2;
    if ((v13 & 3) != 0)
      result = (id)(v15 + 1);
    else
      result = (id)v15;
    if (((unint64_t)result - 0x2000000000000000) >> 62 == 3)
    {
      v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
      v17 = v16 + 3;
      if (v16 >= 0)
        v17 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
      v18 = v17 >> 2;
      if ((v16 & 3) != 0)
        v19 = v18 + 1;
      else
        v19 = v18;
      if ((unint64_t)(v19 - 0x2000000000000000) >> 62 == 3)
      {
        MTLSizeMake((uint64_t)result, v19, &v26);
        v23 = v26;
        v20 = v27;
        MTLSizeMake(4, 4, &v26);
        v21 = v27;
        v22 = v26;
        v26 = v23;
        v27 = v20;
        v24 = v22;
        v25 = v21;
        objc_msgSend(v6, sel_dispatchThreadgroups_threadsPerThreadgroup_, &v26, &v24);
        objc_msgSend(v6, sel_popDebugGroup);
        objc_msgSend(v6, sel_endEncoding);
        swift_unknownObjectRelease();
        return (id)swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_24186B498(int a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;

  if (a1)
  {
    v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_albedo);
  }
  else
  {
    v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_backShape);
    swift_beginAccess();
  }
  v3 = *v2;
  v4 = objc_allocWithZone(MEMORY[0x24BDDD690]);
  swift_unknownObjectRetain();
  v5 = objc_msgSend(v4, sel_init);
  v6 = objc_msgSend(v5, sel_colorAttachments);
  v7 = objc_msgSend(v6, sel_objectAtIndexedSubscript_, 0);

  if (!v7)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount;
  if (*(uint64_t *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount) <= 1)
    v9 = 1;
  else
    v9 = 2;
  objc_msgSend(v7, sel_setStoreAction_, v9);

  v10 = objc_msgSend(v5, sel_colorAttachments);
  v11 = objc_msgSend(v10, sel_objectAtIndexedSubscript_, 0);

  if (!v11)
    goto LABEL_19;
  objc_msgSend(v11, sel_setLoadAction_, 2);

  v12 = objc_msgSend(v5, sel_colorAttachments);
  v13 = objc_msgSend(v12, sel_objectAtIndexedSubscript_, 0);

  if (!v13)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  objc_msgSend(v13, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);

  v14 = objc_msgSend(v5, sel_colorAttachments);
  v15 = objc_msgSend(v14, sel_objectAtIndexedSubscript_, 0);

  if (!v15)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  v16 = v3;
  if (*(uint64_t *)(v1 + v8) >= 2)
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_msaaAlbedo);
  objc_msgSend(v15, sel_setTexture_, v16);

  v17 = objc_msgSend(v5, sel_colorAttachments);
  v18 = objc_msgSend(v17, sel_objectAtIndexedSubscript_, 0);

  if (!v18)
    goto LABEL_22;
  if (*(uint64_t *)(v1 + v8) < 2)
  {
    v19 = 0;
  }
  else
  {
    swift_unknownObjectRetain();
    v19 = v3;
  }
  objc_msgSend(v18, sel_setResolveTexture_, v19);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
}

void sub_24186B74C()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD690]), sel_init);
  v2 = objc_msgSend(v1, sel_colorAttachments);
  v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);

  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v3, sel_setStoreAction_, 1);

  v4 = objc_msgSend(v1, sel_colorAttachments);
  v5 = objc_msgSend(v4, sel_objectAtIndexedSubscript_, 0);

  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v5, sel_setLoadAction_, 2);

  v6 = objc_msgSend(v1, sel_colorAttachments);
  v7 = objc_msgSend(v6, sel_objectAtIndexedSubscript_, 0);

  if (!v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(v7, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);

  v8 = objc_msgSend(v1, sel_colorAttachments);
  v9 = objc_msgSend(v8, sel_objectAtIndexedSubscript_, 0);

  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background);
  swift_unknownObjectRetain();
  objc_msgSend(v9, sel_setTexture_, v10);
  swift_unknownObjectRelease();

  v11 = objc_msgSend(v1, sel_colorAttachments);
  v12 = objc_msgSend(v11, sel_objectAtIndexedSubscript_, 0);

  if (v12)
  {
    objc_msgSend(v12, sel_setResolveTexture_, 0);

    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_24186B964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_colorScheme;
  v2 = sub_2418A84E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_randomNumberGenerator);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_24186BADC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChamomileRenderer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24186BC8C()
{
  return type metadata accessor for ChamomileRenderer();
}

uint64_t type metadata accessor for ChamomileRenderer()
{
  uint64_t result;

  result = qword_257154048;
  if (!qword_257154048)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24186BCD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2418A84E4();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

ValueMetadata *type metadata accessor for ChamomileRenderer.ComputePipeline()
{
  return &type metadata for ChamomileRenderer.ComputePipeline;
}

uint64_t _s14MentalHealthUI17ChamomileRendererC14RenderPipelineOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24186BE58 + 4 * byte_2418D9E8C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24186BE8C + 4 * byte_2418D9E87[v4]))();
}

uint64_t sub_24186BE8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24186BE94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24186BE9CLL);
  return result;
}

uint64_t sub_24186BEA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24186BEB0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24186BEB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24186BEBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChamomileRenderer.RenderPipeline()
{
  return &type metadata for ChamomileRenderer.RenderPipeline;
}

unint64_t sub_24186BEDC()
{
  unint64_t result;

  result = qword_257154058;
  if (!qword_257154058)
  {
    result = MEMORY[0x24269D47C](&unk_2418DA068, &type metadata for ChamomileRenderer.RenderPipeline);
    atomic_store(result, (unint64_t *)&qword_257154058);
  }
  return result;
}

unint64_t sub_24186BF24()
{
  unint64_t result;

  result = qword_257154060;
  if (!qword_257154060)
  {
    result = MEMORY[0x24269D47C](&unk_2418DA108, &type metadata for ChamomileRenderer.ComputePipeline);
    atomic_store(result, (unint64_t *)&qword_257154060);
  }
  return result;
}

uint64_t sub_24186BF68(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(void), void (*a6)(void))
{
  _QWORD *v6;
  _QWORD *v10;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v10 = v6;
  v14 = *v6;
  v16 = a4(a2);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v21 >= result && (a3 & 1) == 0)
  {
    result = a5();
LABEL_7:
    v22 = (_QWORD *)*v10;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    *(_BYTE *)(v22[6] + v16) = a2;
    *(_QWORD *)(v22[7] + 8 * v16) = a1;
    v25 = v22[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v22[2] = v27;
      return result;
    }
    goto LABEL_14;
  }
  a6();
  result = a4(a2);
  if ((v20 & 1) == (v24 & 1))
  {
    v16 = result;
    v22 = (_QWORD *)*v10;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2418AA50C();
  __break(1u);
  return result;
}

_OWORD *sub_24186C0B8(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_241878C8C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_2417AC5F4(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_24182DE24();
      goto LABEL_7;
    }
    sub_24182D5B8(v15, a4 & 1);
    v21 = sub_241878C8C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_24186C1E8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_2418AA50C();
  __break(1u);
  return result;
}

_OWORD *sub_24186C1E8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_2417AC5F4(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_24186C250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  void **v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t ObjCClassFromMetadata;
  id v32;
  void *v33;
  id v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  void (*v41)(char *, uint64_t);
  id v42;
  uint64_t result;
  id v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51[28];

  v49 = a2;
  v48 = a1;
  v51[27] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24172570C(0, (unint64_t *)&qword_2543915A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v46 - v6;
  v8 = sub_2418A7F50();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v47 = (char *)&v46 - v15;
  v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDDB48]), sel_initWithDevice_, a3);
  sub_24172570C(0, &qword_257154090, (uint64_t (*)(uint64_t))sub_24186CF90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  v17 = (void **)MEMORY[0x24BDDDB20];
  *(_OWORD *)(inited + 16) = xmmword_2418D5080;
  v18 = *v17;
  v19 = MEMORY[0x24BEE1E88];
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(inited + 40) = 1;
  v20 = (void *)*MEMORY[0x24BDDDB18];
  *(_QWORD *)(inited + 64) = v19;
  *(_QWORD *)(inited + 72) = v20;
  *(_QWORD *)(inited + 80) = 2;
  v21 = (void *)*MEMORY[0x24BDDDB00];
  *(_QWORD *)(inited + 104) = v19;
  *(_QWORD *)(inited + 112) = v21;
  v22 = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 120) = 1;
  v23 = (void *)*MEMORY[0x24BDDDAF8];
  *(_QWORD *)(inited + 144) = v22;
  *(_QWORD *)(inited + 152) = v23;
  v24 = (void *)*MEMORY[0x24BDDDAF0];
  type metadata accessor for CubeLayout(0);
  *(_QWORD *)(inited + 184) = v25;
  *(_QWORD *)(inited + 160) = v24;
  v26 = v18;
  v27 = v20;
  v28 = v21;
  v29 = v23;
  v30 = v24;
  sub_2418753D8(inited);
  type metadata accessor for ChamomileRenderer();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v32 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v33 = (void *)sub_2418A9DB0();
  v34 = objc_msgSend(v32, sel_URLForResource_withExtension_, v33, 0);

  if (!v34)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_6:
    __break(1u);
  }
  sub_2418A7F38();

  v35 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v35(v7, v13, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    goto LABEL_6;
  v36 = v47;
  v35(v47, v7, v8);
  v37 = (void *)sub_2418A7F2C();
  type metadata accessor for Option(0);
  sub_24186CFF8();
  v38 = (void *)sub_2418A9D14();
  swift_bridgeObjectRelease();
  v51[0] = 0;
  v39 = v46;
  v40 = objc_msgSend(v46, sel_newTextureWithContentsOfURL_options_error_, v37, v38, v51);

  if (v40)
  {
    v41 = *(void (**)(char *, uint64_t))(v9 + 8);
    v42 = v51[0];
    v41(v36, v8);

    return (uint64_t)v40;
  }
  else
  {
    v44 = v51[0];
    v45 = sub_2418A7F14();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v36, v8);
    v51[0] = 0;
    v51[1] = (id)0xE000000000000000;
    sub_2418AA2B4();
    sub_2418A9E40();
    v50 = v45;
    sub_2417609B0();
    sub_2418AA35C();
    result = sub_2418AA380();
    __break(1u);
  }
  return result;
}

uint64_t sub_24186C728()
{
  unint64_t v0;

  v0 = sub_2418AA3F8();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_24186C76C(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, double a8, float a9)
{
  char *v9;
  char *v10;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v10 = v9;
  *(_DWORD *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode] = 0;
  v17 = MEMORY[0x24BEE3A08];
  v18 = &v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_randomNumberGenerator];
  *((_QWORD *)v18 + 3) = MEMORY[0x24BEE3A00];
  *((_QWORD *)v18 + 4) = v17;
  v19 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_meshQuality;
  v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_meshQuality] = 2;
  *(_DWORD *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valence] = 0;
  v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_isDragging] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset] = 0;
  *(_DWORD *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale] = 1065353216;
  *(_DWORD *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed] = 0;
  *(_DWORD *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time] = 0;
  v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_firstRun] = 1;
  v20 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers;
  sub_24172887C(0, (unint64_t *)&qword_25714D510, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_2418D9090;
  type metadata accessor for RingBufferHelper();
  v22 = swift_allocObject();
  *(_BYTE *)(v22 + 32) = 0;
  *(_DWORD *)(v22 + 16) = 1065353216;
  *(_QWORD *)(v22 + 20) = 0x400000000;
  *(_QWORD *)(v22 + 36) = 0x3F80000000000000;
  *(_DWORD *)(v22 + 28) = 4;
  *(_QWORD *)(v21 + 32) = v22;
  v23 = swift_allocObject();
  *(_BYTE *)(v23 + 32) = 0;
  *(_DWORD *)(v23 + 16) = 0;
  *(_QWORD *)(v23 + 20) = 0x500000004;
  *(_QWORD *)(v23 + 36) = 0;
  *(_DWORD *)(v23 + 28) = 5;
  *(_QWORD *)(v21 + 40) = v23;
  v24 = swift_allocObject();
  *(_BYTE *)(v24 + 32) = 0;
  *(_DWORD *)(v24 + 16) = 1077936128;
  *(_QWORD *)(v24 + 20) = 0x600000005;
  *(_QWORD *)(v24 + 36) = 0x4040000000000000;
  *(_DWORD *)(v24 + 28) = 6;
  *(_QWORD *)(v21 + 48) = v24;
  sub_2418A9EC4();
  *(_QWORD *)&v10[v20] = v21;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_disc] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_quad] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances] = 0;
  v25 = &v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model];
  v26 = *MEMORY[0x24BDAEE00];
  v27 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v28 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v29 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
  *(_OWORD *)v25 = *MEMORY[0x24BDAEE00];
  *((_OWORD *)v25 + 1) = v27;
  *((_OWORD *)v25 + 2) = v28;
  *((_OWORD *)v25 + 3) = v29;
  v30 = &v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation];
  *(_OWORD *)v30 = v26;
  *((_OWORD *)v30 + 1) = v27;
  *((_OWORD *)v30 + 2) = v28;
  *((_OWORD *)v30 + 3) = v29;
  v31 = &v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_projection];
  *(_OWORD *)v31 = v26;
  *((_OWORD *)v31 + 1) = v27;
  *((_OWORD *)v31 + 2) = v28;
  *((_OWORD *)v31 + 3) = v29;
  v32 = &v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera];
  *(_OWORD *)v32 = v26;
  *((_OWORD *)v32 + 1) = v27;
  *((_OWORD *)v32 + 2) = v28;
  *((_OWORD *)v32 + 3) = v29;
  v33 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_lights] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_thetaOffsetRange] = 0x3EC90FDA00000000;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_environmentMap] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_albedo] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_msaaAlbedo] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_backShape] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_msaaBackShape] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_result] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_resultBuffer] = 0;
  *(_DWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurSigma] = 1107296256;
  *(_QWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurPipeline] = 0;
  v34 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_kernelCache;
  v35 = objc_allocWithZone((Class)HKCVKernelCache);
  v36 = v10;
  *(_QWORD *)&v10[v34] = objc_msgSend(v35, sel_init);
  v37 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_renderPipelines;
  *(_QWORD *)&v36[v37] = sub_24187568C(v33);
  v38 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_computePipelines;
  *(_QWORD *)&v36[v38] = sub_2418753C4(v33);
  v10[v19] = a3;
  v39 = &v36[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer__effectiveValence];
  *(_QWORD *)v39 = a4;
  *((_QWORD *)v39 + 1) = a5;
  *((float *)v39 + 4) = a9;
  v40 = &v36[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_colorScheme];
  v41 = sub_2418A84E4();
  v42 = *(_QWORD *)(v41 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, a6, v41);
  v36[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion] = a7;
  swift_retain();
  swift_retain();

  v43 = sub_241789F34(a1, a2, a8);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(a6, v41);
  return v43;
}

void sub_24186CBBC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, sel_bounds);
    v3 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling;
    v5 = v4 * *(double *)(v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling);
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v2, sel_setDrawableSize_, v5, v6 * *(double *)(v0 + v3));

  }
  if (!*(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode))
    sub_24186702C();
}

uint64_t MTLSizeMake@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  a3[2] = 1;
  return result;
}

unint64_t sub_24186CC80()
{
  unint64_t result;

  result = qword_257154068;
  if (!qword_257154068)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE14F0], MEMORY[0x24BEE14E8]);
    atomic_store(result, (unint64_t *)&qword_257154068);
  }
  return result;
}

unint64_t sub_24186CCC4()
{
  unint64_t result;

  result = qword_257154070;
  if (!qword_257154070)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE4540], MEMORY[0x24BEE44F0]);
    atomic_store(result, (unint64_t *)&qword_257154070);
  }
  return result;
}

double simd_quaternion(simd_float4x4 a1)
{
  float v1;
  float v3;
  float32x2_t v4;
  float32x2_t v5;
  float32x2_t v6;
  float32x2_t v7;
  float32x2_t v8;
  float32x2_t v9;
  float32x2_t v10;
  unsigned __int32 v11;
  float32x2_t v16;
  float32x2_t v17;
  float32x2_t v18;

  v1 = a1.columns[2].f32[2] + (float)(a1.columns[0].f32[0] + a1.columns[1].f32[1]);
  if (v1 >= 0.0)
  {
    a1.columns[3].f32[0] = sqrtf(v1 + 1.0);
    v5 = vrecpe_f32((float32x2_t)COERCE_UNSIGNED_INT(a1.columns[3].f32[0] + a1.columns[3].f32[0]));
    v6 = vmul_f32(v5, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(a1.columns[3].f32[0] + a1.columns[3].f32[0]), v5));
    *(float32x2_t *)a1.columns[3].f32 = vmul_n_f32(vsub_f32((float32x2_t)vzip1_s32((int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[1], (int8x16_t)a1.columns[1], 8uLL), *(int32x2_t *)a1.columns[2].f32), (float32x2_t)vext_s8(*(int8x8_t *)a1.columns[2].f32, (int8x8_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[0], (int8x16_t)a1.columns[0], 8uLL), 4uLL)), vmul_f32(v6, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(a1.columns[3].f32[0] + a1.columns[3].f32[0]), v6)).f32[0]);
  }
  else if (a1.columns[0].f32[0] < a1.columns[1].f32[1] || a1.columns[0].f32[0] < a1.columns[2].f32[2])
  {
    v3 = 1.0 - a1.columns[0].f32[0];
    if (a1.columns[1].f32[1] >= a1.columns[2].f32[2])
    {
      a1.columns[3].f32[0] = sqrtf(a1.columns[1].f32[1] + (float)(v3 - a1.columns[2].f32[2]));
      a1.columns[3].f32[0] = a1.columns[3].f32[0] + a1.columns[3].f32[0];
      v16 = vrecpe_f32((float32x2_t)a1.columns[3].u32[0]);
      v17 = vmul_f32(v16, vrecps_f32((float32x2_t)a1.columns[3].u32[0], v16));
      v18.i32[0] = vmul_f32(v17, vrecps_f32((float32x2_t)a1.columns[3].u32[0], v17)).u32[0];
      v17.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_lane_s32(*(int32x2_t *)a1.columns[0].f32, 1), *(float32x2_t *)a1.columns[1].f32).u32[0];
      v17.i32[1] = a1.columns[3].i32[0];
      v18.i32[1] = 0.25;
      *(float32x2_t *)a1.columns[3].f32 = vmul_f32(v17, v18);
    }
    else
    {
      v4 = (float32x2_t)__PAIR64__(a1.columns[0].u32[1], COERCE_UNSIGNED_INT(sqrtf(a1.columns[2].f32[2] + (float)(v3 - a1.columns[1].f32[1]))));
      *(float32x2_t *)a1.columns[2].f32 = vadd_f32((float32x2_t)vzip1_s32((int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[0], (int8x16_t)a1.columns[0], 8uLL), (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[1], (int8x16_t)a1.columns[1], 8uLL)), *(float32x2_t *)a1.columns[2].f32);
      *(int32x2_t *)a1.columns[1].f32 = vdup_lane_s32(*(int32x2_t *)a1.columns[1].f32, 0);
      a1.columns[1].i32[0] = 2.0;
      a1.columns[1].i32[0] = vmul_f32(v4, *(float32x2_t *)a1.columns[1].f32).u32[0];
      *(float32x2_t *)a1.columns[3].f32 = vrecpe_f32((float32x2_t)a1.columns[1].u32[0]);
      *(float32x2_t *)a1.columns[3].f32 = vmul_f32(*(float32x2_t *)a1.columns[3].f32, vrecps_f32((float32x2_t)a1.columns[1].u32[0], *(float32x2_t *)a1.columns[3].f32));
      *(float32x2_t *)a1.columns[3].f32 = vmul_n_f32(*(float32x2_t *)a1.columns[2].f32, vmul_f32(*(float32x2_t *)a1.columns[3].f32, vrecps_f32((float32x2_t)a1.columns[1].u32[0], *(float32x2_t *)a1.columns[3].f32)).f32[0]);
      __asm { FMOV            V2.2S, #0.25 }
    }
  }
  else
  {
    *(int32x2_t *)a1.columns[3].f32 = vdup_lane_s32(*(int32x2_t *)a1.columns[1].f32, 0);
    v7 = vadd_f32(*(float32x2_t *)a1.columns[0].f32, *(float32x2_t *)a1.columns[3].f32);
    a1.columns[3].i32[0] = 2.0;
    v8.i32[0] = vmul_f32((float32x2_t)__PAIR64__(a1.columns[0].u32[1], COERCE_UNSIGNED_INT(sqrtf(a1.columns[0].f32[0]+ (float)((float)(1.0 - a1.columns[1].f32[1]) - a1.columns[2].f32[2])))), *(float32x2_t *)a1.columns[3].f32).u32[0];
    v8.i32[1] = v7.i32[1];
    v9 = vrecpe_f32((float32x2_t)v8.u32[0]);
    v10 = vmul_f32(v9, vrecps_f32((float32x2_t)v8.u32[0], v9));
    v11 = vmul_f32(v10, vrecps_f32((float32x2_t)v8.u32[0], v10)).u32[0];
    __asm { FMOV            V5.2S, #0.25 }
    _D5.i32[1] = v11;
    *(float32x2_t *)a1.columns[3].f32 = vmul_f32(v8, _D5);
  }
  return *(double *)a1.columns[3].i64;
}

void simd_slerp(float32x4_t a1, float32x4_t a2, float a3)
{
  float32x4_t v3;
  float32x4_t v4;
  int8x16_t v5;

  v3 = vmulq_f32(a1, a2);
  v4 = (float32x4_t)vextq_s8((int8x16_t)v3, (int8x16_t)v3, 8uLL);
  *(float32x2_t *)v3.f32 = vadd_f32(*(float32x2_t *)v3.f32, *(float32x2_t *)v4.f32);
  v3.f32[0] = vaddv_f32(*(float32x2_t *)v3.f32);
  v4.i32[0] = 0;
  v5 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgeq_f32(v3, v4)), 0);
  _simd_slerp_internal(a1, (float32x4_t)vbslq_s8(v5, (int8x16_t)vnegq_f32(a2), (int8x16_t)a2), *(float *)v5.i32);
}

uint64_t MTLRegionMake2D@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  a3[3] = result;
  a3[4] = a2;
  a3[5] = 1;
  return result;
}

uint64_t sub_24186CF2C()
{
  return swift_deallocObject();
}

unint64_t sub_24186CF3C()
{
  unint64_t result;

  result = qword_257154080;
  if (!qword_257154080)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_257154080);
  }
  return result;
}

void sub_24186CF90()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257154470)
  {
    type metadata accessor for Option(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257154470);
  }
}

unint64_t sub_24186CFF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714BEE0;
  if (!qword_25714BEE0)
  {
    type metadata accessor for Option(255);
    result = MEMORY[0x24269D47C](&unk_2418D1670, v1);
    atomic_store(result, (unint64_t *)&qword_25714BEE0);
  }
  return result;
}

void _simd_slerp_internal(float32x4_t a1, float32x4_t a2, float a3)
{
  float32x4_t v4;
  int8x16_t v5;
  float32x4_t v6;
  int8x16_t v7;
  float v8;
  float v9;
  float v10;

  v4 = vsubq_f32(a1, a2);
  v5 = (int8x16_t)vmulq_f32(v4, v4);
  v6 = vaddq_f32(a1, a2);
  v7 = (int8x16_t)vmulq_f32(v6, v6);
  v8 = atan2f(sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v5.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL)))), sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)))));
  v9 = v8 + v8;
  if ((float)(v8 + v8) != 0.0)
    sinf(v9);
  if ((float)(v9 * 0.9) != 0.0)
    sinf(v9 * 0.9);
  v10 = v9 * 0.1;
  if (v10 != 0.0)
    sinf(v10);
}

uint64_t destroy for LocalizedAssessmentInformationalContent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for LocalizedAssessmentInformationalContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LocalizedAssessmentInformationalContent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LocalizedAssessmentInformationalContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LocalizedAssessmentInformationalContent()
{
  return &type metadata for LocalizedAssessmentInformationalContent;
}

void sub_24186D35C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  if ((*v1 & 1) != 0)
  {
    if (qword_25714B958 != -1)
      swift_once();
    v2 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v3 = sub_2418A7EFC();
    v91 = v4;
    v92 = v3;
    swift_bridgeObjectRelease();

    v5 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v89 = sub_2418A7EFC();
    v90 = v6;
    swift_bridgeObjectRelease();

    sub_24186DDBC();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_2418D5080;
    v8 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v9 = sub_2418A7EFC();
    v11 = v10;
    swift_bridgeObjectRelease();

    v12 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v13 = sub_2418A7EFC();
    v15 = v14;
    swift_bridgeObjectRelease();

    *(_QWORD *)(v7 + 32) = v9;
    *(_QWORD *)(v7 + 40) = v11;
    *(_QWORD *)(v7 + 48) = v13;
    *(_QWORD *)(v7 + 56) = v15;
    v16 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v17 = sub_2418A7EFC();
    v19 = v18;
    swift_bridgeObjectRelease();

    v20 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v21 = sub_2418A7EFC();
    v23 = v22;
    swift_bridgeObjectRelease();

    *(_QWORD *)(v7 + 64) = v17;
    *(_QWORD *)(v7 + 72) = v19;
    *(_QWORD *)(v7 + 80) = v21;
    *(_QWORD *)(v7 + 88) = v23;
    v24 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v25 = sub_2418A7EFC();
    v27 = v26;
    swift_bridgeObjectRelease();

    v28 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v29 = sub_2418A7EFC();
    v31 = v30;
    swift_bridgeObjectRelease();

    *(_QWORD *)(v7 + 96) = v25;
    *(_QWORD *)(v7 + 104) = v27;
    *(_QWORD *)(v7 + 112) = v29;
    *(_QWORD *)(v7 + 120) = v31;
    v32 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v33 = sub_2418A7EFC();
    v35 = v34;
    swift_bridgeObjectRelease();

    v36 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v37 = sub_2418A7EFC();
    v39 = v38;
    swift_bridgeObjectRelease();

    *(_QWORD *)(v7 + 128) = v33;
    *(_QWORD *)(v7 + 136) = v35;
    *(_QWORD *)(v7 + 144) = v37;
    *(_QWORD *)(v7 + 152) = v39;
    v40 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_25714B958 != -1)
      swift_once();
    v41 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v42 = sub_2418A7EFC();
    v91 = v43;
    v92 = v42;
    swift_bridgeObjectRelease();

    v44 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v89 = sub_2418A7EFC();
    v90 = v45;
    swift_bridgeObjectRelease();

    sub_24186DDBC();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_2418DA220;
    v46 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v47 = sub_2418A7EFC();
    v49 = v48;
    swift_bridgeObjectRelease();

    v50 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v51 = sub_2418A7EFC();
    v53 = v52;
    swift_bridgeObjectRelease();

    *(_QWORD *)(v7 + 32) = v47;
    *(_QWORD *)(v7 + 40) = v49;
    *(_QWORD *)(v7 + 48) = v51;
    *(_QWORD *)(v7 + 56) = v53;
    v54 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v55 = sub_2418A7EFC();
    v57 = v56;
    swift_bridgeObjectRelease();

    v58 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v59 = sub_2418A7EFC();
    v61 = v60;
    swift_bridgeObjectRelease();

    *(_QWORD *)(v7 + 64) = v55;
    *(_QWORD *)(v7 + 72) = v57;
    *(_QWORD *)(v7 + 80) = v59;
    *(_QWORD *)(v7 + 88) = v61;
    v62 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v63 = sub_2418A7EFC();
    v65 = v64;
    swift_bridgeObjectRelease();

    v66 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v67 = sub_2418A7EFC();
    v69 = v68;
    swift_bridgeObjectRelease();

    *(_QWORD *)(v7 + 96) = v63;
    *(_QWORD *)(v7 + 104) = v65;
    *(_QWORD *)(v7 + 112) = v67;
    *(_QWORD *)(v7 + 120) = v69;
    v70 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v71 = sub_2418A7EFC();
    v73 = v72;
    swift_bridgeObjectRelease();

    v74 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v75 = sub_2418A7EFC();
    v77 = v76;
    swift_bridgeObjectRelease();

    *(_QWORD *)(v7 + 128) = v71;
    *(_QWORD *)(v7 + 136) = v73;
    *(_QWORD *)(v7 + 144) = v75;
    *(_QWORD *)(v7 + 152) = v77;
    v78 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v79 = sub_2418A7EFC();
    v81 = v80;
    swift_bridgeObjectRelease();

    v82 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v83 = sub_2418A7EFC();
    v85 = v84;
    swift_bridgeObjectRelease();

    *(_QWORD *)(v7 + 160) = v79;
    *(_QWORD *)(v7 + 168) = v81;
    *(_QWORD *)(v7 + 176) = v83;
    *(_QWORD *)(v7 + 184) = v85;
    v40 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
  }
  v86 = sub_2418A7EFC();
  v88 = v87;
  swift_bridgeObjectRelease();

  *a1 = v92;
  a1[1] = v91;
  a1[2] = v89;
  a1[3] = v90;
  a1[4] = v7;
  a1[5] = v86;
  a1[6] = v88;
}

void sub_24186DDBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154098)
  {
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154098);
  }
}

ValueMetadata *type metadata accessor for LocalizedAssessmentInformationalContent.Section()
{
  return &type metadata for LocalizedAssessmentInformationalContent.Section;
}

uint64_t sub_24186DE20()
{
  sub_2418AA56C();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_24186DEA4()
{
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24186DF14()
{
  sub_2418AA56C();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_24186DF94(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_2418AA4DC(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_2418AA4DC();
  }
  return result;
}

unint64_t sub_24186E028()
{
  unint64_t result;

  result = qword_2571540A0;
  if (!qword_2571540A0)
  {
    result = MEMORY[0x24269D47C](&unk_2418DA260, &type metadata for LocalizedAssessmentInformationalContent.Section);
    atomic_store(result, (unint64_t *)&qword_2571540A0);
  }
  return result;
}

_QWORD *sub_24186E06C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  __int128 v21;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    v6 = a2[2];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    v7 = a2[5];
    v21 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v21;
    *(_QWORD *)(a1 + 40) = v7;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    v8 = *(int *)(a3 + 40);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 72) = a2[9];
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    v11 = (id)v21;
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v9, v10, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v17 = (char *)v9 + v16;
      v18 = (char *)v10 + v16;
      v19 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_24186E278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 40);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_24186E378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v19;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  v19 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v19;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(int *)(a3 + 40);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  v10 = (id)v19;
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8EB0();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v8, v9, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24186E550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 40);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60(a1 + v11, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2418A8EB0();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v12, v13, v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v19 = (char *)v12 + v18;
      v20 = (char *)v13 + v18;
      v21 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24186E764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_OWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 40);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8EB0();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24186E8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 40);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60(a1 + v7, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v10);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24186EADC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24186EAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_24186EB7C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24186EB88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for NotificationsNextButtonView(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257154100);
}

void sub_24186EC28()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24186ECE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24186ECF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  char v14;
  uint64_t v15;

  v1 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2418700E0();
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NotificationsNextButtonView(0);
  sub_2418617E4((uint64_t)v4);
  sub_24172588C((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  *(_QWORD *)v8 = sub_2418A8C58();
  *((_QWORD *)v8 + 1) = 0x4014000000000000;
  v8[16] = 0;
  sub_2418714A4();
  sub_24186EEA0(v0, (uint64_t)&v8[*(int *)(v9 + 44)]);
  v10 = *(_QWORD *)(v0 + 56);
  v14 = *(_BYTE *)(v0 + 48);
  v15 = v10;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  v13 = v0;
  sub_24172159C(&qword_257154190, (uint64_t (*)(uint64_t))sub_2418700E0, MEMORY[0x24BDF4700]);
  sub_2418A94B0();
  swift_release();
  swift_release();
  return sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))sub_2418700E0);
}

uint64_t sub_24186EEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ButtonView;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(void);
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;

  v82 = a2;
  sub_24172570C(0, &qword_257154160, (uint64_t (*)(uint64_t))sub_241870164, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
  v85 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v81 = (uint64_t)&v70 - v5;
  v79 = type metadata accessor for SkipButton(0);
  v7 = MEMORY[0x24BDAC7A8](v79, v6);
  v9 = (uint64_t *)((char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7, v10);
  v80 = (char *)&v70 - v11;
  sub_2418715D4(0, qword_2571541A0, MEMORY[0x24BDEF380]);
  v83 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v84 = (uint64_t)&v70 - v14;
  ButtonView = type metadata accessor for NotificationsNextButtonView(0);
  v16 = *(_QWORD *)(ButtonView - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v19 = MEMORY[0x24BDAC7A8](ButtonView, v18);
  v20 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v70 - v22;
  v86 = type metadata accessor for CompleteNotificationsSetupButton(0);
  v25 = MEMORY[0x24BDAC7A8](v86, v24);
  v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v87 = (uint64_t)&v70 - v29;
  v30 = objc_msgSend(*(id *)(a1 + 24), sel_hasEverEnabledAStateOfMindReminderNotification);
  sub_2417289A8(a1, (uint64_t)v23, type metadata accessor for NotificationsNextButtonView);
  v31 = *(unsigned __int8 *)(v16 + 80);
  v32 = (v31 + 16) & ~v31;
  v33 = v31 | 7;
  if (v30)
  {
    v81 = swift_allocObject();
    sub_241731B4C((uint64_t)v23, v81 + v32, type metadata accessor for NotificationsNextButtonView);
    v34 = *(void **)(a1 + 24);
    v35 = *(_QWORD *)a1;
    v36 = *(_QWORD *)(a1 + 72);
    v88 = *(_BYTE *)(a1 + 64);
    v89 = v36;
    v37 = MEMORY[0x24BDF42C0];
    sub_241871520(0, &qword_257154198, (unint64_t *)&qword_25714DDA0, (uint64_t)&type metadata for NotificationAppBundle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    v80 = v34;
    sub_2418A96E4();
    v79 = v90;
    v76 = v91;
    LODWORD(v75) = v92;
    v38 = *(_QWORD *)(a1 + 56);
    v88 = *(_BYTE *)(a1 + 48);
    v89 = v38;
    sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))v37);
    sub_2418A96E4();
    v39 = v90;
    v40 = v91;
    v41 = v92;
    sub_2417289A8(a1, (uint64_t)v20, type metadata accessor for NotificationsNextButtonView);
    v42 = swift_allocObject();
    sub_241731B4C((uint64_t)v20, v42 + v32, type metadata accessor for NotificationsNextButtonView);
    v43 = v81;
    *(_QWORD *)v27 = sub_241871590;
    *((_QWORD *)v27 + 1) = v43;
    *((_QWORD *)v27 + 2) = v80;
    *((_QWORD *)v27 + 3) = v35;
    v27[32] = 1;
    v44 = v76;
    *((_QWORD *)v27 + 5) = v79;
    *((_QWORD *)v27 + 6) = v44;
    v27[56] = (char)v75;
    *((_QWORD *)v27 + 8) = v39;
    *((_QWORD *)v27 + 9) = v40;
    v27[80] = v41;
    *((_QWORD *)v27 + 11) = sub_24187165C;
    *((_QWORD *)v27 + 12) = v42;
    v45 = (uint64_t *)&v27[*(int *)(v86 + 44)];
    *v45 = swift_getKeyPath();
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    v46 = v87;
    sub_241731B4C((uint64_t)v27, v87, type metadata accessor for CompleteNotificationsSetupButton);
    sub_2417289A8(v46, v84, type metadata accessor for CompleteNotificationsSetupButton);
    swift_storeEnumTagMultiPayload();
    sub_24172159C(&qword_257154178, type metadata accessor for CompleteNotificationsSetupButton, (uint64_t)&unk_2418DA438);
    sub_241870274();
    sub_2418A8D24();
  }
  else
  {
    v77 = v33;
    v78 = v32 + v17;
    v76 = swift_allocObject();
    sub_241731B4C((uint64_t)v23, v76 + v32, type metadata accessor for NotificationsNextButtonView);
    v47 = *(void **)(a1 + 24);
    v48 = *(_QWORD *)a1;
    v49 = *(_QWORD *)(a1 + 72);
    v88 = *(_BYTE *)(a1 + 64);
    v89 = v49;
    v50 = MEMORY[0x24BDF42C0];
    sub_241871520(0, &qword_257154198, (unint64_t *)&qword_25714DDA0, (uint64_t)&type metadata for NotificationAppBundle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    v75 = v47;
    sub_2418A96E4();
    v74 = v90;
    v73 = v91;
    v72 = v92;
    v51 = *(_QWORD *)(a1 + 56);
    v88 = *(_BYTE *)(a1 + 48);
    v89 = v51;
    sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))v50);
    sub_2418A96E4();
    v52 = v90;
    v71 = v91;
    v53 = v92;
    v54 = (uint64_t)v20;
    sub_2417289A8(a1, (uint64_t)v20, type metadata accessor for NotificationsNextButtonView);
    v55 = swift_allocObject();
    sub_241731B4C((uint64_t)v20, v55 + v32, type metadata accessor for NotificationsNextButtonView);
    v56 = v76;
    *(_QWORD *)v27 = sub_241871590;
    *((_QWORD *)v27 + 1) = v56;
    *((_QWORD *)v27 + 2) = v75;
    *((_QWORD *)v27 + 3) = v48;
    v27[32] = 0;
    v57 = v73;
    *((_QWORD *)v27 + 5) = v74;
    *((_QWORD *)v27 + 6) = v57;
    v27[56] = v72;
    v58 = v71;
    *((_QWORD *)v27 + 8) = v52;
    *((_QWORD *)v27 + 9) = v58;
    v27[80] = v53;
    *((_QWORD *)v27 + 11) = sub_24187165C;
    *((_QWORD *)v27 + 12) = v55;
    v59 = (uint64_t *)&v27[*(int *)(v86 + 44)];
    *v59 = swift_getKeyPath();
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v76 = v60;
    swift_storeEnumTagMultiPayload();
    sub_241731B4C((uint64_t)v27, v87, type metadata accessor for CompleteNotificationsSetupButton);
    sub_2417289A8(a1, (uint64_t)v23, type metadata accessor for NotificationsNextButtonView);
    v61 = swift_allocObject();
    sub_241731B4C((uint64_t)v23, v61 + v32, type metadata accessor for NotificationsNextButtonView);
    v62 = *(void **)(a1 + 24);
    sub_2417289A8(a1, (uint64_t)v20, type metadata accessor for NotificationsNextButtonView);
    v63 = swift_allocObject();
    v46 = v87;
    sub_241731B4C(v54, v63 + v32, type metadata accessor for NotificationsNextButtonView);
    *v9 = sub_241871590;
    v9[1] = v61;
    v9[2] = v62;
    v9[3] = sub_24187165C;
    v9[4] = v63;
    v64 = (_QWORD *)((char *)v9 + *(int *)(v79 + 28));
    *v64 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    v65 = (uint64_t)v80;
    sub_241731B4C((uint64_t)v9, (uint64_t)v80, type metadata accessor for SkipButton);
    sub_2417289A8(v46, (uint64_t)v27, type metadata accessor for CompleteNotificationsSetupButton);
    sub_2417289A8(v65, (uint64_t)v9, type metadata accessor for SkipButton);
    v66 = v81;
    sub_2417289A8((uint64_t)v27, v81, type metadata accessor for CompleteNotificationsSetupButton);
    sub_241870164();
    sub_2417289A8((uint64_t)v9, v66 + *(int *)(v67 + 48), type metadata accessor for SkipButton);
    v68 = v62;
    sub_24172588C((uint64_t)v9, type metadata accessor for SkipButton);
    sub_24172588C((uint64_t)v27, type metadata accessor for CompleteNotificationsSetupButton);
    sub_2418716C0(v66, v84);
    swift_storeEnumTagMultiPayload();
    sub_24172159C(&qword_257154178, type metadata accessor for CompleteNotificationsSetupButton, (uint64_t)&unk_2418DA438);
    sub_241870274();
    sub_2418A8D24();
    sub_24173FC60(v66, &qword_257154160, (uint64_t (*)(uint64_t))sub_241870164, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_24172588C(v65, type metadata accessor for SkipButton);
  }
  return sub_24172588C(v46, type metadata accessor for CompleteNotificationsSetupButton);
}

uint64_t sub_24186F6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _BYTE v14[16];
  uint64_t v15;
  char v16;

  v4 = sub_2418A8340();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(a1 + 72);
  v14[8] = *(_BYTE *)(a1 + 64);
  v15 = v9;
  sub_241871520(0, &qword_257154198, (unint64_t *)&qword_25714DDA0, (uint64_t)&type metadata for NotificationAppBundle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  if (v16 != 2)
    return sub_24186F88C(v16 & 1, a2);
  sub_2418A8328();
  v11 = sub_2418A8334();
  v12 = sub_2418AA050();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_24171C000, v11, v12, "\"Notifications Disabled\" alert has been requested without specifying the associated notification bundle.", v13, 2u);
    MEMORY[0x24269D548](v13, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
  result = sub_2418AA380();
  __break(1u);
  return result;
}

uint64_t sub_24186F88C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t ButtonView;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  _QWORD v55[4];
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v68 = a2;
  ButtonView = type metadata accessor for NotificationsNextButtonView(0);
  v65 = *(_QWORD *)(ButtonView - 8);
  v4 = *(_QWORD *)(v65 + 64);
  MEMORY[0x24BDAC7A8](ButtonView, v5);
  v6 = sub_2418A9588();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v67 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v66 = (char *)v55 - v11;
  if (qword_25714B958 != -1)
    swift_once();
  v12 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v60 = sub_2418A7EFC();
  v61 = v13;
  swift_bridgeObjectRelease();

  v14 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v62 = sub_2418A7EFC();
  v63 = v15;
  swift_bridgeObjectRelease();

  v16 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  if ((a1 & 1) != 0)
  {
    v43 = sub_2418A7EFC();
    v45 = v44;
    swift_bridgeObjectRelease();

    v46 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v47 = sub_2418A7EFC();
    v49 = v48;
    swift_bridgeObjectRelease();

    v69 = v43;
    v70 = v45;
    sub_241721040();
    v50 = sub_2418A92D0();
    v58 = v51;
    v59 = v50;
    v56 = v52;
    v57 = v53;
    v69 = v47;
    v70 = v49;
  }
  else
  {
    v17 = sub_2418A7EFC();
    v19 = v18;
    swift_bridgeObjectRelease();

    v20 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v21 = sub_2418A7EFC();
    v23 = v22;
    swift_bridgeObjectRelease();

    v69 = v17;
    v70 = v19;
    sub_241721040();
    v24 = sub_2418A92D0();
    v58 = v25;
    v59 = v24;
    v56 = v26;
    v57 = v27;
    v69 = v21;
    v70 = v23;
  }
  v55[3] = sub_2418A92D0();
  v55[2] = v28;
  v55[1] = v29;
  v55[0] = v30 & 1;
  v69 = v60;
  v70 = v61;
  v31 = sub_2418A92D0();
  v33 = v32;
  v35 = v34 & 1;
  sub_2418A957C();
  sub_2417289EC(v31, v33, v35);
  swift_bridgeObjectRelease();
  v69 = v62;
  v70 = v63;
  v36 = sub_2418A92D0();
  v38 = v37;
  v40 = v39 & 1;
  sub_2417289A8(v64, (uint64_t)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NotificationsNextButtonView);
  v41 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v42 = swift_allocObject();
  sub_241731B4C((uint64_t)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v42 + v41, type metadata accessor for NotificationsNextButtonView);
  sub_2418A9570();
  sub_2417289EC(v36, v38, v40);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_2418A9564();
}

void sub_24186FF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v0 = sub_2418A7F50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, (unint64_t *)&qword_2543915A0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v16 - v8;
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v10)
  {
    v11 = v10;
    v12 = (id)HKMHMindfulnessSettingsURL();
    if (v12)
    {
      v13 = v12;
      sub_2418A7F38();

      (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v9, v4, v0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v9, 0, 1, v0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v9, 1, v0) == 1)
      {
        v14 = 0;
      }
      else
      {
        v14 = (void *)sub_2418A7F2C();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v9, 1, 1, v0);
      v14 = 0;
    }
    sub_241875268(MEMORY[0x24BEE4AF8]);
    v15 = (void *)sub_2418A9D14();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_openSensitiveURL_withOptions_, v14, v15);

  }
}

void sub_2418700E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154150)
  {
    sub_2418715D4(255, &qword_257154158, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    sub_2418701E4();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154150);
  }
}

uint64_t type metadata accessor for CompleteNotificationsSetupButton(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257154298);
}

void sub_241870164()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257154168)
  {
    type metadata accessor for CompleteNotificationsSetupButton(255);
    type metadata accessor for SkipButton(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257154168);
  }
}

uint64_t type metadata accessor for SkipButton(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257154200);
}

unint64_t sub_2418701E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257154170;
  if (!qword_257154170)
  {
    sub_2418715D4(255, &qword_257154158, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257154178, type metadata accessor for CompleteNotificationsSetupButton, (uint64_t)&unk_2418DA438);
    v3[1] = sub_241870274();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257154170);
  }
  return result;
}

unint64_t sub_241870274()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257154180;
  if (!qword_257154180)
  {
    sub_24172570C(255, &qword_257154160, (uint64_t (*)(uint64_t))sub_241870164, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257154180);
  }
  return result;
}

uint64_t sub_2418702D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)();
  uint64_t *boxed_opaque_existential_1;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  _UNKNOWN **v48;
  uint64_t (*v49)();
  uint64_t v50;
  _BYTE v51[56];
  uint64_t v52;
  char v53;
  uint64_t (*v54)@<X0>(uint64_t@<X8>);
  uint64_t v55;

  v2 = v1;
  v42 = a1;
  v3 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x24BDAC7A8](v3, v4);
  v41 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CompleteNotificationsSetupButton(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v10 = MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v40 - v13;
  sub_241773440(0, (unint64_t *)&qword_25714CE40, (void (*)(uint64_t))sub_24174DB24);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v40 - v17;
  v19 = *(uint64_t (**)())(v2 + 24);
  v47 = v3;
  v48 = &off_2511B1B50;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v46);
  v40 = v2 + *(int *)(v6 + 44);
  sub_2418617E4((uint64_t)boxed_opaque_existential_1);
  sub_2417289A8(v2, (uint64_t)v14, type metadata accessor for CompleteNotificationsSetupButton);
  v21 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v22 = swift_allocObject();
  sub_241731B4C((uint64_t)v14, v22 + v21, type metadata accessor for CompleteNotificationsSetupButton);
  sub_2417289A8(v2, (uint64_t)v11, type metadata accessor for CompleteNotificationsSetupButton);
  v23 = swift_allocObject();
  sub_241731B4C((uint64_t)v11, v23 + v21, type metadata accessor for CompleteNotificationsSetupButton);
  v49 = v19;
  LOBYTE(v50) = 0;
  sub_24172887C(0, (unint64_t *)&qword_25714D7D0, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2418A9840();
  *(_OWORD *)&v51[40] = v43;
  v52 = v44;
  v53 = v45;
  sub_24174DE50(&v46, (uint64_t)v51);
  v49 = sub_241873120;
  v50 = v22;
  v54 = sub_241873294;
  v55 = v23;
  *(_QWORD *)&v46 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511ACA10);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24174DB24(0, v24, v25, v26);
  sub_24172159C((unint64_t *)&qword_25714CE58, (uint64_t (*)(uint64_t))sub_24174DB24, (uint64_t)&unk_2418DA5E8);
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_24172588C((uint64_t)&v49, (uint64_t (*)(_QWORD))sub_24174DB24);
  LOBYTE(v23) = sub_2418A90E4();
  v27 = v41;
  sub_2418617E4(v41);
  sub_24172588C(v27, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_2418A84A8();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = v42;
  sub_2418732D0((uint64_t)v18, v42, (unint64_t *)&qword_25714CE40, (void (*)(uint64_t))sub_24174DB24);
  sub_241786A20(0);
  v38 = v36 + *(int *)(v37 + 36);
  *(_BYTE *)v38 = v23;
  *(_QWORD *)(v38 + 8) = v29;
  *(_QWORD *)(v38 + 16) = v31;
  *(_QWORD *)(v38 + 24) = v33;
  *(_QWORD *)(v38 + 32) = v35;
  *(_BYTE *)(v38 + 40) = 0;
  return sub_24187331C((uint64_t)v18, (unint64_t *)&qword_25714CE40, (void (*)(uint64_t))sub_24174DB24);
}

uint64_t sub_2418706CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  char v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  _BYTE v33[7];
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v2 = type metadata accessor for CompleteNotificationsSetupButton(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  v6 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = &v33[-v9];
  sub_2418A9DE0();
  v11 = objc_allocWithZone(MEMORY[0x24BDF88B8]);
  v12 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithBundleIdentifier_, v12);

  v14 = objc_msgSend(v13, sel_notificationSettings);
  v15 = objc_msgSend(v14, sel_authorizationStatus);

  if (v15 == (id)2)
  {
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    {
      if (objc_msgSend(*(id *)(a1 + 16), sel_hasAnyStateOfMindReminderEnabled))
        (*(void (**)(uint64_t, uint64_t))(a1 + 88))(9, 4);
    }
    else
    {
      v21 = sub_2418A9F60();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 1, 1, v21);
      sub_2417289A8(a1, (uint64_t)&v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for CompleteNotificationsSetupButton);
      sub_2418A9F48();
      v22 = sub_2418A9F3C();
      v23 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v24 = swift_allocObject();
      v25 = MEMORY[0x24BEE6930];
      *(_QWORD *)(v24 + 16) = v22;
      *(_QWORD *)(v24 + 24) = v25;
      sub_241731B4C((uint64_t)v6, v24 + v23, type metadata accessor for CompleteNotificationsSetupButton);
      sub_241826138((uint64_t)v10, (uint64_t)&unk_2571542F8, v24);
      swift_release();
    }
    v26 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v27 = objc_msgSend(v26, sel_getActivePairedDevice);

    if (!v27 || sub_2417E6B2C())
      return (*(uint64_t (**)(void))a1)();
    v29 = *(_QWORD *)(a1 + 48);
    v30 = *(_BYTE *)(a1 + 56);
    v35 = *(_QWORD *)(a1 + 40);
    v36 = v29;
    v37 = v30;
    v34 = 1;
    v18 = MEMORY[0x24BDF4870];
    sub_241871520(0, &qword_2571542E8, (unint64_t *)&qword_25714DDA0, (uint64_t)&type metadata for NotificationAppBundle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    sub_2418A9810();
    v31 = *(_QWORD *)(a1 + 72);
    v32 = *(_BYTE *)(a1 + 80);
    v35 = *(_QWORD *)(a1 + 64);
    v36 = v31;
    v37 = v32;
    v34 = 1;
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 48);
    v17 = *(_BYTE *)(a1 + 56);
    v35 = *(_QWORD *)(a1 + 40);
    v36 = v16;
    v37 = v17;
    v34 = 0;
    v18 = MEMORY[0x24BDF4870];
    sub_241871520(0, &qword_2571542E8, (unint64_t *)&qword_25714DDA0, (uint64_t)&type metadata for NotificationAppBundle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    sub_2418A9810();
    v19 = *(_QWORD *)(a1 + 72);
    v20 = *(_BYTE *)(a1 + 80);
    v35 = *(_QWORD *)(a1 + 64);
    v36 = v19;
    v37 = v20;
    v34 = 1;
  }
  sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))v18);
  return sub_2418A9810();
}

uint64_t sub_241870A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  sub_2418A9F48();
  *(_QWORD *)(v4 + 24) = sub_2418A9F3C();
  sub_2418A9F18();
  return swift_task_switch();
}

uint64_t sub_241870AB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  objc_msgSend(*(id *)(v1 + 16), sel_setReminders_, 1);
  (*(void (**)(uint64_t, uint64_t))(v1 + 88))(9, 4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241870B0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    if (qword_25714B958 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  if (qword_25714B958 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  v3 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  sub_241721040();
  result = sub_2418A92D0();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v6 & 1;
  *(_QWORD *)(a2 + 24) = v7;
  return result;
}

uint64_t sub_241870C7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;

  v2 = v1;
  v56 = a1;
  v3 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x24BDAC7A8](v3, v4);
  v55 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_2418A88A4();
  v50 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47, v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for SkipButton(0);
  v9 = *(_QWORD *)(v54 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v54, v11);
  sub_241873528();
  v13 = v12;
  v48 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241873620(0);
  v18 = *(_QWORD *)(v17 - 8);
  v51 = v17;
  v52 = v18;
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241773440(0, &qword_257154320, v22);
  MEMORY[0x24BDAC7A8](v23, v24);
  v49 = (char *)&v46 - v25;
  sub_2418736F4();
  v53 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v46 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417289A8(v2, (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SkipButton);
  v30 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v31 = swift_allocObject();
  sub_241731B4C((uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v31 + v30, type metadata accessor for SkipButton);
  sub_241721CBC(0, &qword_257153CA0, (void (*)(uint64_t))sub_241730780);
  sub_2418735A0();
  sub_2418A9708();
  sub_2418A8898();
  v32 = sub_24172159C(&qword_257154318, (uint64_t (*)(uint64_t))sub_241873528, MEMORY[0x24BDF43B0]);
  v33 = sub_24172159C(&qword_25714D010, (uint64_t (*)(uint64_t))MEMORY[0x24BDED868], MEMORY[0x24BDED858]);
  v34 = v47;
  sub_2418A930C();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v34);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v13);
  *(_QWORD *)&v57 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511ACA40);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v57 = v13;
  *((_QWORD *)&v57 + 1) = v34;
  *(_QWORD *)&v58 = v32;
  *((_QWORD *)&v58 + 1) = v33;
  swift_getOpaqueTypeConformance2();
  v35 = (uint64_t)v49;
  v36 = v51;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v21, v36);
  sub_2418A9630();
  v37 = v55;
  sub_2418617E4(v55);
  sub_24172588C(v37, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  v38 = sub_2418A9624();
  swift_release();
  KeyPath = swift_getKeyPath();
  sub_2418732D0(v35, (uint64_t)v29, &qword_257154320, sub_241873620);
  v40 = (uint64_t *)&v29[*(int *)(v53 + 36)];
  *v40 = KeyPath;
  v40[1] = v38;
  sub_24187331C(v35, &qword_257154320, sub_241873620);
  sub_2418617E4(v37);
  sub_24172588C(v37, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_2418A9960();
  sub_2418A861C();
  v41 = v56;
  sub_2417289A8((uint64_t)v29, v56, (uint64_t (*)(_QWORD))sub_2418736F4);
  sub_241721CBC(0, &qword_257154330, (void (*)(uint64_t))sub_2418736F4);
  v43 = (_OWORD *)(v41 + *(int *)(v42 + 36));
  v44 = v58;
  *v43 = v57;
  v43[1] = v44;
  v43[2] = v59;
  return sub_24172588C((uint64_t)v29, (uint64_t (*)(_QWORD))sub_2418736F4);
}

uint64_t sub_2418711B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a1;
  v1 = sub_2418A88D4();
  MEMORY[0x24BDAC7A8](v1, v2);
  v37 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2418A99B4();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730780();
  v34 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v12 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v13 = sub_2418A7EFC();
  v15 = v14;
  swift_bridgeObjectRelease();

  v39 = v13;
  v40 = v15;
  sub_241721040();
  v16 = sub_2418A92D0();
  v18 = v17;
  v20 = v19 & 1;
  v21 = sub_2418A9288();
  v23 = v22;
  v25 = v24;
  LOBYTE(v15) = v26 & 1;
  sub_2417289EC(v16, v18, v20);
  swift_bridgeObjectRelease();
  v28 = v35;
  v27 = v36;
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v7, *MEMORY[0x24BDF50D0], v36);
  v29 = (uint64_t)v37;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v37, v7, v27);
  v30 = MEMORY[0x24BDEDB60];
  sub_2417289A8(v29, (uint64_t)&v11[*(int *)(v34 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  *(_QWORD *)v11 = v21;
  *((_QWORD *)v11 + 1) = v23;
  v11[16] = v15;
  *((_QWORD *)v11 + 3) = v25;
  sub_241728A50(v21, v23, v15);
  swift_bridgeObjectRetain();
  sub_24172588C(v29, (uint64_t (*)(_QWORD))v30);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v27);
  sub_2417289EC(v21, v23, v15);
  swift_bridgeObjectRelease();
  v31 = sub_2418A9960();
  sub_24185F398(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v38, 0.0, 1, 0.0, 1, v31, v32);
  return sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))sub_241730780);
}

void sub_2418714A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154188)
  {
    sub_2418715D4(255, &qword_257154158, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154188);
  }
}

uint64_t sub_241871518@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24186F6F0(*(_QWORD *)(v1 + 16), a1);
}

void sub_241871520(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_24172887C(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_241871598()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NotificationsNextButtonView(0) - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 8))();
}

void sub_2418715D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for CompleteNotificationsSetupButton(255);
    sub_24172570C(255, &qword_257154160, (uint64_t (*)(uint64_t))sub_241870164, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_24187166C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NotificationsNextButtonView(0) - 8) + 80);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + ((v5 + 16) & ~v5) + 32))(a1, a2);
}

uint64_t sub_2418716C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_257154160, (uint64_t (*)(uint64_t))sub_241870164, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_23()
{
  uint64_t v0;
  uint64_t ButtonView;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  ButtonView = type metadata accessor for NotificationsNextButtonView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(ButtonView - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(ButtonView + 40);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241871858(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __int128 v20;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[4];
    v20 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 16) = v20;
    *(_QWORD *)(a1 + 32) = v7;
    v8 = *(int *)(a3 + 28);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    v11 = (id)v20;
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v9, v10, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      v15 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241871A24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();

  swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_241871B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int128 v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v18;
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  v9 = (id)v18;
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_241871CAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = v7;
  v9 = v7;

  v10 = a2[4];
  a1[3] = a2[3];
  a1[4] = v10;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 28);
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v11, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2418A8EB0();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v12, v13, v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v19 = (char *)v12 + v18;
      v20 = (char *)v13 + v18;
      v21 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241871E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8EB0();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_241871FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 28);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60(a1 + v7, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v10);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2418721A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2418721AC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_241872240()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24187224C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_2418722D8()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241872378(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v23;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    v6 = (void *)a2[2];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v10 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v10;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v11 = a2[12];
    v12 = *(int *)(a3 + 44);
    v13 = (uint64_t *)((char *)a2 + v12);
    v23 = (_QWORD *)(a1 + v12);
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v11;
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    v14 = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2418A8EB0();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v23, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v23, v13, v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v23, 0, 1, v15);
      }
      v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v19 = (char *)v23 + v18;
      v20 = (char *)v13 + v18;
      v21 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v23 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24187259C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 44);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_2418726AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v21;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(int *)(a3 + 44);
  v11 = (_QWORD *)(a2 + v10);
  v21 = (_QWORD *)(a1 + v10);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  v12 = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2418A8EB0();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v21, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 16))(v21, v11, v13);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
    }
    v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v17 = (char *)v21 + v16;
    v18 = (char *)v11 + v16;
    v19 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *v21 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24187289C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 44);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60(a1 + v11, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2418A8EB0();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v12, v13, v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v19 = (char *)v12 + v18;
      v20 = (char *)v13 + v18;
      v21 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241872AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v5 = *(int *)(a3 + 44);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v14 = &v6[v13];
    v15 = &v7[v13];
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_241872C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 44);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60(a1 + v7, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v10);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241872EA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241872EAC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 44)], a2, v8);
  }
}

uint64_t sub_241872F40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_241872F4C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 44)], a2, a2, v7);
  }
  return result;
}

void sub_241872FD8()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24187309C()
{
  sub_2418700E0();
  sub_24172159C(&qword_257154190, (uint64_t (*)(uint64_t))sub_2418700E0, MEMORY[0x24BDF4700]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2418730FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24187310C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241873120()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CompleteNotificationsSetupButton(0) - 8) + 80);
  return sub_2418706CC(v0 + ((v1 + 16) & ~v1));
}

uint64_t objectdestroy_28Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for CompleteNotificationsSetupButton(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 44);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241873294@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CompleteNotificationsSetupButton(0) - 8) + 80);
  return sub_241870B0C(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_2418732D0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_241773440(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24187331C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_241773440(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241873358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for CompleteNotificationsSetupButton(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + ((v2 + 32) & ~v2);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 44);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2418734A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CompleteNotificationsSetupButton(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_24175D6DC;
  return sub_241870A4C(a1, v5, v6, v7);
}

void sub_241873528()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154300)
  {
    sub_241721CBC(255, &qword_257153CA0, (void (*)(uint64_t))sub_241730780);
    sub_2418735A0();
    v0 = sub_2418A9720();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154300);
  }
}

unint64_t sub_2418735A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257154308;
  if (!qword_257154308)
  {
    sub_241721CBC(255, &qword_257153CA0, (void (*)(uint64_t))sub_241730780);
    v2 = v1;
    v3[0] = sub_241731CDC();
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257154308);
  }
  return result;
}

void sub_241873620(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_257154310)
  {
    sub_241873528();
    v3 = v2;
    v4 = sub_2418A88A4();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
    v8[0] = v3;
    v8[1] = v4;
    v8[2] = sub_24172159C(&qword_257154318, (uint64_t (*)(uint64_t))sub_241873528, MEMORY[0x24BDF43B0]);
    v8[3] = sub_24172159C(&qword_25714D010, v5, MEMORY[0x24BDED858]);
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF22B8], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_257154310);
  }
}

void sub_2418736F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154328)
  {
    sub_241773440(255, &qword_257154320, sub_241873620);
    sub_241871520(255, (unint64_t *)&qword_25714C9D0, (unint64_t *)&qword_25714C9D8, MEMORY[0x24BDF3E48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154328);
  }
}

uint64_t sub_241873788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for SkipButton(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();

  swift_release();
  v4 = v3 + *(int *)(v1 + 28);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2418738AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SkipButton(0) - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  objc_msgSend(*(id *)(v2 + 16), sel_setReminders_, 0);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(9, 5);
  return (*(uint64_t (**)(uint64_t))v2)(v3);
}

unint64_t sub_241873918()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  result = qword_257154338;
  if (!qword_257154338)
  {
    sub_241786A20(255);
    v2 = v1;
    v6[0] = sub_24174DB80(v1, v3, v4, v5);
    v6[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v6);
    atomic_store(result, (unint64_t *)&qword_257154338);
  }
  return result;
}

unint64_t sub_241873984()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257154340;
  if (!qword_257154340)
  {
    sub_241721CBC(255, &qword_257154330, (void (*)(uint64_t))sub_2418736F4);
    v2 = v1;
    v3[0] = sub_241873A04();
    v3[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257154340);
  }
  return result;
}

unint64_t sub_241873A04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257154348;
  if (!qword_257154348)
  {
    sub_2418736F4();
    v2 = v1;
    v3[0] = sub_241873A6C();
    v3[1] = sub_241741D94();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257154348);
  }
  return result;
}

unint64_t sub_241873A6C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  _QWORD v7[6];

  result = qword_257154350;
  if (!qword_257154350)
  {
    sub_241773440(255, &qword_257154320, sub_241873620);
    v2 = v1;
    sub_241873528();
    v4 = v3;
    v5 = sub_2418A88A4();
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
    v7[2] = v4;
    v7[3] = v5;
    v7[4] = sub_24172159C(&qword_257154318, (uint64_t (*)(uint64_t))sub_241873528, MEMORY[0x24BDF43B0]);
    v7[5] = sub_24172159C(&qword_25714D010, v6, MEMORY[0x24BDED858]);
    v7[0] = swift_getOpaqueTypeConformance2();
    v7[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v7);
    atomic_store(result, (unint64_t *)&qword_257154350);
  }
  return result;
}

_QWORD *_s31StateOfMindTimelineChartWrapperVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s31StateOfMindTimelineChartWrapperVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s31StateOfMindTimelineChartWrapperVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s31StateOfMindTimelineChartWrapperVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s31StateOfMindTimelineChartWrapperVMa()
{
  return &_s31StateOfMindTimelineChartWrapperVN;
}

uint64_t sub_241873C80()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t sub_241873CAC()
{
  return sub_2418A903C();
}

uint64_t sub_241873CE4()
{
  return MEMORY[0x24BDF5560];
}

uint64_t sub_241873CF0()
{
  sub_241873DB4();
  return sub_2418A9078();
}

uint64_t sub_241873D40()
{
  sub_241873DB4();
  return sub_2418A9048();
}

void sub_241873D90()
{
  sub_241873DB4();
  sub_2418A906C();
  __break(1u);
}

unint64_t sub_241873DB4()
{
  unint64_t result;

  result = qword_257154358[0];
  if (!qword_257154358[0])
  {
    result = MEMORY[0x24269D47C](&unk_2418DA4E0, &_s31StateOfMindTimelineChartWrapperVN);
    atomic_store(result, qword_257154358);
  }
  return result;
}

uint64_t sub_241873DF8(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_241873E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 16, v5, v7);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_241873ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_241874114(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t sub_241874198(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_2418741E0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ActionButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionButton);
}

uint64_t sub_241874244()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241874278()
{
  uint64_t v1;

  sub_241874E5C(0, &qword_2571543E0, (unint64_t *)&qword_25714D7D0, MEMORY[0x24BEE13C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](&v1);
  return v1;
}

uint64_t sub_2418742EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t OpaqueTypeConformance2;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  double v59;
  CGColor *v60;
  CGColor *v61;
  double v62;
  double v63;
  CGColorRef v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[2];
  _QWORD v106[2];
  _QWORD v107[2];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  _QWORD v119[2];

  v100 = a2;
  v99 = sub_2418A84FC();
  v3 = (void (*)(uint64_t))MEMORY[0x24BDEB4A0];
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99, v4);
  v97 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_2418A8910();
  v6 = (void (*)(uint64_t))MEMORY[0x24BDEDCA8];
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96, v7);
  v89 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2418A8FDC();
  v88 = *(_QWORD *)(v9 - 8);
  v10 = v9;
  v80 = v9;
  MEMORY[0x24BDAC7A8](v9, v11);
  v87 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)&v112 = *(_QWORD *)(a1 + 16);
  *((_QWORD *)&v112 + 1) = v13;
  v14 = v112;
  v83 = v112;
  MEMORY[0x24269D434](255, &v112, MEMORY[0x24BDF3488], 0);
  v15 = sub_2418A87FC();
  *(_QWORD *)&v112 = v14;
  *((_QWORD *)&v112 + 1) = v13;
  v119[0] = swift_getOpaqueTypeConformance2();
  v119[1] = MEMORY[0x24BDEDBB8];
  v81 = v15;
  MEMORY[0x24269D47C](MEMORY[0x24BDED308], v15, v119);
  v16 = sub_2418A9720();
  v85 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v76 - v18;
  v20 = MEMORY[0x24269D47C](MEMORY[0x24BDF43B0], v16);
  v79 = v20;
  v78 = sub_241874DC8();
  *(_QWORD *)&v112 = v16;
  *((_QWORD *)&v112 + 1) = v10;
  *(_QWORD *)&v113 = v20;
  *((_QWORD *)&v113 + 1) = v78;
  v21 = MEMORY[0x24269D434](0, &v112, MEMORY[0x24BDF22B8], 0);
  v84 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v76 - v23;
  sub_241874E10(255, &qword_25714FA90, v6);
  v25 = sub_2418A87FC();
  v86 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v26);
  v77 = (char *)&v76 - v27;
  sub_241874E10(255, &qword_25714FAA0, v3);
  v28 = sub_2418A87FC();
  v93 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)&v76 - v30;
  sub_241874E5C(255, (unint64_t *)&qword_25714D398, &qword_25714D3A0, MEMORY[0x24BDEBF80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  v94 = v28;
  v82 = sub_2418A87FC();
  v92 = *(_QWORD *)(v82 - 8);
  v33 = MEMORY[0x24BDAC7A8](v82, v32);
  v90 = (char *)&v76 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v35);
  v91 = (uint64_t)&v76 - v36;
  v37 = v101;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(&v112, v101, a1);
  v38 = swift_allocObject();
  v39 = v115;
  v40 = v117;
  *(_OWORD *)(v38 + 96) = v116;
  *(_OWORD *)(v38 + 112) = v40;
  v41 = v113;
  v42 = v114;
  *(_OWORD *)(v38 + 32) = v112;
  *(_OWORD *)(v38 + 48) = v41;
  v43 = v83;
  *(_QWORD *)(v38 + 16) = v83;
  *(_QWORD *)(v38 + 24) = v13;
  *(_QWORD *)(v38 + 128) = v118;
  *(_OWORD *)(v38 + 64) = v42;
  *(_OWORD *)(v38 + 80) = v39;
  v102 = v43;
  v44 = v31;
  v103 = v13;
  v104 = v37;
  sub_2418A9708();
  v45 = v87;
  sub_2418A8FD0();
  v46 = v80;
  v47 = v79;
  v48 = v78;
  sub_2418A930C();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v19, v16);
  v49 = v89;
  sub_2418A8904();
  v108 = v16;
  v109 = v46;
  v110 = v47;
  v111 = v48;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v51 = v77;
  sub_2418A93CC();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v49, v96);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v24, v21);
  v52 = v98;
  v53 = v97;
  v54 = v99;
  (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v97, *MEMORY[0x24BDEB488], v99);
  v55 = sub_241874F2C(&qword_25714FB08, &qword_25714FA90, (void (*)(uint64_t))MEMORY[0x24BDEDCA8]);
  v107[0] = OpaqueTypeConformance2;
  v107[1] = v55;
  v56 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v25, v107);
  sub_2418A9324();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v51, v25);
  v57 = sub_241874278();
  if ((v58 & 1) != 0)
  {
    v65 = sub_2418A95DC();
  }
  else
  {
    v59 = fmax(fmin(*(double *)&v57, 1.0), -1.0);
    swift_getKeyPath();
    sub_241810204(v59);
    v61 = v60;
    v63 = v62;
    swift_release();
    v64 = sub_2418104B8(v61, v61, v63);
    v65 = MEMORY[0x24269BD9C](v64);

  }
  v108 = v65;
  v66 = sub_241874F2C(&qword_25714FB10, &qword_25714FAA0, (void (*)(uint64_t))MEMORY[0x24BDEB4A0]);
  v106[0] = v56;
  v106[1] = v66;
  v67 = MEMORY[0x24BDED308];
  v68 = v94;
  v69 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v94, v106);
  v70 = (uint64_t)v90;
  sub_2418A94A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v44, v68);
  v71 = sub_241874F6C();
  v105[0] = v69;
  v105[1] = v71;
  v72 = v82;
  MEMORY[0x24269D47C](v67, v82, v105);
  v73 = v91;
  sub_2417DA924(v70, v72, v91);
  v74 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
  v74(v70, v72);
  sub_2417D8FF8(v73, v72, v100);
  return ((uint64_t (*)(uint64_t, uint64_t))v74)(v73, v72);
}

uint64_t sub_241874AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t OpaqueTypeConformance2;
  _DWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;

  v36 = a3;
  v33 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v7;
  v39 = v8;
  v32 = v8;
  v9 = MEMORY[0x24269D434](0, &v38, MEMORY[0x24BDF3488], 0);
  v34 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v31 - v11;
  v13 = sub_2418A87FC();
  v35 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)v31 - v20;
  (*(void (**)(uint64_t))(a1 + 88))(v19);
  sub_2418A9498();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, a2);
  v22 = (_QWORD *)(a1 + 16);
  v23 = *(_QWORD *)(a1 + 40);
  v24 = *(_QWORD *)(a1 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), v23);
  v33 = sub_241778C58(v23, v24);
  v31[1] = v25 & 1;
  v27 = *(_QWORD *)(a1 + 40);
  v26 = *(_QWORD *)(a1 + 48);
  __swift_project_boxed_opaque_existential_1(v22, v27);
  sub_241778C88(v27, v26);
  sub_2418A9960();
  v38 = a2;
  v39 = v32;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_2418A94C8();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v9);
  v37[0] = OpaqueTypeConformance2;
  v37[1] = MEMORY[0x24BDEDBB8];
  MEMORY[0x24269D47C](MEMORY[0x24BDED308], v13, v37);
  sub_2417DA924((uint64_t)v17, v13, (uint64_t)v21);
  v28 = *(void (**)(char *, uint64_t))(v35 + 8);
  v28(v17, v13);
  sub_2417D8FF8((uint64_t)v21, v13, v36);
  return ((uint64_t (*)(char *, uint64_t))v28)(v21, v13);
}

unint64_t sub_241874DC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714FCC8;
  if (!qword_25714FCC8)
  {
    v1 = sub_2418A8FDC();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF0D88], v1);
    atomic_store(result, (unint64_t *)&qword_25714FCC8);
  }
  return result;
}

void sub_241874E10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2418A9090();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_241874E5C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_241874FD8(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_241874EBC()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241874F00()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_241874F20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_241874AFC(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_241874F2C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_241874E10(255, a2, a3);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF1028], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241874F6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714D3B8;
  if (!qword_25714D3B8)
  {
    sub_241874E5C(255, (unint64_t *)&qword_25714D398, &qword_25714D3A0, MEMORY[0x24BDEBF80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_25714D3B8);
  }
  return result;
}

void sub_241874FD8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_2418AA1E8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_24187501C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[2];

  v2 = a1[1];
  v18 = *a1;
  v1 = v18;
  v19 = v2;
  MEMORY[0x24269D434](255, &v18, MEMORY[0x24BDF3488], 0);
  v3 = sub_2418A87FC();
  v18 = v1;
  v19 = v2;
  v22[0] = swift_getOpaqueTypeConformance2();
  v22[1] = MEMORY[0x24BDEDBB8];
  MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v22);
  v4 = sub_2418A9720();
  v5 = sub_2418A8FDC();
  v6 = MEMORY[0x24269D47C](MEMORY[0x24BDF43B0], v4);
  v7 = sub_241874DC8();
  v18 = v4;
  v19 = v5;
  v20 = v6;
  v21 = v7;
  MEMORY[0x24269D434](255, &v18, MEMORY[0x24BDF22B8], 0);
  v8 = (void (*)(uint64_t))MEMORY[0x24BDEDCA8];
  sub_241874E10(255, &qword_25714FA90, (void (*)(uint64_t))MEMORY[0x24BDEDCA8]);
  v9 = sub_2418A87FC();
  v10 = (void (*)(uint64_t))MEMORY[0x24BDEB4A0];
  sub_241874E10(255, &qword_25714FAA0, (void (*)(uint64_t))MEMORY[0x24BDEB4A0]);
  v11 = sub_2418A87FC();
  sub_241874E5C(255, (unint64_t *)&qword_25714D398, &qword_25714D3A0, MEMORY[0x24BDEBF80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  v12 = sub_2418A87FC();
  v18 = v4;
  v19 = v5;
  v20 = v6;
  v21 = v7;
  v17[0] = swift_getOpaqueTypeConformance2();
  v17[1] = sub_241874F2C(&qword_25714FB08, &qword_25714FA90, v8);
  v13 = MEMORY[0x24BDED308];
  v16[0] = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v9, v17);
  v16[1] = sub_241874F2C(&qword_25714FB10, &qword_25714FAA0, v10);
  v15[0] = MEMORY[0x24269D47C](v13, v11, v16);
  v15[1] = sub_241874F6C();
  return MEMORY[0x24269D47C](v13, v12, v15);
}

unint64_t sub_241875268(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_24182E9D0(0, &qword_2571526E0);
  v2 = sub_2418AA3BC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24187A358(v6, (uint64_t)&v15, (unint64_t *)&unk_257154450);
    v7 = v15;
    v8 = v16;
    result = sub_241878C8C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_2417AC5F4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2418753C4(uint64_t a1)
{
  return sub_2418756A0(a1, (void (*)(_QWORD))sub_24182E3B4, (uint64_t (*)(uint64_t))sub_241878DB4);
}

unint64_t sub_2418753D8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_24187A400();
  v2 = sub_2418AA3BC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2417289A8(v6, (uint64_t)&v13, (uint64_t (*)(_QWORD))sub_24186CF90);
    v7 = v13;
    result = sub_241878E6C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_2417AC5F4(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241875500(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  sub_24187A21C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v9 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_24187A2C4();
  v8 = sub_2418AA3BC();
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v9;
  }
  v11 = *(int *)(v3 + 48);
  v12 = v8 + 64;
  v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24[1] = a1;
  v14 = a1 + v13;
  v15 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_2417289A8(v14, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_24187A21C);
    result = sub_241878F1C((uint64_t)v7);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = v9[6];
    v20 = sub_2418A9CFC();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v7, v20);
    *(_QWORD *)(v9[7] + 8 * v18) = *(_QWORD *)&v7[v11];
    v21 = v9[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v9[2] = v23;
    v14 += v15;
    if (!--v10)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24187568C(uint64_t a1)
{
  return sub_2418756A0(a1, (void (*)(_QWORD))sub_24182E2F8, (uint64_t (*)(uint64_t))sub_241878CF0);
}

unint64_t sub_2418756A0(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(uint64_t))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  a2(0);
  v5 = (_QWORD *)sub_2418AA3BC();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v8 = *((unsigned __int8 *)v7 - 8);
    v9 = *v7;
    swift_unknownObjectRetain();
    result = a3(v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v5[6] + result) = v8;
    *(_QWORD *)(v5[7] + 8 * result) = v9;
    v12 = v5[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5[2] = v14;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2418757A8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_24182E9D0(0, qword_257152710);
  v2 = sub_2418AA3BC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24187A358(v6, (uint64_t)v15, (unint64_t *)&unk_2571543F0);
    result = sub_241878EEC((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_2417AC5F4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

MentalHealthUI::Route_optional __swiftcall Route.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  MentalHealthUI::Route_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2418AA3F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t Route.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_241875998 + 4 * byte_2418DA65C[*v0]))(0x79726F6765746163, 0xEC0000006D6F6F52);
}

uint64_t sub_241875998()
{
  return 0x6574617453676F6CLL;
}

unint64_t sub_2418759BC()
{
  return 0xD000000000000011;
}

uint64_t sub_2418759D8()
{
  return 0x736E6F6974706FLL;
}

unint64_t sub_2418759F0()
{
  return 0xD000000000000016;
}

void sub_241875A10(char *a1)
{
  sub_241864944(*a1);
}

void sub_241875A1C()
{
  char *v0;

  sub_241866194(*v0);
}

void sub_241875A24(uint64_t a1)
{
  char *v1;

  sub_24186628C(a1, *v1);
}

void sub_241875A2C(uint64_t a1)
{
  char *v1;

  sub_241866CD4(a1, *v1);
}

MentalHealthUI::Route_optional sub_241875A34(Swift::String *a1)
{
  return Route.init(rawValue:)(*a1);
}

uint64_t sub_241875A40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Route.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_241875A64(char a1)
{
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_241721040();
  v3 = (_QWORD *)MEMORY[0x24269CA38](46, 0xE100000000000000, 1, 1, MEMORY[0x24BEE0D00], v2);
  if (v3[2])
  {
    v4 = v3[4];
    v5 = v3[5];
    v6 = v3[6];
    v7 = v3[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x24269C618](v4, v5, v6, v7);
    swift_bridgeObjectRelease();
    sub_2418A9E40();
    swift_bridgeObjectRelease();
    sub_2418A9E40();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  __break(1u);
  JUMPOUT(0x241875BFCLL);
}

uint64_t NSUserActivity.presentWithAnimation.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  _BYTE v9[40];
  __int128 v10;
  __int128 v11;

  v1 = objc_msgSend(v0, sel_userInfo);
  if (!v1)
  {
    v10 = 0u;
    v11 = 0u;
LABEL_11:
    sub_24172588C((uint64_t)&v10, (uint64_t (*)(_QWORD))sub_2417C5540);
    return 2;
  }
  v2 = v1;
  v3 = sub_2418A9D20();

  sub_241875A64(1);
  *(_QWORD *)&v10 = v4;
  *((_QWORD *)&v10 + 1) = v5;
  sub_2418AA278();
  if (*(_QWORD *)(v3 + 16) && (v6 = sub_241878EEC((uint64_t)v9), (v7 & 1) != 0))
  {
    sub_241762F34(*(_QWORD *)(v3 + 56) + 32 * v6, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  sub_24182C144((uint64_t)v9);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_11;
  if (swift_dynamicCast())
    return v9[0];
  else
    return 2;
}

void NSUserActivity.presentWithAnimation.setter(char a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[5];
  uint64_t v13;
  _OWORD v14[2];

  v2 = v1;
  if (a1 == 2)
  {
    v3 = objc_msgSend(v1, sel_userInfo);
    if (v3)
    {
      v4 = v3;
      v5 = sub_2418A9D20();

      v13 = v5;
      sub_241875A64(1);
      sub_2418AA278();
      sub_24187981C((uint64_t)v12, v14);
      sub_24182C144((uint64_t)v12);
      sub_24172588C((uint64_t)v14, (uint64_t (*)(_QWORD))sub_2417C5540);
      if (v13)
      {
        v6 = (void *)sub_2418A9D14();
        swift_bridgeObjectRelease();
      }
      else
      {
        v6 = 0;
      }
      objc_msgSend(v2, sel_setUserInfo_, v6);

    }
    else
    {
      objc_msgSend(v1, sel_setUserInfo_, 0);
      memset(v14, 0, sizeof(v14));
      sub_24172588C((uint64_t)v14, (uint64_t (*)(_QWORD))sub_2417C5540);
    }
  }
  else
  {
    v7 = a1 & 1;
    sub_241879904();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2418D23E0;
    sub_241875A64(1);
    v12[0] = v9;
    v12[1] = v10;
    sub_2418AA278();
    *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 72) = v7;
    sub_2418757A8(inited);
    v11 = (void *)sub_2418A9D14();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v11);

  }
}

void (*NSUserActivity.presentWithAnimation.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = NSUserActivity.presentWithAnimation.getter();
  return sub_241875F84;
}

void sub_241875F84(uint64_t a1)
{
  NSUserActivity.presentWithAnimation.setter(*(_BYTE *)(a1 + 8));
}

MentalHealthUI::Route NSUserActivity.route.getter@<W0>(_BYTE *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  MentalHealthUI::Route result;
  Swift::String v9[2];
  __int128 v10;
  __int128 v11;

  v3 = objc_msgSend(v1, sel_userInfo);
  if (!v3)
  {
    v10 = 0u;
    v11 = 0u;
LABEL_10:
    result = sub_24172588C((uint64_t)&v10, (uint64_t (*)(_QWORD))sub_2417C5540);
    goto LABEL_11;
  }
  v4 = v3;
  v5 = sub_2418A9D20();

  sub_241875A64(2);
  sub_2418AA278();
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_241878EEC((uint64_t)v9), (v7 & 1) != 0))
  {
    sub_241762F34(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  sub_24182C144((uint64_t)v9);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_10;
  result = swift_dynamicCast();
  if ((result & 1) != 0)
    return Route.init(rawValue:)(v9[0]).value;
LABEL_11:
  *a1 = 5;
  return result;
}

void NSUserActivity.route.setter(unsigned __int8 *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;
  _OWORD v12[2];

  v2 = v1;
  v3 = *a1;
  if ((_DWORD)v3 != 5)
  {
    sub_241879904();
    *(_OWORD *)(swift_initStackObject() + 16) = xmmword_2418D23E0;
    sub_241875A64(2);
    v10[0] = v8;
    v10[1] = v9;
    sub_2418AA278();
    __asm { BR              X11 }
  }
  v4 = objc_msgSend(v1, sel_userInfo);
  if (v4)
  {
    v5 = v4;
    v6 = sub_2418A9D20();

    v11 = v6;
    sub_241875A64(2);
    sub_2418AA278();
    sub_24187981C((uint64_t)v10, v12);
    sub_24182C144((uint64_t)v10);
    sub_24172588C((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2417C5540);
    if (v11)
    {
      v7 = (void *)sub_2418A9D14();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
    objc_msgSend(v2, sel_setUserInfo_, v7);

  }
  else
  {
    objc_msgSend(v1, sel_setUserInfo_, 0);
    memset(v12, 0, sizeof(v12));
    sub_24172588C((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2417C5540);
  }
}

void (*NSUserActivity.route.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  NSUserActivity.route.getter((_BYTE *)(a1 + 8));
  return sub_2418763DC;
}

void sub_2418763DC(uint64_t a1, char a2)
{
  unsigned __int8 *v2;
  char v3;
  char v4;

  if ((a2 & 1) != 0)
  {
    v3 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v3;
  }
  else
  {
    v4 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v4;
  }
  NSUserActivity.route.setter(v2);
}

uint64_t NSUserActivity.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t, uint64_t);
  _QWORD v21[3];
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  sub_2417C55D4(0, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v21 - v5;
  v7 = objc_msgSend(v1, sel_userInfo);
  if (!v7)
  {
    v23 = 0u;
    v24 = 0u;
LABEL_11:
    sub_24172588C((uint64_t)&v23, (uint64_t (*)(_QWORD))sub_2417C5540);
    goto LABEL_12;
  }
  v8 = v7;
  v9 = sub_2418A9D20();

  sub_241875A64(3);
  v21[1] = v10;
  v21[2] = v11;
  sub_2418AA278();
  if (*(_QWORD *)(v9 + 16) && (v12 = sub_241878EEC((uint64_t)&v22), (v13 & 1) != 0))
  {
    sub_241762F34(*(_QWORD *)(v9 + 56) + 32 * v12, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_24182C144((uint64_t)&v22);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v24 + 1))
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v14 = sub_2418A7F5C();
    v16 = v15;
    swift_bridgeObjectRelease();
    if (v16 >> 60 != 15)
    {
      sub_2418A7D4C();
      swift_allocObject();
      sub_2418A7D40();
      v17 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
      sub_24172159C(&qword_257154400, type metadata accessor for StateOfMindEntryModel.Configuration, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel.Configuration);
      sub_2418A7D34();
      sub_241879968(v14, v16);
      swift_release();
      v19 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
      v19(v6, 0, 1, v17);
      sub_24179CE0C((uint64_t)v6, a1);
      return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v19)(a1, 0, 1, v17);
    }
  }
LABEL_12:
  v18 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
}

uint64_t sub_2418766F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  sub_2417C55D4(0, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v7 - v4;
  sub_2417C5620(a1, (uint64_t)&v7 - v4, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  return NSUserActivity.configuration.setter((uint64_t)v5);
}

uint64_t NSUserActivity.configuration.setter(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _OWORD *v29;
  uint64_t (*v30)(_QWORD);
  _BYTE v32[112];
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36;
  _OWORD v37[2];

  v2 = v1;
  sub_2417C55D4(0, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v32[-v6];
  v8 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2417C5620(a1, (uint64_t)v7, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    sub_24179CE0C((uint64_t)v7, (uint64_t)v12);
    sub_2418A7D70();
    swift_allocObject();
    sub_2418A7D64();
    sub_24172159C((unint64_t *)&unk_257154408, type metadata accessor for StateOfMindEntryModel.Configuration, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel.Configuration);
    v19 = sub_2418A7D58();
    v21 = v20;
    swift_release();
    sub_241879904();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2418D23E0;
    sub_241875A64(3);
    v35[0] = v23;
    v35[1] = v24;
    v25 = MEMORY[0x24BEE0D00];
    sub_2418AA278();
    v26 = sub_2418A7F68();
    *(_QWORD *)(inited + 96) = v25;
    *(_QWORD *)(inited + 72) = v26;
    *(_QWORD *)(inited + 80) = v27;
    sub_2418757A8(inited);
    v28 = (void *)sub_2418A9D14();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v28);

    sub_24187997C(v19, v21);
    sub_2417C566C(a1, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
    v29 = v12;
    v30 = type metadata accessor for StateOfMindEntryModel.Configuration;
    return sub_24172588C((uint64_t)v29, v30);
  }
  sub_2417C566C((uint64_t)v7, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  v13 = objc_msgSend(v2, sel_userInfo);
  if (!v13)
  {
    objc_msgSend(v2, sel_setUserInfo_, 0);
    sub_2417C566C(a1, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
    swift_bridgeObjectRelease();
    memset(v37, 0, sizeof(v37));
    v30 = (uint64_t (*)(_QWORD))sub_2417C5540;
    v29 = v37;
    return sub_24172588C((uint64_t)v29, v30);
  }
  v14 = v13;
  v15 = sub_2418A9D20();

  v36 = v15;
  sub_241875A64(3);
  v33 = v16;
  v34 = v17;
  sub_2418AA278();
  sub_24187981C((uint64_t)v35, v37);
  sub_24182C144((uint64_t)v35);
  sub_24172588C((uint64_t)v37, (uint64_t (*)(_QWORD))sub_2417C5540);
  if (v36)
  {
    v18 = (void *)sub_2418A9D14();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v2, sel_setUserInfo_, v18);

  return sub_2417C566C(a1, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
}

void (*NSUserActivity.configuration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  void *v5;

  *a1 = v1;
  sub_2417C55D4(0, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  v5 = malloc(v4);
  a1[2] = v5;
  NSUserActivity.configuration.getter((uint64_t)v5);
  return sub_241876BE8;
}

void sub_241876BE8(uint64_t a1, char a2)
{
  sub_241878C00(a1, a2, (void (*)(void *))NSUserActivity.configuration.setter);
}

uint64_t NSUserActivity.version.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  _QWORD v9[5];
  __int128 v10;
  __int128 v11;

  v1 = objc_msgSend(v0, sel_userInfo);
  if (!v1)
  {
    v10 = 0u;
    v11 = 0u;
LABEL_12:
    sub_24172588C((uint64_t)&v10, (uint64_t (*)(_QWORD))sub_2417C5540);
    return 0;
  }
  v2 = v1;
  v3 = sub_2418A9D20();

  sub_241875A64(0);
  *(_QWORD *)&v10 = v4;
  *((_QWORD *)&v10 + 1) = v5;
  sub_2418AA278();
  if (*(_QWORD *)(v3 + 16) && (v6 = sub_241878EEC((uint64_t)v9), (v7 & 1) != 0))
  {
    sub_241762F34(*(_QWORD *)(v3 + 56) + 32 * v6, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  sub_24182C144((uint64_t)v9);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_12;
  if (swift_dynamicCast())
    return v9[0];
  else
    return 0;
}

void NSUserActivity.version.setter(uint64_t a1, char a2)
{
  void *v2;
  uint64_t inited;
  void *v5;

  if ((a2 & 1) == 0)
  {
    sub_241879904();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2418D23E0;
    sub_241875A64(0);
    sub_2418AA278();
    *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 72) = a1;
    sub_2418757A8(inited);
    v5 = (void *)sub_2418A9D14();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v5);

  }
}

void (*NSUserActivity.version.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;

  v3 = malloc(0x108uLL);
  *a1 = v3;
  v3[32] = v1;
  v3[30] = NSUserActivity.version.getter();
  *((_BYTE *)v3 + 248) = v4 & 1;
  return sub_241876E58;
}

void sub_241876E58(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v2 = *(_QWORD **)a1;
  if ((a2 & 1) != 0)
  {
    if ((*(_BYTE *)(*(_QWORD *)a1 + 248) & 1) == 0)
    {
      v3 = (void *)v2[32];
      v4 = v2[30];
      sub_241879904();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2418D23E0;
      sub_241875A64(0);
      v2[26] = v6;
      v2[27] = v7;
      sub_2418AA278();
      *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1768];
      *(_QWORD *)(inited + 72) = v4;
      v8 = inited;
LABEL_6:
      sub_2418757A8(v8);
      v13 = (void *)sub_2418A9D14();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_addUserInfoEntriesFromDictionary_, v13);

    }
  }
  else if ((*(_BYTE *)(*(_QWORD *)a1 + 248) & 1) == 0)
  {
    v3 = (void *)v2[32];
    v9 = v2[30];
    sub_241879904();
    v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_2418D23E0;
    sub_241875A64(0);
    v2[28] = v11;
    v2[29] = v12;
    sub_2418AA278();
    *(_QWORD *)(v10 + 96) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v10 + 72) = v9;
    v8 = v10;
    goto LABEL_6;
  }
  free(v2);
}

Swift::Bool __swiftcall NSUserActivity.isValid()()
{
  uint64_t v0;
  char v1;

  v0 = NSUserActivity.version.getter();
  return (v1 & 1) == 0 && v0 == 1;
}

uint64_t static URL.stateOfMind(route:presentWithAnimation:configuration:)@<X0>(_BYTE *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v24 = a4;
  sub_2417C55D4(0, (unint64_t *)&qword_2543915A0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v23 - v9;
  sub_2417C55D4(0, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v23 - v13;
  v15 = sub_2418A7E48();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_2418A828C();
  LOBYTE(v25) = (_BYTE)a1;
  URLComponents.route.setter((uint64_t)&v25);
  URLComponents.presentWithAnimation.setter(a2);
  sub_2417C5620(a3, (uint64_t)v14, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  URLComponents.initialConfiguration.setter((uint64_t)v14);
  sub_2418A7E24();
  v20 = sub_2418A7F50();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v20) == 1)
  {
    sub_2417C566C((uint64_t)v10, (unint64_t *)&qword_2543915A0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_2418AA2B4();
    swift_bridgeObjectRelease();
    v25 = 0xD00000000000001ALL;
    v26 = 0x80000002418DF7B0;
    sub_24172159C(&qword_257154418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78], MEMORY[0x24BDCBB98]);
    sub_2418AA4AC();
    sub_2418A9E40();
    swift_bridgeObjectRelease();
    result = sub_2418AA380();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v24, v10, v20);
  }
  return result;
}

void URLComponents.route.setter(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2418772D8()
{
  sub_2418A9E40();
  swift_bridgeObjectRelease();
  return sub_2418A7E3C();
}

uint64_t URLComponents.presentWithAnimation.setter(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, char *, unint64_t);
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  const char *v38;
  unint64_t v39;

  v33 = a1;
  v35 = sub_2418A7DF4();
  v2 = *(_QWORD *)(v35 - 8);
  v4 = MEMORY[0x24BDAC7A8](v35, v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v36 = (char *)&v30 - v9;
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v30 - v11;
  v13 = sub_2418A7E00();
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v15 = v13;
    v39 = MEMORY[0x24BEE4AF8];
    v16 = *(char **)(v13 + 16);
    if (v16)
    {
      v31 = v6;
      v32 = v1;
      v17 = 0;
      v38 = "Unable to create url from ";
      v37 = 0x80000002418DF7D0;
      v14 = v35;
      v34 = v16;
      while (1)
      {
        if (v17 >= *(_QWORD *)(v15 + 16))
        {
          __break(1u);
LABEL_25:
          v14 = sub_2418036E0(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
LABEL_20:
          v28 = *(_QWORD *)(v14 + 16);
          v27 = *(_QWORD *)(v14 + 24);
          if (v28 >= v27 >> 1)
            v14 = sub_2418036E0(v27 > 1, v28 + 1, 1, v14);
          *(_QWORD *)(v14 + 16) = v28 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v14+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v28, v16, v35);
          return sub_2418A7E0C();
        }
        v18 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
        v19 = *(_QWORD *)(v2 + 72);
        (*(void (**)(char *, unint64_t, unint64_t))(v2 + 16))(v12, v15 + v18 + v19 * v17, v14);
        if (sub_2418A7DDC() == 0xD000000000000014 && v20 == v37)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v21 = sub_2418AA4DC();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0)
          {
            v22 = *(void (**)(char *, char *, unint64_t))(v2 + 32);
            v22(v36, v12, v14);
            v23 = v39;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_24183D6C4(0, *(_QWORD *)(v23 + 16) + 1, 1);
              v23 = v39;
            }
            v25 = *(_QWORD *)(v23 + 16);
            v24 = *(_QWORD *)(v23 + 24);
            if (v25 >= v24 >> 1)
            {
              sub_24183D6C4(v24 > 1, v25 + 1, 1);
              v23 = v39;
            }
            *(_QWORD *)(v23 + 16) = v25 + 1;
            v26 = v23 + v18 + v25 * v19;
            v14 = v35;
            v22((char *)v26, v36, v35);
            v39 = v23;
            v16 = v34;
            goto LABEL_6;
          }
        }
        (*(void (**)(char *, unint64_t))(v2 + 8))(v12, v14);
LABEL_6:
        if (v16 == (char *)++v17)
        {
          v14 = v39;
          v6 = v31;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (v33 != 2)
  {
    sub_2418A7DD0();
    swift_bridgeObjectRelease();
    v16 = v6;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_25;
    goto LABEL_20;
  }
  return sub_2418A7E0C();
}

uint64_t URLComponents.initialConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;

  sub_2417C55D4(0, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x24BDAC7A8](v3, v4);
  v43 = (uint64_t)&v39 - v5;
  v44 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44, v6);
  v45 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A7DF4();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v40 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v48 = (char *)&v39 - v15;
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v39 - v17;
  v41 = v1;
  v19 = sub_2418A7E00();
  v20 = MEMORY[0x24BEE4AF8];
  v47 = v8;
  if (v19)
  {
    v21 = v19;
    v49 = MEMORY[0x24BEE4AF8];
    v22 = *(_QWORD *)(v19 + 16);
    if (v22)
    {
      v39 = a1;
      v23 = 0;
      v46 = v22;
      while (1)
      {
        if (v23 >= *(_QWORD *)(v21 + 16))
        {
          __break(1u);
LABEL_26:
          v20 = sub_2418036E0(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
LABEL_21:
          v37 = *(_QWORD *)(v20 + 16);
          v36 = *(_QWORD *)(v20 + 24);
          if (v37 >= v36 >> 1)
            v20 = sub_2418036E0(v36 > 1, v37 + 1, 1, v20);
          *(_QWORD *)(v20 + 16) = v37 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v37, v18, v47);
          sub_24187997C(v1, v21);
          sub_24172588C(v45, type metadata accessor for StateOfMindEntryModel.Configuration);
          a1 = v22;
          goto LABEL_24;
        }
        v24 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        v25 = *(_QWORD *)(v9 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v18, v21 + v24 + v25 * v23, v8);
        v26 = sub_2418A7DDC();
        v1 = v27;
        if (v26 == 0x72756769666E6F63 && v27 == 0xED00006E6F697461)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v20 = sub_2418AA4DC();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            v28 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
            v28(v48, v18, v8);
            v1 = v49;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_24183D6C4(0, *(_QWORD *)(v1 + 16) + 1, 1);
              v1 = v49;
            }
            v30 = *(_QWORD *)(v1 + 16);
            v29 = *(_QWORD *)(v1 + 24);
            v20 = v30 + 1;
            if (v30 >= v29 >> 1)
            {
              sub_24183D6C4(v29 > 1, v30 + 1, 1);
              v1 = v49;
            }
            *(_QWORD *)(v1 + 16) = v20;
            v31 = v1 + v24 + v30 * v25;
            v8 = v47;
            v28((char *)v31, v48, v47);
            v49 = v1;
            v22 = v46;
            goto LABEL_6;
          }
        }
        (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
LABEL_6:
        if (v22 == ++v23)
        {
          v20 = v49;
          a1 = v39;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  v32 = v43;
  v33 = v44;
  v34 = v42;
  sub_2417C5620(a1, v43, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) != 1)
  {
    sub_24179CE0C(v32, v45);
    sub_2418A7D70();
    swift_allocObject();
    sub_2418A7D64();
    sub_24172159C((unint64_t *)&unk_257154408, type metadata accessor for StateOfMindEntryModel.Configuration, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel.Configuration);
    v1 = sub_2418A7D58();
    v21 = v35;
    swift_release();
    sub_2418A7F68();
    v18 = v40;
    sub_2418A7DD0();
    swift_bridgeObjectRelease();
    v22 = a1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_26;
    goto LABEL_21;
  }
  sub_2417C566C(v32, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
LABEL_24:
  sub_2418A7E0C();
  return sub_2417C566C(a1, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
}

uint64_t URL.route.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  sub_2417C55D4(0, &qword_257154420, (void (*)(uint64_t))MEMORY[0x24BDCBB78]);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v9 - v4;
  sub_2418A7E18();
  v6 = sub_2418A7E48();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    result = sub_2417C566C((uint64_t)v5, &qword_257154420, (void (*)(uint64_t))MEMORY[0x24BDCBB78]);
    *a1 = 5;
  }
  else
  {
    URLComponents.route.getter(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  return result;
}

MentalHealthUI::Route_optional URLComponents.route.getter@<W0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  MentalHealthUI::Route_optional result;

  sub_2418A7E30();
  v2 = sub_241721040();
  v3 = (_QWORD *)MEMORY[0x24269CA38](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x24BEE0D00], v2);
  swift_bridgeObjectRelease();
  if (v3[2])
  {
    v4 = v3[4];
    v5 = v3[5];
    v6 = v3[6];
    v7 = v3[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x24269C618](v4, v5, v6, v7);
    v10 = v9;
    swift_bridgeObjectRelease();
    v11._countAndFlagsBits = v8;
    v11._object = v10;
    return Route.init(rawValue:)(v11);
  }
  else
  {
    result.value = swift_bridgeObjectRelease();
    *a1 = 5;
  }
  return result;
}

uint64_t URL.presentWithAnimation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_2417C55D4(0, &qword_257154420, (void (*)(uint64_t))MEMORY[0x24BDCBB78]);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v8 - v2;
  sub_2418A7E18();
  v4 = sub_2418A7E48();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_2417C566C((uint64_t)v3, &qword_257154420, (void (*)(uint64_t))MEMORY[0x24BDCBB78]);
    return 2;
  }
  else
  {
    v6 = URLComponents.presentWithAnimation.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  return v6;
}

uint64_t URLComponents.presentWithAnimation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  _QWORD v23[2];
  char *v24;
  unint64_t v25;

  v0 = sub_2418A7DF4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C55D4(0, (unint64_t *)&unk_254391590, v5);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v23 - v8;
  v10 = sub_2418A7E00();
  if (!v10)
    return 2;
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v23[1] = v10;
    v24 = v9;
    v12 = v10 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v13 = *(_QWORD *)(v1 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    swift_bridgeObjectRetain();
    v25 = 0x80000002418DF7D0;
    while (1)
    {
      v14(v4, v12, v0);
      if (sub_2418A7DDC() == 0xD000000000000014 && v15 == v25)
        break;
      v16 = sub_2418AA4DC();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
        goto LABEL_11;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      v12 += v13;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        v17 = 1;
        v9 = v24;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    v9 = v24;
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v24, v4, v0);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v9, v17, 1, v0);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v9, 1, v0) == 1)
  {
    sub_2417C566C((uint64_t)v9, (unint64_t *)&unk_254391590, (void (*)(uint64_t))MEMORY[0x24BDCB988]);
  }
  else
  {
    v18 = sub_2418A7DE8();
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
    if (v20)
    {
      if (v18 == 48 && v20 == 0xE100000000000000 || (sub_2418AA4DC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      if (v18 == 49 && v20 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v22 = sub_2418AA4DC();
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0)
          return 2;
      }
      return 1;
    }
  }
  return 2;
}

void *URL.userActivity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  Swift::String v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD v45[2];

  sub_2417C55D4(0, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v41 - v2;
  v4 = (void (*)(uint64_t))MEMORY[0x24BDCBB78];
  sub_2417C55D4(0, &qword_257154420, (void (*)(uint64_t))MEMORY[0x24BDCBB78]);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)&v41 - v12;
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v17 = (char *)&v41 - v16;
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v41 - v19;
  sub_2418A7E18();
  v21 = (void *)_sSo14NSUserActivityC14MentalHealthUIE6pluginABvgZ_0();
  sub_2417C5620((uint64_t)v20, (uint64_t)v17, &qword_257154420, v4);
  v22 = sub_2418A7E48();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v17, 1, v22);
  v44 = v3;
  if (v25 == 1)
  {
    sub_2417C566C((uint64_t)v17, &qword_257154420, (void (*)(uint64_t))MEMORY[0x24BDCBB78]);
    v26 = 5;
  }
  else
  {
    v43 = v23;
    v45[0] = sub_2418A7E30();
    v45[1] = v27;
    v28 = sub_241721040();
    v29 = (_QWORD *)MEMORY[0x24269CA38](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x24BEE0D00], v28);
    swift_bridgeObjectRelease();
    if (v29[2])
    {
      v31 = v29[4];
      v30 = v29[5];
      v32 = v29[7];
      v41 = v29[6];
      v42 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v33 = MEMORY[0x24269C618](v31, v42, v41, v32);
      v35 = v34;
      swift_bridgeObjectRelease();
      v36._countAndFlagsBits = v33;
      v36._object = v35;
      Route.init(rawValue:)(v36);
      v26 = v45[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      v26 = 5;
      LOBYTE(v45[0]) = 5;
    }
    v23 = v43;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v22);
  }
  LOBYTE(v45[0]) = v26;
  NSUserActivity.route.setter((unsigned __int8 *)v45);
  sub_2417C5620((uint64_t)v20, (uint64_t)v13, &qword_257154420, (void (*)(uint64_t))MEMORY[0x24BDCBB78]);
  if (v24(v13, 1, v22) == 1)
  {
    sub_2417C566C((uint64_t)v13, &qword_257154420, (void (*)(uint64_t))MEMORY[0x24BDCBB78]);
    v37 = 2;
  }
  else
  {
    v37 = URLComponents.presentWithAnimation.getter();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v22);
  }
  v38 = (uint64_t)v44;
  NSUserActivity.presentWithAnimation.setter(v37);
  sub_2417C5620((uint64_t)v20, (uint64_t)v9, &qword_257154420, (void (*)(uint64_t))MEMORY[0x24BDCBB78]);
  if (v24(v9, 1, v22) == 1)
  {
    sub_2417C566C((uint64_t)v9, &qword_257154420, (void (*)(uint64_t))MEMORY[0x24BDCBB78]);
    v39 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
  }
  else
  {
    URLComponents.initialConfiguration.getter(v38);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v22);
  }
  NSUserActivity.configuration.setter(v38);
  objc_msgSend(v21, sel_setEligibleForHandoff_, 0);
  sub_2417C566C((uint64_t)v20, &qword_257154420, (void (*)(uint64_t))MEMORY[0x24BDCBB78]);
  return v21;
}

uint64_t URLComponents.initialConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  _QWORD v33[2];
  char *v34;
  char *v35;
  uint64_t v36;

  sub_2417C55D4(0, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v33 - v4;
  v6 = sub_2418A7DF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C55D4(0, (unint64_t *)&unk_254391590, v11);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v33 - v14;
  v16 = sub_2418A7E00();
  if (!v16)
    goto LABEL_16;
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v34 = v15;
    v35 = v5;
    v36 = a1;
    v18 = v16 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v33[1] = v16;
    swift_bridgeObjectRetain();
    while (1)
    {
      v20(v10, v18, v6);
      if (sub_2418A7DDC() == 0x72756769666E6F63 && v21 == 0xED00006E6F697461)
        break;
      v22 = sub_2418AA4DC();
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
        goto LABEL_11;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      v18 += v19;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        v23 = 1;
        v5 = v35;
        a1 = v36;
        v15 = v34;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    v15 = v34;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v34, v10, v6);
    v23 = 0;
    v5 = v35;
    a1 = v36;
  }
  else
  {
    v23 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v15, v23, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_2417C566C((uint64_t)v15, (unint64_t *)&unk_254391590, (void (*)(uint64_t))MEMORY[0x24BDCB988]);
LABEL_16:
    v29 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 1, 1, v29);
  }
  sub_2418A7DE8();
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  if (!v25)
    goto LABEL_16;
  v26 = sub_2418A7F5C();
  v28 = v27;
  swift_bridgeObjectRelease();
  if (v28 >> 60 == 15)
    goto LABEL_16;
  sub_2418A7D4C();
  swift_allocObject();
  sub_2418A7D40();
  v31 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  sub_24172159C(&qword_257154400, type metadata accessor for StateOfMindEntryModel.Configuration, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel.Configuration);
  sub_2418A7D34();
  sub_241879968(v26, v28);
  swift_release();
  v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v32(v5, 0, 1, v31);
  sub_24179CE0C((uint64_t)v5, a1);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v32)(a1, 0, 1, v31);
}

void (*URLComponents.route.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;

  v3 = a1 + 3;
  a1[2] = v1;
  *a1 = sub_2418A7E30();
  a1[1] = v4;
  v5 = sub_241721040();
  v6 = (_QWORD *)MEMORY[0x24269CA38](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x24BEE0D00], v5);
  swift_bridgeObjectRelease();
  if (v6[2])
  {
    v7 = v6[4];
    v8 = v6[5];
    v9 = v6[6];
    v10 = v6[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x24269C618](v7, v8, v9, v10);
    v13 = v12;
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = v11;
    v14._object = v13;
    Route.init(rawValue:)(v14);
  }
  else
  {
    swift_bridgeObjectRelease();
    *v3 = 5;
  }
  return sub_241878A48;
}

void sub_241878A48(uint64_t a1, char a2)
{
  char *v2;
  char v3;
  char v4;

  if ((a2 & 1) != 0)
  {
    v3 = *(_BYTE *)(a1 + 24);
    v2 = &v3;
  }
  else
  {
    v4 = *(_BYTE *)(a1 + 24);
    v2 = &v4;
  }
  URLComponents.route.setter((uint64_t)v2);
}

uint64_t (*URLComponents.presentWithAnimation.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = URLComponents.presentWithAnimation.getter();
  return sub_241878AC0;
}

uint64_t sub_241878AC0(uint64_t a1)
{
  return URLComponents.presentWithAnimation.setter(*(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_241878AE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  sub_2417C55D4(0, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v7 - v4;
  sub_2417C5620(a1, (uint64_t)&v7 - v4, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  return URLComponents.initialConfiguration.setter((uint64_t)v5);
}

void (*URLComponents.initialConfiguration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  void *v5;

  *a1 = v1;
  sub_2417C55D4(0, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  v5 = malloc(v4);
  a1[2] = v5;
  URLComponents.initialConfiguration.getter((uint64_t)v5);
  return sub_241878BF4;
}

void sub_241878BF4(uint64_t a1, char a2)
{
  sub_241878C00(a1, a2, (void (*)(void *))URLComponents.initialConfiguration.setter);
}

void sub_241878C00(uint64_t a1, char a2, void (*a3)(void *))
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_2417C5620(*(_QWORD *)(a1 + 16), (uint64_t)v4, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
    a3(v4);
    sub_2417C566C((uint64_t)v5, &qword_2543915C8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  }
  else
  {
    a3(*(void **)(a1 + 16));
  }
  free(v5);
  free(v4);
}

unint64_t sub_241878C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2418AA56C();
  sub_2418A9E1C();
  v4 = sub_2418AA59C();
  return sub_241878F88(a1, a2, v4);
}

unint64_t sub_241878CF0(char a1)
{
  uint64_t v2;

  sub_2418AA56C();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  v2 = sub_2418AA59C();
  return sub_241879068(a1, v2);
}

unint64_t sub_241878DB4(char a1)
{
  uint64_t v2;

  sub_2418AA56C();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  v2 = sub_2418AA59C();
  return sub_24187921C(a1, v2);
}

unint64_t sub_241878E6C(uint64_t a1)
{
  uint64_t v2;

  sub_2418A9DE0();
  sub_2418AA56C();
  sub_2418A9E1C();
  v2 = sub_2418AA59C();
  swift_bridgeObjectRelease();
  return sub_2418793B4(a1, v2);
}

unint64_t sub_241878EEC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2418AA260();
  return sub_241879528(a1, v2);
}

unint64_t sub_241878F1C(uint64_t a1)
{
  uint64_t v2;

  sub_2418A9CFC();
  sub_24172159C(&qword_257152680, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A0]);
  v2 = sub_2418A9D38();
  return sub_2418795EC(a1, v2);
}

unint64_t sub_241878F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2418AA4DC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2418AA4DC() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_241879068(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    while (1)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v4);
      v7 = 0x6F65675F64617571;
      if (v6 == 1)
        v7 = 0xD000000000000013;
      v8 = 0xED0000797274656DLL;
      if (v6 == 1)
        v8 = 0x80000002418DBFA0;
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
        v9 = v7;
      else
        v9 = 0xD000000000000012;
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
        v10 = v8;
      else
        v10 = 0x80000002418DBF80;
      if (a1)
      {
        if (a1 == 1)
          v11 = 0xD000000000000013;
        else
          v11 = 0x6F65675F64617571;
        if (a1 == 1)
          v12 = 0x80000002418DBFA0;
        else
          v12 = 0xED0000797274656DLL;
        if (v9 != v11)
          goto LABEL_24;
      }
      else
      {
        v12 = 0x80000002418DBF80;
        if (v9 != 0xD000000000000012)
          goto LABEL_24;
      }
      if (v10 == v12)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_24:
      v13 = sub_2418AA4DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_24187921C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v13;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v13 = ~v3;
    while (1)
    {
      v5 = 0xD000000000000014;
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
      {
        v6 = 0x80000002418DBFF0;
      }
      else
      {
        v5 = 0xD000000000000011;
        v6 = 0x80000002418DC010;
      }
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
        v7 = v5;
      else
        v7 = 0xD000000000000017;
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
        v8 = v6;
      else
        v8 = 0x80000002418DBFD0;
      if (a1)
      {
        if (a1 == 1)
          v9 = 0xD000000000000014;
        else
          v9 = 0xD000000000000011;
        if (a1 == 1)
          v10 = 0x80000002418DBFF0;
        else
          v10 = 0x80000002418DC010;
        if (v7 != v9)
          goto LABEL_23;
      }
      else
      {
        v10 = 0x80000002418DBFD0;
        if (v7 != 0xD000000000000017)
          goto LABEL_23;
      }
      if (v8 == v10)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_23:
      v11 = sub_2418AA4DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v13;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_2418793B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_2418A9DE0();
    v8 = v7;
    if (v6 == sub_2418A9DE0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_2418AA4DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_2418A9DE0();
          v15 = v14;
          if (v13 == sub_2418A9DE0() && v15 == v16)
            break;
          v18 = sub_2418AA4DC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_241879528(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_24182EA24(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x24269CA74](v9, a1);
      sub_24182C144((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2418795EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_2418A9CFC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5);
      sub_24172159C(&qword_257151E68, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
      v15 = sub_2418A9DA4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

double sub_24187972C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_241878C8C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24182DE24();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_2417AC5F4((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_2418799C0(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_24187981C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_241878EEC(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24182E4C0();
      v9 = v11;
    }
    sub_24182C144(*(_QWORD *)(v9 + 48) + 40 * v6);
    sub_2417AC5F4((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_241879B94(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

void sub_241879904()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571543E8)
  {
    sub_24187A3A4(255, (unint64_t *)&unk_2571543F0);
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571543E8);
  }
}

uint64_t sub_241879968(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24187997C(a1, a2);
  return a1;
}

uint64_t sub_24187997C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_2418799C0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2418AA254();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2418AA56C();
        swift_bridgeObjectRetain();
        sub_2418A9E1C();
        v10 = sub_2418AA59C();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_241879B94(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2418AA254();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_24182EA24(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_2418AA260();
        result = sub_24182C144((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t _sSo14NSUserActivityC14MentalHealthUIE6pluginABvgZ_0()
{
  unint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t inited;
  void *v8;
  uint64_t result;

  v0 = sub_241721040();
  v1 = (_QWORD *)MEMORY[0x24269CA38](46, 0xE100000000000000, 1, 1, MEMORY[0x24BEE0D00], v0);
  if (v1[2])
  {
    v2 = v1[4];
    v3 = v1[5];
    v4 = v1[6];
    v5 = v1[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x24269C618](v2, v3, v4, v5);
    swift_bridgeObjectRelease();
    v6 = (void *)sub_2418A8280();
    swift_bridgeObjectRelease();
    sub_241879904();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2418D23E0;
    sub_241875A64(0);
    sub_2418AA278();
    *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 72) = 1;
    sub_2418757A8(inited);
    v8 = (void *)sub_2418A9D14();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_addUserInfoEntriesFromDictionary_, v8);

    return (uint64_t)v6;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

unint64_t sub_241879EF4()
{
  unint64_t result;

  result = qword_257154428;
  if (!qword_257154428)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for Route, &type metadata for Route);
    atomic_store(result, (unint64_t *)&qword_257154428);
  }
  return result;
}

uint64_t sub_241879F38@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = NSUserActivity.presentWithAnimation.getter();
  *a1 = result;
  return result;
}

void sub_241879F60(char *a1)
{
  NSUserActivity.presentWithAnimation.setter(*a1);
}

uint64_t sub_241879F84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = NSUserActivity.route.getter(&v3);
  *a1 = v3;
  return result;
}

void sub_241879FBC(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  NSUserActivity.route.setter(&v1);
}

uint64_t sub_241879FF0@<X0>(uint64_t a1@<X8>)
{
  return NSUserActivity.configuration.getter(a1);
}

uint64_t sub_24187A014@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = NSUserActivity.version.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_24187A044(uint64_t a1)
{
  NSUserActivity.version.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

MentalHealthUI::Route_optional sub_24187A074@<W0>(_BYTE *a1@<X8>)
{
  MentalHealthUI::Route_optional result;
  char v3;

  result.value = URLComponents.route.getter(&v3).value;
  *a1 = v3;
  return result;
}

void sub_24187A0AC(char *a1)
{
  char v1;

  v1 = *a1;
  URLComponents.route.setter((uint64_t)&v1);
}

uint64_t sub_24187A0E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = URLComponents.presentWithAnimation.getter();
  *a1 = result;
  return result;
}

uint64_t sub_24187A108(unsigned __int8 *a1)
{
  return URLComponents.presentWithAnimation.setter(*a1);
}

uint64_t sub_24187A12C@<X0>(uint64_t a1@<X8>)
{
  return URLComponents.initialConfiguration.getter(a1);
}

uint64_t storeEnumTagSinglePayload for Route(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_24187A19C + 4 * byte_2418DA66C[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_24187A1D0 + 4 * byte_2418DA667[v4]))();
}

uint64_t sub_24187A1D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24187A1D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24187A1E0);
  return result;
}

uint64_t sub_24187A1EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24187A1F4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_24187A1F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24187A200(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Route()
{
  return &type metadata for Route;
}

void sub_24187A21C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257154430)
  {
    sub_2418A9CFC();
    sub_24187A288();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257154430);
  }
}

unint64_t sub_24187A288()
{
  unint64_t result;

  result = qword_257152660;
  if (!qword_257152660)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257152660);
  }
  return result;
}

void sub_24187A2C4()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_257154440)
  {
    sub_2418A9CFC();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488];
    sub_24187A288();
    sub_24172159C(&qword_257152680, v0, MEMORY[0x24BDD24A0]);
    v1 = sub_2418AA3C8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_257154440);
  }
}

uint64_t sub_24187A358(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_24187A3A4(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_24187A3A4(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_24187A400()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154460)
  {
    type metadata accessor for Option(255);
    sub_24172159C((unint64_t *)&qword_25714BEE0, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2418D1670);
    v0 = sub_2418AA3C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154460);
  }
}

id StateOfMindCalendarViewController.__allocating_init(healthStore:dateToFocusOn:verticalSizeClass:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return StateOfMindCalendarViewController.init(healthStore:dateToFocusOn:verticalSizeClass:)(a1, a2);
}

id sub_24187A4CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_257154488;
  v2 = *(void **)(v0 + qword_257154488);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_257154488);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_24187A53C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  void *v5;
  id v6;

  v1 = qword_257154490;
  v2 = *(void **)(v0 + qword_257154490);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_257154490);
LABEL_5:
    v6 = v2;
    return v3;
  }
  result = (id)HKDateFormatterFromTemplate();
  if (result)
  {
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = result;
    v3 = result;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_24187A5AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_25715E1B8;
  swift_beginAccess();
  return MEMORY[0x24269D5FC](v1);
}

uint64_t sub_24187A5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + qword_25715E1B8;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_24187A660(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = qword_25715E1B8;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x24269D5FC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_24187A6D4;
}

void sub_24187A6D4(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id StateOfMindCalendarViewController.init(healthStore:dateToFocusOn:verticalSizeClass:)(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(void);
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t *v48;
  id v49;
  void *v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  objc_class *v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(void);
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t ObjectType;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  objc_super v97;
  uint64_t v98[4];

  v95 = a2;
  ObjectType = swift_getObjectType();
  v4 = sub_2418A8100();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v7);
  v90 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2418A9CFC();
  v85 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v86 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v84 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_24172570C(0, (unint64_t *)&qword_25714F360, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13, v14);
  v82 = (char *)&v74 - v15;
  sub_24172570C(0, &qword_257151E78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], v12);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v74 - v18;
  v20 = sub_2418A8154();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v81 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2418A8238();
  v93 = *(_QWORD *)(v24 - 8);
  v94 = v24;
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v88 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v28);
  v89 = (char *)&v74 - v29;
  v78 = sub_2418A8340();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78, v30);
  v32 = (char *)&v74 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = v6;
  v33 = *(void (**)(void))(v6 + 56);
  v80 = &v2[qword_257154480];
  v91 = v4;
  v79 = v33;
  v33();
  *(_QWORD *)&v2[qword_257154488] = 0;
  *(_QWORD *)&v2[qword_257154490] = 0;
  *(_QWORD *)&v2[qword_25715E1B8 + 8] = 0;
  swift_unknownObjectWeakInit();
  v83 = v2;
  sub_2418A8328();
  v34 = sub_2418A8334();
  v35 = sub_2418AA05C();
  if (os_log_type_enabled(v34, v35))
  {
    v76 = v19;
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v74 = v21;
    v38 = v37;
    v98[0] = v37;
    *(_DWORD *)v36 = 136446210;
    v39 = sub_2418AA5D8();
    v75 = v20;
    v96 = sub_24176024C(v39, v40, v98);
    v19 = v76;
    sub_2418AA1F4();
    v20 = v75;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v34, v35, "[%{public}s] initializing", v36, 0xCu);
    swift_arrayDestroy();
    v41 = v38;
    v21 = v74;
    MEMORY[0x24269D548](v41, -1, -1);
    MEMORY[0x24269D548](v36, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v77 + 8))(v32, v78);
  v42 = v81;
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v81, *MEMORY[0x24BDCEF70], v20);
  v43 = v89;
  sub_2418A8160();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v42, v20);
  sub_2418A813C();
  v44 = sub_2418A8148();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v19, 0, 1, v44);
  sub_2418A81FC();
  v45 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
  v46 = (uint64_t)v88;
  v45(v88, v43, v94);
  type metadata accessor for StateOfMindCalendarDataSource();
  swift_allocObject();
  v47 = a1;
  v81 = v47;
  v48 = sub_24182E6B8(v47, v46);

  v49 = objc_allocWithZone(MEMORY[0x24BE4A5A8]);
  v50 = (void *)sub_2418A81CC();
  v51 = objc_msgSend(v49, sel_initWithCalendar_, v50);

  v52 = v83;
  *(_QWORD *)&v83[qword_257154498] = v51;
  v53 = v87;
  v54 = (uint64_t)v82;
  v55 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v82, v95, v91);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v79)(v54, 0, 1, v55);
  v56 = (uint64_t)v80;
  swift_beginAccess();
  sub_24187FE60(v54, v56);
  swift_endAccess();
  v78 = (uint64_t)v48;
  v98[0] = (uint64_t)v48;
  sub_241880964(0, &qword_2571544A0, MEMORY[0x24BE49CE0]);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)&v52[qword_2571544B0] = sub_2418A9AF8();
  *(_QWORD *)&v52[qword_2571544B8] = MEMORY[0x24BEE4B08];
  v57 = v90;
  sub_2418A80F4();
  v58 = v84;
  sub_2418A81A8();
  v87 = *(_QWORD *)(v53 + 8);
  ((void (*)(char *, uint64_t))v87)(v57, v55);
  (*(void (**)(char *, char *, _QWORD))(v85 + 32))(&v52[qword_2571544C0], v58, v86);

  v59 = v94;
  v45((char *)v46, v43, v94);
  sub_24172570C(0, &qword_2571544C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE49D18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2418A9B34();
  v60 = swift_allocObject();
  v86 = xmmword_2418D23E0;
  *(_OWORD *)(v60 + 16) = xmmword_2418D23E0;
  sub_2418A9B28();
  sub_24187B010();
  v61 = objc_allocWithZone((Class)sub_2418A9AEC());
  v62 = (void *)sub_2418A9AE0();
  v63 = (objc_class *)type metadata accessor for StateOfMindCalendarViewController();
  v97.receiver = v52;
  v97.super_class = v63;
  v64 = objc_msgSendSuper2(&v97, sel_initWithCollectionViewLayout_, v62);
  sub_2418A9B94();
  sub_24172159C(&qword_2571544D0, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarViewController, (uint64_t)&protocol conformance descriptor for StateOfMindCalendarViewController);
  v45((char *)v46, v43, v59);
  v65 = v64;
  sub_2418A80F4();
  v66 = (void *)sub_2418A9B58();
  v67 = v65;
  v68 = v66;
  sub_2418A9BD0();

  sub_24172570C(0, &qword_2571544D8, (uint64_t (*)(uint64_t))sub_24187FEF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = v86;
  v70 = sub_2418A834C();
  v71 = MEMORY[0x24BEBCB18];
  *(_QWORD *)(v69 + 32) = v70;
  *(_QWORD *)(v69 + 40) = v71;
  v72 = v67;
  MEMORY[0x24269C888](v69, sel_preferredContentSizeCategoryDidChange);
  swift_release();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  ((void (*)(uint64_t, uint64_t))v87)(v95, v55);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v43, v59);
  return v72;
}

double sub_24187B010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v0 = sub_2418A8340();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD5F0]), sel_initForTextStyle_, *MEMORY[0x24BEBE1F0]);
  objc_msgSend(v5, sel_scaledValueForValue_, 21.0);
  v7 = v6;

  v8 = v7 + 71.0;
  sub_2418A8328();
  v9 = sub_2418A8334();
  v10 = sub_2418AA05C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v17 = v12;
    *(_DWORD *)v11 = 136446466;
    v13 = sub_2418AA5D8();
    v16 = sub_24176024C(v13, v14, &v17);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    v16 = *(_QWORD *)&v8;
    sub_2418AA1F4();
    _os_log_impl(&dword_24171C000, v9, v10, "[%{public}s] calculated cell height: %f", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v12, -1, -1);
    MEMORY[0x24269D548](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v8;
}

id StateOfMindCalendarViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void StateOfMindCalendarViewController.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;

  v1 = &v0[qword_257154480];
  v2 = sub_2418A8100();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)&v0[qword_257154488] = 0;
  *(_QWORD *)&v0[qword_257154490] = 0;
  *(_QWORD *)&v0[qword_25715E1B8 + 8] = 0;
  swift_unknownObjectWeakInit();

  sub_2418AA380();
  __break(1u);
}

void sub_24187B318(char *a1, uint64_t a2, void *a3)
{
  char *v5;
  uint64_t v6;
  id v7;

  v5 = &a1[qword_257154480];
  v6 = sub_2418A8100();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)&a1[qword_257154488] = 0;
  *(_QWORD *)&a1[qword_257154490] = 0;
  *(_QWORD *)&a1[qword_25715E1B8 + 8] = 0;
  swift_unknownObjectWeakInit();
  v7 = a3;

  sub_2418AA380();
  __break(1u);
}

void sub_24187B3E8()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  objc_class *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t ObjCClassFromMetadata;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  Class v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  char *v73;
  void *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105[3];
  uint64_t v106;
  objc_super v107;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_24172570C(0, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v98 = (uint64_t)&v94 - v6;
  v7 = sub_2418A8100();
  v99 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, (unint64_t *)&unk_2571544F0, (uint64_t (*)(uint64_t))sub_24182CC94, v3);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v94 - v13;
  v101 = type metadata accessor for StateOfMindCalendarTitleView();
  v16 = MEMORY[0x24BDAC7A8](v101, v15);
  v102 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v103 = (uint64_t)&v94 - v19;
  v20 = sub_2418A8340();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  v25 = sub_2418A8334();
  v26 = sub_2418AA05C();
  v27 = os_log_type_enabled(v25, v26);
  v100 = v7;
  v95 = v10;
  v96 = v14;
  v97 = ObjectType;
  if (v27)
  {
    v94 = v20;
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v105[0] = v29;
    *(_DWORD *)v28 = 136446210;
    v30 = sub_2418AA5D8();
    v104 = sub_24176024C(v30, v31, v105);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v25, v26, "[%{public}s] View did load", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v29, -1, -1);
    MEMORY[0x24269D548](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v94);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  }
  v32 = (objc_class *)type metadata accessor for StateOfMindCalendarViewController();
  v107.receiver = v1;
  v107.super_class = v32;
  objc_msgSendSuper2(&v107, sel_viewDidLoad);
  objc_msgSend(v1, sel_setClearsSelectionOnViewWillAppear_, 0);
  v33 = objc_msgSend(v1, sel_collectionView);
  if (!v33)
  {
    __break(1u);
    goto LABEL_26;
  }
  v34 = v33;
  v35 = (void *)objc_opt_self();
  v36 = objc_msgSend(v35, sel_systemBackgroundColor);
  objc_msgSend(v34, sel_setBackgroundColor_, v36);

  v37 = objc_msgSend(v1, sel_collectionView);
  if (!v37)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v38 = v37;
  objc_msgSend(v37, sel_setShowsVerticalScrollIndicator_, 0);

  v39 = objc_msgSend(v1, sel_collectionView);
  if (!v39)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v40 = v39;
  v41 = (void *)sub_2418A9BC4();
  objc_msgSend(v40, sel_setDataSource_, v41);

  v42 = objc_msgSend(v1, sel_collectionView);
  if (!v42)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v43 = v42;
  if (HKUICalendarLocaleIsRightToLeft())
    v44 = 4;
  else
    v44 = 3;
  objc_msgSend(v43, sel_setSemanticContentAttribute_, v44);

  v45 = objc_msgSend(v1, sel_collectionView);
  if (!v45)
    goto LABEL_29;
  v46 = v45;
  v94 = (uint64_t)v32;
  type metadata accessor for StateOfMindCalendarDayCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v48 = (void *)sub_2418A9DB0();
  objc_msgSend(v46, sel_registerClass_forCellWithReuseIdentifier_, ObjCClassFromMetadata, v48);

  v49 = objc_msgSend(v1, sel_collectionView);
  if (!v49)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v50 = v49;
  sub_2418A9BB8();
  v51 = swift_getObjCClassFromMetadata();
  v52 = (id)*MEMORY[0x24BEBE050];
  sub_2418A9BAC();
  v53 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_, v51, v52, v53);

  v54 = objc_msgSend(v1, sel_collectionView);
  if (!v54)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v55 = v54;
  type metadata accessor for StateOfMindCalendarSpacerCell();
  v56 = swift_getObjCClassFromMetadata();
  v57 = (void *)sub_2418A9DB0();
  objc_msgSend(v55, sel_registerClass_forCellWithReuseIdentifier_, v56, v57);

  LOBYTE(v104) = 0;
  sub_2418A96C0();
  v58 = v105[1];
  v59 = (uint64_t)v102;
  *v102 = v105[0];
  *(_QWORD *)(v59 + 8) = v58;
  v60 = (uint64_t *)(v59 + *(int *)(v101 + 20));
  *v60 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  sub_241731B4C(v59, v103, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarTitleView);
  sub_24187FF8C();
  v62 = objc_allocWithZone(v61);
  v63 = (void *)sub_2418A8C7C();
  v64 = objc_msgSend(v63, sel_view);

  if (!v64)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v65 = objc_msgSend(v35, sel_clearColor);
  objc_msgSend(v64, sel_setBackgroundColor_, v65);

  v66 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v66, sel_setTitleView_, v64);

  v67 = (void *)sub_2418A9BDC();
  v68 = objc_msgSend(v1, sel_collectionView);
  if (!v68)
  {
LABEL_33:
    __break(1u);
    return;
  }
  v69 = v68;
  objc_msgSend(v68, sel_bounds);

  sub_2418A9AC8();
  v70 = objc_msgSend(v1, sel_navigationItem);
  v71 = sub_241882454();
  objc_msgSend(v70, sel__setBottomPalette_, v71);

  if (qword_25714B958 != -1)
    swift_once();
  v72 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  v106 = v94;
  v105[0] = (uint64_t)v1;
  v73 = v1;
  v74 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  v75 = v106;
  if (v106)
  {
    v76 = __swift_project_boxed_opaque_existential_1(v105, v106);
    v77 = *(_QWORD *)(v75 - 8);
    MEMORY[0x24BDAC7A8](v76, v76);
    v79 = (char *)&v94 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v77 + 16))(v79);
    v80 = sub_2418AA4D0();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v79, v75);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
  }
  else
  {
    v80 = 0;
  }
  v81 = v96;
  v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithTitle_style_target_action_, v74, 0, v80, sel_todayButtonTapped);

  swift_unknownObjectRelease();
  v83 = objc_msgSend(v73, sel_navigationItem);
  objc_msgSend(v83, sel_setLeftBarButtonItem_, v82);

  v105[0] = sub_2418A9B10();
  v84 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v85 = swift_allocObject();
  v86 = v97;
  *(_QWORD *)(v85 + 16) = v84;
  *(_QWORD *)(v85 + 24) = v86;
  sub_241880054();
  sub_24172159C(&qword_257154528, (uint64_t (*)(uint64_t))sub_241880054, MEMORY[0x24BDB9CB0]);
  sub_2418A846C();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_2418A83A0();
  swift_endAccess();
  swift_release();
  v87 = &v73[qword_257154480];
  swift_beginAccess();
  v88 = (uint64_t)v87;
  v89 = v98;
  sub_241816C3C(v88, v98, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  v91 = v99;
  v90 = v100;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v89, 1, v100) == 1)
  {
    v92 = (uint64_t)v95;
    sub_2418A80F4();
    sub_2417A7664(v89, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  else
  {
    v92 = (uint64_t)v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v95, v89, v90);
  }
  sub_24187C254(v92);
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v92, v90);
  sub_24182CC94();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v81, 0, 1, v93);
  sub_2418A9B04();
  objc_msgSend(*(id *)&v73[qword_257154498], sel_registerObserver_, v73);

}

uint64_t sub_24187BF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  void *v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  sub_24182CC94();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A8340();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x24269D5FC](a2 + 16);
  if (result)
  {
    v14 = (void *)result;
    sub_2418A8328();
    sub_2417289A8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_24182CC94);
    v15 = sub_2418A8334();
    v16 = sub_2418AA05C();
    v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      v18 = swift_slowAlloc();
      v29 = a1;
      v19 = v18;
      v28 = swift_slowAlloc();
      v32 = v28;
      *(_DWORD *)v19 = 136446466;
      v27 = v17;
      v20 = sub_2418AA5D8();
      v30 = sub_24176024C(v20, v21, &v32);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      v26 = v19 + 14;
      v30 = 0;
      v31 = 0xE000000000000000;
      sub_2418A9CFC();
      sub_2418AA35C();
      sub_2418A9E40();
      sub_2418AA35C();
      v30 = sub_24176024C(v30, v31, &v32);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))sub_24182CC94);
      _os_log_impl(&dword_24171C000, v15, (os_log_type_t)v27, "[%{public}s] Received days updated: %s", (uint8_t *)v19, 0x16u);
      v22 = v28;
      swift_arrayDestroy();
      MEMORY[0x24269D548](v22, -1, -1);
      v23 = v19;
      a1 = v29;
      MEMORY[0x24269D548](v23, -1, -1);
    }
    else
    {
      sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))sub_24182CC94);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v24 = v14;
    v25 = sub_24187F8A8(a1, (uint64_t)v24);

    sub_24187F3F4(v25);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24187C254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v18;

  v3 = sub_2418A8238();
  MEMORY[0x24BDAC7A8](v3, v4);
  v5 = sub_2418A8100();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2418A9CFC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  v15 = objc_msgSend(*(id *)(v1 + qword_257154498), sel_calendar);
  sub_2418A81D8();

  sub_2418A9CB4();
  v16 = (void *)sub_2418A9BDC();
  sub_2418A9AD4();

  sub_2418A9C78();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

void sub_24187C3C4(void *a1)
{
  id v1;

  v1 = a1;
  sub_24187B3E8();

}

id sub_24187C3F8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  objc_class *v19;
  uint64_t v20;
  id result;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;

  v1 = sub_2418A8274();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_24172570C(0, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v25 - v12;
  v14 = sub_2418A8100();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (objc_class *)type metadata accessor for StateOfMindCalendarViewController();
  v27.receiver = v0;
  v27.super_class = v19;
  objc_msgSendSuper2(&v27, sel_viewDidLayoutSubviews);
  v20 = (uint64_t)v0 + qword_257154480;
  swift_beginAccess();
  sub_241816C3C(v20, (uint64_t)v13, (unint64_t *)&qword_25714F360, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return (id)sub_2417A7664((uint64_t)v13, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  result = objc_msgSend(v0, sel_collectionView);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v22 = result;
  result = (id)sub_2418A9BC4();
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v23 = result;
  sub_2418A9B70();

  v24 = (void *)sub_2418A8250();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
  objc_msgSend(v22, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, v24, 2, 0);

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v10, 1, 1, v14);
  swift_beginAccess();
  sub_24187FE60((uint64_t)v10, v20);
  swift_endAccess();
  return (id)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

void sub_24187C688(void *a1)
{
  id v1;

  v1 = a1;
  sub_24187C3F8();

}

id sub_24187C6BC()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  uint64_t v4;

  sub_24187C748();
  result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, sel_indexPathsForVisibleItems);

    sub_2418A8274();
    v4 = sub_2418A9EB8();

    sub_24187F3F4(v4);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24187C748()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void (*v88)(void);
  uint64_t v89;
  id v90;
  void *v91;
  id v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t *v98;
  BOOL v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  unint64_t *v102;
  id v103;
  void *v104;
  void (*v105)(char *, uint64_t);
  id v106;
  char *v107;
  _QWORD *v108;
  char *v109;
  void (*v110)(uint64_t, char *, uint64_t);
  uint64_t (*v111)(uint64_t, uint64_t, uint64_t);
  char *v112;
  uint64_t v113;
  unint64_t *v114;
  _QWORD *v115;
  void (*v116)(uint64_t, char *, uint64_t);
  char *v117;
  int v118;
  char *v119;
  unint64_t *v120;
  uint64_t (*v121)(void);
  uint64_t (*v122)(uint64_t);
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  void (*v127)(char *, char *, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v130)(uint64_t);
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t);
  void (*v136)(char *, uint64_t);
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  unsigned int (*v144)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v145)(uint64_t);
  uint64_t v146;
  void (*v147)(char *, uint64_t, uint64_t);
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  char *v157;
  uint64_t v158;
  void (*v159)(char *, uint64_t);
  uint64_t v160;
  char *v161;
  char *v162;
  void (*v163)(char *, char *, uint64_t);
  void (*v164)(char *, char *, uint64_t);
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  void (*v171)(char *, uint64_t);
  uint64_t v172;
  void (*v173)(char *, uint64_t);
  uint64_t (*v174)(uint64_t);
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  void *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  void (*v203)(char *, uint64_t);
  uint64_t v204;
  void (*v205)(char *, char *, uint64_t);
  char *v206;
  uint64_t v207;
  char *v208;
  void (*v209)(char *, char *, uint64_t);
  char *v210;
  uint64_t v211;
  unint64_t v212;
  unint64_t v213;
  _QWORD *v214;
  char *v215;
  void (*v216)(void);
  void (*v217)(char *, uint64_t);

  v1 = v0;
  sub_24180E2E8();
  v3 = v2;
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v182 = (char *)&v175 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v180 = (char *)&v175 - v8;
  sub_24182CC94();
  v183 = v9;
  v181 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v175 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_24172570C(0, (unint64_t *)&unk_2571544F0, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v175 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v175 - v21;
  v23 = sub_2418A9CFC();
  v186 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v185 = (char *)&v175 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v215 = (char *)&v175 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v188 = (char *)&v175 - v32;
  MEMORY[0x24BDAC7A8](v31, v33);
  v187 = (char *)&v175 - v34;
  v35 = sub_2418A8274();
  v36 = *(_QWORD *)(v35 - 8);
  v38 = MEMORY[0x24BDAC7A8](v35, v37);
  v189 = (char *)&v175 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v191 = (char *)&v175 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v201 = (char *)&v175 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v200 = (char *)&v175 - v48;
  v50 = MEMORY[0x24BDAC7A8](v47, v49);
  v199 = (char *)&v175 - v51;
  v53 = MEMORY[0x24BDAC7A8](v50, v52);
  v198 = (char *)&v175 - v54;
  v56 = MEMORY[0x24BDAC7A8](v53, v55);
  v206 = (char *)&v175 - v57;
  MEMORY[0x24BDAC7A8](v56, v58);
  v210 = (char *)&v175 - v59;
  sub_24172570C(0, (unint64_t *)&unk_257154600, v60, v13);
  v63 = MEMORY[0x24BDAC7A8](v61, v62);
  v190 = (uint64_t)&v175 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = MEMORY[0x24BDAC7A8](v63, v65);
  v192 = (uint64_t)&v175 - v67;
  v69 = MEMORY[0x24BDAC7A8](v66, v68);
  v197 = (uint64_t)&v175 - v70;
  v72 = MEMORY[0x24BDAC7A8](v69, v71);
  v196 = (char *)&v175 - v73;
  v75 = MEMORY[0x24BDAC7A8](v72, v74);
  v195 = (uint64_t)&v175 - v76;
  v78 = MEMORY[0x24BDAC7A8](v75, v77);
  v194 = (char *)&v175 - v79;
  v81 = MEMORY[0x24BDAC7A8](v78, v80);
  v202 = (char *)&v175 - v82;
  v84 = MEMORY[0x24BDAC7A8](v81, v83);
  v86 = (char *)&v175 - v85;
  MEMORY[0x24BDAC7A8](v84, v87);
  v214 = (_QWORD *)v36;
  v88 = *(void (**)(void))(v36 + 56);
  v207 = (uint64_t)&v175 - v89;
  v88();
  v208 = v86;
  v216 = v88;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v88)(v86, 1, 1, v35);
  v90 = objc_msgSend(v1, sel_collectionView);
  if (!v90)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v91 = v90;
  v92 = objc_msgSend(v90, sel_preparedCells);

  if (!v92)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  sub_241762EFC(0, &qword_257154610);
  v93 = sub_2418A9EB8();

  v184 = v23;
  v179 = v19;
  v178 = v3;
  v177 = v22;
  v176 = v12;
  if (v93 >> 62)
    goto LABEL_41;
  v94 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  v95 = v215;
  v96 = (uint64_t)v202;
  if (v94)
  {
    v213 = v93 & 0xC000000000000001;
    v97 = 4;
    v98 = (unint64_t *)&unk_257154600;
    v193 = v1;
    v211 = v94;
    v212 = v93;
    do
    {
      if (v213)
        v100 = (void (*)(char *, uint64_t))MEMORY[0x24269CAD4](v97 - 4, v93);
      else
        v100 = (void (*)(char *, uint64_t))*(id *)(v93 + 8 * v97);
      v217 = v100;
      v101 = v97 - 3;
      if (__OFADD__(v97 - 4, 1))
      {
        __break(1u);
LABEL_41:
        swift_bridgeObjectRetain();
        v94 = sub_2418AA398();
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      v102 = v98;
      v103 = objc_msgSend(v1, sel_collectionView);
      if (!v103)
        goto LABEL_43;
      v104 = v103;
      v105 = v217;
      v106 = objc_msgSend(v103, sel_indexPathForCell_, v217);

      if (v106)
      {
        v107 = v206;
        sub_2418A825C();

        v108 = v214;
        v109 = v107;
        v110 = (void (*)(uint64_t, char *, uint64_t))v214[4];
        v110(v96, v109, v35);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v216)(v96, 0, 1, v35);
        v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v108[6];
        if (v111(v96, 1, v35) != 1)
        {
          v112 = v210;
          v110((uint64_t)v210, (char *)v96, v35);
          v113 = v195;
          v114 = v102;
          sub_241816C3C(v207, v195, v102, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
          v115 = v214;
          v116 = v110;
          v117 = v199;
          v209 = (void (*)(char *, char *, uint64_t))v214[2];
          v209(v199, v112, v35);
          v118 = v111(v113, 1, v35);
          v205 = (void (*)(char *, char *, uint64_t))v116;
          if (v118 == 1)
          {
            v119 = v198;
            v116((uint64_t)v198, v117, v35);
            v120 = v114;
            v121 = MEMORY[0x24BDCF678];
            sub_2417A7664(v113, v120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
            v122 = (uint64_t (*)(uint64_t))v121;
          }
          else
          {
            ((void (*)(char *, uint64_t))v115[1])(v117, v35);
            v119 = v198;
            v116((uint64_t)v198, (char *)v113, v35);
            v122 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678];
          }
          v123 = sub_24172159C(&qword_257154618, v122, MEMORY[0x24BDCF698]);
          v124 = v210;
          v204 = v123;
          if ((sub_2418A9D68() & 1) != 0)
            v125 = v124;
          else
            v125 = v119;
          v126 = v194;
          v127 = v209;
          v209(v194, v125, v35);
          v203 = (void (*)(char *, uint64_t))v115[1];
          v203(v119, v35);
          v128 = v207;
          sub_2417A7664(v207, (unint64_t *)&unk_257154600, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v216)(v126, 0, 1, v35);
          v129 = (uint64_t)v126;
          v130 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678];
          sub_2418809E0(v129, v128);
          v131 = v197;
          sub_241816C3C((uint64_t)v208, v197, (unint64_t *)&unk_257154600, v130);
          v132 = v201;
          v127(v201, v124, v35);
          if (v111(v131, 1, v35) == 1)
          {
            v133 = v200;
            v205(v200, v132, v35);
            v134 = v131;
            v98 = (unint64_t *)&unk_257154600;
            sub_2417A7664(v134, (unint64_t *)&unk_257154600, v130);
            v135 = v130;
            v96 = (uint64_t)v202;
            v136 = v203;
          }
          else
          {
            v136 = v203;
            v203(v132, v35);
            v133 = v200;
            v205(v200, (char *)v131, v35);
            v135 = v130;
            v96 = (uint64_t)v202;
            v98 = (unint64_t *)&unk_257154600;
          }
          v137 = v210;
          if ((sub_2418A9D74() & 1) != 0)
            v138 = v137;
          else
            v138 = v133;
          v139 = (uint64_t)v196;
          v209(v196, v138, v35);

          v136(v133, v35);
          v136(v137, v35);
          v140 = (uint64_t)v208;
          sub_2417A7664((uint64_t)v208, (unint64_t *)&unk_257154600, v135);
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v216)(v139, 0, 1, v35);
          sub_2418809E0(v139, v140);
          v1 = v193;
          goto LABEL_9;
        }
      }
      else
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v216)(v96, 1, 1, v35);
      }

      v98 = v102;
      sub_2417A7664(v96, v102, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
LABEL_9:
      ++v97;
      v93 = v212;
      v99 = v101 == v211;
      v95 = v215;
    }
    while (!v99);
  }
  swift_bridgeObjectRelease();
  v141 = v207;
  v142 = v192;
  sub_241816C3C(v207, v192, (unint64_t *)&unk_257154600, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
  v143 = v214;
  v144 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v214[6];
  if (v144(v142, 1, v35) == 1)
  {
    v145 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678];
    v146 = (uint64_t)v208;
LABEL_34:
    sub_2417A7664(v146, (unint64_t *)&unk_257154600, v145);
    v150 = v141;
LABEL_39:
    v174 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678];
    sub_2417A7664(v150, (unint64_t *)&unk_257154600, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
    sub_2417A7664(v142, (unint64_t *)&unk_257154600, v174);
    return;
  }
  v147 = (void (*)(char *, uint64_t, uint64_t))v143[4];
  v148 = v191;
  v147(v191, v142, v35);
  v149 = (uint64_t)v208;
  v142 = v190;
  sub_241816C3C((uint64_t)v208, v190, (unint64_t *)&unk_257154600, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
  if (v144(v142, 1, v35) == 1)
  {
    ((void (*)(char *, uint64_t))v143[1])(v148, v35);
    v145 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678];
    v146 = v149;
    goto LABEL_34;
  }
  v147(v189, v142, v35);
  v151 = sub_2418A9BC4();
  if (!v151)
    goto LABEL_46;
  v152 = (void *)v151;
  v153 = v187;
  sub_2418A9B64();

  v154 = sub_2418A9BC4();
  v155 = v184;
  if (v154)
  {
    v156 = (void *)v154;
    sub_2418A9B64();

    v157 = v185;
    sub_2418A9C84();
    sub_2418A9C9C();
    v158 = v186;
    v159 = *(void (**)(char *, uint64_t))(v186 + 8);
    v159(v157, v155);
    sub_24172159C((unint64_t *)&unk_257154500, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    if ((sub_2418A9D80() & 1) != 0)
    {
      v217 = v159;
      v160 = v178;
      v161 = v180;
      v162 = &v180[*(int *)(v178 + 48)];
      v163 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
      v163(v180, v153, v155);
      v164 = *(void (**)(char *, char *, uint64_t))(v158 + 32);
      v165 = v162;
      v216 = (void (*)(void))v162;
      v164(v162, v95, v155);
      v166 = v182;
      v167 = &v182[*(int *)(v160 + 48)];
      v163(v182, v161, v155);
      v163(v167, v165, v155);
      v168 = (uint64_t)v176;
      v164(v176, v166, v155);
      v217(v167, v155);
      v169 = &v166[*(int *)(v160 + 48)];
      v164(v166, v161, v155);
      v164(v169, (char *)v216, v155);
      v170 = v183;
      v164((char *)(v168 + *(int *)(v183 + 36)), v169, v155);
      v171 = v217;
      v217(v166, v155);
      v172 = (uint64_t)v177;
      sub_241731B4C(v168, (uint64_t)v177, (uint64_t (*)(_QWORD))sub_24182CC94);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v181 + 56))(v172, 0, 1, v170);
      sub_241816C3C(v172, (uint64_t)v179, (unint64_t *)&unk_2571544F0, (uint64_t (*)(uint64_t))sub_24182CC94);
      sub_2418A9B04();
      sub_2417A7664(v172, (unint64_t *)&unk_2571544F0, (uint64_t (*)(uint64_t))sub_24182CC94);
      v171(v188, v155);
      v171(v187, v155);
      v173 = (void (*)(char *, uint64_t))v214[1];
      v173(v189, v35);
      v173(v191, v35);
      v142 = v207;
      v150 = (uint64_t)v208;
      goto LABEL_39;
    }
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
LABEL_47:
  __break(1u);
}

void sub_24187D500()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  void *v17;
  _QWORD v18[3];
  uint64_t v19;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_2418A8340();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  v8 = sub_2418A8334();
  v9 = sub_2418AA05C();
  if (os_log_type_enabled(v8, v9))
  {
    v18[0] = v3;
    v10 = swift_slowAlloc();
    v18[1] = ObjectType;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v11 = 136446210;
    v13 = sub_2418AA5D8();
    v18[2] = sub_24176024C(v13, v14, &v19);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v8, v9, "[%{public}s] preferred content size changed", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v12, -1, -1);
    MEMORY[0x24269D548](v11, -1, -1);

    (*(void (**)(char *, _QWORD))(v4 + 8))(v7, v18[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  v15 = (void *)sub_2418A9BDC();
  sub_24187B010();
  sub_2418A9ABC();

  v16 = objc_msgSend(v1, sel_collectionView);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, sel_reloadData);

  }
  else
  {
    __break(1u);
  }
}

void sub_24187D70C(void *a1)
{
  id v1;

  v1 = a1;
  sub_24187D500();

}

void sub_24187D740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;

  ObjectType = swift_getObjectType();
  v0 = sub_2418A8100();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2418A8274();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2418A8340();
  v35 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  v14 = sub_2418A8334();
  v15 = sub_2418AA05C();
  if (os_log_type_enabled(v14, v15))
  {
    v31 = v5;
    v16 = swift_slowAlloc();
    v32 = v1;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v33 = v0;
    v19 = v18;
    v38 = v18;
    v30 = v6;
    *(_DWORD *)v17 = 136446210;
    v20 = sub_2418AA5D8();
    ObjectType = v10;
    v37 = sub_24176024C(v20, v21, &v38);
    v6 = v30;
    v5 = v31;
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v14, v15, "[%{public}s] scrolling to today's date", v17, 0xCu);
    swift_arrayDestroy();
    v22 = v19;
    v0 = v33;
    MEMORY[0x24269D548](v22, -1, -1);
    v23 = v17;
    v1 = v32;
    MEMORY[0x24269D548](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, ObjectType);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
  }
  v24 = objc_msgSend(v36, sel_collectionView);
  if (v24)
  {
    v25 = v24;
    v26 = sub_2418A9BC4();
    if (v26)
    {
      v27 = (void *)v26;
      sub_2418A80F4();
      sub_2418A9B70();

      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      v28 = (void *)sub_2418A8250();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      objc_msgSend(v25, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, v28, 2, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_24187DA24(void *a1)
{
  id v1;

  v1 = a1;
  sub_24187D740();

}

id StateOfMindCalendarViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void StateOfMindCalendarViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_24187DAC4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StateOfMindCalendarViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_2418A9DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void StateOfMindCalendarViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_24187DB94(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_24187DBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2417A7664(v0 + qword_257154480, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  swift_release();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_2571544C0;
  v2 = sub_2418A9CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return sub_24178B29C(v0 + qword_25715E1B8);
}

id StateOfMindCalendarViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindCalendarViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24187DCB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_2417A7664(a1 + qword_257154480, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  swift_release();
  swift_bridgeObjectRelease();
  v2 = a1 + qword_2571544C0;
  v3 = sub_2418A9CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);

  return sub_24178B29C(a1 + qword_25715E1B8);
}

void StateOfMindCalendarViewController.calendarDataSource(_:cellForItemIn:date:dayComponent:indexPath:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2418800B8(a2, a3, a4, a5);
}

id StateOfMindCalendarViewController.calendarDataSource(_:spacerCellForItemIn:indexPath:)(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = (void *)sub_2418A9DB0();
  v4 = (void *)sub_2418A8250();
  v5 = objc_msgSend(a2, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v3, v4);

  return v5;
}

uint64_t StateOfMindCalendarViewController.calendarDataSource(_:headerForSectionIn:date:startOfMonthWeekday:indexPath:)(uint64_t a1, void *a2)
{
  return sub_2418805A0(a2);
}

void sub_24187DE1C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2418800B8(a2, a3, a4, a5);
}

id sub_24187DE30(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = (void *)sub_2418A9DB0();
  v4 = (void *)sub_2418A8250();
  v5 = objc_msgSend(a2, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v3, v4);

  return v5;
}

uint64_t sub_24187DEB0(uint64_t a1, void *a2)
{
  return sub_2418805A0(a2);
}

void StateOfMindCalendarViewController.collectionView(_:willDisplay:forItemAt:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;

  type metadata accessor for StateOfMindCalendarDayCell();
  v5 = swift_dynamicCastClass();
  if (v5)
  {
    v6 = v5;
    v7 = a2;
    sub_24187DF3C(v6, a3);

  }
}

void sub_24187DF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  int v43;
  void *v44;
  id v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  id v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(uint64_t, char *, uint64_t);
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  uint64_t v71;
  void *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;

  v5 = sub_2418A8220();
  v86 = *(_QWORD *)(v5 - 8);
  v87 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v85 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A8238();
  v83 = *(_QWORD *)(v8 - 8);
  v84 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2418A8100();
  v80 = *(_QWORD *)(v12 - 8);
  v81 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v91 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_2418A9CFC();
  v90 = *(_QWORD *)(v88 - 8);
  v16 = MEMORY[0x24BDAC7A8](v88, v15);
  v79 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v78 = (char *)&v72 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v89 = (uint64_t)&v72 - v23;
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v72 - v25;
  sub_24172570C(0, &qword_257153998, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarDay, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v92 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v31);
  v33 = (char *)&v72 - v32;
  v34 = type metadata accessor for StateOfMindCalendarDay();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34, v36);
  v38 = (void **)((char *)&v72 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = a2;
  v39 = v2;
  v40 = sub_24187F61C();
  if (v40)
  {
    v41 = (void *)v40;
    v77 = a1;
    v42 = a1 + OBJC_IVAR____TtC14MentalHealthUI26StateOfMindCalendarDayCell_day;
    swift_beginAccess();
    sub_241816C3C(v42, (uint64_t)v33, &qword_257153998, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarDay);
    v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34);
    v76 = v34;
    v75 = v35;
    if (v43 == 1)
    {
      sub_2417A7664((uint64_t)v33, &qword_257153998, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarDay);
      v72 = v41;
      objc_msgSend(v41, sel_dayIndex);
      v73 = v26;
      sub_2418A9CC0();
      v74 = v39;
      v44 = *(void **)(v39 + qword_257154498);
      v45 = objc_msgSend(v44, sel_calendar);
      sub_2418A81D8();

      sub_2418A9CF0();
      v46 = v84;
      v47 = *(void (**)(char *, uint64_t))(v83 + 8);
      v47(v11, v84);
      v48 = objc_msgSend(v44, sel_calendar);
      sub_2418A81D8();

      v50 = v85;
      v49 = v86;
      v51 = v87;
      (*(void (**)(char *, _QWORD, uint64_t))(v86 + 104))(v85, *MEMORY[0x24BDCF220], v87);
      v52 = v74;
      v53 = sub_2418A822C();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
      v54 = v46;
      v55 = v73;
      v47(v11, v54);
      v56 = *(void (**)(uint64_t, char *, uint64_t))(v90 + 16);
      v57 = v88;
      v56(v89, v55, v88);
      v58 = sub_24187A4CC();
      v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v53);
      v60 = objc_msgSend(v58, sel_stringFromNumber_, v59);

      if (!v60)
      {
        __break(1u);
        return;
      }
      v61 = sub_2418A9DE0();
      v63 = v62;

      v56((uint64_t)v78, v55, v57);
      v64 = (char *)(v52 + qword_2571544C0);
      swift_beginAccess();
      v56((uint64_t)v79, v64, v57);
      LOBYTE(v64) = sub_2418A82A4();
      v65 = sub_2418A8268();
      sub_241805454(v89, v61, v63, (char)v64, v65, (uint64_t)v38);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v91, v81);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v55, v57);
      v66 = (uint64_t)v92;
      v41 = v72;
    }
    else
    {
      sub_241731B4C((uint64_t)v33, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay);
      v66 = (uint64_t)v92;
    }
    v67 = objc_msgSend(v41, sel_dailyStateOfMind);
    v68 = *v38;
    v69 = v67;

    *v38 = v67;
    sub_241804EEC();

    v70 = objc_msgSend(v41, sel_momentaryStatesOfMind);
    sub_241762EFC(0, (unint64_t *)&qword_2571545F0);
    v71 = sub_2418A9EB8();

    swift_bridgeObjectRelease();
    v38[1] = (void *)v71;
    sub_241804EEC();
    sub_2417289A8((uint64_t)v38, v66, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v66, 0, 1, v76);
    sub_2418586A4(v66);

    sub_24172588C((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay);
  }
}

uint64_t sub_24187E580(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v18;

  v7 = sub_2418A8274();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A825C();
  type metadata accessor for StateOfMindCalendarDayCell();
  v12 = swift_dynamicCastClass();
  if (v12)
  {
    v13 = v12;
    v14 = a3;
    v15 = a4;
    v16 = a1;
    sub_24187DF3C(v13, (uint64_t)v11);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

void StateOfMindCalendarViewController.collectionView(_:didSelectItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  _BOOL4 v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t ObjectType;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106[3];
  uint64_t v107;

  v3 = v2;
  v104 = a1;
  ObjectType = swift_getObjectType();
  v5 = sub_2418A8340();
  v102 = *(_QWORD *)(v5 - 8);
  v103 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v98 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v90 = (char *)&v88 - v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  v92 = (char *)&v88 - v13;
  v96 = sub_2418A8238();
  v94 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96, v14);
  v16 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v17, v18);
  v95 = (char *)&v88 - v19;
  v99 = sub_2418A8100();
  v93 = *(_QWORD *)(v99 - 8);
  v21 = MEMORY[0x24BDAC7A8](v99, v20);
  v89 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v26 = (char *)&v88 - v25;
  MEMORY[0x24BDAC7A8](v24, v27);
  v91 = (char *)&v88 - v28;
  v29 = sub_2418A9CFC();
  v30 = *(_QWORD *)(v29 - 8);
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v34 = (char *)&v88 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v32, v35);
  v38 = (char *)&v88 - v37;
  MEMORY[0x24BDAC7A8](v36, v39);
  v41 = (char *)&v88 - v40;
  v42 = sub_2418A9BC4();
  if (v42)
  {
    v43 = (void *)v42;
    v105 = a2;
    sub_2418A9B64();

    v100 = v30;
    v44 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    v44(v38, v41, v29);
    v45 = v3 + qword_2571544C0;
    swift_beginAccess();
    v101 = v29;
    v44(v34, (char *)v45, v29);
    sub_2418A82A4();
    if ((sub_2418A8298() & 1) != 0)
    {
      v46 = v98;
      sub_2418A8328();
      v47 = sub_2418A8334();
      v48 = sub_2418AA05C();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        v106[0] = v50;
        *(_DWORD *)v49 = 136446210;
        v51 = sub_2418AA5D8();
        v107 = sub_24176024C(v51, v52, v106);
        sub_2418AA1F4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24171C000, v47, v48, "[%{public}s] Ignoring date tapped in the future", v49, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24269D548](v50, -1, -1);
        MEMORY[0x24269D548](v49, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v102 + 8))(v46, v103);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v41, v101);
      v53 = v104;
LABEL_17:
      v87 = (void *)sub_2418A8250();
      objc_msgSend(v53, sel_deselectItemAtIndexPath_animated_, v87, 1);

      return;
    }
    v54 = objc_msgSend(*(id *)(v3 + qword_257154498), sel_calendar);
    sub_2418A81D8();

    v55 = sub_2418A9BC4();
    if (v55)
    {
      v56 = (void *)v55;
      sub_2418A9B88();

      v57 = (uint64_t)v95;
      sub_2418A81B4();
      v58 = v93;
      v59 = *(void (**)(char *, uint64_t))(v93 + 8);
      v60 = v99;
      v59(v26, v99);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v16, v96);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v57, 1, v60) == 1)
      {
        sub_2417A7664(v57, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
        v61 = v90;
        sub_2418A8328();
        v62 = sub_2418A8334();
        v63 = sub_2418AA044();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = (uint8_t *)swift_slowAlloc();
          v65 = swift_slowAlloc();
          v106[0] = v65;
          *(_DWORD *)v64 = 136446210;
          v66 = sub_2418AA5D8();
          v107 = sub_24176024C(v66, v67, v106);
          sub_2418AA1F4();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24171C000, v62, v63, "[%{public}s] Unable to determine tapped date", v64, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24269D548](v65, -1, -1);
          MEMORY[0x24269D548](v64, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v102 + 8))(v61, v103);
        (*(void (**)(char *, uint64_t))(v100 + 8))(v41, v101);
        v53 = v104;
      }
      else
      {
        v96 = v3;
        v98 = v41;
        v68 = v91;
        (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v91, v57, v60);
        v69 = v92;
        sub_2418A8328();
        v70 = v89;
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v89, v68, v60);
        v71 = sub_2418A8334();
        v72 = sub_2418AA05C();
        v73 = os_log_type_enabled(v71, v72);
        v88 = v59;
        if (v73)
        {
          v74 = swift_slowAlloc();
          v95 = (char *)swift_slowAlloc();
          v106[0] = (uint64_t)v95;
          *(_DWORD *)v74 = 136446466;
          v75 = sub_2418AA5D8();
          v107 = sub_24176024C(v75, v76, v106);
          sub_2418AA1F4();
          swift_bridgeObjectRelease();
          *(_WORD *)(v74 + 12) = 2082;
          sub_24172159C((unint64_t *)&qword_257154530, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
          v77 = v99;
          v78 = sub_2418AA4AC();
          v107 = sub_24176024C(v78, v79, v106);
          sub_2418AA1F4();
          swift_bridgeObjectRelease();
          v59(v70, v77);
          _os_log_impl(&dword_24171C000, v71, v72, "[%{public}s] Tapped cell for date: %{public}s", (uint8_t *)v74, 0x16u);
          v80 = v95;
          swift_arrayDestroy();
          v68 = v91;
          MEMORY[0x24269D548](v80, -1, -1);
          MEMORY[0x24269D548](v74, -1, -1);

          (*(void (**)(char *, uint64_t))(v102 + 8))(v92, v103);
        }
        else
        {
          v59(v70, v60);

          (*(void (**)(char *, uint64_t))(v102 + 8))(v69, v103);
        }
        v53 = v104;
        v82 = v100;
        v81 = v101;
        v83 = v96;
        v84 = v96 + qword_25715E1B8;
        swift_beginAccess();
        if (MEMORY[0x24269D5FC](v84))
        {
          v85 = *(_QWORD *)(v84 + 8);
          v86 = swift_getObjectType();
          (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v85 + 8))(v83, v68, v86, v85);
          swift_unknownObjectRelease();
        }
        v88(v68, v99);
        (*(void (**)(char *, uint64_t))(v82 + 8))(v98, v81);
      }
      goto LABEL_17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_24187EF2C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v13;

  v5 = sub_2418A8274();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A825C();
  v10 = a3;
  v11 = a1;
  StateOfMindCalendarViewController.collectionView(_:didSelectItemAt:)(v10, (uint64_t)v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

void StateOfMindCalendarViewController.dateCacheDidUpdate(_:on:)(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  id v29;
  char *v30;
  char *v31;
  char *v32;
  id v33;
  void *v34;
  uint8_t *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t ObjectType;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[3];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v4 = sub_2418A8100();
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A8238();
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v43 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2418A9CFC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v44 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2418A8340();
  v41 = *(_QWORD *)(v15 - 8);
  v42 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  v19 = sub_2418A8334();
  v20 = sub_2418AA05C();
  if (os_log_type_enabled(v19, v20))
  {
    v37 = v12;
    v21 = swift_slowAlloc();
    v36 = a1;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v38 = v4;
    v24 = v23;
    v48[0] = v23;
    v39 = v2;
    *(_DWORD *)v22 = 136446210;
    v35 = v22 + 4;
    v25 = sub_2418AA5D8();
    v47 = sub_24176024C(v25, v26, v48);
    v2 = v39;
    sub_2418AA1F4();
    v12 = v37;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v19, v20, "[%{public}s] date cache did update", v22, 0xCu);
    swift_arrayDestroy();
    v27 = v24;
    v4 = v38;
    MEMORY[0x24269D548](v27, -1, -1);
    v28 = v22;
    a1 = v36;
    MEMORY[0x24269D548](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v42);
  v29 = objc_msgSend(a1, sel_calendar);
  v30 = v43;
  sub_2418A81D8();

  sub_2418A80F4();
  v31 = v44;
  sub_2418A81A8();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v8);
  v32 = &v2[qword_2571544C0];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v32, v31, v11);
  swift_endAccess();
  v33 = objc_msgSend(v2, sel_collectionView);
  if (v33)
  {
    v34 = v33;
    objc_msgSend(v33, sel_reloadData);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24187F348(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v13;

  v5 = sub_2418A7DC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A7DAC();
  v10 = a3;
  v11 = a1;
  StateOfMindCalendarViewController.dateCacheDidUpdate(_:on:)(v10);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

id sub_24187F3F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  id result;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  id v24;

  v2 = sub_2418A8274();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, (unint64_t *)&unk_257154600, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v21 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  v21 = a1;
  if (v12)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v22 = *(_QWORD *)(v3 + 72);
    v23 = v14;
    swift_bridgeObjectRetain();
    while (1)
    {
      v23(v11, v13, v2);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v15(v11, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
      result = objc_msgSend(v24, sel_collectionView, v21);
      if (!result)
      {
        __break(1u);
        return result;
      }
      v17 = result;
      v18 = (void *)sub_2418A8250();
      v19 = objc_msgSend(v17, sel_cellForItemAtIndexPath_, v18);

      if (v19)
      {
        type metadata accessor for StateOfMindCalendarDayCell();
        v20 = swift_dynamicCastClass();
        if (v20)
          sub_24187DF3C(v20, (uint64_t)v6);

      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      v13 += v22;
      if (!--v12)
        goto LABEL_11;
    }
  }
  else
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain();
LABEL_11:
    v15(v11, 1, 1, v2);
  }
  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_24187F61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  sub_241880964(0, &qword_2571545F8, MEMORY[0x24BE49CB8]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v3);
  v5 = (uint64_t *)((char *)&v14 - v4);
  v6 = sub_2418A9CFC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_2418A9BC4();
  if (result)
  {
    v12 = (void *)result;
    sub_2418A9B64();

    sub_2418A9B1C();
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v2 + 88))(v5, v1) == *MEMORY[0x24BE49CA0])
    {
      (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v5, v1);
      v13 = *v5;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v5, v1);
      v13 = 0;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_24187F778(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  void *v5;
  void *v6;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v6 = v5;
  if (!a2)
  {
    v10 = 0;
    v11 = a4[3];
    if (v11)
      goto LABEL_3;
LABEL_5:
    v16 = 0;
    goto LABEL_6;
  }
  v10 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  v11 = a4[3];
  if (!v11)
    goto LABEL_5;
LABEL_3:
  v12 = __swift_project_boxed_opaque_existential_1(a4, v11);
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v12, v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  v16 = sub_2418AA4D0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
LABEL_6:
  v17 = objc_msgSend(v6, sel_initWithTitle_style_target_action_, v10, a3, v16, a5);

  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_24187F8A8(uint64_t a1, uint64_t a2)
{
  void (*v2)(char *, uint64_t *);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  void (*v41)(char *, uint64_t *);
  uint64_t *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t *);
  uint64_t *v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t *);
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t *);
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t *v66;
  char v67;
  char *v68;
  _QWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void (*v74)(char *, uint64_t, uint64_t *);
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t *);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v86 = a2;
  sub_24180E2E8();
  v81 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v80 = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v79 = (char *)v69 - v9;
  sub_24182CC94();
  v11 = v10;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v78 = (char *)v69 - v18;
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)v69 - v20;
  v22 = sub_2418A8274();
  v84 = *(_QWORD *)(v22 - 8);
  v85 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v83 = (void (*)(char *, uint64_t *))((char *)v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = sub_2418A9CFC();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25, MEMORY[0x24BDD2488]);
  v29 = (char *)v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v27, v30);
  v77 = (char *)v69 - v32;
  MEMORY[0x24BDAC7A8](v31, v33);
  v35 = (char *)v69 - v34;
  v89 = v11;
  v36 = a1 + *(int *)(v11 + 36);
  v38 = sub_24172159C((unint64_t *)&unk_2571526A0, v37, MEMORY[0x24BDD24C0]);
  v82 = v36;
  v76 = v38;
  sub_2418AA218();
  v39 = v93;
  result = MEMORY[0x24BEE4AF8];
  if (v93)
  {
    v75 = v29;
    v41 = v2;
    v93 = MEMORY[0x24BEE4AF8];
    v42 = &v93;
    v43 = v39;
    sub_24183D6E0(0, v39 & ~(v39 >> 63), 0);
    v44 = *(void (**)(char *, uint64_t, uint64_t *))(v26 + 16);
    v90 = (uint64_t *)v35;
    v74 = v44;
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v44)(v35, a1, v25);
    if ((v43 & 0x8000000000000000) == 0)
    {
      v69[1] = v2;
      v45 = v90;
      v70 = a1;
      v72 = v21;
      v73 = v15;
      v71 = v26;
      while (v43)
      {
        v87 = v43;
        result = sub_2418A9BC4();
        if (!result)
          goto LABEL_21;
        v46 = (void *)result;
        v41 = v83;
        sub_2418A9B7C();

        v47 = v93;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24183D6E0(0, *(_QWORD *)(v47 + 16) + 1, 1);
          v47 = v93;
        }
        v49 = *(_QWORD *)(v47 + 16);
        v48 = *(_QWORD *)(v47 + 24);
        v45 = (uint64_t *)(v49 + 1);
        if (v49 >= v48 >> 1)
        {
          sub_24183D6E0(v48 > 1, v49 + 1, 1);
          v47 = v93;
        }
        *(_QWORD *)(v47 + 16) = v45;
        (*(void (**)(unint64_t, void (*)(char *, uint64_t *), uint64_t))(v84 + 32))(v47+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(_QWORD *)(v84 + 72) * v49, v41, v85);
        v93 = v47;
        v50 = sub_24172159C((unint64_t *)&unk_257154500, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
        v51 = v82;
        v42 = (uint64_t *)v25;
        v91 = v50;
        if ((sub_2418A9D80() & 1) == 0)
          goto LABEL_17;
        v52 = v81;
        v53 = v79;
        v54 = &v79[*(int *)(v81 + 48)];
        v55 = v25;
        v42 = (uint64_t *)v25;
        v56 = v74;
        v74(v79, a1, (uint64_t *)v55);
        v88 = v54;
        v56(v54, v51, v42);
        v57 = v80;
        v58 = &v80[*(int *)(v52 + 48)];
        v56(v80, (uint64_t)v53, v42);
        v56(v58, (uint64_t)v54, v42);
        v59 = v71;
        v60 = *(void (**)(char *, char *, uint64_t *))(v71 + 32);
        v61 = (uint64_t)v78;
        v60(v78, v57, v42);
        v41 = *(void (**)(char *, uint64_t *))(v59 + 8);
        v41(v58, v42);
        v62 = &v57[*(int *)(v52 + 48)];
        v63 = v53;
        v15 = v73;
        v60(v57, v63, v42);
        v60(v62, v88, v42);
        v60((char *)(v61 + *(int *)(v89 + 36)), v62, v42);
        v64 = v57;
        v65 = (uint64_t)v72;
        v41(v64, v42);
        sub_241731B4C(v61, v65, (uint64_t (*)(_QWORD))sub_24182CC94);
        v66 = v90;
        LOBYTE(v62) = sub_2418A9D80();
        v45 = (uint64_t *)v75;
        v56(v75, (uint64_t)v66, v42);
        sub_2417289A8(v65, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_24182CC94);
        if ((v62 & 1) == 0)
          goto LABEL_18;
        v67 = sub_2418A9D68();
        sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_24182CC94);
        result = ((uint64_t (*)(uint64_t *, uint64_t *))v41)(v45, v42);
        if ((v67 & 1) == 0)
          goto LABEL_19;
        v25 = (uint64_t)v42;
        sub_24172588C(v65, (uint64_t (*)(_QWORD))sub_24182CC94);
        v92 = 1;
        v68 = v77;
        v45 = v90;
        v42 = v90;
        sub_2418AA20C();
        v41((char *)v45, (uint64_t *)v25);
        v60((char *)v45, v68, (uint64_t *)v25);
        v43 = v87 - 1;
        a1 = v70;
        if (v87 == 1)
        {
          v41((char *)v45, (uint64_t *)v25);
          return v93;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_24182CC94);
      result = ((uint64_t (*)(uint64_t *, uint64_t *))v41)(v45, v42);
LABEL_19:
      __break(1u);
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_24187FE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for StateOfMindCalendarViewController()
{
  uint64_t result;

  result = qword_257154538;
  if (!qword_257154538)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_24187FEF8()
{
  unint64_t result;

  result = qword_2571544E0;
  if (!qword_2571544E0)
  {
    sub_24187FF30();
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2571544E0);
  }
  return result;
}

unint64_t sub_24187FF30()
{
  unint64_t result;

  result = qword_2571544E8;
  if (!qword_2571544E8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2571544E8);
  }
  return result;
}

void sub_24187FF8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154510)
  {
    type metadata accessor for StateOfMindCalendarTitleView();
    sub_24172159C(&qword_257154518, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarTitleView, (uint64_t)&unk_2418D2598);
    v0 = sub_2418A8C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154510);
  }
}

uint64_t sub_241880004()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_241880028()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24188004C(uint64_t a1)
{
  uint64_t v1;

  return sub_24187BF34(a1, *(_QWORD *)(v1 + 16));
}

void sub_241880054()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154520)
  {
    sub_24182CC94();
    v0 = sub_2418A83C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154520);
  }
}

void sub_2418800B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  void (*v35)(char *, char *, uint64_t);
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  char *v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;

  v5 = v4;
  v74 = a3;
  v69 = a1;
  sub_24172570C(0, &qword_257153998, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarDay, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7, v8);
  v71 = (char *)&v63 - v9;
  sub_241880964(0, &qword_2571545F8, MEMORY[0x24BE49CB8]);
  v11 = v10;
  v73 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v72 = (void **)((char *)&v63 - v13);
  v70 = type metadata accessor for StateOfMindCalendarDay();
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70, v14);
  v16 = (void **)((char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_2418A9CFC();
  v18 = *(_QWORD *)(v17 - 8);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)&v63 - v25;
  v28 = MEMORY[0x24BDAC7A8](v24, v27);
  v75 = (char *)&v63 - v29;
  MEMORY[0x24BDAC7A8](v28, v30);
  v32 = (char *)&v63 - v31;
  v33 = sub_2418A9BC4();
  if (!v33)
  {
    __break(1u);
    goto LABEL_11;
  }
  v34 = (void *)v33;
  v66 = v11;
  sub_2418A9B64();

  v64 = v18;
  v65 = a4;
  v35 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v35(v75, v32, v17);
  v67 = v5;
  v36 = sub_24187A4CC();
  v37 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  v38 = objc_msgSend(v37, sel_initWithInteger_, v74);
  v39 = objc_msgSend(v36, sel_stringFromNumber_, v38);

  if (!v39)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v40 = sub_2418A9DE0();
  v42 = v41;

  v35(v26, v32, v17);
  v43 = (char *)(v67 + qword_2571544C0);
  swift_beginAccess();
  v74 = v17;
  v35(v22, v43, v17);
  v44 = sub_2418A82A4();
  v45 = sub_2418A8268();
  sub_241805454((uint64_t)v75, v40, v42, v44, v45, (uint64_t)v16);
  v46 = v72;
  v75 = v32;
  sub_2418A9B1C();
  v47 = v73;
  v48 = v66;
  if ((*(unsigned int (**)(void **, uint64_t))(v73 + 88))(v46, v66) == *MEMORY[0x24BE49CA0])
  {
    (*(void (**)(void **, uint64_t))(v47 + 96))(v46, v48);
    v49 = *v46;
  }
  else
  {
    (*(void (**)(void **, uint64_t))(v47 + 8))(v46, v48);
    v49 = 0;
  }
  v51 = v70;
  v50 = (uint64_t)v71;
  v52 = v64;
  v53 = v68;
  v54 = objc_msgSend(v49, sel_dailyStateOfMind);
  v55 = *v16;
  v56 = v54;

  *v16 = v54;
  sub_241804EEC();

  if (v49)
  {
    v57 = objc_msgSend(v49, sel_momentaryStatesOfMind);
    sub_241762EFC(0, (unint64_t *)&qword_2571545F0);
    v58 = sub_2418A9EB8();

  }
  else
  {
    v58 = MEMORY[0x24BEE4AF8];
  }
  v59 = v69;
  swift_bridgeObjectRelease();
  v16[1] = (void *)v58;
  sub_241804EEC();
  v60 = (void *)sub_2418A9DB0();
  v61 = (void *)sub_2418A8250();
  v62 = objc_msgSend(v59, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v60, v61);

  type metadata accessor for StateOfMindCalendarDayCell();
  swift_dynamicCastClassUnconditional();
  sub_2417289A8((uint64_t)v16, v50, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v51);
  sub_2418586A4(v50);

  sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindCalendarDay);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v75, v74);
}

uint64_t sub_2418805A0(void *a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;

  v2 = (void *)*MEMORY[0x24BEBE050];
  sub_2418A9BB8();
  v3 = v2;
  sub_2418A9BAC();
  v4 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_2418A8250();
  v6 = objc_msgSend(a1, sel_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_, v3, v4, v5);

  v7 = swift_dynamicCastClassUnconditional();
  v8 = sub_24187A53C();
  v9 = (void *)sub_2418A80AC();
  v10 = objc_msgSend(v8, sel_stringFromDate_, v9);

  sub_2418A9DE0();
  sub_2418A9BA0();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2418806F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + qword_25715E1B8;
  swift_beginAccess();
  result = MEMORY[0x24269D5FC](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_241880750(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + qword_25715E1B8;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of StateOfMindCalendarViewControllerDelegate.calendarView(_:didSelectDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

void sub_2418807B8()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_2418A9CFC();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t method lookup function for StateOfMindCalendarViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateOfMindCalendarViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for StateOfMindCalendarViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 184))();
}

uint64_t dispatch thunk of StateOfMindCalendarViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for StateOfMindCalendarViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 192))();
}

uint64_t dispatch thunk of StateOfMindCalendarViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for StateOfMindCalendarViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 200))();
}

uint64_t dispatch thunk of StateOfMindCalendarViewController.__allocating_init(healthStore:dateToFocusOn:verticalSizeClass:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for StateOfMindCalendarViewController + v0 + 208))();
}

uint64_t dispatch thunk of StateOfMindCalendarViewController.preferredContentSizeCategoryDidChange()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for StateOfMindCalendarViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 216))();
}

uint64_t sub_24188095C()
{
  return type metadata accessor for StateOfMindCalendarViewController();
}

void sub_241880964(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for StateOfMindCalendarDataSource();
    v7 = sub_24172159C(&qword_2571544A8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarDataSource, (uint64_t)&unk_2418D8BE0);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_2418809E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, (unint64_t *)&unk_257154600, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241880A3C(void *a1, void *a2, char a3)
{
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v6 = objc_msgSend((id)objc_opt_self(), sel_stateOfMindType);
  v7 = objc_msgSend(a1, sel_displayTypeController);
  v8 = objc_msgSend(v7, sel_displayTypeForObjectType_, v6);

  if (v8)
  {
    sub_2418A9AB0();
    v9 = objc_msgSend(a1, sel_unitController);
    v10 = (void *)MEMORY[0x24269C2AC](v8, v9);

    if ((a3 & 1) != 0)
    {
      v11 = objc_msgSend(v10, sel_yAxis);

      if (v11)
      {
        v12 = objc_msgSend(v8, sel_localization);
        v13 = objc_msgSend(v12, sel_shortenedDisplayName);

        if (!v13)
        {
          sub_2418A9DE0();
          v13 = (id)sub_2418A9DB0();
          swift_bridgeObjectRelease();
        }
        objc_msgSend((id)objc_opt_self(), sel_setStackedSeriesLegend_title_, v10, v13);

      }
    }
    v14 = objc_allocWithZone((Class)type metadata accessor for StateOfMindChartTapOutFormatter());
    v15 = v10;
    v16 = v8;
    v17 = objc_msgSend(v14, sel_init);
    v18 = objc_msgSend(v16, sel_sampleType);
    v19 = objc_msgSend(v18, sel_code);

    objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A6A8]), sel_initWithGraphSeries_baseDisplayType_valueFormatter_dataTypeCode_, v15, v16, v17, v19);
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A2E8]), sel_init);
    v21 = sub_241880CD8(v16, a1, a2);
    objc_msgSend(v20, sel_setChartCache_, v21);
    objc_msgSend(v15, sel_setDataSource_, v20);

  }
  else
  {
    __break(1u);
  }
}

id sub_241880CD8(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;

  v6 = sub_2418A8340();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v50 - v13;
  v15 = objc_msgSend(a2, sel_chartDataCacheController);
  v16 = objc_msgSend(v15, sel_findCustomCachesForDisplayType_, a1);

  if (v16)
  {
    sub_241762EFC(0, &qword_257154628);
    v17 = sub_2418A9EB8();

    v18 = a3;
    v19 = sub_2418812EC(v17, a3);
    swift_bridgeObjectRelease();

    if (v19)
    {
      v20 = v19;
      sub_2418A8328();
      v21 = v18;
      v22 = sub_2418A8334();
      v23 = sub_2418AA05C();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v52 = v7;
        v25 = v24;
        v26 = swift_slowAlloc();
        v55 = v26;
        *(_DWORD *)v25 = 136446467;
        v27 = sub_2418AA5D8();
        v51 = v6;
        v54 = sub_24176024C(v27, v28, &v55);
        sub_2418AA1F4();
        swift_bridgeObjectRelease();
        *(_WORD *)(v25 + 12) = 2081;
        v54 = (uint64_t)a3;
        sub_241881288();
        v29 = v21;
        v30 = sub_2418A9DF8();
        v54 = sub_24176024C(v30, v31, &v55);
        sub_2418AA1F4();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24171C000, v22, v23, "[%{public}s] Found cache for state of mind predicate: %{private}s", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24269D548](v26, -1, -1);
        MEMORY[0x24269D548](v25, -1, -1);

        (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v51);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      }
      return v20;
    }
    v53 = a1;
  }
  else
  {
    v53 = a1;
    v18 = a3;
  }
  sub_2418A8328();
  v32 = v18;
  v33 = sub_2418A8334();
  v34 = sub_2418AA05C();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    v55 = v50;
    *(_DWORD *)v35 = 136446467;
    v51 = v6;
    v36 = sub_2418AA5D8();
    v52 = v7;
    v54 = sub_24176024C(v36, v37, &v55);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2081;
    v54 = (uint64_t)a3;
    sub_241881288();
    v38 = a2;
    v39 = v32;
    v40 = sub_2418A9DF8();
    v54 = sub_24176024C(v40, v41, &v55);
    sub_2418AA1F4();

    a2 = v38;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v33, v34, "[%{public}s] Creating cache for state of mind predicate: %{private}s", (uint8_t *)v35, 0x16u);
    v42 = v50;
    swift_arrayDestroy();
    MEMORY[0x24269D548](v42, -1, -1);
    MEMORY[0x24269D548](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v51);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }
  v43 = v53;
  v44 = objc_msgSend(a2, sel_healthStore);
  objc_allocWithZone((Class)sub_2418A9C00());
  v45 = v32;
  v46 = (void *)sub_2418A9BE8();
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A2F8]), sel_init);
  objc_msgSend(v20, sel_setDataSource_, v46);
  v47 = objc_msgSend((id)objc_opt_self(), sel_sharedOperationManager);
  objc_msgSend(v20, sel_setOperationManager_, v47);

  v48 = objc_msgSend(a2, sel_chartDataCacheController);
  objc_msgSend(v48, sel_addCustomChartCache_forDisplayType_, v20, v43);

  return v20;
}

void sub_241881288()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154620)
  {
    sub_241762EFC(255, &qword_257152DD0);
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154620);
  }
}

void *sub_2418812EC(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  char v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v3 = v2;
  v4 = a1;
  if (a1 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    v21 = sub_2418AA398();
    if (v21)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v21 = v5;
    if (v5)
    {
LABEL_3:
      v19 = v3;
      v20 = v4;
      v22 = v4 & 0xC000000000000001;
      v6 = 4;
      v3 = v21;
      do
      {
        if (v22)
          v7 = (id)MEMORY[0x24269CAD4](v6 - 4, v4);
        else
          v7 = *(id *)(v4 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_28;
        }
        v10 = objc_msgSend(v7, sel_dataSource);
        sub_2418A9C00();
        if (swift_dynamicCastClass())
        {
          v11 = (void *)sub_2418A9BF4();
          if (v11)
          {
            v12 = v11;
            v13 = objc_msgSend(v11, sel_predicate);

            if (!a2)
            {
              if (!v13)
                goto LABEL_25;
LABEL_21:

              swift_unknownObjectRelease();
              goto LABEL_5;
            }
          }
          else
          {
            if (!a2)
            {
LABEL_25:
              swift_unknownObjectRelease();
LABEL_26:
              swift_bridgeObjectRelease();
              return v8;
            }
            v13 = 0;
          }
          v14 = objc_msgSend(a2, sel_predicate, v19);
          v15 = v14;
          if (v13)
          {
            if (!v14)
              goto LABEL_21;
            sub_241762EFC(0, &qword_257154630);
            v16 = v13;
            v4 = v20;
            v17 = sub_2418AA1DC();

            v3 = v21;
            swift_unknownObjectRelease();
            if ((v17 & 1) != 0)
              goto LABEL_26;

          }
          else
          {
            swift_unknownObjectRelease();
            if (!v15)
              goto LABEL_26;

          }
        }
        else
        {

          swift_unknownObjectRelease();
        }
LABEL_5:
        ++v6;
      }
      while (v9 != v3);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void Color.init(valenceClassification:variant:colorScheme:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  sub_24188201C();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  v12 = &v10[*(int *)(v8 + 64)];
  *(_QWORD *)v10 = a1;
  v10[8] = v11;
  v13 = sub_2418A84E4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, a3, v13);
  __asm { BR              X9 }
}

uint64_t sub_2418815F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGColorRef GenericRGB;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v2, v3);
  if (v5 == *MEMORY[0x24BDEB400])
  {
    switch(v1)
    {
      case 1:
        v6 = 0.623529412;
        v7 = 0.588235294;
        v8 = 0.733333333;
        break;
      case 2:
        v6 = 0.666666667;
        v7 = 0.709803922;
        goto LABEL_9;
      case 3:
        v6 = 0.68627451;
        v7 = 0.752941176;
LABEL_9:
        v8 = 0.878431373;
        break;
      case 5:
        v6 = 0.682352941;
        v7 = 0.788235294;
        v8 = 0.501960784;
        break;
      case 6:
        v6 = 0.956862745;
        v7 = 0.819607843;
        v8 = 0.619607843;
        break;
      case 7:
        v6 = 0.996078431;
        v7 = 0.737254902;
        v8 = 0.392156863;
        break;
      default:
        goto LABEL_6;
    }
  }
  else if (v5 == *MEMORY[0x24BDEB3F0])
  {
    v6 = 0.0;
    v7 = 0.0;
    v8 = 0.0;
  }
  else
  {
LABEL_6:
    v6 = 0.741176471;
    v7 = 0.82745098;
    v8 = 0.839215686;
  }
  GenericRGB = CGColorCreateGenericRGB(v6, v7, v8, 1.0);
  v10 = MEMORY[0x24269BD9C](GenericRGB);
  v11 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v11(v0, v3);
  v11(v2, v3);
  return v10;
}

void Color.init(valence:variant:colorScheme:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_2418A84E4();
  MEMORY[0x24BDAC7A8](v2, v3);
  __asm { BR              X10 }
}

uint64_t sub_241881EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x24BDEB3F0], v1);
  sub_2418A84D8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  swift_getKeyPath();
  sub_241810204(fmax(fmin(v4, 1.0), -1.0));
  v6 = v5;
  swift_release();
  v7 = MEMORY[0x24269BD9C](v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return v7;
}

void sub_24188201C()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_257154638)
  {
    type metadata accessor for ValenceClassification(255);
    sub_2418A84E4();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_257154638);
  }
}

CGColorRef sub_241882090@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result;

  result = sub_24180ECD4();
  *a1 = result;
  return result;
}

BOOL static ValenceClassificationColorVariant.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ValenceClassificationColorVariant.hash(into:)()
{
  return sub_2418AA578();
}

uint64_t ValenceClassificationColorVariant.hashValue.getter()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

CGColorRef sub_241882158@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result;

  result = sub_24180EDE0();
  *a1 = result;
  return result;
}

CGColorRef sub_241882190@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result;

  result = sub_24180ECD4();
  *a1 = result;
  return result;
}

unint64_t sub_2418821CC()
{
  unint64_t result;

  result = qword_257154640;
  if (!qword_257154640)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for ValenceClassificationColorVariant, &type metadata for ValenceClassificationColorVariant);
    atomic_store(result, (unint64_t *)&qword_257154640);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ValenceClassificationColorVariant(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24188225C + 4 * byte_2418DA879[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_241882290 + 4 * byte_2418DA874[v4]))();
}

uint64_t sub_241882290(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241882298(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2418822A0);
  return result;
}

uint64_t sub_2418822AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2418822B4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2418822B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2418822C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ValenceClassificationColorVariant()
{
  return &type metadata for ValenceClassificationColorVariant;
}

uint64_t sub_2418822DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2418822E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  sub_2417790D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_2418A87B4();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_24188235C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241882368(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_2417790D8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_2418A87B4();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for IntroPhaseSpecs()
{
  uint64_t result;

  result = qword_2571546A0;
  if (!qword_2571546A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241882420()
{
  sub_2418A8A24();
  type metadata accessor for IntroPhaseSpecs();
  return sub_2418A89A0();
}

id sub_241882454()
{
  double v0;
  id v1;
  id v2;
  id v3;

  objc_msgSend((id)objc_opt_self(), sel_preferredHeight);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A930]), sel_initWithFrame_shouldSupportRTL_, HKUICalendarLocaleIsRightToLeft(), 0.0, 0.0, 0.0, v0);
  objc_msgSend(v1, sel_layoutMargins);
  objc_msgSend(v1, sel_setLayoutMargins_);
  v2 = v1;
  objc_msgSend(v2, sel_layoutMargins);
  objc_msgSend(v2, sel_setLayoutMargins_);

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDCA8]), sel_initWithContentView_, v2);
  return v3;
}

uint64_t *sub_24188253C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v81 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      v80 = v8;
      v79 = v6;
      if (v81(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v13, v14, v15);
      *((_BYTE *)a1 + v11[6]) = *((_BYTE *)a2 + v11[6]);
      v17 = v11[7];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_2418A84E4();
      v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v78(v18, v19, v20);
      v21 = v11[8];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      if (v81((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v22, v23, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v7);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      if (v81((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v27, v28, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v7);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      if (v81((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v32, v33, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v7);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      if (v81((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v37, v38, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v7);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      if (v81((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v42, v43, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v7);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      if (v81((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v80;
      }
      else
      {
        v50 = v80;
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v47, v48, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v7);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      if (v81((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      if (v81((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      if (v81((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      if (v81((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      if (v81((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      v6 = v79;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241882EF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v34)(uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_2418A8EB0();
    v3 = *(_QWORD *)(v2 - 8);
    v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    v5 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v6 = a1 + v5[5];
    v7 = sub_2418A87B4();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v8(v6, v7);
    v9 = a1 + v5[7];
    v10 = sub_2418A84E4();
    v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v34(v9, v10);
    v11 = a1 + v5[8];
    if (!v4(v11, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v2);
    v12 = _s6StylesV8TimelineVMa(0);
    v8(v11 + *(int *)(v12 + 20), v7);
    v13 = a1 + v5[9];
    if (!v4(v13, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v2);
    v14 = _s6StylesV6NoDataVMa(0);
    v8(v13 + *(int *)(v14 + 20), v7);
    v15 = a1 + v5[10];
    if (!v4(v15, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
    v16 = _s6StylesV11PlaceholderVMa(0);
    v8(v15 + *(int *)(v16 + 20), v7);
    v17 = a1 + v5[11];
    if (!v4(v17, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v2);
    v18 = _s6StylesV6SymbolVMa(0);
    v8(v17 + *(int *)(v18 + 20), v7);
    v19 = a1 + v5[12];
    if (!v4(v19, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    v20 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v8(v19 + *(int *)(v20 + 20), v7);
    v34(v19 + *(int *)(v20 + 28), v10);
    v21 = a1 + v5[13];
    if (!v4(v21, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v2);
    v22 = _s6StylesV5EmptyVMa(0);
    v8(v21 + *(int *)(v22 + 20), v7);
    v23 = a1 + v5[14];
    if (!v4(v23, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v23, v2);
    v24 = _s6StylesV5DailyVMa(0);
    v8(v23 + *(int *)(v24 + 20), v7);
    v25 = a1 + v5[15];
    if (!v4(v25, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v25, v2);
    v26 = _s6StylesV9MomentaryVMa(0);
    v8(v25 + *(int *)(v26 + 20), v7);
    v27 = a1 + v5[16];
    if (!v4(v27, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v2);
    v28 = _s6StylesV6HeaderVMa(0);
    v8(v27 + *(int *)(v28 + 20), v7);
    v29 = a1 + v5[17];
    if (!v4(v29, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v29, v2);
    v30 = _s6StylesV11ChartButtonVMa(0);
    v8(v29 + *(int *)(v30 + 20), v7);
    v31 = a1 + v5[18];
    if (!v4(v31, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v31, v2);
    v32 = _s6StylesV15LogButtonFooterVMa(0);
    v8(v31 + *(int *)(v32 + 20), v7);
  }
  else
  {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_241883324(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(_QWORD *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v79 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
    v78 = v7;
    if (v79(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v76(v16, v17, v18);
    v19 = v9[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v79((_QWORD *)((char *)a2 + v19), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v77 = a3;
    if (v79((_QWORD *)((char *)a2 + v24), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v79((_QWORD *)((char *)a2 + v29), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v30, 0, 1, v6);
    }
    v33 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    v34 = v9[11];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v79((_QWORD *)((char *)a2 + v34), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v35, 0, 1, v6);
    }
    v38 = _s6StylesV6SymbolVMa(0);
    v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    v39 = v9[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    if (v79((_QWORD *)((char *)a2 + v39), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v40, v41, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v40, 0, 1, v6);
    }
    v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v76(&v40[v43[7]], &v41[v43[7]], v18);
    v44 = v9[13];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v79((_QWORD *)((char *)a2 + v44), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v78;
    }
    else
    {
      v48 = v78;
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v45, v46, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v45, 0, 1, v6);
    }
    v49 = _s6StylesV5EmptyVMa(0);
    v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    v50 = v9[14];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    if (v79((_QWORD *)((char *)a2 + v50), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    v54 = _s6StylesV5DailyVMa(0);
    v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v9[15];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v79((_QWORD *)((char *)a2 + v55), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v77;
    v59 = _s6StylesV9MomentaryVMa(0);
    v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    v60 = v9[16];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    if (v79((_QWORD *)((char *)a2 + v60), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    v64 = _s6StylesV6HeaderVMa(0);
    v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    v65 = v9[17];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    if (v79((_QWORD *)((char *)a2 + v65), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    v69 = _s6StylesV11ChartButtonVMa(0);
    v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    v70 = v9[18];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    if (v79((_QWORD *)((char *)a2 + v70), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    v74 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_241883CAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(_QWORD *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1, (uint64_t)&qword_25714BFE8, (uint64_t)type metadata accessor for StateOfMindTimeline.Styles, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v80 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48);
      v78 = a3;
      v79 = v8;
      if (v80(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2418A87B4();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      v15(v12, v13, v14);
      *((_BYTE *)a1 + v10[6]) = *((_BYTE *)a2 + v10[6]);
      v16 = v10[7];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_2418A84E4();
      v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v77(v17, v18, v19);
      v20 = v10[8];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      if (v80((_QWORD *)((char *)a2 + v20), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v21, v22, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v21, 0, 1, v7);
      }
      v24 = _s6StylesV8TimelineVMa(0);
      v15(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      v25 = v10[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      if (v80((_QWORD *)((char *)a2 + v25), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v26, v27, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v26, 0, 1, v7);
      }
      v29 = _s6StylesV6NoDataVMa(0);
      v15(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      v30 = v10[10];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      if (v80((_QWORD *)((char *)a2 + v30), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v31, v32, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v31, 0, 1, v7);
      }
      v34 = _s6StylesV11PlaceholderVMa(0);
      v15(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v14);
      v35 = v10[11];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      if (v80((_QWORD *)((char *)a2 + v35), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v36, v37, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v36, 0, 1, v7);
      }
      v39 = _s6StylesV6SymbolVMa(0);
      v15(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v14);
      v40 = v10[12];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      if (v80((_QWORD *)((char *)a2 + v40), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v41, v42, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v41, 0, 1, v7);
      }
      v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v15(&v41[v44[5]], &v42[v44[5]], v14);
      v41[v44[6]] = v42[v44[6]];
      v77(&v41[v44[7]], &v42[v44[7]], v19);
      v45 = v10[13];
      v46 = (char *)a1 + v45;
      v47 = (char *)a2 + v45;
      if (v80((_QWORD *)((char *)a2 + v45), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        v49 = v79;
      }
      else
      {
        v49 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v46, v47, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v46, 0, 1, v7);
      }
      v50 = _s6StylesV5EmptyVMa(0);
      v15(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v14);
      v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
      v51 = v10[14];
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      if (v80((_QWORD *)((char *)a2 + v51), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v52, v53, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v7);
      }
      v55 = _s6StylesV5DailyVMa(0);
      v15(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v14);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      v56 = v10[15];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      if (v80((_QWORD *)((char *)a2 + v56), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v57, v58, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v7);
      }
      v60 = _s6StylesV9MomentaryVMa(0);
      v15(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v14);
      v61 = v10[16];
      v62 = (char *)a1 + v61;
      v63 = (char *)a2 + v61;
      if (v80((_QWORD *)((char *)a2 + v61), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v62, v63, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v7);
      }
      v65 = _s6StylesV6HeaderVMa(0);
      v15(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v14);
      v66 = v10[17];
      v67 = (char *)a1 + v66;
      v68 = (char *)a2 + v66;
      if (v80((_QWORD *)((char *)a2 + v66), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v67, v68, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v7);
      }
      v70 = _s6StylesV11ChartButtonVMa(0);
      v15(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v14);
      v71 = v10[18];
      v72 = (char *)a1 + v71;
      v73 = (char *)a2 + v71;
      if (v80((_QWORD *)((char *)a2 + v71), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v72, v73, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v7);
      }
      v75 = _s6StylesV15LogButtonFooterVMa(0);
      v15(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v14);
      a3 = v78;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_241884668(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    v80 = v9;
    if (v81(a2, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2418A87B4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    v17 = v11[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_2418A84E4();
    v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
    v78(v18, v19, v20);
    v21 = v11[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (v81(&a2[v21], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v22, v23, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v8);
    }
    v25 = _s6StylesV8TimelineVMa(0);
    v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    v26 = v11[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v79 = a3;
    if (v81(&a2[v26], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v27, v28, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v8);
    }
    v30 = _s6StylesV6NoDataVMa(0);
    v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    v31 = v11[10];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (v81(&a2[v31], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v32, v33, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v8);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    v36 = v11[11];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if (v81(&a2[v36], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v37, v38, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v8);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    v41 = v11[12];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v81(&a2[v41], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v42, v43, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v8);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v16(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v78(&v42[v45[7]], &v43[v45[7]], v20);
    v46 = v11[13];
    v47 = &a1[v46];
    v48 = &a2[v46];
    if (v81(&a2[v46], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = v80;
    }
    else
    {
      v50 = v80;
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v47, v48, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v8);
    }
    v51 = _s6StylesV5EmptyVMa(0);
    v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    v52 = v11[14];
    v53 = &a1[v52];
    v54 = &a2[v52];
    if (v81(&a2[v52], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    v56 = _s6StylesV5DailyVMa(0);
    v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = v11[15];
    v58 = &a1[v57];
    v59 = &a2[v57];
    if (v81(&a2[v57], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v79;
    v61 = _s6StylesV9MomentaryVMa(0);
    v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    v62 = v11[16];
    v63 = &a1[v62];
    v64 = &a2[v62];
    if (v81(&a2[v62], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    v66 = _s6StylesV6HeaderVMa(0);
    v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    v67 = v11[17];
    v68 = &a1[v67];
    v69 = &a2[v67];
    if (v81(&a2[v67], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    v71 = _s6StylesV11ChartButtonVMa(0);
    v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    v72 = v11[18];
    v73 = &a1[v72];
    v74 = &a2[v72];
    if (v81(&a2[v72], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    v76 = _s6StylesV15LogButtonFooterVMa(0);
    v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_241884FE8(char *a1, char *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1, (uint64_t)&qword_25714BFE8, (uint64_t)type metadata accessor for StateOfMindTimeline.Styles, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A8EB0();
      v10 = *(_QWORD *)(v9 - 8);
      v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      v80 = a3;
      v81 = v10;
      if (v82(a2, 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v13 = v12[5];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_2418A87B4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v17(v14, v15, v16);
      a1[v12[6]] = a2[v12[6]];
      v18 = v12[7];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = sub_2418A84E4();
      v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
      v79(v19, v20, v21);
      v22 = v12[8];
      v23 = &a1[v22];
      v24 = &a2[v22];
      if (v82(&a2[v22], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v23, v24, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v23, 0, 1, v9);
      }
      v26 = _s6StylesV8TimelineVMa(0);
      v17(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      v27 = v12[9];
      v28 = &a1[v27];
      v29 = &a2[v27];
      if (v82(&a2[v27], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v28, v29, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v28, 0, 1, v9);
      }
      v31 = _s6StylesV6NoDataVMa(0);
      v17(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      v32 = v12[10];
      v33 = &a1[v32];
      v34 = &a2[v32];
      if (v82(&a2[v32], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v33, v34, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v33, 0, 1, v9);
      }
      v36 = _s6StylesV11PlaceholderVMa(0);
      v17(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v16);
      v37 = v12[11];
      v38 = &a1[v37];
      v39 = &a2[v37];
      if (v82(&a2[v37], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v38, v39, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v38, 0, 1, v9);
      }
      v41 = _s6StylesV6SymbolVMa(0);
      v17(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v16);
      v42 = v12[12];
      v43 = &a1[v42];
      v44 = &a2[v42];
      if (v82(&a2[v42], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v43, v44, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v43, 0, 1, v9);
      }
      v46 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v17(&v43[v46[5]], &v44[v46[5]], v16);
      v43[v46[6]] = v44[v46[6]];
      v79(&v43[v46[7]], &v44[v46[7]], v21);
      v47 = v12[13];
      v48 = &a1[v47];
      v49 = &a2[v47];
      if (v82(&a2[v47], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        v51 = v81;
      }
      else
      {
        v51 = v81;
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v48, v49, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v48, 0, 1, v9);
      }
      v52 = _s6StylesV5EmptyVMa(0);
      v17(&v48[*(int *)(v52 + 20)], &v49[*(int *)(v52 + 20)], v16);
      v48[*(int *)(v52 + 24)] = v49[*(int *)(v52 + 24)];
      v53 = v12[14];
      v54 = &a1[v53];
      v55 = &a2[v53];
      if (v82(&a2[v53], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v54, v55, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v9);
      }
      v57 = _s6StylesV5DailyVMa(0);
      v17(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      v58 = v12[15];
      v59 = &a1[v58];
      v60 = &a2[v58];
      if (v82(&a2[v58], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v59, v60, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v59, 0, 1, v9);
      }
      v62 = _s6StylesV9MomentaryVMa(0);
      v17(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v16);
      v63 = v12[16];
      v64 = &a1[v63];
      v65 = &a2[v63];
      if (v82(&a2[v63], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v64, v65, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v64, 0, 1, v9);
      }
      v67 = _s6StylesV6HeaderVMa(0);
      v17(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v16);
      v68 = v12[17];
      v69 = &a1[v68];
      v70 = &a2[v68];
      if (v82(&a2[v68], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v69, v70, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v69, 0, 1, v9);
      }
      v72 = _s6StylesV11ChartButtonVMa(0);
      v17(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v16);
      v73 = v12[18];
      v74 = &a1[v73];
      v75 = &a2[v73];
      if (v82(&a2[v73], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v74, v75, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v74, 0, 1, v9);
      }
      v77 = _s6StylesV15LogButtonFooterVMa(0);
      v17(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v16);
      swift_storeEnumTagMultiPayload();
      a3 = v80;
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241885998()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2418859A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_241885A38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_241885A44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
}

uint64_t _s17EntryDayEmptyViewVMa()
{
  uint64_t result;

  result = qword_257154730;
  if (!qword_257154730)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241885B10()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241885B9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241885BAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[6];

  v2 = v1;
  v32[1] = a1;
  v3 = sub_2418A8F7C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241862E50();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_257153C28, v12);
  v14 = v13;
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v32 - v16;
  sub_241886758(0);
  v19 = v18;
  v32[0] = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = sub_2418A8C58();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  sub_24188687C();
  sub_241885ECC(v2, &v11[*(int *)(v23 + 44)]);
  v24 = sub_2418A9960();
  sub_24185F3F0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v17, 0.0, 1, INFINITY, 0, v24, v25);
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))sub_241862E50);
  sub_2418A8F64();
  v26 = sub_2418867E4();
  sub_2418A942C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  sub_241784BA4((uint64_t)v17, (uint64_t)&qword_257153C28, (uint64_t)sub_241862E50, MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD))sub_241721CBC);
  if (qword_25714B958 != -1)
    swift_once();
  v27 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v28 = sub_2418A7EFC();
  v30 = v29;
  swift_bridgeObjectRelease();

  v32[4] = v28;
  v32[5] = v30;
  v32[2] = v14;
  v32[3] = v26;
  swift_getOpaqueTypeConformance2();
  sub_241721040();
  sub_2418A93FC();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v32[0] + 8))(v22, v19);
}

uint64_t sub_241885ECC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  uint64_t *v40;
  char *v41;
  __int128 v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t KeyPath;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  char v113;

  v104 = a2;
  v96 = sub_2418A91E0();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96, v3);
  v94 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241773440(0, &qword_257153C18, (void (*)(uint64_t))sub_241728808);
  MEMORY[0x24BDAC7A8](v5, v6);
  v101 = (char *)&v90 - v7;
  sub_241862F80();
  v100 = v8;
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v103 = (uint64_t)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v102 = (uint64_t)&v90 - v13;
  v98 = (char *)_s6StylesV5EmptyVMa(0);
  MEMORY[0x24BDAC7A8](v98, v14);
  v16 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v18 = MEMORY[0x24BDAC7A8](v92, v17);
  v97 = (uint64_t)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v90 - v21;
  v23 = _s21StateOfMindSymbolViewVMa();
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (uint64_t *)((char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241721CBC(0, &qword_25714C3F8, v27);
  v93 = v28;
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v99 = (uint64_t)&v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v35 = (char *)&v90 - v34;
  MEMORY[0x24BDAC7A8](v33, v36);
  v38 = (char *)&v90 - v37;
  *v26 = swift_getKeyPath();
  v39 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v40 = (uint64_t *)((char *)v26 + *(int *)(v23 + 20));
  *v40 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v39);
  swift_storeEnumTagMultiPayload();
  *((_BYTE *)v26 + *(int *)(v23 + 24)) = 0;
  sub_241860D60((uint64_t)v22);
  sub_2417289A8((uint64_t)&v22[*(int *)(v92 + 52)], (uint64_t)v16, _s6StylesV5EmptyVMa);
  sub_24172588C((uint64_t)v22, type metadata accessor for StateOfMindTimeline.Styles);
  sub_24172588C((uint64_t)v16, _s6StylesV5EmptyVMa);
  sub_2418A9960();
  sub_2418A861C();
  sub_2417289A8((uint64_t)v26, (uint64_t)v35, (uint64_t (*)(_QWORD))_s21StateOfMindSymbolViewVMa);
  v41 = &v35[*(int *)(v93 + 36)];
  v42 = v106;
  *(_OWORD *)v41 = v105;
  *((_OWORD *)v41 + 1) = v42;
  *((_OWORD *)v41 + 2) = v107;
  sub_24172588C((uint64_t)v26, (uint64_t (*)(_QWORD))_s21StateOfMindSymbolViewVMa);
  v98 = v38;
  sub_241886904((uint64_t)v35, (uint64_t)v38);
  if (qword_25714B958 != -1)
    swift_once();
  v43 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v44 = sub_2418A7EFC();
  v46 = v45;
  swift_bridgeObjectRelease();

  v108 = v44;
  v109 = v46;
  sub_241721040();
  v47 = sub_2418A92D0();
  v49 = v48;
  v93 = v50;
  LOBYTE(v43) = v51 & 1;
  v52 = v97;
  sub_241860D60(v97);
  sub_24172588C(v52, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A91BC();
  sub_2418A9198();
  sub_2418A91D4();
  swift_release();
  v53 = v95;
  v54 = v94;
  v55 = v96;
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v94, *MEMORY[0x24BDF17C8], v96);
  sub_2418A91F8();
  v91 = a1;
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
  v56 = sub_2418A9294();
  v58 = v57;
  v96 = v59;
  LOBYTE(v53) = v60 & 1;
  sub_2417289EC(v47, v49, (char)v43);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241860D60(v52);
  sub_24172588C(v52, type metadata accessor for StateOfMindTimeline.Styles);
  v61 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  v108 = MEMORY[0x24269BDB4](v61);
  v62 = sub_2418A9270();
  v64 = v63;
  v66 = v65;
  LOBYTE(v49) = v67 & 1;
  sub_2417289EC(v56, v58, v53);
  swift_release();
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v108 = v62;
  v109 = v64;
  v110 = v49;
  v111 = v66;
  v112 = KeyPath;
  v113 = 1;
  v69 = _s17EntryDayEmptyViewVMa();
  v70 = (uint64_t)v101;
  sub_2417472BC(*(_QWORD **)(v91 + *(int *)(v69 + 20)), 0x7974706D45, 0xE500000000000000);
  sub_2417289EC(v62, v64, v49);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v58) = sub_2418A90CC();
  sub_241860D60(v52);
  sub_24172588C(v52, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A84A8();
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v78 = v77;
  v79 = v103;
  sub_241886968(v70, v103);
  v80 = v79 + *(int *)(v100 + 36);
  *(_BYTE *)v80 = v58;
  *(_QWORD *)(v80 + 8) = v72;
  *(_QWORD *)(v80 + 16) = v74;
  *(_QWORD *)(v80 + 24) = v76;
  *(_QWORD *)(v80 + 32) = v78;
  *(_BYTE *)(v80 + 40) = 0;
  sub_2418869BC(v70);
  v81 = v102;
  sub_241886A08(v79, v102);
  v82 = (uint64_t)v98;
  v83 = v99;
  sub_241886A4C((uint64_t)v98, v99);
  sub_2417289A8(v81, v79, (uint64_t (*)(_QWORD))sub_241862F80);
  v84 = v104;
  *v104 = 0;
  *((_BYTE *)v84 + 8) = 1;
  sub_241862EE4(0);
  v86 = v85;
  sub_241886A4C(v83, (uint64_t)v84 + *(int *)(v85 + 48));
  sub_2417289A8(v79, (uint64_t)v84 + *(int *)(v86 + 64), (uint64_t (*)(_QWORD))sub_241862F80);
  v87 = (char *)v84 + *(int *)(v86 + 80);
  *(_QWORD *)v87 = 0;
  v87[8] = 1;
  sub_24172588C(v81, (uint64_t (*)(_QWORD))sub_241862F80);
  v88 = MEMORY[0x24BDEBEF8];
  sub_241784BA4(v82, (uint64_t)&qword_25714C3F8, (uint64_t)_s21StateOfMindSymbolViewVMa, MEMORY[0x24BDEBEF8], (uint64_t (*)(_QWORD))sub_241721CBC);
  sub_24172588C(v79, (uint64_t (*)(_QWORD))sub_241862F80);
  return sub_241784BA4(v83, (uint64_t)&qword_25714C3F8, (uint64_t)_s21StateOfMindSymbolViewVMa, v88, (uint64_t (*)(_QWORD))sub_241721CBC);
}

void sub_241886758(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_257154768)
  {
    sub_241721CBC(255, &qword_257153C28, (void (*)(uint64_t))sub_241862E50);
    v5[0] = v2;
    v5[1] = sub_2418867E4();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2F10], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257154768);
  }
}

unint64_t sub_2418867E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257154770;
  if (!qword_257154770)
  {
    sub_241721CBC(255, &qword_257153C28, (void (*)(uint64_t))sub_241862E50);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_257154778, (uint64_t (*)(uint64_t))sub_241862E50, MEMORY[0x24BDF4700]);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257154770);
  }
  return result;
}

void sub_24188687C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154780)
  {
    sub_24172570C(255, &qword_257153C00, (uint64_t (*)(uint64_t))sub_241862EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154780);
  }
}

uint64_t sub_241886904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241721CBC(0, &qword_25714C3F8, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241886968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241773440(0, &qword_257153C18, (void (*)(uint64_t))sub_241728808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2418869BC(uint64_t a1)
{
  uint64_t v2;

  sub_241773440(0, &qword_257153C18, (void (*)(uint64_t))sub_241728808);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241886A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241862F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241886A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241721CBC(0, &qword_25714C3F8, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_241886AAC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_257154788;
  if (!qword_257154788)
  {
    sub_241773440(255, &qword_257154790, sub_241886758);
    v2 = v1;
    sub_241721CBC(255, &qword_257153C28, (void (*)(uint64_t))sub_241862E50);
    v4[2] = v3;
    v4[3] = sub_2418867E4();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257154788);
  }
  return result;
}

uint64_t destroy for AssessmentsSettingsSection(uint64_t a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for AssessmentsSettingsSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  v5 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AssessmentsSettingsSection(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AssessmentsSettingsSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AssessmentsSettingsSection()
{
  return &type metadata for AssessmentsSettingsSection;
}

uint64_t destroy for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t a1)
{
  swift_release();

  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  v6 = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentsPeriodicPromptedAssessmentsSection()
{
  return &type metadata for AssessmentsPeriodicPromptedAssessmentsSection;
}

uint64_t sub_241886F88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241886F98()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v10;
  _QWORD *v11;
  __int128 v12;

  v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v1 = swift_bridgeObjectRetain();
  sub_241773CC4(v1);
  v12 = *v0;
  swift_retain();
  v2 = sub_2418276A0();
  sub_2417D81F0((uint64_t)&v12);
  v3 = v11;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_2418038FC(0, v11[2] + 1, 1, v11);
  v5 = v3[2];
  v4 = v3[3];
  if (v5 >= v4 >> 1)
    v3 = sub_2418038FC((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
  v3[2] = v5 + 1;
  v3[v5 + 4] = v2;
  v6 = swift_bridgeObjectRetain();
  v7 = sub_24188FB08(v6);
  swift_bridgeObjectRelease();
  v8 = sub_2417610B4(v7);
  swift_bridgeObjectRelease();
  v10 = v8;
  swift_retain();
  sub_24188D6A8((uint64_t *)&v10);
  swift_bridgeObjectRelease();
  swift_release();
  return (uint64_t)v10;
}

uint64_t sub_2418870D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  sub_2417935B8();
  MEMORY[0x24BDAC7A8](v0, v1);
  v2 = sub_2418872C4();
  v4 = v3;
  v6 = v5 & 1;
  sub_2417739BC((uint64_t)&unk_2511ACB08);
  v7 = MEMORY[0x24BEE0D00];
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_24175D120((unint64_t *)&qword_2543915D8, (unint64_t *)&qword_2543915D0, v7, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_2417289EC(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_24188F298(0);
  sub_24172159C(&qword_257154848, (uint64_t (*)(uint64_t))sub_24188F298, MEMORY[0x24BDF5428]);
  sub_2417EAD48();
  return sub_2418A98DC();
}

uint64_t sub_2418872C4()
{
  __int128 *v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  __int128 v4;

  v4 = *v0;
  swift_retain();
  if (((sub_2418265F0() & 1) != 0 || (sub_2418265F0() & 1) != 0)
    && (sub_2418265F0() & 1) != 0)
  {
    sub_2418265F0();
  }
  sub_2417D81F0((uint64_t)&v4);
  sub_2418A8BC8();
  type metadata accessor for MentalHealthUIRepresentative();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_2418A92C4();
}

uint64_t sub_241887460@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  void *v91;
  void *v92;
  char *v93;
  id v94;
  unsigned __int8 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  _OWORD *v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD v124[2];
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t);
  void (*v130)(char *, char *, uint64_t);
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _OWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  __int128 v158;
  uint64_t v159;
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;

  v153 = a2;
  sub_24188F630(0);
  v146 = v3;
  v144 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v145 = (char *)v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v142 = (char *)v124 - v9;
  MEMORY[0x24BDAC7A8](v8, v10);
  v143 = (char *)v124 - v11;
  sub_24188F474();
  v133 = v12;
  v132 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v131 = (char *)v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24188F460(0);
  v134 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v135 = (char *)v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241773440(0, &qword_257154800, v18);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v141 = (char *)v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v23);
  v151 = (uint64_t)v124 - v24;
  sub_24172570C(0, &qword_2571547E8, (uint64_t (*)(uint64_t))sub_24188F3C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v152 = (uint64_t)v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v29);
  v149 = (uint64_t)v124 - v30;
  sub_2417EACE8();
  v32 = v31;
  v148 = *(_QWORD *)(v31 - 8);
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v136 = (char *)v124 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34, v36);
  v38 = (char *)v124 - v37;
  sub_2417EAC6C();
  v154 = v39;
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v138 = (char *)v124 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41, v43);
  v45 = (char *)v124 - v44;
  sub_24188F338(0);
  v140 = v46;
  v48 = MEMORY[0x24BDAC7A8](v46, v47);
  v139 = (char *)v124 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x24BDAC7A8](v48, v50);
  v156 = (uint64_t)v124 - v52;
  MEMORY[0x24BDAC7A8](v51, v53);
  v155 = (uint64_t)v124 - v54;
  v55 = *a1;
  v56 = a1[1];
  v57 = type metadata accessor for AssessmentsSettingsModel();
  v58 = sub_24172159C(qword_25714F650, (uint64_t (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel, (uint64_t)&protocol conformance descriptor for AssessmentsSettingsModel);
  v125 = v55;
  v124[1] = v57;
  sub_2418A876C();
  swift_getKeyPath();
  v126 = v58;
  sub_2418A8778();
  swift_release();
  swift_release();
  v150 = a1;
  v157 = a1;
  sub_2417935B8();
  v60 = v59;
  v61 = sub_2417EAD48();
  v128 = v60;
  v127 = v61;
  sub_2418A97C8();
  v62 = *(_QWORD *)(v56 + 16);
  swift_retain();
  LOBYTE(v55) = sub_2418265F0();
  swift_release();
  KeyPath = swift_getKeyPath();
  v64 = swift_allocObject();
  *(_BYTE *)(v64 + 16) = (v55 & 1) == 0;
  v65 = v148;
  v130 = *(void (**)(char *, char *, uint64_t))(v148 + 16);
  v130(v45, v38, v32);
  v66 = (uint64_t *)&v45[*(int *)(v154 + 36)];
  *v66 = KeyPath;
  v66[1] = (uint64_t)sub_241751224;
  v66[2] = v64;
  v67 = *(void (**)(char *, uint64_t))(v65 + 8);
  v137 = v32;
  v129 = v67;
  v67(v38, v32);
  *(_QWORD *)&v160 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511ACB58);
  v68 = MEMORY[0x24BEE0D00];
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v70 = v69;
  v147 = sub_24175D120((unint64_t *)&qword_2543915D8, (unint64_t *)&qword_2543915D0, v68, MEMORY[0x24BEE12B0]);
  v148 = v70;
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v71 = sub_2417EADC8();
  v72 = v156;
  v73 = v56;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_24172588C((uint64_t)v45, (uint64_t (*)(_QWORD))sub_2417EAC6C);
  sub_241731B4C(v72, v155, (uint64_t (*)(_QWORD))sub_24188F338);
  swift_retain();
  LOBYTE(v65) = sub_241826764();
  swift_release();
  if ((v65 & 1) != 0)
  {
    v124[0] = v71;
    if (qword_25714B958 != -1)
      swift_once();
    v74 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v75 = sub_2418A7EFC();
    v77 = v76;
    swift_bridgeObjectRelease();

    v162 = v75;
    v163 = v77;
    sub_2418A876C();
    swift_getKeyPath();
    sub_2418A8778();
    swift_release();
    v78 = swift_release();
    v158 = v160;
    v159 = v161;
    MEMORY[0x24BDAC7A8](v78, v79);
    v80 = v150;
    sub_24188F504();
    sub_24188F5D0();
    sub_241721040();
    v81 = v131;
    sub_2418A9780();
    swift_retain();
    LOBYTE(v75) = sub_2418265F0();
    swift_release();
    v82 = swift_getKeyPath();
    v83 = swift_allocObject();
    v126 = v73;
    v84 = 1;
    *(_BYTE *)(v83 + 16) = (v75 & 1) == 0;
    v85 = v132;
    v86 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
    v125 = v62;
    v87 = (uint64_t)v135;
    v88 = v133;
    v86(v135, v81, v133);
    v89 = (uint64_t *)(v87 + *(int *)(v134 + 36));
    *v89 = v82;
    v89[1] = (uint64_t)sub_24175DE5C;
    v89[2] = v83;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v81, v88);
    *(_QWORD *)&v160 = &unk_2511AB450;
    sub_2417739BC((uint64_t)&unk_2511ACBA8);
    sub_2418A9D50();
    swift_bridgeObjectRelease();
    sub_241728434(&qword_257154850, (uint64_t (*)(uint64_t))sub_24188F460, sub_24188F800, (uint64_t (*)(void))sub_24173E43C);
    v90 = (uint64_t)v141;
    sub_2418A9450();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_24172588C(v87, (uint64_t (*)(_QWORD))sub_24188F460);
    sub_24188F81C(v90, v151);
    v91 = (void *)*((_QWORD *)v80 + 3);
    type metadata accessor for NotificationSettingsModel();
    sub_24172159C((unint64_t *)&qword_25714D020, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsModel, (uint64_t)&protocol conformance descriptor for NotificationSettingsModel);
    v92 = (void *)sub_2418A876C();
    swift_getKeyPath();
    sub_2418A8778();
    swift_release();

    MEMORY[0x24BDAC7A8](v160, *((_QWORD *)&v160 + 1));
    v93 = v136;
    sub_2418A97C8();
    swift_getKeyPath();
    swift_getKeyPath();
    v94 = v91;
    sub_2418A8418();

    swift_release();
    swift_release();
    if ((v160 & 1) == 0)
    {
      swift_retain();
      v95 = sub_2418265F0();
      swift_release();
      v84 = v95 ^ 1;
    }
    v96 = swift_getKeyPath();
    v97 = swift_allocObject();
    *(_BYTE *)(v97 + 16) = v84 & 1;
    v98 = (uint64_t)v138;
    v99 = v137;
    v130(v138, v93, v137);
    v100 = (uint64_t *)(v98 + *(int *)(v154 + 36));
    *v100 = v96;
    v100[1] = (uint64_t)sub_24175DE5C;
    v100[2] = v97;
    v129(v93, v99);
    *(_QWORD *)&v160 = &unk_2511AB450;
    sub_2417739BC((uint64_t)&unk_2511ACBF8);
    sub_2418A9D50();
    swift_bridgeObjectRelease();
    v101 = (uint64_t)v139;
    sub_2418A9450();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_24172588C(v98, (uint64_t (*)(_QWORD))sub_2417EAC6C);
    v102 = (_OWORD *)swift_allocObject();
    v103 = (uint64_t)v150;
    v104 = v150[1];
    v102[1] = *v150;
    v102[2] = v104;
    v105 = *(_OWORD *)(v103 + 48);
    v102[3] = *(_OWORD *)(v103 + 32);
    v102[4] = v105;
    sub_24188F8A4(v103);
    sub_241728434(&qword_257154840, (uint64_t (*)(uint64_t))sub_24188F338, (uint64_t (*)(void))sub_2417EADC8, sub_2417310D4);
    v106 = v142;
    sub_2418A9354();
    swift_release();
    sub_24172588C(v101, (uint64_t (*)(_QWORD))sub_24188F338);
    v107 = v144;
    v108 = v143;
    v109 = v146;
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v143, v106, v146);
    v110 = v151;
    sub_24188F904(v151, v90);
    v111 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    v112 = v145;
    v111(v145, v108, v109);
    v113 = v152;
    sub_24188F904(v90, v152);
    sub_24188F3E4();
    v111((char *)(v113 + *(int *)(v114 + 48)), v112, v109);
    v115 = *(void (**)(char *, uint64_t))(v107 + 8);
    v115(v108, v109);
    sub_24188F958(v110);
    v115(v112, v109);
    sub_24188F958(v90);
    sub_24188F3C8(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v113, 0, 1, v116);
    v117 = v149;
    sub_24188F9A4(v113, v149);
  }
  else
  {
    sub_24188F3C8(0);
    v117 = v149;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v149, 1, 1, v118);
    v113 = v152;
  }
  v120 = v155;
  v119 = v156;
  sub_24188F6EC(v155, v156);
  sub_24188F730(v117, v113);
  v121 = v153;
  sub_24188F6EC(v119, v153);
  sub_24188F2B4();
  sub_24188F730(v113, v121 + *(int *)(v122 + 48));
  sub_24188F78C(v117);
  sub_24172588C(v120, (uint64_t (*)(_QWORD))sub_24188F338);
  sub_24188F78C(v113);
  return sub_24172588C(v119, (uint64_t (*)(_QWORD))sub_24188F338);
}

uint64_t sub_24188824C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  unsigned __int8 v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;

  v29 = a2;
  sub_2417935B8();
  MEMORY[0x24BDAC7A8](v3, v4);
  v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v6 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v7 = sub_2418A7EFC();
  v9 = v8;
  swift_bridgeObjectRelease();

  v31 = v7;
  v32 = v9;
  sub_241721040();
  v10 = sub_2418A92D0();
  v12 = v11;
  v14 = v13;
  v35 = *a1;
  swift_retain();
  v15 = sub_2418265F0();
  sub_2417D81F0((uint64_t)&v35);
  if ((v15 & 1) != 0)
    v16 = sub_2418A8E68();
  else
    v16 = sub_2418A8E74();
  v17 = v14 & 1;
  LODWORD(v31) = v16;
  v18 = sub_2418A9270();
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  sub_2417289EC(v10, v12, v17);
  swift_bridgeObjectRelease();
  v31 = v18;
  v32 = v20;
  v33 = v24;
  v34 = v22;
  v30 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511ACC48);
  v25 = MEMORY[0x24BEE0D00];
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_24175D120((unint64_t *)&qword_2543915D8, (unint64_t *)&qword_2543915D0, v25, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v26 = (uint64_t)v28;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_2417289EC(v18, v20, v24);
  swift_bridgeObjectRelease();
  return sub_241731B4C(v26, v29, (uint64_t (*)(_QWORD))sub_2417935B8);
}

uint64_t sub_241888530(_OWORD *a1)
{
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  sub_241886F98();
  swift_getKeyPath();
  v2 = (_OWORD *)swift_allocObject();
  v3 = a1[1];
  v2[1] = *a1;
  v2[2] = v3;
  v4 = a1[3];
  v2[3] = a1[2];
  v2[4] = v4;
  sub_24188F8A4((uint64_t)a1);
  v5 = MEMORY[0x24BEE1768];
  sub_24172887C(0, &qword_257154820, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_2417935B8();
  sub_24175D120(&qword_257154828, &qword_257154820, v5, MEMORY[0x24BEE12D8]);
  sub_2417EAD48();
  return sub_2418A9888();
}

uint64_t sub_24188864C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;

  sub_24188FB78(*a1);
  sub_241721040();
  v1 = MEMORY[0x24BEE0D00];
  v2 = sub_2418A92D0();
  v4 = v3;
  v6 = v5 & 1;
  sub_24172887C(0, (unint64_t *)&qword_2543915E0, v1, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D8510;
  *(_QWORD *)(inited + 32) = 0xD000000000000020;
  *(_QWORD *)(inited + 40) = 0x80000002418DFAB0;
  *(_QWORD *)(inited + 48) = sub_2418AA4AC();
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = 1937334596;
  *(_QWORD *)(inited + 72) = 0xE400000000000000;
  v9 = swift_bridgeObjectRetain();
  sub_2417739BC(v9);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, v1, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_24175D120((unint64_t *)&qword_2543915D8, (unint64_t *)&qword_2543915D0, v1, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_2417289EC(v2, v4, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_241888878@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  unsigned __int8 v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;

  v29 = a2;
  sub_2417935B8();
  MEMORY[0x24BDAC7A8](v3, v4);
  v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v6 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v7 = sub_2418A7EFC();
  v9 = v8;
  swift_bridgeObjectRelease();

  v31 = v7;
  v32 = v9;
  sub_241721040();
  v10 = sub_2418A92D0();
  v12 = v11;
  v14 = v13;
  v35 = *a1;
  swift_retain();
  v15 = sub_2418265F0();
  sub_2417D81F0((uint64_t)&v35);
  if ((v15 & 1) != 0)
    v16 = sub_2418A8E68();
  else
    v16 = sub_2418A8E74();
  v17 = v14 & 1;
  LODWORD(v31) = v16;
  v18 = sub_2418A9270();
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  sub_2417289EC(v10, v12, v17);
  swift_bridgeObjectRelease();
  v31 = v18;
  v32 = v20;
  v33 = v24;
  v34 = v22;
  v30 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511ACC98);
  v25 = MEMORY[0x24BEE0D00];
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_24175D120((unint64_t *)&qword_2543915D8, (unint64_t *)&qword_2543915D0, v25, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v26 = (uint64_t)v28;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_2417289EC(v18, v20, v24);
  swift_bridgeObjectRelease();
  return sub_241731B4C(v26, v29, (uint64_t (*)(_QWORD))sub_2417935B8);
}

uint64_t sub_241888B5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  id v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[16];
  __int128 v16;
  char v17;
  __int128 v18;

  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v15[-v4];
  v18 = *(_OWORD *)(a1 + 16);
  v6 = (void *)*((_QWORD *)&v18 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  v7 = v6;
  sub_2418A8418();
  swift_release();
  swift_release();
  sub_2417D8118((uint64_t)&v18);
  if (v16 == 1)
  {
    v16 = *(_OWORD *)(a1 + 32);
    v17 = *(_BYTE *)(a1 + 48);
    v15[15] = 1;
    sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
    return sub_2418A9810();
  }
  else
  {
    v9 = sub_2418A9F60();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    sub_2418A9F48();
    sub_24188F8A4(a1);
    v10 = sub_2418A9F3C();
    v11 = swift_allocObject();
    v12 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v12;
    v13 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v11 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v11 + 48) = v13;
    v14 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v11 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v11 + 80) = v14;
    sub_241826138((uint64_t)v5, (uint64_t)&unk_257154868, v11);
    return swift_release();
  }
}

uint64_t sub_241888D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a4;
  v5 = sub_2418A8100();
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  sub_2418A9F48();
  v4[8] = sub_2418A9F3C();
  v4[9] = sub_2418A9F18();
  v4[10] = v6;
  return swift_task_switch();
}

uint64_t sub_241888DA4()
{
  uint64_t v0;
  _QWORD *v1;

  *(_OWORD *)(v0 + 16) = *(_OWORD *)*(_QWORD *)(v0 + 32);
  swift_retain();
  sub_2418A80D0();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_241888E1C;
  return AssessmentsSettingsModel.resetPeriodicPromptsTimer(acknowledgmentDate:)(*(_QWORD *)(v0 + 56));
}

uint64_t sub_241888E1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 48);
  v2 = *(_QWORD *)(*v0 + 56);
  v4 = *(_QWORD *)(*v0 + 40);
  swift_task_dealloc();
  sub_2417D81F0(v1 + 16);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_241888E9C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241888ED4()
{
  return sub_2418870D8();
}

uint64_t sub_241888F0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241888F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  sub_2417935B8();
  MEMORY[0x24BDAC7A8](v0, v1);
  v2 = sub_241889124();
  v4 = v3;
  v6 = v5 & 1;
  sub_2417739BC((uint64_t)&unk_2511ACCE8);
  v7 = MEMORY[0x24BEE0D00];
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_24175D120((unint64_t *)&qword_2543915D8, (unint64_t *)&qword_2543915D0, v7, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_2417289EC(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_24188F338(0);
  sub_241728434(&qword_257154840, (uint64_t (*)(uint64_t))sub_24188F338, (uint64_t (*)(void))sub_2417EADC8, sub_2417310D4);
  sub_2417EAD48();
  return sub_2418A98DC();
}

uint64_t sub_241889124()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  id v3;

  swift_retain();
  if (((sub_2418265F0() & 1) != 0 || (sub_2418265F0() & 1) != 0)
    && (sub_2418265F0() & 1) != 0)
  {
    sub_2418265F0();
    swift_release();
    sub_2418A8BC8();
    type metadata accessor for MentalHealthUIRepresentative();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  }
  else
  {
    swift_release();
    sub_2418A8BC8();
    type metadata accessor for MentalHealthUIRepresentative();
    v2 = swift_getObjCClassFromMetadata();
    v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v2);
  }
  v3 = v1;
  return sub_2418A92C4();
}

uint64_t sub_2418892A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD v21[8];

  v21[1] = a3;
  sub_2417EACE8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417EAC6C();
  v12 = v11;
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AssessmentsSettingsModel();
  sub_24172159C(qword_25714F650, (uint64_t (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel, (uint64_t)&protocol conformance descriptor for AssessmentsSettingsModel);
  sub_2418A876C();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();
  swift_release();
  v21[4] = a1;
  v21[5] = a2;
  sub_2417935B8();
  sub_2417EAD48();
  sub_2418A97C8();
  swift_retain();
  LOBYTE(a1) = sub_2418265F0();
  swift_release();
  KeyPath = swift_getKeyPath();
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = (a1 & 1) == 0;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v10, v6);
  v18 = (uint64_t *)&v15[*(int *)(v12 + 36)];
  *v18 = KeyPath;
  v18[1] = (uint64_t)sub_24175DE5C;
  v18[2] = v17;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v21[7] = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511ACD38);
  v19 = MEMORY[0x24BEE0D00];
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_24175D120((unint64_t *)&qword_2543915D8, (unint64_t *)&qword_2543915D0, v19, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2417EADC8();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_2417EAC6C);
}

uint64_t sub_241889584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v26 = a1;
  sub_2417935B8();
  MEMORY[0x24BDAC7A8](v1, v2);
  v25 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v4 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v5 = sub_2418A7EFC();
  v7 = v6;
  swift_bridgeObjectRelease();

  v28 = v5;
  v29 = v7;
  sub_241721040();
  v8 = sub_2418A92D0();
  v10 = v9;
  v12 = v11;
  swift_retain();
  LOBYTE(v5) = sub_2418265F0();
  swift_release();
  if ((v5 & 1) != 0)
    v13 = sub_2418A8E68();
  else
    v13 = sub_2418A8E74();
  v14 = v12 & 1;
  LODWORD(v28) = v13;
  v15 = sub_2418A9270();
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  sub_2417289EC(v8, v10, v14);
  swift_bridgeObjectRelease();
  v28 = v15;
  v29 = v17;
  v30 = v21;
  v31 = v19;
  v27 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511ACD78);
  v22 = MEMORY[0x24BEE0D00];
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_24175D120((unint64_t *)&qword_2543915D8, (unint64_t *)&qword_2543915D0, v22, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v23 = (uint64_t)v25;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_2417289EC(v15, v17, v21);
  swift_bridgeObjectRelease();
  return sub_241731B4C(v23, v26, (uint64_t (*)(_QWORD))sub_2417935B8);
}

uint64_t sub_241889860()
{
  return sub_241888F1C();
}

uint64_t sub_241889868@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;

  v3 = sub_2418A8DFC();
  v37 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24188A14C();
  v8 = v7;
  v36 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24188A260(0);
  v13 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  v40 = v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24188A310(0);
  v41 = v17;
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v38 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v1;
  v47 = *v1;
  swift_retain();
  if ((sub_2418265E4() & 1) != 0)
  {
    v22 = sub_2417D81F0((uint64_t)&v47);
  }
  else
  {
    v24 = sub_2418265E4();
    v22 = sub_2417D81F0((uint64_t)&v47);
    if ((v24 & 1) == 0)
    {
      v32 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a1, v32, 1, v41);
    }
  }
  v35 = a1;
  MEMORY[0x24BDAC7A8](v22, v23);
  *(&v34 - 2) = (uint64_t)v21;
  sub_24188A1E0(0);
  sub_24172159C(&qword_2571547B0, (uint64_t (*)(uint64_t))sub_24188A1E0, MEMORY[0x24BDF5428]);
  sub_2418A9240();
  sub_2418A8DF0();
  v25 = sub_24172159C(&qword_2571547C0, (uint64_t (*)(uint64_t))sub_24188A14C, MEMORY[0x24BDF1A30]);
  sub_2418A9558();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
  v46 = v21[2];
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  v26 = sub_2418A96E4();
  v27 = v39;
  v37 = v18;
  MEMORY[0x24BDAC7A8](v26, v28);
  *(&v34 - 2) = v29;
  v42 = v8;
  v43 = v3;
  v44 = v25;
  v45 = MEMORY[0x24BDEF958];
  swift_getOpaqueTypeConformance2();
  v30 = v38;
  a1 = v35;
  sub_2418A94B0();
  v31 = v41;
  v18 = v37;
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v27);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a1, v30, v31);
  v32 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a1, v32, 1, v41);
}

uint64_t sub_241889BF4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;

  v3 = *a1;
  v16 = a1[1];
  v17 = v3;
  sub_24176E320((uint64_t)&v17);
  sub_24188F268((uint64_t)&v16);
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  type metadata accessor for AssessmentsSettingsModel();
  sub_24172159C(qword_25714F650, (uint64_t (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel, (uint64_t)&protocol conformance descriptor for AssessmentsSettingsModel);
  v4 = sub_2418A8760();
  v6 = v5;
  type metadata accessor for NotificationSettingsModel();
  sub_24172159C((unint64_t *)&qword_25714D020, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsModel, (uint64_t)&protocol conformance descriptor for NotificationSettingsModel);
  v7 = sub_2418A8760();
  v9 = v8;
  swift_retain();
  v10 = sub_2418A8760();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v14;
  *(_BYTE *)(a2 + 48) = v15;
  *(_QWORD *)(a2 + 56) = &unk_2511ACDB8;
  *(_QWORD *)(a2 + 64) = v10;
  *(_QWORD *)(a2 + 72) = v11;
  swift_retain();
  swift_retain();
  swift_release();
  return swift_release();
}

uint64_t sub_241889D70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD v37[4];
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a1;
  v1 = sub_2418A9588();
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v43 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v42 = (char *)v37 - v6;
  if (qword_25714B958 != -1)
    swift_once();
  v7 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v40 = sub_2418A7EFC();
  v41 = v8;
  swift_bridgeObjectRelease();

  v9 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v10 = sub_2418A7EFC();
  v12 = v11;
  swift_bridgeObjectRelease();

  v13 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v14 = sub_2418A7EFC();
  v16 = v15;
  swift_bridgeObjectRelease();

  v17 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v18 = sub_2418A7EFC();
  v20 = v19;
  swift_bridgeObjectRelease();

  v45 = v40;
  v46 = v41;
  sub_241721040();
  v21 = sub_2418A92D0();
  v40 = v22;
  v41 = v21;
  v38 = v23;
  v39 = v24;
  v45 = v10;
  v46 = v12;
  v25 = sub_2418A92D0();
  v37[2] = v26;
  v37[3] = v25;
  v37[1] = v27;
  v45 = v14;
  v46 = v16;
  v28 = sub_2418A92D0();
  v30 = v29;
  LOBYTE(v12) = v31 & 1;
  sub_2418A957C();
  sub_2417289EC(v28, v30, v12);
  swift_bridgeObjectRelease();
  v45 = v18;
  v46 = v20;
  v32 = sub_2418A92D0();
  v34 = v33;
  LOBYTE(v20) = v35 & 1;
  sub_2418A9570();
  sub_2417289EC(v32, v34, v20);
  swift_bridgeObjectRelease();
  return sub_2418A9564();
}

uint64_t sub_24188A114@<X0>(uint64_t a1@<X8>)
{
  return sub_241889868(a1);
}

void sub_24188A14C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154798)
  {
    sub_24188A1E0(255);
    sub_24172159C(&qword_2571547B0, (uint64_t (*)(uint64_t))sub_24188A1E0, MEMORY[0x24BDF5428]);
    v0 = sub_2418A924C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154798);
  }
}

void sub_24188A1E0(uint64_t a1)
{
  sub_24172570C(a1, &qword_2571547A0, (uint64_t (*)(uint64_t))sub_24188A1FC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_24188A1FC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2571547A8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2571547A8);
  }
}

void sub_24188A260(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_2571547B8)
  {
    sub_24188A14C();
    v5[0] = v2;
    v5[1] = sub_2418A8DFC();
    v5[2] = sub_24172159C(&qword_2571547C0, (uint64_t (*)(uint64_t))sub_24188A14C, MEMORY[0x24BDF1A30]);
    v5[3] = MEMORY[0x24BDEF958];
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF3A80], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_2571547B8);
  }
}

void sub_24188A310(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_2571547C8)
  {
    sub_24188A260(255);
    v3 = v2;
    sub_24188A14C();
    sub_2418A8DFC();
    v6[2] = sub_24172159C(&qword_2571547C0, (uint64_t (*)(uint64_t))sub_24188A14C, MEMORY[0x24BDF1A30]);
    v6[3] = MEMORY[0x24BDEF958];
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF3520], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_2571547C8);
  }
}

uint64_t sub_24188A3EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_241889BF4(*(__int128 **)(v1 + 16), a1);
}

uint64_t sub_24188A3F4@<X0>(uint64_t a1@<X8>)
{
  return sub_241889D70(a1);
}

uint64_t sub_24188A414(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v8;
  uint64_t v10;

  v4 = *v2;
  sub_2418AA56C();
  sub_241732024(a2);
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  v5 = sub_2418AA59C() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v8;
  *v8 = 0x8000000000000000;
  sub_24188BAC4(a2, v5, isUniquelyReferenced_nonNull_native);
  *v8 = v10;
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_24188A820(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_2418AA56C();
  sub_2418AA578();
  v6 = sub_2418AA59C();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_24188BF44(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_24188A93C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_2418AA560();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_24188C090(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

void sub_24188AA34(uint64_t a1, char a2)
{
  sub_2418AA56C();
  __asm { BR              X10 }
}

uint64_t sub_24188AAA4()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v5;
  _BYTE *v6;
  uint64_t v7;

  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  v2 = sub_2418AA59C() & ~(-1 << *(_BYTE *)(v1 + 32));
  if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v5;
  *v5 = 0x8000000000000000;
  sub_24188C1B0(v0, v2, isUniquelyReferenced_nonNull_native);
  *v5 = v7;
  swift_bridgeObjectRelease();
  result = 1;
  *v6 = (_BYTE)v0;
  return result;
}

uint64_t sub_24188AD9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  v1 = *v0;
  sub_241890020(0, &qword_2571548B8, (void (*)(void))sub_241890078);
  v2 = sub_2418AA290();
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_25;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v14 = (_QWORD *)(v1 + 56);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_retain();
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v6 > 1)
  {
    v8 = *(_QWORD *)(v1 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v6 > 2)
    {
      v8 = *(_QWORD *)(v1 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v6 > 3)
      {
        v8 = *(_QWORD *)(v1 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v6 > 4)
          {
            v8 = *(_QWORD *)(v1 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x24188B1D0);
              }
              if (v9 >= v6)
                break;
              v8 = v14[v9];
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v7);
        sub_2418AA56C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v12 = 1 << *(_BYTE *)(v1 + 32);
  if (v12 > 63)
    bzero(v14, ((unint64_t)(v12 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v14 = -1 << v12;
  *(_QWORD *)(v1 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v0 = v2;
  return result;
}

uint64_t sub_24188B1F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_2418903C0();
  result = sub_2418AA290();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_2418AA56C();
      sub_2418AA578();
      result = sub_2418AA59C();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_24188B49C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  sub_24188FF24(0, &qword_257154880, MEMORY[0x24BEE1778], (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE24D8]);
  result = sub_2418AA290();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_2418AA560();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_24188B730()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v1 = v0;
  v2 = *v0;
  sub_241890020(0, &qword_257154888, (void (*)(void))sub_24188FF6C);
  v3 = sub_2418AA290();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v15 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x24188BAB0);
              }
              if (v10 >= v7)
                break;
              v9 = v15[v10];
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_2418AA56C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v13 = 1 << *(_BYTE *)(v2 + 32);
  if (v13 > 63)
    bzero(v15, ((unint64_t)(v13 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v15 = -1 << v13;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_24188BAC4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned __int8 v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_24188AD9C();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_24188C8A4(&qword_2571548B8, (void (*)(void))sub_241890078);
        goto LABEL_10;
      }
      sub_24188CA3C();
    }
    v8 = *v3;
    sub_2418AA56C();
    sub_241732024(v5);
    sub_2418A9E1C();
    swift_bridgeObjectRelease();
    result = sub_2418AA59C();
    a2 = result & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x24188BED8);
  }
  *(_QWORD *)(v9 + 16) = v12;
  return result;
}

uint64_t sub_24188BF44(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_24188B1F8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_24188C56C();
      goto LABEL_14;
    }
    sub_24188CE60();
  }
  v8 = *v3;
  sub_2418AA56C();
  sub_2418AA578();
  result = sub_2418AA59C();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for Label(0);
      result = sub_2418AA500();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_24188C090(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_24188B49C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_24188C6FC();
      goto LABEL_14;
    }
    sub_24188D0D4();
  }
  v8 = *v3;
  result = sub_2418AA560();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_2418AA500();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_24188C1B0(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_24188B730();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_24188D348();
LABEL_8:
      sub_2418AA56C();
      __asm { BR              X10 }
    }
    result = sub_24188C8A4(&qword_257154888, (void (*)(void))sub_24188FF6C);
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x24188C514);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

void *sub_24188C56C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_2418903C0();
  v2 = *v0;
  v3 = sub_2418AA284();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24188C6FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_24188FF24(0, &qword_257154880, MEMORY[0x24BEE1778], (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE24D8]);
  v2 = *v0;
  v3 = sub_2418AA284();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24188C8A4(unint64_t *a1, void (*a2)(void))
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  uint64_t v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v3 = v2;
  sub_241890020(0, a1, a2);
  v4 = *v2;
  v5 = sub_2418AA284();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v3 = v6;
    return result;
  }
  result = (void *)(v5 + 56);
  v8 = v4 + 56;
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 56 + 8 * v9)
    result = memmove(result, (const void *)(v4 + 56), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 56);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v15)
      goto LABEL_28;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v11;
    if (!v19)
    {
      v11 = v18 + 1;
      if (v18 + 1 >= v15)
        goto LABEL_28;
      v19 = *(_QWORD *)(v8 + 8 * v11);
      if (!v19)
      {
        v11 = v18 + 2;
        if (v18 + 2 >= v15)
          goto LABEL_28;
        v19 = *(_QWORD *)(v8 + 8 * v11);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v14 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v17) = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v17);
  }
  v20 = v18 + 3;
  if (v20 >= v15)
    goto LABEL_28;
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v11 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v11 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v11 >= v15)
      goto LABEL_28;
    v19 = *(_QWORD *)(v8 + 8 * v11);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24188CA3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;

  v1 = *v0;
  sub_241890020(0, &qword_2571548B8, (void (*)(void))sub_241890078);
  v2 = sub_2418AA290();
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v3 = 1 << *(_BYTE *)(v1 + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v12 = (unint64_t)(v3 + 63) >> 6;
  swift_retain();
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v12 > 1)
  {
    v7 = *(_QWORD *)(v1 + 64);
    v8 = 1;
    if (v7)
      goto LABEL_19;
    v8 = 2;
    if (v12 > 2)
    {
      v7 = *(_QWORD *)(v1 + 72);
      if (v7)
        goto LABEL_19;
      v8 = 3;
      if (v12 > 3)
      {
        v7 = *(_QWORD *)(v1 + 80);
        if (!v7)
        {
          v9 = 4;
          if (v12 > 4)
          {
            v7 = *(_QWORD *)(v1 + 88);
            if (v7)
            {
              v8 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v8 = v9 + 1;
              if (__OFADD__(v9, 1))
              {
                __break(1u);
                JUMPOUT(0x24188CE38);
              }
              if (v8 >= v12)
                break;
              v7 = *(_QWORD *)(v1 + 56 + 8 * v8);
              ++v9;
              if (v7)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_20:
        v10 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v6);
        sub_2418AA56C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
LABEL_23:
  *v0 = v2;
  return result;
}

uint64_t sub_24188CE60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  sub_2418903C0();
  result = sub_2418AA290();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_2418AA56C();
    sub_2418AA578();
    result = sub_2418AA59C();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24188D0D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  sub_24188FF24(0, &qword_257154880, MEMORY[0x24BEE1778], (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE24D8]);
  result = sub_2418AA290();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_2418AA560();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24188D348()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;

  v1 = v0;
  v2 = *v0;
  sub_241890020(0, &qword_257154888, (void (*)(void))sub_24188FF6C);
  v3 = sub_2418AA290();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v7 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v13 > 1)
  {
    v8 = *(_QWORD *)(v2 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v13 > 2)
    {
      v8 = *(_QWORD *)(v2 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v13 > 3)
      {
        v8 = *(_QWORD *)(v2 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v13 > 4)
          {
            v8 = *(_QWORD *)(v2 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x24188D694);
              }
              if (v9 >= v13)
                break;
              v8 = *(_QWORD *)(v2 + 56 + 8 * v9);
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v7);
        sub_2418AA56C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

uint64_t sub_24188D6A8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24188F1C4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_24188D710(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_24188D710(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_2418AA4A0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_24188DD98((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_24188E1A4((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_2418A9EE8();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_24188E004(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_24188E004((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_24188DD98((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_2418AA374();
  __break(1u);
  return result;
}

uint64_t sub_24188DD98(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*((_QWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_24188E0FC((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

char *sub_24188E004(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_24188FEB8();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24188E0FC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_2418AA3D4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_24188E1A4(uint64_t a1)
{
  return sub_24188E004(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24188E1B8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_24172887C(0, &qword_25714D508, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_24188E328(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_24172887C(0, (unint64_t *)&qword_2543915E0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_24188E4A4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_24172570C(0, &qword_2571548F0, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_24188E614(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_24172887C(0, &qword_2571548E8, MEMORY[0x24BDED908], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_24188E780(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_24172570C(0, &qword_2571548F8, (uint64_t (*)(uint64_t))sub_241786A5C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_241786A5C(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_24188E918(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24188EF68(a1, a2, a3, a4, sub_241890004, (uint64_t (*)(_QWORD))_s5EntryVMa);
}

uint64_t sub_24188E92C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_24172887C(0, (unint64_t *)&qword_25714E500, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_24188EAB0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_24172887C(0, &qword_25714D500, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_24188EC20(char a1, int64_t a2, char a3, char *a4)
{
  return sub_24188EDD8(a1, a2, a3, a4, (unint64_t *)&qword_25714D578, (uint64_t (*)(uint64_t))type metadata accessor for Label);
}

uint64_t sub_24188EC34(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_24172887C(0, (unint64_t *)&qword_257153648, MEMORY[0x24BDF4CF0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_24188EDB0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24188EF68(a1, a2, a3, a4, sub_24188FFE8, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
}

uint64_t sub_24188EDC4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_24188EDD8(a1, a2, a3, a4, &qword_2571548A0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain);
}

uint64_t sub_24188EDD8(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_24172570C(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 25;
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 3);
  }
  else
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[8 * v10])
      memmove(v15, v16, 8 * v10);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[8 * v10] || v15 >= &v16[8 * v10])
  {
    memcpy(v15, v16, 8 * v10);
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_24188EF40(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24188EF68(a1, a2, a3, a4, sub_24188FFCC, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB988]);
}

uint64_t sub_24188EF54(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24188EF68(a1, a2, a3, a4, sub_24188FFB0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCF678]);
}

uint64_t sub_24188EF68(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  a5(0);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

void sub_24188F148()
{
  JUMPOUT(0x24269CC9CLL);
}

uint64_t sub_24188F15C(uint64_t a1)
{
  return sub_24188EDD8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, (unint64_t *)&qword_25714D578, (uint64_t (*)(uint64_t))type metadata accessor for Label);
}

uint64_t sub_24188F190(uint64_t a1)
{
  return sub_24188EDD8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_2571548A0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain);
}

uint64_t sub_24188F1C4(uint64_t a1)
{
  return sub_24188EAB0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24188F1D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  type metadata accessor for Label(0);
  sub_24172159C(&qword_257152230, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t)&unk_2418D1168);
  result = sub_2418A9F78();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_24188A820(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_24188F268(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 8);
  return a1;
}

uint64_t sub_24188F290@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_241887460(*(_QWORD **)(v1 + 16), a1);
}

void sub_24188F298(uint64_t a1)
{
  sub_24172570C(a1, &qword_2571547D0, (uint64_t (*)(uint64_t))sub_24188F2B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_24188F2B4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2571547D8)
  {
    sub_24188F338(255);
    sub_24172570C(255, &qword_2571547E8, (uint64_t (*)(uint64_t))sub_24188F3C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2571547D8);
  }
}

void sub_24188F338(uint64_t a1)
{
  sub_241773440(a1, &qword_2571547E0, (void (*)(uint64_t))sub_2417EAC6C);
}

void sub_24188F34C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_24172887C(255, &qword_25714C860, MEMORY[0x24BEE1328], MEMORY[0x24BDF1230]);
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_24188F3C8(uint64_t a1)
{
  sub_24172570C(a1, &qword_2571547F0, (uint64_t (*)(uint64_t))sub_24188F3E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_24188F3E4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2571547F8)
  {
    sub_241773440(255, &qword_257154800, sub_24188F460);
    sub_24188F630(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2571547F8);
  }
}

void sub_24188F460(uint64_t a1)
{
  sub_24188F34C(a1, &qword_257154808, (void (*)(uint64_t))sub_24188F474);
}

void sub_24188F474()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154810)
  {
    sub_24188F504();
    sub_24188F5D0();
    v0 = sub_2418A978C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154810);
  }
}

void sub_24188F504()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_257154818)
  {
    v0 = MEMORY[0x24BEE1768];
    sub_24172887C(255, &qword_257154820, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_2417935B8();
    sub_24175D120(&qword_257154828, &qword_257154820, v0, MEMORY[0x24BEE12D8]);
    v1 = sub_2418A98A0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_257154818);
  }
}

unint64_t sub_24188F5D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_257154830;
  if (!qword_257154830)
  {
    sub_24188F504();
    v2 = v1;
    v3 = sub_2417EAD48();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4A08], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_257154830);
  }
  return result;
}

void sub_24188F630(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_257154838)
  {
    sub_24188F338(255);
    v5[0] = v2;
    v5[1] = sub_241728434(&qword_257154840, (uint64_t (*)(uint64_t))sub_24188F338, (uint64_t (*)(void))sub_2417EADC8, sub_2417310D4);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2550], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257154838);
  }
}

uint64_t sub_24188F6CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24188824C(*(__int128 **)(v1 + 16), a1);
}

uint64_t sub_24188F6DC()
{
  return swift_deallocObject();
}

uint64_t sub_24188F6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24188F338(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24188F730(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_2571547E8, (uint64_t (*)(uint64_t))sub_24188F3C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24188F78C(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, &qword_2571547E8, (uint64_t (*)(uint64_t))sub_24188F3C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24188F7E8()
{
  uint64_t v0;

  return sub_241888530(*(_OWORD **)(v0 + 16));
}

uint64_t sub_24188F7F0()
{
  return swift_deallocObject();
}

uint64_t sub_24188F800()
{
  return sub_24172159C(&qword_257154858, (uint64_t (*)(uint64_t))sub_24188F474, MEMORY[0x24BDF4570]);
}

uint64_t sub_24188F81C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241773440(0, &qword_257154800, sub_24188F460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24188F878@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_241888878(*(__int128 **)(v1 + 16), a1);
}

uint64_t sub_24188F888()
{
  return swift_deallocObject();
}

uint64_t sub_24188F89C()
{
  uint64_t v0;

  return sub_241888B5C(v0 + 16);
}

uint64_t sub_24188F8A4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v3 = v2;
  return a1;
}

uint64_t sub_24188F904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241773440(0, &qword_257154800, sub_24188F460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24188F958(uint64_t a1)
{
  uint64_t v2;

  sub_241773440(0, &qword_257154800, sub_24188F460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24188F9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_2571547E8, (uint64_t (*)(uint64_t))sub_24188F3C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24188FA00()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24188FA4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_24175D6DC;
  return sub_241888D10(a1, v4, v5, v1 + 32);
}

uint64_t objectdestroy_28Tm_0()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24188FB00(uint64_t *a1)
{
  return sub_24188864C(a1);
}

uint64_t sub_24188FB08(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_2418A9F78();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_24188A93C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_24188FB78(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 > 89)
  {
    if (a1 == 90)
    {
      if (qword_25714B958 == -1)
      {
LABEL_13:
        v2 = (id)qword_25715E110;
        swift_bridgeObjectRetain();
        v3 = sub_2418A7EFC();
        swift_bridgeObjectRelease();

        return v3;
      }
    }
    else
    {
      if (a1 != 180)
        goto LABEL_14;
      if (qword_25714B958 == -1)
        goto LABEL_13;
    }
LABEL_17:
    swift_once();
    goto LABEL_13;
  }
  if (!a1)
  {
    if (qword_25714B958 == -1)
      goto LABEL_13;
    goto LABEL_17;
  }
  if (a1 == 30)
  {
    if (qword_25714B958 == -1)
      goto LABEL_13;
    goto LABEL_17;
  }
LABEL_14:
  if (qword_25714B958 != -1)
    swift_once();
  v5 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  sub_24172570C(0, (unint64_t *)&qword_257151E80, (uint64_t (*)(uint64_t))sub_2418534D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v6 = swift_allocObject();
  v7 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v6 + 16) = xmmword_2418D23E0;
  v8 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v6 + 56) = v7;
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = a1;
  v9 = sub_2418A9DBC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

void sub_24188FEB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154870)
  {
    sub_24188FF24(255, &qword_257154878, MEMORY[0x24BEE1780], (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1B68]);
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154870);
  }
}

void sub_24188FF24(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, MEMORY[0x24BEE1768]);
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_24188FF6C()
{
  unint64_t result;

  result = qword_257154890;
  if (!qword_257154890)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for MentalHealthAssessmentsAnalyticsStepType, &type metadata for MentalHealthAssessmentsAnalyticsStepType);
    atomic_store(result, (unint64_t *)&qword_257154890);
  }
  return result;
}

void sub_24188FFB0(uint64_t a1)
{
  sub_24172570C(a1, &qword_257154898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_24188FFCC(uint64_t a1)
{
  sub_24172570C(a1, &qword_257151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB988], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_24188FFE8(uint64_t a1)
{
  sub_24172570C(a1, &qword_2571548A8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_241890004(uint64_t a1)
{
  sub_24172570C(a1, &qword_2571548B0, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_241890020(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_2418AA2A8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_241890078()
{
  unint64_t result;

  result = qword_2571548C0;
  if (!qword_2571548C0)
  {
    result = MEMORY[0x24269D47C](&unk_2418D1DEC, &type metadata for StateOfMindLoggingAnalyticsStepType);
    atomic_store(result, (unint64_t *)&qword_2571548C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentsLoggingPatternBasedPromptedAssessmentsSection()
{
  return &type metadata for AssessmentsLoggingPatternBasedPromptedAssessmentsSection;
}

unint64_t sub_2418900D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];

  result = qword_2571548C8;
  if (!qword_2571548C8)
  {
    sub_24172570C(255, &qword_2571548D0, (uint64_t (*)(uint64_t))sub_24188A310, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v2 = v1;
    sub_24188A260(255);
    v4 = v3;
    sub_24188A14C();
    sub_2418A8DFC();
    v5[3] = sub_24172159C(&qword_2571547C0, (uint64_t (*)(uint64_t))sub_24188A14C, MEMORY[0x24BDF1A30]);
    v5[4] = MEMORY[0x24BDEF958];
    v5[1] = v4;
    v5[2] = swift_getOpaqueTypeConformance2();
    v5[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5578], v2, v5);
    atomic_store(result, (unint64_t *)&qword_2571548C8);
  }
  return result;
}

unint64_t sub_2418901D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = qword_2571548D8;
  if (!qword_2571548D8)
  {
    sub_241890354(255, &qword_2571548E0, sub_24188F298);
    v2 = v1;
    v3 = sub_24172159C(&qword_257154848, (uint64_t (*)(uint64_t))sub_24188F298, MEMORY[0x24BDF5428]);
    v4 = sub_2417EAD48();
    v5[0] = MEMORY[0x24BDF5138];
    v5[1] = v3;
    v5[2] = v4;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4AF8], v2, v5);
    atomic_store(result, (unint64_t *)&qword_2571548D8);
  }
  return result;
}

uint64_t sub_241890274()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241890284@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2418892A4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_241890294@<X0>(uint64_t a1@<X8>)
{
  return sub_241889584(a1);
}

uint64_t sub_24189029C()
{
  return swift_deallocObject();
}

unint64_t sub_2418902B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = qword_257154900;
  if (!qword_257154900)
  {
    sub_241890354(255, &qword_257154908, sub_24188F338);
    v2 = v1;
    v3 = sub_241728434(&qword_257154840, (uint64_t (*)(uint64_t))sub_24188F338, (uint64_t (*)(void))sub_2417EADC8, sub_2417310D4);
    v4 = sub_2417EAD48();
    v5[0] = MEMORY[0x24BDF5138];
    v5[1] = v3;
    v5[2] = v4;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4AF8], v2, v5);
    atomic_store(result, (unint64_t *)&qword_257154900);
  }
  return result;
}

void sub_241890354(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_2417935B8();
    v4 = sub_2418A98E8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_2418903C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154910)
  {
    type metadata accessor for Label(255);
    sub_24172159C(&qword_257152230, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t)&unk_2418D1168);
    v0 = sub_2418AA2A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154910);
  }
}

id StateOfMindSampleCountContext.__allocating_init(accessibilityIdentifier:applicationItems:overlayChartController:overlayPredicate:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  objc_class *v5;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  objc_super v21;

  v11 = (char *)objc_allocWithZone(v5);
  v12 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(_QWORD *)&v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  v13 = &v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  *(_QWORD *)&v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = a4;
  sub_241890A00();
  v14 = v11;
  v15 = a4;
  sub_241880A3C(a3, a5, 0);
  *(_QWORD *)&v14[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v16;
  *(_QWORD *)&v14[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = a5;
  v17 = *(void **)&v11[v12];
  *(_QWORD *)&v11[v12] = 0;
  v18 = a5;

  v21.receiver = v14;
  v21.super_class = (Class)type metadata accessor for StateOfMindOverlayContext();
  v19 = objc_msgSendSuper2(&v21, sel_init);

  return v19;
}

void sub_241890558(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2418AA398();
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
    {
LABEL_3:
      v15 = MEMORY[0x24BEE4AF8];
      sub_24183D654(0, v2 & ~(v2 >> 63), 0);
      if (v2 < 0)
      {
LABEL_20:
        __break(1u);
        return;
      }
      v3 = 0;
      v4 = v15;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v5 = (id)MEMORY[0x24269CAD4](v3, a1);
        else
          v5 = *(id *)(a1 + 8 * v3 + 32);
        v6 = v5;
        v7 = sub_2418A9B40();

        v9 = *(_QWORD *)(v15 + 16);
        v8 = *(_QWORD *)(v15 + 24);
        v10 = v9 + 1;
        if (v9 >= v8 >> 1)
          sub_24183D654(v8 > 1, v9 + 1, 1);
        ++v3;
        *(_QWORD *)(v15 + 16) = v10;
        *(_QWORD *)(v15 + 8 * v9 + 32) = v7;
      }
      while (v2 != v3);
LABEL_14:
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *(_QWORD *)(v4 + 8 * v11 + 32);
        v14 = __OFADD__(v12, v13);
        v12 += v13;
        if (v14)
          break;
        if (v10 == ++v11)
          goto LABEL_17;
      }
      __break(1u);
      goto LABEL_20;
    }
  }
  v4 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (v10)
    goto LABEL_14;
  v12 = 0;
LABEL_17:
  swift_bridgeObjectRelease();
  sub_2418906E4(v12, 0);
}

uint64_t sub_2418906E4(uint64_t a1, char a2)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t result;

  v5 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate), sel_localizedNameKey);
  v6 = sub_2418A9DE0();
  v8 = v7;

  v9 = 0;
  if ((a2 & 1) != 0)
  {
    v10 = 0;
    goto LABEL_6;
  }
  v10 = 0;
  if (a1 < 1)
  {
LABEL_6:
    v18 = sub_2417B0410(v6, v8, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v18;
  }
  sub_24180E3C8();
  v11 = swift_allocObject();
  v12 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v11 + 16) = xmmword_2418D23E0;
  v13 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 64) = v13;
  *(_QWORD *)(v11 + 32) = a1;
  v9 = sub_2418A9DBC();
  v10 = v14;
  swift_bridgeObjectRelease();
  v15 = (void *)sub_2418A9DB0();
  v16 = (id)HKUILocalizedString();

  if (v16)
  {
    sub_2418A9DE0();

    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_2418D23E0;
    *(_QWORD *)(v17 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v17 + 64) = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v17 + 32) = a1;
    sub_2418A9DBC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

id StateOfMindSampleCountContext.init(accessibilityIdentifier:applicationItems:overlayChartController:overlayPredicate:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  char *v5;
  char *v6;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  objc_super v19;

  v6 = v5;
  v10 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(_QWORD *)&v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  v11 = &v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = a2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = a4;
  sub_241890A00();
  v12 = v6;
  v13 = a4;
  sub_241880A3C(a3, a5, 0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v14;
  *(_QWORD *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = a5;
  v15 = *(void **)&v6[v10];
  *(_QWORD *)&v6[v10] = 0;
  v16 = a5;

  v19.receiver = v12;
  v19.super_class = (Class)type metadata accessor for StateOfMindOverlayContext();
  v17 = objc_msgSendSuper2(&v19, sel_init);

  return v17;
}

unint64_t sub_241890A00()
{
  unint64_t result;

  result = qword_257152CA0;
  if (!qword_257152CA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257152CA0);
  }
  return result;
}

id StateOfMindSampleCountContext.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindSampleCountContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StateOfMindSampleCountContext()
{
  return objc_opt_self();
}

uint64_t method lookup function for StateOfMindSampleCountContext()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for MomentaryDatePickerStyle()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for MomentaryDatePickerStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MomentaryDatePickerStyle(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MomentaryDatePickerStyle(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MomentaryDatePickerStyle()
{
  return &type metadata for MomentaryDatePickerStyle;
}

uint64_t sub_241890C14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241890C24()
{
  return MEMORY[0x24BDF5138];
}

uint64_t sub_241890C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, char *, uint64_t);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t *v100;
  void (*v101)(uint64_t, char *, uint64_t);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  _QWORD *v128;
  unint64_t v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132;

  v3 = v2;
  v124 = a2;
  sub_241782A08(0, &qword_257154940, (uint64_t (*)(uint64_t))sub_241891B60, MEMORY[0x24BDF5158], MEMORY[0x24BDEF380]);
  v122 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v123 = (char *)&v98 - v7;
  v8 = sub_2418A9018();
  v114 = *(_QWORD *)(v8 - 8);
  v115 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v111 = v10;
  v113 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417D7ED8();
  v110 = v11;
  v109 = *(_QWORD **)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v118 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241891C38();
  v107 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241782A08(0, &qword_257154950, v18, MEMORY[0x24BDF0900], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v125 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v119 = (uint64_t)&v98 - v21;
  sub_241891B60(0);
  v121 = v22;
  v117 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v112 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v26);
  v116 = (char *)&v98 - v27;
  sub_24172570C(0, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v32 = (char *)&v98 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30, v33);
  v35 = (char *)&v98 - v34;
  v36 = sub_2418A8100();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(_QWORD *)(v37 + 64);
  v40 = MEMORY[0x24BDAC7A8](v36, v39);
  v108 = (char *)&v98 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40, v41);
  v106 = (char *)&v98 - v43;
  v45 = MEMORY[0x24BDAC7A8](v42, v44);
  v120 = (char *)&v98 - v46;
  MEMORY[0x24BDAC7A8](v45, v47);
  v49 = (char *)&v98 - v48;
  sub_2418A8FF4();
  v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v50(v35, 1, v36) == 1)
  {
    v32 = v35;
LABEL_5:
    sub_2417B10EC((uint64_t)v32);
    swift_storeEnumTagMultiPayload();
    v52 = type metadata accessor for MomentaryDatePickerFullView();
    v53 = sub_241891C9C();
    v54 = sub_24172159C(&qword_257154978, (uint64_t (*)(uint64_t))type metadata accessor for MomentaryDatePickerFullView, (uint64_t)&unk_2418D5A88);
    v127 = v125;
    v128 = (_QWORD *)v52;
    v129 = v53;
    v130 = v54;
    swift_getOpaqueTypeConformance2();
    return sub_2418A8D24();
  }
  v103 = v17;
  v51 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v51(v49, v35, v36);
  sub_2418A8FE8();
  if (v50(v32, 1, v36) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v49, v36);
    goto LABEL_5;
  }
  v104 = v37;
  v105 = v49;
  v51(v120, v32, v36);
  v56 = (_QWORD *)v3[1];
  v58 = v3[2];
  v132 = *v3;
  v57 = v132;
  v131 = *(_OWORD *)(v3 + 3);
  v59 = swift_allocObject();
  v100 = &v98;
  v60 = *((_OWORD *)v3 + 1);
  *(_OWORD *)(v59 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v59 + 32) = v60;
  *(_QWORD *)(v59 + 48) = v3[4];
  MEMORY[0x24BDAC7A8](v59, v61);
  sub_24174DDB4((uint64_t)&v132);
  swift_retain();
  sub_24176E320((uint64_t)&v131);
  sub_2418A9708();
  v98 = v57;
  v127 = v57;
  v128 = v56;
  v100 = v56;
  v99 = v58;
  v129 = v58;
  sub_24172570C(0, &qword_25714F250, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v63 = v62;
  MEMORY[0x24269C00C](&v126);
  v102 = a1;
  v101 = (void (*)(uint64_t, char *, uint64_t))v51;
  if ((_QWORD)v126 == 1)
    v64 = sub_2418A95DC();
  else
    v64 = sub_2418A963C();
  v65 = v64;
  KeyPath = swift_getKeyPath();
  v127 = v65;
  swift_retain();
  v67 = sub_2418A8628();
  v68 = v109;
  v69 = (uint64_t)v103;
  v70 = v118;
  v71 = v110;
  ((void (*)(char *, char *, uint64_t))v109[2])(v103, v118, v110);
  swift_release();
  v72 = (uint64_t *)(v69 + *(int *)(v107 + 36));
  *v72 = KeyPath;
  v72[1] = v67;
  ((void (*)(char *, uint64_t))v68[1])(v70, v71);
  v127 = v98;
  v128 = v100;
  v129 = v99;
  MEMORY[0x24269C00C](&v126, v63);
  LOBYTE(v65) = (_QWORD)v126 == 1;
  v73 = v119;
  sub_241891EA4(v69, v119);
  *(_BYTE *)(v73 + *(int *)(v125 + 36)) = v65;
  sub_241891EE8(v69);
  v126 = v131;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  v110 = v127;
  v109 = v128;
  LODWORD(v118) = v129;
  v74 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
  v75 = v104;
  v76 = v106;
  v74(v106, v105, v36);
  v77 = v108;
  v74(v108, v120, v36);
  v79 = v114;
  v78 = v115;
  v80 = v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v113, v102, v115);
  v81 = *(unsigned __int8 *)(v75 + 80);
  v82 = (v81 + 16) & ~v81;
  v83 = (v38 + v81 + v82) & ~v81;
  v84 = (v38 + *(unsigned __int8 *)(v79 + 80) + v83) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  v85 = swift_allocObject();
  v86 = v85 + v82;
  v87 = v101;
  v101(v86, v76, v36);
  v87(v85 + v83, v77, v36);
  (*(void (**)(unint64_t, char *, uint64_t))(v79 + 32))(v85 + v84, v80, v78);
  v88 = type metadata accessor for MomentaryDatePickerFullView();
  v96 = sub_241891C9C();
  v97 = sub_24172159C(&qword_257154978, (uint64_t (*)(uint64_t))type metadata accessor for MomentaryDatePickerFullView, (uint64_t)&unk_2418D5A88);
  v89 = v112;
  v90 = v125;
  v91 = v119;
  sub_2418A94D4();
  swift_release();
  swift_release();
  swift_release();
  sub_241892070(v91);
  v93 = v116;
  v92 = v117;
  v94 = v121;
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v116, v89, v121);
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v123, v93, v94);
  swift_storeEnumTagMultiPayload();
  v127 = v90;
  v128 = (_QWORD *)v88;
  v129 = v96;
  v130 = v97;
  swift_getOpaqueTypeConformance2();
  sub_2418A8D24();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
  v95 = *(void (**)(char *, uint64_t))(v104 + 8);
  v95(v120, v36);
  return ((uint64_t (*)(char *, uint64_t))v95)(v105, v36);
}

uint64_t sub_241891574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v57 = a1;
  v1 = sub_2418A8034();
  v55 = *(_QWORD *)(v1 - 8);
  v56 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2418A7FF8();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2418A8004();
  v49 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2418A807C();
  v14 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (char *)&v48 - v21;
  MEMORY[0x24BDAC7A8](v20, v23);
  v25 = (char *)&v48 - v24;
  v26 = sub_2418A8100();
  v53 = *(_QWORD *)(v26 - 8);
  v54 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v48 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_2418A900C();
  MEMORY[0x24269A530](v30);
  sub_2418A7FEC();
  sub_2418A7FE0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v52);
  sub_2418A7FB0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v50);
  v31 = *(void (**)(char *, uint64_t))(v14 + 8);
  v31(v18, v13);
  sub_2418A8028();
  sub_2418A8064();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v4, v56);
  v31(v22, v13);
  sub_24172159C(&qword_25714F118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
  sub_2418A80E8();
  v31(v25, v13);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v54);
  v58 = v60;
  v59 = v61;
  sub_241721040();
  v32 = sub_2418A92D0();
  v34 = v33;
  LOBYTE(v4) = v35 & 1;
  sub_2418A912C();
  v36 = sub_2418A9294();
  v38 = v37;
  LOBYTE(v12) = v39;
  swift_release();
  sub_2417289EC(v32, v34, (char)v4);
  swift_bridgeObjectRelease();
  sub_2418A9198();
  v40 = sub_2418A9258();
  v42 = v41;
  LOBYTE(v22) = v43;
  v45 = v44;
  sub_2417289EC(v36, v38, v12 & 1);
  result = swift_bridgeObjectRelease();
  v47 = v57;
  *v57 = v40;
  v47[1] = v42;
  *((_BYTE *)v47 + 16) = v22 & 1;
  v47[3] = v45;
  return result;
}

uint64_t sub_2418918D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  char *v31;
  _QWORD *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a4;
  v45 = a3;
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24BDAC7A8](v7, v8);
  v43 = (char *)&v40 - v9;
  sub_2418920CC();
  v11 = v10;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v40 - v17;
  sub_2417C7F00();
  v42 = v19;
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v40 - v25;
  v27 = sub_2418A8100();
  sub_24172159C((unint64_t *)&qword_25714FB70, v6, MEMORY[0x24BDCE948]);
  v28 = a1;
  v29 = a2;
  result = sub_2418A9D80();
  if ((result & 1) != 0)
  {
    v31 = &v18[*(int *)(v11 + 48)];
    v41 = v26;
    v32 = *(_QWORD **)(v27 - 8);
    v33 = (void (*)(char *, uint64_t, uint64_t))v32[2];
    v33(v18, v28, v27);
    v33(v31, v29, v27);
    v34 = &v15[*(int *)(v11 + 48)];
    v33(v15, (uint64_t)v18, v27);
    v33(v34, (uint64_t)v31, v27);
    v35 = (void (*)(char *, char *, uint64_t))v32[4];
    v35(v23, v15, v27);
    v36 = (void (*)(char *, uint64_t))v32[1];
    v36(v34, v27);
    v37 = &v15[*(int *)(v11 + 48)];
    v35(v15, v18, v27);
    v35(v37, v31, v27);
    v35(&v23[*(int *)(v42 + 36)], v37, v27);
    v36(v15, v27);
    v38 = (uint64_t)v41;
    sub_241892130((uint64_t)v23, (uint64_t)v41);
    v39 = (uint64_t)v43;
    sub_2418A9000();
    return sub_2417C56A8(v38, v39, v44);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241891B60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_257154948)
  {
    sub_241782A08(255, &qword_257154950, (uint64_t (*)(uint64_t))sub_241891C38, MEMORY[0x24BDF0900], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v5[0] = v2;
    v5[1] = type metadata accessor for MomentaryDatePickerFullView();
    v5[2] = sub_241891C9C();
    v5[3] = sub_24172159C(&qword_257154978, (uint64_t (*)(uint64_t))type metadata accessor for MomentaryDatePickerFullView, (uint64_t)&unk_2418D5A88);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF3650], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257154948);
  }
}

void sub_241891C38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154958)
  {
    sub_2417D7ED8();
    sub_24175CCA4();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154958);
  }
}

unint64_t sub_241891C9C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257154960;
  if (!qword_257154960)
  {
    sub_241782A08(255, &qword_257154950, (uint64_t (*)(uint64_t))sub_241891C38, MEMORY[0x24BDF0900], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v2 = v1;
    v3[0] = sub_241891D24();
    v3[1] = sub_241891DBC();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257154960);
  }
  return result;
}

unint64_t sub_241891D24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257154968;
  if (!qword_257154968)
  {
    sub_241891C38();
    v2 = v1;
    v3[0] = sub_24172159C((unint64_t *)&qword_25714C590, (uint64_t (*)(uint64_t))sub_2417D7ED8, MEMORY[0x24BDF43B0]);
    v3[1] = sub_24172159C((unint64_t *)&qword_25714D3B8, (uint64_t (*)(uint64_t))sub_24175CCA4, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257154968);
  }
  return result;
}

unint64_t sub_241891DBC()
{
  unint64_t result;

  result = qword_257154970;
  if (!qword_257154970)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF08F0], MEMORY[0x24BDF0900]);
    atomic_store(result, (unint64_t *)&qword_257154970);
  }
  return result;
}

uint64_t sub_241891E00()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241891E34()
{
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  return sub_2418A96D8();
}

uint64_t sub_241891E94@<X0>(uint64_t *a1@<X8>)
{
  return sub_241891574(a1);
}

uint64_t sub_241891EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241891C38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241891EE8(uint64_t a1)
{
  uint64_t v2;

  sub_241891C38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241891F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = sub_2418A8100();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (v5 + v3 + v4) & ~v3;
  v7 = sub_2418A9018();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v5 + *(unsigned __int8 *)(v8 + 80) + v6) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  v10(v0 + v6, v1);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  return swift_deallocObject();
}

uint64_t sub_241891FF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(sub_2418A8100() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = (v6 + v4 + v5) & ~v4;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_2418A9018() - 8) + 80);
  return sub_2418918D0(v1 + v5, v1 + v7, v1 + ((v6 + v8 + v7) & ~v8), a1);
}

uint64_t sub_241892070(uint64_t a1)
{
  uint64_t v2;

  sub_241782A08(0, &qword_257154950, (uint64_t (*)(uint64_t))sub_241891C38, MEMORY[0x24BDF0900], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2418920CC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257154980)
  {
    sub_2418A8100();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257154980);
  }
}

uint64_t sub_241892130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417C7F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241892178()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_257154988;
  if (!qword_257154988)
  {
    sub_241782A08(255, &qword_257154990, (uint64_t (*)(uint64_t))sub_241891B60, MEMORY[0x24BDF5158], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    sub_241782A08(255, &qword_257154950, (uint64_t (*)(uint64_t))sub_241891C38, MEMORY[0x24BDF0900], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v4[2] = v3;
    v4[3] = type metadata accessor for MomentaryDatePickerFullView();
    v4[4] = sub_241891C9C();
    v4[5] = sub_24172159C(&qword_257154978, (uint64_t (*)(uint64_t))type metadata accessor for MomentaryDatePickerFullView, (uint64_t)&unk_2418D5A88);
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257154988);
  }
  return result;
}

void Symbol.image.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_2418922C4()
{
  return sub_2418A9678();
}

uint64_t Symbol.name.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_241892430 + 4 * byte_2418DAEF0[*v0]))(0x7261646E656C6163, 0xE800000000000000);
}

unint64_t sub_241892430()
{
  return 0xD000000000000014;
}

id Symbol.bundle.getter()
{
  _BYTE *v0;
  uint64_t ObjCClassFromMetadata;

  if (*v0 != 6)
    return 0;
  type metadata accessor for MentalHealthUIRepresentative();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  return objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
}

uint64_t Symbol.hash(into:)()
{
  return sub_2418AA578();
}

BOOL static Symbol.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Symbol.hashValue.getter()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

unint64_t sub_2418925DC()
{
  unint64_t result;

  result = qword_257154998;
  if (!qword_257154998)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for Symbol, &type metadata for Symbol);
    atomic_store(result, (unint64_t *)&qword_257154998);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Symbol(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_24189266C + 4 * byte_2418DAEFE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2418926A0 + 4 * byte_2418DAEF9[v4]))();
}

uint64_t sub_2418926A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2418926A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2418926B0);
  return result;
}

uint64_t sub_2418926BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2418926C4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2418926C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2418926D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Symbol()
{
  return &type metadata for Symbol;
}

uint64_t sub_2418926EC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_241892750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  int *v12;
  uint64_t *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v12 = (int *)type metadata accessor for LabelsPicker();
  v13 = (uint64_t *)(a5 + v12[7]);
  *v13 = swift_getKeyPath();
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v15 = (uint64_t *)(a5 + v12[8]);
  *v15 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v14);
  swift_storeEnumTagMultiPayload();
  v16 = a5 + v12[10];
  LOBYTE(v32) = 0;
  sub_2418A96C0();
  v17 = v30;
  *(_BYTE *)v16 = (_BYTE)v29;
  *(_QWORD *)(v16 + 8) = v17;
  *(double *)a5 = a6;
  *(_QWORD *)(a5 + 8) = a1;
  *(_QWORD *)(a5 + 16) = a2;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  v29 = (_QWORD *)a2;
  v30 = a3;
  v31 = a4;
  sub_24172570C(0, &qword_257150630, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v19 = v18;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  MEMORY[0x24269C00C](&v32, v19);
  v20 = swift_bridgeObjectRetain();
  v21 = sub_24188F1D8(v20);
  swift_bridgeObjectRelease();
  v22 = swift_bridgeObjectRetain();
  v23 = sub_24188F1D8(v22);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v23 + 16) <= *(_QWORD *)(v21 + 16) >> 3)
  {
    v29 = (_QWORD *)v21;
    sub_241895364(v23);
  }
  else
  {
    sub_2418954C4(v23, v21);
  }
  swift_bridgeObjectRelease();
  v24 = swift_bridgeObjectRetain();
  v25 = sub_241760D34(v24);
  swift_bridgeObjectRelease();
  v29 = v25;
  sub_241894600((uint64_t *)&v29);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v26 = (uint64_t)v29;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v28 = (uint64_t *)(a5 + v12[9]);
  *v28 = v26;
  v28[1] = 0;
  return result;
}

uint64_t type metadata accessor for LabelsPicker()
{
  uint64_t result;

  result = qword_2571549F8;
  if (!qword_2571549F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241892A20(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t *);
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = (uint64_t (*)(uint64_t *))result;
    v7 = 0;
    v8 = MEMORY[0x24BEE4AF8];
    v12 = (uint64_t (*)(uint64_t *))result;
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      v11 = *(_QWORD *)(a3 + 8 * v7 + 32);
      v13 = v11;
      result = v6(&v13);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v14 = v8;
        if ((result & 1) == 0)
        {
          result = sub_24183D6FC(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v14;
        }
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          result = sub_24183D6FC(v9 > 1, v10 + 1, 1);
          v8 = v14;
        }
        *(_QWORD *)(v8 + 16) = v10 + 1;
        *(_QWORD *)(v8 + 8 * v10 + 32) = v11;
        v6 = v12;
      }
      if (v5 == ++v7)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_241892B60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  _QWORD v45[2];

  v2 = v1;
  v40 = a1;
  v3 = type metadata accessor for LabelsPicker();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  v7 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24189717C();
  v37 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241897374(0);
  v13 = *(_QWORD *)(v12 - 8);
  v38 = v12;
  v39 = v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v41 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = sub_2418A8C64();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  sub_24174B388(0, &qword_257154AB0, &qword_257154A50, (uint64_t (*)(uint64_t))sub_241897214);
  sub_241892F1C(v2, (uint64_t)&v11[*(int *)(v16 + 44)]);
  v17 = v2 + *(int *)(v3 + 40);
  v18 = *(_BYTE *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  LOBYTE(v45[0]) = v18;
  v45[1] = v19;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  v33 = BYTE8(v43);
  sub_2417289A8(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LabelsPicker);
  v20 = *(unsigned __int8 *)(v4 + 80);
  v21 = (v20 + 16) & ~v20;
  v35 = v20 | 7;
  v36 = v21 + v5;
  v22 = swift_allocObject();
  sub_241731B4C((uint64_t)v7, v22 + v21, (uint64_t (*)(_QWORD))type metadata accessor for LabelsPicker);
  sub_241897468(0);
  v32 = v23;
  v34 = sub_24172159C(&qword_257154AA8, (uint64_t (*)(uint64_t))sub_24189717C, MEMORY[0x24BDF4700]);
  v24 = type metadata accessor for ShowAllLabelsPicker();
  v25 = sub_24172159C(&qword_257154AA0, (uint64_t (*)(uint64_t))type metadata accessor for ShowAllLabelsPicker, (uint64_t)&unk_2418D8578);
  v42 = v24;
  *(_QWORD *)&v43 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v26 = v37;
  sub_2418A94D4();
  swift_release();
  swift_release();
  swift_release();
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))sub_24189717C);
  v42 = *(_QWORD *)(v2 + 16);
  v43 = *(_OWORD *)(v2 + 24);
  sub_24172570C(0, &qword_257150630, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](v45);
  sub_2417289A8(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LabelsPicker);
  v27 = swift_allocObject();
  sub_241731B4C((uint64_t)v7, v27 + v21, (uint64_t (*)(_QWORD))type metadata accessor for LabelsPicker);
  sub_24179A010(0);
  v42 = v26;
  *(_QWORD *)&v43 = v32;
  *((_QWORD *)&v43 + 1) = v34;
  v44 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_241897584();
  v28 = v38;
  v29 = v41;
  sub_2418A9540();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v29, v28);
}

uint64_t sub_241892F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;

  v35 = a1;
  v36 = a2;
  sub_241897230();
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v37 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v33 - v7;
  v9 = type metadata accessor for ExpandableInfoSectionHeader();
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (uint64_t *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11, v14);
  v34 = (uint64_t)&v33 - v15;
  if (qword_25714B958 != -1)
    swift_once();
  v16 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v17 = sub_2418A7EFC();
  v19 = v18;
  swift_bridgeObjectRelease();

  v20 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v21 = sub_2418A7EFC();
  v23 = v22;
  swift_bridgeObjectRelease();

  *v13 = v17;
  v13[1] = v19;
  v13[2] = v21;
  v13[3] = v23;
  v24 = (uint64_t *)((char *)v13 + *(int *)(v9 + 24));
  *v24 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v25 = (char *)v13 + *(int *)(v9 + 28);
  v38 = 0;
  sub_2418A96C0();
  v26 = v40;
  *v25 = v39;
  *((_QWORD *)v25 + 1) = v26;
  v27 = v34;
  sub_241731B4C((uint64_t)v13, v34, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableInfoSectionHeader);
  *(_QWORD *)v8 = sub_2418A8C64();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  sub_24174B388(0, &qword_257154AC0, &qword_257154A68, (uint64_t (*)(uint64_t))sub_2418972C8);
  sub_241893278(v35, (uint64_t)&v8[*(int *)(v28 + 44)]);
  sub_2417289A8(v27, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableInfoSectionHeader);
  v29 = v37;
  sub_2417289A8((uint64_t)v8, v37, (uint64_t (*)(_QWORD))sub_241897230);
  v30 = v36;
  sub_2417289A8((uint64_t)v13, v36, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableInfoSectionHeader);
  sub_241897214(0);
  sub_2417289A8(v29, v30 + *(int *)(v31 + 48), (uint64_t (*)(_QWORD))sub_241897230);
  sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))sub_241897230);
  sub_24172588C(v27, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableInfoSectionHeader);
  sub_24172588C(v29, (uint64_t (*)(_QWORD))sub_241897230);
  return sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableInfoSectionHeader);
}

uint64_t sub_241893278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  void **v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(void);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  void *v97;
  __int128 v98;

  v93 = a2;
  v3 = type metadata accessor for AssociationSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v3, v4);
  v91 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LabelsPicker();
  v80 = *(_QWORD *)(v6 - 8);
  v7 = v6;
  v81 = v6;
  v8 = *(_QWORD *)(v80 + 64);
  MEMORY[0x24BDAC7A8](v6, v9);
  sub_2418630BC(0);
  v83 = v10;
  v85 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728250(0, &qword_257153C40, v14, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  MEMORY[0x24BDAC7A8](v15, v16);
  v82 = (char *)&v79 - v17;
  sub_241863040();
  v86 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v84 = (uint64_t)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241863024(0);
  v88 = v21;
  MEMORY[0x24BDAC7A8](v21, v22);
  v87 = (uint64_t)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418633E0(0);
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v89 = (uint64_t)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v28);
  v92 = (uint64_t)&v79 - v29;
  sub_2418972E4(0);
  v31 = v30;
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v90 = (uint64_t)&v79 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v35);
  v37 = (char *)&v79 - v36;
  v38 = *(void **)(a1 + 8);
  v39 = (void **)(a1 + *(int *)(v7 + 36));
  v41 = *v39;
  v40 = v39[1];
  v97 = v41;
  *(_QWORD *)&v98 = v40;
  sub_24172570C(0, &qword_2571522E0, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  v42 = v95;
  v97 = v38;
  swift_bridgeObjectRetain();
  sub_241773E08(v42);
  v43 = v97;
  v95 = *(_QWORD *)(a1 + 16);
  v96 = *(_OWORD *)(a1 + 24);
  sub_24172570C(0, &qword_257150630, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  sub_2418A9828();
  v44 = v97;
  v79 = v98;
  *(_QWORD *)&v37[*(int *)(v31 + 60)] = swift_getKeyPath();
  sub_24172570C(0, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v37 = v43;
  *((_QWORD *)v37 + 1) = v44;
  *((_OWORD *)v37 + 1) = v79;
  v37[32] = 1;
  *(_OWORD *)(v37 + 40) = xmmword_2418DAFA0;
  *((_QWORD *)v37 + 7) = sub_241893A2C;
  *((_QWORD *)v37 + 8) = 0;
  *((_QWORD *)v37 + 9) = sub_241893A78;
  *((_QWORD *)v37 + 10) = 0;
  sub_2417289A8(a1, (uint64_t)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for LabelsPicker);
  v45 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  v46 = swift_allocObject();
  sub_241731B4C((uint64_t)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v46 + v45, (uint64_t (*)(_QWORD))type metadata accessor for LabelsPicker);
  v94 = a1;
  sub_2418630E0();
  sub_241728434((unint64_t *)&qword_257153C80, (uint64_t (*)(uint64_t))sub_2418630E0, (uint64_t (*)(void))sub_241863340, (uint64_t (*)(void))sub_241728524);
  sub_2418A9708();
  v97 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511ACDF0);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24172159C(&qword_257154AC8, (uint64_t (*)(uint64_t))sub_2418630BC, MEMORY[0x24BDF43B0]);
  v47 = (uint64_t)v82;
  v48 = v83;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v13, v48);
  LOBYTE(v8) = sub_2418A90E4();
  v49 = v91;
  sub_241861594(v91);
  sub_24172588C(v49, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A84A8();
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v58 = v84;
  v59 = MEMORY[0x24BDF1088];
  sub_24173F288(v47, v84, (uint64_t)&qword_257153C40, (uint64_t)sub_2418630BC, (uint64_t)MEMORY[0x24BDF1088], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241728250);
  v60 = v58 + *(int *)(v86 + 36);
  *(_BYTE *)v60 = v8;
  *(_QWORD *)(v60 + 8) = v51;
  *(_QWORD *)(v60 + 16) = v53;
  *(_QWORD *)(v60 + 24) = v55;
  *(_QWORD *)(v60 + 32) = v57;
  *(_BYTE *)(v60 + 40) = 0;
  sub_241784BA4(v47, (uint64_t)&qword_257153C40, (uint64_t)sub_2418630BC, (uint64_t)v59, (uint64_t (*)(_QWORD))sub_241728250);
  LOBYTE(a1) = sub_2418A90FC();
  sub_241861594(v49);
  sub_24172588C(v49, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A84A8();
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v69 = v87;
  sub_2417289A8(v58, v87, (uint64_t (*)(_QWORD))sub_241863040);
  v70 = v69 + *(int *)(v88 + 36);
  *(_BYTE *)v70 = a1;
  *(_QWORD *)(v70 + 8) = v62;
  *(_QWORD *)(v70 + 16) = v64;
  *(_QWORD *)(v70 + 24) = v66;
  *(_QWORD *)(v70 + 32) = v68;
  *(_BYTE *)(v70 + 40) = 0;
  sub_24172588C(v58, (uint64_t (*)(_QWORD))sub_241863040);
  v71 = sub_2418A996C();
  v72 = v89;
  sub_24185F448(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v89, 0.0, 1, 0.0, 1, v71, v73);
  sub_24172588C(v69, (uint64_t (*)(_QWORD))sub_241863024);
  v74 = v92;
  sub_241731B4C(v72, v92, (uint64_t (*)(_QWORD))sub_2418633E0);
  v75 = v90;
  sub_2417289A8((uint64_t)v37, v90, (uint64_t (*)(_QWORD))sub_2418972E4);
  sub_2417289A8(v74, v72, (uint64_t (*)(_QWORD))sub_2418633E0);
  v76 = v93;
  sub_2417289A8(v75, v93, (uint64_t (*)(_QWORD))sub_2418972E4);
  sub_2418972C8(0);
  sub_2417289A8(v72, v76 + *(int *)(v77 + 48), (uint64_t (*)(_QWORD))sub_2418633E0);
  sub_24172588C(v74, (uint64_t (*)(_QWORD))sub_2418633E0);
  sub_24172588C((uint64_t)v37, (uint64_t (*)(_QWORD))sub_2418972E4);
  sub_24172588C(v72, (uint64_t (*)(_QWORD))sub_2418633E0);
  return sub_24172588C(v75, (uint64_t (*)(_QWORD))sub_2418972E4);
}

uint64_t sub_241893A2C()
{
  id v0;
  uint64_t v1;

  v0 = (id)HKUILocalizedStringForStateOfMindLabel();
  v1 = sub_2418A9DE0();

  return v1;
}

uint64_t sub_241893A78()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_24172887C(0, (unint64_t *)&qword_2543915E0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2418D1940;
  *(_QWORD *)(v0 + 32) = 0x6C6562614CLL;
  *(_QWORD *)(v0 + 40) = 0xE500000000000000;
  v1 = (id)NSStringFromHKStateOfMindLabel();
  v2 = sub_2418A9DE0();
  v4 = v3;

  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v4;
  return v0;
}

uint64_t sub_241893B18()
{
  type metadata accessor for LabelsPicker();
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  return sub_2418A96D8();
}

uint64_t sub_241893B94@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a2;
  v3 = sub_2418A84E4();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A91E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418631E0();
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241863164();
  v17 = v16;
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v15 = sub_2418A8B8C();
  *((_QWORD *)v15 + 1) = 0x4010000000000000;
  v15[16] = 0;
  sub_241897824();
  sub_241893DE4((uint64_t *)&v15[*(int *)(v21 + 44)]);
  sub_2418A912C();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BDF17C8], v7);
  v22 = sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  KeyPath = swift_getKeyPath();
  sub_2417289A8((uint64_t)v15, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_2418631E0);
  v24 = (uint64_t *)&v20[*(int *)(v17 + 36)];
  *v24 = KeyPath;
  v24[1] = v22;
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_2418631E0);
  v25 = *a1;
  type metadata accessor for LabelsPicker();
  sub_241861034((uint64_t)v6);
  v26 = sub_24180E5E8((uint64_t)v6, v25);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
  v27 = v33;
  sub_2417289A8((uint64_t)v20, v33, (uint64_t (*)(_QWORD))sub_241863164);
  sub_2418630E0();
  *(_QWORD *)(v27 + *(int *)(v28 + 36)) = v26;
  return sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))sub_241863164);
}

uint64_t sub_241893DE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t (*v31)(void);
  _BYTE *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[12];
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a1;
  sub_24172570C(0, &qword_25714CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  v44 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (uint64_t *)&v39[-v3];
  v5 = sub_2418A9684();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241750AD4();
  v11 = v10;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (uint64_t *)&v39[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13, v16);
  v45 = &v39[-v17];
  if (qword_25714B958 != -1)
    swift_once();
  v18 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v19 = sub_2418A7EFC();
  v21 = v20;
  swift_bridgeObjectRelease();

  v47 = v19;
  v48 = v21;
  sub_241721040();
  v22 = sub_2418A92D0();
  v42 = v23;
  v43 = v22;
  v41 = v24;
  v40 = v25 & 1;
  v26 = sub_2418A9660();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x24BDF40B0], v5);
  v27 = v5;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _BYTE *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v44 + 28), v9, v27);
  *v4 = KeyPath;
  v29 = (uint64_t)v15 + *(int *)(v11 + 36);
  v30 = MEMORY[0x24BDF40C0];
  v31 = MEMORY[0x24BDF1008];
  sub_24173F288((uint64_t)v4, v29, (uint64_t)&qword_25714CF98, (uint64_t)MEMORY[0x24BDF40C0], (uint64_t)MEMORY[0x24BDF1008], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_24172570C);
  *v15 = v26;
  swift_retain();
  sub_241784BA4((uint64_t)v4, (uint64_t)&qword_25714CF98, (uint64_t)v30, (uint64_t)v31, (uint64_t (*)(_QWORD))sub_24172570C);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v27);
  swift_release();
  v32 = v45;
  sub_241731B4C((uint64_t)v15, (uint64_t)v45, (uint64_t (*)(_QWORD))sub_241750AD4);
  sub_2417289A8((uint64_t)v32, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_241750AD4);
  v33 = v46;
  v34 = v42;
  v35 = v43;
  v36 = v41;
  *v46 = v43;
  v33[1] = v36;
  LOBYTE(v31) = v40;
  *((_BYTE *)v33 + 16) = v40;
  v33[3] = v34;
  sub_241863274();
  sub_2417289A8((uint64_t)v15, (uint64_t)v33 + *(int *)(v37 + 48), (uint64_t (*)(_QWORD))sub_241750AD4);
  sub_241728A50(v35, v36, (char)v31);
  swift_bridgeObjectRetain();
  sub_24172588C((uint64_t)v32, (uint64_t (*)(_QWORD))sub_241750AD4);
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_241750AD4);
  sub_2417289EC(v35, v36, (char)v31);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24189416C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t *v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;

  v4 = (int *)type metadata accessor for ShowAllLabelsPicker();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241897468(0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2418AA1B8();
  if ((v15 & 1) != 0)
    v16 = 4;
  else
    v16 = v14;
  v25 = *(_QWORD *)(a1 + 16);
  v26 = *(_OWORD *)(a1 + 24);
  sub_24172570C(0, &qword_257150630, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  sub_2418A9828();
  v17 = v27;
  v18 = v28;
  *(_QWORD *)v7 = v16;
  *((_QWORD *)v7 + 1) = v17;
  *((_OWORD *)v7 + 1) = v18;
  v19 = (uint64_t *)&v7[v4[6]];
  *v19 = swift_getKeyPath();
  v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v21 = (uint64_t *)&v7[v4[7]];
  *v21 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v20);
  swift_storeEnumTagMultiPayload();
  v22 = &v7[v4[8]];
  v25 = MEMORY[0x24BEE4AF8];
  sub_24179A010(0);
  sub_2418A96C0();
  v23 = v28;
  *(_QWORD *)v22 = v27;
  *((_QWORD *)v22 + 1) = v23;
  sub_24172159C(&qword_257154AA0, (uint64_t (*)(uint64_t))type metadata accessor for ShowAllLabelsPicker, (uint64_t)&unk_2418D8578);
  sub_2418A9474();
  sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ShowAllLabelsPicker);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v13, v9);
}

uint64_t sub_2418943A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v10[2] = a3;
  swift_bridgeObjectRetain();
  v5 = sub_241892A20((uint64_t)sub_2418975FC, (uint64_t)v10, v4);
  v6 = (uint64_t *)(a3 + *(int *)(type metadata accessor for LabelsPicker() + 36));
  v8 = v6[1];
  v11 = *v6;
  v7 = v11;
  v12 = v8;
  sub_24172570C(0, &qword_2571522E0, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2418A96CC();
  sub_241773E08(v5);
  v11 = v7;
  v12 = v8;
  v10[3] = v13;
  sub_2418A96D8();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241894494(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v19[4];

  v4 = type metadata accessor for LabelsPicker();
  result = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
    goto LABEL_9;
  if (*(_QWORD *)(v10 + 32) == v9)
  {
LABEL_3:
    sub_2417289A8(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for LabelsPicker);
    v12 = 0;
LABEL_10:
    sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for LabelsPicker);
    return v12 & 1;
  }
  if (v11 == 1)
  {
LABEL_9:
    sub_2417289A8(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for LabelsPicker);
    v15 = &v8[*(int *)(v4 + 36)];
    v17 = *(_QWORD *)v15;
    v16 = *((_QWORD *)v15 + 1);
    v19[0] = v17;
    v19[1] = v16;
    sub_24172570C(0, &qword_2571522E0, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    sub_2418A96CC();
    v18 = sub_2418926EC(v9, v19[3]);
    swift_bridgeObjectRelease();
    v12 = v18 ^ 1;
    goto LABEL_10;
  }
  v13 = 5;
  while (1)
  {
    v14 = v13 - 3;
    if (__OFADD__(v13 - 4, 1))
      break;
    if (*(_QWORD *)(v10 + 8 * v13) == v9)
      goto LABEL_3;
    ++v13;
    if (v14 == v11)
      goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_241894600(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24188F15C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_241894668(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_241894668(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *__dst;

  v3 = a1[1];
  result = sub_2418AA4A0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_135;
    if (v3)
      return sub_241894E90(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_143;
  v97 = result;
  v92 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_100:
      v96 = v8;
      if (v12 >= 2)
      {
        v85 = *v92;
        do
        {
          v86 = v12 - 2;
          if (v12 < 2)
            goto LABEL_130;
          if (!v85)
            goto LABEL_142;
          v87 = *(_QWORD *)&v11[16 * v86 + 32];
          v88 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_241894FD0((char *)(v85 + 8 * v87), (char *)(v85 + 8 * *(_QWORD *)&v11[16 * v12 + 16]), v85 + 8 * v88, __dst);
          if (v1)
            break;
          if (v88 < v87)
            goto LABEL_131;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v11 = sub_24188E1A4((uint64_t)v11);
          if (v86 >= *((_QWORD *)v11 + 2))
            goto LABEL_132;
          v89 = &v11[16 * v86 + 32];
          *(_QWORD *)v89 = v87;
          *((_QWORD *)v89 + 1) = v88;
          v90 = *((_QWORD *)v11 + 2);
          if (v12 > v90)
            goto LABEL_133;
          memmove(&v11[16 * v12 + 16], &v11[16 * v12 + 32], 16 * (v90 - v12));
          *((_QWORD *)v11 + 2) = v90 - 1;
          v12 = v90 - 1;
        }
        while (v90 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v96 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    type metadata accessor for Label(0);
    v7 = sub_2418A9EE8();
    *(_QWORD *)(v7 + 16) = v6;
    v96 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v93 = *a1 + 16;
  v91 = *a1 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v100 = v3;
  while (1)
  {
    v13 = v9++;
    v101 = v13;
    if (v9 < v3)
    {
      v14 = (id)HKUILocalizedStringForStateOfMindLabel();
      sub_2418A9DE0();

      v15 = (id)HKUILocalizedStringForStateOfMindLabel();
      sub_2418A9DE0();

      sub_241721040();
      v98 = sub_2418AA224();
      swift_bridgeObjectRelease();
      v3 = v100;
      swift_bridgeObjectRelease();
      v9 = v13 + 2;
      if (v13 + 2 < v100)
      {
        v94 = v11;
        v16 = v93 + 8 * v13;
        while (1)
        {
          v17 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_2418A9DE0();

          v18 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_2418A9DE0();

          v19 = sub_2418AA224();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v98 == -1) == (v19 != -1))
            break;
          v16 += 8;
          ++v9;
          v3 = v100;
          if (v100 == v9)
          {
            v9 = v100;
            v11 = v94;
            goto LABEL_23;
          }
        }
        v11 = v94;
        v3 = v100;
      }
LABEL_23:
      if (v98 == -1)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v20 = v9 - 1;
          v21 = v13;
          do
          {
            if (v21 != v20)
            {
              if (!v10)
                goto LABEL_141;
              v22 = *(_QWORD *)(v10 + 8 * v21);
              *(_QWORD *)(v10 + 8 * v21) = *(_QWORD *)(v10 + 8 * v20);
              *(_QWORD *)(v10 + 8 * v20) = v22;
            }
            v62 = ++v21 < v20--;
          }
          while (v62);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_50;
    if (__OFSUB__(v9, v13))
      goto LABEL_134;
    if (v9 - v13 >= v97)
      goto LABEL_50;
    if (__OFADD__(v13, v97))
      goto LABEL_136;
    v23 = v13 + v97 >= v3 ? v3 : v13 + v97;
    if (v23 < v13)
      break;
    if (v9 != v23)
    {
      v95 = v11;
      v24 = (uint64_t *)(v91 + 8 * v9);
      v99 = v23;
      do
      {
        v25 = v24;
        do
        {
          v26 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_2418A9DE0();

          v27 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_2418A9DE0();

          sub_241721040();
          v28 = sub_2418AA224();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v28 != -1)
            break;
          if (!v10)
            goto LABEL_139;
          v29 = *v25;
          *v25 = v25[1];
          v25[1] = v29;
          --v25;
          ++v13;
        }
        while (v9 != v13);
        ++v9;
        ++v24;
        v13 = v101;
      }
      while (v9 != v99);
      v9 = v99;
      v11 = v95;
    }
LABEL_50:
    if (v9 < v13)
      goto LABEL_129;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_24188E004(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v31 = *((_QWORD *)v11 + 2);
    v30 = *((_QWORD *)v11 + 3);
    v12 = v31 + 1;
    if (v31 >= v30 >> 1)
      v11 = sub_24188E004((char *)(v30 > 1), v31 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v32 = v11 + 32;
    v33 = &v11[16 * v31 + 32];
    *(_QWORD *)v33 = v13;
    *((_QWORD *)v33 + 1) = v9;
    if (v31)
    {
      v102 = v9;
      while (1)
      {
        v34 = v12 - 1;
        if (v12 >= 4)
        {
          v39 = &v32[16 * v12];
          v40 = *((_QWORD *)v39 - 8);
          v41 = *((_QWORD *)v39 - 7);
          v45 = __OFSUB__(v41, v40);
          v42 = v41 - v40;
          if (v45)
            goto LABEL_118;
          v44 = *((_QWORD *)v39 - 6);
          v43 = *((_QWORD *)v39 - 5);
          v45 = __OFSUB__(v43, v44);
          v37 = v43 - v44;
          v38 = v45;
          if (v45)
            goto LABEL_119;
          v46 = v12 - 2;
          v47 = &v32[16 * v12 - 32];
          v49 = *(_QWORD *)v47;
          v48 = *((_QWORD *)v47 + 1);
          v45 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          if (v45)
            goto LABEL_121;
          v45 = __OFADD__(v37, v50);
          v51 = v37 + v50;
          if (v45)
            goto LABEL_124;
          if (v51 >= v42)
          {
            v69 = &v32[16 * v34];
            v71 = *(_QWORD *)v69;
            v70 = *((_QWORD *)v69 + 1);
            v45 = __OFSUB__(v70, v71);
            v72 = v70 - v71;
            if (v45)
              goto LABEL_128;
            v62 = v37 < v72;
            goto LABEL_88;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v63 = *((_QWORD *)v11 + 4);
            v64 = *((_QWORD *)v11 + 5);
            v45 = __OFSUB__(v64, v63);
            v56 = v64 - v63;
            v57 = v45;
            goto LABEL_82;
          }
          v36 = *((_QWORD *)v11 + 4);
          v35 = *((_QWORD *)v11 + 5);
          v45 = __OFSUB__(v35, v36);
          v37 = v35 - v36;
          v38 = v45;
        }
        if ((v38 & 1) != 0)
          goto LABEL_120;
        v46 = v12 - 2;
        v52 = &v32[16 * v12 - 32];
        v54 = *(_QWORD *)v52;
        v53 = *((_QWORD *)v52 + 1);
        v55 = __OFSUB__(v53, v54);
        v56 = v53 - v54;
        v57 = v55;
        if (v55)
          goto LABEL_123;
        v58 = &v32[16 * v34];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        v45 = __OFSUB__(v59, v60);
        v61 = v59 - v60;
        if (v45)
          goto LABEL_126;
        if (__OFADD__(v56, v61))
          goto LABEL_127;
        if (v56 + v61 >= v37)
        {
          v62 = v37 < v61;
LABEL_88:
          if (v62)
            v34 = v46;
          goto LABEL_90;
        }
LABEL_82:
        if ((v57 & 1) != 0)
          goto LABEL_122;
        v65 = &v32[16 * v34];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v45 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v45)
          goto LABEL_125;
        if (v68 < v56)
          goto LABEL_15;
LABEL_90:
        v73 = v34 - 1;
        if (v34 - 1 >= v12)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        v74 = v10;
        if (!v10)
          goto LABEL_140;
        v75 = v11;
        v76 = &v32[16 * v73];
        v77 = v32;
        v78 = *(_QWORD *)v76;
        v79 = v77;
        v80 = v34;
        v81 = &v77[16 * v34];
        v82 = *((_QWORD *)v81 + 1);
        v83 = v74;
        sub_241894FD0((char *)(v74 + 8 * *(_QWORD *)v76), (char *)(v74 + 8 * *(_QWORD *)v81), v74 + 8 * v82, __dst);
        if (v1)
          goto LABEL_111;
        if (v82 < v78)
          goto LABEL_115;
        if (v80 > *((_QWORD *)v75 + 2))
          goto LABEL_116;
        *(_QWORD *)v76 = v78;
        *(_QWORD *)&v79[16 * v73 + 8] = v82;
        v84 = *((_QWORD *)v75 + 2);
        if (v80 >= v84)
          goto LABEL_117;
        v32 = v79;
        v11 = v75;
        v12 = v84 - 1;
        memmove(v81, v81 + 16, 16 * (v84 - 1 - v80));
        *((_QWORD *)v75 + 2) = v84 - 1;
        v10 = v83;
        v9 = v102;
        if (v84 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v100;
    if (v9 >= v100)
    {
      v8 = v96;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  result = sub_2418AA374();
  __break(1u);
  return result;
}

uint64_t sub_241894E90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t *v14;

  v13 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = (uint64_t *)(*a4 + 8 * a3 - 8);
LABEL_5:
    v7 = v13;
    v14 = v6;
    while (1)
    {
      v8 = (id)HKUILocalizedStringForStateOfMindLabel();
      sub_2418A9DE0();

      v9 = (id)HKUILocalizedStringForStateOfMindLabel();
      sub_2418A9DE0();

      sub_241721040();
      v10 = sub_2418AA224();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v10 != -1)
      {
LABEL_4:
        ++v4;
        v6 = v14 + 1;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v11 = *v6;
      result = v6[1];
      *v6 = result;
      v6[1] = v11;
      --v6;
      if (v4 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_241894FD0(char *a1, char *__src, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;
  char *v32;

  v4 = __dst;
  v5 = __src;
  v6 = __src - a1;
  v7 = __src - a1 + 7;
  if (__src - a1 >= 0)
    v7 = __src - a1;
  v8 = v7 >> 3;
  v10 = a3 - (_QWORD)__src;
  v11 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v11 = a3 - (_QWORD)__src;
  v12 = v11 >> 3;
  v32 = a1;
  v31 = __dst;
  if (v8 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != __src || &__src[8 * v12] <= __dst)
        memmove(__dst, __src, 8 * v12);
      v20 = &v4[8 * v12];
      v30 = v20;
      v32 = v5;
      if (a1 < v5 && v10 >= 8)
      {
        v21 = (char *)(a3 - 8);
        v22 = v5;
        do
        {
          v29 = v5;
          v23 = v21 + 8;
          v22 -= 8;
          v24 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_2418A9DE0();

          v25 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_2418A9DE0();

          sub_241721040();
          v26 = sub_2418AA224();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v26 == -1)
          {
            if (v23 != v29 || v21 >= v29)
              *(_QWORD *)v21 = *(_QWORD *)v22;
            v32 = v22;
          }
          else
          {
            v30 = v20 - 8;
            if (v23 < v20 || v21 >= v20 || v23 != v20)
              *(_QWORD *)v21 = *((_QWORD *)v20 - 1);
            v22 = v29;
            v20 -= 8;
          }
          if (v22 <= a1)
            break;
          v21 -= 8;
          v5 = v22;
        }
        while (v20 > v4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (__dst != a1 || &a1[8 * v8] <= __dst)
      memmove(__dst, a1, 8 * v8);
    v14 = &v4[8 * v8];
    v30 = v14;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      v15 = a1;
      do
      {
        v16 = (id)HKUILocalizedStringForStateOfMindLabel();
        sub_2418A9DE0();

        v17 = (id)HKUILocalizedStringForStateOfMindLabel();
        sub_2418A9DE0();

        sub_241721040();
        v18 = sub_2418AA224();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18 == -1)
        {
          v19 = v5 + 8;
          if (v15 < v5 || v15 >= v19 || v15 != v5)
            *(_QWORD *)v15 = *(_QWORD *)v5;
        }
        else
        {
          if (v15 != v4)
            *(_QWORD *)v15 = *(_QWORD *)v4;
          v4 += 8;
          v31 = v4;
          v19 = v5;
        }
        v15 += 8;
        if (v4 >= v14)
          break;
        v5 = v19;
      }
      while ((unint64_t)v19 < a3);
      v32 = v15;
    }
LABEL_43:
    sub_24188E0F8(&v32, &v31, &v30);
    return 1;
  }
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_241895364(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    result = sub_24189586C(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v7)
    return swift_release();
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2418954C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[6];

  v2 = a2;
  v34[5] = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v6 = a1 + 56;
    v5 = *(_QWORD *)(a1 + 56);
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v33 = ~v7;
    if (-v7 < 64)
      v8 = ~(-1 << -(char)v7);
    else
      v8 = -1;
    v9 = v8 & v5;
    v10 = (unint64_t)(63 - v7) >> 6;
    v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v4 << 6);
        }
        else
        {
          v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v14 >= v10)
            goto LABEL_35;
          v15 = *(_QWORD *)(v6 + 8 * v14);
          v16 = v4 + 1;
          if (!v15)
          {
            v16 = v4 + 2;
            if (v4 + 2 >= v10)
              goto LABEL_35;
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              v16 = v4 + 3;
              if (v4 + 3 >= v10)
                goto LABEL_35;
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                v16 = v4 + 4;
                if (v4 + 4 >= v10)
                  goto LABEL_35;
                v15 = *(_QWORD *)(v6 + 8 * v16);
                if (!v15)
                {
                  v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_35:
                    swift_bridgeObjectRetain();
                    sub_241762E9C();
                    return v2;
                  }
                  v15 = *(_QWORD *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      v16 = v17 + 1;
                      if (__OFADD__(v17, 1))
                        break;
                      if (v16 >= v10)
                        goto LABEL_35;
                      v15 = *(_QWORD *)(v6 + 8 * v16);
                      ++v17;
                      if (v15)
                        goto LABEL_23;
                    }
LABEL_37:
                    __break(1u);
                  }
                  v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          v9 = (v15 - 1) & v15;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          v4 = v16;
        }
        v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v13);
        sub_2418AA56C();
        sub_2418AA578();
        v19 = sub_2418AA59C();
        v20 = -1 << *(_BYTE *)(v2 + 32);
        v21 = v19 & ~v20;
      }
      while (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      v22 = *(_QWORD *)(v2 + 48);
      if (*(_QWORD *)(v22 + 8 * v21) == v18)
        break;
      while (1)
      {
        v21 = (v21 + 1) & ~v20;
        if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        if (*(_QWORD *)(v22 + 8 * v21) == v18)
          goto LABEL_28;
      }
    }
LABEL_28:
    v34[0] = a1;
    v34[1] = v6;
    v34[2] = v33;
    v34[3] = v4;
    v34[4] = v9;
    v23 = (unint64_t)(63 - v20) >> 6;
    v24 = 8 * v23;
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 < 0x81 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe, v26);
      v28 = (char *)&v32 - v27;
      memcpy((char *)&v32 - v27, (const void *)(v2 + 56), v24);
      v29 = sub_241895990((uint64_t)v28, v23, v2, v21, v34);
      swift_release();
      sub_241762E9C();
    }
    else
    {
      v30 = (void *)swift_slowAlloc();
      memcpy(v30, (const void *)(v2 + 56), v24);
      v29 = sub_241895990((uint64_t)v30, v23, v2, v21, v34);
      swift_release();
      sub_241762E9C();
      MEMORY[0x24269D548](v30, -1, -1);
    }
    return v29;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_24189586C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = *v1;
  sub_2418AA56C();
  sub_2418AA578();
  v4 = sub_2418AA59C();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v7 = *(_QWORD *)(v3 + 48);
  if (*(_QWORD *)(v7 + 8 * v6) != a1)
  {
    v8 = ~v5;
    do
    {
      v6 = (v6 + 1) & v8;
      if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v7 + 8 * v6) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v1;
  v13 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24188C56C();
    v10 = v13;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v6);
  sub_241895E78(v6);
  *v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_241895990(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  int64_t v31;

  v7 = (unint64_t *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v10 = a3 + 56;
  while (1)
  {
    v15 = a5[3];
    v16 = a5[4];
    if (!v16)
      break;
    v17 = (v16 - 1) & v16;
    v18 = __clz(__rbit64(v16)) | (v15 << 6);
LABEL_16:
    v25 = *(_QWORD *)(*(_QWORD *)(*a5 + 48) + 8 * v18);
    a5[3] = v15;
    a5[4] = v17;
    sub_2418AA56C();
    sub_2418AA578();
    result = sub_2418AA59C();
    v26 = -1 << *(_BYTE *)(a3 + 32);
    v27 = result & ~v26;
    v11 = v27 >> 6;
    v12 = 1 << v27;
    if (((1 << v27) & *(_QWORD *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      v28 = *(_QWORD *)(a3 + 48);
      if (*(_QWORD *)(v28 + 8 * v27) == v25)
      {
LABEL_3:
        v13 = v11;
        v14 = v7[v11];
        v7[v13] = v14 & ~v12;
        if ((v12 & v14) != 0)
        {
          if (__OFSUB__(v9--, 1))
            goto LABEL_36;
          if (!v9)
            return MEMORY[0x24BEE4B08];
        }
      }
      else
      {
        for (i = v27 + 1; ; i = v30 + 1)
        {
          v30 = i & ~v26;
          if (((*(_QWORD *)(v10 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
            break;
          if (*(_QWORD *)(v28 + 8 * v30) == v25)
          {
            v11 = v30 >> 6;
            v12 = 1 << v30;
            goto LABEL_3;
          }
        }
      }
    }
  }
  v19 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    v20 = (unint64_t)(a5[2] + 64) >> 6;
    v21 = a5[3];
    if (v19 >= v20)
      goto LABEL_33;
    v22 = a5[1];
    v23 = *(_QWORD *)(v22 + 8 * v19);
    if (v23)
      goto LABEL_15;
    v24 = v15 + 2;
    v21 = v15 + 1;
    if (v15 + 2 >= v20)
      goto LABEL_33;
    v23 = *(_QWORD *)(v22 + 8 * v24);
    if (!v23)
    {
      v21 = v15 + 2;
      if (v15 + 3 >= v20)
        goto LABEL_33;
      v23 = *(_QWORD *)(v22 + 8 * (v15 + 3));
      if (v23)
      {
        v19 = v15 + 3;
        goto LABEL_15;
      }
      v24 = v15 + 4;
      v21 = v15 + 3;
      if (v15 + 4 >= v20)
        goto LABEL_33;
      v23 = *(_QWORD *)(v22 + 8 * v24);
      if (!v23)
      {
        v19 = v15 + 5;
        v21 = v15 + 4;
        if (v15 + 5 >= v20)
          goto LABEL_33;
        v23 = *(_QWORD *)(v22 + 8 * v19);
        if (!v23)
        {
          v21 = v20 - 1;
          v31 = v15 + 6;
          while (v20 != v31)
          {
            v23 = *(_QWORD *)(v22 + 8 * v31++);
            if (v23)
            {
              v19 = v31 - 1;
              goto LABEL_15;
            }
          }
LABEL_33:
          a5[3] = v21;
          a5[4] = 0;
          swift_retain();
          return sub_241895C04(v7, a2, v9, a3);
        }
        goto LABEL_15;
      }
    }
    v19 = v24;
LABEL_15:
    v17 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v19 << 6);
    v15 = v19;
    goto LABEL_16;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_241895C04(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_2418972F8(0, (unint64_t *)&qword_257154910, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE24D8]);
  result = sub_2418AA29C();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    sub_2418AA56C();
    sub_2418AA578();
    result = sub_2418AA59C();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_241895E78(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_2418AA254();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_2418AA56C();
        sub_2418AA578();
        v10 = sub_2418AA59C() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_QWORD *)(v11 + 8 * v2);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t *sub_241896020(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[7];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    a1[4] = a2[4];
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v16 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v20 = a3[8];
    v21 = (uint64_t *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v24 = a3[9];
    v25 = a3[10];
    v26 = (uint64_t *)((char *)v4 + v24);
    v27 = (uint64_t *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (char *)v4 + v25;
    v30 = (char *)a2 + v25;
    *v29 = *v30;
    *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2418962B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = a1 + *(int *)(a2 + 32);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

_QWORD *sub_24189643C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = a3[7];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8EB0();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v15 = (char *)v9 + v14;
    v16 = (char *)v10 + v14;
    v17 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v18 = a3[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v22 = a3[9];
  v23 = a3[10];
  v24 = (_QWORD *)((char *)a1 + v22);
  v25 = (_QWORD *)((char *)a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (char *)a1 + v23;
  v28 = (char *)a2 + v23;
  *v27 = *v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_2418966AC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t);
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[7];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v6, (uint64_t)&qword_25714CE28, (uint64_t)type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v14 = (char *)v7 + v13;
      v15 = (char *)v8 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = a3[8];
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v17, (uint64_t)&unk_257154F20, (uint64_t)MEMORY[0x24BDEB418], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v20, v21);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v18, v19, v22);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v23 = a3[9];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_retain();
  swift_release();
  v26 = a3[10];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  *v27 = *v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2418969C4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[7];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A8EB0();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
    v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v19 = a3[8];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v25 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  return a1;
}

_QWORD *sub_241896BE0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[7];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v6, (uint64_t)&qword_25714CE28, (uint64_t)type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v9);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v7, v8, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
      }
      v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v16 = &v7[v15];
      v17 = &v8[v15];
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v19 = a3[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v19, (uint64_t)&unk_257154F20, (uint64_t)MEMORY[0x24BDEB418], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v22, v23);
    v25 = v24;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v20, v21, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
  }
  v27 = a3[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  *(_QWORD *)((char *)a1 + v27) = *(_QWORD *)((char *)a2 + v27);
  swift_bridgeObjectRelease();
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_release();
  v30 = a3[10];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *v31 = *v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_release();
  return a1;
}

uint64_t sub_241896EC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241896ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_241896FA4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241896FB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_24189707C()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_24189716C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24189717C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154A48)
  {
    sub_24172570C(255, &qword_257154A50, (uint64_t (*)(uint64_t))sub_241897214, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417406BC(&qword_257154A88, &qword_257154A50, (uint64_t (*)(uint64_t))sub_241897214);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154A48);
  }
}

void sub_241897214(uint64_t a1)
{
  sub_2417933C4(a1, &qword_257154A58, (void (*)(uint64_t))type metadata accessor for ExpandableInfoSectionHeader, (void (*)(uint64_t))sub_241897230);
}

void sub_241897230()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154A60)
  {
    sub_24172570C(255, &qword_257154A68, (uint64_t (*)(uint64_t))sub_2418972C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417406BC(&qword_257154A80, &qword_257154A68, (uint64_t (*)(uint64_t))sub_2418972C8);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154A60);
  }
}

void sub_2418972C8(uint64_t a1)
{
  sub_2417933C4(a1, &qword_257154A70, sub_2418972E4, sub_2418633E0);
}

void sub_2418972E4(uint64_t a1)
{
  sub_2418972F8(a1, &qword_257154A78, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for TagPicker);
}

void sub_2418972F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    type metadata accessor for Label(255);
    v7 = v6;
    v8 = sub_24172159C(&qword_257152230, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t)&unk_2418D1168);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_241897374(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_257154A90)
  {
    sub_24189717C();
    v3 = v2;
    sub_241897468(255);
    v5 = v4;
    v6 = sub_24172159C(&qword_257154AA8, (uint64_t (*)(uint64_t))sub_24189717C, MEMORY[0x24BDF4700]);
    type metadata accessor for ShowAllLabelsPicker();
    sub_24172159C(&qword_257154AA0, (uint64_t (*)(uint64_t))type metadata accessor for ShowAllLabelsPicker, (uint64_t)&unk_2418D8578);
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = v6;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF3650], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_257154A90);
  }
}

void sub_241897468(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  if (!qword_257154A98)
  {
    v4[0] = type metadata accessor for ShowAllLabelsPicker();
    v4[1] = sub_24172159C(&qword_257154AA0, (uint64_t (*)(uint64_t))type metadata accessor for ShowAllLabelsPicker, (uint64_t)&unk_2418D8578);
    v2 = MEMORY[0x24269D434](a1, v4, MEMORY[0x24BDF32F0], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_257154A98);
  }
}

uint64_t sub_2418974F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LabelsPicker() - 8) + 80);
  return sub_24189416C(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_241897538(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LabelsPicker() - 8) + 80);
  return sub_2418943A0(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_241897584()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_257154AB8;
  if (!qword_257154AB8)
  {
    sub_24179A010(255);
    v2 = v1;
    v3 = sub_24172159C(&qword_25714BE08, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t)&unk_2418D11AC);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE12C0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_257154AB8);
  }
  return result;
}

uint64_t sub_2418975FC(uint64_t *a1)
{
  uint64_t v1;

  return sub_241894494(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t objectdestroyTm_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for LabelsPicker();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 28);
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v3 + *(int *)(v1 + 32);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2418977F0()
{
  type metadata accessor for LabelsPicker();
  return sub_241893B18();
}

uint64_t sub_24189781C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_241893B94(*(double **)(v1 + 16), a1);
}

void sub_241897824()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154AD0)
  {
    sub_24172570C(255, &qword_257153C68, (uint64_t (*)(uint64_t))sub_241863274, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154AD0);
  }
}

uint64_t sub_2418978B0()
{
  sub_241897374(255);
  sub_24179A010(255);
  sub_24189717C();
  sub_241897468(255);
  sub_24172159C(&qword_257154AA8, (uint64_t (*)(uint64_t))sub_24189717C, MEMORY[0x24BDF4700]);
  type metadata accessor for ShowAllLabelsPicker();
  sub_24172159C(&qword_257154AA0, (uint64_t (*)(uint64_t))type metadata accessor for ShowAllLabelsPicker, (uint64_t)&unk_2418D8578);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  sub_241897584();
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_2418979B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v36;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v14 = *(int *)(v13 + 32);
    v36 = (char *)v10 + v14;
    v15 = &v11[v14];
    v16 = sub_2418A8100();
    v17 = a3;
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v18(v36, v15, v16);
    v19 = v17;
    v20 = *(int *)(v17 + 28);
    v21 = (uint64_t *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_2418A8EB0();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v27 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v28 = (char *)v21 + v27;
      v29 = (char *)v22 + v27;
      v30 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v31 = *(int *)(v19 + 32);
    v32 = (uint64_t *)((char *)v4 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v34 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      *v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_241897C88(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_release();
  swift_release();
  v4 = a1 + a2[6];
  swift_release();
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v6 = v4 + *(int *)(v5 + 32);
  v7 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8EB0();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = v8 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v12 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  v13 = a1 + a2[8];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v14 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

_QWORD *sub_241897E3C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a3[6];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v12 = *(int *)(v11 + 32);
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = sub_2418A8100();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v16(v13, v14, v15);
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_2418A8EB0();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v24 = (char *)v18 + v23;
    v25 = (char *)v19 + v23;
    v26 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  else
  {
    *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v27 = a3[8];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  }
  else
  {
    *v28 = *v29;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2418980D8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t (*v28)(uint64_t);
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_retain();
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v10 = *(int *)(v9 + 32);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_2418A8100();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  if (a1 != a2)
  {
    v14 = a3[7];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v14, (uint64_t)&qword_25714F150, (uint64_t)type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v17);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2418A8EB0();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(v15, v16, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      v21 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v22 = (char *)v15 + v21;
      v23 = (char *)v16 + v21;
      v24 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v25 = a3[8];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v25, (uint64_t)&unk_257154F20, (uint64_t)MEMORY[0x24BDEB418], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v28, v29);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v26, v27, v30);
    }
    else
    {
      *v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2418983E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v11 = *(int *)(v10 + 32);
  v12 = (char *)v7 + v11;
  v13 = v8 + v11;
  v14 = sub_2418A8100();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_2418A8EB0();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v16, v17, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
    }
    v23 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v24 = &v16[v23];
    v25 = &v17[v23];
    v26 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v27 = a3[8];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v31 = v30;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v32 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v28, v29, v32);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_241898658(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t (*v31)(uint64_t);
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  swift_release();
  *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v11 = *(int *)(v10 + 32);
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = sub_2418A8100();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  if (a1 != a2)
  {
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v15, (uint64_t)&qword_25714F150, (uint64_t)type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v18);
    v20 = v19;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_2418A8EB0();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v17, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
      }
      v24 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v25 = &v16[v24];
      v26 = &v17[v24];
      v27 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    v28 = a3[8];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v32 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v28, (uint64_t)&unk_257154F20, (uint64_t)MEMORY[0x24BDEB418], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v31, v32);
    v34 = v33;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v35 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v29, v30, v35);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241898948()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241898954(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_241898A60()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241898A6C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ReflectiveIntervalPickerButtonView(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257154B30);
}

void sub_241898B88()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24172570C(319, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_241898C88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241898C98@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(void);
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;

  v104 = a1;
  v102 = sub_2418A88BC();
  MEMORY[0x24BDAC7A8](v102, v2);
  v100 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418994B0();
  v103 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v101 = (uint64_t)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  v8 = MEMORY[0x24BDAC7A8](v99, v7);
  v95 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v91 = (uint64_t)&v89 - v11;
  v12 = (int *)type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241899558(0);
  v90 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241899574(0);
  v93 = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v92 = (uint64_t)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241899590(0);
  v97 = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v94 = (uint64_t)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418995AC(0);
  v98 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v96 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *v1;
  v30 = v1[3];
  v105 = *(_OWORD *)(v1 + 1);
  v106 = v30;
  v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870];
  sub_24172570C(0, &qword_25714F250, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  sub_2418A9828();
  v89 = v107;
  v32 = v108;
  type metadata accessor for ReflectiveIntervalPickerButtonView(0);
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v31);
  sub_2418A9828();
  *(_QWORD *)v15 = v29;
  *(_OWORD *)(v15 + 8) = v89;
  *((_QWORD *)v15 + 3) = v32;
  v33 = (uint64_t *)&v15[v12[7]];
  *v33 = swift_getKeyPath();
  v34 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v35 = (uint64_t *)&v15[v12[8]];
  *v35 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v34);
  swift_storeEnumTagMultiPayload();
  v36 = (uint64_t *)&v15[v12[9]];
  *v36 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v34);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v34) = sub_2418A90FC();
  v37 = v91;
  sub_241861F08(v91);
  sub_24172588C(v37, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_2418A84A8();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  sub_2417289A8((uint64_t)v15, (uint64_t)v19, type metadata accessor for ReflectiveIntervalPickerSelectionView);
  v46 = &v19[*(int *)(v90 + 36)];
  *v46 = (char)v34;
  *((_QWORD *)v46 + 1) = v39;
  *((_QWORD *)v46 + 2) = v41;
  *((_QWORD *)v46 + 3) = v43;
  *((_QWORD *)v46 + 4) = v45;
  v46[40] = 0;
  sub_24172588C((uint64_t)v15, type metadata accessor for ReflectiveIntervalPickerSelectionView);
  LOBYTE(v34) = sub_2418A9108();
  v47 = v95;
  sub_241861F08(v95);
  sub_2418A879C();
  sub_24172588C(v47, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_2418A84A8();
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v56 = v92;
  sub_2417289A8((uint64_t)v19, v92, (uint64_t (*)(_QWORD))sub_241899558);
  v57 = v56 + *(int *)(v93 + 36);
  *(_BYTE *)v57 = (_BYTE)v34;
  *(_QWORD *)(v57 + 8) = v49;
  *(_QWORD *)(v57 + 16) = v51;
  *(_QWORD *)(v57 + 24) = v53;
  *(_QWORD *)(v57 + 32) = v55;
  *(_BYTE *)(v57 + 40) = 0;
  sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))sub_241899558);
  LOBYTE(v34) = sub_2418A9114();
  sub_241861F08(v37);
  sub_24172588C(v37, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_2418A84A8();
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v66 = v94;
  sub_2417289A8(v56, v94, (uint64_t (*)(_QWORD))sub_241899574);
  v67 = v66 + *(int *)(v97 + 36);
  *(_BYTE *)v67 = (_BYTE)v34;
  *(_QWORD *)(v67 + 8) = v59;
  *(_QWORD *)(v67 + 16) = v61;
  *(_QWORD *)(v67 + 24) = v63;
  *(_QWORD *)(v67 + 32) = v65;
  *(_BYTE *)(v67 + 40) = 0;
  sub_24172588C(v56, (uint64_t (*)(_QWORD))sub_241899574);
  v68 = sub_2418A9960();
  v70 = v69;
  v71 = (uint64_t)v96;
  v72 = (uint64_t)&v96[*(int *)(v98 + 36)];
  v73 = v100;
  v74 = &v100[*(int *)(v102 + 20)];
  v75 = *MEMORY[0x24BDEEB68];
  v76 = sub_2418A8BE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 104))(v74, v75, v76);
  __asm { FMOV            V0.2D, #12.0 }
  *v73 = _Q0;
  v82 = sub_24189933C();
  v83 = v101;
  v84 = MEMORY[0x24BDED998];
  sub_2417289A8((uint64_t)v73, v101, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v85 = v103;
  *(_QWORD *)(v83 + *(int *)(v103 + 52)) = v82;
  *(_WORD *)(v83 + *(int *)(v85 + 56)) = 256;
  sub_24172588C((uint64_t)v73, (uint64_t (*)(_QWORD))v84);
  sub_241731B4C(v83, v72, (uint64_t (*)(_QWORD))sub_2418994B0);
  sub_2418995C8();
  v87 = (uint64_t *)(v72 + *(int *)(v86 + 36));
  *v87 = v68;
  v87[1] = v70;
  sub_241731B4C(v66, v71, (uint64_t (*)(_QWORD))sub_241899590);
  return sub_241731B4C(v71, v104, (uint64_t (*)(_QWORD))sub_2418995AC);
}

uint64_t sub_24189933C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  id v6;
  uint64_t v7;
  int v8;
  int v9;
  void *v10;
  uint64_t v12;

  v0 = sub_2418A84E4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ReflectiveIntervalPickerButtonView(0);
  sub_241861034((uint64_t)v4);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  if (v5 == *MEMORY[0x24BDEB400])
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    MEMORY[0x24269BDB4](v6);
    v7 = sub_2418A9624();
    swift_release();
  }
  else
  {
    v8 = v5;
    v9 = *MEMORY[0x24BDEB3F0];
    v10 = (void *)objc_opt_self();
    if (v8 == v9)
    {
      return MEMORY[0x24269BDB4](objc_msgSend(v10, sel_quaternarySystemFillColor));
    }
    else
    {
      MEMORY[0x24269BDB4](objc_msgSend(v10, sel_systemBackgroundColor));
      v7 = sub_2418A9624();
      swift_release();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    }
  }
  return v7;
}

void sub_2418994B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154B78)
  {
    sub_2418A88BC();
    sub_24172159C(&qword_25714C498, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED990]);
    v0 = sub_2418A84CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154B78);
  }
}

uint64_t type metadata accessor for ReflectiveIntervalPickerSelectionView(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_257154C08);
}

void sub_241899558(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257154B80, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalPickerSelectionView);
}

void sub_241899574(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257154B88, sub_241899558);
}

void sub_241899590(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257154B90, sub_241899574);
}

void sub_2418995AC(uint64_t a1)
{
  sub_241728250(a1, &qword_257154B98, sub_241899590, (void (*)(uint64_t))sub_2418995C8);
}

void sub_2418995C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154BA0)
  {
    sub_2418994B0();
    sub_24172159C(qword_257154BA8, (uint64_t (*)(uint64_t))sub_2418994B0, MEMORY[0x24BDEB358]);
    v0 = sub_2418A8D18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154BA0);
  }
}

uint64_t sub_241899654@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t (*v67)(void);
  char *v68;
  void (*v69)(char *, uint64_t);
  _QWORD *v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v77[4];
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95[4];

  v2 = v1;
  v89 = a1;
  v88 = sub_2418A8C28();
  v86 = *(_QWORD *)(v88 - 8);
  v4 = MEMORY[0x24BDAC7A8](v88, v3);
  v87 = (char *)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v85 = (char *)v77 - v7;
  v8 = sub_2418A92AC();
  MEMORY[0x24BDAC7A8](v8, v9);
  v77[3] = (char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2418A8100();
  MEMORY[0x24BDAC7A8](v11, v12);
  v77[2] = (char *)v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2418A8BBC();
  MEMORY[0x24BDAC7A8](v14, v15);
  v92 = sub_2418A8F7C();
  v16 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92, v17);
  v19 = (char *)v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24189E774();
  v25 = v24;
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (char *)v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24189EDF4(0);
  v80 = *(_QWORD *)(v29 - 8);
  v81 = v29;
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)v77 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728250(0, &qword_257154D38, v33, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v91 = v34;
  v36 = MEMORY[0x24BDAC7A8](v34, v35);
  v82 = (char *)v77 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v36, v38);
  v83 = (char *)v77 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39, v41);
  v90 = (char *)v77 - v43;
  MEMORY[0x24BDAC7A8](v42, v44);
  v84 = (char *)v77 - v45;
  v77[1] = type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  sub_241861F08((uint64_t)v23);
  v46 = sub_2418A879C();
  sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  if ((v46 & 1) != 0)
    v47 = 0x4024000000000000;
  else
    v47 = 0x4030000000000000;
  *(_QWORD *)v28 = sub_2418A8B8C();
  *((_QWORD *)v28 + 1) = v47;
  v28[16] = 0;
  sub_24173F078(0, &qword_257154D40, &qword_257154C88, (uint64_t (*)(uint64_t))sub_24189E7EC);
  sub_241899F08(v2, (uint64_t)&v28[*(int *)(v48 + 44)]);
  sub_2418A8F70();
  v49 = sub_24189EE18();
  v78 = v32;
  v79 = v25;
  sub_2418A942C();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v92);
  sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))sub_24189E774);
  sub_2418A8BB0();
  sub_2418A8BA4();
  *(_QWORD *)&v93 = 0;
  *((_QWORD *)&v93 + 1) = 0xE000000000000000;
  sub_2418AA2B4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v93 = 0xD000000000000014;
  *((_QWORD *)&v93 + 1) = 0x80000002418DFE50;
  v92 = v2;
  sub_2418A9E40();
  swift_bridgeObjectRelease();
  if (qword_25714B958 != -1)
    swift_once();
  v50 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_2418A8B98();
  swift_bridgeObjectRelease();
  sub_2418A8BA4();
  if ((sub_24189C9FC() & 1) != 0)
    sub_24189CCB8();
  else
    sub_24189CE10();
  sub_2418A8B98();
  swift_bridgeObjectRelease();
  sub_2418A8BA4();
  sub_2418A8BD4();
  v51 = sub_2418A92C4();
  v53 = v52;
  v55 = v54 & 1;
  *(_QWORD *)&v93 = v79;
  *((_QWORD *)&v93 + 1) = v49;
  swift_getOpaqueTypeConformance2();
  v57 = v81;
  v56 = (uint64_t)v82;
  v58 = v78;
  sub_2418A93F0();
  sub_2417289EC(v51, v53, v55);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v58, v57);
  if (*(_QWORD *)v92 == 1)
  {
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    MEMORY[0x24269C00C]();
    sub_2418A92A0();
    v59 = sub_2418A92B8();
  }
  else
  {
    sub_2418A8BC8();
    v59 = sub_2418A92C4();
  }
  v62 = v59;
  v63 = v60;
  v64 = v88;
  v65 = v61 & 1;
  v66 = (uint64_t)v83;
  sub_2418A87D8();
  sub_2417289EC(v62, v63, v65);
  swift_bridgeObjectRelease();
  v67 = MEMORY[0x24BDF1088];
  sub_241784BA4(v56, (uint64_t)&qword_257154D38, (uint64_t)sub_24189EDF4, (uint64_t)MEMORY[0x24BDF1088], (uint64_t (*)(_QWORD))sub_241728250);
  v68 = v85;
  sub_2418A8C1C();
  sub_2418A87E4();
  v69 = *(void (**)(char *, uint64_t))(v86 + 8);
  v69(v68, v64);
  sub_241784BA4(v66, (uint64_t)&qword_257154D38, (uint64_t)sub_24189EDF4, (uint64_t)v67, (uint64_t (*)(_QWORD))sub_241728250);
  v70 = (_QWORD *)v92;
  v71 = *(_QWORD *)(v92 + 24);
  v93 = *(_OWORD *)(v92 + 8);
  v94 = v71;
  sub_24172570C(0, &qword_25714F250, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](v95);
  if (v95[0] == *v70)
  {
    *(_QWORD *)&v93 = MEMORY[0x24BEE4AF8];
    v72 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88];
    sub_24172159C(&qword_25714F9D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
    sub_24172570C(0, &qword_25714F9D8, v72, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2417BE860();
    v73 = v87;
    sub_2418AA248();
  }
  else
  {
    v73 = v87;
    sub_2418A8C10();
  }
  v74 = (uint64_t)v84;
  v75 = (uint64_t)v90;
  sub_2418A87F0();
  v69(v73, v64);
  sub_241784BA4(v75, (uint64_t)&qword_257154D38, (uint64_t)sub_24189EDF4, (uint64_t)MEMORY[0x24BDF1088], (uint64_t (*)(_QWORD))sub_241728250);
  return sub_24189EE34(v74, v89);
}

uint64_t sub_241899F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t KeyPath;
  uint64_t v56;
  uint64_t (*v57)(void);
  uint64_t (*v58)(void);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  char *v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;

  v102 = a1;
  v101 = a2;
  v2 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v2, v3);
  v100 = (uint64_t)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, &qword_25714CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  v85 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (uint64_t *)((char *)&v84 - v7);
  v9 = sub_2418A9684();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241750AD4();
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (uint64_t *)((char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24189ECD4(0);
  v87 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24189ECB8(0);
  v88 = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v86 = (uint64_t)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24189EC9C(0);
  v92 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v90 = (uint64_t)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175B0D0(0, &qword_257154CE8, v29, (uint64_t (*)(void))sub_24189ECE8, MEMORY[0x24BDF3488]);
  v99 = v30;
  v97 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30, v31);
  v91 = (char *)&v84 - v32;
  sub_24189EC20();
  v96 = v33;
  v35 = MEMORY[0x24BDAC7A8](v33, v34);
  v98 = (uint64_t)&v84 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v35, v37);
  v94 = (char *)&v84 - v39;
  MEMORY[0x24BDAC7A8](v38, v40);
  v95 = (uint64_t)&v84 - v41;
  sub_24189E808();
  v44 = MEMORY[0x24BDAC7A8](v42, v43);
  v93 = (uint64_t)&v84 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v49 = (char *)&v84 - v48;
  MEMORY[0x24BDAC7A8](v47, v50);
  v52 = (char *)&v84 - v51;
  v89 = (uint64_t)&v84 - v51;
  *(_QWORD *)v49 = sub_2418A8C64();
  *((_QWORD *)v49 + 1) = 0;
  v49[16] = 0;
  sub_24189EE90();
  sub_24189A6C4(v102, (uint64_t)&v49[*(int *)(v53 + 44)]);
  sub_241731B4C((uint64_t)v49, (uint64_t)v52, (uint64_t (*)(_QWORD))sub_24189E808);
  v54 = sub_2418A9678();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BDF40B8], v9);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v8 + *(int *)(v85 + 28), v13, v9);
  *v8 = KeyPath;
  v56 = (uint64_t)v18 + *(int *)(v15 + 36);
  v57 = MEMORY[0x24BDF40C0];
  v58 = MEMORY[0x24BDF1008];
  sub_241862CCC((uint64_t)v8, v56, &qword_25714CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  *v18 = v54;
  swift_retain();
  sub_241784BA4((uint64_t)v8, (uint64_t)&qword_25714CF98, (uint64_t)v57, (uint64_t)v58, (uint64_t (*)(_QWORD))sub_24172570C);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_release();
  v59 = sub_2418A95DC();
  sub_2417289A8((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_241750AD4);
  *(_QWORD *)&v22[*(int *)(v87 + 36)] = v59;
  sub_24172588C((uint64_t)v18, (uint64_t (*)(_QWORD))sub_241750AD4);
  v60 = sub_2418A91C8();
  v61 = swift_getKeyPath();
  v62 = v86;
  sub_2417289A8((uint64_t)v22, v86, (uint64_t (*)(_QWORD))sub_24189ECD4);
  v63 = (uint64_t *)(v62 + *(int *)(v88 + 36));
  *v63 = v61;
  v63[1] = v60;
  sub_24172588C((uint64_t)v22, (uint64_t (*)(_QWORD))sub_24189ECD4);
  type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  v64 = v102;
  v65 = v100;
  sub_241861F08(v100);
  sub_24172588C(v65, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_2418A9960();
  sub_2418A88E0();
  v66 = v90;
  sub_2417289A8(v62, v90, (uint64_t (*)(_QWORD))sub_24189ECB8);
  v67 = (_OWORD *)(v66 + *(int *)(v92 + 36));
  v68 = v111;
  v67[4] = v110;
  v67[5] = v68;
  v67[6] = v112;
  v69 = v107;
  *v67 = v106;
  v67[1] = v69;
  v70 = v109;
  v67[2] = v108;
  v67[3] = v70;
  sub_24172588C(v62, (uint64_t (*)(_QWORD))sub_24189ECB8);
  sub_24189ECE8();
  v71 = v91;
  sub_2418A9498();
  sub_24172588C(v66, (uint64_t (*)(_QWORD))sub_24189EC9C);
  v72 = *(_QWORD *)(v64 + 24);
  v103 = *(_OWORD *)(v64 + 8);
  v104 = v72;
  sub_24172570C(0, &qword_25714F250, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C](&v105);
  if (v105 == *(_QWORD *)v64)
    v73 = 1.0;
  else
    v73 = 0.0;
  v74 = v97;
  v75 = (uint64_t)v94;
  v76 = v99;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v94, v71, v99);
  *(double *)(v75 + *(int *)(v96 + 36)) = v73;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v71, v76);
  v77 = v95;
  sub_241731B4C(v75, v95, (uint64_t (*)(_QWORD))sub_24189EC20);
  v78 = v89;
  v79 = v93;
  sub_2417289A8(v89, v93, (uint64_t (*)(_QWORD))sub_24189E808);
  v80 = v98;
  sub_2417289A8(v77, v98, (uint64_t (*)(_QWORD))sub_24189EC20);
  v81 = v101;
  sub_2417289A8(v79, v101, (uint64_t (*)(_QWORD))sub_24189E808);
  sub_24189E7EC(0);
  sub_2417289A8(v80, v81 + *(int *)(v82 + 48), (uint64_t (*)(_QWORD))sub_24189EC20);
  sub_24172588C(v77, (uint64_t (*)(_QWORD))sub_24189EC20);
  sub_24172588C(v78, (uint64_t (*)(_QWORD))sub_24189E808);
  sub_24172588C(v80, (uint64_t (*)(_QWORD))sub_24189EC20);
  return sub_24172588C(v79, (uint64_t (*)(_QWORD))sub_24189E808);
}

uint64_t sub_24189A6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  char v106;
  unsigned int *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  void (*v127)(char *, uint64_t);
  double v128;
  uint64_t KeyPath;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t (*v183)(uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD v189[2];
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  char *v200;
  char *v201;
  id v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  __int128 v237;
  uint64_t v238;

  v226 = a2;
  v3 = sub_2418A8D48();
  MEMORY[0x24BDAC7A8](v3, v4);
  v198 = (char *)v189 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417C7F00();
  MEMORY[0x24BDAC7A8](v6, v7);
  v197 = (uint64_t)v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v189[1] = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v192 = (char *)v189 - v11;
  sub_24172835C(0, &qword_25714EDC0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDEB018]);
  v193 = v12;
  v191 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v190 = (char *)v189 - v14;
  sub_2417CA940(0);
  v196 = v15;
  v195 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v16);
  v194 = (char *)v189 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24189EA4C(0);
  v199 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v201 = (char *)v189 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24189E9BC(0);
  v22 = v21;
  v228 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23);
  v200 = (char *)v189 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, &qword_257154CB0, v25, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v225 = (uint64_t)v189 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v30);
  v224 = (char *)v189 - v31;
  v32 = type metadata accessor for LoggingFlowBlendMode();
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v218 = (_QWORD *)((char *)v189 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v34, v36);
  v220 = (uint64_t)v189 - v37;
  v219 = sub_2418A84E4();
  v210 = *(_QWORD *)(v219 - 8);
  v39 = MEMORY[0x24BDAC7A8](v219, v38);
  v209 = (char *)v189 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39, v41);
  v217 = (uint64_t)v189 - v42;
  v207 = sub_2418A91E0();
  v206 = *(_QWORD *)(v207 - 8);
  v44 = MEMORY[0x24BDAC7A8](v207, v43);
  v204 = (char *)v189 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44, v46);
  v205 = (char *)v189 - v47;
  v203 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v203, v48);
  v50 = (char *)v189 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418471F0(0);
  v208 = v51;
  MEMORY[0x24BDAC7A8](v51, v52);
  v213 = (char *)v189 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24189E9A0(0);
  v211 = v54;
  MEMORY[0x24BDAC7A8](v54, v55);
  v215 = (uint64_t)v189 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241863550();
  v212 = v57;
  MEMORY[0x24BDAC7A8](v57, v58);
  v216 = (uint64_t)v189 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418635E4(0);
  v62 = MEMORY[0x24BDAC7A8](v60, v61);
  v223 = (uint64_t)v189 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = MEMORY[0x24BDAC7A8](v62, v64);
  v214 = (uint64_t)v189 - v66;
  MEMORY[0x24BDAC7A8](v65, v67);
  v231 = (uint64_t)v189 - v68;
  sub_241863690();
  MEMORY[0x24BDAC7A8](v69, v70);
  v72 = (char *)v189 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24189E91C(0, (unint64_t *)&qword_257153CC0, (void (*)(uint64_t))sub_241863690);
  v74 = v73;
  MEMORY[0x24BDAC7A8](v73, v75);
  v77 = (char *)v189 - v76;
  sub_241863AB4(0);
  v80 = MEMORY[0x24BDAC7A8](v78, v79);
  v222 = (uint64_t)v189 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = MEMORY[0x24BDAC7A8](v80, v82);
  v85 = (char *)v189 - v84;
  MEMORY[0x24BDAC7A8](v83, v86);
  v88 = (char *)v189 - v87;
  *(_QWORD *)v72 = sub_2418A8B8C();
  *((_QWORD *)v72 + 1) = 0x4010000000000000;
  v72[16] = 0;
  sub_24173F078(0, &qword_257154D50, &qword_257153CD0, (uint64_t (*)(uint64_t))sub_241863724);
  sub_24189B6F0(a1, &v72[*(int *)(v89 + 44)]);
  v202 = (id)objc_opt_self();
  v90 = MEMORY[0x24269BDB4](objc_msgSend(v202, sel_labelColor));
  sub_2417289A8((uint64_t)v72, (uint64_t)v77, (uint64_t (*)(_QWORD))sub_241863690);
  *(_QWORD *)&v77[*(int *)(v74 + 36)] = v90;
  sub_24172588C((uint64_t)v72, (uint64_t (*)(_QWORD))sub_241863690);
  v91 = sub_2418A996C();
  sub_24185F4A0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v85, 0.0, 1, 0.0, 1, v91, v92);
  sub_24189EF1C((uint64_t)v77);
  v221 = v88;
  sub_241731B4C((uint64_t)v85, (uint64_t)v88, (uint64_t (*)(_QWORD))sub_241863AB4);
  v93 = sub_24189C9FC();
  v229 = v22;
  if ((v93 & 1) != 0)
    v94 = sub_24189CCB8();
  else
    v94 = sub_24189CE10();
  v232 = v94;
  v233 = v95;
  sub_241721040();
  v96 = sub_2418A92D0();
  v98 = v97;
  v100 = v99 & 1;
  sub_2418A9198();
  v101 = sub_2418A9258();
  v103 = v102;
  v105 = v104 & 1;
  sub_2417289EC(v96, v98, v100);
  swift_bridgeObjectRelease();
  v227 = type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  v230 = a1;
  sub_241861F08((uint64_t)v50);
  sub_2418A91C8();
  v106 = sub_2418A879C();
  v107 = (unsigned int *)MEMORY[0x24BDF17C8];
  v108 = v206;
  if ((v106 & 1) == 0)
    v107 = (unsigned int *)MEMORY[0x24BDF17D0];
  v109 = v204;
  v110 = v207;
  (*(void (**)(char *, _QWORD, uint64_t))(v206 + 104))(v204, *v107, v207);
  v111 = v205;
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v205, v109, v110);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v111, v110);
  sub_24172588C((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  v112 = sub_2418A9294();
  v114 = v113;
  LOBYTE(v110) = v115 & 1;
  sub_2417289EC(v101, v103, v105);
  swift_release();
  swift_bridgeObjectRelease();
  v232 = MEMORY[0x24269BDB4](objc_msgSend(v202, sel_labelColor));
  v116 = sub_2418A9270();
  v118 = v117;
  v120 = v119;
  v122 = v121 & 1;
  sub_2417289EC(v112, v114, v110);
  swift_release();
  swift_bridgeObjectRelease();
  v123 = v217;
  sub_241861034(v217);
  v124 = v210;
  v125 = v209;
  v126 = v219;
  (*(void (**)(char *, _QWORD, uint64_t))(v210 + 104))(v209, *MEMORY[0x24BDEB3F0], v219);
  LOBYTE(v110) = sub_2418A84D8();
  v127 = *(void (**)(char *, uint64_t))(v124 + 8);
  v127(v125, v126);
  if ((v110 & 1) != 0)
    v128 = 1.0;
  else
    v128 = 0.8;
  KeyPath = swift_getKeyPath();
  v130 = v218;
  *v218 = KeyPath;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v131 = (uint64_t)v130;
  v132 = v220;
  sub_241731B4C(v131, v220, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  v133 = (uint64_t)v213;
  sub_2417289A8(v132, (uint64_t)&v213[*(int *)(v208 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  *(_QWORD *)v133 = v116;
  *(_QWORD *)(v133 + 8) = v118;
  *(_BYTE *)(v133 + 16) = v122;
  *(_QWORD *)(v133 + 24) = v120;
  *(double *)(v133 + 32) = v128;
  sub_241728A50(v116, v118, v122);
  swift_bridgeObjectRetain();
  sub_24172588C(v132, (uint64_t (*)(_QWORD))type metadata accessor for LoggingFlowBlendMode);
  v127((char *)v123, v126);
  v134 = v118;
  v135 = v230;
  sub_2417289EC(v116, v134, v122);
  swift_bridgeObjectRelease();
  v136 = sub_2418A90E4();
  sub_2418A84A8();
  v138 = v137;
  v140 = v139;
  v142 = v141;
  v144 = v143;
  v145 = v215;
  sub_2417289A8(v133, v215, (uint64_t (*)(_QWORD))sub_2418471F0);
  v146 = v145 + *(int *)(v211 + 36);
  *(_BYTE *)v146 = v136;
  *(_QWORD *)(v146 + 8) = v138;
  *(_QWORD *)(v146 + 16) = v140;
  *(_QWORD *)(v146 + 24) = v142;
  *(_QWORD *)(v146 + 32) = v144;
  *(_BYTE *)(v146 + 40) = 0;
  sub_24172588C(v133, (uint64_t (*)(_QWORD))sub_2418471F0);
  v147 = swift_getKeyPath();
  v148 = v216;
  sub_2417289A8(v145, v216, (uint64_t (*)(_QWORD))sub_24189E9A0);
  v149 = v148 + *(int *)(v212 + 36);
  *(_QWORD *)v149 = v147;
  *(_BYTE *)(v149 + 8) = 0;
  sub_24172588C(v145, (uint64_t (*)(_QWORD))sub_24189E9A0);
  v150 = sub_2418A996C();
  v151 = 1;
  v152 = v214;
  sub_24185F4F8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v214, 0.0, 1, 0.0, 1, v150, v153);
  sub_24172588C(v148, (uint64_t (*)(_QWORD))sub_241863550);
  sub_241731B4C(v152, v231, (uint64_t (*)(_QWORD))sub_2418635E4);
  v154 = (uint64_t)v224;
  v156 = v228;
  v155 = v229;
  if (*(_QWORD *)v135 == 1)
  {
    sub_2418A8BC8();
    sub_2418A9828();
    sub_24189C1B0(v197);
    sub_2418A8D3C();
    v157 = v190;
    sub_2418A849C();
    sub_24189EA68();
    v158 = v194;
    v159 = v193;
    sub_2418A9348();
    (*(void (**)(char *, uint64_t))(v191 + 8))(v157, v159);
    LOBYTE(v159) = sub_2418A90E4();
    sub_2418A84A8();
    v161 = v160;
    v163 = v162;
    v165 = v164;
    v167 = v166;
    v168 = v195;
    v169 = (uint64_t)v201;
    v170 = v196;
    (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v201, v158, v196);
    v171 = v169 + *(int *)(v199 + 36);
    *(_BYTE *)v171 = v159;
    *(_QWORD *)(v171 + 8) = v161;
    *(_QWORD *)(v171 + 16) = v163;
    *(_QWORD *)(v171 + 24) = v165;
    *(_QWORD *)(v171 + 32) = v167;
    *(_BYTE *)(v171 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v168 + 8))(v158, v170);
    v172 = *(_QWORD *)(v135 + 24);
    v237 = *(_OWORD *)(v135 + 8);
    v238 = v172;
    sub_24172570C(0, &qword_25714F250, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    sub_2418A9828();
    v173 = v232;
    v174 = v233;
    v175 = v234;
    LOBYTE(v237) = 0;
    sub_2418A96C0();
    v176 = v232;
    v177 = v233;
    v232 = v173;
    v233 = v174;
    v234 = v175;
    v235 = v176;
    v236 = v177;
    sub_24189EAD0();
    sub_24189EB7C();
    v178 = v200;
    sub_2418A9384();
    v156 = v228;
    v155 = v229;
    swift_release();
    swift_release();
    swift_release();
    sub_24172588C(v169, (uint64_t (*)(_QWORD))sub_24189EA4C);
    (*(void (**)(uint64_t, char *, uint64_t))(v156 + 32))(v154, v178, v155);
    v151 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v156 + 56))(v154, v151, 1, v155);
  v179 = (uint64_t)v221;
  v180 = v222;
  sub_2417289A8((uint64_t)v221, v222, (uint64_t (*)(_QWORD))sub_241863AB4);
  v181 = v231;
  v182 = v223;
  sub_2417289A8(v231, v223, (uint64_t (*)(_QWORD))sub_2418635E4);
  v183 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  v184 = v225;
  sub_241862CCC(v154, v225, &qword_257154CB0, (uint64_t (*)(uint64_t))sub_24189E9BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v185 = v226;
  sub_2417289A8(v180, v226, (uint64_t (*)(_QWORD))sub_241863AB4);
  sub_24189E880();
  v187 = v186;
  sub_2417289A8(v182, v185 + *(int *)(v186 + 48), (uint64_t (*)(_QWORD))sub_2418635E4);
  sub_241862CCC(v184, v185 + *(int *)(v187 + 64), &qword_257154CB0, (uint64_t (*)(uint64_t))sub_24189E9BC, v183);
  sub_241784BA4(v154, (uint64_t)&qword_257154CB0, (uint64_t)sub_24189E9BC, (uint64_t)v183, (uint64_t (*)(_QWORD))sub_24172570C);
  sub_24172588C(v181, (uint64_t (*)(_QWORD))sub_2418635E4);
  sub_24172588C(v179, (uint64_t (*)(_QWORD))sub_241863AB4);
  sub_241784BA4(v184, (uint64_t)&qword_257154CB0, (uint64_t)sub_24189E9BC, (uint64_t)v183, (uint64_t (*)(_QWORD))sub_24172570C);
  sub_24172588C(v182, (uint64_t (*)(_QWORD))sub_2418635E4);
  return sub_24172588C(v180, (uint64_t (*)(_QWORD))sub_241863AB4);
}

uint64_t sub_24189B6F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t (*v54)(void);
  uint64_t (*v55)(void);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  unsigned int *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  char *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  unsigned int *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  void (*v107)(char *, char *, uint64_t);
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  char *v122;
  void (*v123)(char *, uint64_t);
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  _OWORD v167[10];
  _OWORD v168[10];
  _OWORD v169[10];
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  char v175;

  v141 = a2;
  v3 = sub_2418A91E0();
  v135 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v138 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v139 = (char *)&v125 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v133 = (char *)&v125 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v134 = (char *)&v125 - v14;
  v15 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v137 = (uint64_t)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v19);
  v132 = (uint64_t)&v125 - v20;
  sub_24172570C(0, &qword_25714CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  v128 = v21;
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (uint64_t *)((char *)&v125 - v23);
  v25 = sub_2418A9684();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v27);
  v29 = (char *)&v125 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241750AD4();
  v31 = v30;
  MEMORY[0x24BDAC7A8](v30, v32);
  v34 = (uint64_t *)((char *)&v125 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241863898();
  v129 = v35;
  MEMORY[0x24BDAC7A8](v35, v36);
  v127 = (uint64_t)&v125 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24186381C();
  v131 = v38;
  MEMORY[0x24BDAC7A8](v38, v39);
  v130 = (uint64_t)&v125 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418637A8(0);
  v43 = MEMORY[0x24BDAC7A8](v41, v42);
  v140 = (char *)&v125 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v126 = (char *)&v125 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v136 = a1;
  v145 = v50;
  v146 = v49;
  v143 = v3;
  v144 = (char *)&v125 - v51;
  v142 = v15;
  v52 = sub_2418A9678();
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v29, *MEMORY[0x24BDF40B0], v25);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)v24 + *(int *)(v128 + 28), v29, v25);
  *v24 = KeyPath;
  v54 = MEMORY[0x24BDF40C0];
  v55 = MEMORY[0x24BDF1008];
  sub_241862CCC((uint64_t)v24, (uint64_t)v34 + *(int *)(v31 + 36), &qword_25714CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  *v34 = v52;
  swift_retain();
  sub_241784BA4((uint64_t)v24, (uint64_t)&qword_25714CF98, (uint64_t)v54, (uint64_t)v55, (uint64_t (*)(_QWORD))sub_24172570C);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
  swift_release();
  LODWORD(v25) = sub_2418A8E74();
  v56 = v127;
  sub_2417289A8((uint64_t)v34, v127, (uint64_t (*)(_QWORD))sub_241750AD4);
  *(_DWORD *)(v56 + *(int *)(v129 + 36)) = v25;
  sub_24172588C((uint64_t)v34, (uint64_t (*)(_QWORD))sub_241750AD4);
  v57 = type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  v58 = v132;
  v128 = v136 + *(int *)(v57 + 36);
  sub_241861F08(v132);
  sub_2418A912C();
  v59 = sub_2418A879C();
  v60 = (unsigned int *)MEMORY[0x24BDF17C8];
  v61 = v135;
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 104);
  if ((v59 & 1) == 0)
    v60 = (unsigned int *)MEMORY[0x24BDF17D0];
  v63 = *v60;
  v64 = v133;
  v65 = v143;
  v129 = *(_QWORD *)(v135 + 104);
  v62(v133, v63, v143);
  v66 = v134;
  v133 = *(char **)(v61 + 32);
  ((void (*)(char *, char *, uint64_t))v133)(v134, v64, v65);
  v67 = sub_2418A91F8();
  swift_release();
  v135 = *(_QWORD *)(v61 + 8);
  ((void (*)(char *, uint64_t))v135)(v66, v65);
  sub_24172588C(v58, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  v68 = swift_getKeyPath();
  v69 = v130;
  sub_2417289A8(v56, v130, (uint64_t (*)(_QWORD))sub_241863898);
  v70 = (uint64_t *)(v69 + *(int *)(v131 + 36));
  *v70 = v68;
  v70[1] = v67;
  sub_24172588C(v56, (uint64_t (*)(_QWORD))sub_241863898);
  sub_2418A9198();
  sub_241728434((unint64_t *)&qword_257153CF8, (uint64_t (*)(uint64_t))sub_24186381C, (uint64_t (*)(void))sub_2418639A4, sub_24172858C);
  v71 = v126;
  sub_2418A9300();
  sub_24172588C(v69, (uint64_t (*)(_QWORD))sub_24186381C);
  (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v144, v71, v146);
  *(_QWORD *)&v169[0] = 0;
  *((_QWORD *)&v169[0] + 1) = 0xE000000000000000;
  sub_2418AA2B4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v169[0] = 0xD000000000000014;
  *((_QWORD *)&v169[0] + 1) = 0x80000002418DFE50;
  sub_2418A9E40();
  swift_bridgeObjectRelease();
  if (qword_25714B958 != -1)
    swift_once();
  v72 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v73 = sub_2418A7EFC();
  v75 = v74;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_QWORD *)&v169[0] = v73;
  *((_QWORD *)&v169[0] + 1) = v75;
  sub_241721040();
  v76 = sub_2418A92D0();
  v78 = v77;
  v80 = v79 & 1;
  LODWORD(v169[0]) = sub_2418A8E74();
  v81 = sub_2418A9270();
  v83 = v82;
  v85 = v84;
  v136 = v86;
  sub_2417289EC(v76, v78, v80);
  swift_bridgeObjectRelease();
  v87 = v137;
  sub_241861F08(v137);
  sub_2418A912C();
  v88 = sub_2418A879C();
  v89 = (unsigned int *)MEMORY[0x24BDF17C8];
  if ((v88 & 1) == 0)
    v89 = (unsigned int *)MEMORY[0x24BDF17D0];
  v90 = v138;
  v91 = v143;
  ((void (*)(char *, _QWORD, uint64_t))v129)(v138, *v89, v143);
  v92 = v139;
  ((void (*)(char *, char *, uint64_t))v133)(v139, v90, v91);
  sub_2418A91F8();
  swift_release();
  ((void (*)(char *, uint64_t))v135)(v92, v91);
  sub_24172588C(v87, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  v93 = sub_2418A9294();
  v95 = v94;
  v97 = v96 & 1;
  sub_2417289EC(v81, v83, v85 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_2418A9198();
  v98 = sub_2418A9258();
  v100 = v99;
  v102 = v101;
  LOBYTE(v90) = v103 & 1;
  sub_2417289EC(v93, v95, v97);
  swift_bridgeObjectRelease();
  v104 = swift_getKeyPath();
  v170 = v98;
  v171 = v100;
  v172 = (char)v90;
  v173 = v102;
  v174 = v104;
  v175 = 0;
  sub_2418A996C();
  sub_24185DB94(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v169, 0.0, 1, 0.0, 1);
  sub_2417289EC(v98, v100, (char)v90);
  swift_release();
  swift_bridgeObjectRelease();
  v163 = v169[6];
  v164 = v169[7];
  v165 = v169[8];
  v166 = v169[9];
  v159 = v169[2];
  v160 = v169[3];
  v161 = v169[4];
  v162 = v169[5];
  v157 = v169[0];
  v158 = v169[1];
  v106 = v144;
  v105 = v145;
  v107 = *(void (**)(char *, char *, uint64_t))(v145 + 16);
  v108 = v140;
  v109 = v146;
  v107(v140, v144, v146);
  v153 = v163;
  v154 = v164;
  v155 = v165;
  v156 = v166;
  v149 = v159;
  v150 = v160;
  v151 = v161;
  v152 = v162;
  v147 = v157;
  v148 = v158;
  v110 = v141;
  v107(v141, v108, v109);
  sub_241863724();
  v112 = *(int *)(v111 + 48);
  v113 = v154;
  v167[6] = v153;
  v167[7] = v154;
  v114 = v155;
  v115 = v156;
  v167[8] = v155;
  v167[9] = v156;
  v116 = v151;
  v117 = v152;
  v167[4] = v151;
  v167[5] = v152;
  v118 = v149;
  v119 = v150;
  v167[2] = v149;
  v167[3] = v150;
  v120 = v147;
  v121 = v148;
  v167[0] = v147;
  v167[1] = v148;
  v122 = &v110[v112];
  *((_OWORD *)v122 + 6) = v153;
  *((_OWORD *)v122 + 7) = v113;
  *((_OWORD *)v122 + 8) = v114;
  *((_OWORD *)v122 + 9) = v115;
  *((_OWORD *)v122 + 2) = v118;
  *((_OWORD *)v122 + 3) = v119;
  *((_OWORD *)v122 + 4) = v116;
  *((_OWORD *)v122 + 5) = v117;
  *(_OWORD *)v122 = v120;
  *((_OWORD *)v122 + 1) = v121;
  sub_241728A04((uint64_t)v167);
  v123 = *(void (**)(char *, uint64_t))(v105 + 8);
  v123(v106, v109);
  v168[6] = v153;
  v168[7] = v154;
  v168[8] = v155;
  v168[9] = v156;
  v168[2] = v149;
  v168[3] = v150;
  v168[4] = v151;
  v168[5] = v152;
  v168[0] = v147;
  v168[1] = v148;
  sub_241728A60((uint64_t)v168);
  return ((uint64_t (*)(char *, uint64_t))v123)(v108, v109);
}

uint64_t sub_24189C1B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  char v39;
  uint64_t v40;
  char *v41;
  uint64_t result;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v92 = a1;
  v1 = sub_2418A8340();
  v83 = *(_QWORD *)(v1 - 8);
  v84 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v82 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2418A8220();
  v87 = *(_QWORD *)(v4 - 8);
  v88 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v86 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7, v8);
  v89 = (char *)&v80 - v9;
  sub_2418920CC();
  v97 = v10;
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v94 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v90 = (char *)&v80 - v15;
  sub_2417C7F00();
  v91 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v93 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2418A8238();
  v95 = *(void (**)(char *, uint64_t))(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2418A8100();
  v24 = *(_QWORD *)(v23 - 8);
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v81 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v31 = (char *)&v80 - v30;
  MEMORY[0x24BDAC7A8](v29, v32);
  v34 = (char *)&v80 - v33;
  type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  sub_241862158((uint64_t)v22);
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v36 = v35;
  MEMORY[0x24269C00C]();
  v96 = v34;
  sub_2418A816C();
  v98 = v24;
  v37 = *(void (**)(char *, uint64_t))(v24 + 8);
  v37(v31, v23);
  v38 = (void (*)(char *, uint64_t))*((_QWORD *)v95 + 1);
  v38(v22, v19);
  sub_241862158((uint64_t)v22);
  MEMORY[0x24269C00C](v36);
  v39 = sub_2418A8178();
  v95 = v37;
  v37(v31, v23);
  v85 = v19;
  v38(v22, v19);
  if ((v39 & 1) != 0)
  {
    v40 = v98;
    sub_2418A80D0();
    sub_24172159C((unint64_t *)&qword_25714FB70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v41 = v96;
    result = sub_2418A9D80();
    if ((result & 1) != 0)
    {
      v43 = v41;
      v44 = v97;
      v45 = v90;
      v46 = &v90[*(int *)(v97 + 48)];
      v47 = v40;
      v48 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
      v48(v90, v43, v23);
      v48(v46, v31, v23);
      v49 = v94;
      v50 = &v94[*(int *)(v44 + 48)];
      v51 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      v51(v94, v45, v23);
      v51(v50, v46, v23);
      v52 = (uint64_t)v93;
      v48(v93, v49, v23);
      v53 = v95;
      v95(v50, v23);
LABEL_11:
      v79 = &v49[*(int *)(v44 + 48)];
      v48(v49, v45, v23);
      v48(v79, v46, v23);
      v48((char *)(v52 + *(int *)(v91 + 36)), v79, v23);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_14;
  }
  sub_241862158((uint64_t)v22);
  v55 = v86;
  v54 = v87;
  v56 = v88;
  (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v86, *MEMORY[0x24BDCF220], v88);
  v57 = (uint64_t)v89;
  v58 = v96;
  sub_2418A81F0();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v56);
  v38(v22, v85);
  v59 = v98;
  v60 = v58;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v57, 1, v23) == 1)
  {
    sub_241784BA4(v57, (uint64_t)&qword_25714F360, (uint64_t)MEMORY[0x24BDCE900], (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD))sub_24172570C);
    v61 = v82;
    sub_2418A8328();
    v62 = sub_2418A8334();
    v63 = sub_2418AA044();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc();
      v65 = swift_slowAlloc();
      v100 = v65;
      *(_DWORD *)v64 = 136446210;
      v99 = sub_24176024C(0xD00000000000004CLL, 0x80000002418DFED0, &v100);
      sub_2418AA1F4();
      _os_log_impl(&dword_24171C000, v62, v63, "[%{public}s] Unable to determine start of next day", v64, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v65, -1, -1);
      MEMORY[0x24269D548](v64, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v83 + 8))(v61, v84);
    v52 = (uint64_t)v93;
    v49 = v94;
    v53 = v95;
    sub_24172159C((unint64_t *)&qword_25714FB70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    result = sub_2418A9D80();
    if ((result & 1) != 0)
    {
      v66 = v98;
      v67 = v90;
      v68 = &v90[*(int *)(v97 + 48)];
      v69 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
      v69(v90, v58, v23);
      v70 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
      v70(v68, v58, v23);
      v71 = v97;
      v72 = &v49[*(int *)(v97 + 48)];
      v69(v49, v67, v23);
      v69(v72, v68, v23);
      v70((char *)v52, v49, v23);
      v53(v72, v23);
      v73 = &v49[*(int *)(v71 + 48)];
      v70(v49, v67, v23);
      v70(v73, v68, v23);
      v70((char *)(v52 + *(int *)(v91 + 36)), v73, v23);
LABEL_12:
      v53(v49, v23);
      return sub_241731B4C(v52, v92, (uint64_t (*)(_QWORD))sub_2417C7F00);
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v48 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
  v74 = v81;
  v48(v81, (char *)v57, v23);
  sub_2418A80A0();
  sub_24172159C((unint64_t *)&qword_25714FB70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v75 = sub_2418A9D80();
  v76 = v95;
  result = ((uint64_t (*)(char *, uint64_t))v95)(v74, v23);
  if ((v75 & 1) != 0)
  {
    v44 = v97;
    v45 = v90;
    v46 = &v90[*(int *)(v97 + 48)];
    v48(v90, v60, v23);
    v48(v46, v31, v23);
    v53 = v76;
    v49 = v94;
    v77 = &v94[*(int *)(v44 + 48)];
    v78 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
    v78(v94, v45, v23);
    v78(v77, v46, v23);
    v52 = (uint64_t)v93;
    v48(v93, v49, v23);
    v53(v77, v23);
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_24189C9FC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  double v23;
  double v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2418A8100();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v30 - v13;
  v15 = sub_2418A8238();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 == 2)
  {
    v27 = v6;
    sub_241862158((uint64_t)v19);
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    MEMORY[0x24269C00C]();
    v28 = sub_2418A8178();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v27);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    v26 = v28 ^ 1;
  }
  else if (*v1 == 1)
  {
    v31 = v6;
    sub_241862158((uint64_t)v19);
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v30 = v20;
    MEMORY[0x24269C00C]();
    v21 = sub_2418A8178();
    v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    v22(v14, v31);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    sub_2417289A8((uint64_t)v1, (uint64_t)v5, type metadata accessor for ReflectiveIntervalPickerSelectionView);
    if ((v21 & 1) != 0)
    {
      sub_2418A80D0();
      MEMORY[0x24269C00C](v30);
      sub_2418A8094();
      v24 = v23;
      v25 = v31;
      v22(v11, v31);
      v22(v14, v25);
      sub_24172588C((uint64_t)v5, type metadata accessor for ReflectiveIntervalPickerSelectionView);
      v26 = v24 > 60.0;
    }
    else
    {
      sub_24172588C((uint64_t)v5, type metadata accessor for ReflectiveIntervalPickerSelectionView);
      v26 = 1;
    }
  }
  else
  {
    v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_24189CCB8()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;

  if (*v0 == 2)
  {
    if (qword_25714B958 == -1)
      goto LABEL_6;
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (*v0 != 1)
    return 0;
  if (qword_25714B958 != -1)
    goto LABEL_9;
LABEL_6:
  v1 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v2 = sub_2418A7EFC();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_24189CE10()
{
  id v0;
  uint64_t v1;

  sub_2418AA2B4();
  swift_bridgeObjectRelease();
  sub_2418A9E40();
  swift_bridgeObjectRelease();
  sub_2418A9E40();
  if (qword_25714B958 != -1)
    swift_once();
  v0 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v1 = sub_2418A7EFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t *sub_24189CF8C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  int *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    v17 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v14 = *(int *)(v13 + 32);
    v40 = (char *)v10 + v14;
    v15 = &v11[v14];
    v16 = sub_2418A8100();
    v17 = a1;
    v18 = a3;
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v19(v40, v15, v16);
    v20 = v18[7];
    v21 = (uint64_t *)((char *)v17 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_2418A8238();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v25 = v18[8];
    v26 = (uint64_t *)((char *)v17 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v29 = v18[9];
    v30 = (uint64_t *)((char *)v17 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = sub_2418A8EB0();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v35 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v36 = (char *)v30 + v35;
      v37 = (char *)v31 + v35;
      v38 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    }
    else
    {
      *v30 = *v31;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v17;
}

uint64_t sub_24189D2EC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_release();
  swift_release();
  v4 = a1 + a2[6];
  swift_release();
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v6 = v4 + *(int *)(v5 + 32);
  v7 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8238();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = a1 + a2[8];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  v12 = a1 + a2[9];
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v13 = sub_2418A8EB0();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  v15 = v12 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
  v16 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

_QWORD *sub_24189D4F8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a3[6];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v12 = *(int *)(v11 + 32);
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = sub_2418A8100();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v16(v13, v14, v15);
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_2418A8238();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    *v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v25 = a3[9];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = sub_2418A8EB0();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v31 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v32 = (char *)v26 + v31;
    v33 = (char *)v27 + v31;
    v34 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  }
  else
  {
    *v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_24189D818(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_retain();
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v10 = *(int *)(v9 + 32);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_2418A8100();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  if (a1 != a2)
  {
    v14 = a3[7];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8];
    v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v14, (uint64_t)&qword_25714F248, (uint64_t)MEMORY[0x24BDCF2D8], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714F248, v17, v18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2418A8238();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v15, v16, v19);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v20 = a3[8];
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_241784BA4((uint64_t)a1 + v20, (uint64_t)&unk_257154F20, (uint64_t)MEMORY[0x24BDEB418], (uint64_t)v18, (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v23, v18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v25 = a3[9];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v25, (uint64_t)&qword_25714F150, (uint64_t)type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_2418A8EB0();
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v30 + 16))(v26, v27, v29);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
      }
      v32 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v33 = (char *)v26 + v32;
      v34 = (char *)v27 + v32;
      v35 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      *v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24189DBD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v11 = *(int *)(v10 + 32);
  v12 = (char *)v7 + v11;
  v13 = v8 + v11;
  v14 = sub_2418A8100();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_2418A8238();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v16, v17, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v21 = a3[8];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v25 = v24;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v22, v23, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  v27 = a3[9];
  v28 = (char *)(a1 + v27);
  v29 = (char *)(a2 + v27);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v31 = v30;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v32 = sub_2418A8EB0();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v29, 1, v32))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v28, v29, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v32);
    }
    v35 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v36 = &v28[v35];
    v37 = &v29[v35];
    v38 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_24189DEC4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  swift_release();
  *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v11 = *(int *)(v10 + 32);
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = sub_2418A8100();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  if (a1 != a2)
  {
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8];
    v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v15, (uint64_t)&qword_25714F248, (uint64_t)MEMORY[0x24BDCF2D8], (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714F248, v18, v19);
    v21 = v20;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_2418A8238();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v16, v17, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    v23 = a3[8];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_241784BA4((uint64_t)a1 + v23, (uint64_t)&unk_257154F20, (uint64_t)MEMORY[0x24BDEB418], (uint64_t)v19, (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v26, v19);
    v28 = v27;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v24, v25, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    v30 = a3[9];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4((uint64_t)a1 + v30, (uint64_t)&qword_25714F150, (uint64_t)type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v33);
    v35 = v34;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v36 = sub_2418A8EB0();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v32, 1, v36))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v31, v32, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v31, 0, 1, v36);
      }
      v39 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v40 = &v31[v39];
      v41 = &v32[v39];
      v42 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24189E260()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24189E26C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      sub_24172570C(0, qword_257150650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[8];
        }
        else
        {
          sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a3[9];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_24189E3B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24189E3C0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      sub_24172570C(0, qword_257150650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[8];
        }
        else
        {
          sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a4[9];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_24189E504()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_24172570C(319, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
      {
        sub_24172570C(319, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_24189E638()
{
  return sub_241728434(&qword_257154C50, (uint64_t (*)(uint64_t))sub_2418995AC, sub_24189E66C, sub_24189E748);
}

uint64_t sub_24189E66C()
{
  return sub_24189E6C0(&qword_257154C58, (uint64_t (*)(uint64_t))sub_241899590, sub_24189E688);
}

uint64_t sub_24189E688()
{
  return sub_24189E6C0(&qword_257154C60, (uint64_t (*)(uint64_t))sub_241899574, sub_24189E6A4);
}

uint64_t sub_24189E6A4()
{
  return sub_24189E6C0(&qword_257154C68, (uint64_t (*)(uint64_t))sub_241899558, sub_24189E72C);
}

uint64_t sub_24189E6C0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24189E72C()
{
  return sub_24172159C(&qword_257154C70, type metadata accessor for ReflectiveIntervalPickerSelectionView, (uint64_t)&unk_2418DB2C8);
}

uint64_t sub_24189E748()
{
  return sub_24172159C(&qword_257154C78, (uint64_t (*)(uint64_t))sub_2418995C8, MEMORY[0x24BDEF370]);
}

uint64_t sub_24189E764()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24189E774()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154C80)
  {
    sub_24172570C(255, &qword_257154C88, (uint64_t (*)(uint64_t))sub_24189E7EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_24189ED94();
    v0 = sub_2418A972C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154C80);
  }
}

void sub_24189E7EC(uint64_t a1)
{
  sub_2417933C4(a1, &qword_257154C90, (void (*)(uint64_t))sub_24189E808, (void (*)(uint64_t))sub_24189EC20);
}

void sub_24189E808()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154C98)
  {
    sub_24172570C(255, &qword_257154CA0, (uint64_t (*)(uint64_t))sub_24189E880, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_24189EBC0();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154C98);
  }
}

void sub_24189E880()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_257154CA8)
  {
    sub_241863AB4(255);
    sub_2418635E4(255);
    sub_24172570C(255, &qword_257154CB0, (uint64_t (*)(uint64_t))sub_24189E9BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_257154CA8);
  }
}

void sub_24189E91C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_24189E9A0(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257153CB0, sub_2418471F0);
}

void sub_24189E9BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_257154CB8)
  {
    sub_24189EA4C(255);
    v5[0] = v2;
    v5[1] = &type metadata for MomentaryDatePickerStyle;
    v5[2] = sub_24189EAD0();
    v5[3] = sub_24189EB7C();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF27D8], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_257154CB8);
  }
}

void sub_24189EA4C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257154CC0, sub_2417CA940);
}

unint64_t sub_24189EA68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714EDC8;
  if (!qword_25714EDC8)
  {
    sub_24172835C(255, &qword_25714EDC0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDEB018]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEB028], v1);
    atomic_store(result, (unint64_t *)&qword_25714EDC8);
  }
  return result;
}

unint64_t sub_24189EAD0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_257154CC8;
  if (!qword_257154CC8)
  {
    sub_24189EA4C(255);
    v2 = v1;
    sub_24172835C(255, &qword_25714EDC0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDEB018]);
    v4[2] = v3;
    v4[3] = sub_24189EA68();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_257154CC8);
  }
  return result;
}

unint64_t sub_24189EB7C()
{
  unint64_t result;

  result = qword_257154CD0;
  if (!qword_257154CD0)
  {
    result = MEMORY[0x24269D47C](&unk_2418DAE6C, &type metadata for MomentaryDatePickerStyle);
    atomic_store(result, (unint64_t *)&qword_257154CD0);
  }
  return result;
}

unint64_t sub_24189EBC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257154CD8;
  if (!qword_257154CD8)
  {
    sub_24172570C(255, &qword_257154CA0, (uint64_t (*)(uint64_t))sub_24189E880, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257154CD8);
  }
  return result;
}

void sub_24189EC20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154CE0)
  {
    sub_24175B0D0(255, &qword_257154CE8, (uint64_t (*)(uint64_t))sub_24189EC9C, (uint64_t (*)(void))sub_24189ECE8, MEMORY[0x24BDF3488]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154CE0);
  }
}

void sub_24189EC9C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_257154CF0, sub_24189ECB8);
}

void sub_24189ECB8(uint64_t a1)
{
  sub_241728250(a1, &qword_257154CF8, sub_24189ECD4, (void (*)(uint64_t))sub_2417283A4);
}

void sub_24189ECD4(uint64_t a1)
{
  sub_24189E91C(a1, &qword_257154D00, (void (*)(uint64_t))sub_241750AD4);
}

unint64_t sub_24189ECE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257154D08;
  if (!qword_257154D08)
  {
    sub_24189EC9C(255);
    v2 = v1;
    v3[0] = sub_241728434(&qword_257154D10, (uint64_t (*)(uint64_t))sub_24189ECB8, sub_24189ED70, sub_24172858C);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257154D08);
  }
  return result;
}

uint64_t sub_24189ED70()
{
  return sub_241728434(&qword_257154D18, (uint64_t (*)(uint64_t))sub_24189ECD4, (uint64_t (*)(void))sub_241750B48, (uint64_t (*)(void))sub_241728524);
}

unint64_t sub_24189ED94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257154D20;
  if (!qword_257154D20)
  {
    sub_24172570C(255, &qword_257154C88, (uint64_t (*)(uint64_t))sub_24189E7EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_257154D20);
  }
  return result;
}

void sub_24189EDF4(uint64_t a1)
{
  sub_24175B0D0(a1, &qword_257154D28, (uint64_t (*)(uint64_t))sub_24189E774, sub_24189EE18, MEMORY[0x24BDF2F10]);
}

uint64_t sub_24189EE18()
{
  return sub_24172159C(&qword_257154D30, (uint64_t (*)(uint64_t))sub_24189E774, MEMORY[0x24BDF4498]);
}

uint64_t sub_24189EE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241728250(0, &qword_257154D38, sub_24189EDF4, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24189EE90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154D48)
  {
    sub_24172570C(255, &qword_257154CA0, (uint64_t (*)(uint64_t))sub_24189E880, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154D48);
  }
}

uint64_t sub_24189EF1C(uint64_t a1)
{
  uint64_t v2;

  sub_24189E91C(0, (unint64_t *)&qword_257153CC0, (void (*)(uint64_t))sub_241863690);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24189EF74()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  result = qword_257154D58;
  if (!qword_257154D58)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
    sub_241728250(255, &qword_257154D38, sub_24189EDF4, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v3 = v2;
    sub_24189E774();
    v5[2] = v4;
    v5[3] = sub_24189EE18();
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = sub_24172159C(&qword_25714C550, v1, MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v5);
    atomic_store(result, (unint64_t *)&qword_257154D58);
  }
  return result;
}

uint64_t AssessmentsNotificationSettingsView.init(navigationTitleText:assessmentsSettingModel:notificationSettingsModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a4;
  *(_QWORD *)a5 = sub_241728CF8;
  *(_QWORD *)(a5 + 8) = a3;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = sub_2417B8664;
  *(_QWORD *)(a5 + 32) = result;
  *(_BYTE *)(a5 + 40) = 0;
  *(_QWORD *)(a5 + 48) = a1;
  *(_QWORD *)(a5 + 56) = a2;
  return result;
}

uint64_t sub_24189F0B0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t AssessmentsNotificationSettingsView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  void *v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  sub_241728DF0();
  sub_2417B8F4C(v1, v2, v3);
  type metadata accessor for AssessmentsSettingsModel();
  sub_24172159C(qword_25714F650, (uint64_t (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel, (uint64_t)&protocol conformance descriptor for AssessmentsSettingsModel);
  swift_bridgeObjectRetain();
  sub_2418A8550();
  type metadata accessor for NotificationSettingsModel();
  sub_24172159C((unint64_t *)&qword_25714D020, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsModel, (uint64_t)&protocol conformance descriptor for NotificationSettingsModel);
  sub_2418A8550();
  sub_241728DF8();
  sub_241784C24(v1, v2, v3);
  swift_bridgeObjectRelease();
  sub_2418A8760();
  sub_2418A8760();
  v5 = v4;
  sub_2418A96C0();
  sub_24189F2C4();
  sub_241721040();
  sub_2418A93A8();

  swift_release();
  return swift_release();
}

unint64_t sub_24189F2C4()
{
  unint64_t result;

  result = qword_257154D60;
  if (!qword_257154D60)
  {
    result = MEMORY[0x24269D47C](&unk_2418DAC00, &type metadata for AssessmentsSettingsSection);
    atomic_store(result, (unint64_t *)&qword_257154D60);
  }
  return result;
}

uint64_t sub_24189F308()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for AssessmentsNotificationSettingsView(uint64_t a1)
{
  sub_241728DF8();
  sub_241784C24(*(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_BYTE *)(a1 + 40));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssessmentsNotificationSettingsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_241728DF0();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[3];
  v8 = (void *)a2[4];
  v9 = *((_BYTE *)a2 + 40);
  sub_2417B8F4C(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v10 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssessmentsNotificationSettingsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  void *v11;
  char v12;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_241728DF0();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_241728DF8();
  v7 = a2[3];
  v8 = (void *)a2[4];
  v9 = *((_BYTE *)a2 + 40);
  sub_2417B8F4C(v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(void **)(a1 + 32);
  v12 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  sub_241784C24(v10, v11, v12);
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AssessmentsNotificationSettingsView(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_241728DF8();
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(void **)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v5;
  sub_241784C24(v6, v7, v8);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentsNotificationSettingsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentsNotificationSettingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentsNotificationSettingsView()
{
  return &type metadata for AssessmentsNotificationSettingsView;
}

uint64_t sub_24189F59C()
{
  sub_24189F2C4();
  sub_241721040();
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_24189F5F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(uint64_t *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v86 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      v85 = v8;
      v84 = v6;
      if (v86(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v13, v14, v15);
      *((_BYTE *)a1 + v11[6]) = *((_BYTE *)a2 + v11[6]);
      v17 = v11[7];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_2418A84E4();
      v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v83(v18, v19, v20);
      v21 = v11[8];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      if (v86((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v22, v23, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v22, 0, 1, v7);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      if (v86((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v27, v28, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v27, 0, 1, v7);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      if (v86((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v32, v33, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v32, 0, 1, v7);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      if (v86((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v37, v38, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v37, 0, 1, v7);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      if (v86((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v42, v43, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v42, 0, 1, v7);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v83(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      if (v86((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v85;
      }
      else
      {
        v50 = v85;
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v47, v48, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v47, 0, 1, v7);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      if (v86((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      if (v86((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      if (v86((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      if (v86((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      if (v86((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      v6 = v84;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    v77 = *(int *)(v6 + 20);
    v78 = *(int *)(v6 + 24);
    v79 = (uint64_t *)((char *)a1 + v77);
    v80 = (uint64_t *)((char *)a2 + v77);
    v81 = v80[1];
    *v79 = *v80;
    v79[1] = v81;
    *(uint64_t *)((char *)a1 + v78) = *(uint64_t *)((char *)a2 + v78);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24189FFC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v34)(uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_2418A8EB0();
    v3 = *(_QWORD *)(v2 - 8);
    v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    v5 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v6 = a1 + v5[5];
    v7 = sub_2418A87B4();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v8(v6, v7);
    v9 = a1 + v5[7];
    v10 = sub_2418A84E4();
    v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v34(v9, v10);
    v11 = a1 + v5[8];
    if (!v4(v11, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v2);
    v12 = _s6StylesV8TimelineVMa(0);
    v8(v11 + *(int *)(v12 + 20), v7);
    v13 = a1 + v5[9];
    if (!v4(v13, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v2);
    v14 = _s6StylesV6NoDataVMa(0);
    v8(v13 + *(int *)(v14 + 20), v7);
    v15 = a1 + v5[10];
    if (!v4(v15, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
    v16 = _s6StylesV11PlaceholderVMa(0);
    v8(v15 + *(int *)(v16 + 20), v7);
    v17 = a1 + v5[11];
    if (!v4(v17, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v2);
    v18 = _s6StylesV6SymbolVMa(0);
    v8(v17 + *(int *)(v18 + 20), v7);
    v19 = a1 + v5[12];
    if (!v4(v19, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    v20 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v8(v19 + *(int *)(v20 + 20), v7);
    v34(v19 + *(int *)(v20 + 28), v10);
    v21 = a1 + v5[13];
    if (!v4(v21, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v2);
    v22 = _s6StylesV5EmptyVMa(0);
    v8(v21 + *(int *)(v22 + 20), v7);
    v23 = a1 + v5[14];
    if (!v4(v23, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v23, v2);
    v24 = _s6StylesV5DailyVMa(0);
    v8(v23 + *(int *)(v24 + 20), v7);
    v25 = a1 + v5[15];
    if (!v4(v25, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v25, v2);
    v26 = _s6StylesV9MomentaryVMa(0);
    v8(v25 + *(int *)(v26 + 20), v7);
    v27 = a1 + v5[16];
    if (!v4(v27, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v2);
    v28 = _s6StylesV6HeaderVMa(0);
    v8(v27 + *(int *)(v28 + 20), v7);
    v29 = a1 + v5[17];
    if (!v4(v29, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v29, v2);
    v30 = _s6StylesV11ChartButtonVMa(0);
    v8(v29 + *(int *)(v30 + 20), v7);
    v31 = a1 + v5[18];
    if (!v4(v31, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v31, v2);
    v32 = _s6StylesV15LogButtonFooterVMa(0);
    v8(v31 + *(int *)(v32 + 20), v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2418A0404(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(_QWORD *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v84 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
    v83 = v7;
    if (v84(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v81(v16, v17, v18);
    v19 = v9[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v84((_QWORD *)((char *)a2 + v19), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v82 = a3;
    if (v84((_QWORD *)((char *)a2 + v24), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v84((_QWORD *)((char *)a2 + v29), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v30, 0, 1, v6);
    }
    v33 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    v34 = v9[11];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v84((_QWORD *)((char *)a2 + v34), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v35, 0, 1, v6);
    }
    v38 = _s6StylesV6SymbolVMa(0);
    v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    v39 = v9[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    if (v84((_QWORD *)((char *)a2 + v39), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v40, v41, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v40, 0, 1, v6);
    }
    v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v81(&v40[v43[7]], &v41[v43[7]], v18);
    v44 = v9[13];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v84((_QWORD *)((char *)a2 + v44), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v83;
    }
    else
    {
      v48 = v83;
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v45, v46, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v45, 0, 1, v6);
    }
    v49 = _s6StylesV5EmptyVMa(0);
    v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    v50 = v9[14];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    if (v84((_QWORD *)((char *)a2 + v50), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    v54 = _s6StylesV5DailyVMa(0);
    v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v9[15];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v84((_QWORD *)((char *)a2 + v55), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v82;
    v59 = _s6StylesV9MomentaryVMa(0);
    v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    v60 = v9[16];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    if (v84((_QWORD *)((char *)a2 + v60), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    v64 = _s6StylesV6HeaderVMa(0);
    v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    v65 = v9[17];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    if (v84((_QWORD *)((char *)a2 + v65), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    v69 = _s6StylesV11ChartButtonVMa(0);
    v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    v70 = v9[18];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    if (v84((_QWORD *)((char *)a2 + v70), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    v74 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v75 = *(int *)(a3 + 20);
  v76 = *(int *)(a3 + 24);
  v77 = (_QWORD *)((char *)a1 + v75);
  v78 = (_QWORD *)((char *)a2 + v75);
  v79 = v78[1];
  *v77 = *v78;
  v77[1] = v79;
  *(_QWORD *)((char *)a1 + v76) = *(_QWORD *)((char *)a2 + v76);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2418A0DA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(_QWORD *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A8EB0();
      v7 = *(_QWORD *)(v6 - 8);
      v83 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
      v81 = a3;
      v82 = v7;
      if (v83(a2, 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2418A87B4();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
      v15 = v9[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_2418A84E4();
      v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v80(v16, v17, v18);
      v19 = v9[8];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (v83((_QWORD *)((char *)a2 + v19), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v20, v21, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v20, 0, 1, v6);
      }
      v23 = _s6StylesV8TimelineVMa(0);
      v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      v24 = v9[9];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      if (v83((_QWORD *)((char *)a2 + v24), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v25, v26, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v25, 0, 1, v6);
      }
      v28 = _s6StylesV6NoDataVMa(0);
      v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      v29 = v9[10];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      if (v83((_QWORD *)((char *)a2 + v29), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v30, v31, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v30, 0, 1, v6);
      }
      v33 = _s6StylesV11PlaceholderVMa(0);
      v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
      v34 = v9[11];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      if (v83((_QWORD *)((char *)a2 + v34), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v35, v36, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v35, 0, 1, v6);
      }
      v38 = _s6StylesV6SymbolVMa(0);
      v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
      v39 = v9[12];
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      if (v83((_QWORD *)((char *)a2 + v39), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v40, v41, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v40, 0, 1, v6);
      }
      v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v14(&v40[v43[5]], &v41[v43[5]], v13);
      v40[v43[6]] = v41[v43[6]];
      v80(&v40[v43[7]], &v41[v43[7]], v18);
      v44 = v9[13];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      if (v83((_QWORD *)((char *)a2 + v44), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v82;
      }
      else
      {
        v48 = v82;
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v45, v46, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v45, 0, 1, v6);
      }
      v49 = _s6StylesV5EmptyVMa(0);
      v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      v50 = v9[14];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      if (v83((_QWORD *)((char *)a2 + v50), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
      }
      v54 = _s6StylesV5DailyVMa(0);
      v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v9[15];
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      if (v83((_QWORD *)((char *)a2 + v55), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
      }
      v59 = _s6StylesV9MomentaryVMa(0);
      v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
      v60 = v9[16];
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      if (v83((_QWORD *)((char *)a2 + v60), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
      }
      v64 = _s6StylesV6HeaderVMa(0);
      v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
      v65 = v9[17];
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      if (v83((_QWORD *)((char *)a2 + v65), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
      }
      v69 = _s6StylesV11ChartButtonVMa(0);
      v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
      v70 = v9[18];
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      if (v83((_QWORD *)((char *)a2 + v70), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
      }
      v74 = _s6StylesV15LogButtonFooterVMa(0);
      v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
      a3 = v81;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v75 = *(int *)(a3 + 20);
  v76 = (_QWORD *)((char *)a1 + v75);
  v77 = (_QWORD *)((char *)a2 + v75);
  v78 = v77[1];
  *v76 = *v77;
  v76[1] = v78;
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_2418A1764(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    v81 = v9;
    if (v82(a2, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2418A87B4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    v17 = v11[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_2418A84E4();
    v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
    v79(v18, v19, v20);
    v21 = v11[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (v82(&a2[v21], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v22, v23, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v22, 0, 1, v8);
    }
    v25 = _s6StylesV8TimelineVMa(0);
    v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    v26 = v11[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v80 = a3;
    if (v82(&a2[v26], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v27, v28, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v27, 0, 1, v8);
    }
    v30 = _s6StylesV6NoDataVMa(0);
    v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    v31 = v11[10];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (v82(&a2[v31], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v32, v33, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v32, 0, 1, v8);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    v36 = v11[11];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if (v82(&a2[v36], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v37, v38, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v37, 0, 1, v8);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    v41 = v11[12];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v82(&a2[v41], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v42, v43, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v42, 0, 1, v8);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v16(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v79(&v42[v45[7]], &v43[v45[7]], v20);
    v46 = v11[13];
    v47 = &a1[v46];
    v48 = &a2[v46];
    if (v82(&a2[v46], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = v81;
    }
    else
    {
      v50 = v81;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v47, v48, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v47, 0, 1, v8);
    }
    v51 = _s6StylesV5EmptyVMa(0);
    v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    v52 = v11[14];
    v53 = &a1[v52];
    v54 = &a2[v52];
    if (v82(&a2[v52], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    v56 = _s6StylesV5DailyVMa(0);
    v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = v11[15];
    v58 = &a1[v57];
    v59 = &a2[v57];
    if (v82(&a2[v57], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v80;
    v61 = _s6StylesV9MomentaryVMa(0);
    v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    v62 = v11[16];
    v63 = &a1[v62];
    v64 = &a2[v62];
    if (v82(&a2[v62], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    v66 = _s6StylesV6HeaderVMa(0);
    v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    v67 = v11[17];
    v68 = &a1[v67];
    v69 = &a2[v67];
    if (v82(&a2[v67], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    v71 = _s6StylesV11ChartButtonVMa(0);
    v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    v72 = v11[18];
    v73 = &a1[v72];
    v74 = &a2[v72];
    if (v82(&a2[v72], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    v76 = _s6StylesV15LogButtonFooterVMa(0);
    v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v77 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v77] = *(_QWORD *)&a2[v77];
  return a1;
}

char *sub_2418A20EC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A8EB0();
      v9 = *(_QWORD *)(v8 - 8);
      v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      v79 = a3;
      v80 = v9;
      if (v81(a2, 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      v17 = v11[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_2418A84E4();
      v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
      v78(v18, v19, v20);
      v21 = v11[8];
      v22 = &a1[v21];
      v23 = &a2[v21];
      if (v81(&a2[v21], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v22, v23, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v8);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = &a1[v26];
      v28 = &a2[v26];
      if (v81(&a2[v26], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v27, v28, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v8);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = &a1[v31];
      v33 = &a2[v31];
      if (v81(&a2[v31], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v32, v33, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v8);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = &a1[v36];
      v38 = &a2[v36];
      if (v81(&a2[v36], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v37, v38, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v8);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = &a1[v41];
      v43 = &a2[v41];
      if (v81(&a2[v41], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v42, v43, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v8);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = &a1[v46];
      v48 = &a2[v46];
      if (v81(&a2[v46], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v80;
      }
      else
      {
        v50 = v80;
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v47, v48, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v8);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = &a1[v52];
      v54 = &a2[v52];
      if (v81(&a2[v52], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = &a1[v57];
      v59 = &a2[v57];
      if (v81(&a2[v57], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = &a1[v62];
      v64 = &a2[v62];
      if (v81(&a2[v62], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = &a1[v67];
      v69 = &a2[v67];
      if (v81(&a2[v67], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = &a1[v72];
      v74 = &a2[v72];
      if (v81(&a2[v72], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      a3 = v79;
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  swift_release();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2418A2A94()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2418A2AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2418A2B34()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2418A2B40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
}

uint64_t _s14ShowMoreButtonVMa()
{
  uint64_t result;

  result = qword_257154DC0;
  if (!qword_257154DC0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2418A2C0C()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2418A2CA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2418A2CB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v3 = sub_2418A993C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241862980();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241862B64(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = sub_2418A8C58();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  sub_2418A3940();
  sub_2418A2EAC(v1, &v11[*(int *)(v16 + 44)]);
  v17 = sub_2418A9960();
  sub_24185F550(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v17, v18);
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))sub_241862980);
  sub_2418A9924();
  v19 = sub_2418A90D8();
  sub_241728250(0, &qword_257154E08, sub_241862B64, sub_2418A39BC);
  v21 = a1 + *(int *)(v20 + 36);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v21, v7, v3);
  sub_2418A39BC(0);
  *(_BYTE *)(v21 + *(int *)(v22 + 36)) = v19;
  sub_2417289A8((uint64_t)v15, a1, (uint64_t (*)(_QWORD))sub_241862B64);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_241862B64);
}

uint64_t sub_2418A2EAC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  void *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;

  v92 = a2;
  v81 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x24BDAC7A8](v81, v3);
  v79 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v6 = MEMORY[0x24BDAC7A8](v80, v5);
  v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v77 - v10;
  v82 = _s14ShowMoreButtonVMa();
  v12 = *(_QWORD *)(v82 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v82, v14);
  sub_2417D7ED8();
  v77 = v15;
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241862AE8();
  v78 = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241862ACC(0);
  v85 = v24;
  MEMORY[0x24BDAC7A8](v24, v25);
  v86 = (uint64_t)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A3924(0);
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v91 = (uint64_t)&v77 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v83 = (char *)&v77 - v33;
  MEMORY[0x24BDAC7A8](v32, v34);
  v89 = (uint64_t)&v77 - v35;
  v90 = sub_2418A987C();
  v87 = *(_QWORD *)(v90 - 8);
  v37 = MEMORY[0x24BDAC7A8](v90, v36);
  v88 = (char *)&v77 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37, v39);
  v84 = (char *)&v77 - v40;
  sub_2418A9870();
  sub_2417289A8(a1, (uint64_t)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))_s14ShowMoreButtonVMa);
  v41 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v42 = swift_allocObject();
  sub_241731B4C((uint64_t)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v42 + v41, (uint64_t (*)(_QWORD))_s14ShowMoreButtonVMa);
  v93 = a1;
  sub_2418A9708();
  sub_241860D60((uint64_t)v11);
  sub_24172588C((uint64_t)v11, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9960();
  sub_2418A88E0();
  v43 = v77;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v23, v19, v77);
  v44 = &v23[*(int *)(v78 + 36)];
  v45 = v100;
  *((_OWORD *)v44 + 4) = v99;
  *((_OWORD *)v44 + 5) = v45;
  *((_OWORD *)v44 + 6) = v101;
  v46 = v96;
  *(_OWORD *)v44 = v95;
  *((_OWORD *)v44 + 1) = v46;
  v47 = v98;
  *((_OWORD *)v44 + 2) = v97;
  *((_OWORD *)v44 + 3) = v47;
  v48 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v43);
  v49 = sub_2418A90CC();
  sub_241860D60((uint64_t)v8);
  sub_2417289A8((uint64_t)&v8[*(int *)(v80 + 48)], v48, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_24172588C((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles);
  if (*(_BYTE *)(v48 + *(int *)(v81 + 24)) == 1 && (sub_2418A879C() & 1) == 0)
    sub_24185F5A8();
  sub_24172588C(v48, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_2418A84A8();
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v58 = v86;
  sub_2417289A8((uint64_t)v23, v86, (uint64_t (*)(_QWORD))sub_241862AE8);
  v59 = v58 + *(int *)(v85 + 36);
  *(_BYTE *)v59 = v49;
  *(_QWORD *)(v59 + 8) = v51;
  *(_QWORD *)(v59 + 16) = v53;
  *(_QWORD *)(v59 + 24) = v55;
  *(_QWORD *)(v59 + 32) = v57;
  *(_BYTE *)(v59 + 40) = 0;
  sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))sub_241862AE8);
  v60 = *(_QWORD **)(a1 + *(int *)(v82 + 24));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v60 = sub_241802714(0, v60[2] + 1, 1, v60);
  v62 = v60[2];
  v61 = v60[3];
  if (v62 >= v61 >> 1)
    v60 = sub_241802714((_QWORD *)(v61 > 1), v62 + 1, 1, v60);
  v60[2] = v62 + 1;
  v63 = &v60[2 * v62];
  v63[4] = 0x7474754265726F4DLL;
  v63[5] = 0xEA00000000006E6FLL;
  v94 = &unk_2511AB450;
  v64 = swift_bridgeObjectRetain();
  sub_2417739BC(v64);
  sub_241773FD4();
  sub_24172159C((unint64_t *)&qword_2543915D8, (uint64_t (*)(uint64_t))sub_241773FD4, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241721DF8(&qword_257154E18, (uint64_t (*)(uint64_t))sub_241862ACC, sub_2418A3EB4, MEMORY[0x24BDECC60]);
  v65 = (uint64_t)v83;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24172588C(v58, (uint64_t (*)(_QWORD))sub_241862ACC);
  v66 = v89;
  sub_241731B4C(v65, v89, (uint64_t (*)(_QWORD))sub_2418A3924);
  v67 = v87;
  v68 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  v69 = v88;
  v70 = v84;
  v71 = v90;
  v68(v88, v84, v90);
  v72 = v91;
  sub_2417289A8(v66, v91, (uint64_t (*)(_QWORD))sub_2418A3924);
  v73 = v92;
  v68(v92, v69, v71);
  sub_241862A14(0);
  sub_2417289A8(v72, (uint64_t)&v73[*(int *)(v74 + 48)], (uint64_t (*)(_QWORD))sub_2418A3924);
  sub_24172588C(v66, (uint64_t (*)(_QWORD))sub_2418A3924);
  v75 = *(void (**)(char *, uint64_t))(v67 + 8);
  v75(v70, v71);
  sub_24172588C(v72, (uint64_t (*)(_QWORD))sub_2418A3924);
  return ((uint64_t (*)(char *, uint64_t))v75)(v69, v71);
}

uint64_t sub_2418A3630@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a1;
  v1 = sub_2418A91E0();
  v38 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v37 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v8 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v9 = sub_2418A7EFC();
  v11 = v10;
  swift_bridgeObjectRelease();

  v40 = v9;
  v41 = v11;
  sub_241721040();
  v12 = sub_2418A92D0();
  v14 = v13;
  v36 = v15;
  v17 = v16 & 1;
  sub_241860D60((uint64_t)v7);
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A912C();
  v19 = v37;
  v18 = v38;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v37, *MEMORY[0x24BDF17C8], v1);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v1);
  v20 = sub_2418A9294();
  v22 = v21;
  v38 = v23;
  v25 = v24 & 1;
  sub_2417289EC(v12, v14, v17);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241860D60((uint64_t)v7);
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  v26 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v40 = MEMORY[0x24269BDB4](v26);
  v27 = sub_2418A9270();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_2417289EC(v20, v22, v25);
  swift_release();
  result = swift_bridgeObjectRelease();
  v35 = v39;
  *v39 = v27;
  v35[1] = v29;
  *((_BYTE *)v35 + 16) = v31 & 1;
  v35[3] = v33;
  return result;
}

void sub_2418A3924(uint64_t a1)
{
  sub_241728250(a1, &qword_257153BD0, sub_241862ACC, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_2418A3940()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257154E00)
  {
    sub_24172570C(255, &qword_257153BC0, (uint64_t (*)(uint64_t))sub_241862A14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257154E00);
  }
}

void sub_2418A39BC(uint64_t a1)
{
  sub_241782A08(a1, &qword_257154E10, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4E58], MEMORY[0x24BDF4E40], MEMORY[0x24BDF06B8]);
}

uint64_t sub_2418A39E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(_s14ShowMoreButtonVMa() - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = sub_2418A8EB0();
    v4 = *(_QWORD *)(v3 - 8);
    v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (!v5(v2, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    v6 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v7 = v2 + v6[5];
    v8 = sub_2418A87B4();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v7, v8);
    v10 = v2 + v6[7];
    v11 = sub_2418A84E4();
    v35 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v35(v10, v11);
    v12 = v2 + v6[8];
    if (!v5(v12, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v3);
    v13 = _s6StylesV8TimelineVMa(0);
    v9(v12 + *(int *)(v13 + 20), v8);
    v14 = v2 + v6[9];
    if (!v5(v14, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v3);
    v15 = _s6StylesV6NoDataVMa(0);
    v9(v14 + *(int *)(v15 + 20), v8);
    v16 = v2 + v6[10];
    if (!v5(v16, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v16, v3);
    v17 = _s6StylesV11PlaceholderVMa(0);
    v9(v16 + *(int *)(v17 + 20), v8);
    v18 = v2 + v6[11];
    if (!v5(v18, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v18, v3);
    v19 = _s6StylesV6SymbolVMa(0);
    v9(v18 + *(int *)(v19 + 20), v8);
    v20 = v2 + v6[12];
    if (!v5(v20, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v20, v3);
    v21 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v9(v20 + *(int *)(v21 + 20), v8);
    v35(v20 + *(int *)(v21 + 28), v11);
    v22 = v2 + v6[13];
    if (!v5(v22, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v22, v3);
    v23 = _s6StylesV5EmptyVMa(0);
    v9(v22 + *(int *)(v23 + 20), v8);
    v24 = v2 + v6[14];
    if (!v5(v24, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v24, v3);
    v25 = _s6StylesV5DailyVMa(0);
    v9(v24 + *(int *)(v25 + 20), v8);
    v26 = v2 + v6[15];
    if (!v5(v26, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v26, v3);
    v27 = _s6StylesV9MomentaryVMa(0);
    v9(v26 + *(int *)(v27 + 20), v8);
    v28 = v2 + v6[16];
    if (!v5(v28, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v28, v3);
    v29 = _s6StylesV6HeaderVMa(0);
    v9(v28 + *(int *)(v29 + 20), v8);
    v30 = v2 + v6[17];
    if (!v5(v30, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v30, v3);
    v31 = _s6StylesV11ChartButtonVMa(0);
    v9(v30 + *(int *)(v31 + 20), v8);
    v32 = v2 + v6[18];
    if (!v5(v32, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v32, v3);
    v33 = _s6StylesV15LogButtonFooterVMa(0);
    v9(v32 + *(int *)(v33 + 20), v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2418A3E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = _s14ShowMoreButtonVMa();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + *(int *)(v1 + 20) + ((v2 + 16) & ~v2)))();
}

uint64_t sub_2418A3EAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2418A3630(a1);
}

uint64_t sub_2418A3EB4()
{
  return sub_241721DF8(&qword_257154E20, (uint64_t (*)(uint64_t))sub_241862AE8, (uint64_t (*)(void))sub_241731344, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_2418A3EDC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257154E28;
  if (!qword_257154E28)
  {
    sub_241728250(255, &qword_257154E08, sub_241862B64, sub_2418A39BC);
    v2 = v1;
    v3[0] = sub_241721DF8(&qword_257154E30, (uint64_t (*)(uint64_t))sub_241862B64, sub_2418A3F9C, MEMORY[0x24BDEDBB8]);
    v3[1] = sub_24172159C((unint64_t *)&unk_257154E40, (uint64_t (*)(uint64_t))sub_2418A39BC, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_257154E28);
  }
  return result;
}

uint64_t sub_2418A3F9C()
{
  return sub_24172159C(&qword_257154E38, (uint64_t (*)(uint64_t))sub_241862980, MEMORY[0x24BDF4700]);
}

__n64 sub_2418A3FB8(float a1, float32x4_t a2)
{
  __float2 v2;
  int32x4_t v3;
  float32x2_t v4;
  float32x2_t v5;
  float32x4_t v6;
  float v7;
  float v8;
  __n64 result;

  v2 = __sincospif_stret(a1 * 0.0055556);
  v3 = (int32x4_t)vmulq_f32(a2, a2);
  v3.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v3, 2), vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1))).u32[0];
  v4 = vrsqrte_f32((float32x2_t)v3.u32[0]);
  v5 = vmul_f32(v4, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v4, v4)));
  v6 = vmulq_n_f32(a2, vmul_f32(v5, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v5, v5))).f32[0]);
  v7 = (float)(1.0 - v2.__cosval) * v6.f32[0];
  v8 = vmuls_lane_f32(v7, *(float32x2_t *)v6.f32, 1);
  result.n64_f32[0] = v2.__cosval + (float)(v7 * v6.f32[0]);
  result.n64_f32[1] = vmuls_lane_f32(v2.__sinval, v6, 2) + v8;
  return result;
}

float sub_2418A40E8(float a1, float a2)
{
  return (float)(1.0 / tanf((float)(a1 * 0.017453) * 0.5)) / a2;
}

__n64 sub_2418A4174(double a1, int32x4_t a2, int32x4_t a3)
{
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v5;
  int32x4_t v6;
  float32x2_t v7;
  float32x2_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t v11;
  int32x4_t v12;
  float32x2_t v13;
  float32x2_t v14;
  __n64 result;

  v3 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(a2, a2), (int8x16_t)a2, 0xCuLL);
  v4 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(a3, a3), (int8x16_t)a3, 0xCuLL), vnegq_f32((float32x4_t)a2)), (float32x4_t)a3, v3);
  v5 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v4, (int32x4_t)v4), (int8x16_t)v4, 0xCuLL);
  v6 = (int32x4_t)vmulq_f32(v4, v4);
  v6.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v6.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v6, 2), *(float32x2_t *)v6.i8)).u32[0];
  v7 = vrsqrte_f32((float32x2_t)v6.u32[0]);
  v8 = vmul_f32(v7, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v7, v7)));
  v9 = vmulq_n_f32(v5, vmul_f32(v8, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v8, v8))).f32[0]);
  v10 = vmlaq_f32(vmulq_f32(v3, vnegq_f32(v9)), (float32x4_t)a2, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v9, (int32x4_t)v9), (int8x16_t)v9, 0xCuLL));
  v11 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v10, (int32x4_t)v10), (int8x16_t)v10, 0xCuLL);
  v12 = (int32x4_t)vmulq_f32(v10, v10);
  v12.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v12.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v12, 2), *(float32x2_t *)v12.i8)).u32[0];
  v13 = vrsqrte_f32((float32x2_t)v12.u32[0]);
  v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v13, v13)));
  result.n64_u32[0] = v9.i32[0];
  result.n64_u32[1] = vmulq_n_f32(v11, vmul_f32(v14, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v14, v14))).f32[0]).u32[0];
  return result;
}

void sub_2418A42E8()
{
  char *v0;
  CGFloat *v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  void *v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double Width;
  double Height;
  double v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CGFloat rect;
  double rect_8;
  id rect_16;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  v1 = (CGFloat *)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_lastBounds];
  v2 = *(double *)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_lastBounds];
  v3 = *(double *)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_lastBounds + 8];
  v4 = *(double *)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_lastBounds + 16];
  v5 = *(double *)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_lastBounds + 24];
  objc_msgSend(v0, sel_bounds);
  v43.origin.x = v6;
  v43.origin.y = v7;
  v43.size.width = v8;
  v43.size.height = v9;
  v38.origin.x = v2;
  v38.origin.y = v3;
  v38.size.width = v4;
  v38.size.height = v5;
  if (!CGRectEqualToRect(v38, v43))
  {
    v10 = *(void **)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer];
    if (v10)
    {
      v11 = *v1;
      v12 = v1[1];
      rect = *v1;
      v14 = v1[2];
      v13 = v1[3];
      rect_16 = v10;
      objc_msgSend(v0, sel_bounds);
      v16 = v15;
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v39.origin.x = v11;
      v39.origin.y = v12;
      v39.size.width = v14;
      v39.size.height = v13;
      Width = CGRectGetWidth(v39);
      v40.origin.x = v16;
      v40.origin.y = v18;
      v40.size.width = v20;
      v40.size.height = v22;
      rect_8 = vabdd_f64(Width, CGRectGetWidth(v40));
      v41.origin.x = rect;
      v41.origin.y = v12;
      v41.size.width = v14;
      v41.size.height = v13;
      Height = CGRectGetHeight(v41);
      v42.origin.x = v16;
      v42.origin.y = v18;
      v42.size.width = v20;
      v42.size.height = v22;
      v25 = vabdd_f64(Height, CGRectGetHeight(v42));
      if (rect_8 <= 40.0 && v25 <= 40.0)
      {

      }
      else
      {
        objc_msgSend(v0, sel_bounds, v25, 40.0, rect_8);
        sub_24186CBBC();
        objc_msgSend(v0, sel_bounds);
        v28 = v27;
        v30 = v29;
        v32 = v31;
        v34 = v33;

        *(_QWORD *)v1 = v28;
        *((_QWORD *)v1 + 1) = v30;
        *((_QWORD *)v1 + 2) = v32;
        *((_QWORD *)v1 + 3) = v34;
      }
    }
  }
}

uint64_t type metadata accessor for ShapeContainer()
{
  return objc_opt_self();
}

id sub_2418A4618(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  void *v8;
  float v9;
  float v10;
  id v11;
  id result;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v2 = v1;
  v4 = OBJC_IVAR____TtCV14MentalHealthUI12EmotionShape11Coordinator_parent;
  objc_msgSend(a1, sel_velocityInView_, *(_QWORD *)(v1 + OBJC_IVAR____TtCV14MentalHealthUI12EmotionShape11Coordinator_parent));
  v7 = *(_QWORD *)(v1 + v4);
  if (v7)
  {
    v8 = *(void **)(v7 + OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer);
    if (v8)
    {
      v9 = v5;
      v10 = v6;
      v11 = v8;
      sub_241868E8C(v9, v10);

    }
  }
  result = objc_msgSend(a1, sel_state);
  v13 = *(_QWORD *)(v2 + v4);
  if ((unint64_t)result > 2)
  {
    if (v13)
    {
      v14 = *(_QWORD *)(v13 + OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer);
      if (v14)
      {
        v15 = 0;
        goto LABEL_11;
      }
    }
  }
  else if (v13)
  {
    v14 = *(_QWORD *)(v13 + OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer);
    if (v14)
    {
      v15 = 1;
LABEL_11:
      *(_BYTE *)(v14 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_isDragging) = v15;
    }
  }
  return result;
}

id sub_2418A4794()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmotionShape.Coordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for EmotionShape.Coordinator()
{
  return objc_opt_self();
}

uint64_t sub_2418A47F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  char v16;
  void (*v17)(char *, uint64_t);
  id v18;
  CGColor *GenericRGB;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  CGFloat v23;
  CGFloat v24;
  double v25;
  CGColorRef v26;
  int *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  float v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  id v41;
  void *v42;
  char *v43;
  void *v44;
  char *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t result;
  uint64_t v53;
  id v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  int v61;

  v1 = v0;
  v2 = sub_2418A84E4();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v53 - v9;
  v11 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ShapeContainer()), sel_initWithFrame_, 0.0, 0.0, 1.0, 1.0);
  v12 = objc_msgSend(v11, sel_layer);
  objc_opt_self();
  v13 = swift_dynamicCastObjCClass();
  if (!v13)
    goto LABEL_15;
  v14 = (void *)v13;
  v15 = MTLCreateSystemDefaultDevice();
  objc_msgSend(v14, sel_setDevice_, v15);
  objc_msgSend(v14, sel_setOpaque_, 0);
  objc_msgSend(v14, sel_setFramebufferOnly_, 0);
  objc_msgSend(v14, sel_setPixelFormat_, 80);
  objc_msgSend(v14, sel_setPresentsWithTransaction_, 1);
  sub_241861034((uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v7, *MEMORY[0x24BDEB3F0], v2);
  v16 = sub_2418A84D8();
  v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v7, v2);
  v17(v10, v2);
  v18 = v12;
  v55 = v15;
  v56 = v11;
  if ((v16 & 1) == 0)
  {
    v22 = (uint64_t)v10;
    GenericRGB = CGColorCreateGenericRGB(0.858823529, 0.882352941, 0.88627451, 1.0);
    goto LABEL_11;
  }
  GenericRGB = CGColorCreateGenericRGB(0.741176471, 0.82745098, 0.839215686, 1.0);
  if (CGColorGetNumberOfComponents(GenericRGB) != 4 || (v20 = sub_2418A9FE4()) == 0)
  {
    v22 = (uint64_t)v10;
    goto LABEL_11;
  }
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    if (v21 != 1)
    {
      if (v21 >= 3)
      {
        v22 = (uint64_t)v10;
        v23 = *(double *)(v20 + 32) * 0.5;
        v24 = *(double *)(v20 + 40) * 0.5;
        v25 = *(double *)(v20 + 48);
        swift_bridgeObjectRelease();
        v26 = CGColorCreateGenericRGB(v23, v24, v25 * 0.5, 1.0);

        GenericRGB = v26;
LABEL_11:
        objc_msgSend(v14, sel_setBackgroundColor_, GenericRGB);

        v27 = (int *)type metadata accessor for EmotionShape();
        v28 = *(double *)(v1 + v27[7]);
        v29 = v1 + v27[9];
        v30 = *(_QWORD *)(v29 + 8);
        v31 = *(_DWORD *)(v29 + 16);
        v32 = *(_BYTE *)(v1 + v27[6]);
        v60[0] = *(_QWORD *)v29;
        v60[1] = v30;
        v61 = v31;
        sub_2418A6450(0, &qword_257155010);
        v53 = v33;
        v54 = v18;
        sub_2418A9828();
        v35 = v57;
        v34 = v58;
        v36 = *(float *)&v59;
        sub_241861034(v22);
        v37 = v1 + v27[5];
        v38 = *(_QWORD *)v37;
        v39 = *(_BYTE *)(v37 + 8);
        sub_241841588(*(_QWORD *)v37, v39);
        v40 = sub_2418624F4(v38, v39);
        sub_2417F446C(v38, v39);
        v41 = objc_allocWithZone((Class)type metadata accessor for ChamomileRenderer());
        v42 = (void *)sub_24186C76C(v14, 1, v32, v35, v34, v22, v40 & 1, v28, v36);
        swift_release();
        swift_release();
        v43 = v56;
        v44 = *(void **)&v56[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer];
        *(_QWORD *)&v56[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer] = v42;
        v45 = v42;

        v46 = (uint64_t *)(v1 + v27[10]);
        v47 = v46[1];
        v48 = v46[2];
        v57 = *v46;
        v58 = v47;
        v59 = v48;
        sub_24172570C(0, &qword_257155018, (uint64_t (*)(uint64_t))sub_241841F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
        MEMORY[0x24269C00C](v60);
        *(_QWORD *)&v45[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset] = v60[0];
        v49 = v1 + v27[11];
        v50 = *(_QWORD *)(v49 + 8);
        v51 = *(_DWORD *)(v49 + 16);
        v57 = *(_QWORD *)v49;
        v58 = v50;
        LODWORD(v59) = v51;
        MEMORY[0x24269C00C](v60, v53);
        swift_unknownObjectRelease();

        *(_DWORD *)&v45[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale] = v60[0];
        return (uint64_t)v43;
      }
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:

  result = sub_2418AA380();
  __break(1u);
  return result;
}

_QWORD *sub_2418A4CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v42)(uint64_t, uint64_t);
  int v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  int v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  _QWORD v76[3];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v2 = v1;
  v4 = (int *)type metadata accessor for EmotionShape();
  MEMORY[0x24BDAC7A8](v4, v5);
  v72 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A84E4();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v10);
  v71 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A62F0();
  v75 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, &qword_25714F130, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v70 = (uint64_t)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v23 = (char *)&v69 - v22;
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v69 - v25;
  v74 = v4;
  if (a1)
  {
    v27 = v2 + v4[8];
    v28 = *(_QWORD *)(v27 + 8);
    v29 = *(_DWORD *)(v27 + 16);
    v77 = *(_QWORD *)v27;
    v78 = v28;
    LODWORD(v79) = v29;
    sub_2418A6450(0, &qword_257155010);
    v31 = v30;
    MEMORY[0x24269C00C](v76);
    *(_DWORD *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valence) = v76[0];
    v32 = (uint64_t *)(v2 + v4[10]);
    v33 = v32[1];
    v34 = v32[2];
    v77 = *v32;
    v78 = v33;
    v79 = v34;
    sub_24172570C(0, &qword_257155018, (uint64_t (*)(uint64_t))sub_241841F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    MEMORY[0x24269C00C](v76);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset) = v76[0];
    v35 = v2 + v4[11];
    v36 = *(_QWORD *)(v35 + 8);
    v37 = *(_DWORD *)(v35 + 16);
    v77 = *(_QWORD *)v35;
    v78 = v36;
    LODWORD(v79) = v37;
    MEMORY[0x24269C00C](v76, v31);
    *(_DWORD *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale) = v76[0];
    v38 = a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_colorScheme;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v26, v38, v7);
    v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v39(v26, 0, 1, v7);
  }
  else
  {
    v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v39((char *)&v69 - v25, 1, 1, v7);
  }
  v73 = v2;
  sub_241861034((uint64_t)v23);
  v39(v23, 0, 1, v7);
  v40 = (uint64_t)&v15[*(int *)(v75 + 48)];
  sub_2418A6368((uint64_t)v26, (uint64_t)v15);
  sub_2418A6368((uint64_t)v23, v40);
  v75 = v9;
  v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v41((uint64_t)v15, 1, v7) == 1)
  {
    v42 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    sub_2418A63C4((uint64_t)v23, &qword_25714F130, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2418A63C4((uint64_t)v26, &qword_25714F130, v42);
    v43 = v41(v40, 1, v7);
    v44 = v74;
    if (v43 == 1)
    {
      sub_2418A63C4((uint64_t)v15, &qword_25714F130, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v46 = v72;
      v45 = v73;
      sub_2418A640C(v73, v72);
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  v47 = v70;
  sub_2418A6368((uint64_t)v15, v70);
  if (v41(v40, 1, v7) == 1)
  {
    v48 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    sub_2418A63C4((uint64_t)v23, &qword_25714F130, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2418A63C4((uint64_t)v26, &qword_25714F130, v48);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v47, v7);
    v44 = v74;
LABEL_9:
    sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_2418A62F0);
    v46 = v72;
    v45 = v73;
    sub_2418A640C(v73, v72);
LABEL_13:
    sub_24172588C(v46, (uint64_t (*)(_QWORD))type metadata accessor for EmotionShape);
    goto LABEL_16;
  }
  v49 = v75;
  v50 = v71;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v71, v40, v7);
  sub_24172159C(&qword_257155008, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB440]);
  v51 = sub_2418A9DA4();
  v52 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v52(v50, v7);
  v53 = v47;
  v54 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2418A63C4((uint64_t)v23, &qword_25714F130, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2418A63C4((uint64_t)v26, &qword_25714F130, v54);
  v52(v53, v7);
  sub_2418A63C4((uint64_t)v15, &qword_25714F130, v54);
  v46 = v72;
  v45 = v73;
  sub_2418A640C(v73, v72);
  v44 = v74;
  if ((v51 & 1) == 0)
    goto LABEL_13;
LABEL_11:
  if (a1)
    v55 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion);
  else
    v55 = 2;
  v56 = v46 + v44[5];
  v57 = *(_QWORD *)v56;
  v58 = *(_BYTE *)(v56 + 8);
  sub_241841588(*(_QWORD *)v56, v58);
  v59 = sub_2418624F4(v57, v58);
  sub_2417F446C(v57, v58);
  sub_24172588C(v46, (uint64_t (*)(_QWORD))type metadata accessor for EmotionShape);
  if (v55 == 2)
  {
LABEL_16:
    if (!a1)
      goto LABEL_18;
    goto LABEL_17;
  }
  if (a1 && ((v59 ^ (v55 != 0)) & 1) != 0)
  {
LABEL_17:
    v60 = v71;
    sub_241861034(v71);
    v61 = a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_colorScheme;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 40))(v61, v60, v7);
    swift_endAccess();
    v62 = v45 + v44[5];
    v63 = *(_QWORD *)v62;
    LOBYTE(v60) = *(_BYTE *)(v62 + 8);
    sub_241841588(*(_QWORD *)v62, v60);
    v64 = sub_2418624F4(v63, v60);
    sub_2417F446C(v63, v60);
    *(_BYTE *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion) = v64 & 1;
    sub_24186702C();
  }
LABEL_18:
  v65 = v45 + v44[12];
  v66 = *(_QWORD *)v65;
  v67 = *(_QWORD *)(v65 + 8);
  LOBYTE(v65) = *(_BYTE *)(v65 + 16);
  v77 = v66;
  v78 = v67;
  LOBYTE(v79) = v65;
  sub_2418A6450(0, (unint64_t *)&qword_257155000);
  result = MEMORY[0x24269C00C](&v80);
  if (a1)
  {
    result = *(_QWORD **)(a1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink);
    if (result)
      return objc_msgSend(result, sel_setPaused_);
  }
  return result;
}

void sub_2418A53A0(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer);
  v2 = v1;
  sub_2418A4CDC((uint64_t)v1);

}

id sub_2418A53E8@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EmotionShape.Coordinator()), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_2418A5420()
{
  return sub_2418A8CAC();
}

uint64_t sub_2418A5460()
{
  sub_24172159C(&qword_257154FE8, (uint64_t (*)(uint64_t))type metadata accessor for EmotionShape, (uint64_t)&unk_2418DB538);
  return sub_2418A8D0C();
}

uint64_t sub_2418A54C8()
{
  sub_24172159C(&qword_257154FE8, (uint64_t (*)(uint64_t))type metadata accessor for EmotionShape, (uint64_t)&unk_2418DB538);
  return sub_2418A8CB8();
}

void sub_2418A5530()
{
  sub_24172159C(&qword_257154FE8, (uint64_t (*)(uint64_t))type metadata accessor for EmotionShape, (uint64_t)&unk_2418DB538);
  sub_2418A8D00();
  __break(1u);
}

unint64_t sub_2418A556C()
{
  unint64_t result;

  result = qword_257154F18;
  if (!qword_257154F18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257154F18);
  }
  return result;
}

_QWORD *sub_2418A55A8(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)v11;
    v13 = v11[8];
    sub_241841588(*(_QWORD *)v11, v13);
    *(_QWORD *)v10 = v12;
    v10[8] = v13;
    v14 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_QWORD *)((char *)v4 + v14) = *(_QWORD *)((char *)a2 + v14);
    v15 = a3[8];
    v16 = a3[9];
    v17 = (char *)v4 + v15;
    v18 = (char *)a2 + v15;
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    *((_DWORD *)v17 + 4) = *((_DWORD *)v18 + 4);
    v20 = (char *)v4 + v16;
    v21 = (char *)a2 + v16;
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    *((_DWORD *)v20 + 4) = *((_DWORD *)v21 + 4);
    v23 = a3[10];
    v24 = a3[11];
    v25 = (_QWORD *)((char *)v4 + v23);
    v26 = (_QWORD *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v25[2] = v26[2];
    v28 = (char *)v4 + v24;
    v29 = (char *)a2 + v24;
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    *((_DWORD *)v28 + 4) = *((_DWORD *)v29 + 4);
    v31 = a3[12];
    v32 = (char *)v4 + v31;
    v33 = (char *)a2 + v31;
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    v32[16] = v33[16];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2418A57A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_2417F446C(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_2418A58B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = v9[8];
  sub_241841588(*(_QWORD *)v9, v11);
  *(_QWORD *)v8 = v10;
  v8[8] = v11;
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v13 = a3[8];
  v14 = a3[9];
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  *((_DWORD *)v15 + 4) = *((_DWORD *)v16 + 4);
  v18 = (char *)a1 + v14;
  v19 = (char *)a2 + v14;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  *((_DWORD *)v18 + 4) = *((_DWORD *)v19 + 4);
  v21 = a3[10];
  v22 = a3[11];
  v23 = (_QWORD *)((char *)a1 + v21);
  v24 = (_QWORD *)((char *)a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v23[2] = v24[2];
  v26 = (char *)a1 + v22;
  v27 = (char *)a2 + v22;
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  *((_DWORD *)v26 + 4) = *((_DWORD *)v27 + 4);
  v29 = a3[12];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = v32;
  v30[16] = v31[16];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_2418A5A8C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_2418A63C4((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)v10;
  v12 = v10[8];
  sub_241841588(*(_QWORD *)v10, v12);
  v13 = *(_QWORD *)v9;
  v14 = v9[8];
  *(_QWORD *)v9 = v11;
  v9[8] = v12;
  sub_2417F446C(v13, v14);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  swift_retain();
  swift_release();
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_retain();
  swift_release();
  *((_DWORD *)v16 + 4) = *((_DWORD *)v17 + 4);
  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_retain();
  swift_release();
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_retain();
  swift_release();
  *((_DWORD *)v19 + 4) = *((_DWORD *)v20 + 4);
  v21 = a3[10];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  swift_retain();
  swift_release();
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_retain();
  swift_release();
  *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
  v24 = a3[11];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *(_QWORD *)((char *)a1 + v24) = *(_QWORD *)((char *)a2 + v24);
  swift_retain();
  swift_release();
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_retain();
  swift_release();
  *((_DWORD *)v25 + 4) = *((_DWORD *)v26 + 4);
  v27 = a3[12];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  *(_QWORD *)((char *)a1 + v27) = *(_QWORD *)((char *)a2 + v27);
  swift_retain();
  swift_release();
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_retain();
  swift_release();
  v28[16] = v29[16];
  return a1;
}

char *sub_2418A5D08(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  __int128 v28;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  a1[v10] = a2[v10];
  v13 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = &a1[v16];
  v19 = &a2[v16];
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_DWORD *)v18 + 4) = *((_DWORD *)v19 + 4);
  v20 = &a1[v17];
  v21 = &a2[v17];
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  v22 = a3[11];
  v23 = a3[12];
  v24 = &a1[v22];
  v25 = &a2[v22];
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_DWORD *)v24 + 4) = *((_DWORD *)v25 + 4);
  v26 = &a1[v23];
  v27 = &a2[v23];
  v28 = *(_OWORD *)v27;
  v26[16] = v27[16];
  *(_OWORD *)v26 = v28;
  return a1;
}

char *sub_2418A5E68(char *a1, char *a2, int *a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_2418A63C4((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v6);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)v12;
  LOBYTE(v12) = v12[8];
  v14 = *(_QWORD *)v11;
  v15 = v11[8];
  *(_QWORD *)v11 = v13;
  v11[8] = (char)v12;
  sub_2417F446C(v14, v15);
  v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  swift_release();
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_release();
  *((_DWORD *)v18 + 4) = *((_DWORD *)v19 + 4);
  v20 = a3[9];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  swift_release();
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_release();
  *((_DWORD *)v21 + 4) = *((_DWORD *)v22 + 4);
  v23 = a3[10];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  swift_release();
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_release();
  *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
  v26 = a3[11];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)&a1[v26] = *(_QWORD *)&a2[v26];
  swift_release();
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_release();
  *((_DWORD *)v27 + 4) = *((_DWORD *)v28 + 4);
  v29 = a3[12];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_QWORD *)&a1[v29] = *(_QWORD *)v31;
  swift_release();
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_release();
  v30[16] = v31[16];
  return a1;
}

uint64_t sub_2418A6080()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2418A608C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2418A6124()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2418A6130(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
}

uint64_t type metadata accessor for EmotionShape()
{
  uint64_t result;

  result = qword_257154F88;
  if (!qword_257154F88)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2418A6200()
{
  unint64_t v0;

  sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2418A62C4()
{
  return sub_24172159C(&qword_257154FE0, (uint64_t (*)(uint64_t))type metadata accessor for EmotionShape, (uint64_t)&unk_2418DB5C8);
}

void sub_2418A62F0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_257154FF0)
  {
    sub_24172570C(255, &qword_25714F130, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_257154FF0);
  }
}

uint64_t sub_2418A6368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_25714F130, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2418A63C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;

  sub_24172570C(0, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2418A640C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EmotionShape();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2418A6450(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_2418A984C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_2418A6494(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_2418AA56C();
    sub_241732024(a1);
    sub_2418A9E1C();
    swift_bridgeObjectRelease();
    v4 = sub_2418AA59C() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_2418A6824(char a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    sub_2418AA56C();
    __asm { BR              X10 }
  }
  return 0;
}

void sub_2418A6B0C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

id sub_2418A6B6C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3918]), sel_initWithLoggingCategory_healthDataSource_, *MEMORY[0x24BDD3038], *(_QWORD *)(v0 + 16));
    v4 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t MentalHealthAssessmentsAnalyticsContextManager.__allocating_init(healthStore:entryPoint:provenance:)(uint64_t a1, char *a2, char *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  MentalHealthAssessmentsAnalyticsContextManager.init(healthStore:entryPoint:provenance:)(a1, a2, a3);
  return v6;
}

uint64_t MentalHealthAssessmentsAnalyticsContextManager.init(healthStore:entryPoint:provenance:)(uint64_t a1, char *a2, char *a3)
{
  uint64_t v3;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *a2;
  v6 = *a3;
  *(_BYTE *)(v3 + 24) = 2;
  *(_BYTE *)(v3 + 27) = 3;
  v7 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = v7;
  sub_2418A6CB4();
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + 25) = v5;
  *(_BYTE *)(v3 + 26) = v6;
  return v3;
}

void sub_2418A6CB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257155028)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_2418AA308();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257155028);
  }
}

_BYTE *sub_2418A6D14(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 27) = *result;
  return result;
}

uint64_t sub_2418A6D20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int v43;
  int v44;
  _QWORD aBlock[6];
  unsigned __int8 v46;

  v3 = v2;
  v6 = *v3;
  sub_2418A7124();
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24179E92C(0, &qword_25714EBC0, &qword_25714EBC8, 0x24BDD3ED8, MEMORY[0x24BDD2220]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v16 = MEMORY[0x24BDAC7A8](v11, v15);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v39 - v18;
  v20 = *a2;
  v43 = *a1;
  v44 = v20;
  v21 = (os_unfair_lock_s *)(v3[6] + 16);
  os_unfair_lock_lock(v21);
  sub_2418A7178(aBlock);
  LODWORD(a2) = LOBYTE(aBlock[0]);
  os_unfair_lock_unlock(v21);
  if ((_DWORD)a2 == 2)
  {
    sub_2418A7A44();
    sub_24179E92C(0, &qword_25714EBD8, &qword_25714EBC8, 0x24BDD3ED8, MEMORY[0x24BDD2120]);
    v41 = v10;
    v42 = v6;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2418D1940;
    v40 = v12;
    sub_241762EFC(0, &qword_257155030);
    v22 = MEMORY[0x24269C960]((id)*MEMORY[0x24BDD3720]);
    v39 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    v23 = (void *)v22;
    sub_241762EFC(0, &qword_25714EBC8);
    sub_2418A9C54();

    v24 = (void *)MEMORY[0x24269C960]((id)*MEMORY[0x24BDD3728]);
    sub_2418A9C54();

    sub_2418A9C60();
    v25 = sub_2418A9F60();
    v26 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v41, 1, 1, v25);
    v28 = v39;
    v27 = v40;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v39, v19, v40);
    v29 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v30 = (v14 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = 0;
    *(_QWORD *)(v31 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v31 + v29, v28, v27);
    v32 = v31 + v30;
    *(_QWORD *)v32 = v3;
    *(_BYTE *)(v32 + 8) = v43;
    *(_BYTE *)(v32 + 9) = v44;
    *(_QWORD *)(v31 + ((v30 + 17) & 0xFFFFFFFFFFFFFFF8)) = v42;
    swift_retain();
    sub_241826138(v26, (uint64_t)&unk_257155040, v31);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v27);
  }
  else
  {
    LOBYTE(aBlock[0]) = v43;
    v46 = v44;
    sub_2418A76D8((char *)aBlock, &v46);
    v35 = v34;
    v36 = sub_2418A6B6C();
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v6;
    aBlock[4] = sub_24179E90C;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2418A6B0C;
    aBlock[3] = &block_descriptor_13;
    v38 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v36, sel_submitEvent_completion_, v35, v38);
    _Block_release(v38);

    return swift_release();
  }
}

void sub_2418A7124()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254391478)
  {
    sub_2418A9F60();
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254391478);
  }
}

void sub_2418A7178(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t sub_2418A7184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 + 40) = a5;
  *(_QWORD *)(v8 + 48) = a8;
  *(_BYTE *)(v8 + 105) = a7;
  *(_BYTE *)(v8 + 104) = a6;
  *(_QWORD *)(v8 + 32) = a4;
  v9 = sub_2418A8340();
  *(_QWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2418A71F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  sub_24179E92C(0, &qword_25714EBC0, &qword_25714EBC8, 0x24BDD3ED8, MEMORY[0x24BDD2220]);
  *v1 = v0;
  v1[1] = sub_2418A7280;
  return sub_2418A9C6C();
}

uint64_t sub_2418A7280(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2418A72EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  unsigned __int8 v12[9];

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(os_unfair_lock_s **)(v3 + 48);
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v1;
  v6 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = sub_2418A7CE4;
  *(_QWORD *)(v6 + 24) = v5;
  v4 += 4;
  os_unfair_lock_lock(v4);
  (*(void (**)(void))(v6 + 16))();
  os_unfair_lock_unlock(v4);
  if (v2)
    return swift_task_dealloc();
  v8 = *(unsigned __int8 *)(v0 + 105);
  v9 = *(_BYTE *)(v0 + 104);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  v11 = v9;
  v12[0] = v8;
  sub_2418A76D8(&v11, v12);
  sub_2418A7914(v10);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2418A73E4()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = (void *)v0[12];
  sub_2418A8328();
  v3 = v2;
  v4 = v2;
  v5 = sub_2418A8334();
  v6 = sub_2418AA02C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (void *)v0[12];
    v20 = v0[8];
    v21 = v0[7];
    v22 = v0[9];
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v23 = v19;
    *(_DWORD *)v8 = 136446466;
    v10 = sub_2418AA5D8();
    v0[2] = sub_24176024C(v10, v11, &v23);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2112;
    v12 = v7;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v13;
    sub_2418AA1F4();
    *v9 = v13;

    _os_log_impl(&dword_24171C000, v5, v6, "[%{public}s] Error querying assessment samples: %@", (uint8_t *)v8, 0x16u);
    sub_24179E92C(0, &qword_25714EB98, &qword_25714EBA0, 0x24BEDCDF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v19, -1, -1);
    MEMORY[0x24269D548](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    v14 = (void *)v0[12];
    v16 = v1[8];
    v15 = v1[9];
    v17 = v1[7];

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_2418A7660(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = result;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_2418AA398();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_BYTE *)(v2 + 24) = v3 == 0;
  return result;
}

void sub_2418A76D8(char *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  _BYTE *v11;

  v3 = *a1;
  v4 = *a2;
  v5 = *(_BYTE *)(v2 + 27);
  v6 = *(_BYTE *)(v2 + 25);
  v7 = *(_BYTE *)(v2 + 26);
  swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain();
  v9 = sub_2418A6824(v3, v8);
  swift_bridgeObjectRelease();
  v10 = *(_BYTE *)(v2 + 24);
  type metadata accessor for MentalHealthAssessmentsEvent();
  v11 = (_BYTE *)swift_allocObject();
  v11[16] = v3;
  v11[17] = v4;
  v11[18] = v5;
  v11[19] = v6;
  v11[20] = v7;
  v11[21] = (v9 & 1) == 0;
  v11[22] = v10;
  __asm { BR              X9 }
}

uint64_t sub_2418A77B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

void sub_2418A7914(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[6];

  v3 = *v1;
  v4 = sub_2418A6B6C();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  v7[4] = sub_2418A7CFC;
  v7[5] = v5;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2418A6B0C;
  v7[3] = &block_descriptor_11;
  v6 = _Block_copy(v7);
  swift_release();
  objc_msgSend(v4, sel_submitEvent_completion_, a1, v6);
  _Block_release(v6);

}

uint64_t MentalHealthAssessmentsAnalyticsContextManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t MentalHealthAssessmentsAnalyticsContextManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_2418A7A44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714EBD0)
  {
    sub_24179E92C(255, &qword_25714EBD8, &qword_25714EBC8, 0x24BDD3ED8, MEMORY[0x24BDD2120]);
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714EBD0);
  }
}

uint64_t sub_2418A7AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_24179E92C(0, &qword_25714EBC0, &qword_25714EBC8, 0x24BDD3ED8, MEMORY[0x24BDD2220]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2418A7B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  _QWORD *v17;

  sub_24179E92C(0, &qword_25714EBC0, &qword_25714EBC8, 0x24BDD3ED8, MEMORY[0x24BDD2220]);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 17) & 0xFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v6;
  v12 = v1 + v7;
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v1 + v8);
  v15 = *(_BYTE *)(v12 + 9);
  v16 = *(_BYTE *)(v12 + 8);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_24175D6DC;
  return sub_2418A7184(a1, v9, v10, v11, v13, v16, v15, v14);
}

uint64_t sub_2418A7C60()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t type metadata accessor for MentalHealthAssessmentsAnalyticsContextManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for MentalHealthAssessmentsAnalyticsContextManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MentalHealthAssessmentsAnalyticsContextManager.__allocating_init(healthStore:entryPoint:provenance:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of MentalHealthAssessmentsAnalyticsContextManager.updateAnalyticsContextWithAllowedAssessments(allowedAssessmentType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of MentalHealthAssessmentsAnalyticsContextManager.submitAssessmentAnalyticsEvent(step:action:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t sub_2418A7CD4()
{
  return swift_deallocObject();
}

uint64_t sub_2418A7CE4()
{
  uint64_t v0;

  return sub_2418A7660(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t sub_2418A7D28()
{
  return MEMORY[0x24BDCB148]();
}

uint64_t sub_2418A7D34()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_2418A7D40()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_2418A7D4C()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_2418A7D58()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_2418A7D64()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_2418A7D70()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_2418A7D7C()
{
  return MEMORY[0x24BDCB828]();
}

uint64_t sub_2418A7D88()
{
  return MEMORY[0x24BDCB830]();
}

uint64_t sub_2418A7D94()
{
  return MEMORY[0x24BDCB848]();
}

uint64_t sub_2418A7DA0()
{
  return MEMORY[0x24BDCB878]();
}

uint64_t sub_2418A7DAC()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_2418A7DB8()
{
  return MEMORY[0x24BDCB918]();
}

uint64_t sub_2418A7DC4()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_2418A7DD0()
{
  return MEMORY[0x24BDCB958]();
}

uint64_t sub_2418A7DDC()
{
  return MEMORY[0x24BDCB960]();
}

uint64_t sub_2418A7DE8()
{
  return MEMORY[0x24BDCB980]();
}

uint64_t sub_2418A7DF4()
{
  return MEMORY[0x24BDCB988]();
}

uint64_t sub_2418A7E00()
{
  return MEMORY[0x24BDCBA58]();
}

uint64_t sub_2418A7E0C()
{
  return MEMORY[0x24BDCBA60]();
}

uint64_t sub_2418A7E18()
{
  return MEMORY[0x24BDCBAB0]();
}

uint64_t sub_2418A7E24()
{
  return MEMORY[0x24BDCBAC0]();
}

uint64_t sub_2418A7E30()
{
  return MEMORY[0x24BDCBAE0]();
}

uint64_t sub_2418A7E3C()
{
  return MEMORY[0x24BDCBAE8]();
}

uint64_t sub_2418A7E48()
{
  return MEMORY[0x24BDCBB78]();
}

uint64_t sub_2418A7E54()
{
  return MEMORY[0x24BDCBCA0]();
}

uint64_t sub_2418A7E60()
{
  return MEMORY[0x24BDCBCB0]();
}

uint64_t sub_2418A7E6C()
{
  return MEMORY[0x24BDCBCC0]();
}

uint64_t sub_2418A7E78()
{
  return MEMORY[0x24BDCBD08]();
}

uint64_t sub_2418A7E84()
{
  return MEMORY[0x24BDCBD10]();
}

uint64_t sub_2418A7E90()
{
  return MEMORY[0x24BDCBD60]();
}

uint64_t sub_2418A7E9C()
{
  return MEMORY[0x24BDCBD68]();
}

uint64_t sub_2418A7EA8()
{
  return MEMORY[0x24BDCBD78]();
}

uint64_t sub_2418A7EB4()
{
  return MEMORY[0x24BDCBDA8]();
}

uint64_t sub_2418A7EC0()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_2418A7ECC()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_2418A7ED8()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_2418A7EE4()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_2418A7EF0()
{
  return MEMORY[0x24BDCBEF8]();
}

uint64_t sub_2418A7EFC()
{
  return MEMORY[0x24BDCC6D8]();
}

uint64_t sub_2418A7F08()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_2418A7F14()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_2418A7F20()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_2418A7F2C()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_2418A7F38()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_2418A7F44()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_2418A7F50()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_2418A7F5C()
{
  return MEMORY[0x24BDCDC08]();
}

uint64_t sub_2418A7F68()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_2418A7F74()
{
  return MEMORY[0x24BDCDED0]();
}

uint64_t sub_2418A7F80()
{
  return MEMORY[0x24BDCDEE8]();
}

uint64_t sub_2418A7F8C()
{
  return MEMORY[0x24BDCDF18]();
}

uint64_t sub_2418A7F98()
{
  return MEMORY[0x24BDCDF30]();
}

uint64_t sub_2418A7FA4()
{
  return MEMORY[0x24BDCE010]();
}

uint64_t sub_2418A7FB0()
{
  return MEMORY[0x24BDCE028]();
}

uint64_t sub_2418A7FBC()
{
  return MEMORY[0x24BDCE040]();
}

uint64_t sub_2418A7FC8()
{
  return MEMORY[0x24BDCE060]();
}

uint64_t sub_2418A7FD4()
{
  return MEMORY[0x24BDCE078]();
}

uint64_t sub_2418A7FE0()
{
  return MEMORY[0x24BDCE098]();
}

uint64_t sub_2418A7FEC()
{
  return MEMORY[0x24BDCE0B0]();
}

uint64_t sub_2418A7FF8()
{
  return MEMORY[0x24BDCE0D0]();
}

uint64_t sub_2418A8004()
{
  return MEMORY[0x24BDCE0E0]();
}

uint64_t sub_2418A8010()
{
  return MEMORY[0x24BDCE138]();
}

uint64_t sub_2418A801C()
{
  return MEMORY[0x24BDCE160]();
}

uint64_t sub_2418A8028()
{
  return MEMORY[0x24BDCE168]();
}

uint64_t sub_2418A8034()
{
  return MEMORY[0x24BDCE178]();
}

uint64_t sub_2418A8040()
{
  return MEMORY[0x24BDCE1A8]();
}

uint64_t sub_2418A804C()
{
  return MEMORY[0x24BDCE1B8]();
}

uint64_t sub_2418A8058()
{
  return MEMORY[0x24BDCE1E0]();
}

uint64_t sub_2418A8064()
{
  return MEMORY[0x24BDCE230]();
}

uint64_t sub_2418A8070()
{
  return MEMORY[0x24BDCE250]();
}

uint64_t sub_2418A807C()
{
  return MEMORY[0x24BDCE2A0]();
}

uint64_t sub_2418A8088()
{
  return MEMORY[0x24BDCE2D8]();
}

uint64_t sub_2418A8094()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_2418A80A0()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_2418A80AC()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_2418A80B8()
{
  return MEMORY[0x24BDCE5E8]();
}

uint64_t sub_2418A80C4()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_2418A80D0()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_2418A80DC()
{
  return MEMORY[0x24BDCE8C0]();
}

uint64_t sub_2418A80E8()
{
  return MEMORY[0x24BDCE8D8]();
}

uint64_t sub_2418A80F4()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_2418A8100()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_2418A810C()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_2418A8118()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_2418A8124()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_2418A8130()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_2418A813C()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_2418A8148()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_2418A8154()
{
  return MEMORY[0x24BDCEF80]();
}

uint64_t sub_2418A8160()
{
  return MEMORY[0x24BDCEFA0]();
}

uint64_t sub_2418A816C()
{
  return MEMORY[0x24BDCEFC8]();
}

uint64_t sub_2418A8178()
{
  return MEMORY[0x24BDCF008]();
}

uint64_t sub_2418A8184()
{
  return MEMORY[0x24BDCF028]();
}

uint64_t sub_2418A8190()
{
  return MEMORY[0x24BDCF050]();
}

uint64_t sub_2418A819C()
{
  return MEMORY[0x24BDCF078]();
}

uint64_t sub_2418A81A8()
{
  return MEMORY[0x24BE456B8]();
}

uint64_t sub_2418A81B4()
{
  return MEMORY[0x24BE456C0]();
}

uint64_t sub_2418A81C0()
{
  return MEMORY[0x24BDCF0B8]();
}

uint64_t sub_2418A81CC()
{
  return MEMORY[0x24BDCF0C0]();
}

uint64_t sub_2418A81D8()
{
  return MEMORY[0x24BDCF128]();
}

uint64_t sub_2418A81E4()
{
  return MEMORY[0x24BDCF140]();
}

uint64_t sub_2418A81F0()
{
  return MEMORY[0x24BDCF160]();
}

uint64_t sub_2418A81FC()
{
  return MEMORY[0x24BDCF1A0]();
}

uint64_t sub_2418A8208()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_2418A8214()
{
  return MEMORY[0x24BDCF1C0]();
}

uint64_t sub_2418A8220()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_2418A822C()
{
  return MEMORY[0x24BDCF2D0]();
}

uint64_t sub_2418A8238()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_2418A8244()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_2418A8250()
{
  return MEMORY[0x24BDCF638]();
}

uint64_t sub_2418A825C()
{
  return MEMORY[0x24BDCF650]();
}

uint64_t sub_2418A8268()
{
  return MEMORY[0x24BEBBE88]();
}

uint64_t sub_2418A8274()
{
  return MEMORY[0x24BDCF678]();
}

uint64_t sub_2418A8280()
{
  return MEMORY[0x24BE3F730]();
}

uint64_t sub_2418A828C()
{
  return MEMORY[0x24BE3F7C8]();
}

uint64_t sub_2418A8298()
{
  return MEMORY[0x24BE456D0]();
}

uint64_t sub_2418A82A4()
{
  return MEMORY[0x24BE456D8]();
}

uint64_t sub_2418A82B0()
{
  return MEMORY[0x24BE45718]();
}

uint64_t sub_2418A82BC()
{
  return MEMORY[0x24BE45720]();
}

uint64_t sub_2418A82C8()
{
  return MEMORY[0x24BE45750]();
}

uint64_t sub_2418A82D4()
{
  return MEMORY[0x24BE45768]();
}

uint64_t sub_2418A82E0()
{
  return MEMORY[0x24BE457C8]();
}

uint64_t sub_2418A82EC()
{
  return MEMORY[0x24BE457D0]();
}

uint64_t sub_2418A82F8()
{
  return MEMORY[0x24BE457D8]();
}

uint64_t sub_2418A8304()
{
  return MEMORY[0x24BE457E0]();
}

uint64_t sub_2418A8310()
{
  return MEMORY[0x24BE457F0]();
}

uint64_t sub_2418A831C()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_2418A8328()
{
  return MEMORY[0x24BE45998]();
}

uint64_t sub_2418A8334()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2418A8340()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2418A834C()
{
  return MEMORY[0x24BEBCB20]();
}

uint64_t sub_2418A8358()
{
  return MEMORY[0x24BDB96B0]();
}

uint64_t sub_2418A8364()
{
  return MEMORY[0x24BDB96E8]();
}

uint64_t sub_2418A8370()
{
  return MEMORY[0x24BDB9808]();
}

uint64_t sub_2418A837C()
{
  return MEMORY[0x24BDB9818]();
}

uint64_t sub_2418A8388()
{
  return MEMORY[0x24BDB99F8]();
}

uint64_t sub_2418A8394()
{
  return MEMORY[0x24BDB9AE0]();
}

uint64_t sub_2418A83A0()
{
  return MEMORY[0x24BDB9B40]();
}

uint64_t sub_2418A83AC()
{
  return MEMORY[0x24BDB9B60]();
}

uint64_t sub_2418A83B8()
{
  return MEMORY[0x24BDB9C48]();
}

uint64_t sub_2418A83C4()
{
  return MEMORY[0x24BDB9C98]();
}

uint64_t sub_2418A83D0()
{
  return MEMORY[0x24BDB9D68]();
}

uint64_t sub_2418A83DC()
{
  return MEMORY[0x24BDB9D80]();
}

uint64_t sub_2418A83E8()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t sub_2418A83F4()
{
  return MEMORY[0x24BDB9EA0]();
}

uint64_t sub_2418A8400()
{
  return MEMORY[0x24BDB9EA8]();
}

uint64_t sub_2418A840C()
{
  return MEMORY[0x24BDB9EC0]();
}

uint64_t sub_2418A8418()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t sub_2418A8424()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t sub_2418A8430()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t sub_2418A843C()
{
  return MEMORY[0x24BDB9F20]();
}

uint64_t sub_2418A8448()
{
  return MEMORY[0x24BDB9F90]();
}

uint64_t sub_2418A8454()
{
  return MEMORY[0x24BDBA090]();
}

uint64_t sub_2418A8460()
{
  return MEMORY[0x24BDBA0C0]();
}

uint64_t sub_2418A846C()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t sub_2418A8478()
{
  return MEMORY[0x24BDEAE98]();
}

uint64_t sub_2418A8484()
{
  return MEMORY[0x24BDEAEB0]();
}

uint64_t sub_2418A8490()
{
  return MEMORY[0x24BDEAFE8]();
}

uint64_t sub_2418A849C()
{
  return MEMORY[0x24BDEAFF8]();
}

uint64_t sub_2418A84A8()
{
  return MEMORY[0x24BDEB040]();
}

uint64_t sub_2418A84B4()
{
  return MEMORY[0x24BDEB210]();
}

uint64_t sub_2418A84C0()
{
  return MEMORY[0x24BDEB230]();
}

uint64_t sub_2418A84CC()
{
  return MEMORY[0x24BDEB338]();
}

uint64_t sub_2418A84D8()
{
  return MEMORY[0x24BDEB3E0]();
}

uint64_t sub_2418A84E4()
{
  return MEMORY[0x24BDEB418]();
}

uint64_t sub_2418A84F0()
{
  return MEMORY[0x24BDEB448]();
}

uint64_t sub_2418A84FC()
{
  return MEMORY[0x24BDEB4A0]();
}

uint64_t sub_2418A8508()
{
  return MEMORY[0x24BDEB4C0]();
}

uint64_t sub_2418A8514()
{
  return MEMORY[0x24BDEB4D0]();
}

uint64_t sub_2418A8520()
{
  return MEMORY[0x24BDEB4F8]();
}

uint64_t sub_2418A852C()
{
  return MEMORY[0x24BDEB540]();
}

uint64_t sub_2418A8538()
{
  return MEMORY[0x24BDEB560]();
}

uint64_t sub_2418A8544()
{
  return MEMORY[0x24BDEB5B8]();
}

uint64_t sub_2418A8550()
{
  return MEMORY[0x24BDEB790]();
}

uint64_t sub_2418A855C()
{
  return MEMORY[0x24BDEB7B8]();
}

uint64_t sub_2418A8568()
{
  return MEMORY[0x24BDEB7E8]();
}

uint64_t sub_2418A8574()
{
  return MEMORY[0x24BDEB800]();
}

uint64_t sub_2418A8580()
{
  return MEMORY[0x24BDEB828]();
}

uint64_t sub_2418A858C()
{
  return MEMORY[0x24BDEB830]();
}

uint64_t sub_2418A8598()
{
  return MEMORY[0x24BDEB938]();
}

uint64_t sub_2418A85A4()
{
  return MEMORY[0x24BDEB978]();
}

uint64_t sub_2418A85B0()
{
  return MEMORY[0x24BDEB990]();
}

uint64_t sub_2418A85BC()
{
  return MEMORY[0x24BDEBCD8]();
}

uint64_t sub_2418A85C8()
{
  return MEMORY[0x24BDEBCE8]();
}

uint64_t sub_2418A85D4()
{
  return MEMORY[0x24BDEBCF0]();
}

uint64_t sub_2418A85E0()
{
  return MEMORY[0x24BDEBD00]();
}

uint64_t sub_2418A85EC()
{
  return MEMORY[0x24BDEBDE0]();
}

uint64_t sub_2418A85F8()
{
  return MEMORY[0x24BDEBDF0]();
}

uint64_t sub_2418A8604()
{
  return MEMORY[0x24BDEBE00]();
}

uint64_t sub_2418A8610()
{
  return MEMORY[0x24BDEBE30]();
}

uint64_t sub_2418A861C()
{
  return MEMORY[0x24BDEBED0]();
}

uint64_t sub_2418A8628()
{
  return MEMORY[0x24BDEBF88]();
}

uint64_t sub_2418A8634()
{
  return MEMORY[0x24BDEC000]();
}

uint64_t sub_2418A8640()
{
  return MEMORY[0x24BDEC018]();
}

uint64_t sub_2418A864C()
{
  return MEMORY[0x24BDEC030]();
}

uint64_t sub_2418A8658()
{
  return MEMORY[0x24BDEC038]();
}

uint64_t sub_2418A8664()
{
  return MEMORY[0x24BDEC110]();
}

uint64_t sub_2418A8670()
{
  return MEMORY[0x24BDEC120]();
}

uint64_t sub_2418A867C()
{
  return MEMORY[0x24BDEC138]();
}

uint64_t sub_2418A8688()
{
  return MEMORY[0x24BDEC148]();
}

uint64_t sub_2418A8694()
{
  return MEMORY[0x24BDEC238]();
}

uint64_t sub_2418A86A0()
{
  return MEMORY[0x24BDEC248]();
}

uint64_t sub_2418A86AC()
{
  return MEMORY[0x24BDEC260]();
}

uint64_t sub_2418A86B8()
{
  return MEMORY[0x24BDEC268]();
}

uint64_t sub_2418A86C4()
{
  return MEMORY[0x24BDEC280]();
}

uint64_t sub_2418A86D0()
{
  return MEMORY[0x24BDEC348]();
}

uint64_t sub_2418A86DC()
{
  return MEMORY[0x24BDEC358]();
}

uint64_t sub_2418A86E8()
{
  return MEMORY[0x24BDEC530]();
}

uint64_t sub_2418A86F4()
{
  return MEMORY[0x24BDEC548]();
}

uint64_t sub_2418A8700()
{
  return MEMORY[0x24BDEC5A0]();
}

uint64_t sub_2418A870C()
{
  return MEMORY[0x24BDEC648]();
}

uint64_t sub_2418A8718()
{
  return MEMORY[0x24BDEC6E0]();
}

uint64_t sub_2418A8724()
{
  return MEMORY[0x24BDEC778]();
}

uint64_t sub_2418A8730()
{
  return MEMORY[0x24BDEC7A8]();
}

uint64_t sub_2418A873C()
{
  return MEMORY[0x24BDEC7B0]();
}

uint64_t sub_2418A8748()
{
  return MEMORY[0x24BDEC7E8]();
}

uint64_t sub_2418A8754()
{
  return MEMORY[0x24BDEC958]();
}

uint64_t sub_2418A8760()
{
  return MEMORY[0x24BDEC998]();
}

uint64_t sub_2418A876C()
{
  return MEMORY[0x24BDEC9A0]();
}

uint64_t sub_2418A8778()
{
  return MEMORY[0x24BDEC9B0]();
}

uint64_t sub_2418A8784()
{
  return MEMORY[0x24BDECB10]();
}

uint64_t sub_2418A8790()
{
  return MEMORY[0x24BDECE28]();
}

uint64_t sub_2418A879C()
{
  return MEMORY[0x24BDECE88]();
}

uint64_t sub_2418A87A8()
{
  return MEMORY[0x24BDECEF8]();
}

uint64_t sub_2418A87B4()
{
  return MEMORY[0x24BDECF50]();
}

uint64_t sub_2418A87C0()
{
  return MEMORY[0x24BDED128]();
}

uint64_t sub_2418A87CC()
{
  return MEMORY[0x24BDED130]();
}

uint64_t sub_2418A87D8()
{
  return MEMORY[0x24BDED200]();
}

uint64_t sub_2418A87E4()
{
  return MEMORY[0x24BDED248]();
}

uint64_t sub_2418A87F0()
{
  return MEMORY[0x24BDED290]();
}

uint64_t sub_2418A87FC()
{
  return MEMORY[0x24BDED2D0]();
}

uint64_t sub_2418A8808()
{
  return MEMORY[0x24BDED320]();
}

uint64_t sub_2418A8814()
{
  return MEMORY[0x24BDED330]();
}

uint64_t sub_2418A8820()
{
  return MEMORY[0x24BDED338]();
}

uint64_t sub_2418A882C()
{
  return MEMORY[0x24BDED3B0]();
}

uint64_t sub_2418A8838()
{
  return MEMORY[0x24BDED408]();
}

uint64_t sub_2418A8844()
{
  return MEMORY[0x24BDED420]();
}

uint64_t sub_2418A8850()
{
  return MEMORY[0x24BDED498]();
}

uint64_t sub_2418A885C()
{
  return MEMORY[0x24BDED558]();
}

uint64_t sub_2418A8868()
{
  return MEMORY[0x24BDED718]();
}

uint64_t sub_2418A8874()
{
  return MEMORY[0x24BDED730]();
}

uint64_t sub_2418A8880()
{
  return MEMORY[0x24BDED738]();
}

uint64_t sub_2418A888C()
{
  return MEMORY[0x24BDED758]();
}

uint64_t sub_2418A8898()
{
  return MEMORY[0x24BDED860]();
}

uint64_t sub_2418A88A4()
{
  return MEMORY[0x24BDED868]();
}

uint64_t sub_2418A88B0()
{
  return MEMORY[0x24BDED8E0]();
}

uint64_t sub_2418A88BC()
{
  return MEMORY[0x24BDED998]();
}

uint64_t sub_2418A88C8()
{
  return MEMORY[0x24BDEDA48]();
}

uint64_t sub_2418A88D4()
{
  return MEMORY[0x24BDEDB60]();
}

uint64_t sub_2418A88E0()
{
  return MEMORY[0x24BDEDBA8]();
}

uint64_t sub_2418A88EC()
{
  return MEMORY[0x24BDEDBF0]();
}

uint64_t sub_2418A88F8()
{
  return MEMORY[0x24BDEDC68]();
}

uint64_t sub_2418A8904()
{
  return MEMORY[0x24BDEDC80]();
}

uint64_t sub_2418A8910()
{
  return MEMORY[0x24BDEDCA8]();
}

uint64_t sub_2418A891C()
{
  return MEMORY[0x24BDEDDD0]();
}

uint64_t sub_2418A8928()
{
  return MEMORY[0x24BDEDDD8]();
}

uint64_t sub_2418A8934()
{
  return MEMORY[0x24BDEDE90]();
}

uint64_t sub_2418A8940()
{
  return MEMORY[0x24BDEDE98]();
}

uint64_t sub_2418A894C()
{
  return MEMORY[0x24BDEDEE8]();
}

uint64_t sub_2418A8958()
{
  return MEMORY[0x24BDEDEF8]();
}

uint64_t sub_2418A8964()
{
  return MEMORY[0x24BDEDF08]();
}

uint64_t sub_2418A8970()
{
  return MEMORY[0x24BDEDF68]();
}

uint64_t sub_2418A897C()
{
  return MEMORY[0x24BDEDF70]();
}

uint64_t sub_2418A8988()
{
  return MEMORY[0x24BDEDF90]();
}

uint64_t sub_2418A8994()
{
  return MEMORY[0x24BDEDF98]();
}

uint64_t sub_2418A89A0()
{
  return MEMORY[0x24BDEE020]();
}

uint64_t sub_2418A89AC()
{
  return MEMORY[0x24BDEE028]();
}

uint64_t sub_2418A89B8()
{
  return MEMORY[0x24BDEE038]();
}

uint64_t sub_2418A89C4()
{
  return MEMORY[0x24BDEE048]();
}

uint64_t sub_2418A89D0()
{
  return MEMORY[0x24BDEE070]();
}

uint64_t sub_2418A89DC()
{
  return MEMORY[0x24BDEE080]();
}

uint64_t sub_2418A89E8()
{
  return MEMORY[0x24BDEE100]();
}

uint64_t sub_2418A89F4()
{
  return MEMORY[0x24BDEE108]();
}

uint64_t sub_2418A8A00()
{
  return MEMORY[0x24BDEE138]();
}

uint64_t sub_2418A8A0C()
{
  return MEMORY[0x24BDEE190]();
}

uint64_t sub_2418A8A18()
{
  return MEMORY[0x24BDEE198]();
}

uint64_t sub_2418A8A24()
{
  return MEMORY[0x24BDEE1D8]();
}

uint64_t sub_2418A8A30()
{
  return MEMORY[0x24BDEE1E0]();
}

uint64_t sub_2418A8A3C()
{
  return MEMORY[0x24BDEE288]();
}

uint64_t sub_2418A8A48()
{
  return MEMORY[0x24BDEE290]();
}

uint64_t sub_2418A8A54()
{
  return MEMORY[0x24BDEE2E0]();
}

uint64_t sub_2418A8A60()
{
  return MEMORY[0x24BDEE390]();
}

uint64_t sub_2418A8A6C()
{
  return MEMORY[0x24BDEE3A0]();
}

uint64_t sub_2418A8A78()
{
  return MEMORY[0x24BDEE3B0]();
}

uint64_t sub_2418A8A84()
{
  return MEMORY[0x24BDEE3B8]();
}

uint64_t sub_2418A8A90()
{
  return MEMORY[0x24BDEE3F0]();
}

uint64_t sub_2418A8A9C()
{
  return MEMORY[0x24BDEE428]();
}

uint64_t sub_2418A8AA8()
{
  return MEMORY[0x24BDEE430]();
}

uint64_t sub_2418A8AB4()
{
  return MEMORY[0x24BDEE438]();
}

uint64_t sub_2418A8AC0()
{
  return MEMORY[0x24BDEE448]();
}

uint64_t sub_2418A8ACC()
{
  return MEMORY[0x24BDEE468]();
}

uint64_t sub_2418A8AD8()
{
  return MEMORY[0x24BDEE478]();
}

uint64_t sub_2418A8AE4()
{
  return MEMORY[0x24BDEE490]();
}

uint64_t sub_2418A8AF0()
{
  return MEMORY[0x24BDEE4A0]();
}

uint64_t sub_2418A8AFC()
{
  return MEMORY[0x24BDEE4C0]();
}

uint64_t sub_2418A8B08()
{
  return MEMORY[0x24BDEE4D8]();
}

uint64_t sub_2418A8B14()
{
  return MEMORY[0x24BDEE4E0]();
}

uint64_t sub_2418A8B20()
{
  return MEMORY[0x24BDEE4F8]();
}

uint64_t sub_2418A8B2C()
{
  return MEMORY[0x24BDEE530]();
}

uint64_t sub_2418A8B38()
{
  return MEMORY[0x24BDEE538]();
}

uint64_t sub_2418A8B44()
{
  return MEMORY[0x24BDEE608]();
}

uint64_t sub_2418A8B50()
{
  return MEMORY[0x24BDEE628]();
}

uint64_t sub_2418A8B5C()
{
  return MEMORY[0x24BDEE630]();
}

uint64_t sub_2418A8B68()
{
  return MEMORY[0x24BDEE700]();
}

uint64_t sub_2418A8B74()
{
  return MEMORY[0x24BDEE718]();
}

uint64_t sub_2418A8B80()
{
  return MEMORY[0x24BDEE728]();
}

uint64_t sub_2418A8B8C()
{
  return MEMORY[0x24BDEE730]();
}

uint64_t sub_2418A8B98()
{
  return MEMORY[0x24BDEEA18]();
}

uint64_t sub_2418A8BA4()
{
  return MEMORY[0x24BDEEA28]();
}

uint64_t sub_2418A8BB0()
{
  return MEMORY[0x24BDEEA30]();
}

uint64_t sub_2418A8BBC()
{
  return MEMORY[0x24BDEEA40]();
}

uint64_t sub_2418A8BC8()
{
  return MEMORY[0x24BDEEA50]();
}

uint64_t sub_2418A8BD4()
{
  return MEMORY[0x24BDEEA60]();
}

uint64_t sub_2418A8BE0()
{
  return MEMORY[0x24BDEEB88]();
}

uint64_t sub_2418A8BEC()
{
  return MEMORY[0x24BDEEBF0]();
}

uint64_t sub_2418A8BF8()
{
  return MEMORY[0x24BDEEC70]();
}

uint64_t sub_2418A8C04()
{
  return MEMORY[0x24BDEEC90]();
}

uint64_t sub_2418A8C10()
{
  return MEMORY[0x24BDEECF8]();
}

uint64_t sub_2418A8C1C()
{
  return MEMORY[0x24BDEED60]();
}

uint64_t sub_2418A8C28()
{
  return MEMORY[0x24BDEED88]();
}

uint64_t sub_2418A8C34()
{
  return MEMORY[0x24BDEEDC0]();
}

uint64_t sub_2418A8C40()
{
  return MEMORY[0x24BDEEDC8]();
}

uint64_t sub_2418A8C4C()
{
  return MEMORY[0x24BDEEEA0]();
}

uint64_t sub_2418A8C58()
{
  return MEMORY[0x24BDEEF60]();
}

uint64_t sub_2418A8C64()
{
  return MEMORY[0x24BDEEF78]();
}

uint64_t sub_2418A8C70()
{
  return MEMORY[0x24BDEF168]();
}

uint64_t sub_2418A8C7C()
{
  return MEMORY[0x24BDEF1D0]();
}

uint64_t sub_2418A8C88()
{
  return MEMORY[0x24BDEF1F8]();
}

uint64_t sub_2418A8C94()
{
  return MEMORY[0x24BDEF228]();
}

uint64_t sub_2418A8CA0()
{
  return MEMORY[0x24BDEF238]();
}

uint64_t sub_2418A8CAC()
{
  return MEMORY[0x24BDEF248]();
}

uint64_t sub_2418A8CB8()
{
  return MEMORY[0x24BDEF260]();
}

uint64_t sub_2418A8CC4()
{
  return MEMORY[0x24BDEF270]();
}

uint64_t sub_2418A8CD0()
{
  return MEMORY[0x24BDEF278]();
}

uint64_t sub_2418A8CDC()
{
  return MEMORY[0x24BDEF288]();
}

uint64_t sub_2418A8CE8()
{
  return MEMORY[0x24BDEF298]();
}

uint64_t sub_2418A8CF4()
{
  return MEMORY[0x24BDEF2A8]();
}

uint64_t sub_2418A8D00()
{
  return MEMORY[0x24BDEF2C0]();
}

uint64_t sub_2418A8D0C()
{
  return MEMORY[0x24BDEF2C8]();
}

uint64_t sub_2418A8D18()
{
  return MEMORY[0x24BDEF358]();
}

uint64_t sub_2418A8D24()
{
  return MEMORY[0x24BDEF3A0]();
}

uint64_t sub_2418A8D30()
{
  return MEMORY[0x24BDEF3B8]();
}

uint64_t sub_2418A8D3C()
{
  return MEMORY[0x24BDEF478]();
}

uint64_t sub_2418A8D48()
{
  return MEMORY[0x24BDEF488]();
}

uint64_t sub_2418A8D54()
{
  return MEMORY[0x24BDEF540]();
}

uint64_t sub_2418A8D60()
{
  return MEMORY[0x24BDEF560]();
}

uint64_t sub_2418A8D6C()
{
  return MEMORY[0x24BDEF6D8]();
}

uint64_t sub_2418A8D78()
{
  return MEMORY[0x24BDEF6E0]();
}

uint64_t sub_2418A8D84()
{
  return MEMORY[0x24BDEF6F0]();
}

uint64_t sub_2418A8D90()
{
  return MEMORY[0x24BDEF700]();
}

uint64_t sub_2418A8D9C()
{
  return MEMORY[0x24BDEF710]();
}

uint64_t sub_2418A8DA8()
{
  return MEMORY[0x24BDEF718]();
}

uint64_t sub_2418A8DB4()
{
  return MEMORY[0x24BDEF740]();
}

uint64_t sub_2418A8DC0()
{
  return MEMORY[0x24BDEF758]();
}

uint64_t sub_2418A8DCC()
{
  return MEMORY[0x24BDEF760]();
}

uint64_t sub_2418A8DD8()
{
  return MEMORY[0x24BDEF770]();
}

uint64_t sub_2418A8DE4()
{
  return MEMORY[0x24BDEF818]();
}

uint64_t sub_2418A8DF0()
{
  return MEMORY[0x24BDEF960]();
}

uint64_t sub_2418A8DFC()
{
  return MEMORY[0x24BDEF968]();
}

uint64_t sub_2418A8E08()
{
  return MEMORY[0x24BDEF980]();
}

uint64_t sub_2418A8E14()
{
  return MEMORY[0x24BDEFA58]();
}

uint64_t sub_2418A8E20()
{
  return MEMORY[0x24BDEFA78]();
}

uint64_t sub_2418A8E2C()
{
  return MEMORY[0x24BDEFA98]();
}

uint64_t sub_2418A8E38()
{
  return MEMORY[0x24BDEFAA0]();
}

uint64_t sub_2418A8E44()
{
  return MEMORY[0x24BDEFAB8]();
}

uint64_t sub_2418A8E50()
{
  return MEMORY[0x24BDEFB28]();
}

uint64_t sub_2418A8E5C()
{
  return MEMORY[0x24BDEFB50]();
}

uint64_t sub_2418A8E68()
{
  return MEMORY[0x24BDEFCA8]();
}

uint64_t sub_2418A8E74()
{
  return MEMORY[0x24BDEFCC8]();
}

uint64_t sub_2418A8E80()
{
  return MEMORY[0x24BDEFDB0]();
}

uint64_t sub_2418A8E8C()
{
  return MEMORY[0x24BDEFE58]();
}

uint64_t sub_2418A8E98()
{
  return MEMORY[0x24BDEFE68]();
}

uint64_t sub_2418A8EA4()
{
  return MEMORY[0x24BDEFE80]();
}

uint64_t sub_2418A8EB0()
{
  return MEMORY[0x24BDEFEF8]();
}

uint64_t sub_2418A8EBC()
{
  return MEMORY[0x24BDF0138]();
}

uint64_t sub_2418A8EC8()
{
  return MEMORY[0x24BDF0150]();
}

uint64_t sub_2418A8ED4()
{
  return MEMORY[0x24BDF02D0]();
}

uint64_t sub_2418A8EE0()
{
  return MEMORY[0x24BDF02E8]();
}

uint64_t sub_2418A8EEC()
{
  return MEMORY[0x24BDF0320]();
}

uint64_t sub_2418A8EF8()
{
  return MEMORY[0x24BDF0328]();
}

uint64_t sub_2418A8F04()
{
  return MEMORY[0x24BDF03F0]();
}

uint64_t sub_2418A8F10()
{
  return MEMORY[0x24BDF0440]();
}

uint64_t sub_2418A8F1C()
{
  return MEMORY[0x24BDF0468]();
}

uint64_t sub_2418A8F28()
{
  return MEMORY[0x24BDF05F0]();
}

uint64_t sub_2418A8F34()
{
  return MEMORY[0x24BDF05F8]();
}

uint64_t sub_2418A8F40()
{
  return MEMORY[0x24BDF0600]();
}

uint64_t sub_2418A8F4C()
{
  return MEMORY[0x24BDF06F8]();
}

uint64_t sub_2418A8F58()
{
  return MEMORY[0x24BDF0998]();
}

uint64_t sub_2418A8F64()
{
  return MEMORY[0x24BDF0A10]();
}

uint64_t sub_2418A8F70()
{
  return MEMORY[0x24BDF0A18]();
}

uint64_t sub_2418A8F7C()
{
  return MEMORY[0x24BDF0A20]();
}

uint64_t sub_2418A8F88()
{
  return MEMORY[0x24BDF0B78]();
}

uint64_t sub_2418A8F94()
{
  return MEMORY[0x24BDF0C40]();
}

uint64_t sub_2418A8FA0()
{
  return MEMORY[0x24BDF0C48]();
}

uint64_t sub_2418A8FAC()
{
  return MEMORY[0x24BDF0C58]();
}

uint64_t sub_2418A8FB8()
{
  return MEMORY[0x24BDF0C98]();
}

uint64_t sub_2418A8FC4()
{
  return MEMORY[0x24BDF0CB0]();
}

uint64_t sub_2418A8FD0()
{
  return MEMORY[0x24BDF0D98]();
}

uint64_t sub_2418A8FDC()
{
  return MEMORY[0x24BDF0DA8]();
}

uint64_t sub_2418A8FE8()
{
  return MEMORY[0x24BDF0DD8]();
}

uint64_t sub_2418A8FF4()
{
  return MEMORY[0x24BDF0DE0]();
}

uint64_t sub_2418A9000()
{
  return MEMORY[0x24BDF0DE8]();
}

uint64_t sub_2418A900C()
{
  return MEMORY[0x24BDF0DF0]();
}

uint64_t sub_2418A9018()
{
  return MEMORY[0x24BDF0DF8]();
}

uint64_t sub_2418A9024()
{
  return MEMORY[0x24BDF0EC0]();
}

uint64_t sub_2418A9030()
{
  return MEMORY[0x24BDF0ED0]();
}

uint64_t sub_2418A903C()
{
  return MEMORY[0x24BDF0EE0]();
}

uint64_t sub_2418A9048()
{
  return MEMORY[0x24BDF0EF0]();
}

uint64_t sub_2418A9054()
{
  return MEMORY[0x24BDF0F00]();
}

uint64_t sub_2418A9060()
{
  return MEMORY[0x24BDF0F10]();
}

uint64_t sub_2418A906C()
{
  return MEMORY[0x24BDF0F18]();
}

uint64_t sub_2418A9078()
{
  return MEMORY[0x24BDF0F28]();
}

uint64_t sub_2418A9084()
{
  return MEMORY[0x24BDF0F38]();
}

uint64_t sub_2418A9090()
{
  return MEMORY[0x24BDF1008]();
}

uint64_t sub_2418A909C()
{
  return MEMORY[0x24BDF1088]();
}

uint64_t sub_2418A90A8()
{
  return MEMORY[0x24BDF1430]();
}

uint64_t sub_2418A90B4()
{
  return MEMORY[0x24BDF1450]();
}

uint64_t sub_2418A90C0()
{
  return MEMORY[0x24BDF1468]();
}

uint64_t sub_2418A90CC()
{
  return MEMORY[0x24BDF14A0]();
}

uint64_t sub_2418A90D8()
{
  return MEMORY[0x24BDF14A8]();
}

uint64_t sub_2418A90E4()
{
  return MEMORY[0x24BDF14C0]();
}

uint64_t sub_2418A90F0()
{
  return MEMORY[0x24BDF14C8]();
}

uint64_t sub_2418A90FC()
{
  return MEMORY[0x24BDF14E0]();
}

uint64_t sub_2418A9108()
{
  return MEMORY[0x24BDF14F8]();
}

uint64_t sub_2418A9114()
{
  return MEMORY[0x24BDF1510]();
}

uint64_t sub_2418A9120()
{
  return MEMORY[0x24BDF1560]();
}

uint64_t sub_2418A912C()
{
  return MEMORY[0x24BDF1580]();
}

uint64_t sub_2418A9138()
{
  return MEMORY[0x24BDF15E8]();
}

uint64_t sub_2418A9144()
{
  return MEMORY[0x24BDF15F8]();
}

uint64_t sub_2418A9150()
{
  return MEMORY[0x24BDF1600]();
}

uint64_t sub_2418A915C()
{
  return MEMORY[0x24BDF1608]();
}

uint64_t sub_2418A9168()
{
  return MEMORY[0x24BDF1640]();
}

uint64_t sub_2418A9174()
{
  return MEMORY[0x24BDF1678]();
}

uint64_t sub_2418A9180()
{
  return MEMORY[0x24BDF16D8]();
}

uint64_t sub_2418A918C()
{
  return MEMORY[0x24BDF16E8]();
}

uint64_t sub_2418A9198()
{
  return MEMORY[0x24BDF1700]();
}

uint64_t sub_2418A91A4()
{
  return MEMORY[0x24BDF1750]();
}

uint64_t sub_2418A91B0()
{
  return MEMORY[0x24BDF1768]();
}

uint64_t sub_2418A91BC()
{
  return MEMORY[0x24BDF1778]();
}

uint64_t sub_2418A91C8()
{
  return MEMORY[0x24BDF1790]();
}

uint64_t sub_2418A91D4()
{
  return MEMORY[0x24BDF1798]();
}

uint64_t sub_2418A91E0()
{
  return MEMORY[0x24BDF17D8]();
}

uint64_t sub_2418A91EC()
{
  return MEMORY[0x24BDF17F8]();
}

uint64_t sub_2418A91F8()
{
  return MEMORY[0x24BDF1818]();
}

uint64_t sub_2418A9204()
{
  return MEMORY[0x24BDF1820]();
}

uint64_t sub_2418A9210()
{
  return MEMORY[0x24BDF1828]();
}

uint64_t sub_2418A921C()
{
  return MEMORY[0x24BDF1840]();
}

uint64_t sub_2418A9228()
{
  return MEMORY[0x24BDF1900]();
}

uint64_t sub_2418A9234()
{
  return MEMORY[0x24BDF19E8]();
}

uint64_t sub_2418A9240()
{
  return MEMORY[0x24BDF1A00]();
}

uint64_t sub_2418A924C()
{
  return MEMORY[0x24BDF1A18]();
}

uint64_t sub_2418A9258()
{
  return MEMORY[0x24BDF1BE8]();
}

uint64_t sub_2418A9264()
{
  return MEMORY[0x24BDF1D08]();
}

uint64_t sub_2418A9270()
{
  return MEMORY[0x24BDF1D18]();
}

uint64_t sub_2418A927C()
{
  return MEMORY[0x24BDF1D98]();
}

uint64_t sub_2418A9288()
{
  return MEMORY[0x24BDF1DB8]();
}

uint64_t sub_2418A9294()
{
  return MEMORY[0x24BDF1DC8]();
}

uint64_t sub_2418A92A0()
{
  return MEMORY[0x24BDF1ED8]();
}

uint64_t sub_2418A92AC()
{
  return MEMORY[0x24BDF1EE8]();
}

uint64_t sub_2418A92B8()
{
  return MEMORY[0x24BDF1FB0]();
}

uint64_t sub_2418A92C4()
{
  return MEMORY[0x24BDF1FC0]();
}

uint64_t sub_2418A92D0()
{
  return MEMORY[0x24BDF1FF0]();
}

uint64_t sub_2418A92DC()
{
  return MEMORY[0x24BDF2088]();
}

uint64_t sub_2418A92E8()
{
  return MEMORY[0x24BDF20A0]();
}

uint64_t sub_2418A92F4()
{
  return MEMORY[0x24BDF20E8]();
}

uint64_t sub_2418A9300()
{
  return MEMORY[0x24BDF2138]();
}

uint64_t sub_2418A930C()
{
  return MEMORY[0x24BDF22B0]();
}

uint64_t sub_2418A9318()
{
  return MEMORY[0x24BDF22C8]();
}

uint64_t sub_2418A9324()
{
  return MEMORY[0x24BDF2340]();
}

uint64_t sub_2418A9330()
{
  return MEMORY[0x24BDF2430]();
}

uint64_t sub_2418A933C()
{
  return MEMORY[0x24BDF2440]();
}

uint64_t sub_2418A9348()
{
  return MEMORY[0x24BDF2518]();
}

uint64_t sub_2418A9354()
{
  return MEMORY[0x24BDF2548]();
}

uint64_t sub_2418A9360()
{
  return MEMORY[0x24BDF2650]();
}

uint64_t sub_2418A936C()
{
  return MEMORY[0x24BDF2698]();
}

uint64_t sub_2418A9378()
{
  return MEMORY[0x24BDF27B8]();
}

uint64_t sub_2418A9384()
{
  return MEMORY[0x24BDF27D0]();
}

uint64_t sub_2418A9390()
{
  return MEMORY[0x24BDF27F0]();
}

uint64_t sub_2418A939C()
{
  return MEMORY[0x24BDF2890]();
}

uint64_t sub_2418A93A8()
{
  return MEMORY[0x24BDF28B8]();
}

uint64_t sub_2418A93B4()
{
  return MEMORY[0x24BDF2988]();
}

uint64_t sub_2418A93C0()
{
  return MEMORY[0x24BDF29C0]();
}

uint64_t sub_2418A93CC()
{
  return MEMORY[0x24BDF2A58]();
}

uint64_t sub_2418A93D8()
{
  return MEMORY[0x24BDF2A98]();
}

uint64_t sub_2418A93E4()
{
  return MEMORY[0x24BDF2B00]();
}

uint64_t sub_2418A93F0()
{
  return MEMORY[0x24BDF2B40]();
}

uint64_t sub_2418A93FC()
{
  return MEMORY[0x24BDF2B50]();
}

uint64_t sub_2418A9408()
{
  return MEMORY[0x24BDF2B70]();
}

uint64_t sub_2418A9414()
{
  return MEMORY[0x24BDF2DB8]();
}

uint64_t sub_2418A9420()
{
  return MEMORY[0x24BDF2E98]();
}

uint64_t sub_2418A942C()
{
  return MEMORY[0x24BDF2F08]();
}

uint64_t sub_2418A9438()
{
  return MEMORY[0x24BDF3060]();
}

uint64_t sub_2418A9444()
{
  return MEMORY[0x24BDF30D8]();
}

uint64_t sub_2418A9450()
{
  return MEMORY[0x24BDF3178]();
}

uint64_t sub_2418A945C()
{
  return MEMORY[0x24BDF31C8]();
}

uint64_t sub_2418A9468()
{
  return MEMORY[0x24BDF31D8]();
}

uint64_t sub_2418A9474()
{
  return MEMORY[0x24BDF32E8]();
}

uint64_t sub_2418A9480()
{
  return MEMORY[0x24BDF3380]();
}

uint64_t sub_2418A948C()
{
  return MEMORY[0x24BDF3390]();
}

uint64_t sub_2418A9498()
{
  return MEMORY[0x24BDF3470]();
}

uint64_t sub_2418A94A4()
{
  return MEMORY[0x24BDF34E8]();
}

uint64_t sub_2418A94B0()
{
  return MEMORY[0x24BDF3510]();
}

uint64_t sub_2418A94BC()
{
  return MEMORY[0x24BDF3628]();
}

uint64_t sub_2418A94C8()
{
  return MEMORY[0x24BDF3630]();
}

uint64_t sub_2418A94D4()
{
  return MEMORY[0x24BDF3640]();
}

uint64_t sub_2418A94E0()
{
  return MEMORY[0x24BDF3658]();
}

uint64_t sub_2418A94EC()
{
  return MEMORY[0x24BDF3738]();
}

uint64_t sub_2418A94F8()
{
  return MEMORY[0x24BDF3768]();
}

uint64_t sub_2418A9504()
{
  return MEMORY[0x24BDF37B0]();
}

uint64_t sub_2418A9510()
{
  return MEMORY[0x24BDF37E0]();
}

uint64_t sub_2418A951C()
{
  return MEMORY[0x24BDF37F0]();
}

uint64_t sub_2418A9528()
{
  return MEMORY[0x24BDF3840]();
}

uint64_t sub_2418A9534()
{
  return MEMORY[0x24BDF3880]();
}

uint64_t sub_2418A9540()
{
  return MEMORY[0x24BDF38E0]();
}

uint64_t sub_2418A954C()
{
  return MEMORY[0x24BDF3A00]();
}

uint64_t sub_2418A9558()
{
  return MEMORY[0x24BDF3A68]();
}

uint64_t sub_2418A9564()
{
  return MEMORY[0x24BDF3B30]();
}

uint64_t sub_2418A9570()
{
  return MEMORY[0x24BDF3B40]();
}

uint64_t sub_2418A957C()
{
  return MEMORY[0x24BDF3B60]();
}

uint64_t sub_2418A9588()
{
  return MEMORY[0x24BDF3B70]();
}

uint64_t sub_2418A9594()
{
  return MEMORY[0x24BDF3BD8]();
}

uint64_t sub_2418A95A0()
{
  return MEMORY[0x24BDF3BE0]();
}

uint64_t sub_2418A95AC()
{
  return MEMORY[0x24BDF3BE8]();
}

uint64_t sub_2418A95B8()
{
  return MEMORY[0x24BDF3C40]();
}

uint64_t sub_2418A95C4()
{
  return MEMORY[0x24BDF3C50]();
}

uint64_t sub_2418A95D0()
{
  return MEMORY[0x24BDF3C78]();
}

uint64_t sub_2418A95DC()
{
  return MEMORY[0x24BDF3C90]();
}

uint64_t sub_2418A95E8()
{
  return MEMORY[0x24BDF3CB8]();
}

uint64_t sub_2418A95F4()
{
  return MEMORY[0x24BDF3CD0]();
}

uint64_t sub_2418A9600()
{
  return MEMORY[0x24BDF3CF0]();
}

uint64_t sub_2418A960C()
{
  return MEMORY[0x24BDF3D10]();
}

uint64_t sub_2418A9618()
{
  return MEMORY[0x24BDF3D30]();
}

uint64_t sub_2418A9624()
{
  return MEMORY[0x24BDF3D78]();
}

uint64_t sub_2418A9630()
{
  return MEMORY[0x24BDF3D88]();
}

uint64_t sub_2418A963C()
{
  return MEMORY[0x24BDF3E08]();
}

uint64_t sub_2418A9648()
{
  return MEMORY[0x24BDF3E70]();
}

uint64_t sub_2418A9654()
{
  return MEMORY[0x24BDF3EB0]();
}

uint64_t sub_2418A9660()
{
  return MEMORY[0x24BDF3F80]();
}

uint64_t sub_2418A966C()
{
  return MEMORY[0x24BDF3FE8]();
}

uint64_t sub_2418A9678()
{
  return MEMORY[0x24BDF4048]();
}

uint64_t sub_2418A9684()
{
  return MEMORY[0x24BDF40C0]();
}

uint64_t sub_2418A9690()
{
  return MEMORY[0x24BDF40D8]();
}

uint64_t sub_2418A969C()
{
  return MEMORY[0x24BDF4130]();
}

uint64_t sub_2418A96A8()
{
  return MEMORY[0x24BDF4150]();
}

uint64_t sub_2418A96B4()
{
  return MEMORY[0x24BDF4188]();
}

uint64_t sub_2418A96C0()
{
  return MEMORY[0x24BDF4280]();
}

uint64_t sub_2418A96CC()
{
  return MEMORY[0x24BDF4290]();
}

uint64_t sub_2418A96D8()
{
  return MEMORY[0x24BDF42A8]();
}

uint64_t sub_2418A96E4()
{
  return MEMORY[0x24BDF42B0]();
}

uint64_t sub_2418A96F0()
{
  return MEMORY[0x24BDF42C0]();
}

uint64_t sub_2418A96FC()
{
  return MEMORY[0x24BDF4300]();
}

uint64_t sub_2418A9708()
{
  return MEMORY[0x24BDF4340]();
}

uint64_t sub_2418A9714()
{
  return MEMORY[0x24BDF4380]();
}

uint64_t sub_2418A9720()
{
  return MEMORY[0x24BDF4398]();
}

uint64_t sub_2418A972C()
{
  return MEMORY[0x24BDF4480]();
}

uint64_t sub_2418A9738()
{
  return MEMORY[0x24BDF44B0]();
}

uint64_t sub_2418A9744()
{
  return MEMORY[0x24BDF44E0]();
}

uint64_t sub_2418A9750()
{
  return MEMORY[0x24BDF44E8]();
}

uint64_t sub_2418A975C()
{
  return MEMORY[0x24BDF44F0]();
}

uint64_t sub_2418A9768()
{
  return MEMORY[0x24BDF4508]();
}

uint64_t sub_2418A9774()
{
  return MEMORY[0x24BDF4510]();
}

uint64_t sub_2418A9780()
{
  return MEMORY[0x24BDF4550]();
}

uint64_t sub_2418A978C()
{
  return MEMORY[0x24BDF4558]();
}

uint64_t sub_2418A9798()
{
  return MEMORY[0x24BDF45D8]();
}

uint64_t sub_2418A97A4()
{
  return MEMORY[0x24BDF45E8]();
}

uint64_t sub_2418A97B0()
{
  return MEMORY[0x24BDF4650]();
}

uint64_t sub_2418A97BC()
{
  return MEMORY[0x24BDF4660]();
}

uint64_t sub_2418A97C8()
{
  return MEMORY[0x24BDF4678]();
}

uint64_t sub_2418A97D4()
{
  return MEMORY[0x24BDF46A8]();
}

uint64_t sub_2418A97E0()
{
  return MEMORY[0x24BDF46B0]();
}

uint64_t sub_2418A97EC()
{
  return MEMORY[0x24BDF46E0]();
}

uint64_t sub_2418A97F8()
{
  return MEMORY[0x24BDF4730]();
}

uint64_t sub_2418A9804()
{
  return MEMORY[0x24BDF47B0]();
}

uint64_t sub_2418A9810()
{
  return MEMORY[0x24BDF47B8]();
}

uint64_t sub_2418A981C()
{
  return MEMORY[0x24BDF47C8]();
}

uint64_t sub_2418A9828()
{
  return MEMORY[0x24BDF47E0]();
}

uint64_t sub_2418A9834()
{
  return MEMORY[0x24BDF47F8]();
}

uint64_t sub_2418A9840()
{
  return MEMORY[0x24BDF4808]();
}

uint64_t sub_2418A984C()
{
  return MEMORY[0x24BDF4870]();
}

uint64_t sub_2418A9858()
{
  return MEMORY[0x24BDF4888]();
}

uint64_t sub_2418A9864()
{
  return MEMORY[0x24BDF48E8]();
}

uint64_t sub_2418A9870()
{
  return MEMORY[0x24BDF4908]();
}

uint64_t sub_2418A987C()
{
  return MEMORY[0x24BDF4918]();
}

uint64_t sub_2418A9888()
{
  return MEMORY[0x24BDF49A0]();
}

uint64_t sub_2418A9894()
{
  return MEMORY[0x24BDF49B8]();
}

uint64_t sub_2418A98A0()
{
  return MEMORY[0x24BDF49C8]();
}

uint64_t sub_2418A98AC()
{
  return MEMORY[0x24BDF4A28]();
}

uint64_t sub_2418A98B8()
{
  return MEMORY[0x24BDF4A40]();
}

uint64_t sub_2418A98C4()
{
  return MEMORY[0x24BDF4AA0]();
}

uint64_t sub_2418A98D0()
{
  return MEMORY[0x24BDF4AB8]();
}

uint64_t sub_2418A98DC()
{
  return MEMORY[0x24BDF4AD8]();
}

uint64_t sub_2418A98E8()
{
  return MEMORY[0x24BDF4AE0]();
}

uint64_t sub_2418A98F4()
{
  return MEMORY[0x24BDF4CA8]();
}

uint64_t sub_2418A9900()
{
  return MEMORY[0x24BDF4CE0]();
}

uint64_t sub_2418A990C()
{
  return MEMORY[0x24BDF4D00]();
}

uint64_t sub_2418A9918()
{
  return MEMORY[0x24BDF4D08]();
}

uint64_t sub_2418A9924()
{
  return MEMORY[0x24BDF4E10]();
}

uint64_t sub_2418A9930()
{
  return MEMORY[0x24BDF4E30]();
}

uint64_t sub_2418A993C()
{
  return MEMORY[0x24BDF4E58]();
}

uint64_t sub_2418A9948()
{
  return MEMORY[0x24BDF4EF0]();
}

uint64_t sub_2418A9954()
{
  return MEMORY[0x24BDF4F00]();
}

uint64_t sub_2418A9960()
{
  return MEMORY[0x24BDF4F18]();
}

uint64_t sub_2418A996C()
{
  return MEMORY[0x24BDF4F20]();
}

uint64_t sub_2418A9978()
{
  return MEMORY[0x24BDF4FA8]();
}

uint64_t sub_2418A9984()
{
  return MEMORY[0x24BDF4FC8]();
}

uint64_t sub_2418A9990()
{
  return MEMORY[0x24BDF4FE0]();
}

uint64_t sub_2418A999C()
{
  return MEMORY[0x24BDF4FF0]();
}

uint64_t sub_2418A99A8()
{
  return MEMORY[0x24BDF5000]();
}

uint64_t sub_2418A99B4()
{
  return MEMORY[0x24BDF5118]();
}

uint64_t sub_2418A99C0()
{
  return MEMORY[0x24BDF53A8]();
}

uint64_t sub_2418A99CC()
{
  return MEMORY[0x24BDF53F0]();
}

uint64_t sub_2418A99D8()
{
  return MEMORY[0x24BDF5430]();
}

uint64_t sub_2418A99E4()
{
  return MEMORY[0x24BDF5440]();
}

uint64_t sub_2418A99F0()
{
  return MEMORY[0x24BDF5448]();
}

uint64_t sub_2418A99FC()
{
  return MEMORY[0x24BDF5478]();
}

uint64_t sub_2418A9A08()
{
  return MEMORY[0x24BDF5490]();
}

uint64_t sub_2418A9A14()
{
  return MEMORY[0x24BDF54A0]();
}

uint64_t sub_2418A9A20()
{
  return MEMORY[0x24BDF54A8]();
}

uint64_t sub_2418A9A2C()
{
  return MEMORY[0x24BDF54B0]();
}

uint64_t sub_2418A9A38()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_2418A9A44()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_2418A9A50()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_2418A9A5C()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_2418A9A68()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_2418A9A74()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_2418A9A80()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_2418A9A8C()
{
  return MEMORY[0x24BEE5620]();
}

uint64_t sub_2418A9A98()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_2418A9AA4()
{
  return MEMORY[0x24BE49C50]();
}

uint64_t sub_2418A9AB0()
{
  return MEMORY[0x24BE49C58]();
}

uint64_t sub_2418A9ABC()
{
  return MEMORY[0x24BE49C60]();
}

uint64_t sub_2418A9AC8()
{
  return MEMORY[0x24BE49C70]();
}

uint64_t sub_2418A9AD4()
{
  return MEMORY[0x24BE49C78]();
}

uint64_t sub_2418A9AE0()
{
  return MEMORY[0x24BE49C80]();
}

uint64_t sub_2418A9AEC()
{
  return MEMORY[0x24BE49C88]();
}

uint64_t sub_2418A9AF8()
{
  return MEMORY[0x24BE49CC8]();
}

uint64_t sub_2418A9B04()
{
  return MEMORY[0x24BE49CD0]();
}

uint64_t sub_2418A9B10()
{
  return MEMORY[0x24BE49CD8]();
}

uint64_t sub_2418A9B1C()
{
  return MEMORY[0x24BE49CF0]();
}

uint64_t sub_2418A9B28()
{
  return MEMORY[0x24BE49D08]();
}

uint64_t sub_2418A9B34()
{
  return MEMORY[0x24BE49D18]();
}

uint64_t sub_2418A9B40()
{
  return MEMORY[0x24BE49D30]();
}

uint64_t sub_2418A9B4C()
{
  return MEMORY[0x24BE49D38]();
}

uint64_t sub_2418A9B58()
{
  return MEMORY[0x24BE49D48]();
}

uint64_t sub_2418A9B64()
{
  return MEMORY[0x24BE49D50]();
}

uint64_t sub_2418A9B70()
{
  return MEMORY[0x24BE49D58]();
}

uint64_t sub_2418A9B7C()
{
  return MEMORY[0x24BE49D60]();
}

uint64_t sub_2418A9B88()
{
  return MEMORY[0x24BE49D68]();
}

uint64_t sub_2418A9B94()
{
  return MEMORY[0x24BE49D70]();
}

uint64_t sub_2418A9BA0()
{
  return MEMORY[0x24BE49D78]();
}

uint64_t sub_2418A9BAC()
{
  return MEMORY[0x24BE49D80]();
}

uint64_t sub_2418A9BB8()
{
  return MEMORY[0x24BE49D88]();
}

uint64_t sub_2418A9BC4()
{
  return MEMORY[0x24BE49DC8]();
}

uint64_t sub_2418A9BD0()
{
  return MEMORY[0x24BE49DD0]();
}

uint64_t sub_2418A9BDC()
{
  return MEMORY[0x24BE49DE0]();
}

uint64_t sub_2418A9BE8()
{
  return MEMORY[0x24BE49E18]();
}

uint64_t sub_2418A9BF4()
{
  return MEMORY[0x24BE49E20]();
}

uint64_t sub_2418A9C00()
{
  return MEMORY[0x24BE49E28]();
}

uint64_t sub_2418A9C0C()
{
  return MEMORY[0x24BE49E50]();
}

uint64_t sub_2418A9C18()
{
  return MEMORY[0x24BE49F38]();
}

uint64_t sub_2418A9C24()
{
  return MEMORY[0x24BE49F40]();
}

uint64_t sub_2418A9C30()
{
  return MEMORY[0x24BE49F48]();
}

uint64_t sub_2418A9C3C()
{
  return MEMORY[0x24BE49F58]();
}

uint64_t sub_2418A9C48()
{
  return MEMORY[0x24BE49F60]();
}

uint64_t sub_2418A9C54()
{
  return MEMORY[0x24BDD2110]();
}

uint64_t sub_2418A9C60()
{
  return MEMORY[0x24BDD2208]();
}

uint64_t sub_2418A9C6C()
{
  return MEMORY[0x24BDD2210]();
}

uint64_t sub_2418A9C78()
{
  return MEMORY[0x24BE459B8]();
}

uint64_t sub_2418A9C84()
{
  return MEMORY[0x24BDD2420]();
}

uint64_t sub_2418A9C90()
{
  return MEMORY[0x24BDD2428]();
}

uint64_t sub_2418A9C9C()
{
  return MEMORY[0x24BDD2430]();
}

uint64_t sub_2418A9CA8()
{
  return MEMORY[0x24BDD2450]();
}

uint64_t sub_2418A9CB4()
{
  return MEMORY[0x24BDD2458]();
}

uint64_t sub_2418A9CC0()
{
  return MEMORY[0x24BDD2460]();
}

uint64_t sub_2418A9CCC()
{
  return MEMORY[0x24BDD2468]();
}

uint64_t sub_2418A9CD8()
{
  return MEMORY[0x24BDD2470]();
}

uint64_t sub_2418A9CE4()
{
  return MEMORY[0x24BDD2478]();
}

uint64_t sub_2418A9CF0()
{
  return MEMORY[0x24BDD2480]();
}

uint64_t sub_2418A9CFC()
{
  return MEMORY[0x24BDD2488]();
}

uint64_t sub_2418A9D08()
{
  return MEMORY[0x24BEE0230]();
}

uint64_t sub_2418A9D14()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_2418A9D20()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_2418A9D2C()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_2418A9D38()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_2418A9D44()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_2418A9D50()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_2418A9D5C()
{
  return MEMORY[0x24BE459C0]();
}

uint64_t sub_2418A9D68()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_2418A9D74()
{
  return MEMORY[0x24BEE07E8]();
}

uint64_t sub_2418A9D80()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_2418A9D8C()
{
  return MEMORY[0x24BEE08B8]();
}

uint64_t sub_2418A9D98()
{
  return MEMORY[0x24BEE08D0]();
}

uint64_t sub_2418A9DA4()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2418A9DB0()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_2418A9DBC()
{
  return MEMORY[0x24BDCF9F0]();
}

uint64_t sub_2418A9DC8()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_2418A9DD4()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_2418A9DE0()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_2418A9DEC()
{
  return MEMORY[0x24BDCFA58]();
}

uint64_t sub_2418A9DF8()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_2418A9E04()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t sub_2418A9E10()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_2418A9E1C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2418A9E28()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_2418A9E34()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_2418A9E40()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2418A9E4C()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2418A9E58()
{
  return MEMORY[0x24BEE0CE0]();
}

uint64_t sub_2418A9E64()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_2418A9E70()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_2418A9E7C()
{
  return MEMORY[0x24BEE0F30]();
}

uint64_t sub_2418A9E88()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_2418A9E94()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_2418A9EA0()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_2418A9EAC()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_2418A9EB8()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_2418A9EC4()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_2418A9ED0()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_2418A9EDC()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_2418A9EE8()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_2418A9EF4()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_2418A9F00()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_2418A9F0C()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_2418A9F18()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_2418A9F24()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_2418A9F30()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_2418A9F3C()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_2418A9F48()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_2418A9F54()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_2418A9F60()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_2418A9F6C()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_2418A9F78()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_2418A9F84()
{
  return MEMORY[0x24BEE16D8]();
}

uint64_t sub_2418A9F90()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_2418A9F9C()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_2418A9FA8()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_2418A9FB4()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_2418A9FC0()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_2418A9FCC()
{
  return MEMORY[0x24BEE1B28]();
}

uint64_t sub_2418A9FD8()
{
  return MEMORY[0x24BEE1B68]();
}

uint64_t sub_2418A9FE4()
{
  return MEMORY[0x24BDBD758]();
}

uint64_t sub_2418A9FF0()
{
  return MEMORY[0x24BE459F8]();
}

uint64_t sub_2418A9FFC()
{
  return MEMORY[0x24BE45A18]();
}

uint64_t sub_2418AA008()
{
  return MEMORY[0x24BDD2500]();
}

uint64_t sub_2418AA014()
{
  return MEMORY[0x24BDD2510]();
}

uint64_t sub_2418AA020()
{
  return MEMORY[0x24BDD2518]();
}

uint64_t sub_2418AA02C()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_2418AA038()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_2418AA044()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_2418AA050()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_2418AA05C()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2418AA068()
{
  return MEMORY[0x24BEE79B8]();
}

uint64_t sub_2418AA074()
{
  return MEMORY[0x24BDD2520]();
}

uint64_t sub_2418AA080()
{
  return MEMORY[0x24BEBCCA8]();
}

uint64_t sub_2418AA08C()
{
  return MEMORY[0x24BE45B40]();
}

uint64_t sub_2418AA098()
{
  return MEMORY[0x24BE45B50]();
}

uint64_t sub_2418AA0A4()
{
  return MEMORY[0x24BE45B60]();
}

uint64_t sub_2418AA0B0()
{
  return MEMORY[0x24BEE5660]();
}

uint64_t sub_2418AA0BC()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_2418AA0C8()
{
  return MEMORY[0x24BEE56F0]();
}

uint64_t sub_2418AA0D4()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_2418AA0E0()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_2418AA0EC()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_2418AA0F8()
{
  return MEMORY[0x24BDD25F8]();
}

uint64_t sub_2418AA104()
{
  return MEMORY[0x24BDD2600]();
}

uint64_t sub_2418AA110()
{
  return MEMORY[0x24BE49F98]();
}

uint64_t sub_2418AA11C()
{
  return MEMORY[0x24BDD2618]();
}

uint64_t sub_2418AA128()
{
  return MEMORY[0x24BDD0078]();
}

uint64_t sub_2418AA134()
{
  return MEMORY[0x24BDD0098]();
}

uint64_t sub_2418AA140()
{
  return MEMORY[0x24BEBCD20]();
}

uint64_t sub_2418AA14C()
{
  return MEMORY[0x24BEBCD38]();
}

uint64_t sub_2418AA158()
{
  return MEMORY[0x24BDD2638]();
}

uint64_t sub_2418AA164()
{
  return MEMORY[0x24BDD26C8]();
}

uint64_t sub_2418AA170()
{
  return MEMORY[0x24BDD26D0]();
}

uint64_t sub_2418AA17C()
{
  return MEMORY[0x24BE45BB0]();
}

uint64_t sub_2418AA188()
{
  return MEMORY[0x24BE45BC0]();
}

uint64_t sub_2418AA194()
{
  return MEMORY[0x24BE45BD0]();
}

uint64_t sub_2418AA1A0()
{
  return MEMORY[0x24BE49FB0]();
}

uint64_t sub_2418AA1AC()
{
  return MEMORY[0x24BE49FB8]();
}

uint64_t sub_2418AA1B8()
{
  return MEMORY[0x24BDD2708]();
}

uint64_t sub_2418AA1C4()
{
  return MEMORY[0x24BE45BF0]();
}

uint64_t sub_2418AA1D0()
{
  return MEMORY[0x24BDF5540]();
}

uint64_t sub_2418AA1DC()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_2418AA1E8()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2418AA1F4()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2418AA200()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2418AA20C()
{
  return MEMORY[0x24BEE1F68]();
}

uint64_t sub_2418AA218()
{
  return MEMORY[0x24BEE1F70]();
}

uint64_t sub_2418AA224()
{
  return MEMORY[0x24BDD05C8]();
}

uint64_t sub_2418AA230()
{
  return MEMORY[0x24BEE5E68]();
}

uint64_t sub_2418AA23C()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_2418AA248()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_2418AA254()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_2418AA260()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_2418AA26C()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_2418AA278()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_2418AA284()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_2418AA290()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_2418AA29C()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_2418AA2A8()
{
  return MEMORY[0x24BEE24D8]();
}

uint64_t sub_2418AA2B4()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_2418AA2C0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2418AA2CC()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2418AA2D8()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_2418AA2E4()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_2418AA2F0()
{
  return MEMORY[0x24BEE2700]();
}

uint64_t sub_2418AA2FC()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_2418AA308()
{
  return MEMORY[0x24BEE2798]();
}

uint64_t sub_2418AA314()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2418AA320()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_2418AA32C()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_2418AA338()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_2418AA344()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_2418AA350()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_2418AA35C()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_2418AA368()
{
  return MEMORY[0x24BEE2C00]();
}

uint64_t sub_2418AA374()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_2418AA380()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_2418AA38C()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_2418AA398()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_2418AA3A4()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_2418AA3B0()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_2418AA3BC()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_2418AA3C8()
{
  return MEMORY[0x24BEE30A0]();
}

uint64_t sub_2418AA3D4()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_2418AA3E0()
{
  return MEMORY[0x24BEE30B8]();
}

uint64_t sub_2418AA3EC()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_2418AA3F8()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_2418AA404()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_2418AA410()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_2418AA41C()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_2418AA428()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_2418AA434()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_2418AA440()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_2418AA44C()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_2418AA458()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_2418AA464()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_2418AA470()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_2418AA47C()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_2418AA488()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_2418AA494()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_2418AA4A0()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_2418AA4AC()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_2418AA4B8()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_2418AA4C4()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_2418AA4D0()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_2418AA4DC()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2418AA4E8()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_2418AA4F4()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_2418AA500()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_2418AA50C()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_2418AA518()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_2418AA524()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_2418AA530()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_2418AA53C()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_2418AA548()
{
  return MEMORY[0x24BEE40C8]();
}

uint64_t sub_2418AA554()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_2418AA560()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_2418AA56C()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2418AA578()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2418AA584()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_2418AA590()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_2418AA59C()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2418AA5A8()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_2418AA5B4()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_2418AA5C0()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_2418AA5CC()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_2418AA5D8()
{
  return MEMORY[0x24BEE4A98]();
}

CGColorRef CGColorCreateGenericRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x24BDBDAA8](red, green, blue, alpha);
}

size_t CGColorGetNumberOfComponents(CGColorRef color)
{
  return MEMORY[0x24BDBDB08](color);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x24BDBEFE0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFF8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF010]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF018]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x24BDBF050]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

uint64_t HKAnalyticsPropertyValueForBiologicalSex()
{
  return MEMORY[0x24BDD27F0]();
}

uint64_t HKDateFormatterFromTemplate()
{
  return MEMORY[0x24BE4A000]();
}

uint64_t HKMHMindfulnessSettingsURL()
{
  return MEMORY[0x24BE65D38]();
}

uint64_t HKObjectForNanoPreferencesUserDefaultsKey()
{
  return MEMORY[0x24BDD3298]();
}

uint64_t HKStateOfMindReflectiveIntervalFromKind()
{
  return MEMORY[0x24BDD3798]();
}

uint64_t HKUICalendarLocaleIsRightToLeft()
{
  return MEMORY[0x24BE4A188]();
}

uint64_t HKUILocalizedString()
{
  return MEMORY[0x24BE4A1E0]();
}

uint64_t HKUILocalizedStringForStateOfMindDomain()
{
  return MEMORY[0x24BE4A200]();
}

uint64_t HKUILocalizedStringForStateOfMindLabel()
{
  return MEMORY[0x24BE4A208]();
}

uint64_t HKUILocalizedStringForValenceClassification()
{
  return MEMORY[0x24BE4A210]();
}

uint64_t HKUILocalizedStringForValenceClassificationAndReflectiveInterval()
{
  return MEMORY[0x24BE4A218]();
}

id MTLCreateSystemDefaultDevice(void)
{
  return (id)MEMORY[0x24BDDD1E0]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x24BED8580]();
}

uint64_t MobileGestalt_get_homeButtonType()
{
  return MEMORY[0x24BED8600]();
}

uint64_t NSStringFromHKStateOfMindDomain()
{
  return MEMORY[0x24BDD38C0]();
}

uint64_t NSStringFromHKStateOfMindLabel()
{
  return MEMORY[0x24BDD38C8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

__float2 __sincosf_stret(float a1)
{
  float v1;
  float v2;
  __float2 result;

  MEMORY[0x24BDAC898](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

__float2 __sincospif_stret(float a1)
{
  float v1;
  float v2;
  __float2 result;

  MEMORY[0x24BDAC8A0](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

float atan2f(float a1, float a2)
{
  float result;

  MEMORY[0x24BDAD228](a1, a2);
  return result;
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x24BEDD148]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

float sinf(float a1)
{
  float result;

  MEMORY[0x24BDAFE20](a1);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x24BEE4C48]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x24BEE4D20]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x24BEE4D28]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x24BEE4DC8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x24BEE4DF0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x24BEE4E00]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x24BEE4E60]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

float tanf(float a1)
{
  float result;

  MEMORY[0x24BDB0140](a1);
  return result;
}

