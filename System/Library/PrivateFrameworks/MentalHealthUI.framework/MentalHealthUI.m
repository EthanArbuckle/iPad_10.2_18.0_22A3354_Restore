id HKMHUIMentalHealthUIFrameworkBundle()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)HKMHUIMentalHealthUIFrameworkBundle___ClassBundle;
  if (!HKMHUIMentalHealthUIFrameworkBundle___ClassBundle)
  {
    objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)HKMHUIMentalHealthUIFrameworkBundle___ClassBundle;
    HKMHUIMentalHealthUIFrameworkBundle___ClassBundle = v1;

    v0 = (void *)HKMHUIMentalHealthUIFrameworkBundle___ClassBundle;
  }
  return v0;
}

double FkH_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4)
{
  float32x4_t v4;

  v4 = vaddq_f32(a2, (float32x4_t)COERCE_UNSIGNED_INT(-a4));
  if (a1)
    v4.i64[0] = vaddq_f32(v4, (float32x4_t)xmmword_2418AB380).u64[0];
  return *(double *)v4.i64;
}

double FkV_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4)
{
  unint64_t v4;
  float32x4_t v5;

  LODWORD(v4) = 0;
  *((float *)&v4 + 1) = -a4;
  v5 = vaddq_f32(a2, (float32x4_t)v4);
  if (a1)
    v5.i64[0] = vaddq_f32(v5, (float32x4_t)xmmword_2418AB380).u64[0];
  return *(double *)v5.i64;
}

double DkH_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4, float a5)
{
  float32x4_t v5;

  v5 = vaddq_f32((float32x4_t)COERCE_UNSIGNED_INT(-(float)(a4 - (float)(a5 * 0.5))), vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)LODWORD(a5), a2.f32[0]), (float32x4_t)xmmword_2418AB3A0, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_2418AB3B0, a2, 2));
  if (a1)
    v5.i64[0] = vaddq_f32(v5, (float32x4_t)xmmword_2418AB380).u64[0];
  return *(double *)v5.i64;
}

double DkV_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4, float a5)
{
  unint64_t v5;
  unint64_t v6;
  float32x4_t v7;

  LODWORD(v5) = 0;
  LODWORD(v6) = 0;
  *((float *)&v6 + 1) = a5;
  *((float *)&v5 + 1) = -(float)(a4 - (float)(a5 * 0.5));
  v7 = vaddq_f32((float32x4_t)v5, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)COERCE_UNSIGNED_INT(1.0), a2.f32[0]), (float32x4_t)v6, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_2418AB3B0, a2, 2));
  if (a1)
    v7.i64[0] = vaddq_f32(v7, (float32x4_t)xmmword_2418AB380).u64[0];
  return *(double *)v7.i64;
}

double Dp_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4, float a5)
{
  unint64_t v5;
  unint64_t v6;
  float32x4_t v7;

  LODWORD(v5) = 0;
  *((float *)&v5 + 1) = a5;
  *(float *)&v6 = -a4;
  *((float *)&v6 + 1) = -a4;
  v7 = vaddq_f32((float32x4_t)v6, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)LODWORD(a5), a2.f32[0]), (float32x4_t)v5, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_2418AB3B0, a2, 2));
  if (a1)
    v7.i64[0] = vaddq_f32(v7, (float32x4_t)xmmword_2418AB380).u64[0];
  return *(double *)v7.i64;
}

double UkH_regionOf(uint64_t a1, float32x4_t a2, double a3, double a4, float a5)
{
  float32x4_t v5;

  v5 = vaddq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)COERCE_UNSIGNED_INT(1.0 / a5), a2.f32[0]), (float32x4_t)xmmword_2418AB3A0, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_2418AB3B0, a2, 2), (float32x4_t)xmmword_2418AB3C0);
  if (a1)
    v5.i64[0] = vaddq_f32(v5, (float32x4_t)xmmword_2418AB380).u64[0];
  return *(double *)v5.i64;
}

double UkV_regionOf(uint64_t a1, float32x4_t a2, double a3, double a4, float a5)
{
  unint64_t v5;
  float32x4_t v6;

  LODWORD(v5) = 0;
  *((float *)&v5 + 1) = 1.0 / a5;
  v6 = vaddq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)COERCE_UNSIGNED_INT(1.0), a2.f32[0]), (float32x4_t)v5, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_2418AB3B0, a2, 2), (float32x4_t)xmmword_2418AB3E0);
  if (a1)
    v6.i64[0] = vaddq_f32(v6, (float32x4_t)xmmword_2418AB380).u64[0];
  return *(double *)v6.i64;
}

double Up_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4, float a5)
{
  unint64_t v5;
  float32x4_t v6;
  unint64_t v7;
  float32x4_t v8;

  LODWORD(v5) = 0;
  *((float *)&v5 + 1) = 1.0 / a5;
  v6 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)COERCE_UNSIGNED_INT(1.0 / a5), a2.f32[0]), (float32x4_t)v5, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_2418AB3B0, a2, 2);
  *(float *)&v7 = -a4;
  *((float *)&v7 + 1) = -a4;
  v8 = vaddq_f32((float32x4_t)v7, v6);
  if (a1)
    v8.i64[0] = vaddq_f32(v8, (float32x4_t)xmmword_2418AB380).u64[0];
  return *(double *)v8.i64;
}

uint64_t initFilterInfo(uint64_t result, float a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *GaussianBlurPlan;
  int GaussianBlurPlanIndex;
  int v7;
  int v8;
  uint64_t v9;
  int v10;

  v2 = result;
  *(_OWORD *)(result + 20) = 0u;
  v3 = result + 20;
  *(_OWORD *)(result + 36) = 0u;
  if (a2 >= 1.0)
  {
    GaussianBlurPlanIndex = getGaussianBlurPlanIndex(a2);
    GaussianBlurPlan = getGaussianBlurPlan(GaussianBlurPlanIndex);
    v4 = 0;
    v7 = 0;
    if ((int)GaussianBlurPlan[1] <= 1)
      v8 = 1;
    else
      v8 = (int)GaussianBlurPlan[1];
    do
    {
      v9 = v4;
      v10 = GaussianBlurPlan[v7 + 2];
      result = getGaussianBlurKernelSize(v10);
      v4 = v9 + 1;
      *(_DWORD *)(v3 + 4 * v9) = v10;
      v7 += result;
    }
    while (v7 < v8);
  }
  else
  {
    v4 = 0;
    GaussianBlurPlan = 0;
  }
  *(_QWORD *)v2 = GaussianBlurPlan;
  *(_QWORD *)(v2 + 8) = v4;
  *(_DWORD *)(v2 + 16) = 1065353216;
  return result;
}

uint64_t GetPixelInfo()
{
  return 0x1800010B14112073;
}

id GetSampler(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id result;
  void *v9;
  uint64_t v10;
  _BOOL8 v11;
  _BOOL8 v12;
  uint64_t v13;

  result = objc_alloc_init(MEMORY[0x24BDDD6F0]);
  if (result)
  {
    v9 = result;
    v10 = 4 * (a2 == 0);
    v11 = a3 == 1;
    v12 = a4 == 1;
    objc_msgSend(result, "setSAddressMode:", v10);
    objc_msgSend(v9, "setTAddressMode:", v10);
    objc_msgSend(v9, "setRAddressMode:", v10);
    objc_msgSend(v9, "setMinFilter:", v11);
    objc_msgSend(v9, "setMagFilter:", v11);
    objc_msgSend(v9, "setNormalizedCoordinates:", v12);
    objc_msgSend(v9, "setMipFilter:", v12);
    v13 = objc_msgSend(a1, "newSamplerStateWithDescriptor:", v9);

    return (id)v13;
  }
  return result;
}

uint64_t WMPSConvolutionGetIntermediateTexture(void *a1, _QWORD *a2, _QWORD *a3, uint64_t a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v8 = (void *)objc_opt_new();
  objc_msgSend(v8, "setPixelFormat:", *a2 & 0x3FFLL);
  objc_msgSend(v8, "setWidth:", *a3);
  objc_msgSend(v8, "setHeight:", a3[1]);
  objc_msgSend(v8, "setArrayLength:", a3[2]);
  if (a3[2] == 1)
    v9 = 2;
  else
    v9 = 3;
  objc_msgSend(v8, "setTextureType:", v9);
  objc_msgSend(v8, "setStorageMode:", 2);
  objc_msgSend(v8, "setCpuCacheMode:", 0);
  objc_msgSend(v8, "setUsage:", 3);
  objc_msgSend(v8, "setProtectionOptions:", a4);
  v10 = objc_msgSend(a1, "newTextureWithDescriptor:", v8);

  return v10;
}

uint64_t NewComputePipelineState(void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD v10[2];

  v10[1] = *MEMORY[0x24BDAC8D0];
  v9 = 0;
  v4 = (void *)objc_msgSend(a1, "newFunctionWithName:");
  v5 = (void *)objc_msgSend(a1, "device");
  v6 = objc_alloc_init(MEMORY[0x24BDDD550]);
  objc_msgSend(v6, "setComputeFunction:", v4);
  if (a2)
  {
    v10[0] = a2;
    objc_msgSend(v6, "setBinaryArchives:", objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v10, 1));
  }
  objc_msgSend(v6, "setThreadGroupSizeIsMultipleOfThreadExecutionWidth:", 1);
  v7 = objc_msgSend(v5, "newComputePipelineStateWithDescriptor:error:", v6, &v9);

  if (v9)
    return 0;
  else
    return v7;
}

uint64_t getGaussianBlurKernelSize(int a1)
{
  if (a1 > 25)
    return 0xFFFFFFFFLL;
  else
    return getGaussianBlurKernelSize::s[a1];
}

uint64_t getGaussianBlurKernelBorderScaleData(unsigned int a1)
{
  if (a1 > 0x19)
    return 0;
  else
    return getGaussianBlurKernelBorderScaleData::data[a1];
}

uint64_t getGaussianBlurPlanIndex(double a1)
{
  int v1;
  int v2;
  uint64_t v3;

  v1 = 0;
  v2 = 256;
  do
  {
    if (v2 + v1 <= 820 && kGaussianBlurPlans[kGaussianBlurPlanIndex[v2 + v1]] <= a1)
      v1 += v2;
    else
      v2 = v2 >> 1;
  }
  while (v2 > 0);
  if (v1 >= 820)
  {
    v3 = v1;
  }
  else
  {
    v3 = v1;
    if (vabdd_f64(kGaussianBlurPlans[kGaussianBlurPlanIndex[v1 + 1]], a1) < vabdd_f64(kGaussianBlurPlans[kGaussianBlurPlanIndex[v1]], a1))v3 = v1 + 1;
  }
  return kGaussianBlurPlanIndex[v3];
}

double *getGaussianBlurPlan(int a1)
{
  return &kGaussianBlurPlans[a1];
}

uint64_t HKMHUIActivePairedWatchProductType()
{
  return 0;
}

uint64_t HKMHUIActivePairedWatchBuildVersion()
{
  return 0;
}

uint64_t BundleNameProviding.bundleName.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  (*(void (**)(void))(a2 + 8))();
  v2 = sub_241721040();
  v3 = (_QWORD *)MEMORY[0x24269CA38](46, 0xE100000000000000, 1, 1, MEMORY[0x24BEE0D00], v2);
  swift_bridgeObjectRelease();
  if (v3[2])
  {
    v4 = v3[4];
    v5 = v3[5];
    v6 = v3[6];
    v7 = v3[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x24269C618](v4, v5, v6, v7);
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

unint64_t sub_241721040()
{
  unint64_t result;

  result = qword_25714B988;
  if (!qword_25714B988)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25714B988);
  }
  return result;
}

uint64_t dispatch thunk of BundleNameProviding.bundleNameAndExtension.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_24172109C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BDB0);
}

__n128 __swift_memcpy48_16(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_2417210F0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_241721110(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for HKCVLight(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BDB8);
}

__n128 __swift_memcpy64_16(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s9PlacementVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s9PlacementVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BDC0);
}

void type metadata accessor for HKCVAnimationModeType(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BDC8);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TagLayout(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TagLayout(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BDD0);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BDD8);
}

void type metadata accessor for ValenceClassification(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BDE0);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BDE8);
}

void type metadata accessor for __HKStateOfMindReflectiveInterval(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BDF0);
}

void type metadata accessor for __HKStateOfMindDomain(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BDF8);
}

void type metadata accessor for Label(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BE00);
}

uint64_t sub_2417212D4()
{
  return sub_24172159C(&qword_25714BE08, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t)&unk_2418D11AC);
}

uint64_t sub_241721308()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

uint64_t sub_24172134C()
{
  return sub_2418AA578();
}

uint64_t sub_241721374()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

void sub_2417213B4(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_2417213C0(uint64_t a1, uint64_t a2)
{
  return sub_24172190C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_2417213D8(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_2418A9DC8();
  *a2 = 0;
  return result;
}

uint64_t sub_24172144C(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_2418A9DD4();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2417214C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_2418A9DE0();
  v2 = sub_2418A9DB0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_241721508(uint64_t a1, uint64_t a2)
{
  return sub_24172190C(a1, a2, MEMORY[0x24BEE0CD8]);
}

_DWORD *sub_24172151C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_24172152C(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_241721538(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_24172154C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_241721560@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_241721570()
{
  return sub_24172159C(&qword_25714BE10, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain, (uint64_t)&unk_2418D1254);
}

uint64_t sub_24172159C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24269D47C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2417215E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2418A9DE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24172160C()
{
  sub_24172159C((unint64_t *)&qword_25714BEE0, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2418D1670);
  sub_24172159C(&qword_25714BEE8, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2418D146C);
  return sub_2418AA3EC();
}

uint64_t sub_241721690@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2418A9DB0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2417216D4()
{
  sub_24172159C(&qword_25714BED0, (uint64_t (*)(uint64_t))type metadata accessor for CubeLayout, (uint64_t)&unk_2418D15E0);
  sub_24172159C(&qword_25714BED8, (uint64_t (*)(uint64_t))type metadata accessor for CubeLayout, (uint64_t)&unk_2418D1580);
  return sub_2418AA3EC();
}

uint64_t initializeBufferWithCopyOfBuffer for StateOfMindEntryView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_16(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_241721794(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void type metadata accessor for HKCVVertex(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BE78);
}

void type metadata accessor for CubeLayout(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BE80);
}

void type metadata accessor for Option(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BE88);
}

void type metadata accessor for MTLPixelFormat(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BE90);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_241721818(a1, &qword_25714BE98);
}

void sub_241721818(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_24172185C()
{
  return sub_24172159C(&qword_25714BEA0, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2418D1430);
}

uint64_t sub_241721888()
{
  return sub_24172159C(&qword_25714BEA8, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2418D1404);
}

uint64_t sub_2417218B4()
{
  return sub_24172159C(&qword_25714BEB0, (uint64_t (*)(uint64_t))type metadata accessor for CubeLayout, (uint64_t)&unk_2418D1544);
}

uint64_t sub_2417218E0()
{
  return sub_24172159C(&qword_25714BEB8, (uint64_t (*)(uint64_t))type metadata accessor for CubeLayout, (uint64_t)&unk_2418D1518);
}

uint64_t sub_24172190C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2418A9DE0();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_241721948()
{
  sub_2418A9DE0();
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241721988()
{
  uint64_t v0;

  sub_2418A9DE0();
  sub_2418AA56C();
  sub_2418A9E1C();
  v0 = sub_2418AA59C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2417219F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_2418A9DE0();
  v2 = v1;
  if (v0 == sub_2418A9DE0() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_241721A80()
{
  return sub_24172159C(&qword_25714BEC0, (uint64_t (*)(uint64_t))type metadata accessor for CubeLayout, (uint64_t)&unk_2418D15B4);
}

uint64_t sub_241721AAC()
{
  return sub_24172159C(&qword_25714BEC8, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2418D14A0);
}

ValueMetadata *type metadata accessor for StateOfMindCalendarMomentariesView()
{
  return &type metadata for StateOfMindCalendarMomentariesView;
}

uint64_t sub_241721B10()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_241721B20@<D0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  __int128 v13;

  v4 = objc_msgSend((id)objc_opt_self(), sel_systemGray3Color);
  v5 = MEMORY[0x24269BDB4](v4);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_2418AA398();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6)
    v7 = 1.0;
  else
    v7 = 0.0;
  sub_2418A9960();
  sub_2418A861C();
  *(_QWORD *)a2 = v5;
  *(_WORD *)(a2 + 8) = 256;
  *(double *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v9;
  *(_BYTE *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v11;
  *(_BYTE *)(a2 + 48) = v12;
  result = *(double *)&v13;
  *(_OWORD *)(a2 + 56) = v13;
  return result;
}

uint64_t sub_241721C30()
{
  return sub_2418A936C();
}

double sub_241721C48@<D0>(uint64_t a1@<X8>)
{
  unint64_t *v1;

  return sub_241721B20(*v1, a1);
}

uint64_t sub_241721C50()
{
  return sub_241721DF8(&qword_25714BFB0, (uint64_t (*)(uint64_t))sub_241721C84, sub_241721DD4, MEMORY[0x24BDEBEE0]);
}

void sub_241721C84(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714BFB8, sub_241721CA0);
}

void sub_241721CA0(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714BFC0, (void (*)(uint64_t))sub_241721D18);
}

void sub_241721CBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_241721D18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714BFC8)
  {
    sub_241721D90();
    v0 = sub_2418A84CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714BFC8);
  }
}

unint64_t sub_241721D90()
{
  unint64_t result;

  result = qword_25714BFD0;
  if (!qword_25714BFD0)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4440], MEMORY[0x24BDF4458]);
    atomic_store(result, (unint64_t *)&qword_25714BFD0);
  }
  return result;
}

uint64_t sub_241721DD4()
{
  return sub_241721DF8(&qword_25714BFD8, (uint64_t (*)(uint64_t))sub_241721CA0, (uint64_t (*)(void))sub_241721E60, MEMORY[0x24BDECC38]);
}

uint64_t sub_241721DF8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241721E60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714BFE0;
  if (!qword_25714BFE0)
  {
    sub_241721D18();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEB358], v1);
    atomic_store(result, (unint64_t *)&qword_25714BFE0);
  }
  return result;
}

uint64_t *sub_241721EA8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  unsigned int (*v80)(uint64_t *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A8EB0();
      v7 = *(_QWORD *)(v6 - 8);
      v80 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
      if (v80(a2, 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2418A87B4();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      v15(v12, v13, v14);
      *((_BYTE *)a1 + v10[6]) = *((_BYTE *)a2 + v10[6]);
      v16 = v10[7];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_2418A84E4();
      v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v78(v17, v18, v19);
      v20 = v10[8];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      if (v80((uint64_t *)((char *)a2 + v20), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v21, v22, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v21, 0, 1, v6);
      }
      v24 = _s6StylesV8TimelineVMa(0);
      v15(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      v25 = v10[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v79 = v7;
      if (v80((uint64_t *)((char *)a2 + v25), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v26, v27, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v6);
      }
      v29 = _s6StylesV6NoDataVMa(0);
      v15(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      v30 = v10[10];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      if (v80((uint64_t *)((char *)a2 + v30), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        v34 = v79;
      }
      else
      {
        v34 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v31, v32, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v31, 0, 1, v6);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v15(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v14);
      v36 = v10[11];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      if (v80((uint64_t *)((char *)a2 + v36), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v37, v38, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v6);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v15(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v14);
      v41 = v10[12];
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      if (v80((uint64_t *)((char *)a2 + v41), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v42, v43, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v42, 0, 1, v6);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v15(&v42[v45[5]], &v43[v45[5]], v14);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v19);
      v46 = v10[13];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      if (v80((uint64_t *)((char *)a2 + v46), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v79;
      }
      else
      {
        v50 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v47, v48, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v47, 0, 1, v6);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v15(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v14);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v10[14];
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      if (v80((uint64_t *)((char *)a2 + v52), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v6);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v15(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v14);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v10[15];
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      if (v80((uint64_t *)((char *)a2 + v57), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v6);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v15(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v14);
      v62 = v10[16];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      if (v80((uint64_t *)((char *)a2 + v62), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v6);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v15(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v14);
      v67 = v10[17];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      if (v80((uint64_t *)((char *)a2 + v67), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v6);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v15(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v14);
      v72 = v10[18];
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      if (v80((uint64_t *)v74, 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v6);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v15(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v14);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24172280C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v34)(uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = sub_2418A8EB0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (!v4(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v5 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
  v6 = a1 + v5[5];
  v7 = sub_2418A87B4();
  v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v34(v6, v7);
  v8 = a1 + v5[7];
  v9 = sub_2418A84E4();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v11 = a1 + v5[8];
  if (!v4(v11, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v2);
  v12 = _s6StylesV8TimelineVMa(0);
  v34(v11 + *(int *)(v12 + 20), v7);
  v13 = a1 + v5[9];
  if (!v4(v13, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v2);
  v14 = _s6StylesV6NoDataVMa(0);
  v34(v13 + *(int *)(v14 + 20), v7);
  v15 = a1 + v5[10];
  if (!v4(v15, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
  v16 = _s6StylesV11PlaceholderVMa(0);
  v34(v15 + *(int *)(v16 + 20), v7);
  v17 = a1 + v5[11];
  if (!v4(v17, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v2);
  v18 = _s6StylesV6SymbolVMa(0);
  v34(v17 + *(int *)(v18 + 20), v7);
  v19 = a1 + v5[12];
  if (!v4(v19, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
  v20 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v34(v19 + *(int *)(v20 + 20), v7);
  v10(v19 + *(int *)(v20 + 28), v9);
  v21 = a1 + v5[13];
  if (!v4(v21, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v2);
  v22 = _s6StylesV5EmptyVMa(0);
  v34(v21 + *(int *)(v22 + 20), v7);
  v23 = a1 + v5[14];
  if (!v4(v23, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v23, v2);
  v24 = _s6StylesV5DailyVMa(0);
  v34(v23 + *(int *)(v24 + 20), v7);
  v25 = a1 + v5[15];
  if (!v4(v25, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v25, v2);
  v26 = _s6StylesV9MomentaryVMa(0);
  v34(v25 + *(int *)(v26 + 20), v7);
  v27 = a1 + v5[16];
  if (!v4(v27, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v2);
  v28 = _s6StylesV6HeaderVMa(0);
  v34(v27 + *(int *)(v28 + 20), v7);
  v29 = a1 + v5[17];
  if (!v4(v29, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v29, v2);
  v30 = _s6StylesV11ChartButtonVMa(0);
  v34(v29 + *(int *)(v30 + 20), v7);
  v31 = a1 + v5[18];
  if (!v4(v31, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v31, v2);
  v32 = v31 + *(int *)(_s6StylesV15LogButtonFooterVMa(0) + 20);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v32, v7);
}

_QWORD *sub_241722C68(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v77((char *)a2, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
    v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v8 = v7[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2418A87B4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    *((_BYTE *)a1 + v7[6]) = *((_BYTE *)a2 + v7[6]);
    v13 = v7[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_2418A84E4();
    v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v75(v14, v15, v16);
    v17 = v7[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    if (v77((char *)a2 + v17, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v18, v19, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v4);
    }
    v21 = _s6StylesV8TimelineVMa(0);
    v12(&v18[*(int *)(v21 + 20)], &v19[*(int *)(v21 + 20)], v11);
    v22 = v7[9];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v76 = v5;
    if (v77((char *)a2 + v22, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v23, v24, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v23, 0, 1, v4);
    }
    v26 = _s6StylesV6NoDataVMa(0);
    v12(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v11);
    v23[*(int *)(v26 + 24)] = v24[*(int *)(v26 + 24)];
    v27 = v7[10];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    if (v77((char *)a2 + v27, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      v31 = v76;
    }
    else
    {
      v31 = v76;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v28, v29, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v28, 0, 1, v4);
    }
    v32 = _s6StylesV11PlaceholderVMa(0);
    v12(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v11);
    v33 = v7[11];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    if (v77((char *)a2 + v33, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v35, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v4);
    }
    v37 = _s6StylesV6SymbolVMa(0);
    v12(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v11);
    v38 = v7[12];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    if (v77((char *)a2 + v38, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v39, v40, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v39, 0, 1, v4);
    }
    v42 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(&v39[v42[5]], &v40[v42[5]], v11);
    v39[v42[6]] = v40[v42[6]];
    v75(&v39[v42[7]], &v40[v42[7]], v16);
    v43 = v7[13];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    if (v77((char *)a2 + v43, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      v47 = v76;
    }
    else
    {
      v47 = v76;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v44, v45, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v44, 0, 1, v4);
    }
    v48 = _s6StylesV5EmptyVMa(0);
    v12(&v44[*(int *)(v48 + 20)], &v45[*(int *)(v48 + 20)], v11);
    v44[*(int *)(v48 + 24)] = v45[*(int *)(v48 + 24)];
    v49 = v7[14];
    v50 = (char *)a1 + v49;
    v51 = (char *)a2 + v49;
    if (v77((char *)a2 + v49, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v50, v51, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v50, 0, 1, v4);
    }
    v53 = _s6StylesV5DailyVMa(0);
    v12(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v11);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    v54 = v7[15];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    if (v77((char *)a2 + v54, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v55, v56, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v55, 0, 1, v4);
    }
    v58 = _s6StylesV9MomentaryVMa(0);
    v12(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v11);
    v59 = v7[16];
    v60 = (char *)a1 + v59;
    v61 = (char *)a2 + v59;
    if (v77((char *)a2 + v59, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v60, v61, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v60, 0, 1, v4);
    }
    v63 = _s6StylesV6HeaderVMa(0);
    v12(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v11);
    v64 = v7[17];
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    if (v77((char *)a2 + v64, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v65, v66, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v65, 0, 1, v4);
    }
    v68 = _s6StylesV11ChartButtonVMa(0);
    v12(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v11);
    v69 = v7[18];
    v70 = (char *)a1 + v69;
    v71 = (char *)a2 + v69;
    if (v77(v71, 1, v4))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v70, v71, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v70, 0, 1, v4);
    }
    v73 = _s6StylesV15LogButtonFooterVMa(0);
    v12(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v11);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2417235A0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_2418A8EB0();
      v5 = *(_QWORD *)(v4 - 8);
      v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      if (v77((char *)a2, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, v4);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
      v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_2418A87B4();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v12(v9, v10, v11);
      *((_BYTE *)a1 + v7[6]) = *((_BYTE *)a2 + v7[6]);
      v13 = v7[7];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_2418A84E4();
      v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v75(v14, v15, v16);
      v17 = v7[8];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      if (v77((char *)a2 + v17, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v18, v19, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v4);
      }
      v21 = _s6StylesV8TimelineVMa(0);
      v12(&v18[*(int *)(v21 + 20)], &v19[*(int *)(v21 + 20)], v11);
      v22 = v7[9];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v76 = v5;
      if (v77((char *)a2 + v22, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v23, v24, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v23, 0, 1, v4);
      }
      v26 = _s6StylesV6NoDataVMa(0);
      v12(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v11);
      v23[*(int *)(v26 + 24)] = v24[*(int *)(v26 + 24)];
      v27 = v7[10];
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      if (v77((char *)a2 + v27, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        v31 = v76;
      }
      else
      {
        v31 = v76;
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v28, v29, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v28, 0, 1, v4);
      }
      v32 = _s6StylesV11PlaceholderVMa(0);
      v12(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v11);
      v33 = v7[11];
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      if (v77((char *)a2 + v33, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v35, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v4);
      }
      v37 = _s6StylesV6SymbolVMa(0);
      v12(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v11);
      v38 = v7[12];
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      if (v77((char *)a2 + v38, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v39, v40, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v39, 0, 1, v4);
      }
      v42 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v12(&v39[v42[5]], &v40[v42[5]], v11);
      v39[v42[6]] = v40[v42[6]];
      v75(&v39[v42[7]], &v40[v42[7]], v16);
      v43 = v7[13];
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      if (v77((char *)a2 + v43, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        v47 = v76;
      }
      else
      {
        v47 = v76;
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v44, v45, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v44, 0, 1, v4);
      }
      v48 = _s6StylesV5EmptyVMa(0);
      v12(&v44[*(int *)(v48 + 20)], &v45[*(int *)(v48 + 20)], v11);
      v44[*(int *)(v48 + 24)] = v45[*(int *)(v48 + 24)];
      v49 = v7[14];
      v50 = (char *)a1 + v49;
      v51 = (char *)a2 + v49;
      if (v77((char *)a2 + v49, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v50, v51, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v50, 0, 1, v4);
      }
      v53 = _s6StylesV5DailyVMa(0);
      v12(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v11);
      v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
      v54 = v7[15];
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      if (v77((char *)a2 + v54, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v55, v56, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v55, 0, 1, v4);
      }
      v58 = _s6StylesV9MomentaryVMa(0);
      v12(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v11);
      v59 = v7[16];
      v60 = (char *)a1 + v59;
      v61 = (char *)a2 + v59;
      if (v77((char *)a2 + v59, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v60, v61, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v60, 0, 1, v4);
      }
      v63 = _s6StylesV6HeaderVMa(0);
      v12(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v11);
      v64 = v7[17];
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      if (v77((char *)a2 + v64, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v65, v66, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v65, 0, 1, v4);
      }
      v68 = _s6StylesV11ChartButtonVMa(0);
      v12(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v11);
      v69 = v7[18];
      v70 = (char *)a1 + v69;
      v71 = (char *)a2 + v69;
      if (v77(v71, 1, v4))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v70, v71, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v70, 0, 1, v4);
      }
      v73 = _s6StylesV15LogButtonFooterVMa(0);
      v12(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v11);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241723EE4(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_241723F38(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v5 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    if (v79(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
    v14(v11, v12, v13);
    a1[v9[6]] = a2[v9[6]];
    v15 = v9[7];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = sub_2418A84E4();
    v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
    v77(v16, v17, v18);
    v19 = v9[8];
    v20 = &a1[v19];
    v21 = &a2[v19];
    if (v79(&a2[v19], 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v78 = v7;
    if (v79(&a2[v24], 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = &a1[v29];
    v31 = &a2[v29];
    if (v79(&a2[v29], 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      v33 = v78;
    }
    else
    {
      v33 = v78;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v30, 0, 1, v6);
    }
    v34 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v13);
    v35 = v9[11];
    v36 = &a1[v35];
    v37 = &a2[v35];
    if (v79(&a2[v35], 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v36, v37, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v6);
    }
    v39 = _s6StylesV6SymbolVMa(0);
    v14(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v13);
    v40 = v9[12];
    v41 = &a1[v40];
    v42 = &a2[v40];
    if (v79(&a2[v40], 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v41, v42, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v41, 0, 1, v6);
    }
    v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v41[v44[5]], &v42[v44[5]], v13);
    v41[v44[6]] = v42[v44[6]];
    v77(&v41[v44[7]], &v42[v44[7]], v18);
    v45 = v9[13];
    v46 = &a1[v45];
    v47 = &a2[v45];
    if (v79(&a2[v45], 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      v49 = v78;
    }
    else
    {
      v49 = v78;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v46, v47, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v46, 0, 1, v6);
    }
    v50 = _s6StylesV5EmptyVMa(0);
    v14(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v13);
    v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
    v51 = v9[14];
    v52 = &a1[v51];
    v53 = &a2[v51];
    if (v79(&a2[v51], 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v52, v53, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v6);
    }
    v55 = _s6StylesV5DailyVMa(0);
    v14(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v13);
    v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
    v56 = v9[15];
    v57 = &a1[v56];
    v58 = &a2[v56];
    if (v79(&a2[v56], 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v57, v58, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v6);
    }
    v60 = _s6StylesV9MomentaryVMa(0);
    v14(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v13);
    v61 = v9[16];
    v62 = &a1[v61];
    v63 = &a2[v61];
    if (v79(&a2[v61], 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v62, v63, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v6);
    }
    v65 = _s6StylesV6HeaderVMa(0);
    v14(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v13);
    v66 = v9[17];
    v67 = &a1[v66];
    v68 = &a2[v66];
    if (v79(&a2[v66], 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v67, v68, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v6);
    }
    v70 = _s6StylesV11ChartButtonVMa(0);
    v14(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v13);
    v71 = v9[18];
    v72 = &a1[v71];
    v73 = &a2[v71];
    if (v79(v73, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v72, v73, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v6);
    }
    v75 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  return a1;
}

char *sub_24172486C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_241723EE4((uint64_t)a1);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v5 = v4;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A8EB0();
      v7 = *(_QWORD *)(v6 - 8);
      v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      if (v79(a2, 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = sub_2418A87B4();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
      v14(v11, v12, v13);
      a1[v9[6]] = a2[v9[6]];
      v15 = v9[7];
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = sub_2418A84E4();
      v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
      v77(v16, v17, v18);
      v19 = v9[8];
      v20 = &a1[v19];
      v21 = &a2[v19];
      if (v79(&a2[v19], 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
      }
      v23 = _s6StylesV8TimelineVMa(0);
      v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      v24 = v9[9];
      v25 = &a1[v24];
      v26 = &a2[v24];
      v78 = v7;
      if (v79(&a2[v24], 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      }
      v28 = _s6StylesV6NoDataVMa(0);
      v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      v29 = v9[10];
      v30 = &a1[v29];
      v31 = &a2[v29];
      if (v79(&a2[v29], 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        v33 = v78;
      }
      else
      {
        v33 = v78;
        (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v30, v31, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v30, 0, 1, v6);
      }
      v34 = _s6StylesV11PlaceholderVMa(0);
      v14(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v13);
      v35 = v9[11];
      v36 = &a1[v35];
      v37 = &a2[v35];
      if (v79(&a2[v35], 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v36, v37, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v6);
      }
      v39 = _s6StylesV6SymbolVMa(0);
      v14(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v13);
      v40 = v9[12];
      v41 = &a1[v40];
      v42 = &a2[v40];
      if (v79(&a2[v40], 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v41, v42, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v41, 0, 1, v6);
      }
      v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v14(&v41[v44[5]], &v42[v44[5]], v13);
      v41[v44[6]] = v42[v44[6]];
      v77(&v41[v44[7]], &v42[v44[7]], v18);
      v45 = v9[13];
      v46 = &a1[v45];
      v47 = &a2[v45];
      if (v79(&a2[v45], 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        v49 = v78;
      }
      else
      {
        v49 = v78;
        (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v46, v47, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v46, 0, 1, v6);
      }
      v50 = _s6StylesV5EmptyVMa(0);
      v14(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v13);
      v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
      v51 = v9[14];
      v52 = &a1[v51];
      v53 = &a2[v51];
      if (v79(&a2[v51], 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v52, v53, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v6);
      }
      v55 = _s6StylesV5DailyVMa(0);
      v14(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v13);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      v56 = v9[15];
      v57 = &a1[v56];
      v58 = &a2[v56];
      if (v79(&a2[v56], 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v57, v58, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v6);
      }
      v60 = _s6StylesV9MomentaryVMa(0);
      v14(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v13);
      v61 = v9[16];
      v62 = &a1[v61];
      v63 = &a2[v61];
      if (v79(&a2[v61], 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v62, v63, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v6);
      }
      v65 = _s6StylesV6HeaderVMa(0);
      v14(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v13);
      v66 = v9[17];
      v67 = &a1[v66];
      v68 = &a2[v66];
      if (v79(&a2[v66], 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v67, v68, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v6);
      }
      v70 = _s6StylesV11ChartButtonVMa(0);
      v14(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v13);
      v71 = v9[18];
      v72 = &a1[v71];
      v73 = &a2[v71];
      if (v79(v73, 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v72, v73, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v6);
      }
      v75 = _s6StylesV15LogButtonFooterVMa(0);
      v14(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417251B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417251BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_241725210()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24172521C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t _s18EntrySeparatorViewVMa()
{
  uint64_t result;

  result = qword_25714C058;
  if (!qword_25714C058)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417252B0()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241725330()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241725340@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;

  v2 = sub_2418A987C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241725830();
  v8 = v7;
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v31 - v14;
  v16 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241860D60((uint64_t)v19);
  sub_24172588C((uint64_t)v19, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9960();
  sub_2418A861C();
  v37 = v38;
  v36 = v39;
  v35 = v40;
  v34 = v41;
  v33 = v42;
  v32 = v43;
  sub_2418A9870();
  sub_241860D60((uint64_t)v19);
  sub_24172588C((uint64_t)v19, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9960();
  sub_2418A861C();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v12, v6, v2);
  v20 = &v12[*(int *)(v8 + 36)];
  v21 = v45;
  *(_OWORD *)v20 = v44;
  *((_OWORD *)v20 + 1) = v21;
  *((_OWORD *)v20 + 2) = v46;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  sub_2417258C8((uint64_t)v12, (uint64_t)v15);
  sub_241860D60((uint64_t)v19);
  sub_24172588C((uint64_t)v19, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9960();
  sub_2418A861C();
  v22 = v47;
  LOBYTE(v2) = v48;
  v23 = v49;
  LOBYTE(v8) = v50;
  v25 = v51;
  v24 = v52;
  sub_24172590C((uint64_t)v15, (uint64_t)v12);
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v37;
  *(_BYTE *)(a1 + 24) = v36;
  *(_QWORD *)(a1 + 32) = v35;
  *(_BYTE *)(a1 + 40) = v34;
  v26 = v32;
  *(_QWORD *)(a1 + 48) = v33;
  *(_QWORD *)(a1 + 56) = v26;
  sub_241725764();
  v28 = v27;
  sub_24172590C((uint64_t)v12, a1 + *(int *)(v27 + 48));
  v29 = a1 + *(int *)(v28 + 64);
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 1;
  *(_QWORD *)(v29 + 16) = v22;
  *(_BYTE *)(v29 + 24) = v2;
  *(_QWORD *)(v29 + 32) = v23;
  *(_BYTE *)(v29 + 40) = v8;
  *(_QWORD *)(v29 + 48) = v25;
  *(_QWORD *)(v29 + 56) = v24;
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_241725830);
  return sub_24172588C((uint64_t)v12, (uint64_t (*)(_QWORD))sub_241725830);
}

uint64_t sub_241725650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = sub_2418A8C58();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_241725690();
  return sub_241725340(a1 + *(int *)(v2 + 44));
}

void sub_241725690()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C090)
  {
    sub_24172570C(255, &qword_25714C098, (uint64_t (*)(uint64_t))sub_241725764, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C090);
  }
}

void sub_24172570C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_241725764()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714C0A0)
  {
    sub_2417257D4();
    sub_241725830();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714C0A0);
  }
}

void sub_2417257D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C0A8)
  {
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C0A8);
  }
}

void sub_241725830()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C0B0)
  {
    sub_2418A987C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C0B0);
  }
}

uint64_t sub_24172588C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2417258C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241725830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24172590C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241725830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_241725954()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714C0B8;
  if (!qword_25714C0B8)
  {
    sub_24172599C();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_25714C0B8);
  }
  return result;
}

void sub_24172599C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C0C0)
  {
    sub_24172570C(255, &qword_25714C098, (uint64_t (*)(uint64_t))sub_241725764, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_241725A14();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C0C0);
  }
}

unint64_t sub_241725A14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714C0C8;
  if (!qword_25714C0C8)
  {
    sub_24172570C(255, &qword_25714C098, (uint64_t (*)(uint64_t))sub_241725764, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_25714C0C8);
  }
  return result;
}

_QWORD *sub_241725A74(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = *(int *)(a3 + 28);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    sub_241725C90(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v14 = *(int *)(a3 + 32);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    sub_241725CAC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2418A8EB0();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v20 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v21 = (char *)v15 + v20;
      v22 = (char *)v16 + v20;
      v23 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

void sub_241725C90(uint64_t a1)
{
  sub_24172570C(a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
}

void sub_241725CAC(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
}

uint64_t sub_241725CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  sub_241725C90(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 32);
  sub_241725CAC(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2418A8EB0();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v6 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
  v10 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t sub_241725DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(int *)(a3 + 28);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  sub_241725C90(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v12 = *(int *)(a3 + 32);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  sub_241725CAC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2418A8EB0();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v18 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v19 = (char *)v13 + v18;
    v20 = (char *)v14 + v18;
    v21 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_241725FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_24172588C(a1 + v6, (uint64_t (*)(_QWORD))sub_241725C90);
    sub_241725C90(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = *(int *)(a3 + 32);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_24172588C(a1 + v10, (uint64_t (*)(_QWORD))sub_241725CAC);
    sub_241725CAC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v16 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v17 = (char *)v11 + v16;
      v18 = (char *)v12 + v16;
      v19 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2417261F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  sub_241725C90(0);
  v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = *(int *)(a3 + 32);
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  sub_241725CAC(0);
  v17 = v16;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_2418A8EB0();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v14, v15, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
    }
    v21 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v22 = &v14[v21];
    v23 = &v15[v21];
    v24 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2417263C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 28);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_24172588C(a1 + v8, (uint64_t (*)(_QWORD))sub_241725C90);
    sub_241725C90(0);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v9, v10, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    v14 = *(int *)(a3 + 32);
    v15 = (char *)(a1 + v14);
    v16 = (char *)(a2 + v14);
    sub_24172588C(a1 + v14, (uint64_t (*)(_QWORD))sub_241725CAC);
    sub_241725CAC(0);
    v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2418A8EB0();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      v22 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v23 = &v15[v22];
      v24 = &v16[v22];
      v25 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417265D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417265E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      sub_24172570C(0, qword_25714C0E0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2417266B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417266BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      sub_24172570C(0, qword_25714C0E0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for IntroPhaseBulletView()
{
  uint64_t result;

  result = qword_25714C140;
  if (!qword_25714C140)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417267C4()
{
  unint64_t v0;
  unint64_t v1;

  sub_241725C90(319);
  if (v0 <= 0x3F)
  {
    sub_241725CAC(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_241726860()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241726870@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  _QWORD v43[2];
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;

  v48 = a2;
  v3 = sub_2418A8F7C();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728634(0);
  v43[1] = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417285A8(0);
  v12 = v11;
  v47 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v44 = (char *)v43 - v18;
  v19 = type metadata accessor for IntroPhaseSpecs();
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417280AC(0);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v27 = (char *)v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)v43 - v29;
  type metadata accessor for IntroPhaseBulletView();
  v49 = a1;
  sub_241861064((uint64_t)v22);
  LOBYTE(a1) = sub_2418A879C();
  sub_24172588C((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  if ((a1 & 1) != 0)
  {
    sub_2417280C8(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  }
  else
  {
    *(_QWORD *)v30 = sub_2418A8C58();
    *((_QWORD *)v30 + 1) = 0;
    v30[16] = 1;
    sub_241728944(0, &qword_25714C2A8, sub_2417280EC);
    sub_241726C4C((uint64_t)&v30[*(int *)(v32 + 44)]);
    sub_2417280C8(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v30, 0, 1, v33);
  }
  v34 = sub_2418A8C64();
  sub_241861064((uint64_t)v22);
  sub_24172588C((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  *(_QWORD *)v10 = v34;
  *((_QWORD *)v10 + 1) = 0x4008000000000000;
  v10[16] = 0;
  sub_241728944(0, &qword_25714C2B0, sub_2417286DC);
  sub_24172718C(v49, (uint64_t)&v10[*(int *)(v35 + 44)]);
  sub_2418A8F64();
  sub_24172159C(&qword_25714C288, (uint64_t (*)(uint64_t))sub_241728634, MEMORY[0x24BDF4700]);
  sub_2418A942C();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v46);
  sub_24172588C((uint64_t)v10, (uint64_t (*)(_QWORD))sub_241728634);
  v36 = v47;
  v37 = v44;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v16, v12);
  sub_2417289A8((uint64_t)v30, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_2417280AC);
  v38 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v38(v16, v37, v12);
  v39 = v48;
  sub_2417289A8((uint64_t)v27, v48, (uint64_t (*)(_QWORD))sub_2417280AC);
  sub_241728040();
  v38((char *)(v39 + *(int *)(v40 + 48)), v16, v12);
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v37, v12);
  sub_24172588C((uint64_t)v30, (uint64_t (*)(_QWORD))sub_2417280AC);
  v41(v16, v12);
  return sub_24172588C((uint64_t)v27, (uint64_t (*)(_QWORD))sub_2417280AC);
}

uint64_t sub_241726C4C@<X0>(uint64_t a1@<X8>)
{
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = (void (*)(uint64_t))MEMORY[0x24BDF1088];
  sub_241728250(0, &qword_25714C1C0, sub_241728184, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v14 - v9;
  sub_241726D78((uint64_t)&v14 - v9);
  sub_241728BBC((uint64_t)v10, (uint64_t)v7, &qword_25714C1C0, sub_241728184, v2);
  sub_241728BBC((uint64_t)v7, a1, &qword_25714C1C0, sub_241728184, v2);
  sub_241728108();
  v12 = a1 + *(int *)(v11 + 48);
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  sub_241728C0C((uint64_t)v10, &qword_25714C1C0, sub_241728184, v2);
  return sub_241728C0C((uint64_t)v7, &qword_25714C1C0, sub_241728184, v2);
}

uint64_t sub_241726D78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  unsigned int *v30;
  char *v31;
  uint64_t v32;
  uint64_t KeyPath;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;

  v50 = a1;
  v2 = sub_2418A91E0();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v41 - v8;
  v43 = type metadata accessor for IntroPhaseSpecs();
  v11 = MEMORY[0x24BDAC7A8](v43, v10);
  v48 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v41 - v14;
  v16 = sub_2418A966C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417281A0(0);
  v49 = v21;
  v47 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v22);
  v45 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728184(0);
  v46 = v24;
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v51) = *(_BYTE *)(v1 + 32);
  Symbol.image.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v20, *MEMORY[0x24BDF3FD0], v16);
  v42 = sub_2418A9690();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  v28 = sub_2418A95DC();
  type metadata accessor for IntroPhaseBulletView();
  sub_241861064((uint64_t)v15);
  sub_2418A9168();
  v29 = sub_2418A879C();
  v30 = (unsigned int *)MEMORY[0x24BDF17C8];
  if ((v29 & 1) == 0)
    v30 = (unsigned int *)MEMORY[0x24BDF17D0];
  v31 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v44, *v30, v2);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v31, v2);
  v32 = sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  KeyPath = swift_getKeyPath();
  v51 = (unint64_t)v42;
  LOWORD(v52) = 1;
  *((_QWORD *)&v52 + 1) = v28;
  *(_QWORD *)&v53 = KeyPath;
  *((_QWORD *)&v53 + 1) = v32;
  sub_241728234(0);
  sub_241728434(&qword_25714C208, (uint64_t (*)(uint64_t))sub_241728234, sub_241728410, sub_24172858C);
  v34 = v45;
  sub_2418A9498();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v35 = v48;
  sub_241861064(v48);
  sub_24172588C(v35, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  sub_2418A9960();
  sub_2418A861C();
  v36 = v47;
  v37 = v49;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v27, v34, v49);
  v38 = &v27[*(int *)(v46 + 36)];
  v39 = v52;
  *(_OWORD *)v38 = v51;
  *((_OWORD *)v38 + 1) = v39;
  *((_OWORD *)v38 + 2) = v53;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v37);
  sub_241728B10();
  sub_2418A9414();
  return sub_24172588C((uint64_t)v27, (uint64_t (*)(_QWORD))sub_241728184);
}

uint64_t sub_24172718C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *);
  char v74;
  char v75;
  char v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  unsigned int v79;
  unsigned int v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t KeyPath;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  unsigned int v109;
  unsigned int v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _OWORD *v115;
  uint64_t (*v116)(void);
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  void (*v150)(uint64_t, uint64_t);
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  _OWORD *v155;
  uint64_t (*v156)(void);
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v171;
  _QWORD *v172;
  void (*v173)(char *, char *, uint64_t);
  void (*v174)(uint64_t, uint64_t);
  unsigned int v175;
  void (*v176)(char *, uint64_t, uint64_t);
  void (*v177)(char *);
  char *v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(char *, char *, uint64_t);
  unsigned int v182;
  void (*v183)(char *, uint64_t, uint64_t);
  unsigned int v184;
  char *v185;
  unint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  _OWORD v221[11];
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  _OWORD v232[10];
  uint64_t v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  uint64_t v237;
  char v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  uint64_t v243;
  char v244;

  v199 = a2;
  v3 = sub_2418A88D4();
  v4 = (void (*)(uint64_t))MEMORY[0x24BDEDB60];
  MEMORY[0x24BDAC7A8](v3, v5);
  v210 = (char *)&v171 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = sub_2418A84E4();
  v189 = *(_QWORD *)(v208 - 8);
  v8 = MEMORY[0x24BDAC7A8](v208, v7);
  v207 = (char *)&v171 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v205 = (uint64_t)&v171 - v11;
  v209 = sub_2418A99B4();
  v191 = *(_QWORD *)(v209 - 8);
  v13 = MEMORY[0x24BDAC7A8](v209, v12);
  v196 = (char *)&v171 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v190 = (char *)&v171 - v16;
  v200 = sub_2418A91E0();
  v180 = *(_QWORD *)(v200 - 8);
  v18 = MEMORY[0x24BDAC7A8](v200, v17);
  v192 = (char *)&v171 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v193 = (char *)&v171 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v178 = (char *)&v171 - v25;
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (char *)&v171 - v27;
  sub_241728250(0, &qword_25714C260, sub_2417287EC, v4);
  v202 = v29;
  v31 = MEMORY[0x24BDAC7A8](v29, v30);
  v198 = (uint64_t)&v171 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v197 = (uint64_t)&v171 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v194 = (char *)&v171 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v195 = (uint64_t)&v171 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v187 = (char *)&v171 - v44;
  MEMORY[0x24BDAC7A8](v43, v45);
  v206 = (uint64_t)&v171 - v46;
  v47 = type metadata accessor for IntroPhaseSpecs();
  v49 = MEMORY[0x24BDAC7A8](v47, v48);
  v188 = (uint64_t)&v171 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x24BDAC7A8](v49, v51);
  v54 = (char *)&v171 - v53;
  MEMORY[0x24BDAC7A8](v52, v55);
  v57 = (char *)&v171 - v56;
  sub_241728780();
  v60 = MEMORY[0x24BDAC7A8](v58, v59);
  v204 = (uint64_t)&v171 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v60, v62);
  v64 = (char *)&v171 - v63;
  v179 = type metadata accessor for IntroPhaseBulletView();
  v65 = (char *)a1 + *(int *)(v179 + 32);
  sub_241861064((uint64_t)v57);
  v201 = v47;
  LOBYTE(v4) = sub_2418A879C();
  sub_24172588C((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  v203 = v64;
  if ((v4 & 1) != 0)
  {
    sub_241726D78((uint64_t)v64);
    sub_241728250(0, &qword_25714C1C0, sub_241728184, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v64, 0, 1, v66);
  }
  else
  {
    sub_241728250(0, &qword_25714C1C0, sub_241728184, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v64, 1, 1, v67);
  }
  v68 = a1[1];
  *(_QWORD *)&v232[0] = *a1;
  *((_QWORD *)&v232[0] + 1) = v68;
  v186 = sub_241721040();
  swift_bridgeObjectRetain();
  v69 = sub_2418A92D0();
  v172 = a1;
  v70 = v69;
  v72 = v71;
  v177 = v73;
  v75 = v74 & 1;
  v185 = v65;
  sub_241861064((uint64_t)v54);
  sub_2418A9144();
  v76 = sub_2418A879C();
  v77 = v180;
  v78 = *(void (**)(char *, uint64_t, uint64_t))(v180 + 104);
  v183 = v78;
  v79 = *MEMORY[0x24BDF17C8];
  v182 = *MEMORY[0x24BDF17C8];
  v80 = *MEMORY[0x24BDF17D0];
  v184 = *MEMORY[0x24BDF17D0];
  if ((v76 & 1) != 0)
    v81 = v79;
  else
    v81 = v80;
  v82 = v178;
  v83 = v200;
  v78(v178, v81, v200);
  v181 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
  v181(v28, v82, v83);
  sub_2418A91F8();
  swift_release();
  v180 = *(_QWORD *)(v77 + 8);
  ((void (*)(char *, uint64_t))v180)(v28, v83);
  sub_24172588C((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  v84 = sub_2418A9294();
  v86 = v85;
  v88 = v87 & 1;
  sub_2417289EC(v70, v72, v75);
  swift_release();
  swift_bridgeObjectRelease();
  sub_2418A9198();
  v89 = sub_2418A9258();
  v91 = v90;
  v93 = v92 & 1;
  sub_2417289EC(v84, v86, v88);
  swift_bridgeObjectRelease();
  LODWORD(v232[0]) = sub_2418A8E68();
  v94 = sub_2418A9270();
  v96 = v95;
  v98 = v97;
  LOBYTE(v83) = v99 & 1;
  sub_2417289EC(v89, v91, v93);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v239 = v94;
  v240 = v96;
  v241 = v83;
  v242 = v98;
  v243 = KeyPath;
  v244 = 0;
  sub_2418A996C();
  sub_24185DB94(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v232, 0.0, 1, 0.0, 1);
  sub_2417289EC(v94, v96, v83);
  swift_release();
  swift_bridgeObjectRelease();
  v228 = v232[6];
  v229 = v232[7];
  v230 = v232[8];
  v231 = v232[9];
  v224 = v232[2];
  v225 = v232[3];
  v226 = v232[4];
  v227 = v232[5];
  v222 = v232[0];
  v223 = v232[1];
  v101 = v172;
  v179 = (uint64_t)v172 + *(int *)(v179 + 28);
  v102 = v205;
  sub_241861034(v205);
  LODWORD(v178) = *MEMORY[0x24BDEB3F0];
  v103 = v189;
  v177 = *(void (**)(char *))(v189 + 104);
  v104 = v207;
  v105 = v208;
  v177(v207);
  LOBYTE(v89) = sub_2418A84D8();
  v106 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
  v174 = v106;
  v106((uint64_t)v104, v105);
  v106(v102, v105);
  v107 = v191;
  v108 = *(void (**)(char *, uint64_t, uint64_t))(v191 + 104);
  v176 = v108;
  v109 = *MEMORY[0x24BDF5098];
  v175 = *MEMORY[0x24BDF5098];
  v110 = *MEMORY[0x24BDF50D0];
  LODWORD(v189) = *MEMORY[0x24BDF50D0];
  if ((v89 & 1) != 0)
    v111 = v109;
  else
    v111 = v110;
  v112 = v190;
  v113 = v209;
  v108(v190, v111, v209);
  v173 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
  v114 = (uint64_t)v210;
  v173(v210, v112, v113);
  v115 = v187;
  v116 = MEMORY[0x24BDEDB60];
  sub_2417289A8(v114, (uint64_t)&v187[*(int *)(v202 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  v117 = v229;
  v115[6] = v228;
  v115[7] = v117;
  v118 = v231;
  v115[8] = v230;
  v115[9] = v118;
  v119 = v225;
  v115[2] = v224;
  v115[3] = v119;
  v120 = v227;
  v115[4] = v226;
  v115[5] = v120;
  v121 = v223;
  *v115 = v222;
  v115[1] = v121;
  sub_241728A04((uint64_t)&v222);
  sub_24172588C(v114, (uint64_t (*)(_QWORD))v116);
  v191 = *(_QWORD *)(v107 + 8);
  ((void (*)(char *, uint64_t))v191)(v112, v113);
  sub_241728A60((uint64_t)&v222);
  sub_241728AAC((uint64_t)v115, v206);
  v122 = v101[3];
  *(_QWORD *)&v221[0] = v101[2];
  *((_QWORD *)&v221[0] + 1) = v122;
  swift_bridgeObjectRetain();
  v123 = sub_2418A92D0();
  v125 = v124;
  v127 = v126 & 1;
  v128 = v188;
  sub_241861064(v188);
  sub_2418A9144();
  if ((sub_2418A879C() & 1) != 0)
    v129 = v182;
  else
    v129 = v184;
  v130 = v192;
  v131 = v200;
  v183(v192, v129, v200);
  v132 = v193;
  v181(v193, v130, v131);
  sub_2418A91F8();
  swift_release();
  ((void (*)(char *, uint64_t))v180)(v132, v131);
  sub_24172588C(v128, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  v133 = sub_2418A9294();
  v135 = v134;
  v137 = v136 & 1;
  sub_2417289EC(v123, v125, v127);
  swift_release();
  swift_bridgeObjectRelease();
  LODWORD(v221[0]) = sub_2418A8E74();
  v138 = sub_2418A9270();
  v140 = v139;
  v142 = v141;
  v144 = v143 & 1;
  sub_2417289EC(v133, v135, v137);
  swift_bridgeObjectRelease();
  v145 = swift_getKeyPath();
  v233 = v138;
  v234 = v140;
  v235 = v144;
  v236 = v142;
  v237 = v145;
  v238 = 0;
  sub_2418A996C();
  sub_24185DB94(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v221, 0.0, 1, 0.0, 1);
  sub_2417289EC(v138, v140, v144);
  swift_release();
  swift_bridgeObjectRelease();
  v217 = v221[6];
  v218 = v221[7];
  v219 = v221[8];
  v220 = v221[9];
  v213 = v221[2];
  v214 = v221[3];
  v215 = v221[4];
  v216 = v221[5];
  v211 = v221[0];
  v212 = v221[1];
  v146 = v205;
  sub_241861034(v205);
  v147 = v207;
  v148 = v208;
  ((void (*)(char *, _QWORD, uint64_t))v177)(v207, v178, v208);
  LOBYTE(v130) = sub_2418A84D8();
  v149 = v147;
  v150 = v174;
  v174((uint64_t)v149, v148);
  v150(v146, v148);
  if ((v130 & 1) != 0)
    v151 = v175;
  else
    v151 = v189;
  v152 = v196;
  v153 = v209;
  v176(v196, v151, v209);
  v154 = (uint64_t)v210;
  v173(v210, v152, v153);
  v155 = v194;
  v156 = MEMORY[0x24BDEDB60];
  sub_2417289A8(v154, (uint64_t)&v194[*(int *)(v202 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  v157 = v218;
  v155[6] = v217;
  v155[7] = v157;
  v158 = v220;
  v155[8] = v219;
  v155[9] = v158;
  v159 = v214;
  v155[2] = v213;
  v155[3] = v159;
  v160 = v216;
  v155[4] = v215;
  v155[5] = v160;
  v161 = v212;
  *v155 = v211;
  v155[1] = v161;
  sub_241728A04((uint64_t)&v211);
  sub_24172588C(v154, (uint64_t (*)(_QWORD))v156);
  ((void (*)(char *, uint64_t))v191)(v152, v153);
  sub_241728A60((uint64_t)&v211);
  v162 = v195;
  sub_241728AAC((uint64_t)v155, v195);
  v163 = v204;
  sub_2417289A8((uint64_t)v203, v204, (uint64_t (*)(_QWORD))sub_241728780);
  v164 = v206;
  v165 = v197;
  sub_241728BBC(v206, v197, &qword_25714C260, sub_2417287EC, (void (*)(uint64_t))v156);
  v166 = v198;
  sub_241728BBC(v162, v198, &qword_25714C260, sub_2417287EC, (void (*)(uint64_t))v156);
  v167 = v199;
  sub_2417289A8(v163, v199, (uint64_t (*)(_QWORD))sub_241728780);
  sub_2417286F8();
  v169 = v168;
  sub_241728BBC(v165, v167 + *(int *)(v168 + 48), &qword_25714C260, sub_2417287EC, (void (*)(uint64_t))v156);
  sub_241728BBC(v166, v167 + *(int *)(v169 + 64), &qword_25714C260, sub_2417287EC, (void (*)(uint64_t))v156);
  sub_241728C0C(v162, &qword_25714C260, sub_2417287EC, (void (*)(uint64_t))v156);
  sub_241728C0C(v164, &qword_25714C260, sub_2417287EC, (void (*)(uint64_t))v156);
  sub_24172588C((uint64_t)v203, (uint64_t (*)(_QWORD))sub_241728780);
  sub_241728C0C(v166, &qword_25714C260, sub_2417287EC, (void (*)(uint64_t))v156);
  sub_241728C0C(v165, &qword_25714C260, sub_2417287EC, (void (*)(uint64_t))v156);
  return sub_24172588C(v204, (uint64_t (*)(_QWORD))sub_241728780);
}

uint64_t sub_241727E90@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = type metadata accessor for IntroPhaseSpecs();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728000(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241861064((uint64_t)v6);
  sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  *(_QWORD *)v10 = sub_2418A8B8C();
  *((_QWORD *)v10 + 1) = 0x402C000000000000;
  v10[16] = 0;
  sub_241728944(0, &qword_25714C298, sub_241728024);
  sub_241726870(v1, (uint64_t)&v10[*(int *)(v11 + 44)]);
  v12 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v13 = MEMORY[0x24269BDB4](v12);
  sub_2417289A8((uint64_t)v10, a1, (uint64_t (*)(_QWORD))sub_241728000);
  sub_2417288C0();
  *(_QWORD *)(a1 + *(int *)(v14 + 36)) = v13;
  return sub_24172588C((uint64_t)v10, (uint64_t (*)(_QWORD))sub_241728000);
}

void sub_241728000(uint64_t a1)
{
  sub_241728658(a1, &qword_25714C188, (uint64_t (*)(uint64_t))sub_241728024, &qword_25714C290, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF4480]);
}

void sub_241728024(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714C190, (uint64_t (*)(uint64_t))sub_241728040, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241728040()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714C198)
  {
    sub_2417280AC(255);
    sub_2417285A8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714C198);
  }
}

void sub_2417280AC(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714C1A0, (uint64_t (*)(uint64_t))sub_2417280C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2417280C8(uint64_t a1)
{
  sub_241728658(a1, &qword_25714C1A8, (uint64_t (*)(uint64_t))sub_2417280EC, &qword_25714C230, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
}

void sub_2417280EC(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714C1B0, (uint64_t (*)(uint64_t))sub_241728108, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241728108()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714C1B8)
  {
    sub_241728250(255, &qword_25714C1C0, sub_241728184, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714C1B8);
  }
}

void sub_241728184(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C1C8, sub_2417281A0);
}

void sub_2417281A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714C1D0)
  {
    sub_241728234(255);
    v5[0] = v2;
    v5[1] = sub_241728434(&qword_25714C208, (uint64_t (*)(uint64_t))sub_241728234, sub_241728410, sub_24172858C);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF3488], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714C1D0);
  }
}

void sub_241728234(uint64_t a1)
{
  sub_241728250(a1, &qword_25714C1D8, (void (*)(uint64_t))sub_2417282B8, (void (*)(uint64_t))sub_2417283A4);
}

void sub_241728250(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    v6 = sub_2418A87FC();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_2417282B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C1E0)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C1E8, MEMORY[0x24BDF4108], MEMORY[0x24BDEEC60], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C1E0);
  }
}

void sub_24172835C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_2417283A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C1F8)
  {
    sub_24172887C(255, (unint64_t *)&qword_25714C200, MEMORY[0x24BDF1948], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2418A9090();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C1F8);
  }
}

uint64_t sub_241728410()
{
  return sub_241728434(&qword_25714C210, (uint64_t (*)(uint64_t))sub_2417282B8, (uint64_t (*)(void))sub_2417284A4, (uint64_t (*)(void))sub_241728524);
}

uint64_t sub_241728434(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2417284A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25714C218;
  if (!qword_25714C218)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C1E8, MEMORY[0x24BDF4108], MEMORY[0x24BDEEC60], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25714C218);
  }
  return result;
}

unint64_t sub_241728524()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714C220;
  if (!qword_25714C220)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF0710], v1);
    atomic_store(result, (unint64_t *)&qword_25714C220);
  }
  return result;
}

uint64_t sub_24172858C()
{
  return sub_24172159C(&qword_25714C228, (uint64_t (*)(uint64_t))sub_2417283A4, MEMORY[0x24BDF1028]);
}

void sub_2417285A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714C238)
  {
    sub_241728634(255);
    v5[0] = v2;
    v5[1] = sub_24172159C(&qword_25714C288, (uint64_t (*)(uint64_t))sub_241728634, MEMORY[0x24BDF4700]);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2F10], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714C238);
  }
}

void sub_241728634(uint64_t a1)
{
  sub_241728658(a1, &qword_25714C240, (uint64_t (*)(uint64_t))sub_2417286DC, &qword_25714C280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
}

void sub_241728658(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (!*a2)
  {
    v10 = a3(255);
    v11 = sub_24172159C(a4, a3, MEMORY[0x24BDF5428]);
    v12 = a5(a1, v10, v11);
    if (!v13)
      atomic_store(v12, a2);
  }
}

void sub_2417286DC(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714C248, (uint64_t (*)(uint64_t))sub_2417286F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417286F8()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714C250)
  {
    sub_241728780();
    sub_241728250(255, &qword_25714C260, sub_2417287EC, (void (*)(uint64_t))MEMORY[0x24BDEDB60]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714C250);
  }
}

void sub_241728780()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C258)
  {
    sub_241728250(255, &qword_25714C1C0, sub_241728184, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C258);
  }
}

void sub_2417287EC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C268, (void (*)(uint64_t))sub_241728808);
}

void sub_241728808()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C270)
  {
    sub_24172887C(255, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C270);
  }
}

void sub_24172887C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_2417288C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C2A0)
  {
    sub_241728000(255);
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C2A0);
  }
}

void sub_241728944(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2418A86E8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2417289A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2417289EC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_241728A04(uint64_t a1)
{
  sub_241728A50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_241728A50(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_241728A60(uint64_t a1)
{
  sub_2417289EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241728AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241728250(0, &qword_25714C260, sub_2417287EC, (void (*)(uint64_t))MEMORY[0x24BDEDB60]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241728B10()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_25714C2B8;
  if (!qword_25714C2B8)
  {
    sub_241728184(255);
    v2 = v1;
    sub_241728234(255);
    v4[2] = v3;
    v4[3] = sub_241728434(&qword_25714C208, (uint64_t (*)(uint64_t))sub_241728234, sub_241728410, sub_24172858C);
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_25714C2B8);
  }
  return result;
}

uint64_t sub_241728BBC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v7;

  sub_241728250(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_241728C0C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v5;

  sub_241728250(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_241728C48()
{
  return sub_241728434(&qword_25714C2C0, (uint64_t (*)(uint64_t))sub_2417288C0, sub_241728C7C, (uint64_t (*)(void))sub_241728524);
}

uint64_t sub_241728C7C()
{
  return sub_24172159C(&qword_25714C2C8, (uint64_t (*)(uint64_t))sub_241728000, MEMORY[0x24BDF4498]);
}

ValueMetadata *type metadata accessor for BlurPipeline()
{
  return &type metadata for BlurPipeline;
}

uint64_t StateOfMindEntryView.init(model:presentationStyle:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_QWORD *)a3 = sub_241728CF8;
  *(_QWORD *)(a3 + 8) = result;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = nullsub_1;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = v3;
  return result;
}

uint64_t StateOfMindEntryView.init(model:presentationStyle:onCompletion:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;

  v5 = *a2;
  *(_QWORD *)a5 = sub_241728CF8;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  *(_BYTE *)(a5 + 40) = v5;
  return result;
}

uint64_t sub_241728CF8()
{
  return swift_retain();
}

uint64_t StateOfMindEntryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v8;

  v4 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v5 = *(_BYTE *)(v1 + 40);
  sub_241728DF0();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  swift_retain();
  v6 = sub_2418A8550();
  sub_241728DF8();
  swift_release();
  v8 = v5;
  swift_retain();
  return sub_241754850(v6, v4, v3, &v8, a1);
}

uint64_t sub_241728DF0()
{
  return swift_retain();
}

uint64_t sub_241728DF8()
{
  return swift_release();
}

uint64_t sub_241728E00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241728E10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v8;

  v4 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v5 = *(_BYTE *)(v1 + 40);
  sub_241728DF0();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  swift_retain();
  v6 = sub_2418A8550();
  sub_241728DF8();
  swift_release();
  v8 = v5;
  swift_retain();
  return sub_241754850(v6, v4, v3, &v8, a1);
}

uint64_t destroy for StateOfMindEntryView()
{
  sub_241728DF8();
  return swift_release();
}

uint64_t initializeWithCopy for StateOfMindEntryView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_241728DF0();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StateOfMindEntryView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_241728DF0();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_241728DF8();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for StateOfMindEntryView(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_241728DF8();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateOfMindEntryView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindEntryView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryView()
{
  return &type metadata for StateOfMindEntryView;
}

uint64_t sub_24172912C()
{
  return sub_24172159C(&qword_25714C2D8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindEntryView_iOS, (uint64_t)&unk_2418D26D0);
}

_QWORD *sub_241729158(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  void (*v93)(char *, char *, uint64_t);
  _QWORD *v94;
  int *v95;
  uint64_t v96;
  void (*v97)(char *, char *);
  uint64_t v98;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = v6[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)v3 + v9);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v94 = v3;
      v95 = v6;
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      v96 = v13;
      if (v14((char *)v11, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v16 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v17 = v16[5];
      v18 = (char *)v10 + v17;
      v19 = (char *)v11 + v17;
      v20 = sub_2418A87B4();
      v97 = *(void (**)(char *, char *))(*(_QWORD *)(v20 - 8) + 16);
      v98 = v20;
      v97(v18, v19);
      *((_BYTE *)v10 + v16[6]) = *((_BYTE *)v11 + v16[6]);
      v21 = v16[7];
      v22 = (char *)v10 + v21;
      v23 = (char *)v11 + v21;
      v24 = sub_2418A84E4();
      v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v93(v22, v23, v24);
      v25 = v16[8];
      v26 = (char *)v10 + v25;
      v27 = (char *)v11 + v25;
      if (v14((char *)v11 + v25, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v26, v27, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v26, 0, 1, v12);
      }
      v29 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v98);
      v30 = v16[9];
      v31 = (char *)v10 + v30;
      v32 = (char *)v11 + v30;
      if (v14((char *)v11 + v30, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v31, v32, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v31, 0, 1, v12);
      }
      v34 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v98);
      v31[*(int *)(v34 + 24)] = v32[*(int *)(v34 + 24)];
      v35 = v16[10];
      v36 = (char *)v10 + v35;
      v37 = (char *)v11 + v35;
      if (v14((char *)v11 + v35, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v36, v37, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v36, 0, 1, v12);
      }
      v39 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v98);
      v40 = v16[11];
      v41 = (char *)v10 + v40;
      v42 = (char *)v11 + v40;
      if (v14((char *)v11 + v40, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v41, v42, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v41, 0, 1, v12);
      }
      v44 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v98);
      v45 = v16[12];
      v46 = (char *)v10 + v45;
      v47 = (char *)v11 + v45;
      if (v14((char *)v11 + v45, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v46, v47, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v46, 0, 1, v12);
      }
      v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v46[v49[5]], &v47[v49[5]], v98);
      v46[v49[6]] = v47[v49[6]];
      v93(&v46[v49[7]], &v47[v49[7]], v24);
      v50 = v16[13];
      v51 = (char *)v10 + v50;
      v52 = (char *)v11 + v50;
      if (v14((char *)v11 + v50, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v51, v52, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v51, 0, 1, v12);
      }
      v54 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v98);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v16[14];
      v56 = (char *)v10 + v55;
      v57 = (char *)v11 + v55;
      if (v14((char *)v11 + v55, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v56, v57, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v56, 0, 1, v12);
      }
      v59 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v98);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      v60 = v16[15];
      v61 = (char *)v10 + v60;
      v62 = (char *)v11 + v60;
      if (v14((char *)v11 + v60, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v61, v62, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v61, 0, 1, v12);
      }
      v64 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v98);
      v65 = v16[16];
      v66 = (char *)v10 + v65;
      v67 = (char *)v11 + v65;
      if (v14((char *)v11 + v65, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v66, v67, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v66, 0, 1, v12);
      }
      v69 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v98);
      v70 = v16[17];
      v71 = (char *)v10 + v70;
      v72 = (char *)v11 + v70;
      if (v14((char *)v11 + v70, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v71, v72, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v71, 0, 1, v12);
      }
      v74 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v98);
      v75 = v16[18];
      v76 = (char *)v10 + v75;
      v77 = (char *)v11 + v75;
      if (v14(v77, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v76, v77, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v76, 0, 1, v12);
      }
      v6 = v95;
      v79 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v98);
      v3 = v94;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v80 = v6[6];
    v81 = (_QWORD *)((char *)a1 + v80);
    v82 = (_QWORD *)((char *)v3 + v80);
    sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v83 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
    }
    else
    {
      *v81 = *v82;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v84 = v6[7];
    v85 = v6[8];
    v86 = (_QWORD *)((char *)a1 + v84);
    v87 = (_QWORD *)((char *)v3 + v84);
    v88 = v87[1];
    *v86 = *v87;
    v86[1] = v88;
    v89 = (_QWORD *)((char *)a1 + v85);
    v90 = (_QWORD *)((char *)v3 + v85);
    v91 = v90[1];
    *v89 = *v90;
    v89[1] = v91;
    *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)v3 + v6[9]);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241729C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v45 = a2;
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v5 + v9[5];
    v11 = sub_2418A87B4();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v10, v11);
    v13 = v5 + v9[7];
    v14 = sub_2418A84E4();
    v43 = *(void (**)(uint64_t))(*(_QWORD *)(v14 - 8) + 8);
    v44 = v14;
    v43(v13);
    v15 = v5 + v9[8];
    if (!v8(v15, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
    v16 = _s6StylesV8TimelineVMa(0);
    v12(v15 + *(int *)(v16 + 20), v11);
    v17 = v5 + v9[9];
    if (!v8(v17, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    v18 = _s6StylesV6NoDataVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    v19 = v5 + v9[10];
    if (!v8(v19, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    v20 = _s6StylesV11PlaceholderVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    v21 = v5 + v9[11];
    if (!v8(v21, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    v22 = _s6StylesV6SymbolVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    v23 = v5 + v9[12];
    if (!v8(v23, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    v24 = v7;
    v25 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v23 + *(int *)(v25 + 20), v11);
    v26 = *(int *)(v25 + 28);
    v27 = v24;
    ((void (*)(uint64_t, uint64_t))v43)(v23 + v26, v44);
    v28 = v5 + v9[13];
    if (!v8(v28, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v6);
    v29 = _s6StylesV5EmptyVMa(0);
    v12(v28 + *(int *)(v29 + 20), v11);
    v30 = v5 + v9[14];
    if (!v8(v30, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v6);
    v31 = _s6StylesV5DailyVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    v32 = v5 + v9[15];
    if (!v8(v32, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v32, v6);
    v33 = _s6StylesV9MomentaryVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    v34 = v5 + v9[16];
    if (!v8(v34, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v34, v6);
    v35 = _s6StylesV6HeaderVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    v36 = v5 + v9[17];
    if (!v8(v36, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v36, v6);
    v37 = _s6StylesV11ChartButtonVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
    v38 = v5 + v9[18];
    if (!v8(v38, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v38, v6);
    v39 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v38 + *(int *)(v39 + 20), v11);
    a2 = v45;
  }
  else
  {
    swift_release();
  }
  v40 = a1 + *(int *)(a2 + 24);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v41 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_24172A180(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  void (*v91)(char *, char *);
  uint64_t v92;
  int *v93;
  _QWORD *v94;
  uint64_t v95;
  unsigned int (*v96)(char *, uint64_t, uint64_t);
  void (*v97)(char *, char *, uint64_t);

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v93 = a3;
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    v94 = a2;
    v95 = v11;
    if (v96((char *)v9, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v13 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v14 = v13[5];
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = sub_2418A87B4();
    v97 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v97(v15, v16, v17);
    *((_BYTE *)v8 + v13[6]) = *((_BYTE *)v9 + v13[6]);
    v18 = v13[7];
    v19 = (char *)v8 + v18;
    v20 = (char *)v9 + v18;
    v21 = sub_2418A84E4();
    v91 = *(void (**)(char *, char *))(*(_QWORD *)(v21 - 8) + 16);
    v92 = v21;
    v91(v19, v20);
    v22 = v13[8];
    v23 = (char *)v8 + v22;
    v24 = (char *)v9 + v22;
    v25 = v96;
    if (v96((char *)v9 + v22, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v23, v24, v10);
      v25 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v23, 0, 1, v10);
    }
    v27 = _s6StylesV8TimelineVMa(0);
    v97(&v23[*(int *)(v27 + 20)], &v24[*(int *)(v27 + 20)], v17);
    v28 = v13[9];
    v29 = (char *)v8 + v28;
    v30 = (char *)v9 + v28;
    if (v25((char *)v9 + v28, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v29, v30, v10);
      v25 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v29, 0, 1, v10);
    }
    v32 = _s6StylesV6NoDataVMa(0);
    v97(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v17);
    v29[*(int *)(v32 + 24)] = v30[*(int *)(v32 + 24)];
    v33 = v13[10];
    v34 = (char *)v8 + v33;
    v35 = (char *)v9 + v33;
    if (v25((char *)v9 + v33, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v34, v35, v10);
      v25 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v34, 0, 1, v10);
    }
    v37 = _s6StylesV11PlaceholderVMa(0);
    v97(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v17);
    v38 = v13[11];
    v39 = (char *)v8 + v38;
    v40 = (char *)v9 + v38;
    if (v25((char *)v9 + v38, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v39, v40, v10);
      v25 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v39, 0, 1, v10);
    }
    v42 = _s6StylesV6SymbolVMa(0);
    v97(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v17);
    v43 = v13[12];
    v44 = (char *)v8 + v43;
    v45 = (char *)v9 + v43;
    if (v25((char *)v9 + v43, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v44, v45, v10);
      v25 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v44, 0, 1, v10);
    }
    v47 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v97(&v44[v47[5]], &v45[v47[5]], v17);
    v44[v47[6]] = v45[v47[6]];
    ((void (*)(char *, char *, uint64_t))v91)(&v44[v47[7]], &v45[v47[7]], v92);
    v48 = v13[13];
    v49 = (char *)v8 + v48;
    v50 = (char *)v9 + v48;
    if (v25((char *)v9 + v48, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v49, v50, v10);
      v25 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v49, 0, 1, v10);
    }
    v52 = _s6StylesV5EmptyVMa(0);
    v97(&v49[*(int *)(v52 + 20)], &v50[*(int *)(v52 + 20)], v17);
    v49[*(int *)(v52 + 24)] = v50[*(int *)(v52 + 24)];
    v53 = v13[14];
    v54 = (char *)v8 + v53;
    v55 = (char *)v9 + v53;
    if (v25((char *)v9 + v53, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v54, v55, v10);
      v25 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v54, 0, 1, v10);
    }
    v57 = _s6StylesV5DailyVMa(0);
    v97(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v17);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    v58 = v13[15];
    v59 = (char *)v8 + v58;
    v60 = (char *)v9 + v58;
    if (v25((char *)v9 + v58, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v59, v60, v10);
      v25 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v59, 0, 1, v10);
    }
    v62 = _s6StylesV9MomentaryVMa(0);
    v97(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v17);
    v63 = v13[16];
    v64 = (char *)v8 + v63;
    v65 = (char *)v9 + v63;
    if (v25((char *)v9 + v63, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v64, v65, v10);
      v25 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v64, 0, 1, v10);
    }
    v67 = _s6StylesV6HeaderVMa(0);
    v97(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v17);
    v68 = v13[17];
    v69 = (char *)v8 + v68;
    v70 = (char *)v9 + v68;
    if (v25((char *)v9 + v68, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v69, v70, v10);
      v25 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v69, 0, 1, v10);
    }
    v72 = _s6StylesV11ChartButtonVMa(0);
    v97(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v17);
    v73 = v13[18];
    v74 = (char *)v8 + v73;
    v75 = (char *)v9 + v73;
    if (v25(v75, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v74, v75, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v74, 0, 1, v10);
    }
    a3 = v93;
    v77 = _s6StylesV15LogButtonFooterVMa(0);
    v97(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v17);
    a2 = v94;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v78 = a3[6];
  v79 = (_QWORD *)((char *)a1 + v78);
  v80 = (_QWORD *)((char *)a2 + v78);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v81 = sub_2418A8658();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
  }
  else
  {
    *v79 = *v80;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v82 = a3[7];
  v83 = a3[8];
  v84 = (_QWORD *)((char *)a1 + v82);
  v85 = (_QWORD *)((char *)a2 + v82);
  v86 = v85[1];
  *v84 = *v85;
  v84[1] = v86;
  v87 = (_QWORD *)((char *)a1 + v83);
  v88 = (_QWORD *)((char *)a2 + v83);
  v89 = v88[1];
  *v87 = *v88;
  v87[1] = v89;
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_24172AC6C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  void (*v93)(char *, char *);
  uint64_t v94;
  int *v95;
  unsigned int (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  void (*v98)(char *, char *);
  uint64_t v99;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    sub_24172B778((uint64_t)a1 + v8, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      v97 = v12;
      v95 = a3;
      if (v96((char *)v10, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v15 = v14[5];
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_2418A87B4();
      v98 = *(void (**)(char *, char *))(*(_QWORD *)(v18 - 8) + 16);
      v99 = v18;
      v98(v16, v17);
      *((_BYTE *)v9 + v14[6]) = *((_BYTE *)v10 + v14[6]);
      v19 = v14[7];
      v20 = (char *)v9 + v19;
      v21 = (char *)v10 + v19;
      v22 = sub_2418A84E4();
      v93 = *(void (**)(char *, char *))(*(_QWORD *)(v22 - 8) + 16);
      v94 = v22;
      v93(v20, v21);
      v23 = v14[8];
      v24 = (char *)v9 + v23;
      v25 = (char *)v10 + v23;
      v26 = v96;
      if (v96((char *)v10 + v23, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v24, v25, v11);
        v26 = v96;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v24, 0, 1, v11);
      }
      v28 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v24[*(int *)(v28 + 20)], &v25[*(int *)(v28 + 20)], v99);
      v29 = v14[9];
      v30 = (char *)v9 + v29;
      v31 = (char *)v10 + v29;
      if (v26((char *)v10 + v29, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v30, v31, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v30, 0, 1, v11);
      }
      v33 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v99);
      v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
      v34 = v14[10];
      v35 = (char *)v9 + v34;
      v36 = (char *)v10 + v34;
      if (v26((char *)v10 + v34, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v35, v36, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v35, 0, 1, v11);
      }
      v38 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v99);
      v39 = v14[11];
      v40 = (char *)v9 + v39;
      v41 = (char *)v10 + v39;
      if (v26((char *)v10 + v39, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v40, v41, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v40, 0, 1, v11);
      }
      v43 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v99);
      v44 = v14[12];
      v45 = (char *)v9 + v44;
      v46 = (char *)v10 + v44;
      if (v26((char *)v10 + v44, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v45, v46, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v45, 0, 1, v11);
      }
      v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v45[v48[5]], &v46[v48[5]], v99);
      v45[v48[6]] = v46[v48[6]];
      ((void (*)(char *, char *, uint64_t))v93)(&v45[v48[7]], &v46[v48[7]], v94);
      v49 = v14[13];
      v50 = (char *)v9 + v49;
      v51 = (char *)v10 + v49;
      if (v26((char *)v10 + v49, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v50, v51, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v50, 0, 1, v11);
      }
      v53 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v99);
      v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
      v54 = v14[14];
      v55 = (char *)v9 + v54;
      v56 = (char *)v10 + v54;
      if (v26((char *)v10 + v54, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v55, v56, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v55, 0, 1, v11);
      }
      v58 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v99);
      v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
      v59 = v14[15];
      v60 = (char *)v9 + v59;
      v61 = (char *)v10 + v59;
      if (v26((char *)v10 + v59, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v60, v61, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v60, 0, 1, v11);
      }
      v63 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v99);
      v64 = v14[16];
      v65 = (char *)v9 + v64;
      v66 = (char *)v10 + v64;
      if (v26((char *)v10 + v64, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v65, v66, v11);
        v26 = v96;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v65, 0, 1, v11);
      }
      v68 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v99);
      v69 = v14[17];
      v70 = (char *)v9 + v69;
      v71 = (char *)v10 + v69;
      if (v26((char *)v10 + v69, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v70, v71, v11);
        v26 = v96;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v70, 0, 1, v11);
      }
      v73 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v99);
      v74 = v14[18];
      v75 = (char *)v9 + v74;
      v76 = (char *)v10 + v74;
      if (v26(v76, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v75, v76, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v75, 0, 1, v11);
      }
      v78 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v99);
      a3 = v95;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v79 = a3[6];
    v80 = (_QWORD *)((char *)a1 + v79);
    v81 = (_QWORD *)((char *)a2 + v79);
    v82 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038];
    sub_24172B778((uint64_t)a1 + v79, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038]);
    sub_24172570C(0, &qword_25714C2E0, v82, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v83 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v80, v81, v83);
    }
    else
    {
      *v80 = *v81;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v84 = a3[7];
  v85 = (_QWORD *)((char *)a1 + v84);
  v86 = (_QWORD *)((char *)a2 + v84);
  v87 = v86[1];
  *v85 = *v86;
  v85[1] = v87;
  swift_retain();
  swift_release();
  v88 = a3[8];
  v89 = (_QWORD *)((char *)a1 + v88);
  v90 = (_QWORD *)((char *)a2 + v88);
  v91 = v90[1];
  *v89 = *v90;
  v89[1] = v91;
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24172B778(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_24172570C(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

char *sub_24172B7BC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v90)(char *, char *);
  uint64_t v91;
  int *v92;
  char *v93;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t);
  void (*v96)(char *, char *, uint64_t);

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2418A8EB0();
    v15 = *(_QWORD *)(v14 - 8);
    v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v93 = a2;
    v94 = v15;
    if (v95(v11, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    v17 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v18 = v17[5];
    v19 = &v10[v18];
    v20 = &v11[v18];
    v21 = sub_2418A87B4();
    v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
    v96(v19, v20, v21);
    v10[v17[6]] = v11[v17[6]];
    v22 = v17[7];
    v23 = &v10[v22];
    v24 = &v11[v22];
    v25 = sub_2418A84E4();
    v90 = *(void (**)(char *, char *))(*(_QWORD *)(v25 - 8) + 32);
    v91 = v25;
    v90(v23, v24);
    v26 = v17[8];
    v27 = &v10[v26];
    v28 = &v11[v26];
    v29 = v95;
    if (v95(&v11[v26], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v27, v28, v14);
      v29 = v95;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v27, 0, 1, v14);
    }
    v31 = _s6StylesV8TimelineVMa(0);
    v96(&v27[*(int *)(v31 + 20)], &v28[*(int *)(v31 + 20)], v21);
    v32 = v17[9];
    v33 = &v10[v32];
    v34 = &v11[v32];
    v92 = a3;
    if (v29(&v11[v32], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v33, v34, v14);
      v29 = v95;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v33, 0, 1, v14);
    }
    v36 = _s6StylesV6NoDataVMa(0);
    v96(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v21);
    v33[*(int *)(v36 + 24)] = v34[*(int *)(v36 + 24)];
    v37 = v17[10];
    v38 = &v10[v37];
    v39 = &v11[v37];
    if (v29(&v11[v37], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v38, v39, v14);
      v29 = v95;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v38, 0, 1, v14);
    }
    v41 = _s6StylesV11PlaceholderVMa(0);
    v96(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v21);
    v42 = v17[11];
    v43 = &v10[v42];
    v44 = &v11[v42];
    if (v29(&v11[v42], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v43, v44, v14);
      v29 = v95;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v43, 0, 1, v14);
    }
    v46 = _s6StylesV6SymbolVMa(0);
    v96(&v43[*(int *)(v46 + 20)], &v44[*(int *)(v46 + 20)], v21);
    v47 = v17[12];
    v48 = &v10[v47];
    v49 = &v11[v47];
    if (v29(&v11[v47], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v48, v49, v14);
      v29 = v95;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v48, 0, 1, v14);
    }
    v51 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v96(&v48[v51[5]], &v49[v51[5]], v21);
    v48[v51[6]] = v49[v51[6]];
    ((void (*)(char *, char *, uint64_t))v90)(&v48[v51[7]], &v49[v51[7]], v91);
    v52 = v17[13];
    v53 = &v10[v52];
    v54 = &v11[v52];
    if (v29(&v11[v52], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v53, v54, v14);
      v29 = v95;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v53, 0, 1, v14);
    }
    v56 = _s6StylesV5EmptyVMa(0);
    v96(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v21);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = v17[14];
    v58 = &v10[v57];
    v59 = &v11[v57];
    if (v29(&v11[v57], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v58, v59, v14);
      v29 = v95;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v58, 0, 1, v14);
    }
    v61 = _s6StylesV5DailyVMa(0);
    v96(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v21);
    v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
    v62 = v17[15];
    v63 = &v10[v62];
    v64 = &v11[v62];
    if (v29(&v11[v62], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v63, v64, v14);
      v29 = v95;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v63, 0, 1, v14);
    }
    a3 = v92;
    v66 = _s6StylesV9MomentaryVMa(0);
    v96(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v21);
    v67 = v17[16];
    v68 = &v10[v67];
    v69 = &v11[v67];
    if (v29(&v11[v67], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v68, v69, v14);
      v29 = v95;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v68, 0, 1, v14);
    }
    v71 = _s6StylesV6HeaderVMa(0);
    v96(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v21);
    v72 = v17[17];
    v73 = &v10[v72];
    v74 = &v11[v72];
    if (v29(&v11[v72], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v73, v74, v14);
      v29 = v95;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v73, 0, 1, v14);
    }
    v76 = _s6StylesV11ChartButtonVMa(0);
    v96(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v21);
    v77 = v17[18];
    v78 = &v10[v77];
    v79 = &v11[v77];
    if (v29(v79, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v78, v79, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v78, 0, 1, v14);
    }
    v81 = _s6StylesV15LogButtonFooterVMa(0);
    v96(&v78[*(int *)(v81 + 20)], &v79[*(int *)(v81 + 20)], v21);
    swift_storeEnumTagMultiPayload();
    a2 = v93;
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v82 = a3[6];
  v83 = &a1[v82];
  v84 = &a2[v82];
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v86 = v85;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v87 = sub_2418A8658();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v83, v84, v87);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  v88 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v88] = *(_OWORD *)&a2[v88];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *sub_24172C27C(char *a1, char *a2, int *a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t (*v86)(uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v91)(char *, char *);
  uint64_t v92;
  int *v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  void (*v96)(char *, char *);
  uint64_t v97;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    sub_24172B778((uint64_t)&a1[v10], &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v14 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2418A8EB0();
      v16 = *(_QWORD *)(v15 - 8);
      v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v95 = v16;
      v93 = a3;
      if (v94(v12, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v12, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      }
      v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v19 = v18[5];
      v20 = &v11[v19];
      v21 = &v12[v19];
      v22 = sub_2418A87B4();
      v96 = *(void (**)(char *, char *))(*(_QWORD *)(v22 - 8) + 32);
      v97 = v22;
      v96(v20, v21);
      v11[v18[6]] = v12[v18[6]];
      v23 = v18[7];
      v24 = &v11[v23];
      v25 = &v12[v23];
      v26 = sub_2418A84E4();
      v91 = *(void (**)(char *, char *))(*(_QWORD *)(v26 - 8) + 32);
      v92 = v26;
      v91(v24, v25);
      v27 = v18[8];
      v28 = &v11[v27];
      v29 = &v12[v27];
      v30 = v94;
      if (v94(&v12[v27], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v28, v29, v15);
        v30 = v94;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v28, 0, 1, v15);
      }
      v32 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v97);
      v33 = v18[9];
      v34 = &v11[v33];
      v35 = &v12[v33];
      if (v30(&v12[v33], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v34, v35, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v34, 0, 1, v15);
      }
      v37 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v97);
      v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
      v38 = v18[10];
      v39 = &v11[v38];
      v40 = &v12[v38];
      if (v30(&v12[v38], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v39, v40, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v39, 0, 1, v15);
      }
      v42 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v97);
      v43 = v18[11];
      v44 = &v11[v43];
      v45 = &v12[v43];
      if (v30(&v12[v43], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v44, v45, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v44, 0, 1, v15);
      }
      v47 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v97);
      v48 = v18[12];
      v49 = &v11[v48];
      v50 = &v12[v48];
      if (v30(&v12[v48], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v49, v50, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v49, 0, 1, v15);
      }
      v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v49[v52[5]], &v50[v52[5]], v97);
      v49[v52[6]] = v50[v52[6]];
      ((void (*)(char *, char *, uint64_t))v91)(&v49[v52[7]], &v50[v52[7]], v92);
      v53 = v18[13];
      v54 = &v11[v53];
      v55 = &v12[v53];
      if (v30(&v12[v53], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v54, v55, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v54, 0, 1, v15);
      }
      v57 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v97);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      v58 = v18[14];
      v59 = &v11[v58];
      v60 = &v12[v58];
      if (v30(&v12[v58], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v59, v60, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v59, 0, 1, v15);
      }
      v62 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v97);
      v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
      v63 = v18[15];
      v64 = &v11[v63];
      v65 = &v12[v63];
      if (v30(&v12[v63], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v64, v65, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v64, 0, 1, v15);
      }
      v67 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v97);
      v68 = v18[16];
      v69 = &v11[v68];
      v70 = &v12[v68];
      if (v30(&v12[v68], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v69, v70, v15);
        v30 = v94;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v69, 0, 1, v15);
      }
      v72 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v97);
      v73 = v18[17];
      v74 = &v11[v73];
      v75 = &v12[v73];
      if (v30(&v12[v73], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v74, v75, v15);
        v30 = v94;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v74, 0, 1, v15);
      }
      v77 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v97);
      v78 = v18[18];
      v79 = &v11[v78];
      v80 = &v12[v78];
      if (v30(v80, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v79, v80, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v79, 0, 1, v15);
      }
      v82 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v97);
      swift_storeEnumTagMultiPayload();
      a3 = v93;
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    v83 = a3[6];
    v84 = &a1[v83];
    v85 = &a2[v83];
    v86 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038];
    sub_24172B778((uint64_t)&a1[v83], &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038]);
    sub_24172570C(0, &qword_25714C2E0, v86, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v88 = v87;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v89 = sub_2418A8658();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v84, v85, v89);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    }
  }
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  swift_release();
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  swift_release();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24172CD64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24172CD70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_24172CE84()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24172CE90(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_8:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
}

uint64_t _s15EntryNoDataViewVMa()
{
  uint64_t result;

  result = qword_25714C348;
  if (!qword_25714C348)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24172CFDC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_24172D0E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24172D0F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v2 = v1;
  v41 = a1;
  sub_241730358(0);
  v42 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241731FB0(0, &qword_25714C4A0, (uint64_t (*)(uint64_t))sub_241730AE8, v7, MEMORY[0x24BDEF380]);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v39 - v10;
  sub_241730AE8();
  v13 = v12;
  v40 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15EntryNoDataViewVMa();
  sub_241860D60((uint64_t)v20);
  v21 = v20[*(int *)(v17 + 24)];
  v22 = sub_24172588C((uint64_t)v20, type metadata accessor for StateOfMindTimeline.Styles);
  if (v21 == 1)
  {
    v39[2] = v39;
    MEMORY[0x24BDAC7A8](v22, v23);
    v39[-2] = v2;
    sub_241730C34(0);
    v39[1] = v24;
    sub_2417308C8(255, &qword_25714C4B8, (void (*)(uint64_t))sub_241730D50, &qword_25714C558, MEMORY[0x24BDF06B8]);
    v26 = v25;
    sub_2417310F0(255);
    v28 = v27;
    v29 = sub_2417313AC();
    sub_2417311A8(255);
    v31 = v30;
    sub_241731234();
    v33 = v32;
    v34 = sub_24172159C(&qword_25714C598, (uint64_t (*)(uint64_t))sub_241731234, MEMORY[0x24BDEB848]);
    v43 = v33;
    v44 = v34;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v43 = v31;
    v44 = OpaqueTypeConformance2;
    v36 = swift_getOpaqueTypeConformance2();
    v43 = v26;
    v44 = v28;
    v45 = v29;
    v46 = v36;
    swift_getOpaqueTypeConformance2();
    sub_2418A8814();
    v37 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v11, v16, v13);
    swift_storeEnumTagMultiPayload();
    sub_24172159C(&qword_25714C5B8, (uint64_t (*)(uint64_t))sub_241730AE8, MEMORY[0x24BDED358]);
    sub_241728434(&qword_25714C5C0, (uint64_t (*)(uint64_t))sub_241730358, sub_241731474, sub_2417314D0);
    sub_2418A8D24();
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v16, v13);
  }
  else
  {
    sub_24172D4B8((uint64_t)v6);
    sub_2417289A8((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_241730358);
    swift_storeEnumTagMultiPayload();
    sub_24172159C(&qword_25714C5B8, (uint64_t (*)(uint64_t))sub_241730AE8, MEMORY[0x24BDED358]);
    sub_241728434(&qword_25714C5C0, (uint64_t (*)(uint64_t))sub_241730358, sub_241731474, sub_2417314D0);
    sub_2418A8D24();
    return sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))sub_241730358);
  }
}

id sub_24172D4B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id result;
  void *v84;
  unsigned int v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t KeyPath;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t (*v114)(void);
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(void);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  double *v127;
  uint64_t *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  char v147;
  uint64_t v148;

  v134 = a1;
  v143 = sub_2418A88BC();
  MEMORY[0x24BDAC7A8](v143, v2);
  v133 = (char *)&v124 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417308C8(0, &qword_25714C468, v4, &qword_25714C470, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
  v132 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v131 = (uint64_t)&v124 - v7;
  v130 = _s14ShowMoreButtonVMa();
  MEMORY[0x24BDAC7A8](v130, v8);
  v128 = (uint64_t *)((char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v139 = _s6StylesV6NoDataVMa(0);
  v11 = MEMORY[0x24BDAC7A8](v139, v10);
  v142 = (uint64_t)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v124 - v14;
  v16 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v135 = v16;
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v141 = (uint64_t)&v124 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v145 = (uint64_t)&v124 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v140 = (char *)&v124 - v25;
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (char *)&v124 - v27;
  sub_2417304C4(0);
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)&v124 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417304A8(0);
  v136 = v33;
  MEMORY[0x24BDAC7A8](v33, v34);
  v36 = (char *)&v124 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173048C(0);
  *(_QWORD *)&v138 = v37;
  MEMORY[0x24BDAC7A8](v37, v38);
  v137 = (uint64_t)&v124 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730470(0);
  MEMORY[0x24BDAC7A8](v40, v41);
  v43 = (char *)&v124 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_2417303A0();
  MEMORY[0x24BDAC7A8](v125, v44);
  v127 = (double *)((char *)&v124 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24173037C(0);
  v126 = v46;
  MEMORY[0x24BDAC7A8](v46, v47);
  v129 = (char *)&v124 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v32 = sub_2418A8C58();
  *((_QWORD *)v32 + 1) = 0;
  v32[16] = 0;
  sub_241731B94(0, &qword_25714C618, sub_2417304E0);
  v50 = (uint64_t)&v32[*(int *)(v49 + 44)];
  v144 = v1;
  sub_24172F1F8(v1, v50);
  v51 = sub_2418A9114();
  v52 = (int *)_s15EntryNoDataViewVMa();
  v53 = v1 + v52[5];
  sub_241860D60((uint64_t)v28);
  sub_2417289A8((uint64_t)&v28[*(int *)(v16 + 36)], (uint64_t)v15, _s6StylesV6NoDataVMa);
  sub_24172588C((uint64_t)v28, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A879C();
  sub_24172588C((uint64_t)v15, _s6StylesV6NoDataVMa);
  sub_2418A84A8();
  v55 = v54;
  v57 = v56;
  v59 = v58;
  v61 = v60;
  sub_2417289A8((uint64_t)v32, (uint64_t)v36, (uint64_t (*)(_QWORD))sub_2417304C4);
  v62 = &v36[*(int *)(v136 + 36)];
  *v62 = v51;
  *((_QWORD *)v62 + 1) = v55;
  *((_QWORD *)v62 + 2) = v57;
  *((_QWORD *)v62 + 3) = v59;
  *((_QWORD *)v62 + 4) = v61;
  v62[40] = 0;
  sub_24172588C((uint64_t)v32, (uint64_t (*)(_QWORD))sub_2417304C4);
  LOBYTE(v15) = sub_2418A90CC();
  v63 = (uint64_t)v140;
  sub_241860D60((uint64_t)v140);
  v64 = v142;
  sub_2417289A8(v63 + *(int *)(v135 + 36), v142, _s6StylesV6NoDataVMa);
  sub_24172588C(v63, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A879C();
  sub_24172588C(v64, _s6StylesV6NoDataVMa);
  sub_2418A84A8();
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v73 = v137;
  sub_2417289A8((uint64_t)v36, v137, (uint64_t (*)(_QWORD))sub_2417304A8);
  v74 = v73 + *(int *)(v138 + 36);
  *(_BYTE *)v74 = (_BYTE)v15;
  *(_QWORD *)(v74 + 8) = v66;
  *(_QWORD *)(v74 + 16) = v68;
  *(_QWORD *)(v74 + 24) = v70;
  *(_QWORD *)(v74 + 32) = v72;
  *(_BYTE *)(v74 + 40) = 0;
  sub_24172588C((uint64_t)v36, (uint64_t (*)(_QWORD))sub_2417304A8);
  v75 = v145;
  sub_241860D60(v145);
  sub_24172588C(v75, type metadata accessor for StateOfMindTimeline.Styles);
  v76 = sub_2418A9960();
  v140 = v43;
  sub_24185DD6C(0.0, 1, 0.0, 1, 373.0, 0, 0.0, 1, (uint64_t)v43, 0.0, 1, 0.0, 1, v76, v77);
  sub_24172588C(v73, (uint64_t (*)(_QWORD))sub_24173048C);
  v78 = v144;
  v79 = (uint64_t *)(v144 + v52[8]);
  v81 = *v79;
  v80 = v79[1];
  v82 = v141;
  v142 = v53;
  sub_241860D60(v141);
  sub_24172588C(v82, type metadata accessor for StateOfMindTimeline.Styles);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v84 = result;
    v85 = objc_msgSend(result, sel_isiPad);

    v86 = 462.0;
    if (v85)
      v86 = 490.0;
    v87 = *(_QWORD *)(v78 + v52[9]);
    v88 = (uint64_t)v127;
    *v127 = v86;
    *(double *)(v88 + 8) = v86;
    *(_BYTE *)(v88 + 16) = 0;
    *(_QWORD *)(v88 + 24) = v81;
    *(_QWORD *)(v88 + 32) = v80;
    v89 = v125;
    v90 = (uint64_t)v140;
    sub_2417289A8((uint64_t)v140, v88 + *(int *)(v125 + 60), (uint64_t (*)(_QWORD))sub_241730470);
    v91 = v88 + *(int *)(v89 + 64);
    KeyPath = swift_getKeyPath();
    v93 = (uint64_t)v128;
    *v128 = KeyPath;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    v94 = v130;
    v95 = (_QWORD *)(v93 + *(int *)(v130 + 20));
    *v95 = v81;
    v95[1] = v80;
    *(_QWORD *)(v93 + *(int *)(v94 + 24)) = v87;
    sub_241731B4C(v93, v91, (uint64_t (*)(_QWORD))_s14ShowMoreButtonVMa);
    v96 = v88 + *(int *)(v89 + 68);
    v146 = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_2418A96C0();
    v97 = v148;
    *(_BYTE *)v96 = v147;
    *(_QWORD *)(v96 + 8) = v97;
    sub_24172588C(v90, (uint64_t (*)(_QWORD))sub_241730470);
    v98 = sub_2418A9960();
    v140 = (char *)v99;
    v141 = v98;
    v100 = (uint64_t)v129;
    v101 = (uint64_t)&v129[*(int *)(v126 + 36)];
    v102 = v145;
    sub_241860D60(v145);
    sub_24172588C(v102, type metadata accessor for StateOfMindTimeline.Styles);
    v103 = v133;
    v104 = &v133[*(int *)(v143 + 20)];
    LODWORD(v139) = *MEMORY[0x24BDEEB68];
    v105 = v139;
    v106 = sub_2418A8BE0();
    v107 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 104);
    v107(v104, v105, v106);
    __asm { FMOV            V0.2D, #18.0 }
    v138 = _Q0;
    *(_OWORD *)v103 = _Q0;
    v113 = sub_24172ED84();
    v114 = MEMORY[0x24BDED998];
    v115 = v131;
    sub_2417289A8((uint64_t)v103, v131, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
    *(_QWORD *)(v115 + *(int *)(v132 + 36)) = v113;
    sub_24172588C((uint64_t)v103, (uint64_t (*)(_QWORD))v114);
    sub_241731E80(v115, v101);
    sub_241730848();
    v117 = (_QWORD *)(v101 + *(int *)(v116 + 36));
    v118 = (uint64_t)v140;
    *v117 = v141;
    v117[1] = v118;
    sub_241731B4C(v88, v100, (uint64_t (*)(_QWORD))sub_2417303A0);
    sub_241860D60(v102);
    sub_24172588C(v102, type metadata accessor for StateOfMindTimeline.Styles);
    v107(&v103[*(int *)(v143 + 20)], v139, v106);
    *(_OWORD *)v103 = v138;
    sub_241730358(0);
    v120 = v134;
    v121 = v134 + *(int *)(v119 + 36);
    v122 = MEMORY[0x24BDED998];
    sub_2417289A8((uint64_t)v103, v121, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
    sub_241730A70();
    *(_WORD *)(v121 + *(int *)(v123 + 36)) = 256;
    sub_2417289A8(v100, v120, (uint64_t (*)(_QWORD))sub_24173037C);
    sub_24172588C((uint64_t)v103, (uint64_t (*)(_QWORD))v122);
    return (id)sub_24172588C(v100, (uint64_t (*)(_QWORD))sub_24173037C);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24172DE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t OpaqueTypeConformance2;
  char *v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v103 = a2;
  v3 = sub_2418A993C();
  v99 = *(_QWORD *)(v3 - 8);
  v100 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v97 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = _s6StylesV6NoDataVMa(0);
  v7 = MEMORY[0x24BDAC7A8](v91, v6);
  v94 = (uint64_t)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v86 - v10;
  v12 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v86 = v12;
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v93 = (uint64_t)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v86 - v17;
  sub_241730E78();
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730E5C(0);
  v89 = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v87 = (uint64_t)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730E40(0);
  v92 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v90 = (uint64_t)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (int *)sub_241730D50();
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)&v86 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417308C8(0, &qword_25714C4B8, v33, &qword_25714C558, MEMORY[0x24BDF06B8]);
  v96 = v34;
  MEMORY[0x24BDAC7A8](v34, v35);
  v95 = (uint64_t)&v86 - v36;
  sub_241730C34(0);
  v101 = *(_QWORD *)(v37 - 8);
  v102 = v37;
  MEMORY[0x24BDAC7A8](v37, v38);
  v98 = (char *)&v86 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v22 = sub_2418A8C58();
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 0;
  sub_241731B94(0, &qword_25714C5E8, sub_241730EF8);
  v41 = (uint64_t)&v22[*(int *)(v40 + 44)];
  v88 = a1;
  sub_24172E530(a1, v41);
  v42 = sub_2418A9114();
  _s15EntryNoDataViewVMa();
  sub_241860D60((uint64_t)v18);
  sub_2417289A8((uint64_t)&v18[*(int *)(v12 + 36)], (uint64_t)v11, _s6StylesV6NoDataVMa);
  sub_24172588C((uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A879C();
  sub_24172588C((uint64_t)v11, _s6StylesV6NoDataVMa);
  sub_2418A84A8();
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v51 = v87;
  sub_2417289A8((uint64_t)v22, v87, (uint64_t (*)(_QWORD))sub_241730E78);
  v52 = v51 + *(int *)(v89 + 36);
  *(_BYTE *)v52 = v42;
  *(_QWORD *)(v52 + 8) = v44;
  *(_QWORD *)(v52 + 16) = v46;
  *(_QWORD *)(v52 + 24) = v48;
  *(_QWORD *)(v52 + 32) = v50;
  *(_BYTE *)(v52 + 40) = 0;
  sub_24172588C((uint64_t)v22, (uint64_t (*)(_QWORD))sub_241730E78);
  LOBYTE(v11) = sub_2418A90CC();
  v53 = v93;
  sub_241860D60(v93);
  v54 = v53 + *(int *)(v86 + 36);
  v55 = v53;
  v56 = v94;
  sub_2417289A8(v54, v94, _s6StylesV6NoDataVMa);
  sub_24172588C(v55, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A879C();
  sub_24172588C(v56, _s6StylesV6NoDataVMa);
  sub_2418A84A8();
  v58 = v57;
  v60 = v59;
  v62 = v61;
  v64 = v63;
  v65 = v90;
  sub_2417289A8(v51, v90, (uint64_t (*)(_QWORD))sub_241730E5C);
  v66 = v65 + *(int *)(v92 + 36);
  *(_BYTE *)v66 = (_BYTE)v11;
  *(_QWORD *)(v66 + 8) = v58;
  *(_QWORD *)(v66 + 16) = v60;
  *(_QWORD *)(v66 + 24) = v62;
  *(_QWORD *)(v66 + 32) = v64;
  *(_BYTE *)(v66 + 40) = 0;
  sub_24172588C(v51, (uint64_t (*)(_QWORD))sub_241730E5C);
  v67 = v97;
  sub_2418A9930();
  v69 = v99;
  v68 = v100;
  (*(void (**)(_BYTE *, char *, uint64_t))(v99 + 16))(&v32[v29[17]], v67, v100);
  *v32 = 1;
  sub_2417289A8(v65, (uint64_t)&v32[v29[18]], (uint64_t (*)(_QWORD))sub_241730E40);
  v70 = v88;
  sub_24172E78C((uint64_t)&v32[v29[19]]);
  v71 = &v32[v29[20]];
  v105 = 0;
  sub_2418A96C0();
  v72 = v107;
  *v71 = v106;
  v71[1] = v72;
  v73 = &v32[v29[21]];
  v105 = 0;
  sub_2418A96C0();
  v74 = v107;
  *v73 = v106;
  v73[1] = v74;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v67, v68);
  sub_24172588C(v65, (uint64_t (*)(_QWORD))sub_241730E40);
  v75 = sub_24172ED84();
  LOBYTE(v73) = sub_2418A90D8();
  v76 = v95;
  sub_2417289A8((uint64_t)v32, v95, (uint64_t (*)(_QWORD))sub_241730D50);
  v77 = v76 + *(int *)(v96 + 36);
  *(_QWORD *)v77 = v75;
  *(_BYTE *)(v77 + 8) = (_BYTE)v73;
  sub_24172588C((uint64_t)v32, (uint64_t (*)(_QWORD))sub_241730D50);
  v104 = v70;
  sub_2417310F0(0);
  sub_2417313AC();
  sub_2417311A8(255);
  v79 = v78;
  sub_241731234();
  v81 = v80;
  v82 = sub_24172159C(&qword_25714C598, (uint64_t (*)(uint64_t))sub_241731234, MEMORY[0x24BDEB848]);
  v106 = v81;
  v107 = v82;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v106 = v79;
  v107 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v84 = v98;
  sub_2418A9528();
  sub_2417314FC(v76);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v101 + 32))(v103, v84, v102);
}

uint64_t sub_24172E530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v33;

  v4 = _s6StylesV6NoDataVMa(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730568(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730EF8(0);
  v17 = v16;
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v15 = sub_2418A8C58();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  sub_241731B94(0, &qword_25714C5F8, sub_241730604);
  sub_24172F39C(a1, (uint64_t)&v15[*(int *)(v21 + 44)]);
  v22 = sub_2418A90E4();
  _s15EntryNoDataViewVMa();
  sub_241860D60((uint64_t)v11);
  sub_2417289A8((uint64_t)&v11[*(int *)(v8 + 36)], (uint64_t)v7, _s6StylesV6NoDataVMa);
  sub_24172588C((uint64_t)v11, type metadata accessor for StateOfMindTimeline.Styles);
  if (v7[*(int *)(v4 + 24)] == 1)
    sub_2418A879C();
  sub_24172588C((uint64_t)v7, _s6StylesV6NoDataVMa);
  sub_2418A84A8();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_2417289A8((uint64_t)v15, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_241730568);
  v31 = &v20[*(int *)(v17 + 36)];
  *v31 = v22;
  *((_QWORD *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_241730568);
  return sub_241731B4C((uint64_t)v20, a2, (uint64_t (*)(_QWORD))sub_241730EF8);
}

id sub_24172E78C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char v36;
  id result;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = a1;
  v1 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v50 - v7;
  sub_2417307DC(0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730FCC(0);
  v14 = v13;
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730FB0(0);
  v50 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730F94(0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172EABC();
  v26 = sub_2418A90E4();
  _s15EntryNoDataViewVMa();
  sub_241860D60((uint64_t)v8);
  sub_24172588C((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A84A8();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_2417289A8((uint64_t)v12, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_2417307DC);
  v35 = &v17[*(int *)(v14 + 36)];
  *v35 = v26;
  *((_QWORD *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  sub_24172588C((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2417307DC);
  v36 = sub_2418A90F0();
  sub_241860D60((uint64_t)v5);
  sub_24172588C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles);
  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v38 = result;
    MobileGestalt_get_homeButtonType();

    sub_2418A84A8();
    v40 = v39;
    v42 = v41;
    v44 = v43;
    v46 = v45;
    sub_2417289A8((uint64_t)v17, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_241730FCC);
    v47 = &v21[*(int *)(v50 + 36)];
    *v47 = v36;
    *((_QWORD *)v47 + 1) = v40;
    *((_QWORD *)v47 + 2) = v42;
    *((_QWORD *)v47 + 3) = v44;
    *((_QWORD *)v47 + 4) = v46;
    v47[40] = 0;
    sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))sub_241730FCC);
    v48 = sub_2418A9960();
    sub_24185DDC4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v25, 0.0, 1, 0.0, 1, v48, v49);
    sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))sub_241730FB0);
    return (id)sub_241731B4C((uint64_t)v25, v51, (uint64_t (*)(_QWORD))sub_241730F94);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24172EABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v21[2];

  v1 = _s9LogButtonVMa();
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (_QWORD *)((char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_25714B958 != -1)
    swift_once();
  v5 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v6 = sub_2418A7EFC();
  v8 = v7;
  swift_bridgeObjectRelease();

  v9 = _s15EntryNoDataViewVMa();
  v10 = (uint64_t *)(v0 + *(int *)(v9 + 28));
  v12 = *v10;
  v11 = v10[1];
  *v4 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v13 = (uint64_t *)((char *)v4 + *(int *)(v1 + 20));
  *v13 = v6;
  v13[1] = v8;
  v14 = (uint64_t *)((char *)v4 + *(int *)(v1 + 24));
  *v14 = v12;
  v14[1] = v11;
  v15 = *(_QWORD **)(v0 + *(int *)(v9 + 36));
  swift_retain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_241802714(0, v15[2] + 1, 1, v15);
  v17 = v15[2];
  v16 = v15[3];
  if (v17 >= v16 >> 1)
    v15 = sub_241802714((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
  v15[2] = v17 + 1;
  v18 = &v15[2 * v17];
  v18[4] = 0xD000000000000010;
  v18[5] = 0x80000002418DC230;
  v21[1] = &unk_2511AB450;
  v19 = swift_bridgeObjectRetain();
  sub_2417739BC(v19);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2417310B8();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_24172588C((uint64_t)v4, (uint64_t (*)(_QWORD))_s9LogButtonVMa);
}

uint64_t sub_24172ED84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v0 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A84E4();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v23 - v15;
  sub_241861034((uint64_t)&v23 - v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v13, *MEMORY[0x24BDEB400], v8);
  sub_2418A84D8();
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v13, v8);
  v17(v16, v8);
  _s15EntryNoDataViewVMa();
  sub_241860D60((uint64_t)v7);
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A95F4();
  v18 = sub_2418A9624();
  swift_release();
  sub_24172887C(0, (unint64_t *)&qword_25714C5F0, MEMORY[0x24BDF3E48], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2418D1940;
  *(_QWORD *)(v19 + 32) = v18;
  swift_retain();
  sub_241860D60((uint64_t)v7);
  sub_2417289A8((uint64_t)&v7[*(int *)(v4 + 48)], (uint64_t)v3, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  v20 = sub_2417CC290();
  sub_24172588C((uint64_t)v3, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  *(_QWORD *)(v19 + 40) = v20;
  v24 = v19;
  sub_2418A9EC4();
  v21 = MEMORY[0x24269C120](v24);
  swift_release();
  return v21;
}

uint64_t sub_24172F000(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_2418A8DB4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_241731234();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2417311A8(0);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = &v23[-v18];
  sub_2418A8DA8();
  v24 = a1;
  sub_2417312C0();
  sub_241728434((unint64_t *)&qword_25714C588, (uint64_t (*)(uint64_t))sub_2417312C0, (uint64_t (*)(void))sub_241731344, sub_2417310D4);
  sub_2418A8580();
  v20 = sub_24172159C(&qword_25714C598, (uint64_t (*)(uint64_t))sub_241731234, MEMORY[0x24BDEB848]);
  MEMORY[0x24269B628](v9, v5, v20);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v19, v16, v11);
  v25 = v5;
  v26 = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  MEMORY[0x24269B628](v19, v11, OpaqueTypeConformance2);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v19, v11);
}

uint64_t sub_24172F1F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  sub_2417307DC(0);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v23 - v10;
  sub_241730568(0);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v23 - v18;
  *(_QWORD *)v19 = sub_2418A8C58();
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 0;
  sub_241731B94(0, &qword_25714C5F8, sub_241730604);
  sub_24172F39C(a1, (uint64_t)&v19[*(int *)(v20 + 44)]);
  sub_24172EABC();
  sub_2417289A8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_241730568);
  sub_2417289A8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_2417307DC);
  sub_2417289A8((uint64_t)v16, a2, (uint64_t (*)(_QWORD))sub_241730568);
  sub_2417304FC();
  sub_2417289A8((uint64_t)v8, a2 + *(int *)(v21 + 48), (uint64_t (*)(_QWORD))sub_2417307DC);
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))sub_2417307DC);
  sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))sub_241730568);
  sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))sub_2417307DC);
  return sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))sub_241730568);
}

uint64_t sub_24172F39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  uint64_t *v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unsigned int *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  _QWORD *v99;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t KeyPath;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD v128[2];
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;

  v155 = a1;
  v151 = a2;
  v2 = sub_2418A88D4();
  MEMORY[0x24BDAC7A8](v2, v3);
  v141 = (char *)v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_2418A99B4();
  v139 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140, v5);
  v138 = (char *)v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_2418A84E4();
  v135 = *(_QWORD *)(v137 - 8);
  v8 = MEMORY[0x24BDAC7A8](v137, v7);
  v134 = (char *)v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v154 = (uint64_t)v128 - v11;
  v133 = sub_2418A91E0();
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133, v12);
  v131 = (char *)v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730780();
  v153 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v136 = (char *)v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
  sub_241731FB0(0, &qword_25714C410, v19, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  MEMORY[0x24BDAC7A8](v20, v21);
  v145 = (char *)v128 - v22;
  sub_2417306E4();
  v143 = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v148 = (uint64_t)v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417306C8(0);
  v147 = v26;
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v150 = (uint64_t)v128 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v146 = (uint64_t)v128 - v32;
  MEMORY[0x24BDAC7A8](v31, v33);
  v149 = (uint64_t)v128 - v34;
  v35 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (char *)v128 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = _s21StateOfMindSymbolViewVMa();
  MEMORY[0x24BDAC7A8](v39, v40);
  v42 = (_QWORD *)((char *)v128 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417306AC(0);
  v44 = v43;
  MEMORY[0x24BDAC7A8](v43, v45);
  v47 = (char *)v128 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241731FB0(0, &qword_25714C3F0, v48, v17, v18);
  v51 = MEMORY[0x24BDAC7A8](v49, v50);
  v53 = (char *)v128 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v51, v54);
  v56 = (char *)v128 - v55;
  *v42 = swift_getKeyPath();
  v57 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v58 = (uint64_t *)((char *)v42 + *(int *)(v39 + 20));
  *v58 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v57);
  swift_storeEnumTagMultiPayload();
  *((_BYTE *)v42 + *(int *)(v39 + 24)) = 1;
  v130 = _s15EntryNoDataViewVMa();
  v152 = v155 + *(int *)(v130 + 20);
  sub_241860D60((uint64_t)v38);
  v59 = (uint64_t)v38;
  sub_24172588C((uint64_t)v38, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9960();
  sub_2418A861C();
  sub_2417289A8((uint64_t)v42, (uint64_t)v47, (uint64_t (*)(_QWORD))_s21StateOfMindSymbolViewVMa);
  v60 = &v47[*(int *)(v44 + 36)];
  v61 = v159;
  *(_OWORD *)v60 = v158;
  *((_OWORD *)v60 + 1) = v61;
  *((_OWORD *)v60 + 2) = v160;
  sub_24172588C((uint64_t)v42, (uint64_t (*)(_QWORD))_s21StateOfMindSymbolViewVMa);
  sub_241731BF8();
  sub_2418A9414();
  sub_24172588C((uint64_t)v47, (uint64_t (*)(_QWORD))sub_2417306AC);
  v144 = v53;
  v142 = v56;
  sub_241731C78((uint64_t)v53, (uint64_t)v56);
  if (qword_25714B958 != -1)
    swift_once();
  v62 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v63 = sub_2418A7EFC();
  v65 = v64;
  swift_bridgeObjectRelease();

  v156 = (void *)v63;
  v157 = v65;
  sub_241721040();
  v66 = sub_2418A92D0();
  v68 = v67;
  v128[1] = v69;
  v71 = v70 & 1;
  sub_241860D60(v59);
  sub_24172588C(v59, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A91C8();
  v72 = v132;
  v73 = v131;
  v74 = v133;
  (*(void (**)(char *, _QWORD, uint64_t))(v132 + 104))(v131, *MEMORY[0x24BDF17C8], v133);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
  v75 = sub_2418A9294();
  v131 = v76;
  LOBYTE(v72) = v77 & 1;
  sub_2417289EC(v66, v68, v71);
  swift_release();
  swift_bridgeObjectRelease();
  v129 = v59;
  sub_241860D60(v59);
  sub_24172588C(v59, type metadata accessor for StateOfMindTimeline.Styles);
  v78 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v156 = (void *)MEMORY[0x24269BDB4](v78);
  v79 = (uint64_t)v131;
  v133 = sub_2418A9270();
  v132 = v80;
  v82 = v81;
  v84 = v83 & 1;
  sub_2417289EC(v75, v79, v72);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241861034(v154);
  v85 = v135;
  v86 = v134;
  v87 = v137;
  (*(void (**)(char *, _QWORD, uint64_t))(v135 + 104))(v134, *MEMORY[0x24BDEB400], v137);
  LOBYTE(v79) = sub_2418A84D8();
  v135 = *(_QWORD *)(v85 + 8);
  ((void (*)(char *, uint64_t))v135)(v86, v87);
  v88 = (unsigned int *)MEMORY[0x24BDF5080];
  v89 = v139;
  if ((v79 & 1) == 0)
    v88 = (unsigned int *)MEMORY[0x24BDF5098];
  v90 = v138;
  v91 = v140;
  (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v138, *v88, v140);
  v92 = (uint64_t)v141;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v141, v90, v91);
  v93 = (uint64_t)v136;
  sub_2417289A8(v92, (uint64_t)&v136[*(int *)(v153 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  v94 = v133;
  v95 = v132;
  *(_QWORD *)v93 = v133;
  *(_QWORD *)(v93 + 8) = v95;
  v96 = v84;
  *(_BYTE *)(v93 + 16) = v84;
  *(_QWORD *)(v93 + 24) = v82;
  v97 = v95;
  v98 = v96;
  sub_241728A50(v94, v95, v96);
  swift_bridgeObjectRetain();
  sub_24172588C(v92, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v91);
  ((void (*)(uint64_t, uint64_t))v135)(v154, v87);
  sub_2417289EC(v94, v97, v98);
  swift_bridgeObjectRelease();
  v99 = *(_QWORD **)(v155 + *(int *)(v130 + 36));
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v101 = v129;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v99 = sub_241802714(0, v99[2] + 1, 1, v99);
  v103 = v99[2];
  v102 = v99[3];
  if (v103 >= v102 >> 1)
    v99 = sub_241802714((_QWORD *)(v102 > 1), v103 + 1, 1, v99);
  v99[2] = v103 + 1;
  v104 = &v99[2 * v103];
  v104[4] = 0x78655474756F6241;
  v104[5] = 0xE900000000000074;
  v156 = &unk_2511AB450;
  v105 = swift_bridgeObjectRetain();
  sub_2417739BC(v105);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241731CDC();
  v106 = (uint64_t)v145;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24172588C(v93, (uint64_t (*)(_QWORD))sub_241730780);
  KeyPath = swift_getKeyPath();
  v108 = v148;
  sub_241731DD4(v106, v148, &qword_25714C410, (uint64_t (*)(uint64_t))sub_241730780);
  v109 = v108 + *(int *)(v143 + 36);
  *(_QWORD *)v109 = KeyPath;
  *(_BYTE *)(v109 + 8) = 1;
  sub_241731E34(v106, &qword_25714C410, (uint64_t (*)(uint64_t))sub_241730780);
  v110 = sub_2418A9114();
  sub_241860D60(v101);
  sub_24172588C(v101, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A84A8();
  v112 = v111;
  v114 = v113;
  v116 = v115;
  v118 = v117;
  v119 = v146;
  sub_2417289A8(v108, v146, (uint64_t (*)(_QWORD))sub_2417306E4);
  v120 = v119 + *(int *)(v147 + 36);
  *(_BYTE *)v120 = v110;
  *(_QWORD *)(v120 + 8) = v112;
  *(_QWORD *)(v120 + 16) = v114;
  *(_QWORD *)(v120 + 24) = v116;
  *(_QWORD *)(v120 + 32) = v118;
  *(_BYTE *)(v120 + 40) = 0;
  sub_24172588C(v108, (uint64_t (*)(_QWORD))sub_2417306E4);
  v121 = v149;
  sub_241731B4C(v119, v149, (uint64_t (*)(_QWORD))sub_2417306C8);
  v122 = (uint64_t)v142;
  v123 = (uint64_t)v144;
  sub_241731DD4((uint64_t)v142, (uint64_t)v144, &qword_25714C3F0, (uint64_t (*)(uint64_t))sub_2417306AC);
  v124 = v150;
  sub_2417289A8(v121, v150, (uint64_t (*)(_QWORD))sub_2417306C8);
  v125 = v151;
  sub_241731DD4(v123, v151, &qword_25714C3F0, (uint64_t (*)(uint64_t))sub_2417306AC);
  sub_241730620();
  sub_2417289A8(v124, v125 + *(int *)(v126 + 48), (uint64_t (*)(_QWORD))sub_2417306C8);
  sub_24172588C(v121, (uint64_t (*)(_QWORD))sub_2417306C8);
  sub_241731E34(v122, &qword_25714C3F0, (uint64_t (*)(uint64_t))sub_2417306AC);
  sub_24172588C(v124, (uint64_t (*)(_QWORD))sub_2417306C8);
  return sub_241731E34(v123, &qword_25714C3F0, (uint64_t (*)(uint64_t))sub_2417306AC);
}

uint64_t sub_241730014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  void *v21;
  uint64_t v22;

  v20[1] = a2;
  v3 = _s15EntryNoDataViewVMa();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v8 = v7;
  v20[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v20 - v10;
  if (qword_25714B958 != -1)
    swift_once();
  v12 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v13 = sub_2418A7EFC();
  v15 = v14;
  swift_bridgeObjectRelease();

  v21 = (void *)v13;
  v22 = v15;
  sub_2417289A8(a1, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))_s15EntryNoDataViewVMa);
  v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = swift_allocObject();
  sub_241731B4C((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(_QWORD))_s15EntryNoDataViewVMa);
  sub_241721040();
  v18 = MEMORY[0x24BEE0D00];
  sub_2418A9714();
  v21 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AB490);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, v18, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241731344();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v20[0] + 8))(v11, v8);
}

uint64_t sub_2417302BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_2418A8658();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15EntryNoDataViewVMa();
  sub_2418612BC((uint64_t)v4);
  sub_2418A864C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_241730358(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714C390, (uint64_t (*)(uint64_t))sub_24173037C, (uint64_t (*)(uint64_t))sub_241730A70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_24173037C(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714C398, (uint64_t (*)(uint64_t))sub_2417303A0, (uint64_t (*)(uint64_t))sub_241730848, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

uint64_t sub_2417303A0()
{
  uint64_t result;

  result = qword_25714C3A0;
  if (!qword_25714C3A0)
  {
    sub_241730470(255);
    _s14ShowMoreButtonVMa();
    sub_241721DF8(&qword_25714C438, (uint64_t (*)(uint64_t))sub_241730470, sub_241730800, MEMORY[0x24BDEDBB8]);
    sub_24172159C(&qword_25714C458, (uint64_t (*)(uint64_t))_s14ShowMoreButtonVMa, (uint64_t)&unk_2418DB444);
    type metadata accessor for UnlimitedHeightVStackWithFooter();
  }
  return result;
}

void sub_241730470(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C3A8, sub_24173048C);
}

void sub_24173048C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C3B0, sub_2417304A8);
}

void sub_2417304A8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C3B8, sub_2417304C4);
}

void sub_2417304C4(uint64_t a1)
{
  sub_241730584(a1, &qword_25714C3C0, (uint64_t (*)(uint64_t))sub_2417304E0, &qword_25714C430);
}

void sub_2417304E0(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714C3C8, (uint64_t (*)(uint64_t))sub_2417304FC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417304FC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714C3D0)
  {
    sub_241730568(255);
    sub_2417307DC(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714C3D0);
  }
}

void sub_241730568(uint64_t a1)
{
  sub_241730584(a1, &qword_25714C3D8, (uint64_t (*)(uint64_t))sub_241730604, &qword_25714C420);
}

void sub_241730584(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_24172159C(a4, a3, MEMORY[0x24BDF5428]);
    v7 = sub_2418A97EC();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_241730604(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714C3E0, (uint64_t (*)(uint64_t))sub_241730620, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241730620()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714C3E8)
  {
    sub_241731FB0(255, &qword_25714C3F0, (uint64_t (*)(uint64_t))sub_2417306AC, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_2417306C8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714C3E8);
  }
}

void sub_2417306AC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C3F8, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
}

void sub_2417306C8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C400, (void (*)(uint64_t))sub_2417306E4);
}

void sub_2417306E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C408)
  {
    sub_241731FB0(255, &qword_25714C410, (uint64_t (*)(uint64_t))sub_241730780, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24172887C(255, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C408);
  }
}

void sub_241730780()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C418)
  {
    sub_2418A88D4();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C418);
  }
}

void sub_2417307DC(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714C428, (uint64_t (*)(uint64_t))_s9LogButtonVMa, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

uint64_t sub_241730800()
{
  return sub_241721DF8(&qword_25714C440, (uint64_t (*)(uint64_t))sub_24173048C, sub_241730824, MEMORY[0x24BDECC60]);
}

uint64_t sub_241730824()
{
  return sub_241730F14(&qword_25714C448, (uint64_t (*)(uint64_t))sub_2417304A8, &qword_25714C450, (uint64_t (*)(uint64_t))sub_2417304C4);
}

void sub_241730848()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C460)
  {
    sub_2417308C8(255, &qword_25714C468, (void (*)(uint64_t))MEMORY[0x24BDED998], &qword_25714C470, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    sub_241730954();
    v0 = sub_2418A8D18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C460);
  }
}

void sub_2417308C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    sub_24172835C(255, a4, MEMORY[0x24BDF4D20], MEMORY[0x24BDF4D10], a5);
    v8 = sub_2418A87FC();
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_241730954()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_25714C478;
  if (!qword_25714C478)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED998];
    v2 = MEMORY[0x24BDF06F8];
    sub_2417308C8(255, &qword_25714C468, (void (*)(uint64_t))MEMORY[0x24BDED998], &qword_25714C470, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v4 = v3;
    v5[0] = sub_24172159C(&qword_25714C480, v1, MEMORY[0x24BDED988]);
    v5[1] = sub_241730A1C(&qword_25714C488, &qword_25714C470, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v2, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v4, v5);
    atomic_store(result, (unint64_t *)&qword_25714C478);
  }
  return result;
}

uint64_t sub_241730A1C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_24172835C(255, a2, MEMORY[0x24BDF4D20], MEMORY[0x24BDF4D10], a3);
    result = MEMORY[0x24269D47C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_241730A70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C490)
  {
    sub_2418A88BC();
    sub_24172159C(&qword_25714C498, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED990]);
    v0 = sub_2418A8598();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C490);
  }
}

void sub_241730AE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C4A8)
  {
    sub_2418A8754();
    sub_241730C34(255);
    sub_2417308C8(255, &qword_25714C4B8, (void (*)(uint64_t))sub_241730D50, &qword_25714C558, MEMORY[0x24BDF06B8]);
    sub_2417310F0(255);
    sub_2417313AC();
    sub_2417311A8(255);
    sub_241731234();
    sub_24172159C(&qword_25714C598, (uint64_t (*)(uint64_t))sub_241731234, MEMORY[0x24BDEB848]);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    v0 = sub_2418A8820();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C4A8);
  }
}

void sub_241730C34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_25714C4B0)
  {
    sub_2417308C8(255, &qword_25714C4B8, (void (*)(uint64_t))sub_241730D50, &qword_25714C558, MEMORY[0x24BDF06B8]);
    v3 = v2;
    sub_2417310F0(255);
    v5 = v4;
    v6 = sub_2417313AC();
    sub_2417311A8(255);
    sub_241731234();
    sub_24172159C(&qword_25714C598, (uint64_t (*)(uint64_t))sub_241731234, MEMORY[0x24BDEB848]);
    swift_getOpaqueTypeConformance2();
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = v6;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF3858], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_25714C4B0);
  }
}

uint64_t sub_241730D50()
{
  uint64_t result;

  result = qword_25714C4C0;
  if (!qword_25714C4C0)
  {
    sub_241730E40(255);
    sub_241730F94(255);
    sub_2418A993C();
    sub_241721DF8(&qword_25714C510, (uint64_t (*)(uint64_t))sub_241730E40, sub_241730FE8, MEMORY[0x24BDECC60]);
    sub_241721DF8(&qword_25714C528, (uint64_t (*)(uint64_t))sub_241730F94, sub_24173100C, MEMORY[0x24BDEDBB8]);
    type metadata accessor for ScrollableWithPinnedFooter();
  }
  return result;
}

void sub_241730E40(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C4C8, sub_241730E5C);
}

void sub_241730E5C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C4D0, (void (*)(uint64_t))sub_241730E78);
}

void sub_241730E78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C4D8)
  {
    sub_241730EF8(255);
    sub_241730F14(&qword_25714C4E8, (uint64_t (*)(uint64_t))sub_241730EF8, &qword_25714C4F0, (uint64_t (*)(uint64_t))sub_241730568);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C4D8);
  }
}

void sub_241730EF8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C4E0, sub_241730568);
}

uint64_t sub_241730F14(unint64_t *a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = sub_24172159C(a3, a4, MEMORY[0x24BDF4700]);
    v9[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_241730F94(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C4F8, sub_241730FB0);
}

void sub_241730FB0(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C500, sub_241730FCC);
}

void sub_241730FCC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C508, sub_2417307DC);
}

uint64_t sub_241730FE8()
{
  return sub_241730F14(&qword_25714C518, (uint64_t (*)(uint64_t))sub_241730E5C, &qword_25714C520, (uint64_t (*)(uint64_t))sub_241730E78);
}

uint64_t sub_24173100C()
{
  return sub_241721DF8(&qword_25714C530, (uint64_t (*)(uint64_t))sub_241730FB0, (uint64_t (*)(void))sub_241731030, MEMORY[0x24BDECC60]);
}

unint64_t sub_241731030()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714C538;
  if (!qword_25714C538)
  {
    sub_241730FCC(255);
    v2 = v1;
    v3[0] = sub_241728434(&qword_25714C540, (uint64_t (*)(uint64_t))sub_2417307DC, sub_2417310B8, sub_2417310D4);
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714C538);
  }
  return result;
}

uint64_t sub_2417310B8()
{
  return sub_24172159C(&qword_25714C548, (uint64_t (*)(uint64_t))_s9LogButtonVMa, (uint64_t)&unk_2418D8718);
}

uint64_t sub_2417310D4()
{
  return sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
}

void sub_2417310F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  if (!qword_25714C560)
  {
    sub_2417311A8(255);
    v3 = v2;
    sub_241731234();
    sub_24172159C(&qword_25714C598, (uint64_t (*)(uint64_t))sub_241731234, MEMORY[0x24BDEB848]);
    v4 = MEMORY[0x24BDEFA90];
    v7[0] = v3;
    v7[1] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x24269D434](a1, v7, v4, 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714C560);
  }
}

void sub_2417311A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714C568)
  {
    sub_241731234();
    v5[0] = v2;
    v5[1] = sub_24172159C(&qword_25714C598, (uint64_t (*)(uint64_t))sub_241731234, MEMORY[0x24BDEB848]);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDEFA90], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714C568);
  }
}

void sub_241731234()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C570)
  {
    sub_2417312C0();
    sub_241728434((unint64_t *)&qword_25714C588, (uint64_t (*)(uint64_t))sub_2417312C0, (uint64_t (*)(void))sub_241731344, sub_2417310D4);
    v0 = sub_2418A858C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C570);
  }
}

void sub_2417312C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C578)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C578);
  }
}

unint64_t sub_241731344()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714C590;
  if (!qword_25714C590)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF43B0], v1);
    atomic_store(result, (unint64_t *)&qword_25714C590);
  }
  return result;
}

unint64_t sub_2417313AC()
{
  unint64_t result;
  uint64_t (*v1)(_QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25714C5A0;
  if (!qword_25714C5A0)
  {
    v1 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06B8];
    sub_2417308C8(255, &qword_25714C4B8, (void (*)(uint64_t))sub_241730D50, &qword_25714C558, MEMORY[0x24BDF06B8]);
    v3 = v2;
    v4[0] = sub_24172159C(&qword_25714C5A8, (uint64_t (*)(uint64_t))sub_241730D50, (uint64_t)&unk_2418D6370);
    v4[1] = sub_241730A1C(&qword_25714C5B0, &qword_25714C558, v1, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v4);
    atomic_store(result, (unint64_t *)&qword_25714C5A0);
  }
  return result;
}

uint64_t sub_241731474()
{
  return sub_241728434(&qword_25714C5C8, (uint64_t (*)(uint64_t))sub_24173037C, sub_241731498, sub_2417314B4);
}

uint64_t sub_241731498()
{
  return sub_24172159C(&qword_25714C5D0, (uint64_t (*)(uint64_t))sub_2417303A0, (uint64_t)&unk_2418D3740);
}

uint64_t sub_2417314B4()
{
  return sub_24172159C(&qword_25714C5D8, (uint64_t (*)(uint64_t))sub_241730848, MEMORY[0x24BDEF370]);
}

uint64_t sub_2417314D0()
{
  return sub_24172159C(&qword_25714C5E0, (uint64_t (*)(uint64_t))sub_241730A70, MEMORY[0x24BDEB950]);
}

uint64_t sub_2417314EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24172DE38(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2417314F4()
{
  uint64_t v0;

  return sub_24172F000(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2417314FC(uint64_t a1)
{
  uint64_t v2;

  sub_2417308C8(0, &qword_25714C4B8, (void (*)(uint64_t))sub_241730D50, &qword_25714C558, MEMORY[0x24BDF06B8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241731558@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_241730014(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_241731560()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;

  v1 = _s15EntryNoDataViewVMa();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + v2;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A84E4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  v5 = v3 + *(int *)(v1 + 20);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v45 = v1;
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v5 + v9[5];
    v11 = sub_2418A87B4();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v10, v11);
    v13 = v5 + v9[7];
    v14 = sub_2418A84E4();
    v43 = *(void (**)(uint64_t))(*(_QWORD *)(v14 - 8) + 8);
    v44 = v14;
    v43(v13);
    v15 = v5 + v9[8];
    if (!v8(v15, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
    v16 = _s6StylesV8TimelineVMa(0);
    v12(v15 + *(int *)(v16 + 20), v11);
    v17 = v5 + v9[9];
    if (!v8(v17, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    v18 = _s6StylesV6NoDataVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    v19 = v5 + v9[10];
    if (!v8(v19, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    v20 = _s6StylesV11PlaceholderVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    v21 = v5 + v9[11];
    if (!v8(v21, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    v22 = _s6StylesV6SymbolVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    v23 = v5 + v9[12];
    if (!v8(v23, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    v24 = v7;
    v25 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v23 + *(int *)(v25 + 20), v11);
    v26 = *(int *)(v25 + 28);
    v27 = v24;
    ((void (*)(uint64_t, uint64_t))v43)(v23 + v26, v44);
    v28 = v5 + v9[13];
    if (!v8(v28, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v6);
    v29 = _s6StylesV5EmptyVMa(0);
    v12(v28 + *(int *)(v29 + 20), v11);
    v30 = v5 + v9[14];
    if (!v8(v30, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v6);
    v31 = _s6StylesV5DailyVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    v32 = v5 + v9[15];
    if (!v8(v32, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v32, v6);
    v33 = _s6StylesV9MomentaryVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    v34 = v5 + v9[16];
    if (!v8(v34, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v34, v6);
    v35 = _s6StylesV6HeaderVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    v36 = v5 + v9[17];
    if (!v8(v36, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v36, v6);
    v37 = _s6StylesV11ChartButtonVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
    v38 = v5 + v9[18];
    if (!v8(v38, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v38, v6);
    v39 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v38 + *(int *)(v39 + 20), v11);
    v1 = v45;
  }
  else
  {
    swift_release();
  }
  v40 = v3 + *(int *)(v1 + 24);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v41 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_241731AC0()
{
  _s15EntryNoDataViewVMa();
  return sub_2417302BC();
}

unint64_t sub_241731AEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2543915D8;
  if (!qword_2543915D8)
  {
    sub_24172887C(255, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2543915D8);
  }
  return result;
}

uint64_t sub_241731B4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241731B94(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2418A86E8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_241731BF8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714C600;
  if (!qword_25714C600)
  {
    sub_2417306AC(255);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714C608, (uint64_t (*)(uint64_t))_s21StateOfMindSymbolViewVMa, (uint64_t)&unk_2418D31D0);
    v3[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714C600);
  }
  return result;
}

uint64_t sub_241731C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241731FB0(0, &qword_25714C3F0, (uint64_t (*)(uint64_t))sub_2417306AC, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241731CDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25714C610;
  if (!qword_25714C610)
  {
    sub_241730780();
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDEDB58];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25714C610);
  }
  return result;
}

uint64_t sub_241731D3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A8A3C();
  *a1 = result;
  return result;
}

uint64_t sub_241731D64@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A8A3C();
  *a1 = result;
  return result;
}

uint64_t sub_241731D8C()
{
  return sub_2418A8A48();
}

uint64_t sub_241731DB0()
{
  return sub_2418A8A48();
}

uint64_t sub_241731DD4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_241731FB0(0, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241731E34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_241731FB0(0, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241731E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417308C8(0, &qword_25714C468, (void (*)(uint64_t))MEMORY[0x24BDED998], &qword_25714C470, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241731EE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714C620;
  if (!qword_25714C620)
  {
    sub_241731FB0(255, &qword_25714C628, (uint64_t (*)(uint64_t))sub_241730AE8, (uint64_t (*)(uint64_t))sub_241730358, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714C5B8, (uint64_t (*)(uint64_t))sub_241730AE8, MEMORY[0x24BDED358]);
    v3[1] = sub_241728434(&qword_25714C5C0, (uint64_t (*)(uint64_t))sub_241730358, sub_241731474, sub_2417314D0);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714C620);
  }
  return result;
}

void sub_241731FB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4(255);
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

uint64_t sub_241732024(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_241732060 + 4 * byte_2418D1A40[a1]))(0xD000000000000017, 0x80000002418DB830);
}

uint64_t sub_241732060()
{
  return 0x696472616F626E4FLL;
}

uint64_t sub_24173207C()
{
  uint64_t v0;

  return v0 + 3;
}

unint64_t sub_241732094()
{
  return 0xD000000000000010;
}

uint64_t sub_241732154(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_241732024(*a1);
  v5 = v4;
  if (v3 == sub_241732024(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_2418AA4DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2417321DC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2418AA56C();
  sub_241732024(v1);
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_24173223C()
{
  unsigned __int8 *v0;

  sub_241732024(*v0);
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24173227C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2418AA56C();
  sub_241732024(v1);
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_2417322D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_241732304 + 4 * byte_2418D1A4A[a1]))(1954047310, 0xE400000000000000);
}

uint64_t sub_241732304()
{
  return 0x6C65636E6143;
}

uint64_t sub_241732318()
{
  return 1801675074;
}

uint64_t sub_241732324()
{
  return 1885956947;
}

unint64_t sub_241732330()
{
  return 0xD000000000000014;
}

unint64_t sub_24173234C()
{
  return 0xD000000000000015;
}

uint64_t sub_24173236C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2417333C0();
  *a1 = result;
  return result;
}

uint64_t sub_241732398@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_241732024(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_2417323C0(char *a1)
{
  sub_241864F7C(*a1);
}

void sub_2417323CC()
{
  char *v0;

  sub_241865C90(*v0);
}

void sub_2417323D4(uint64_t a1)
{
  char *v1;

  sub_241866490(a1, *v1);
}

void sub_2417323DC(uint64_t a1)
{
  char *v1;

  sub_241866AFC(a1, *v1);
}

uint64_t sub_2417323E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241733408();
  *a1 = result;
  return result;
}

uint64_t sub_241732410@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2417322D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_241732438(char *a1, char *a2)
{
  return sub_241865BEC(*a1, *a2);
}

uint64_t sub_241732444()
{
  sub_2418AA56C();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_2417324C4()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241732520()
{
  sub_2418AA56C();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_24173259C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_2418AA3F8();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_2417325F8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7261746E656D6F4DLL;
  if (*v1)
    v2 = 0x796C696144;
  v3 = 0xE900000000000079;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

MentalHealthUI::StateOfMindLoggingAnalyticsEntryPointType_optional __swiftcall StateOfMindLoggingAnalyticsEntryPointType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  MentalHealthUI::StateOfMindLoggingAnalyticsEntryPointType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2418AA3F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t StateOfMindLoggingAnalyticsEntryPointType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2417326CC + 4 * byte_2418D1A50[*v0]))(0xD000000000000017, 0x80000002418DB950);
}

unint64_t sub_2417326CC()
{
  return 0xD000000000000012;
}

uint64_t sub_241732768()
{
  return 0x746567646957;
}

uint64_t sub_24173277C()
{
  return 0x207972616D6D7553;
}

void sub_24173279C(char *a1)
{
  sub_241864D00(*a1);
}

uint64_t sub_2417327A8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_2418AA56C();
  sub_241866360((uint64_t)v3, v1);
  return sub_2418AA59C();
}

void sub_2417327EC(uint64_t a1)
{
  char *v1;

  sub_241866360(a1, *v1);
}

uint64_t sub_2417327F4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_2418AA56C();
  sub_241866360((uint64_t)v3, v1);
  return sub_2418AA59C();
}

MentalHealthUI::StateOfMindLoggingAnalyticsEntryPointType_optional sub_241732834(Swift::String *a1)
{
  return StateOfMindLoggingAnalyticsEntryPointType.init(rawValue:)(*a1);
}

uint64_t sub_241732840@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = StateOfMindLoggingAnalyticsEntryPointType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_241732864()
{
  sub_241733494();
  return sub_2418A9E94();
}

uint64_t sub_2417328C0()
{
  sub_241733494();
  return sub_2418A9E88();
}

MentalHealthUI::StateOfMindLoggingAnalyticsProvenanceType_optional __swiftcall StateOfMindLoggingAnalyticsProvenanceType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  MentalHealthUI::StateOfMindLoggingAnalyticsProvenanceType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2418AA3F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t StateOfMindLoggingAnalyticsProvenanceType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2417329A0 + 4 * byte_2418D1A5B[*v0]))(0x7079542061746144, 0xEE006D6F6F522065);
}

uint64_t sub_2417329A0()
{
  return 0x7373656E746946;
}

uint64_t sub_2417329B8()
{
  return 0x726353206B636F4CLL;
}

uint64_t sub_2417329D8()
{
  return 0x6E6C7566646E694DLL;
}

uint64_t sub_2417329F8()
{
  return 0x7972616D6D7553;
}

uint64_t sub_241732A10()
{
  return 0x746567646957;
}

unint64_t sub_241732A28()
{
  unint64_t result;

  result = qword_25714C630;
  if (!qword_25714C630)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindLoggingAnalyticsEntryPointType, &type metadata for StateOfMindLoggingAnalyticsEntryPointType);
    atomic_store(result, (unint64_t *)&qword_25714C630);
  }
  return result;
}

void sub_241732A6C(char *a1)
{
  sub_241864B14(*a1);
}

unint64_t sub_241732A7C()
{
  unint64_t result;

  result = qword_25714C638;
  if (!qword_25714C638)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindLoggingAnalyticsProvenanceType, &type metadata for StateOfMindLoggingAnalyticsProvenanceType);
    atomic_store(result, (unint64_t *)&qword_25714C638);
  }
  return result;
}

void sub_241732AC0()
{
  char *v0;

  sub_241865D68(*v0);
}

void sub_241732AC8()
{
  __asm { BR              X10 }
}

uint64_t sub_241732B10()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

void sub_241732BA8(uint64_t a1)
{
  char *v1;

  sub_241866BD0(a1, *v1);
}

MentalHealthUI::StateOfMindLoggingAnalyticsProvenanceType_optional sub_241732BB0(Swift::String *a1)
{
  return StateOfMindLoggingAnalyticsProvenanceType.init(rawValue:)(*a1);
}

uint64_t sub_241732BBC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_241732BF8 + 4 * byte_2418D1A67[*v0]))();
}

void sub_241732BF8(_QWORD *a1@<X8>)
{
  *a1 = 0x7373656E746946;
  a1[1] = 0xE700000000000000;
}

void sub_241732C14(_QWORD *a1@<X8>)
{
  *a1 = 0x726353206B636F4CLL;
  a1[1] = 0xEB000000006E6565;
}

void sub_241732C38(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6C7566646E694DLL;
  a1[1] = 0xEB00000000737365;
}

void sub_241732C5C(_QWORD *a1@<X8>)
{
  *a1 = 0x7972616D6D7553;
  a1[1] = 0xE700000000000000;
}

void sub_241732C78(_QWORD *a1@<X8>)
{
  *a1 = 0x746567646957;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_241732C90()
{
  sub_241733450();
  return sub_2418A9E94();
}

uint64_t sub_241732CEC()
{
  sub_241733450();
  return sub_2418A9E88();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for StateOfMindLoggingAnalyticsEntryPointType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindLoggingAnalyticsEntryPointType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_241732E20 + 4 * byte_2418D1A72[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_241732E54 + 4 * byte_2418D1A6D[v4]))();
}

uint64_t sub_241732E54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241732E5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241732E64);
  return result;
}

uint64_t sub_241732E70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241732E78);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_241732E7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241732E84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingAnalyticsEntryPointType()
{
  return &type metadata for StateOfMindLoggingAnalyticsEntryPointType;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingAnalyticsProvenanceType()
{
  return &type metadata for StateOfMindLoggingAnalyticsProvenanceType;
}

uint64_t getEnumTagSinglePayload for StateOfMindEntryPresentationStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindLoggingAnalyticsLoggingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_241732F94 + 4 * byte_2418D1A7C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_241732FC8 + 4 * byte_2418D1A77[v4]))();
}

uint64_t sub_241732FC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241732FD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241732FD8);
  return result;
}

uint64_t sub_241732FE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241732FECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241732FF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241732FF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241733004(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_24173300C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingAnalyticsLoggingType()
{
  return &type metadata for StateOfMindLoggingAnalyticsLoggingType;
}

uint64_t getEnumTagSinglePayload for StateOfMindEntryPhaseType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14MentalHealthUI41StateOfMindLoggingAnalyticsProvenanceTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_241733104 + 4 * byte_2418D1A86[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_241733138 + 4 * byte_2418D1A81[v4]))();
}

uint64_t sub_241733138(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241733140(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241733148);
  return result;
}

uint64_t sub_241733154(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24173315CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_241733160(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241733168(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingAnalyticsActionType()
{
  return &type metadata for StateOfMindLoggingAnalyticsActionType;
}

uint64_t getEnumTagSinglePayload for StateOfMindLoggingAnalyticsStepType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindLoggingAnalyticsStepType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_241733260 + 4 * byte_2418D1A90[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_241733294 + 4 * byte_2418D1A8B[v4]))();
}

uint64_t sub_241733294(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24173329C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2417332A4);
  return result;
}

uint64_t sub_2417332B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2417332B8);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2417332BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2417332C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2417332D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingAnalyticsStepType()
{
  return &type metadata for StateOfMindLoggingAnalyticsStepType;
}

unint64_t sub_2417332EC()
{
  unint64_t result;

  result = qword_25714C640;
  if (!qword_25714C640)
  {
    result = MEMORY[0x24269D47C](&unk_2418D1E2C, &type metadata for StateOfMindLoggingAnalyticsStepType);
    atomic_store(result, (unint64_t *)&qword_25714C640);
  }
  return result;
}

unint64_t sub_241733334()
{
  unint64_t result;

  result = qword_25714C648;
  if (!qword_25714C648)
  {
    result = MEMORY[0x24269D47C](&unk_2418D1ECC, &type metadata for StateOfMindLoggingAnalyticsActionType);
    atomic_store(result, (unint64_t *)&qword_25714C648);
  }
  return result;
}

unint64_t sub_24173337C()
{
  unint64_t result;

  result = qword_25714C650;
  if (!qword_25714C650)
  {
    result = MEMORY[0x24269D47C](&unk_2418D1F6C, &type metadata for StateOfMindLoggingAnalyticsLoggingType);
    atomic_store(result, (unint64_t *)&qword_25714C650);
  }
  return result;
}

uint64_t sub_2417333C0()
{
  unint64_t v0;

  v0 = sub_2418AA3F8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_241733408()
{
  unint64_t v0;

  v0 = sub_2418AA3F8();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

unint64_t sub_241733450()
{
  unint64_t result;

  result = qword_25714C658;
  if (!qword_25714C658)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindLoggingAnalyticsProvenanceType, &type metadata for StateOfMindLoggingAnalyticsProvenanceType);
    atomic_store(result, (unint64_t *)&qword_25714C658);
  }
  return result;
}

unint64_t sub_241733494()
{
  unint64_t result;

  result = qword_25714C660;
  if (!qword_25714C660)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindLoggingAnalyticsEntryPointType, &type metadata for StateOfMindLoggingAnalyticsEntryPointType);
    atomic_store(result, (unint64_t *)&qword_25714C660);
  }
  return result;
}

uint64_t *sub_2417334E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  void (*v121)(char *, char *);
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, char *);
  uint64_t v125;
  unsigned int (*v126)(char *, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A87CC();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (uint64_t *)((char *)v4 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[6];
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_2418A8EB0();
      v17 = *(_QWORD *)(v16 - 8);
      v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      if (v126((char *)v15, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v19 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v20 = v19[5];
      v21 = (char *)v14 + v20;
      v22 = (char *)v15 + v20;
      v23 = sub_2418A87B4();
      v124 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
      v125 = v23;
      v124(v21, v22);
      *((_BYTE *)v14 + v19[6]) = *((_BYTE *)v15 + v19[6]);
      v24 = v19[7];
      v25 = (char *)v14 + v24;
      v26 = (char *)v15 + v24;
      v27 = sub_2418A84E4();
      v121 = *(void (**)(char *, char *))(*(_QWORD *)(v27 - 8) + 16);
      v122 = v27;
      v121(v25, v26);
      v28 = v19[8];
      v29 = (char *)v14 + v28;
      v30 = (char *)v15 + v28;
      if (v126((char *)v15 + v28, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v29, v30, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v29, 0, 1, v16);
      }
      v32 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v125);
      v33 = v19[9];
      v34 = (char *)v14 + v33;
      v35 = (char *)v15 + v33;
      v123 = v17;
      if (v126((char *)v15 + v33, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v34, v35, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v34, 0, 1, v16);
      }
      v37 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v125);
      v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
      v38 = v19[10];
      v39 = (char *)v14 + v38;
      v40 = (char *)v15 + v38;
      if (v126((char *)v15 + v38, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        v42 = v123;
      }
      else
      {
        v42 = v123;
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v39, v40, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v39, 0, 1, v16);
      }
      v43 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v39[*(int *)(v43 + 20)], &v40[*(int *)(v43 + 20)], v125);
      v44 = v19[11];
      v45 = (char *)v14 + v44;
      v46 = (char *)v15 + v44;
      if (v126((char *)v15 + v44, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v45, v46, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v16);
      }
      v48 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v45[*(int *)(v48 + 20)], &v46[*(int *)(v48 + 20)], v125);
      v49 = v19[12];
      v50 = (char *)v14 + v49;
      v51 = (char *)v15 + v49;
      if (v126((char *)v15 + v49, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v50, v51, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v50, 0, 1, v16);
      }
      v53 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v50[v53[5]], &v51[v53[5]], v125);
      v50[v53[6]] = v51[v53[6]];
      ((void (*)(char *, char *, uint64_t))v121)(&v50[v53[7]], &v51[v53[7]], v122);
      v54 = v19[13];
      v55 = (char *)v14 + v54;
      v56 = (char *)v15 + v54;
      if (v126((char *)v15 + v54, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v55, v56, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v55, 0, 1, v16);
      }
      v58 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v125);
      v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
      v59 = v19[14];
      v60 = (char *)v14 + v59;
      v61 = (char *)v15 + v59;
      if (v126((char *)v15 + v59, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v60, v61, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v60, 0, 1, v16);
      }
      v63 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v125);
      v60[*(int *)(v63 + 24)] = v61[*(int *)(v63 + 24)];
      v64 = v19[15];
      v65 = (char *)v14 + v64;
      v66 = (char *)v15 + v64;
      if (v126((char *)v15 + v64, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        v68 = v123;
      }
      else
      {
        v68 = v123;
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v65, v66, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v65, 0, 1, v16);
      }
      v69 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v65[*(int *)(v69 + 20)], &v66[*(int *)(v69 + 20)], v125);
      v70 = v19[16];
      v71 = (char *)v14 + v70;
      v72 = (char *)v15 + v70;
      if (v126((char *)v15 + v70, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v71, v72, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v71, 0, 1, v16);
      }
      v74 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v125);
      v75 = v19[17];
      v76 = (char *)v14 + v75;
      v77 = (char *)v15 + v75;
      if (v126((char *)v15 + v75, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v76, v77, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v76, 0, 1, v16);
      }
      v79 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v125);
      v80 = v19[18];
      v81 = (char *)v14 + v80;
      v82 = (char *)v15 + v80;
      if (v126(v82, 1, v16))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v81, v82, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v81, 0, 1, v16);
      }
      v84 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v81[*(int *)(v84 + 20)], &v82[*(int *)(v84 + 20)], v125);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v85 = a3[7];
    v86 = (uint64_t *)((char *)v4 + v85);
    v87 = (char *)a2 + v85;
    v88 = *(uint64_t *)((char *)a2 + v85 + 8);
    *v86 = *(uint64_t *)((char *)a2 + v85);
    v86[1] = v88;
    sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v90 = *(int *)(v89 + 32);
    v91 = (_QWORD *)((char *)v86 + v90);
    v92 = &v87[v90];
    _s9ViewModelOMa();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v99 = *((_QWORD *)v92 + 1);
      *v91 = *(_QWORD *)v92;
      v91[1] = v99;
    }
    else
    {
      v93 = sub_2418A9CFC();
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v91, v92, v93);
      sub_2417340BC();
      v95 = *(int *)(v94 + 48);
      v96 = (_QWORD *)((char *)v91 + v95);
      v97 = &v92[v95];
      v98 = *((_QWORD *)v97 + 1);
      *v96 = *(_QWORD *)v97;
      v96[1] = v98;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    v100 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v101 = (uint64_t *)((char *)v4 + v100);
    v102 = (uint64_t *)((char *)a2 + v100);
    v103 = v102[1];
    *v101 = *v102;
    v101[1] = v103;
    v104 = a3[10];
    v105 = a3[11];
    v106 = (uint64_t *)((char *)v4 + v104);
    v107 = (uint64_t *)((char *)a2 + v104);
    v108 = v107[1];
    *v106 = *v107;
    v106[1] = v108;
    v109 = (uint64_t *)((char *)v4 + v105);
    v110 = (uint64_t *)((char *)a2 + v105);
    v111 = v110[1];
    *v109 = *v110;
    v109[1] = v111;
    v112 = a3[12];
    v113 = a3[13];
    v114 = (uint64_t *)((char *)v4 + v112);
    v115 = (uint64_t *)((char *)a2 + v112);
    v116 = v115[1];
    *v114 = *v115;
    v114[1] = v116;
    v117 = (uint64_t *)((char *)v4 + v113);
    v118 = (uint64_t *)((char *)a2 + v113);
    v119 = v118[1];
    *v117 = *v118;
    v117[1] = v119;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

void sub_2417340BC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714C678)
  {
    sub_2418A9CFC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714C678);
  }
}

uint64_t sub_241734124(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  int *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int EnumCaseMultiPayload;
  uint64_t v46;
  void (*v48)(uint64_t);
  uint64_t v49;
  int *v50;

  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A87CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + a2[5];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[6];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v50 = a2;
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v7 + v11[5];
    v13 = sub_2418A87B4();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v12, v13);
    v15 = v7 + v11[7];
    v16 = sub_2418A84E4();
    v48 = *(void (**)(uint64_t))(*(_QWORD *)(v16 - 8) + 8);
    v49 = v16;
    v48(v15);
    v17 = v7 + v11[8];
    if (!v10(v17, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
    v18 = _s6StylesV8TimelineVMa(0);
    v14(v17 + *(int *)(v18 + 20), v13);
    v19 = v7 + v11[9];
    if (!v10(v19, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v8);
    v20 = _s6StylesV6NoDataVMa(0);
    v14(v19 + *(int *)(v20 + 20), v13);
    v21 = v7 + v11[10];
    if (!v10(v21, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v21, v8);
    v22 = _s6StylesV11PlaceholderVMa(0);
    v14(v21 + *(int *)(v22 + 20), v13);
    v23 = v7 + v11[11];
    if (!v10(v23, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v8);
    v24 = _s6StylesV6SymbolVMa(0);
    v14(v23 + *(int *)(v24 + 20), v13);
    v25 = v7 + v11[12];
    if (!v10(v25, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v25, v8);
    v26 = v9;
    v27 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(v25 + *(int *)(v27 + 20), v13);
    v28 = *(int *)(v27 + 28);
    v29 = v26;
    ((void (*)(uint64_t, uint64_t))v48)(v25 + v28, v49);
    v30 = v7 + v11[13];
    if (!v10(v30, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v8);
    v31 = _s6StylesV5EmptyVMa(0);
    v14(v30 + *(int *)(v31 + 20), v13);
    v32 = v7 + v11[14];
    if (!v10(v32, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v8);
    v33 = _s6StylesV5DailyVMa(0);
    v14(v32 + *(int *)(v33 + 20), v13);
    v34 = v7 + v11[15];
    if (!v10(v34, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v8);
    v35 = _s6StylesV9MomentaryVMa(0);
    v14(v34 + *(int *)(v35 + 20), v13);
    v36 = v7 + v11[16];
    if (!v10(v36, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v8);
    v37 = _s6StylesV6HeaderVMa(0);
    v14(v36 + *(int *)(v37 + 20), v13);
    v38 = v7 + v11[17];
    if (!v10(v38, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v38, v8);
    v39 = _s6StylesV11ChartButtonVMa(0);
    v14(v38 + *(int *)(v39 + 20), v13);
    v40 = v7 + v11[18];
    if (!v10(v40, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v40, v8);
    v41 = _s6StylesV15LogButtonFooterVMa(0);
    v14(v40 + *(int *)(v41 + 20), v13);
    a2 = v50;
  }
  else
  {
    swift_release();
  }
  v42 = a1 + a2[7];
  swift_release();
  swift_release();
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v44 = v42 + *(int *)(v43 + 32);
  _s9ViewModelOMa();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2)
  {
    v46 = sub_2418A9CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v44, v46);
    sub_2417340BC();
LABEL_37:
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  if (EnumCaseMultiPayload == 2)
    goto LABEL_37;
LABEL_38:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_241734700(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  void (*v118)(char *, char *);
  uint64_t v119;
  int *v120;
  unsigned int (*v121)(char *, uint64_t, uint64_t);
  uint64_t v122;
  void (*v123)(char *, char *);
  uint64_t v124;

  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A87CC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2418A8EB0();
    v15 = *(_QWORD *)(v14 - 8);
    v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v122 = v15;
    v120 = a3;
    if (v121((char *)v13, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v18 = v17[5];
    v19 = (char *)v12 + v18;
    v20 = (char *)v13 + v18;
    v21 = sub_2418A87B4();
    v123 = *(void (**)(char *, char *))(*(_QWORD *)(v21 - 8) + 16);
    v124 = v21;
    v123(v19, v20);
    *((_BYTE *)v12 + v17[6]) = *((_BYTE *)v13 + v17[6]);
    v22 = v17[7];
    v23 = (char *)v12 + v22;
    v24 = (char *)v13 + v22;
    v25 = sub_2418A84E4();
    v118 = *(void (**)(char *, char *))(*(_QWORD *)(v25 - 8) + 16);
    v119 = v25;
    v118(v23, v24);
    v26 = v17[8];
    v27 = (char *)v12 + v26;
    v28 = (char *)v13 + v26;
    v29 = v121;
    if (v121((char *)v13 + v26, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v27, v28, v14);
      v29 = v121;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v27, 0, 1, v14);
    }
    v31 = _s6StylesV8TimelineVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v27[*(int *)(v31 + 20)], &v28[*(int *)(v31 + 20)], v124);
    v32 = v17[9];
    v33 = (char *)v12 + v32;
    v34 = (char *)v13 + v32;
    if (v29((char *)v13 + v32, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v33, v34, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v33, 0, 1, v14);
    }
    v36 = _s6StylesV6NoDataVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v124);
    v33[*(int *)(v36 + 24)] = v34[*(int *)(v36 + 24)];
    v37 = v17[10];
    v38 = (char *)v12 + v37;
    v39 = (char *)v13 + v37;
    if (v29((char *)v13 + v37, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v38, v39, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v38, 0, 1, v14);
    }
    v41 = _s6StylesV11PlaceholderVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v124);
    v42 = v17[11];
    v43 = (char *)v12 + v42;
    v44 = (char *)v13 + v42;
    if (v29((char *)v13 + v42, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v43, v44, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v43, 0, 1, v14);
    }
    v46 = _s6StylesV6SymbolVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v43[*(int *)(v46 + 20)], &v44[*(int *)(v46 + 20)], v124);
    v47 = v17[12];
    v48 = (char *)v12 + v47;
    v49 = (char *)v13 + v47;
    if (v29((char *)v13 + v47, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v48, v49, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v48, 0, 1, v14);
    }
    v51 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v48[v51[5]], &v49[v51[5]], v124);
    v48[v51[6]] = v49[v51[6]];
    ((void (*)(char *, char *, uint64_t))v118)(&v48[v51[7]], &v49[v51[7]], v119);
    v52 = v17[13];
    v53 = (char *)v12 + v52;
    v54 = (char *)v13 + v52;
    if (v29((char *)v13 + v52, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v53, v54, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v53, 0, 1, v14);
    }
    v56 = _s6StylesV5EmptyVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v124);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = v17[14];
    v58 = (char *)v12 + v57;
    v59 = (char *)v13 + v57;
    if (v29((char *)v13 + v57, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v58, v59, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v58, 0, 1, v14);
    }
    v61 = _s6StylesV5DailyVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v124);
    v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
    v62 = v17[15];
    v63 = (char *)v12 + v62;
    v64 = (char *)v13 + v62;
    if (v29((char *)v13 + v62, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v63, v64, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v63, 0, 1, v14);
    }
    v66 = _s6StylesV9MomentaryVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v124);
    v67 = v17[16];
    v68 = (char *)v12 + v67;
    v69 = (char *)v13 + v67;
    if (v29((char *)v13 + v67, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v68, v69, v14);
      v29 = v121;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v68, 0, 1, v14);
    }
    v71 = _s6StylesV6HeaderVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v124);
    v72 = v17[17];
    v73 = (char *)v12 + v72;
    v74 = (char *)v13 + v72;
    if (v29((char *)v13 + v72, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v73, v74, v14);
      v29 = v121;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v73, 0, 1, v14);
    }
    v76 = _s6StylesV11ChartButtonVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v124);
    v77 = v17[18];
    v78 = (char *)v12 + v77;
    v79 = (char *)v13 + v77;
    if (v29(v79, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v78, v79, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v78, 0, 1, v14);
    }
    v81 = _s6StylesV15LogButtonFooterVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v78[*(int *)(v81 + 20)], &v79[*(int *)(v81 + 20)], v124);
    a3 = v120;
  }
  else
  {
    *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v82 = a3[7];
  v83 = (_QWORD *)((char *)a1 + v82);
  v84 = (char *)a2 + v82;
  v85 = *(_QWORD *)((char *)a2 + v82 + 8);
  *v83 = *(_QWORD *)((char *)a2 + v82);
  v83[1] = v85;
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v87 = *(int *)(v86 + 32);
  v88 = (_QWORD *)((char *)v83 + v87);
  v89 = &v84[v87];
  _s9ViewModelOMa();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v96 = *((_QWORD *)v89 + 1);
    *v88 = *(_QWORD *)v89;
    v88[1] = v96;
  }
  else
  {
    v90 = sub_2418A9CFC();
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
    sub_2417340BC();
    v92 = *(int *)(v91 + 48);
    v93 = (_QWORD *)((char *)v88 + v92);
    v94 = &v89[v92];
    v95 = *((_QWORD *)v94 + 1);
    *v93 = *(_QWORD *)v94;
    v93[1] = v95;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v97 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v98 = (_QWORD *)((char *)a1 + v97);
  v99 = (_QWORD *)((char *)a2 + v97);
  v100 = v99[1];
  *v98 = *v99;
  v98[1] = v100;
  v101 = a3[10];
  v102 = a3[11];
  v103 = (_QWORD *)((char *)a1 + v101);
  v104 = (_QWORD *)((char *)a2 + v101);
  v105 = v104[1];
  *v103 = *v104;
  v103[1] = v105;
  v106 = (_QWORD *)((char *)a1 + v102);
  v107 = (_QWORD *)((char *)a2 + v102);
  v108 = v107[1];
  *v106 = *v107;
  v106[1] = v108;
  v109 = a3[12];
  v110 = a3[13];
  v111 = (_QWORD *)((char *)a1 + v109);
  v112 = (_QWORD *)((char *)a2 + v109);
  v113 = v112[1];
  *v111 = *v112;
  v111[1] = v113;
  v114 = (_QWORD *)((char *)a1 + v110);
  v115 = (_QWORD *)((char *)a2 + v110);
  v116 = v115[1];
  *v114 = *v115;
  v114[1] = v116;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_2417352B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  void (*v119)(char *, char *);
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, char *);
  uint64_t v123;
  unsigned int (*v124)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED130];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714C668, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A87CC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v9, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v12, v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, v11, v14);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[6];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    sub_24173FC60((uint64_t)a1 + v15, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v13);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2418A8EB0();
      v19 = *(_QWORD *)(v18 - 8);
      v124 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v124((char *)v17, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v21 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v22 = v21[5];
      v23 = (char *)v16 + v22;
      v24 = (char *)v17 + v22;
      v25 = sub_2418A87B4();
      v122 = *(void (**)(char *, char *))(*(_QWORD *)(v25 - 8) + 16);
      v123 = v25;
      v122(v23, v24);
      *((_BYTE *)v16 + v21[6]) = *((_BYTE *)v17 + v21[6]);
      v26 = v21[7];
      v27 = (char *)v16 + v26;
      v28 = (char *)v17 + v26;
      v29 = sub_2418A84E4();
      v119 = *(void (**)(char *, char *))(*(_QWORD *)(v29 - 8) + 16);
      v120 = v29;
      v119(v27, v28);
      v30 = v21[8];
      v31 = (char *)v16 + v30;
      v32 = (char *)v17 + v30;
      if (v124((char *)v17 + v30, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v31, v32, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v31, 0, 1, v18);
      }
      v34 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v122)(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v123);
      v35 = v21[9];
      v36 = (char *)v16 + v35;
      v37 = (char *)v17 + v35;
      v121 = v19;
      if (v124((char *)v17 + v35, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v36, v37, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v36, 0, 1, v18);
      }
      v39 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v122)(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v123);
      v36[*(int *)(v39 + 24)] = v37[*(int *)(v39 + 24)];
      v40 = v21[10];
      v41 = (char *)v16 + v40;
      v42 = (char *)v17 + v40;
      if (v124((char *)v17 + v40, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        v44 = v121;
      }
      else
      {
        v44 = v121;
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v41, v42, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v41, 0, 1, v18);
      }
      v45 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v122)(&v41[*(int *)(v45 + 20)], &v42[*(int *)(v45 + 20)], v123);
      v46 = v21[11];
      v47 = (char *)v16 + v46;
      v48 = (char *)v17 + v46;
      if (v124((char *)v17 + v46, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v47, v48, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v47, 0, 1, v18);
      }
      v50 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v122)(&v47[*(int *)(v50 + 20)], &v48[*(int *)(v50 + 20)], v123);
      v51 = v21[12];
      v52 = (char *)v16 + v51;
      v53 = (char *)v17 + v51;
      if (v124((char *)v17 + v51, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v52, v53, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v52, 0, 1, v18);
      }
      v55 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v122)(&v52[v55[5]], &v53[v55[5]], v123);
      v52[v55[6]] = v53[v55[6]];
      ((void (*)(char *, char *, uint64_t))v119)(&v52[v55[7]], &v53[v55[7]], v120);
      v56 = v21[13];
      v57 = (char *)v16 + v56;
      v58 = (char *)v17 + v56;
      if (v124((char *)v17 + v56, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v57, v58, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v57, 0, 1, v18);
      }
      v60 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v122)(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v123);
      v57[*(int *)(v60 + 24)] = v58[*(int *)(v60 + 24)];
      v61 = v21[14];
      v62 = (char *)v16 + v61;
      v63 = (char *)v17 + v61;
      if (v124((char *)v17 + v61, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v62, v63, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v62, 0, 1, v18);
      }
      v65 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v122)(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v123);
      v62[*(int *)(v65 + 24)] = v63[*(int *)(v65 + 24)];
      v66 = v21[15];
      v67 = (char *)v16 + v66;
      v68 = (char *)v17 + v66;
      if (v124((char *)v17 + v66, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        v70 = v121;
      }
      else
      {
        v70 = v121;
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v67, v68, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v67, 0, 1, v18);
      }
      v71 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v122)(&v67[*(int *)(v71 + 20)], &v68[*(int *)(v71 + 20)], v123);
      v72 = v21[16];
      v73 = (char *)v16 + v72;
      v74 = (char *)v17 + v72;
      if (v124((char *)v17 + v72, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v73, v74, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v73, 0, 1, v18);
      }
      v76 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v122)(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v123);
      v77 = v21[17];
      v78 = (char *)v16 + v77;
      v79 = (char *)v17 + v77;
      if (v124((char *)v17 + v77, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v78, v79, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v78, 0, 1, v18);
      }
      v81 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v122)(&v78[*(int *)(v81 + 20)], &v79[*(int *)(v81 + 20)], v123);
      v82 = v21[18];
      v83 = (char *)v16 + v82;
      v84 = (char *)v17 + v82;
      if (v124(v84, 1, v18))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v83, v84, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v83, 0, 1, v18);
      }
      v86 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v122)(&v83[*(int *)(v86 + 20)], &v84[*(int *)(v86 + 20)], v123);
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v87 = a3[7];
  v88 = (char *)a1 + v87;
  v89 = (char *)a2 + v87;
  *(_QWORD *)((char *)a1 + v87) = *(_QWORD *)((char *)a2 + v87);
  swift_retain();
  swift_release();
  *((_QWORD *)v88 + 1) = *((_QWORD *)v89 + 1);
  swift_retain();
  swift_release();
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  if (a1 != a2)
  {
    v91 = *(int *)(v90 + 32);
    v92 = &v88[v91];
    v93 = &v89[v91];
    sub_24172588C((uint64_t)&v88[v91], (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    _s9ViewModelOMa();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *((_QWORD *)v92 + 1) = *((_QWORD *)v93 + 1);
    }
    else
    {
      v94 = sub_2418A9CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v92, v93, v94);
      sub_2417340BC();
      v96 = *(int *)(v95 + 48);
      v97 = &v92[v96];
      v98 = &v93[v96];
      *(_QWORD *)v97 = *(_QWORD *)v98;
      *((_QWORD *)v97 + 1) = *((_QWORD *)v98 + 1);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v99 = a3[9];
  v100 = (_QWORD *)((char *)a1 + v99);
  v101 = (_QWORD *)((char *)a2 + v99);
  v102 = v101[1];
  *v100 = *v101;
  v100[1] = v102;
  swift_retain();
  swift_release();
  v103 = a3[10];
  v104 = (_QWORD *)((char *)a1 + v103);
  v105 = (_QWORD *)((char *)a2 + v103);
  v106 = v105[1];
  *v104 = *v105;
  v104[1] = v106;
  swift_retain();
  swift_release();
  v107 = a3[11];
  v108 = (_QWORD *)((char *)a1 + v107);
  v109 = (_QWORD *)((char *)a2 + v107);
  v110 = v109[1];
  *v108 = *v109;
  v108[1] = v110;
  swift_retain();
  swift_release();
  v111 = a3[12];
  v112 = (_QWORD *)((char *)a1 + v111);
  v113 = (_QWORD *)((char *)a2 + v111);
  v114 = v113[1];
  *v112 = *v113;
  v112[1] = v114;
  swift_retain();
  swift_release();
  v115 = a3[13];
  v116 = (_QWORD *)((char *)a1 + v115);
  v117 = (_QWORD *)((char *)a2 + v115);
  *v116 = *v117;
  v116[1] = v117[1];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_241735F48(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v104)(char *, char *);
  uint64_t v105;
  char *v106;
  char *v107;
  int *v108;
  uint64_t v109;

  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A87CC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v10, v11, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v106 = a1;
    v107 = a2;
    v108 = a3;
    v20 = sub_2418A8EB0();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    v109 = v21;
    if (v22(v17, 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v16, v17, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
    }
    v24 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v25 = v24[5];
    v26 = &v16[v25];
    v27 = &v17[v25];
    v28 = sub_2418A87B4();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
    v29(v26, v27, v28);
    v16[v24[6]] = v17[v24[6]];
    v30 = v24[7];
    v31 = &v16[v30];
    v32 = &v17[v30];
    v33 = sub_2418A84E4();
    v104 = *(void (**)(char *, char *))(*(_QWORD *)(v33 - 8) + 32);
    v105 = v33;
    v104(v31, v32);
    v34 = v24[8];
    v35 = &v16[v34];
    v36 = &v17[v34];
    if (v22(&v17[v34], 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v35, v36, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v35, 0, 1, v20);
    }
    v38 = _s6StylesV8TimelineVMa(0);
    v29(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v28);
    v39 = v24[9];
    v40 = &v16[v39];
    v41 = &v17[v39];
    if (v22(&v17[v39], 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v40, v41, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v40, 0, 1, v20);
    }
    v43 = _s6StylesV6NoDataVMa(0);
    v29(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v28);
    v40[*(int *)(v43 + 24)] = v41[*(int *)(v43 + 24)];
    v44 = v24[10];
    v45 = &v16[v44];
    v46 = &v17[v44];
    if (v22(&v17[v44], 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v45, v46, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v45, 0, 1, v20);
    }
    v48 = _s6StylesV11PlaceholderVMa(0);
    v29(&v45[*(int *)(v48 + 20)], &v46[*(int *)(v48 + 20)], v28);
    v49 = v24[11];
    v50 = &v16[v49];
    v51 = &v17[v49];
    if (v22(&v17[v49], 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v50, v51, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v50, 0, 1, v20);
    }
    v53 = _s6StylesV6SymbolVMa(0);
    v29(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v28);
    v54 = v24[12];
    v55 = &v16[v54];
    v56 = &v17[v54];
    if (v22(&v17[v54], 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v55, v56, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v55, 0, 1, v20);
    }
    v58 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v29(&v55[v58[5]], &v56[v58[5]], v28);
    v55[v58[6]] = v56[v58[6]];
    ((void (*)(char *, char *, uint64_t))v104)(&v55[v58[7]], &v56[v58[7]], v105);
    v59 = v24[13];
    v60 = &v16[v59];
    v61 = &v17[v59];
    if (v22(&v17[v59], 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v60, v61, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v60, 0, 1, v20);
    }
    v63 = _s6StylesV5EmptyVMa(0);
    v29(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v28);
    v60[*(int *)(v63 + 24)] = v61[*(int *)(v63 + 24)];
    v64 = v24[14];
    v65 = &v16[v64];
    v66 = &v17[v64];
    if (v22(&v17[v64], 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v65, v66, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v65, 0, 1, v20);
    }
    v68 = _s6StylesV5DailyVMa(0);
    v29(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v28);
    v65[*(int *)(v68 + 24)] = v66[*(int *)(v68 + 24)];
    v69 = v24[15];
    v70 = &v16[v69];
    v71 = &v17[v69];
    if (v22(&v17[v69], 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v70, v71, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v70, 0, 1, v20);
    }
    v73 = _s6StylesV9MomentaryVMa(0);
    v29(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v28);
    v74 = v24[16];
    v75 = &v16[v74];
    v76 = &v17[v74];
    if (v22(&v17[v74], 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v75, v76, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v75, 0, 1, v20);
    }
    v78 = _s6StylesV6HeaderVMa(0);
    v29(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v28);
    v79 = v24[17];
    v80 = &v16[v79];
    v81 = &v17[v79];
    if (v22(&v17[v79], 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v80, v81, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v80, 0, 1, v20);
    }
    v83 = _s6StylesV11ChartButtonVMa(0);
    v29(&v80[*(int *)(v83 + 20)], &v81[*(int *)(v83 + 20)], v28);
    v84 = v24[18];
    v85 = &v16[v84];
    v86 = &v17[v84];
    if (v22(v86, 1, v20))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v85, v86, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v85, 0, 1, v20);
    }
    a3 = v108;
    v88 = _s6StylesV15LogButtonFooterVMa(0);
    v29(&v85[*(int *)(v88 + 20)], &v86[*(int *)(v88 + 20)], v28);
    swift_storeEnumTagMultiPayload();
    a1 = v106;
    a2 = v107;
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v89 = a3[7];
  v90 = &a1[v89];
  v91 = &a2[v89];
  v92 = *(_QWORD *)&a2[v89 + 8];
  *(_QWORD *)v90 = *(_QWORD *)&a2[v89];
  *((_QWORD *)v90 + 1) = v92;
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v94 = *(int *)(v93 + 32);
  v95 = &v90[v94];
  v96 = &v91[v94];
  v97 = _s9ViewModelOMa();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    v98 = sub_2418A9CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v95, v96, v98);
    sub_2417340BC();
    *(_OWORD *)&v95[*(int *)(v99 + 48)] = *(_OWORD *)&v96[*(int *)(v99 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  v100 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v100] = *(_OWORD *)&a2[v100];
  v101 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v101] = *(_OWORD *)&a2[v101];
  v102 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)&a1[v102] = *(_OWORD *)&a2[v102];
  return a1;
}

char *sub_241736B54(char *a1, char *a2, int *a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  void (*v108)(char *, char *);
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *);
  uint64_t v112;
  unsigned int (*v113)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED130];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714C668, v6, v7);
    v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A87CC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    v11 = a3[5];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)&a1[v11], (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v14, v15);
    v17 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v12, v13, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    v19 = a3[6];
    v20 = &a1[v19];
    v21 = &a2[v19];
    sub_24173FC60((uint64_t)&a1[v19], &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v15);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v15);
    v23 = v22;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_2418A8EB0();
      v25 = *(_QWORD *)(v24 - 8);
      v113 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      if (v113(v21, 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v20, v21, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v24);
      }
      v27 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v28 = v27[5];
      v29 = &v20[v28];
      v30 = &v21[v28];
      v31 = sub_2418A87B4();
      v111 = *(void (**)(char *, char *))(*(_QWORD *)(v31 - 8) + 32);
      v112 = v31;
      v111(v29, v30);
      v20[v27[6]] = v21[v27[6]];
      v32 = v27[7];
      v33 = &v20[v32];
      v34 = &v21[v32];
      v35 = sub_2418A84E4();
      v108 = *(void (**)(char *, char *))(*(_QWORD *)(v35 - 8) + 32);
      v109 = v35;
      v108(v33, v34);
      v36 = v27[8];
      v37 = &v20[v36];
      v38 = &v21[v36];
      if (v113(&v21[v36], 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v37, v38, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v37, 0, 1, v24);
      }
      v40 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v111)(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v112);
      v41 = v27[9];
      v42 = &v20[v41];
      v43 = &v21[v41];
      v110 = v25;
      if (v113(&v21[v41], 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v42, v43, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v42, 0, 1, v24);
      }
      v45 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v111)(&v42[*(int *)(v45 + 20)], &v43[*(int *)(v45 + 20)], v112);
      v42[*(int *)(v45 + 24)] = v43[*(int *)(v45 + 24)];
      v46 = v27[10];
      v47 = &v20[v46];
      v48 = &v21[v46];
      if (v113(&v21[v46], 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v110;
      }
      else
      {
        v50 = v110;
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v47, v48, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v47, 0, 1, v24);
      }
      v51 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v111)(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v112);
      v52 = v27[11];
      v53 = &v20[v52];
      v54 = &v21[v52];
      if (v113(&v21[v52], 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v24);
      }
      v56 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v111)(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v112);
      v57 = v27[12];
      v58 = &v20[v57];
      v59 = &v21[v57];
      if (v113(&v21[v57], 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v24);
      }
      v61 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v111)(&v58[v61[5]], &v59[v61[5]], v112);
      v58[v61[6]] = v59[v61[6]];
      ((void (*)(char *, char *, uint64_t))v108)(&v58[v61[7]], &v59[v61[7]], v109);
      v62 = v27[13];
      v63 = &v20[v62];
      v64 = &v21[v62];
      if (v113(&v21[v62], 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v63, v64, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v63, 0, 1, v24);
      }
      v66 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v111)(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v112);
      v63[*(int *)(v66 + 24)] = v64[*(int *)(v66 + 24)];
      v67 = v27[14];
      v68 = &v20[v67];
      v69 = &v21[v67];
      if (v113(&v21[v67], 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v68, v69, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v68, 0, 1, v24);
      }
      v71 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v111)(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v112);
      v68[*(int *)(v71 + 24)] = v69[*(int *)(v71 + 24)];
      v72 = v27[15];
      v73 = &v20[v72];
      v74 = &v21[v72];
      if (v113(&v21[v72], 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        v76 = v110;
      }
      else
      {
        v76 = v110;
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v73, v74, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v73, 0, 1, v24);
      }
      v77 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v111)(&v73[*(int *)(v77 + 20)], &v74[*(int *)(v77 + 20)], v112);
      v78 = v27[16];
      v79 = &v20[v78];
      v80 = &v21[v78];
      if (v113(&v21[v78], 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v79, v80, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v79, 0, 1, v24);
      }
      v82 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v111)(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v112);
      v83 = v27[17];
      v84 = &v20[v83];
      v85 = &v21[v83];
      if (v113(&v21[v83], 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v84, v85, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v84, 0, 1, v24);
      }
      v87 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v111)(&v84[*(int *)(v87 + 20)], &v85[*(int *)(v87 + 20)], v112);
      v88 = v27[18];
      v89 = &v20[v88];
      v90 = &v21[v88];
      if (v113(v90, 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v89, v90, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v89, 0, 1, v24);
      }
      v92 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v111)(&v89[*(int *)(v92 + 20)], &v90[*(int *)(v92 + 20)], v112);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  v93 = a3[7];
  v94 = &a1[v93];
  v95 = &a2[v93];
  *(_QWORD *)&a1[v93] = *(_QWORD *)&a2[v93];
  swift_release();
  *((_QWORD *)v94 + 1) = *((_QWORD *)v95 + 1);
  swift_release();
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  if (a1 != a2)
  {
    v97 = *(int *)(v96 + 32);
    v98 = &v94[v97];
    v99 = &v95[v97];
    sub_24172588C((uint64_t)v98, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    v100 = _s9ViewModelOMa();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
    else
    {
      v101 = sub_2418A9CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v98, v99, v101);
      sub_2417340BC();
      *(_OWORD *)&v98[*(int *)(v102 + 48)] = *(_OWORD *)&v99[*(int *)(v102 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  v103 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v103] = *(_OWORD *)&a2[v103];
  swift_release();
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  swift_release();
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  swift_release();
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  swift_release();
  v104 = a3[13];
  v105 = &a1[v104];
  v106 = &a2[v104];
  *(_QWORD *)v105 = *(_QWORD *)v106;
  *((_QWORD *)v105 + 1) = *((_QWORD *)v106 + 1);
  swift_release();
  return a1;
}

uint64_t sub_2417377C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417377D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  sub_24172570C(0, qword_25714C680, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_9;
  }
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[9]);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t sub_241737924()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_241737930(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_24172570C(0, qword_25714C680, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_10:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_9;
  }
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v14 = *(_QWORD *)(v17 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v17;
    v15 = a4[7];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
}

uint64_t _s16TimelineDataViewVMa()
{
  uint64_t result;

  result = qword_25714C6E0;
  if (!qword_25714C6E0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241737AB8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_24172570C(319, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
      {
        sub_24172570C(319, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_241737C00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241737C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v0 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v2 = MEMORY[0x24BDAC7A8](v0, v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v2, v5);
  v8 = (char *)&v13 - v7;
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v13 - v10;
  _s16TimelineDataViewVMa();
  sub_241860D60((uint64_t)v11);
  sub_24172588C((uint64_t)v11, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v8);
  sub_24172588C((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v4);
  return sub_24172588C((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles);
}

double sub_241737D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  _QWORD v32[4];

  v1 = _s9ViewModelOMa();
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)v32 - v7;
  v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)v32 - v15;
  v17 = _s16TimelineDataViewVMa();
  sub_241860D60((uint64_t)v16);
  sub_24172588C((uint64_t)v16, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v13);
  sub_24172588C((uint64_t)v13, type metadata accessor for StateOfMindTimeline.Styles);
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C]();
  sub_2417289A8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_2417340BC();
      swift_bridgeObjectRelease();
      v19 = sub_2418A9CFC();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v5, v19);
      v20 = 1.0;
    }
    else
    {
      v22 = *((_QWORD *)v5 + 1);
      swift_bridgeObjectRelease();
      v20 = (double)v22;
    }
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v21 = sub_2418A9CFC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v5, v21);
    v20 = 0.0;
  }
  sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  sub_241737C10();
  v24 = v23;
  sub_241860D60((uint64_t)v16);
  sub_24172588C((uint64_t)v16, type metadata accessor for StateOfMindTimeline.Styles);
  v25 = (uint64_t *)(v0 + *(int *)(v17 + 52));
  v26 = *v25;
  v27 = v25[1];
  v32[1] = v26;
  v32[2] = v27;
  sub_24172887C(0, &qword_25714CA00, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  v28 = 20.0 - v20 * (v24 + 10.0) + *(double *)&v32[3];
  v29 = *(double *)(v0 + *(int *)(v17 + 32));
  sub_241860D60((uint64_t)v16);
  sub_24172588C((uint64_t)v16, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v13);
  sub_24172588C((uint64_t)v13, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241737C10();
  return v28 + (v29 + -40.0 - v30) * 0.5;
}

uint64_t sub_24173803C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  unsigned int *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(void);
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int EnumCaseMultiPayload;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  double v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  unint64_t v155;
  unint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  int *v170;
  int *v171;
  char *v172;
  char *v173;
  char *v174;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  unint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  int *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unsigned __int8 v224;
  uint64_t v225;
  unsigned __int8 v226;
  uint64_t v227;
  uint64_t v228;
  void *v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  uint64_t v233;
  char *v234;

  v212 = a2;
  v191 = _s9LogButtonVMa();
  MEMORY[0x24BDAC7A8](v191, v3);
  v195 = (uint64_t *)((char *)&v176 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24173DBC8(0);
  v194 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v205 = (char *)&v176 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173DB44();
  v208 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v209 = (char *)&v176 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173DB28(0);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v211 = (uint64_t)&v176 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v207 = (char *)&v176 - v17;
  MEMORY[0x24BDAC7A8](v16, v18);
  v210 = (uint64_t)&v176 - v19;
  v20 = sub_2418A88D4();
  MEMORY[0x24BDAC7A8](v20, v21);
  v185 = (char *)&v176 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_2418A99B4();
  v183 = *(_QWORD *)(v184 - 8);
  MEMORY[0x24BDAC7A8](v184, v23);
  v182 = (char *)&v176 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = sub_2418A84E4();
  v181 = *(_QWORD *)(v214 - 8);
  v26 = MEMORY[0x24BDAC7A8](v214, v25);
  v180 = (char *)&v176 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v28);
  v213 = (unint64_t)&v176 - v29;
  v203 = (char *)sub_2418A91E0();
  v177 = *((_QWORD *)v203 - 1);
  MEMORY[0x24BDAC7A8](v203, v30);
  v32 = (char *)&v176 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = _s9ViewModelOMa();
  v34 = MEMORY[0x24BDAC7A8](v222, v33);
  v192 = (uint64_t)&v176 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v193 = (char *)&v176 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v189 = (uint64_t)&v176 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v190 = (char *)&v176 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v187 = (uint64_t)&v176 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v188 = (char *)&v176 - v50;
  MEMORY[0x24BDAC7A8](v49, v51);
  v53 = (char *)&v176 - v52;
  sub_241730780();
  v216 = v54;
  MEMORY[0x24BDAC7A8](v54, v55);
  v215 = (char *)&v176 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173DB0C(0);
  v59 = MEMORY[0x24BDAC7A8](v57, v58);
  v206 = (uint64_t)&v176 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = MEMORY[0x24BDAC7A8](v59, v61);
  v186 = (char *)&v176 - v63;
  MEMORY[0x24BDAC7A8](v62, v64);
  v220 = (uint64_t)&v176 - v65;
  v66 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v68 = MEMORY[0x24BDAC7A8](v66, v67);
  v70 = (char *)&v176 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v68, v71);
  v73 = (char *)&v176 - v72;
  v74 = (int *)_s16TimelineDataViewVMa();
  v75 = a1 + v74[6];
  sub_241860D60((uint64_t)v73);
  sub_24172588C((uint64_t)v73, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v70);
  sub_24172588C((uint64_t)v70, type metadata accessor for StateOfMindTimeline.Styles);
  v76 = v74[8];
  v217 = v74;
  v196 = v76;
  sub_241860D60((uint64_t)v73);
  sub_24172588C((uint64_t)v73, type metadata accessor for StateOfMindTimeline.Styles);
  v219 = v75;
  sub_241860D60((uint64_t)v70);
  v204 = v70;
  sub_24172588C((uint64_t)v70, type metadata accessor for StateOfMindTimeline.Styles);
  v221 = a1;
  sub_241737C10();
  sub_2418A9960();
  sub_2418A861C();
  v202 = v223;
  v201 = v224;
  v200 = v225;
  v199 = v226;
  v198 = v227;
  v197 = v228;
  v179 = a1 + v74[7];
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v178 = v77;
  MEMORY[0x24269C00C]();
  v218 = v53;
  v78 = sub_241848440();
  v80 = v79;
  sub_24172588C((uint64_t)v53, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v229 = (void *)v78;
  v230 = v80;
  sub_241721040();
  v81 = sub_2418A92D0();
  v83 = v82;
  v85 = v84 & 1;
  sub_241860D60((uint64_t)v73);
  sub_24172588C((uint64_t)v73, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A91C8();
  v86 = v177;
  v87 = (uint64_t)v203;
  (*(void (**)(char *, _QWORD, char *))(v177 + 104))(v32, *MEMORY[0x24BDF17C8], v203);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v32, v87);
  v88 = sub_2418A9294();
  v90 = v89;
  LOBYTE(v87) = v91 & 1;
  sub_2417289EC(v81, v83, v85);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241860D60((uint64_t)v73);
  v203 = v73;
  sub_24172588C((uint64_t)v73, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9198();
  v92 = sub_2418A9258();
  v94 = v93;
  v177 = v95;
  v97 = v96 & 1;
  sub_2417289EC(v88, v90, v87);
  swift_bridgeObjectRelease();
  sub_241861034(v213);
  v98 = v181;
  v99 = v180;
  v100 = v214;
  (*(void (**)(char *, _QWORD, uint64_t))(v181 + 104))(v180, *MEMORY[0x24BDEB400], v214);
  LOBYTE(v80) = sub_2418A84D8();
  v101 = *(void (**)(char *, uint64_t))(v98 + 8);
  v101(v99, v100);
  v102 = (unsigned int *)MEMORY[0x24BDF5080];
  v103 = v183;
  if ((v80 & 1) == 0)
    v102 = (unsigned int *)MEMORY[0x24BDF5098];
  v104 = v182;
  v105 = v184;
  (*(void (**)(char *, _QWORD, uint64_t))(v183 + 104))(v182, *v102, v184);
  v106 = v185;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v185, v104, v105);
  v107 = v215;
  v108 = (uint64_t)v106;
  v109 = (uint64_t)v106;
  v110 = MEMORY[0x24BDEDB60];
  sub_2417289A8(v108, (uint64_t)&v215[*(int *)(v216 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  *(_QWORD *)v107 = v92;
  *((_QWORD *)v107 + 1) = v94;
  v107[16] = v97;
  *((_QWORD *)v107 + 3) = v177;
  sub_241728A50(v92, v94, v97);
  swift_bridgeObjectRetain();
  sub_24172588C(v109, (uint64_t (*)(_QWORD))v110);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v105);
  v101((char *)v213, v214);
  sub_2417289EC(v92, v94, v97);
  swift_bridgeObjectRelease();
  v111 = (uint64_t)v218;
  v112 = v178;
  MEMORY[0x24269C00C]();
  sub_24172588C(v111, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v113 = qword_2511AB8A8;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v113 = sub_241802714(0, 2, 1, qword_2511AB8A8);
  v115 = v113[2];
  v114 = v113[3];
  if (v115 >= v114 >> 1)
    v113 = sub_241802714((_QWORD *)(v114 > 1), v115 + 1, 1, v113);
  v116 = v195;
  v113[2] = v115 + 1;
  v117 = &v113[2 * v115];
  v117[4] = 0x6562614C65746144;
  v117[5] = 0xE90000000000006CLL;
  v229 = &unk_2511AB450;
  v118 = swift_bridgeObjectRetain();
  sub_2417739BC(v118);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v120 = v119;
  v121 = sub_241731AEC();
  v214 = v120;
  v213 = v121;
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241731CDC();
  v122 = (uint64_t)v186;
  v123 = (uint64_t)v215;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_24172588C(v123, (uint64_t (*)(_QWORD))sub_241730780);
  sub_241731B4C(v122, v220, (uint64_t (*)(_QWORD))sub_24173DB0C);
  v124 = (uint64_t)v188;
  MEMORY[0x24269C00C](v112);
  v125 = v187;
  sub_2417289A8(v124, v187, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v127 = (uint64_t)v209;
    if (EnumCaseMultiPayload == 1)
    {
      sub_2417340BC();
      swift_bridgeObjectRelease();
      v128 = sub_2418A9CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 8))(v125, v128);
      v216 = 0;
    }
    else
    {
      sub_24172588C(v125, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
      v216 = 0x4030000000000000;
    }
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v129 = sub_2418A9CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 8))(v125, v129);
    v216 = 0;
    v127 = (uint64_t)v209;
  }
  sub_24172588C(v124, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  if (qword_25714B958 != -1)
    swift_once();
  v130 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v131 = sub_2418A7EFC();
  v133 = v132;
  swift_bridgeObjectRelease();

  v134 = (uint64_t *)(v221 + v217[9]);
  v136 = *v134;
  v135 = v134[1];
  *v116 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v137 = v191;
  v138 = (uint64_t *)((char *)v116 + *(int *)(v191 + 20));
  *v138 = v131;
  v138[1] = v133;
  v139 = (uint64_t *)((char *)v116 + *(int *)(v137 + 24));
  *v139 = v136;
  v139[1] = v135;
  swift_retain();
  v140 = (uint64_t)v190;
  MEMORY[0x24269C00C](v112);
  v141 = v189;
  sub_2417289A8(v140, v189, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v142 = swift_getEnumCaseMultiPayload();
  if (v142)
  {
    v143 = (uint64_t)v205;
    v144 = v208;
    if (v142 == 1)
    {
      sub_2417340BC();
      swift_bridgeObjectRelease();
      v145 = sub_2418A9CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 8))(v141, v145);
      v146 = 0.0;
    }
    else
    {
      sub_24172588C(v141, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
      v146 = 1.0;
    }
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v147 = sub_2418A9CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 8))(v141, v147);
    v146 = 0.0;
    v143 = (uint64_t)v205;
    v144 = v208;
  }
  sub_24172588C(v140, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  sub_2417289A8((uint64_t)v116, v143, (uint64_t (*)(_QWORD))_s9LogButtonVMa);
  *(double *)(v143 + *(int *)(v194 + 36)) = v146;
  sub_24172588C((uint64_t)v116, (uint64_t (*)(_QWORD))_s9LogButtonVMa);
  v148 = (uint64_t)v193;
  MEMORY[0x24269C00C](v112);
  v149 = v192;
  sub_2417289A8(v148, v192, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_24172588C(v149, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    v151 = 1;
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v150 = sub_2418A9CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 8))(v149, v150);
    v151 = 0;
  }
  sub_24172588C(v148, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  sub_2417289A8(v143, v127, (uint64_t (*)(_QWORD))sub_24173DBC8);
  v152 = v127 + *(int *)(v144 + 36);
  *(_QWORD *)v152 = 0;
  *(_BYTE *)(v152 + 8) = v151;
  sub_24172588C(v143, (uint64_t (*)(_QWORD))sub_24173DBC8);
  v153 = (uint64_t)v218;
  MEMORY[0x24269C00C](v112);
  sub_24172588C(v153, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v154 = qword_2511AB8D8;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v154 = sub_241802714(0, 2, 1, qword_2511AB8D8);
  v156 = v154[2];
  v155 = v154[3];
  if (v156 >= v155 >> 1)
    v154 = sub_241802714((_QWORD *)(v155 > 1), v156 + 1, 1, v154);
  v154[2] = v156 + 1;
  v157 = &v154[2 * v156];
  v157[4] = 0x6F74747542676F4CLL;
  v157[5] = 0xE90000000000006ELL;
  v229 = &unk_2511AB450;
  v158 = swift_bridgeObjectRetain();
  sub_2417739BC(v158);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241740508();
  v159 = (uint64_t)v207;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_24172588C(v127, (uint64_t (*)(_QWORD))sub_24173DB44);
  v160 = v210;
  sub_241731B4C(v159, v210, (uint64_t (*)(_QWORD))sub_24173DB28);
  v161 = (uint64_t)v203;
  sub_241860D60((uint64_t)v203);
  sub_24172588C(v161, type metadata accessor for StateOfMindTimeline.Styles);
  v162 = (uint64_t)v204;
  sub_241860D60((uint64_t)v204);
  sub_24172588C(v162, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60(v161);
  sub_24172588C(v161, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60(v162);
  sub_24172588C(v162, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241737C10();
  sub_2418A9960();
  sub_2418A861C();
  v222 = (uint64_t)v229;
  LODWORD(v221) = v230;
  v163 = v232;
  v164 = v233;
  v218 = v234;
  v219 = v231;
  v165 = v220;
  v166 = v206;
  sub_2417289A8(v220, v206, (uint64_t (*)(_QWORD))sub_24173DB0C);
  v167 = v211;
  sub_2417289A8(v160, v211, (uint64_t (*)(_QWORD))sub_24173DB28);
  v168 = v212;
  *v212 = 0;
  *((_BYTE *)v168 + 8) = 1;
  v168[2] = v202;
  *((_BYTE *)v168 + 24) = v201;
  v168[4] = v200;
  *((_BYTE *)v168 + 40) = v199;
  v169 = v197;
  v168[6] = v198;
  v168[7] = v169;
  sub_24173DA58();
  v171 = v170;
  sub_2417289A8(v166, (uint64_t)v168 + v170[12], (uint64_t (*)(_QWORD))sub_24173DB0C);
  v172 = (char *)v168 + v171[16];
  *(_QWORD *)v172 = v216;
  v172[8] = 0;
  sub_2417289A8(v167, (uint64_t)v168 + v171[20], (uint64_t (*)(_QWORD))sub_24173DB28);
  v173 = (char *)v168 + v171[24];
  *(_QWORD *)v173 = 0;
  v173[8] = 1;
  *((_QWORD *)v173 + 2) = v222;
  v173[24] = v221;
  *((_QWORD *)v173 + 4) = v219;
  v173[40] = v163;
  v174 = v218;
  *((_QWORD *)v173 + 6) = v164;
  *((_QWORD *)v173 + 7) = v174;
  sub_24172588C(v160, (uint64_t (*)(_QWORD))sub_24173DB28);
  sub_24172588C(v165, (uint64_t (*)(_QWORD))sub_24173DB0C);
  sub_24172588C(v167, (uint64_t (*)(_QWORD))sub_24173DB28);
  return sub_24172588C(v166, (uint64_t (*)(_QWORD))sub_24173DB0C);
}

uint64_t sub_241739360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;

  v46 = a1;
  v2 = _s9ViewModelOMa();
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v42 = (char *)&v41 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v41 - v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v41 - v15;
  sub_24173EC04();
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173EBE8(0);
  v43 = v21;
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173EBCC(0);
  v45 = v25;
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v20 = sub_2418A8B68();
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 0;
  sub_24173F078(0, &qword_25714CA08, &qword_25714C980, (uint64_t (*)(uint64_t))sub_24173EC9C);
  sub_241739778(v1, &v20[*(int *)(v29 + 44)]);
  _s16TimelineDataViewVMa();
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v31 = v30;
  MEMORY[0x24269C00C]();
  sub_2417289A8((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v44 = v2;
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v32 = sub_2418A9CFC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v13, v32);
  }
  sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  sub_2418A9960();
  sub_2418A861C();
  sub_2417289A8((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_24173EC04);
  v33 = &v24[*(int *)(v43 + 36)];
  v34 = v48;
  *(_OWORD *)v33 = v47;
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v49;
  sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))sub_24173EC04);
  v35 = (uint64_t)v42;
  MEMORY[0x24269C00C](v31);
  sub_2417289A8(v35, (uint64_t)v6, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    v37 = 1.0;
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v36 = sub_2418A9CFC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v6, v36);
    v37 = 0.0;
  }
  sub_24172588C(v35, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  sub_2417289A8((uint64_t)v24, (uint64_t)v28, (uint64_t (*)(_QWORD))sub_24173EBE8);
  *(double *)&v28[*(int *)(v45 + 36)] = v37;
  sub_24172588C((uint64_t)v24, (uint64_t (*)(_QWORD))sub_24173EBE8);
  v38 = sub_2418A9960();
  sub_24185E03C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v46, 0.0, 1, 0.0, 1, v38, v39);
  return sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))sub_24173EBCC);
}

uint64_t sub_241739778@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  _OWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v55;
  uint64_t v56;
  uint64_t KeyPath;
  uint64_t v58;
  uint64_t (*v59)(void);
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  int *v114;
  uint64_t v115;
  unsigned __int8 v116;
  uint64_t v117;
  unsigned __int8 v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  char v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;

  v112 = a2;
  v3 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v3, v4);
  v101 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_2418A88BC();
  MEMORY[0x24BDAC7A8](v98, v6);
  v97 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173EF58(0);
  v100 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v99 = (uint64_t)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173EDE8();
  v96 = v11;
  v95 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173EDCC(0);
  v94 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173ED48();
  v114 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v113 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173ED2C(0);
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v111 = (uint64_t)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v109 = (char *)&v90 - v28;
  MEMORY[0x24BDAC7A8](v27, v29);
  v110 = (uint64_t)&v90 - v30;
  v31 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v33 = MEMORY[0x24BDAC7A8](v31, v32);
  v35 = (char *)&v90 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v36);
  v38 = (char *)&v90 - v37;
  v39 = _s16TimelineDataViewVMa();
  sub_241860D60((uint64_t)v38);
  sub_24172588C((uint64_t)v38, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v35);
  sub_24172588C((uint64_t)v35, type metadata accessor for StateOfMindTimeline.Styles);
  v40 = *(int *)(v39 + 32);
  v93 = v39;
  v102 = v40;
  sub_241860D60((uint64_t)v38);
  sub_24172588C((uint64_t)v38, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v35);
  sub_24172588C((uint64_t)v35, type metadata accessor for StateOfMindTimeline.Styles);
  v92 = a1;
  sub_241737C10();
  sub_2418A9960();
  sub_2418A861C();
  v108 = v115;
  v107 = v116;
  v106 = v117;
  v105 = v118;
  v104 = v119;
  v103 = v120;
  sub_24172835C(0, (unint64_t *)&qword_25714C9B0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  sub_24173EE68();
  swift_retain();
  v41 = (uint64_t)v113;
  sub_2418A9708();
  LOBYTE(a1) = sub_2418A90D8();
  v42 = v95;
  v43 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  v91 = v18;
  v44 = v96;
  v43(v18, v14, v96);
  v45 = &v18[*(int *)(v94 + 36)];
  *v45 = a1;
  *(_OWORD *)(v45 + 8) = 0u;
  *(_OWORD *)(v45 + 24) = 0u;
  v45[40] = 1;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v44);
  sub_241860D60((uint64_t)v38);
  sub_24172588C((uint64_t)v38, type metadata accessor for StateOfMindTimeline.Styles);
  v46 = v97;
  v47 = &v97[*(int *)(v98 + 20)];
  v48 = *MEMORY[0x24BDEEB68];
  v49 = sub_2418A8BE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v47, v48, v49);
  __asm { FMOV            V0.2D, #18.0 }
  *v46 = _Q0;
  sub_241860D60((uint64_t)v35);
  sub_24172588C((uint64_t)v35, type metadata accessor for StateOfMindTimeline.Styles);
  v55 = objc_msgSend((id)objc_opt_self(), sel_systemGray5Color);
  v56 = MEMORY[0x24269BE5C](v55);
  KeyPath = swift_getKeyPath();
  v58 = v99;
  v59 = MEMORY[0x24BDED998];
  sub_2417289A8((uint64_t)v46, v99, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v60 = (uint64_t *)(v58 + *(int *)(v100 + 36));
  *v60 = KeyPath;
  v60[1] = v56;
  sub_24172588C((uint64_t)v46, (uint64_t (*)(_QWORD))v59);
  v61 = sub_2418A9960();
  v63 = v62;
  v64 = v41 + v114[9];
  sub_2417289A8(v58, v64, (uint64_t (*)(_QWORD))sub_24173EF58);
  sub_24173EEE8(0, (unint64_t *)&qword_25714C9C0, (uint64_t (*)(uint64_t))sub_24173EF58, (uint64_t (*)(void))sub_24173EFE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF358]);
  v66 = (uint64_t *)(v64 + *(int *)(v65 + 36));
  *v66 = v61;
  v66[1] = v63;
  v67 = (uint64_t)v91;
  sub_2417289A8((uint64_t)v91, v41, (uint64_t (*)(_QWORD))sub_24173EDCC);
  sub_24172588C(v58, (uint64_t (*)(_QWORD))sub_24173EF58);
  sub_24172588C(v67, (uint64_t (*)(_QWORD))sub_24173EDCC);
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v68 = (uint64_t)v101;
  MEMORY[0x24269C00C]();
  sub_24172588C(v68, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v69 = qword_2511AB908;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v69 = sub_241802714(0, 2, 1, qword_2511AB908);
  v71 = v69[2];
  v70 = v69[3];
  if (v71 >= v70 >> 1)
    v69 = sub_241802714((_QWORD *)(v70 > 1), v71 + 1, 1, v69);
  v69[2] = v71 + 1;
  v72 = &v69[2 * v71];
  v72[4] = 0x7475427472616843;
  v72[5] = 0xEB000000006E6F74;
  v121 = (int *)&unk_2511AB450;
  v73 = swift_bridgeObjectRetain();
  sub_2417739BC(v73);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24173F3CC();
  v74 = (uint64_t)v109;
  v75 = (uint64_t)v113;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_24172588C(v75, (uint64_t (*)(_QWORD))sub_24173ED48);
  v76 = v110;
  sub_241731B4C(v74, v110, (uint64_t (*)(_QWORD))sub_24173ED2C);
  sub_241860D60((uint64_t)v38);
  sub_24172588C((uint64_t)v38, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v35);
  sub_24172588C((uint64_t)v35, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v38);
  sub_24172588C((uint64_t)v38, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v35);
  sub_24172588C((uint64_t)v35, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241737C10();
  sub_2418A9960();
  sub_2418A861C();
  v114 = v121;
  LOBYTE(v74) = v122;
  v77 = v123;
  v78 = v124;
  v79 = v125;
  v80 = v126;
  v81 = v76;
  v82 = v76;
  v83 = v111;
  sub_2417289A8(v81, v111, (uint64_t (*)(_QWORD))sub_24173ED2C);
  v84 = v112;
  *v112 = 0;
  *((_BYTE *)v84 + 8) = 1;
  v84[2] = v108;
  *((_BYTE *)v84 + 24) = v107;
  v84[4] = v106;
  *((_BYTE *)v84 + 40) = v105;
  v85 = v103;
  v84[6] = v104;
  v84[7] = v85;
  sub_24173EC9C();
  v87 = v86;
  sub_2417289A8(v83, (uint64_t)v84 + *(int *)(v86 + 48), (uint64_t (*)(_QWORD))sub_24173ED2C);
  v88 = (char *)v84 + *(int *)(v87 + 64);
  *(_QWORD *)v88 = 0;
  v88[8] = 1;
  *((_QWORD *)v88 + 2) = v114;
  v88[24] = v74;
  *((_QWORD *)v88 + 4) = v77;
  v88[40] = v78;
  *((_QWORD *)v88 + 6) = v79;
  *((_QWORD *)v88 + 7) = v80;
  sub_24172588C(v82, (uint64_t (*)(_QWORD))sub_24173ED2C);
  return sub_24172588C(v83, (uint64_t (*)(_QWORD))sub_24173ED2C);
}

__n128 sub_24173A10C@<Q0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __n128 result;
  _OWORD v18[9];

  if (qword_25714B958 != -1)
    swift_once();
  v2 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v3 = sub_2418A7EFC();
  v5 = v4;
  swift_bridgeObjectRelease();

  *(_QWORD *)&v18[0] = v3;
  *((_QWORD *)&v18[0] + 1) = v5;
  sub_241721040();
  v6 = sub_2418A92D0();
  v8 = v7;
  v10 = v9;
  LOBYTE(v5) = v11 & 1;
  v12 = sub_2418A9960();
  sub_24185E094(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v18, 0.0, 1, 0.0, 1, v12, v13, v6, v8, v5, v10);
  sub_2417289EC(v6, v8, v5);
  swift_bridgeObjectRelease();
  v14 = v18[7];
  *(_OWORD *)(a1 + 96) = v18[6];
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 128) = v18[8];
  v15 = v18[3];
  *(_OWORD *)(a1 + 32) = v18[2];
  *(_OWORD *)(a1 + 48) = v15;
  v16 = v18[5];
  *(_OWORD *)(a1 + 64) = v18[4];
  *(_OWORD *)(a1 + 80) = v16;
  result = (__n128)v18[1];
  *(_OWORD *)a1 = v18[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24173A29C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  BOOL v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t *v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  double v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t OpaqueTypeConformance2;
  char *v106;
  int *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  unint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  int *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int *v152;
  uint64_t v153;

  v151 = a2;
  v4 = sub_2418A8F7C();
  v149 = *(_QWORD *)(v4 - 8);
  v150 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v148 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s16TimelineDataViewVMa();
  v142 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v143 = v9;
  v144 = (uint64_t)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v129 = (uint64_t)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v123 = (uint64_t)&v117 - v15;
  v16 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v139 = *(_QWORD *)(v147 - 8);
  MEMORY[0x24BDAC7A8](v147, v20);
  v140 = v21;
  v22 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = _s16EntryLimitedViewVMa();
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (uint64_t *)((char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24173E2D4();
  v130 = v27;
  MEMORY[0x24BDAC7A8](v27, v28);
  v118 = (uint64_t)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E2B8(0);
  v119 = v30;
  MEMORY[0x24BDAC7A8](v30, v31);
  v124 = (uint64_t)&v117 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E29C(0);
  v120 = v33;
  MEMORY[0x24BDAC7A8](v33, v34);
  v125 = (uint64_t)&v117 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E280(0);
  v121 = v36;
  MEMORY[0x24BDAC7A8](v36, v37);
  v127 = (uint64_t)&v117 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E264(0);
  v133 = v39;
  MEMORY[0x24BDAC7A8](v39, v40);
  v131 = (uint64_t)&v117 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E1D0(0);
  v137 = v42;
  v134 = *((_QWORD *)v42 - 1);
  MEMORY[0x24BDAC7A8](v42, v43);
  v132 = (char *)&v117 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E110(0);
  v138 = v45;
  v136 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45, v46);
  v135 = (char *)&v117 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E0F4(0);
  v145 = v48;
  MEMORY[0x24BDAC7A8](v48, v49);
  v146 = (char *)&v117 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417289A8((uint64_t)a1, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  v51 = (uint64_t *)(v2 + *(int *)(v7 + 40));
  v53 = *v51;
  v52 = v51[1];
  *v26 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v54 = (uint64_t)v26 + *(int *)(v23 + 20);
  v141 = v22;
  v55 = (uint64_t)v22;
  v56 = v2;
  sub_241731B4C(v55, v54, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  v57 = (uint64_t *)((char *)v26 + *(int *)(v23 + 24));
  *v57 = v53;
  v57[1] = v52;
  v128 = v7;
  v58 = v2 + *(int *)(v7 + 28);
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v60 = v59;
  swift_retain();
  MEMORY[0x24269C00C](v60);
  v61 = a1;
  v62 = sub_2418485BC(a1);
  sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  KeyPath = swift_getKeyPath();
  v64 = swift_allocObject();
  *(_BYTE *)(v64 + 16) = !v62;
  v65 = v118;
  sub_2417289A8((uint64_t)v26, v118, (uint64_t (*)(_QWORD))_s16EntryLimitedViewVMa);
  v66 = (uint64_t *)(v65 + *((int *)v130 + 9));
  *v66 = KeyPath;
  v66[1] = (uint64_t)sub_24173FD60;
  v66[2] = v64;
  sub_24172588C((uint64_t)v26, (uint64_t (*)(_QWORD))_s16EntryLimitedViewVMa);
  v122 = v60;
  v126 = v58;
  MEMORY[0x24269C00C](v60);
  v67 = v61;
  v68 = sub_2418485BC(v61);
  v130 = v19;
  sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  if (v68)
  {
    v69 = v123;
    sub_241860D60(v123);
    sub_24172588C(v69, type metadata accessor for StateOfMindTimeline.Styles);
    sub_2418A9600();
    v70 = sub_2418A9624();
    swift_release();
    v71 = v69;
  }
  else
  {
    v70 = sub_2418A960C();
    v71 = v123;
  }
  sub_241860D60(v71);
  sub_24172588C(v71, type metadata accessor for StateOfMindTimeline.Styles);
  v72 = v65;
  v73 = v65;
  v74 = v124;
  sub_2417289A8(v73, v124, (uint64_t (*)(_QWORD))sub_24173E2D4);
  v75 = (uint64_t *)(v74 + *(int *)(v119 + 36));
  *v75 = v70;
  v75[1] = 0x4028000000000000;
  v75[2] = 0;
  v75[3] = 0;
  sub_24172588C(v72, (uint64_t (*)(_QWORD))sub_24173E2D4);
  v76 = v67;
  v77 = fabs(sub_24173D594(v67));
  v78 = v129;
  sub_241860D60(v129);
  sub_24172588C(v78, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60(v71);
  sub_24172588C(v71, type metadata accessor for StateOfMindTimeline.Styles);
  if (v77 <= 1.0)
    v79 = v77 * -0.2 + 1.0;
  else
    v79 = 0.8;
  sub_2418A9A14();
  v81 = v80;
  v83 = v82;
  v84 = v125;
  sub_2417289A8(v74, v125, (uint64_t (*)(_QWORD))sub_24173E2B8);
  v85 = v84 + *(int *)(v120 + 36);
  *(double *)v85 = v79;
  *(double *)(v85 + 8) = v79;
  *(_QWORD *)(v85 + 16) = v81;
  *(_QWORD *)(v85 + 24) = v83;
  sub_24172588C(v74, (uint64_t (*)(_QWORD))sub_24173E2B8);
  v86 = sub_24173ADE8(v67);
  v88 = v87;
  v89 = v127;
  sub_2417289A8(v84, v127, (uint64_t (*)(_QWORD))sub_24173E29C);
  v90 = (double *)(v89 + *(int *)(v121 + 36));
  *v90 = v86;
  *((_QWORD *)v90 + 1) = v88;
  sub_24172588C(v84, (uint64_t (*)(_QWORD))sub_24173E29C);
  sub_24173AF2C(v67);
  v92 = v91;
  v93 = v131;
  sub_2417289A8(v89, v131, (uint64_t (*)(_QWORD))sub_24173E280);
  v94 = v133;
  *(_QWORD *)(v93 + v133[9]) = v92;
  sub_24172588C(v89, (uint64_t (*)(_QWORD))sub_24173E280);
  v95 = v56;
  v96 = v144;
  sub_2417289A8(v95, v144, (uint64_t (*)(_QWORD))_s16TimelineDataViewVMa);
  v97 = (uint64_t)v67;
  v98 = (uint64_t)v141;
  sub_2417289A8(v97, (uint64_t)v141, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  v99 = (*(unsigned __int8 *)(v142 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80);
  v100 = (v143 + *(unsigned __int8 *)(v139 + 80) + v99) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
  v101 = swift_allocObject();
  sub_241731B4C(v96, v101 + v99, (uint64_t (*)(_QWORD))_s16TimelineDataViewVMa);
  sub_241731B4C(v98, v101 + v100, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  v102 = sub_241721DF8(&qword_25714C868, (uint64_t (*)(uint64_t))sub_24173E264, sub_24173E350, MEMORY[0x24BDECC38]);
  v103 = v132;
  sub_2418A9354();
  swift_release();
  sub_24172588C(v93, (uint64_t (*)(_QWORD))sub_24173E264);
  v104 = v148;
  sub_2418A8F70();
  v152 = v94;
  v153 = v102;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v106 = v135;
  v107 = v137;
  sub_2418A942C();
  (*(void (**)(char *, uint64_t))(v149 + 8))(v104, v150);
  (*(void (**)(char *, int *))(v134 + 8))(v103, v107);
  v108 = (uint64_t)v130;
  MEMORY[0x24269C00C](v122);
  sub_2418485BC(v76);
  sub_24172588C(v108, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v152 = v107;
  v153 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v109 = (uint64_t)v146;
  v110 = v138;
  sub_2418A9414();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v106, v110);
  v111 = *(_QWORD **)((char *)v76 + *(int *)(v147 + 36));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v111 = sub_241802714(0, v111[2] + 1, 1, v111);
  v113 = v111[2];
  v112 = v111[3];
  if (v113 >= v112 >> 1)
    v111 = sub_241802714((_QWORD *)(v112 > 1), v113 + 1, 1, v111);
  v111[2] = v113 + 1;
  v114 = &v111[2 * v113];
  v114[4] = 1685217603;
  v114[5] = 0xE400000000000000;
  v152 = (int *)&unk_2511AB450;
  v115 = swift_bridgeObjectRetain();
  sub_2417739BC(v115);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24173EA40();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_24172588C(v109, (uint64_t (*)(_QWORD))sub_24173E0F4);
}

double sub_24173ADE8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v18;

  v2 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v18 - v8;
  v10 = sub_24173D594(a1);
  v11 = fabs(v10);
  _s16TimelineDataViewVMa();
  sub_241860D60((uint64_t)v9);
  sub_24172588C((uint64_t)v9, type metadata accessor for StateOfMindTimeline.Styles);
  if (v11 > 1.0)
    v11 = 1.0;
  sub_24173D73C(v10);
  v13 = v11 * v12;
  sub_241860D60((uint64_t)v6);
  sub_24172588C((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  v14 = v13 * 0.2;
  sub_241737C10();
  v16 = v15;
  sub_241860D60((uint64_t)v6);
  sub_24172588C((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  return v14 * (v16 + 10.0);
}

uint64_t sub_24173AF2C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v2 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v10 = (char *)&v15 - v9;
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v15 - v12;
  fabs(sub_24173D594(a1));
  _s16TimelineDataViewVMa();
  sub_241860D60((uint64_t)v13);
  sub_24172588C((uint64_t)v13, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v10);
  sub_24172588C((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v6);
  return sub_24172588C((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
}

uint64_t sub_24173B05C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v3, v4);
  _s16TimelineDataViewVMa();
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  MEMORY[0x24269C00C]();
  sub_2418486D8(a2);
  return sub_2418A9810();
}

uint64_t sub_24173B124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  int EnumCaseMultiPayload;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64x2_t *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t KeyPath;
  uint64_t *v83;
  uint64_t (*v84)(uint64_t);
  uint64_t (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t *v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int64x2_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t (*v108)(void);
  uint64_t v110;
  uint64_t (*v111)(void);
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  int64x2_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v145 = a1;
  v2 = _s16TimelineDataViewVMa();
  v118 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v119 = v4;
  v120 = (uint64_t)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E030();
  v144 = v5;
  v123 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v122.i64[0] = (uint64_t)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, &qword_25714C7F0, (uint64_t (*)(uint64_t))sub_24173DFA4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
  v137 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v130 = (uint64_t)&v118 - v10;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB580];
  sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
  MEMORY[0x24BDAC7A8](v12, v13);
  v127 = (uint64_t *)((char *)&v118 - v14);
  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v11);
  MEMORY[0x24BDAC7A8](v15, v16);
  v121 = (uint64_t *)((char *)&v118 - v17);
  v124 = _s15EntryNoDataViewVMa();
  v19 = MEMORY[0x24BDAC7A8](v124, v18);
  v126 = (uint64_t)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v136 = (uint64_t)&v118 - v22;
  v23 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v23, v24);
  v125 = (uint64_t)&v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E014(0);
  v131 = v26;
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v128 = (uint64_t)&v118 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v129 = (uint64_t)&v118 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v134 = (uint64_t)&v118 - v35;
  MEMORY[0x24BDAC7A8](v34, v36);
  v139 = (uint64_t)&v118 - v37;
  v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380];
  sub_24173DEAC(0, &qword_25714CA38, MEMORY[0x24BDEF380]);
  v141 = v39;
  MEMORY[0x24BDAC7A8](v39, v40);
  v143 = (uint64_t)&v118 - v41;
  sub_24173DF24(0, &qword_25714CA40, v38);
  v132 = v42;
  MEMORY[0x24BDAC7A8](v42, v43);
  v133 = (uint64_t)&v118 - v44;
  sub_24173DF24(0, &qword_25714C7E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  v142 = v45;
  MEMORY[0x24BDAC7A8](v45, v46);
  v135 = (char *)&v118 - v47;
  v138 = _s20EntryPlaceholderViewVMa();
  v49 = MEMORY[0x24BDAC7A8](v138, v48);
  v51 = (uint64_t *)((char *)&v118 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v49, v52);
  v54 = (char *)&v118 - v53;
  v55 = _s9ViewModelOMa();
  v57 = MEMORY[0x24BDAC7A8](v55, v56);
  v59 = (char *)&v118 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v57, v60);
  v62 = (char *)&v118 - v61;
  v63 = v2;
  v64 = v1;
  sub_24172570C(0, &qword_25714C670, v65, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v67 = v66;
  MEMORY[0x24269C00C]();
  v140 = (uint64_t *)v62;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      *v51 = swift_getKeyPath();
      sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      v120 = v69;
      swift_storeEnumTagMultiPayload();
      *((_BYTE *)v51 + *(int *)(v138 + 20)) = 0;
      sub_241731B4C((uint64_t)v51, (uint64_t)v54, (uint64_t (*)(_QWORD))_s20EntryPlaceholderViewVMa);
      v70 = v63;
      v123 = v1 + *(int *)(v63 + 24);
      v71 = v125;
      sub_241860D60(v125);
      sub_24172588C(v71, type metadata accessor for StateOfMindTimeline.Styles);
      sub_2418A9A2C();
      v73 = v72;
      v75 = v74;
      v76 = v134;
      sub_2417289A8((uint64_t)v54, v134, (uint64_t (*)(_QWORD))_s20EntryPlaceholderViewVMa);
      v77 = (int64x2_t *)(v76 + *(int *)(v131 + 36));
      v122 = vdupq_n_s64(0x3FE999999999999AuLL);
      *v77 = v122;
      v77[1].i64[0] = v73;
      v77[1].i64[1] = v75;
      sub_24172588C((uint64_t)v54, (uint64_t (*)(_QWORD))_s20EntryPlaceholderViewVMa);
      sub_241731B4C(v76, v139, (uint64_t (*)(_QWORD))sub_24173E014);
      v78 = (uint64_t *)(v64 + *(int *)(v70 + 36));
      v79 = v78[1];
      v119 = *v78;
      v80 = (uint64_t *)(v64 + *(int *)(v70 + 44));
      v81 = v80[1];
      v118 = *v80;
      swift_retain();
      swift_retain();
      MEMORY[0x24269C00C](v67);
      sub_24172588C((uint64_t)v59, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
      KeyPath = swift_getKeyPath();
      v83 = v121;
      *v121 = KeyPath;
      v84 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
      v85 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
      sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      swift_storeEnumTagMultiPayload();
      v86 = swift_getKeyPath();
      v87 = (uint64_t)v127;
      *v127 = v86;
      sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], v85);
      swift_storeEnumTagMultiPayload();
      v88 = (uint64_t)v83;
      v89 = v126;
      sub_24173FC08(v88, v126, &qword_25714C0D8, v84);
      v90 = (int *)v124;
      v91 = (uint64_t *)(v89 + *(int *)(v124 + 20));
      *v91 = swift_getKeyPath();
      swift_storeEnumTagMultiPayload();
      sub_24173FC08(v87, v89 + v90[6], &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038]);
      v92 = (_QWORD *)(v89 + v90[7]);
      *v92 = v119;
      v92[1] = v79;
      v93 = (_QWORD *)(v89 + v90[8]);
      *v93 = v118;
      v93[1] = v81;
      *(_QWORD *)(v89 + v90[9]) = &unk_2511AB938;
      v94 = v136;
      sub_241731B4C(v89, v136, (uint64_t (*)(_QWORD))_s15EntryNoDataViewVMa);
      *v51 = swift_getKeyPath();
      swift_storeEnumTagMultiPayload();
      *((_BYTE *)v51 + *(int *)(v138 + 20)) = 0;
      sub_241731B4C((uint64_t)v51, (uint64_t)v54, (uint64_t (*)(_QWORD))_s20EntryPlaceholderViewVMa);
      sub_241860D60(v71);
      sub_24172588C(v71, type metadata accessor for StateOfMindTimeline.Styles);
      sub_2418A9A20();
      v96 = v95;
      v98 = v97;
      v99 = v129;
      sub_2417289A8((uint64_t)v54, v129, (uint64_t (*)(_QWORD))_s20EntryPlaceholderViewVMa);
      v100 = (int64x2_t *)(v99 + *(int *)(v131 + 36));
      *v100 = v122;
      v100[1].i64[0] = v96;
      v100[1].i64[1] = v98;
      sub_24172588C((uint64_t)v54, (uint64_t (*)(_QWORD))_s20EntryPlaceholderViewVMa);
      v101 = v134;
      sub_241731B4C(v99, v134, (uint64_t (*)(_QWORD))sub_24173E014);
      sub_2417289A8(v139, v99, (uint64_t (*)(_QWORD))sub_24173E014);
      sub_2417289A8(v94, v89, (uint64_t (*)(_QWORD))_s15EntryNoDataViewVMa);
      v102 = v128;
      sub_2417289A8(v101, v128, (uint64_t (*)(_QWORD))sub_24173E014);
      v103 = v130;
      sub_2417289A8(v99, v130, (uint64_t (*)(_QWORD))sub_24173E014);
      sub_24173DFA4();
      v105 = v104;
      sub_2417289A8(v89, v103 + *(int *)(v104 + 48), (uint64_t (*)(_QWORD))_s15EntryNoDataViewVMa);
      sub_2417289A8(v102, v103 + *(int *)(v105 + 64), (uint64_t (*)(_QWORD))sub_24173E014);
      sub_24172588C(v102, (uint64_t (*)(_QWORD))sub_24173E014);
      sub_24172588C(v89, (uint64_t (*)(_QWORD))_s15EntryNoDataViewVMa);
      sub_24172588C(v99, (uint64_t (*)(_QWORD))sub_24173E014);
      v106 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0];
      sub_24173F288(v103, v133, (uint64_t)&qword_25714C7F0, (uint64_t)sub_24173DFA4, (uint64_t)MEMORY[0x24BDF53F0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_24172570C);
      swift_storeEnumTagMultiPayload();
      sub_24172159C(&qword_25714C918, (uint64_t (*)(uint64_t))_s20EntryPlaceholderViewVMa, (uint64_t)&unk_2418D9800);
      sub_2417406BC(&qword_25714C920, &qword_25714C7F0, (uint64_t (*)(uint64_t))sub_24173DFA4);
      v107 = (uint64_t)v135;
      sub_2418A8D24();
      sub_24173FC60(v103, &qword_25714C7F0, (uint64_t (*)(uint64_t))sub_24173DFA4, v106);
      v108 = MEMORY[0x24BDEF3B8];
      sub_24173F200(v107, v143, (uint64_t)&qword_25714C7E8, (uint64_t)MEMORY[0x24BDEF3B8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_24173DF24);
      swift_storeEnumTagMultiPayload();
      sub_24173E898();
      sub_24173E940();
      sub_2418A8D24();
      sub_24173F24C(v107, (uint64_t)&qword_25714C7E8, (uint64_t)v108, (uint64_t (*)(_QWORD))sub_24173DF24);
      sub_24172588C(v101, (uint64_t (*)(_QWORD))sub_24173E014);
      sub_24172588C(v136, (uint64_t (*)(_QWORD))_s15EntryNoDataViewVMa);
      sub_24172588C(v139, (uint64_t (*)(_QWORD))sub_24173E014);
      return sub_24172588C((uint64_t)v140, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
    }
    else
    {
      v146 = *v140;
      v112 = v120;
      sub_2417289A8(v1, v120, (uint64_t (*)(_QWORD))_s16TimelineDataViewVMa);
      v113 = (*(unsigned __int8 *)(v118 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
      v114 = swift_allocObject();
      sub_241731B4C(v112, v114 + v113, (uint64_t (*)(_QWORD))_s16TimelineDataViewVMa);
      sub_24172570C(0, &qword_25714C810, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      sub_241728250(0, &qword_25714C818, sub_24173E0F4, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
      sub_24173E49C();
      sub_24173E9A0();
      sub_24172159C(&qword_25714CA48, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t)&protocol conformance descriptor for StateOfMindTimeline.DaySummary);
      v115 = v122.i64[0];
      sub_2418A9894();
      v116 = v123;
      v117 = v144;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16))(v143, v115, v144);
      swift_storeEnumTagMultiPayload();
      sub_24173E898();
      sub_24173E940();
      sub_2418A8D24();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v116 + 8))(v115, v117);
    }
  }
  else
  {
    *v51 = swift_getKeyPath();
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    *((_BYTE *)v51 + *(int *)(v138 + 20)) = 1;
    sub_241731B4C((uint64_t)v51, (uint64_t)v54, (uint64_t (*)(_QWORD))_s20EntryPlaceholderViewVMa);
    sub_2417289A8((uint64_t)v54, v133, (uint64_t (*)(_QWORD))_s20EntryPlaceholderViewVMa);
    swift_storeEnumTagMultiPayload();
    sub_24172159C(&qword_25714C918, (uint64_t (*)(uint64_t))_s20EntryPlaceholderViewVMa, (uint64_t)&unk_2418D9800);
    sub_2417406BC(&qword_25714C920, &qword_25714C7F0, (uint64_t (*)(uint64_t))sub_24173DFA4);
    v110 = (uint64_t)v135;
    sub_2418A8D24();
    v111 = MEMORY[0x24BDEF3B8];
    sub_24173F200(v110, v143, (uint64_t)&qword_25714C7E8, (uint64_t)MEMORY[0x24BDEF3B8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_24173DF24);
    swift_storeEnumTagMultiPayload();
    sub_24173E898();
    sub_24173E940();
    sub_2418A8D24();
    sub_24173F24C(v110, (uint64_t)&qword_25714C7E8, (uint64_t)v111, (uint64_t (*)(_QWORD))sub_24173DF24);
    sub_24172588C((uint64_t)v54, (uint64_t (*)(_QWORD))_s20EntryPlaceholderViewVMa);
    return sub_24172588C((uint64_t)v140, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  }
}

uint64_t sub_24173BEB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int EnumCaseMultiPayload;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;

  v169 = a2;
  sub_241721CBC(0, &qword_25714C960, sub_24173EBCC);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v170 = (uint64_t)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v168 = (uint64_t)&v140 - v8;
  v156 = _s9ViewModelOMa();
  v10 = MEMORY[0x24BDAC7A8](v156, v9);
  v166 = (uint64_t)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v167 = (char *)&v140 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v147 = (uint64_t)&v140 - v17;
  MEMORY[0x24BDAC7A8](v16, v18);
  v141 = (char *)&v140 - v19;
  v20 = sub_2418A85C8();
  MEMORY[0x24BDAC7A8](v20, v21);
  v151 = (char *)&v140 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E564();
  v153 = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v150 = (char *)&v140 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173DEAC(0, &qword_25714C7E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  MEMORY[0x24BDAC7A8](v26, v27);
  v149 = (uint64_t)&v140 - v28;
  sub_24173EEE8(0, &qword_25714C7D0, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_24173DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB978]);
  MEMORY[0x24BDAC7A8](v29, v30);
  v145 = (uint64_t)&v140 - v31;
  sub_24173DDE8();
  v148 = v32;
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v36 = (char *)&v140 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34, v37);
  v146 = (uint64_t)&v140 - v38;
  v39 = _s14EntryViewStackVMa();
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v43 = (uint64_t *)((char *)&v140 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v41, v44);
  v142 = (uint64_t)&v140 - v45;
  sub_24173DDCC(0);
  v144 = v46;
  MEMORY[0x24BDAC7A8](v46, v47);
  v143 = (uint64_t)&v140 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173DCF0(0);
  v155 = v49;
  v154 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49, v50);
  v171 = (char *)&v140 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173DCDC(0);
  v152 = v52;
  MEMORY[0x24BDAC7A8](v52, v53);
  v158 = (char *)&v140 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173DC58(0, &qword_25714C7A8, v55);
  v157 = v56;
  MEMORY[0x24BDAC7A8](v56, v57);
  v162 = (uint64_t)&v140 - v58;
  sub_24173DBE4();
  v160 = v59;
  v61 = MEMORY[0x24BDAC7A8](v59, v60);
  v165 = (uint64_t)&v140 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = MEMORY[0x24BDAC7A8](v61, v63);
  v159 = (uint64_t)&v140 - v65;
  MEMORY[0x24BDAC7A8](v64, v66);
  v164 = (uint64_t)&v140 - v67;
  sub_24173D9C0();
  MEMORY[0x24BDAC7A8](v68, v69);
  v71 = (char *)&v140 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173D9A4(0);
  v73 = v72;
  MEMORY[0x24BDAC7A8](v72, v74);
  v76 = (char *)&v140 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173D988(0);
  v79 = MEMORY[0x24BDAC7A8](v77, v78);
  v81 = (char *)&v140 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v79, v82);
  v84 = (char *)&v140 - v83;
  *(_QWORD *)v71 = sub_2418A8B8C();
  *((_QWORD *)v71 + 1) = 0;
  v71[16] = 0;
  sub_24173F078(0, &qword_25714C9F8, &qword_25714C768, (uint64_t (*)(uint64_t))sub_24173DA58);
  sub_24173803C(a1, &v71[*(int *)(v85 + 44)]);
  v86 = sub_2418A90E4();
  sub_2417289A8((uint64_t)v71, (uint64_t)v76, (uint64_t (*)(_QWORD))sub_24173D9C0);
  v87 = &v76[*(int *)(v73 + 36)];
  *v87 = v86;
  *(_OWORD *)(v87 + 8) = 0u;
  *(_OWORD *)(v87 + 24) = 0u;
  v87[40] = 1;
  sub_24172588C((uint64_t)v71, (uint64_t (*)(_QWORD))sub_24173D9C0);
  v88 = sub_2418A9960();
  v89 = a1;
  sub_24185DFE4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v81, 0.0, 1, 0.0, 1, v88, v90);
  sub_24172588C((uint64_t)v76, (uint64_t (*)(_QWORD))sub_24173D9A4);
  v163 = v81;
  v91 = (uint64_t)v141;
  v161 = v84;
  sub_241731B4C((uint64_t)v81, (uint64_t)v84, (uint64_t (*)(_QWORD))sub_24173D988);
  *v43 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v92 = v142;
  sub_241731B4C((uint64_t)v43, v142, (uint64_t (*)(_QWORD))_s14EntryViewStackVMa);
  sub_241731B4C(v92, (uint64_t)v43, (uint64_t (*)(_QWORD))_s14EntryViewStackVMa);
  v93 = v145;
  sub_2417289A8((uint64_t)v43, v145, (uint64_t (*)(_QWORD))_s14EntryViewStackVMa);
  sub_24173F0EC(v93, (uint64_t)v36);
  v94 = v149;
  sub_24173B124(v149);
  sub_24173F150(v93);
  sub_24173F1AC(v94, (uint64_t)&v36[*(int *)(v148 + 44)]);
  v95 = v146;
  sub_241731B4C((uint64_t)v36, v146, (uint64_t (*)(_QWORD))sub_24173DDE8);
  sub_24172588C((uint64_t)v43, (uint64_t (*)(_QWORD))_s14EntryViewStackVMa);
  v96 = sub_241737D2C();
  v97 = v95;
  v98 = v95;
  v99 = v143;
  sub_2417289A8(v97, v143, (uint64_t (*)(_QWORD))sub_24173DDE8);
  v100 = (double *)(v99 + *(int *)(v144 + 36));
  *v100 = v96;
  v100[1] = 0.0;
  sub_24172588C(v98, (uint64_t (*)(_QWORD))sub_24173DDE8);
  sub_2418A85BC();
  v101 = (uint64_t)v150;
  sub_2418A85D4();
  sub_24173CBE4(v101 + *(int *)(v153 + 52));
  sub_2418A8544();
  sub_241721DF8(&qword_25714C8F0, (uint64_t (*)(uint64_t))sub_24173DDCC, (uint64_t (*)(void))sub_24173E750, MEMORY[0x24BDEC438]);
  sub_24172159C(&qword_25714C940, (uint64_t (*)(uint64_t))sub_24173E564, MEMORY[0x24BDED4A8]);
  sub_2418A94F8();
  sub_24172588C(v101, (uint64_t (*)(_QWORD))sub_24173E564);
  sub_24172588C(v99, (uint64_t (*)(_QWORD))sub_24173DDCC);
  v151 = (char *)_s16TimelineDataViewVMa();
  v153 = v89;
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v103 = v102;
  MEMORY[0x24269C00C]();
  v104 = v147;
  sub_2417289A8(v91, v147, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_2417340BC();
      swift_bridgeObjectRelease();
      v106 = sub_2418A9CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 8))(v104, v106);
      v107 = 1;
    }
    else
    {
      sub_24172588C(v104, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
      v107 = 2;
    }
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v108 = sub_2418A9CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 8))(v104, v108);
    v107 = 0;
  }
  v109 = (uint64_t)v167;
  sub_24172588C(v91, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v110 = v154;
  v111 = (uint64_t)v158;
  v112 = v171;
  v113 = v155;
  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v158, v171, v155);
  v114 = (_QWORD *)(v111 + *(int *)(v152 + 36));
  *v114 = 0;
  v114[1] = v107;
  (*(void (**)(char *, uint64_t))(v110 + 8))(v112, v113);
  v115 = sub_2418A9984();
  MEMORY[0x24269C00C](v103);
  v116 = v166;
  sub_2417289A8(v109, v166, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v117 = swift_getEnumCaseMultiPayload();
  if (v117)
  {
    if (v117 == 1)
    {
      sub_2417340BC();
      swift_bridgeObjectRelease();
      v118 = sub_2418A9CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 8))(v116, v118);
      v119 = 1;
    }
    else
    {
      v119 = *(_QWORD *)(v116 + 8);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v120 = sub_2418A9CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 8))(v116, v120);
    v119 = 0;
  }
  sub_24172588C(v109, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v121 = v162;
  sub_2417289A8(v111, v162, (uint64_t (*)(_QWORD))sub_24173DCDC);
  v122 = (uint64_t *)(v121 + *(int *)(v157 + 36));
  *v122 = v115;
  v122[1] = v119;
  sub_24172588C(v111, (uint64_t (*)(_QWORD))sub_24173DCDC);
  v123 = sub_2418A9984();
  v124 = (uint64_t *)(v153 + *((int *)v151 + 13));
  v125 = *v124;
  v126 = v124[1];
  v172 = v125;
  v173 = v126;
  sub_24172887C(0, &qword_25714CA00, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  v127 = v174;
  v128 = v159;
  sub_24173F200(v121, v159, (uint64_t)&qword_25714C7A8, (uint64_t)sub_24173DCDC, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_24173DC58);
  v129 = (uint64_t *)(v128 + *(int *)(v160 + 36));
  *v129 = v123;
  v129[1] = v127;
  sub_24173F24C(v121, (uint64_t)&qword_25714C7A8, (uint64_t)sub_24173DCDC, (uint64_t (*)(_QWORD))sub_24173DC58);
  v130 = v164;
  sub_241731B4C(v128, v164, (uint64_t (*)(_QWORD))sub_24173DBE4);
  v131 = v168;
  sub_241739360(v168);
  v132 = (uint64_t)v161;
  v133 = (uint64_t)v163;
  sub_2417289A8((uint64_t)v161, (uint64_t)v163, (uint64_t (*)(_QWORD))sub_24173D988);
  v134 = v165;
  sub_2417289A8(v130, v165, (uint64_t (*)(_QWORD))sub_24173DBE4);
  v135 = v170;
  sub_24173F288(v131, v170, (uint64_t)&qword_25714C960, (uint64_t)sub_24173EBCC, MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241721CBC);
  v136 = v169;
  sub_2417289A8(v133, v169, (uint64_t (*)(_QWORD))sub_24173D988);
  sub_24173D8EC();
  v138 = v137;
  sub_2417289A8(v134, v136 + *(int *)(v137 + 48), (uint64_t (*)(_QWORD))sub_24173DBE4);
  sub_24173F288(v135, v136 + *(int *)(v138 + 64), (uint64_t)&qword_25714C960, (uint64_t)sub_24173EBCC, MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241721CBC);
  sub_24173F2D8(v131);
  sub_24172588C(v130, (uint64_t (*)(_QWORD))sub_24173DBE4);
  sub_24172588C(v132, (uint64_t (*)(_QWORD))sub_24173D988);
  sub_24173F2D8(v135);
  sub_24172588C(v134, (uint64_t (*)(_QWORD))sub_24173DBE4);
  return sub_24172588C(v133, (uint64_t (*)(_QWORD))sub_24173D988);
}

uint64_t sub_24173CBE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v28 = a1;
  v3 = _s16TimelineDataViewVMa();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  v7 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A8D54();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = sub_2418A852C();
  v25 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E628();
  v15 = *(_QWORD *)(v14 - 8);
  v26 = v14;
  v27 = v15;
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8EBC();
  sub_2418A8508();
  sub_2417289A8(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))_s16TimelineDataViewVMa);
  v19 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v20 = swift_allocObject();
  sub_241731B4C((uint64_t)v7, v20 + v19, (uint64_t (*)(_QWORD))_s16TimelineDataViewVMa);
  sub_24172159C(&qword_25714C8C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
  sub_24172159C(&qword_25714C8D0, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
  sub_2418A98B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v10);
  sub_2417289A8(v24[1], (uint64_t)v7, (uint64_t (*)(_QWORD))_s16TimelineDataViewVMa);
  v21 = swift_allocObject();
  sub_241731B4C((uint64_t)v7, v21 + v19, (uint64_t (*)(_QWORD))_s16TimelineDataViewVMa);
  sub_24173E6CC();
  v22 = v26;
  sub_2418A98AC();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v18, v22);
}

uint64_t sub_24173CE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  double v38;
  uint64_t v39;
  double *v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  double *v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  double v55;
  double v56;
  double v57;

  v50 = a1;
  v3 = sub_2418A87CC();
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v51 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s9ViewModelOMa();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v8, v11);
  v14 = (char *)&v48 - v13;
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v48 - v16;
  v18 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241737C10();
  v23 = v22;
  v24 = _s16TimelineDataViewVMa();
  v48 = a2 + *(int *)(v24 + 24);
  sub_241860D60((uint64_t)v21);
  sub_24172588C((uint64_t)v21, type metadata accessor for StateOfMindTimeline.Styles);
  v49 = v24;
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v26 = v25;
  MEMORY[0x24269C00C]();
  sub_2417289A8((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_2417340BC();
      swift_bridgeObjectRelease();
      v28 = sub_2418A9CFC();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v14, v28);
      v29 = 1;
    }
    else
    {
      v29 = *((_QWORD *)v14 + 1);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_2417340BC();
    swift_bridgeObjectRelease();
    v30 = sub_2418A9CFC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v14, v30);
    v29 = 0;
  }
  v31 = v23 + 10.0;
  sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  MEMORY[0x24269C00C](v26);
  v32 = sub_2418487E4();
  sub_24172588C((uint64_t)v10, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v33 = v31;
  if (v29 == v32)
  {
    sub_241860D60((uint64_t)v21);
    sub_24172588C((uint64_t)v21, type metadata accessor for StateOfMindTimeline.Styles);
    v33 = 20.0;
  }
  MEMORY[0x24269C00C](v26);
  sub_24172588C((uint64_t)v10, (uint64_t (*)(_QWORD))_s9ViewModelOMa);
  v35 = v52;
  v34 = v53;
  if (!v29)
  {
    sub_241860D60((uint64_t)v21);
    sub_24172588C((uint64_t)v21, type metadata accessor for StateOfMindTimeline.Styles);
    v31 = 20.0;
  }
  v36 = v51;
  sub_241861534(v51);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v35 + 88))(v36, v34) == *MEMORY[0x24BDED118])
  {
    result = sub_2418A8514();
    v56 = v38;
    if (v33 >= -v31)
    {
      v54 = -v31;
      v55 = v33;
      sub_24173F544();
      v39 = MEMORY[0x24BEE50B0];
      sub_2418A9D5C();
      v40 = (double *)(a2 + *(int *)(v49 + 52));
      v41 = *v40;
      v42 = v40[1];
      v54 = v41;
      v55 = v42;
      v57 = -v57;
      sub_24172887C(0, &qword_25714CA00, v39, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
      return sub_2418A96D8();
    }
    __break(1u);
  }
  else
  {
    result = sub_2418A8514();
    v56 = v43;
    if (v31 >= -v33)
    {
      v54 = -v33;
      v55 = v31;
      sub_24173F544();
      v44 = MEMORY[0x24BEE50B0];
      sub_2418A9D5C();
      v45 = (double *)(a2 + *(int *)(v49 + 52));
      v46 = *v45;
      v47 = v45[1];
      v54 = v46;
      v55 = v47;
      v56 = v57;
      sub_24172887C(0, &qword_25714CA00, v44, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
      sub_2418A96D8();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24173D300(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  int v18;
  int v19;
  double v20;
  double v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[4];

  v3 = _s9ViewModelOMa();
  MEMORY[0x24BDAC7A8](v3, v4);
  v5 = sub_2418A87CC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s16TimelineDataViewVMa();
  sub_241860D60((uint64_t)v13);
  sub_24172588C((uint64_t)v13, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241737C10();
  v16 = v15 * 0.5;
  if (v16 <= 100.0)
    v17 = v16;
  else
    v17 = 100.0;
  sub_241861534((uint64_t)v9);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  v19 = *MEMORY[0x24BDED118];
  sub_2418A8514();
  v21 = v20;
  if (v18 == v19)
    v21 = -v20;
  else
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if (v21 < -v17)
  {
    sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    MEMORY[0x24269C00C]();
    sub_2418488B8();
LABEL_11:
    sub_2418A9810();
    goto LABEL_12;
  }
  if (v17 <= v21)
  {
    sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    MEMORY[0x24269C00C]();
    sub_2418489BC();
    goto LABEL_11;
  }
LABEL_12:
  v22 = (uint64_t *)(a2 + *(int *)(v14 + 52));
  v23 = *v22;
  v24 = v22[1];
  v26[2] = v23;
  v26[3] = v24;
  v26[1] = 0;
  sub_24172887C(0, &qword_25714CA00, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  return sub_2418A96D8();
}

double sub_24173D594(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v22;

  v3 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v22 - v9;
  v11 = _s16TimelineDataViewVMa();
  sub_241860D60((uint64_t)v10);
  sub_24172588C((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v7);
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  v12 = (double)*a1;
  sub_241737C10();
  v14 = v13;
  sub_241860D60((uint64_t)v10);
  sub_24172588C((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  v15 = 20.0 - (v14 + 10.0) * v12;
  v16 = *(double *)(v1 + *(int *)(v11 + 32));
  sub_241860D60((uint64_t)v10);
  sub_24172588C((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v7);
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241737C10();
  v18 = v15 + (v16 + -40.0 - v17) * 0.5 - sub_241737D2C();
  sub_241737C10();
  v20 = v19;
  sub_241860D60((uint64_t)v10);
  sub_24172588C((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  return v18 / (v20 + 10.0);
}

uint64_t sub_24173D73C(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v2 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s16TimelineDataViewVMa();
  sub_241860D60((uint64_t)v5);
  result = sub_24172588C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles);
  if (fabs(a1) > 1.0)
  {
    sub_241860D60((uint64_t)v5);
    sub_24172588C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles);
    sub_241860D60((uint64_t)v5);
    return sub_24172588C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles);
  }
  return result;
}

uint64_t sub_24173D82C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2418A8C58();
  *(_QWORD *)(a1 + 8) = 0x402E000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  sub_24173D870();
  return sub_24173BEB8(v1, a1 + *(int *)(v3 + 44));
}

void sub_24173D870()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C738)
  {
    sub_24172570C(255, &qword_25714C740, (uint64_t (*)(uint64_t))sub_24173D8EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C738);
  }
}

void sub_24173D8EC()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714C748)
  {
    sub_24173D988(255);
    sub_24173DBE4();
    sub_241721CBC(255, &qword_25714C960, sub_24173EBCC);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714C748);
  }
}

void sub_24173D988(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C750, sub_24173D9A4);
}

void sub_24173D9A4(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C758, (void (*)(uint64_t))sub_24173D9C0);
}

void sub_24173D9C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C760)
  {
    sub_24172570C(255, &qword_25714C768, (uint64_t (*)(uint64_t))sub_24173DA58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417406BC(&qword_25714C798, &qword_25714C768, (uint64_t (*)(uint64_t))sub_24173DA58);
    v0 = sub_2418A972C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C760);
  }
}

void sub_24173DA58()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_25714C770)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C0A8, MEMORY[0x24BDF4638], MEMORY[0x24BDEBEF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24173DB0C(255);
    sub_24173DB28(255);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_25714C770);
  }
}

void sub_24173DB0C(uint64_t a1)
{
  sub_241728250(a1, &qword_25714C410, (void (*)(uint64_t))sub_241730780, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_24173DB28(uint64_t a1)
{
  sub_241728250(a1, &qword_25714C778, (void (*)(uint64_t))sub_24173DB44, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_24173DB44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C780)
  {
    sub_24173DBC8(255);
    sub_24172835C(255, &qword_25714C790, MEMORY[0x24BEE1328], MEMORY[0x24BEE1340], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEEBF0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C780);
  }
}

void sub_24173DBC8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C788, (void (*)(uint64_t))_s9LogButtonVMa);
}

void sub_24173DBE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C7A0)
  {
    sub_24173DC58(255, &qword_25714C7A8, sub_24173DCDC);
    sub_24173EB30();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C7A0);
  }
}

void sub_24173DC58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_24172835C(255, &qword_25714C948, MEMORY[0x24BEE1768], MEMORY[0x24BEE1788], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEEBF0]);
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_24173DCDC(uint64_t a1)
{
  sub_24173DC58(a1, &qword_25714C7B0, sub_24173DCF0);
}

void sub_24173DCF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_25714C7B8)
  {
    sub_24173DDCC(255);
    v3 = v2;
    sub_24173E564();
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_241721DF8(&qword_25714C8F0, (uint64_t (*)(uint64_t))sub_24173DDCC, (uint64_t (*)(void))sub_24173E750, MEMORY[0x24BDEC438]);
    v7[3] = sub_24172159C(&qword_25714C940, (uint64_t (*)(uint64_t))sub_24173E564, MEMORY[0x24BDED4A8]);
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF3770], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714C7B8);
  }
}

void sub_24173DDCC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C7C0, (void (*)(uint64_t))sub_24173DDE8);
}

void sub_24173DDE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C7C8)
  {
    sub_24173EEE8(255, &qword_25714C7D0, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_24173DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB978]);
    sub_24173DEAC(255, &qword_25714C7E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    sub_24173E4FC();
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C7C8);
  }
}

uint64_t sub_24173DE90()
{
  return sub_24172159C(&qword_25714C7D8, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, (uint64_t)&unk_2418D34F8);
}

void sub_24173DEAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_24173DF24(255, &qword_25714C7E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v7 = v6;
    sub_24173E030();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_24173DF24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = _s20EntryPlaceholderViewVMa();
    sub_24172570C(255, &qword_25714C7F0, (uint64_t (*)(uint64_t))sub_24173DFA4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_24173DFA4()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714C7F8)
  {
    sub_24173E014(255);
    _s15EntryNoDataViewVMa();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714C7F8);
  }
}

void sub_24173E014(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C800, (void (*)(uint64_t))_s20EntryPlaceholderViewVMa);
}

void sub_24173E030()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C808)
  {
    sub_24172570C(255, &qword_25714C810, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_241728250(255, &qword_25714C818, sub_24173E0F4, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    sub_24173E49C();
    v0 = sub_2418A98A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C808);
  }
}

void sub_24173E0F4(uint64_t a1)
{
  sub_241728250(a1, &qword_25714C820, sub_24173E110, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_24173E110(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!qword_25714C828)
  {
    sub_24173E1D0(255);
    v3 = v2;
    sub_24173E264(255);
    sub_241721DF8(&qword_25714C868, (uint64_t (*)(uint64_t))sub_24173E264, sub_24173E350, MEMORY[0x24BDECC38]);
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF2F10], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714C828);
  }
}

void sub_24173E1D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714C830)
  {
    sub_24173E264(255);
    v5[0] = v2;
    v5[1] = sub_241721DF8(&qword_25714C868, (uint64_t (*)(uint64_t))sub_24173E264, sub_24173E350, MEMORY[0x24BDECC38]);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2550], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714C830);
  }
}

void sub_24173E264(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C838, sub_24173E280);
}

void sub_24173E280(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C840, sub_24173E29C);
}

void sub_24173E29C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C848, sub_24173E2B8);
}

void sub_24173E2B8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C850, (void (*)(uint64_t))sub_24173E2D4);
}

void sub_24173E2D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C858)
  {
    _s16EntryLimitedViewVMa();
    sub_24172887C(255, &qword_25714C860, MEMORY[0x24BEE1328], MEMORY[0x24BDF1230]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C858);
  }
}

uint64_t sub_24173E350()
{
  return sub_241721DF8(&qword_25714C870, (uint64_t (*)(uint64_t))sub_24173E280, sub_24173E374, MEMORY[0x24BDEC438]);
}

uint64_t sub_24173E374()
{
  return sub_241721DF8(&qword_25714C878, (uint64_t (*)(uint64_t))sub_24173E29C, sub_24173E398, MEMORY[0x24BDEBF50]);
}

uint64_t sub_24173E398()
{
  return sub_241721DF8(&qword_25714C880, (uint64_t (*)(uint64_t))sub_24173E2B8, (uint64_t (*)(void))sub_24173E3BC, MEMORY[0x24BDEC468]);
}

unint64_t sub_24173E3BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714C888;
  if (!qword_25714C888)
  {
    sub_24173E2D4();
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714C890, (uint64_t (*)(uint64_t))_s16EntryLimitedViewVMa, (uint64_t)&unk_2418D87B4);
    v3[1] = sub_24173E43C();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714C888);
  }
  return result;
}

unint64_t sub_24173E43C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714C898;
  if (!qword_25714C898)
  {
    sub_24172887C(255, &qword_25714C860, MEMORY[0x24BEE1328], MEMORY[0x24BDF1230]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF1248], v1);
    atomic_store(result, (unint64_t *)&qword_25714C898);
  }
  return result;
}

unint64_t sub_24173E49C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714C8A0;
  if (!qword_25714C8A0)
  {
    sub_24172570C(255, &qword_25714C810, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE12D8], v1);
    atomic_store(result, (unint64_t *)&qword_25714C8A0);
  }
  return result;
}

unint64_t sub_24173E4FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714C8A8;
  if (!qword_25714C8A8)
  {
    sub_24173EEE8(255, &qword_25714C7D0, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_24173DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB978]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEB998], v1);
    atomic_store(result, (unint64_t *)&qword_25714C8A8);
  }
  return result;
}

void sub_24173E564()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25714C8B0)
  {
    sub_2418A85E0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEBD00];
    sub_24173EEE8(255, &qword_25714C8B8, (uint64_t (*)(uint64_t))sub_24173E628, sub_24173E6CC, MEMORY[0x24BDEC3F0]);
    sub_24172159C(&qword_25714C8E0, v0, MEMORY[0x24BDEBCF8]);
    sub_24173E6E8();
    v1 = sub_2418A8850();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25714C8B0);
  }
}

void sub_24173E628()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C8C0)
  {
    sub_2418A852C();
    sub_24172159C(&qword_25714C8C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
    sub_24172159C(&qword_25714C8D0, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
    v0 = sub_2418A885C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C8C0);
  }
}

uint64_t sub_24173E6CC()
{
  return sub_24172159C(&qword_25714C8D8, (uint64_t (*)(uint64_t))sub_24173E628, MEMORY[0x24BDED570]);
}

unint64_t sub_24173E6E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714C8E8;
  if (!qword_25714C8E8)
  {
    sub_24173EEE8(255, &qword_25714C8B8, (uint64_t (*)(uint64_t))sub_24173E628, sub_24173E6CC, MEMORY[0x24BDEC3F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEC410], v1);
    atomic_store(result, (unint64_t *)&qword_25714C8E8);
  }
  return result;
}

unint64_t sub_24173E750()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714C8F8;
  if (!qword_25714C8F8)
  {
    sub_24173DDE8();
    v2 = v1;
    v3[0] = sub_24173E7B8();
    v3[1] = sub_24173E820();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEC550], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714C8F8);
  }
  return result;
}

unint64_t sub_24173E7B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714C900;
  if (!qword_25714C900)
  {
    sub_24173EEE8(255, &qword_25714C7D0, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_24173DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB978]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEB9A8], v1);
    atomic_store(result, (unint64_t *)&qword_25714C900);
  }
  return result;
}

unint64_t sub_24173E820()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714C908;
  if (!qword_25714C908)
  {
    sub_24173DEAC(255, &qword_25714C7E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_24173E898();
    v3[1] = sub_24173E940();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714C908);
  }
  return result;
}

unint64_t sub_24173E898()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714C910;
  if (!qword_25714C910)
  {
    sub_24173DF24(255, &qword_25714C7E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714C918, (uint64_t (*)(uint64_t))_s20EntryPlaceholderViewVMa, (uint64_t)&unk_2418D9800);
    v3[1] = sub_2417406BC(&qword_25714C920, &qword_25714C7F0, (uint64_t (*)(uint64_t))sub_24173DFA4);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714C910);
  }
  return result;
}

unint64_t sub_24173E940()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_25714C928;
  if (!qword_25714C928)
  {
    sub_24173E030();
    v2 = v1;
    v3 = sub_24173E9A0();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4A08], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_25714C928);
  }
  return result;
}

unint64_t sub_24173E9A0()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25714C930;
  if (!qword_25714C930)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
    sub_241728250(255, &qword_25714C818, sub_24173E0F4, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v3 = v2;
    v4[0] = sub_24173EA40();
    v4[1] = sub_24172159C(&qword_25714C550, v1, MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v4);
    atomic_store(result, (unint64_t *)&qword_25714C930);
  }
  return result;
}

unint64_t sub_24173EA40()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  result = qword_25714C938;
  if (!qword_25714C938)
  {
    sub_24173E0F4(255);
    v2 = v1;
    sub_24173E1D0(255);
    v4 = v3;
    sub_24173E264(255);
    sub_241721DF8(&qword_25714C868, (uint64_t (*)(uint64_t))sub_24173E264, sub_24173E350, MEMORY[0x24BDECC38]);
    v5[2] = v4;
    v5[3] = swift_getOpaqueTypeConformance2();
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v5);
    atomic_store(result, (unint64_t *)&qword_25714C938);
  }
  return result;
}

void sub_24173EB30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C950)
  {
    sub_24173EB88();
    v0 = sub_2418A8BEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C950);
  }
}

unint64_t sub_24173EB88()
{
  unint64_t result;

  result = qword_25714C958;
  if (!qword_25714C958)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE50E0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25714C958);
  }
  return result;
}

void sub_24173EBCC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C968, sub_24173EBE8);
}

void sub_24173EBE8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C970, (void (*)(uint64_t))sub_24173EC04);
}

void sub_24173EC04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C978)
  {
    sub_24172570C(255, &qword_25714C980, (uint64_t (*)(uint64_t))sub_24173EC9C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417406BC(&qword_25714C9F0, &qword_25714C980, (uint64_t (*)(uint64_t))sub_24173EC9C);
    v0 = sub_2418A972C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C978);
  }
}

void sub_24173EC9C()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714C988)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C0A8, MEMORY[0x24BDF4638], MEMORY[0x24BDEBEF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24173ED2C(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714C988);
  }
}

void sub_24173ED2C(uint64_t a1)
{
  sub_241728250(a1, &qword_25714C990, (void (*)(uint64_t))sub_24173ED48, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_24173ED48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C998)
  {
    sub_24173EDCC(255);
    sub_24173EEE8(255, (unint64_t *)&qword_25714C9C0, (uint64_t (*)(uint64_t))sub_24173EF58, (uint64_t (*)(void))sub_24173EFE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF358]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C998);
  }
}

void sub_24173EDCC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714C9A0, (void (*)(uint64_t))sub_24173EDE8);
}

void sub_24173EDE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C9A8)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C9B0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24173EE68();
    v0 = sub_2418A9720();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C9A8);
  }
}

unint64_t sub_24173EE68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25714C9B8;
  if (!qword_25714C9B8)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C9B0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25714C9B8);
  }
  return result;
}

void sub_24173EEE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_24173EF58(uint64_t a1)
{
  sub_241728250(a1, &qword_25714C9C8, (void (*)(uint64_t))MEMORY[0x24BDED998], (void (*)(uint64_t))sub_24173EF74);
}

void sub_24173EF74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C9D0)
  {
    sub_24172887C(255, (unint64_t *)&qword_25714C9D8, MEMORY[0x24BDF3E48], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2418A9090();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C9D0);
  }
}

unint64_t sub_24173EFE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714C9E0;
  if (!qword_25714C9E0)
  {
    sub_24173EF58(255);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714C480, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED988]);
    v3[1] = sub_24172159C((unint64_t *)&qword_25714C9E8, (uint64_t (*)(uint64_t))sub_24173EF74, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714C9E0);
  }
  return result;
}

void sub_24173F078(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_24172570C(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v5 = sub_2418A86E8();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_24173F0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24173EEE8(0, &qword_25714C7D0, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_24173DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB978]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24173F150(uint64_t a1)
{
  uint64_t v2;

  sub_24173EEE8(0, &qword_25714C7D0, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_24173DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB978]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24173F1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24173DEAC(0, &qword_25714C7E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24173F200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_24173F24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;

  v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_24173F288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_24173F2D8(uint64_t a1)
{
  uint64_t v2;

  sub_241721CBC(0, &qword_25714C960, sub_24173EBCC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24173F32C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A89B8();
  *a1 = result;
  return result;
}

uint64_t sub_24173F354@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A89B8();
  *a1 = result;
  return result;
}

uint64_t sub_24173F37C()
{
  swift_retain();
  return sub_2418A89C4();
}

uint64_t sub_24173F3A4()
{
  swift_retain();
  return sub_2418A89C4();
}

unint64_t sub_24173F3CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CA10;
  if (!qword_25714CA10)
  {
    sub_24173ED48();
    v2 = v1;
    v3[0] = sub_241721DF8(&qword_25714CA18, (uint64_t (*)(uint64_t))sub_24173EDCC, sub_24173F454, MEMORY[0x24BDECC60]);
    v3[1] = sub_24173F470();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CA10);
  }
  return result;
}

uint64_t sub_24173F454()
{
  return sub_24172159C(&qword_25714CA20, (uint64_t (*)(uint64_t))sub_24173EDE8, MEMORY[0x24BDF43B0]);
}

unint64_t sub_24173F470()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714CA28;
  if (!qword_25714CA28)
  {
    sub_24173EEE8(255, (unint64_t *)&qword_25714C9C0, (uint64_t (*)(uint64_t))sub_24173EF58, (uint64_t (*)(void))sub_24173EFE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF358]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF370], v1);
    atomic_store(result, (unint64_t *)&qword_25714CA28);
  }
  return result;
}

uint64_t sub_24173F4DC(uint64_t a1)
{
  return sub_24173F4F8(a1, sub_24173CE7C);
}

uint64_t sub_24173F4EC(uint64_t a1)
{
  return sub_24173F4F8(a1, sub_24173D300);
}

uint64_t sub_24173F4F8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s16TimelineDataViewVMa() - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

unint64_t sub_24173F544()
{
  unint64_t result;

  result = qword_25714CA30;
  if (!qword_25714CA30)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE50D8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25714CA30);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  int *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int EnumCaseMultiPayload;
  uint64_t v46;
  void (*v48)(uint64_t);
  uint64_t v49;
  int *v50;

  v1 = (int *)_s16TimelineDataViewVMa();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + v2;
  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A87CC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  v5 = v3 + v1[5];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v7 = v3 + v1[6];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v50 = v1;
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v7 + v11[5];
    v13 = sub_2418A87B4();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v12, v13);
    v15 = v7 + v11[7];
    v16 = sub_2418A84E4();
    v48 = *(void (**)(uint64_t))(*(_QWORD *)(v16 - 8) + 8);
    v49 = v16;
    v48(v15);
    v17 = v7 + v11[8];
    if (!v10(v17, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
    v18 = _s6StylesV8TimelineVMa(0);
    v14(v17 + *(int *)(v18 + 20), v13);
    v19 = v7 + v11[9];
    if (!v10(v19, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v8);
    v20 = _s6StylesV6NoDataVMa(0);
    v14(v19 + *(int *)(v20 + 20), v13);
    v21 = v7 + v11[10];
    if (!v10(v21, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v21, v8);
    v22 = _s6StylesV11PlaceholderVMa(0);
    v14(v21 + *(int *)(v22 + 20), v13);
    v23 = v7 + v11[11];
    if (!v10(v23, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v8);
    v24 = _s6StylesV6SymbolVMa(0);
    v14(v23 + *(int *)(v24 + 20), v13);
    v25 = v7 + v11[12];
    if (!v10(v25, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v25, v8);
    v26 = v9;
    v27 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(v25 + *(int *)(v27 + 20), v13);
    v28 = *(int *)(v27 + 28);
    v29 = v26;
    ((void (*)(uint64_t, uint64_t))v48)(v25 + v28, v49);
    v30 = v7 + v11[13];
    if (!v10(v30, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v8);
    v31 = _s6StylesV5EmptyVMa(0);
    v14(v30 + *(int *)(v31 + 20), v13);
    v32 = v7 + v11[14];
    if (!v10(v32, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v8);
    v33 = _s6StylesV5DailyVMa(0);
    v14(v32 + *(int *)(v33 + 20), v13);
    v34 = v7 + v11[15];
    if (!v10(v34, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v8);
    v35 = _s6StylesV9MomentaryVMa(0);
    v14(v34 + *(int *)(v35 + 20), v13);
    v36 = v7 + v11[16];
    if (!v10(v36, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v8);
    v37 = _s6StylesV6HeaderVMa(0);
    v14(v36 + *(int *)(v37 + 20), v13);
    v38 = v7 + v11[17];
    if (!v10(v38, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v38, v8);
    v39 = _s6StylesV11ChartButtonVMa(0);
    v14(v38 + *(int *)(v39 + 20), v13);
    v40 = v7 + v11[18];
    if (!v10(v40, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v40, v8);
    v41 = _s6StylesV15LogButtonFooterVMa(0);
    v14(v40 + *(int *)(v41 + 20), v13);
    v1 = v50;
  }
  else
  {
    swift_release();
  }
  v42 = v3 + v1[7];
  swift_release();
  swift_release();
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v44 = v42 + *(int *)(v43 + 32);
  _s9ViewModelOMa();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2)
  {
    v46 = sub_2418A9CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v44, v46);
    sub_2417340BC();
LABEL_37:
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  if (EnumCaseMultiPayload == 2)
    goto LABEL_37;
LABEL_38:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24173FBAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  _s16TimelineDataViewVMa();
  return sub_24173A29C(a1, a2);
}

uint64_t sub_24173FC08(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_24172570C(0, a3, a4, MEMORY[0x24BDEB580]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_24173FC60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;

  sub_24172570C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_24173FC9C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A8ACC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24173FCC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A8ACC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24173FCF4()
{
  return sub_2418A8AD8();
}

uint64_t sub_24173FD18()
{
  return sub_2418A8AD8();
}

_BYTE *sub_24173FD3C(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_24173FD50()
{
  return swift_deallocObject();
}

_BYTE *sub_24173FD60(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_24173FD78()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  int *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int EnumCaseMultiPayload;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v1 = v0;
  v2 = (int *)_s16TimelineDataViewVMa();
  v3 = *((_QWORD *)v2 - 1);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v1 + v4;
  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A87CC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v1 + v4, v9);
  }
  else
  {
    swift_release();
  }
  v10 = v5 + v7;
  v11 = v8 + v2[5];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  v13 = v4 + v10;
  v14 = v8 + v2[6];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v63 = v13;
    v64 = v2;
    v65 = v7;
    v66 = v6;
    v67 = v1;
    v15 = sub_2418A8EB0();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v17(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v19 = v14 + v18[5];
    v20 = sub_2418A87B4();
    v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8);
    v21(v19, v20);
    v22 = v14 + v18[7];
    v23 = sub_2418A84E4();
    v61 = *(void (**)(uint64_t))(*(_QWORD *)(v23 - 8) + 8);
    v62 = v23;
    v61(v22);
    v24 = v14 + v18[8];
    if (!v17(v24, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v24, v15);
    v25 = _s6StylesV8TimelineVMa(0);
    v21(v24 + *(int *)(v25 + 20), v20);
    v26 = v14 + v18[9];
    if (!v17(v26, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v26, v15);
    v27 = _s6StylesV6NoDataVMa(0);
    v21(v26 + *(int *)(v27 + 20), v20);
    v28 = v14 + v18[10];
    if (!v17(v28, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v28, v15);
    v29 = _s6StylesV11PlaceholderVMa(0);
    v21(v28 + *(int *)(v29 + 20), v20);
    v30 = v14 + v18[11];
    if (!v17(v30, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v30, v15);
    v31 = _s6StylesV6SymbolVMa(0);
    v21(v30 + *(int *)(v31 + 20), v20);
    v32 = v14 + v18[12];
    if (!v17(v32, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v32, v15);
    v33 = v16;
    v34 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v21(v32 + *(int *)(v34 + 20), v20);
    v35 = *(int *)(v34 + 28);
    v36 = v33;
    ((void (*)(uint64_t, uint64_t))v61)(v32 + v35, v62);
    v37 = v14 + v18[13];
    if (!v17(v37, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v15);
    v38 = _s6StylesV5EmptyVMa(0);
    v21(v37 + *(int *)(v38 + 20), v20);
    v39 = v14 + v18[14];
    if (!v17(v39, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v39, v15);
    v40 = _s6StylesV5DailyVMa(0);
    v21(v39 + *(int *)(v40 + 20), v20);
    v41 = v14 + v18[15];
    if (!v17(v41, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v41, v15);
    v42 = _s6StylesV9MomentaryVMa(0);
    v21(v41 + *(int *)(v42 + 20), v20);
    v43 = v14 + v18[16];
    if (!v17(v43, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v43, v15);
    v44 = _s6StylesV6HeaderVMa(0);
    v21(v43 + *(int *)(v44 + 20), v20);
    v45 = v14 + v18[17];
    if (!v17(v45, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v45, v15);
    v46 = _s6StylesV11ChartButtonVMa(0);
    v21(v45 + *(int *)(v46 + 20), v20);
    v47 = v14 + v18[18];
    if (!v17(v47, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v47, v15);
    v48 = _s6StylesV15LogButtonFooterVMa(0);
    v21(v47 + *(int *)(v48 + 20), v20);
    v1 = v67;
    v7 = v65;
    v6 = v66;
    v13 = v63;
    v2 = v64;
  }
  else
  {
    swift_release();
  }
  v49 = v13 & ~v7;
  v50 = v8 + v2[7];
  swift_release();
  swift_release();
  sub_24172570C(0, &qword_25714C670, (uint64_t (*)(uint64_t))_s9ViewModelOMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v52 = v50 + *(int *)(v51 + 32);
  _s9ViewModelOMa();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload != 2)
      goto LABEL_38;
  }
  else
  {
    v54 = sub_2418A9CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v52, v54);
    sub_2417340BC();
  }
  swift_bridgeObjectRelease();
LABEL_38:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v55 = v1 + v49 + *(int *)(v6 + 20);
  v56 = sub_2418A9CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
  swift_bridgeObjectRelease();
  v57 = v1 + v49 + *(int *)(v6 + 28);
  v58 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v57, 1, v58))
  {
    v59 = sub_2418A8130();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v57, v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2417404A8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(_s16TimelineDataViewVMa() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StateOfMindTimeline.DaySummary() - 8) + 80);
  return sub_24173B05C(v0 + v2, (uint64_t *)(v0 + ((v2 + v3 + v4) & ~v4)));
}

unint64_t sub_241740508()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CA50;
  if (!qword_25714CA50)
  {
    sub_24173DB44();
    v2 = v1;
    v3[0] = sub_241721DF8(&qword_25714CA58, (uint64_t (*)(uint64_t))sub_24173DBC8, sub_2417310B8, MEMORY[0x24BDECC38]);
    v3[1] = sub_241740590();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CA50);
  }
  return result;
}

unint64_t sub_241740590()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714CA60;
  if (!qword_25714CA60)
  {
    sub_24172835C(255, &qword_25714C790, MEMORY[0x24BEE1328], MEMORY[0x24BEE1340], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEEBF0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEEC10], v1);
    atomic_store(result, (unint64_t *)&qword_25714CA60);
  }
  return result;
}

uint64_t sub_2417405F8()
{
  return sub_24172159C(&qword_25714CA68, (uint64_t (*)(uint64_t))sub_241740624, MEMORY[0x24BDF4700]);
}

void sub_241740624()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CA70)
  {
    sub_24172570C(255, &qword_25714C740, (uint64_t (*)(uint64_t))sub_24173D8EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417406BC(&qword_25714CA78, &qword_25714C740, (uint64_t (*)(uint64_t))sub_24173D8EC);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CA70);
  }
}

uint64_t sub_2417406BC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_24172570C(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_241740704(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_24172570C(0, &qword_25714CA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8C4C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241740804(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, &qword_25714CA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_2418A8C4C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_24174088C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  sub_24172570C(0, &qword_25714CA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8C4C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_241740960(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  if (a1 != a2)
  {
    sub_241740A5C((uint64_t)a1);
    sub_24172570C(0, &qword_25714CA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A8C4C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241740A5C(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, &qword_25714CA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_241740AB0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_24172570C(0, &qword_25714CA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8C4C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_241740B74(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_241740A5C((uint64_t)a1);
    sub_24172570C(0, &qword_25714CA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A8C4C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v13 = *(_QWORD *)v11;
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = v13;
  *((_QWORD *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241740C58()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241740C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_24172570C(0, &qword_25714CA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_241740CFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_241740D08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_24172570C(0, &qword_25714CA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
}

uint64_t type metadata accessor for StateOfMindCalendarDateView()
{
  uint64_t result;

  result = qword_25714CAE8;
  if (!qword_25714CAE8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241740DD8()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714CA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241740E6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241740E7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t result;
  char *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  _QWORD v71[2];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;

  v81 = a1;
  sub_24174184C();
  v71[1] = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v83 = (char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417418C4(0);
  v78 = *(_QWORD *)(v5 - 8);
  v79 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v76 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241741964(0);
  v72 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v75 = (char *)v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241741980(0);
  v74 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v80 = (uint64_t)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174199C(0);
  v73 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v77 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for StateOfMindCalendarDateView();
  v18 = (uint64_t *)(v1 + *(int *)(v17 + 24));
  v19 = v18[1];
  v84 = *v18;
  v85 = v19;
  sub_241721040();
  swift_bridgeObjectRetain();
  v20 = sub_2418A92D0();
  v22 = v21;
  v24 = v23 & 1;
  sub_2418A9210();
  v25 = sub_2418A9294();
  v27 = v26;
  v29 = v28;
  swift_release();
  sub_2417289EC(v20, v22, v24);
  swift_bridgeObjectRelease();
  sub_2418A9198();
  v30 = sub_2418A9258();
  v32 = v31;
  v34 = v33;
  sub_2417289EC(v25, v27, v29 & 1);
  v35 = v82;
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v35 + *(int *)(v17 + 20)))
  {
    if (*(_BYTE *)(v35 + *(int *)(v17 + 20)) == 1)
    {
      sub_2418A9618();
      goto LABEL_7;
    }
    v36 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  }
  else
  {
    v36 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  }
  MEMORY[0x24269BDB4](v36);
LABEL_7:
  v37 = sub_2418A9264();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  swift_release();
  sub_2417289EC(v30, v32, v34 & 1);
  swift_bridgeObjectRelease();
  v84 = v37;
  v85 = v39;
  v86 = v41 & 1;
  v87 = v43;
  v44 = *MEMORY[0x24BDECEA8];
  v45 = sub_2418A87B4();
  v46 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  v47 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v83, v44, v45);
  sub_24172159C(&qword_25714CBB8, v46, MEMORY[0x24BDECF78]);
  result = sub_2418A9DA4();
  if ((result & 1) != 0)
  {
    sub_24172159C((unint64_t *)&qword_25714CB40, (uint64_t (*)(uint64_t))sub_24174184C, MEMORY[0x24BEE30C8]);
    v49 = v76;
    sub_2418A9390();
    sub_24172588C(v47, (uint64_t (*)(_QWORD))sub_24174184C);
    sub_2417289EC(v84, v85, v86);
    swift_bridgeObjectRelease();
    v50 = sub_2418A90D8();
    sub_2418A84A8();
    v52 = v51;
    v54 = v53;
    v56 = v55;
    v58 = v57;
    v60 = v78;
    v59 = v79;
    v61 = (uint64_t)v75;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v75, v49, v79);
    v62 = v61 + *(int *)(v72 + 36);
    *(_BYTE *)v62 = v50;
    *(_QWORD *)(v62 + 8) = v52;
    *(_QWORD *)(v62 + 16) = v54;
    *(_QWORD *)(v62 + 24) = v56;
    *(_QWORD *)(v62 + 32) = v58;
    *(_BYTE *)(v62 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v49, v59);
    v63 = v80;
    sub_2417289A8(v61, v80, (uint64_t (*)(_QWORD))sub_241741964);
    *(_WORD *)(v63 + *(int *)(v74 + 36)) = 257;
    sub_24172588C(v61, (uint64_t (*)(_QWORD))sub_241741964);
    v64 = sub_2418A9960();
    v66 = v65;
    v67 = (uint64_t)v77;
    v68 = (uint64_t)&v77[*(int *)(v73 + 36)];
    sub_24174139C(v68);
    sub_2417419C0();
    v70 = (uint64_t *)(v68 + *(int *)(v69 + 36));
    *v70 = v64;
    v70[1] = v66;
    sub_241731B4C(v63, v67, (uint64_t (*)(_QWORD))sub_241741980);
    return sub_241731B4C(v67, v81, (uint64_t (*)(_QWORD))sub_24174199C);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24174139C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  BOOL v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v41)(void);
  uint64_t v42;
  char v43;
  void *v44;
  char **v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t *v48;
  uint64_t v49;
  char v51;
  void *v52;
  char **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;

  v64 = a1;
  sub_241731FB0(0, &qword_25714CBC0, (uint64_t (*)(uint64_t))sub_241741A40, (uint64_t (*)(uint64_t))sub_241741B6C, MEMORY[0x24BDEF380]);
  v62 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v63 = (uint64_t *)((char *)&v57 - v3);
  sub_241730A70();
  v58 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A88BC();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (_OWORD *)((char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241741ABC();
  MEMORY[0x24BDAC7A8](v12, v13);
  v59 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241741A40();
  v61 = v15;
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v60 = (uint64_t)&v57 - v21;
  v22 = sub_2418A8C4C();
  v23 = *(_QWORD *)(v22 - 8);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v27 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)&v57 - v29;
  sub_241861568((uint64_t)&v57 - v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v27, *MEMORY[0x24BDEEE50], v22);
  v31 = sub_241741EA0((uint64_t)v30, (uint64_t)v27);
  v32 = *(void (**)(char *, uint64_t))(v23 + 8);
  v32(v27, v22);
  v32(v30, v22);
  if (v31)
  {
    v33 = (char *)v11 + *(int *)(v8 + 20);
    v34 = *MEMORY[0x24BDEEB68];
    v35 = sub_2418A8BE0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v33, v34, v35);
    __asm { FMOV            V0.2D, #8.0 }
    *v11 = _Q0;
    v41 = MEMORY[0x24BDED998];
    sub_2417289A8((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
    v42 = (uint64_t)v59;
    *(_WORD *)&v7[*(int *)(v58 + 36)] = 256;
    sub_2417289A8((uint64_t)v7, v42, (uint64_t (*)(_QWORD))sub_241730A70);
    sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))sub_241730A70);
    sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))v41);
    type metadata accessor for StateOfMindCalendarDateView();
    v43 = sub_2418A8298();
    v44 = (void *)objc_opt_self();
    v45 = &selRef_tertiaryLabelColor;
    if ((v43 & 1) == 0)
      v45 = &selRef_systemBackgroundColor;
    v46 = MEMORY[0x24269BDB4](objc_msgSend(v44, *v45));
    KeyPath = swift_getKeyPath();
    sub_2417289A8(v42, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_241741ABC);
    v48 = (uint64_t *)&v19[*(int *)(v61 + 36)];
    *v48 = KeyPath;
    v48[1] = v46;
    sub_24172588C(v42, (uint64_t (*)(_QWORD))sub_241741ABC);
    v49 = v60;
    sub_241731B4C((uint64_t)v19, v60, (uint64_t (*)(_QWORD))sub_241741A40);
    sub_2417289A8(v49, (uint64_t)v63, (uint64_t (*)(_QWORD))sub_241741A40);
    swift_storeEnumTagMultiPayload();
    sub_241741B6C();
    sub_241741C68();
    sub_241741DF4();
    sub_2418A8D24();
    return sub_24172588C(v49, (uint64_t (*)(_QWORD))sub_241741A40);
  }
  else
  {
    type metadata accessor for StateOfMindCalendarDateView();
    v51 = sub_2418A8298();
    v52 = (void *)objc_opt_self();
    v53 = &selRef_tertiaryLabelColor;
    if ((v51 & 1) == 0)
      v53 = &selRef_systemBackgroundColor;
    v54 = MEMORY[0x24269BDB4](objc_msgSend(v52, *v53));
    v55 = swift_getKeyPath();
    v56 = v63;
    *v63 = v55;
    v56[1] = v54;
    swift_storeEnumTagMultiPayload();
    sub_241741B6C();
    sub_241741C68();
    sub_241741DF4();
    return sub_2418A8D24();
  }
}

void sub_24174184C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CB28)
  {
    sub_2418A87B4();
    sub_24172159C(&qword_25714CB30, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
    v0 = sub_2418AA3E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CB28);
  }
}

void sub_2417418C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_25714CB38)
  {
    sub_24174184C();
    v3 = v2;
    v4 = sub_24172159C((unint64_t *)&qword_25714CB40, (uint64_t (*)(uint64_t))sub_24174184C, MEMORY[0x24BEE30C8]);
    v7[0] = MEMORY[0x24BDF1FA8];
    v7[1] = v3;
    v7[2] = MEMORY[0x24BDF1F80];
    v7[3] = v4;
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF2800], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714CB38);
  }
}

void sub_241741964(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714CB48, sub_2417418C4);
}

void sub_241741980(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714CB50, sub_241741964);
}

void sub_24174199C(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714CB58, (uint64_t (*)(uint64_t))sub_241741980, (uint64_t (*)(uint64_t))sub_2417419C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_2417419C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CB60)
  {
    sub_241731FB0(255, &qword_25714CB68, (uint64_t (*)(uint64_t))sub_241741A40, (uint64_t (*)(uint64_t))sub_241741B6C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    sub_241741BE0();
    v0 = sub_2418A8D18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CB60);
  }
}

void sub_241741A40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CB70)
  {
    sub_241741ABC();
    sub_24172570C(255, (unint64_t *)&qword_25714C9D0, (uint64_t (*)(uint64_t))sub_241741B18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CB70);
  }
}

void sub_241741ABC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CB78)
  {
    sub_241730A70();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CB78);
  }
}

void sub_241741B18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C9D8)
  {
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C9D8);
  }
}

void sub_241741B6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CB80)
  {
    sub_24172570C(255, (unint64_t *)&qword_25714C9D0, (uint64_t (*)(uint64_t))sub_241741B18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CB80);
  }
}

unint64_t sub_241741BE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CB88;
  if (!qword_25714CB88)
  {
    sub_241731FB0(255, &qword_25714CB68, (uint64_t (*)(uint64_t))sub_241741A40, (uint64_t (*)(uint64_t))sub_241741B6C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_241741C68();
    v3[1] = sub_241741DF4();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CB88);
  }
  return result;
}

unint64_t sub_241741C68()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CB90;
  if (!qword_25714CB90)
  {
    sub_241741A40();
    v2 = v1;
    v3[0] = sub_241741CD0();
    v3[1] = sub_241741D94();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CB90);
  }
  return result;
}

unint64_t sub_241741CD0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CB98;
  if (!qword_25714CB98)
  {
    sub_241741ABC();
    v2 = v1;
    v3[0] = sub_241741D50();
    v3[1] = sub_24172159C(&qword_25714C5E0, (uint64_t (*)(uint64_t))sub_241730A70, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CB98);
  }
  return result;
}

unint64_t sub_241741D50()
{
  unint64_t result;

  result = qword_25714CBA0;
  if (!qword_25714CBA0)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF52D0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_25714CBA0);
  }
  return result;
}

unint64_t sub_241741D94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714C9E8;
  if (!qword_25714C9E8)
  {
    sub_24172570C(255, (unint64_t *)&qword_25714C9D0, (uint64_t (*)(uint64_t))sub_241741B18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_25714C9E8);
  }
  return result;
}

unint64_t sub_241741DF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CBA8;
  if (!qword_25714CBA8)
  {
    sub_241741B6C();
    v2 = v1;
    v3[0] = sub_241741E5C();
    v3[1] = sub_241741D94();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CBA8);
  }
  return result;
}

unint64_t sub_241741E5C()
{
  unint64_t result;

  result = qword_25714CBB0;
  if (!qword_25714CBB0)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4428], MEMORY[0x24BDF4458]);
    atomic_store(result, (unint64_t *)&qword_25714CBB0);
  }
  return result;
}

BOOL sub_241741EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t (*v14)(char *, uint64_t);
  int v15;
  unint64_t v16;
  int v17;
  _DWORD *v18;
  int v19;
  unint64_t v20;
  uint64_t v22;

  v4 = sub_2418A8C4C();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v22 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13((char *)&v22 - v11, a1, v4);
  v14 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v15 = v14(v12, v4);
  v16 = 0;
  v17 = *MEMORY[0x24BDEEE58];
  v18 = (_DWORD *)MEMORY[0x24BDEEE90];
  if (v15 != *MEMORY[0x24BDEEE58])
  {
    if (v15 == *MEMORY[0x24BDEEE90])
    {
      v16 = 1;
      goto LABEL_24;
    }
    if (v15 == *MEMORY[0x24BDEEE98])
    {
      v16 = 2;
      goto LABEL_24;
    }
    if (v15 == *MEMORY[0x24BDEEE88])
      goto LABEL_7;
    if (v15 == *MEMORY[0x24BDEEE50])
    {
      v16 = 4;
    }
    else if (v15 == *MEMORY[0x24BDEEE60])
    {
      v16 = 5;
    }
    else if (v15 == *MEMORY[0x24BDEEE30])
    {
      v16 = 6;
    }
    else if (v15 == *MEMORY[0x24BDEEE70])
    {
      v16 = 7;
    }
    else if (v15 == *MEMORY[0x24BDEEE68])
    {
      v16 = 8;
    }
    else if (v15 == *MEMORY[0x24BDEEE78])
    {
      v16 = 9;
    }
    else if (v15 == *MEMORY[0x24BDEEE40])
    {
      v16 = 10;
    }
    else
    {
      if (v15 != *MEMORY[0x24BDEEE48])
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
LABEL_7:
        v16 = 3;
        goto LABEL_24;
      }
      v16 = 11;
    }
  }
LABEL_24:
  v13(v9, a2, v4);
  v19 = v14(v9, v4);
  if (v19 == v17)
  {
    v20 = 0;
  }
  else if (v19 == *v18)
  {
    v20 = 1;
  }
  else if (v19 == *MEMORY[0x24BDEEE98])
  {
    v20 = 2;
  }
  else
  {
    if (v19 != *MEMORY[0x24BDEEE88])
    {
      if (v19 == *MEMORY[0x24BDEEE50])
      {
        v20 = 4;
        return v16 >= v20;
      }
      if (v19 == *MEMORY[0x24BDEEE60])
      {
        v20 = 5;
        return v16 >= v20;
      }
      if (v19 == *MEMORY[0x24BDEEE30])
      {
        v20 = 6;
        return v16 >= v20;
      }
      if (v19 == *MEMORY[0x24BDEEE70])
      {
        v20 = 7;
        return v16 >= v20;
      }
      if (v19 == *MEMORY[0x24BDEEE68])
      {
        v20 = 8;
        return v16 >= v20;
      }
      if (v19 == *MEMORY[0x24BDEEE78])
      {
        v20 = 9;
        return v16 >= v20;
      }
      if (v19 == *MEMORY[0x24BDEEE40])
      {
        v20 = 10;
        return v16 >= v20;
      }
      if (v19 == *MEMORY[0x24BDEEE48])
      {
        v20 = 11;
        return v16 >= v20;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    }
    v20 = 3;
  }
  return v16 >= v20;
}

unint64_t sub_241742234()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CBC8;
  if (!qword_25714CBC8)
  {
    sub_24174199C(255);
    v2 = v1;
    v3[0] = sub_2417422B4();
    v3[1] = sub_24172159C(&qword_25714CBE0, (uint64_t (*)(uint64_t))sub_2417419C0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CBC8);
  }
  return result;
}

unint64_t sub_2417422B4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CBD0;
  if (!qword_25714CBD0)
  {
    sub_241741980(255);
    v2 = v1;
    v3[0] = sub_24174231C();
    v3[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CBD0);
  }
  return result;
}

unint64_t sub_24174231C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[6];

  result = qword_25714CBD8;
  if (!qword_25714CBD8)
  {
    sub_241741964(255);
    v2 = v1;
    sub_24174184C();
    v4 = v3;
    v5 = sub_24172159C((unint64_t *)&qword_25714CB40, (uint64_t (*)(uint64_t))sub_24174184C, MEMORY[0x24BEE30C8]);
    v6[2] = MEMORY[0x24BDF1FA8];
    v6[3] = v4;
    v6[4] = MEMORY[0x24BDF1F80];
    v6[5] = v5;
    v6[0] = swift_getOpaqueTypeConformance2();
    v6[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v6);
    atomic_store(result, (unint64_t *)&qword_25714CBD8);
  }
  return result;
}

_QWORD *sub_2417423D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int *v96;
  uint64_t v97;
  unsigned int (*v98)(char *, uint64_t, int *);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  void (*v117)(char *, _QWORD, uint64_t, int *);
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  void (*v122)(char *, char *, uint64_t);
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  void (*v140)(char *, char *);
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  unsigned int (*v146)(char *, uint64_t, uint64_t);
  _QWORD *v147;

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(v6 + 20);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)v3 + v9);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v144 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      v146 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      v145 = v13;
      v142 = a1;
      if (v146((char *)v11, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v15 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v16 = v15[5];
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = sub_2418A87B4();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v20(v17, v18, v19);
      *((_BYTE *)v10 + v15[6]) = *((_BYTE *)v11 + v15[6]);
      v21 = v15[7];
      v22 = (char *)v10 + v21;
      v23 = (char *)v11 + v21;
      v24 = sub_2418A84E4();
      v140 = *(void (**)(char *, char *))(*(_QWORD *)(v24 - 8) + 16);
      v141 = v24;
      v140(v22, v23);
      v25 = v15[8];
      v26 = (char *)v10 + v25;
      v27 = (char *)v11 + v25;
      if (v146((char *)v11 + v25, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v26, v27, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v26, 0, 1, v12);
      }
      v29 = _s6StylesV8TimelineVMa(0);
      v20(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v19);
      v30 = v15[9];
      v31 = (char *)v10 + v30;
      v32 = (char *)v11 + v30;
      v33 = v3;
      if (v146((char *)v11 + v30, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v31, v32, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v31, 0, 1, v12);
      }
      v35 = _s6StylesV6NoDataVMa(0);
      v20(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v19);
      v31[*(int *)(v35 + 24)] = v32[*(int *)(v35 + 24)];
      v36 = v15[10];
      v37 = (char *)v10 + v36;
      v38 = (char *)v11 + v36;
      if (v146((char *)v11 + v36, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v37, v38, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v37, 0, 1, v12);
      }
      v40 = _s6StylesV11PlaceholderVMa(0);
      v20(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v19);
      v41 = v15[11];
      v42 = (char *)v10 + v41;
      v43 = (char *)v11 + v41;
      if (v146((char *)v11 + v41, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v42, v43, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v42, 0, 1, v12);
      }
      v45 = _s6StylesV6SymbolVMa(0);
      v20(&v42[*(int *)(v45 + 20)], &v43[*(int *)(v45 + 20)], v19);
      v46 = v15[12];
      v47 = (char *)v10 + v46;
      v48 = (char *)v11 + v46;
      if (v146((char *)v11 + v46, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v47, v48, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v47, 0, 1, v12);
      }
      v50 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v20(&v47[v50[5]], &v48[v50[5]], v19);
      v47[v50[6]] = v48[v50[6]];
      ((void (*)(char *, char *, uint64_t))v140)(&v47[v50[7]], &v48[v50[7]], v141);
      v51 = v15[13];
      v52 = (char *)v10 + v51;
      v53 = (char *)v11 + v51;
      if (v146((char *)v11 + v51, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v52, v53, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v52, 0, 1, v12);
      }
      v55 = _s6StylesV5EmptyVMa(0);
      v20(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v19);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      v56 = v15[14];
      v57 = (char *)v10 + v56;
      v58 = (char *)v11 + v56;
      if (v146((char *)v11 + v56, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v57, v58, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v57, 0, 1, v12);
      }
      v60 = _s6StylesV5DailyVMa(0);
      v20(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v19);
      v57[*(int *)(v60 + 24)] = v58[*(int *)(v60 + 24)];
      v61 = v15[15];
      v62 = (char *)v10 + v61;
      v63 = (char *)v11 + v61;
      if (v146((char *)v11 + v61, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v62, v63, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v62, 0, 1, v12);
      }
      v3 = v33;
      v65 = _s6StylesV9MomentaryVMa(0);
      v20(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v19);
      v66 = v15[16];
      v67 = (char *)v10 + v66;
      v68 = (char *)v11 + v66;
      if (v146((char *)v11 + v66, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v67, v68, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v67, 0, 1, v12);
      }
      v70 = _s6StylesV6HeaderVMa(0);
      v20(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v19);
      v71 = v15[17];
      v72 = (char *)v10 + v71;
      v73 = (char *)v11 + v71;
      if (v146((char *)v11 + v71, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v72, v73, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v72, 0, 1, v12);
      }
      v75 = _s6StylesV11ChartButtonVMa(0);
      v20(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v19);
      v76 = v15[18];
      v77 = (char *)v10 + v76;
      v78 = (char *)v11 + v76;
      if (v146(v78, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v77, v78, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v77, 0, 1, v12);
      }
      a1 = v142;
      v80 = _s6StylesV15LogButtonFooterVMa(0);
      v20(&v77[*(int *)(v80 + 20)], &v78[*(int *)(v80 + 20)], v19);
      v6 = v144;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v81 = *(int *)(v6 + 24);
    v82 = (char *)a1 + v81;
    v147 = v3;
    v83 = (char *)v3 + v81;
    *(_QWORD *)((char *)a1 + v81) = *(_QWORD *)((char *)v3 + v81);
    v84 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
    v85 = v84[5];
    v86 = &v82[v85];
    v87 = &v83[v85];
    v88 = sub_2418A9CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v86, v87, v88);
    v89 = v84[6];
    v90 = &v82[v89];
    v91 = &v83[v89];
    v92 = *((_QWORD *)v91 + 1);
    *(_QWORD *)v90 = *(_QWORD *)v91;
    *((_QWORD *)v90 + 1) = v92;
    v93 = v84[7];
    v94 = &v82[v93];
    v95 = &v83[v93];
    v96 = (int *)_s5EntryVMa();
    v97 = *((_QWORD *)v96 - 1);
    v98 = *(unsigned int (**)(char *, uint64_t, int *))(v97 + 48);
    swift_bridgeObjectRetain();
    if (v98(v95, 1, v96))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    else
    {
      v100 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v94, v95, v100);
      v101 = v96[5];
      v102 = &v94[v101];
      v103 = &v95[v101];
      v104 = *((_QWORD *)v103 + 1);
      *(_QWORD *)v102 = *(_QWORD *)v103;
      *((_QWORD *)v102 + 1) = v104;
      v105 = v96[6];
      v106 = &v94[v105];
      v107 = &v95[v105];
      v108 = *((_QWORD *)v107 + 1);
      *(_QWORD *)v106 = *(_QWORD *)v107;
      *((_QWORD *)v106 + 1) = v108;
      v109 = v96[7];
      v110 = &v94[v109];
      v111 = &v95[v109];
      v112 = *((_QWORD *)v111 + 1);
      *(_QWORD *)v110 = *(_QWORD *)v111;
      *((_QWORD *)v110 + 1) = v112;
      v113 = v96[8];
      v114 = &v94[v113];
      v115 = &v95[v113];
      v143 = a1;
      v116 = *((_QWORD *)v115 + 1);
      *(_QWORD *)v114 = *(_QWORD *)v115;
      *((_QWORD *)v114 + 1) = v116;
      *(_QWORD *)&v94[v96[9]] = *(_QWORD *)&v95[v96[9]];
      v117 = *(void (**)(char *, _QWORD, uint64_t, int *))(v97 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = v143;
      swift_bridgeObjectRetain();
      v117(v94, 0, 1, v96);
    }
    *(_QWORD *)&v82[v84[8]] = *(_QWORD *)&v83[v84[8]];
    *(_QWORD *)&v82[v84[9]] = *(_QWORD *)&v83[v84[9]];
    v118 = *(int *)(v144 + 28);
    v119 = (char *)a1 + v118;
    v120 = (char *)v147 + v118;
    v121 = sub_2418A8130();
    v122 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v122(v119, v120, v121);
    v123 = v96[5];
    v124 = &v119[v123];
    v125 = &v120[v123];
    v126 = *((_QWORD *)v125 + 1);
    *(_QWORD *)v124 = *(_QWORD *)v125;
    *((_QWORD *)v124 + 1) = v126;
    v127 = v96[6];
    v128 = &v119[v127];
    v129 = &v120[v127];
    v130 = *((_QWORD *)v129 + 1);
    *(_QWORD *)v128 = *(_QWORD *)v129;
    *((_QWORD *)v128 + 1) = v130;
    v131 = v96[7];
    v132 = &v119[v131];
    v133 = &v120[v131];
    v134 = *((_QWORD *)v133 + 1);
    *(_QWORD *)v132 = *(_QWORD *)v133;
    *((_QWORD *)v132 + 1) = v134;
    v135 = v96[8];
    v136 = &v119[v135];
    v137 = &v120[v135];
    v138 = *((_QWORD *)v137 + 1);
    *(_QWORD *)v136 = *(_QWORD *)v137;
    *((_QWORD *)v136 + 1) = v138;
    *(_QWORD *)&v119[v96[9]] = *(_QWORD *)&v120[v96[9]];
    *(_QWORD *)((char *)a1 + *(int *)(v144 + 32)) = *(_QWORD *)((char *)v147 + *(int *)(v144 + 32));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24174306C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v50)(uint64_t);
  uint64_t v51;
  int *v52;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + a2[5];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v52 = a2;
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v5 + v9[5];
    v11 = sub_2418A87B4();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v10, v11);
    v13 = v5 + v9[7];
    v14 = sub_2418A84E4();
    v50 = *(void (**)(uint64_t))(*(_QWORD *)(v14 - 8) + 8);
    v51 = v14;
    v50(v13);
    v15 = v5 + v9[8];
    if (!v8(v15, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
    v16 = _s6StylesV8TimelineVMa(0);
    v12(v15 + *(int *)(v16 + 20), v11);
    v17 = v5 + v9[9];
    if (!v8(v17, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    v18 = _s6StylesV6NoDataVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    v19 = v5 + v9[10];
    if (!v8(v19, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    v20 = _s6StylesV11PlaceholderVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    v21 = v5 + v9[11];
    if (!v8(v21, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    v22 = _s6StylesV6SymbolVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    v23 = v5 + v9[12];
    if (!v8(v23, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    v24 = v7;
    v25 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v23 + *(int *)(v25 + 20), v11);
    v26 = *(int *)(v25 + 28);
    v27 = v24;
    ((void (*)(uint64_t, uint64_t))v50)(v23 + v26, v51);
    v28 = v5 + v9[13];
    if (!v8(v28, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v6);
    v29 = _s6StylesV5EmptyVMa(0);
    v12(v28 + *(int *)(v29 + 20), v11);
    v30 = v5 + v9[14];
    if (!v8(v30, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v6);
    v31 = _s6StylesV5DailyVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    v32 = v5 + v9[15];
    if (!v8(v32, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v32, v6);
    v33 = _s6StylesV9MomentaryVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    v34 = v5 + v9[16];
    if (!v8(v34, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v34, v6);
    v35 = _s6StylesV6HeaderVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    v36 = v5 + v9[17];
    if (!v8(v36, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v36, v6);
    v37 = _s6StylesV11ChartButtonVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
    v38 = v5 + v9[18];
    if (!v8(v38, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v38, v6);
    v39 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v38 + *(int *)(v39 + 20), v11);
    a2 = v52;
  }
  else
  {
    swift_release();
  }
  v40 = a1 + a2[6];
  v41 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v42 = v40 + *(int *)(v41 + 20);
  v43 = sub_2418A9CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  swift_bridgeObjectRelease();
  v44 = v40 + *(int *)(v41 + 28);
  v45 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 1, v45))
  {
    v46 = sub_2418A8130();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v44, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v47 = a1 + a2[7];
  v48 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_241743654(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  unsigned int (*v96)(char *, uint64_t, int *);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, _QWORD, uint64_t, int *);
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  void (*v138)(char *, char *);
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v142 = a2;
  v143 = a3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
    v144 = v11;
    v140 = a1;
    if (v12(v9, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v15 = v14[5];
    v16 = (char *)v8 + v15;
    v17 = (char *)v9 + v15;
    v18 = sub_2418A87B4();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v19(v16, v17, v18);
    *((_BYTE *)v8 + v14[6]) = *((_BYTE *)v9 + v14[6]);
    v20 = v14[7];
    v21 = (char *)v8 + v20;
    v22 = (char *)v9 + v20;
    v23 = sub_2418A84E4();
    v138 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
    v139 = v23;
    v138(v21, v22);
    v24 = v14[8];
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    if (v12((_QWORD *)((char *)v9 + v24), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v25, v26, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v25, 0, 1, v10);
    }
    v28 = _s6StylesV8TimelineVMa(0);
    v19(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v18);
    v29 = v14[9];
    v30 = (char *)v8 + v29;
    v31 = (char *)v9 + v29;
    if (v12((_QWORD *)((char *)v9 + v29), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v30, v31, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v30, 0, 1, v10);
    }
    v33 = _s6StylesV6NoDataVMa(0);
    v19(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v18);
    v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
    v34 = v14[10];
    v35 = (char *)v8 + v34;
    v36 = (char *)v9 + v34;
    if (v12((_QWORD *)((char *)v9 + v34), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v35, v36, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v35, 0, 1, v10);
    }
    v38 = _s6StylesV11PlaceholderVMa(0);
    v19(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v18);
    v39 = v14[11];
    v40 = (char *)v8 + v39;
    v41 = (char *)v9 + v39;
    if (v12((_QWORD *)((char *)v9 + v39), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v40, v41, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v40, 0, 1, v10);
    }
    v43 = _s6StylesV6SymbolVMa(0);
    v19(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v18);
    v44 = v14[12];
    v45 = (char *)v8 + v44;
    v46 = (char *)v9 + v44;
    if (v12((_QWORD *)((char *)v9 + v44), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v45, v46, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v45, 0, 1, v10);
    }
    v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v19(&v45[v48[5]], &v46[v48[5]], v18);
    v45[v48[6]] = v46[v48[6]];
    ((void (*)(char *, char *, uint64_t))v138)(&v45[v48[7]], &v46[v48[7]], v139);
    v49 = v14[13];
    v50 = (char *)v8 + v49;
    v51 = (char *)v9 + v49;
    if (v12((_QWORD *)((char *)v9 + v49), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v50, v51, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v50, 0, 1, v10);
    }
    v53 = _s6StylesV5EmptyVMa(0);
    v19(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v18);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    v54 = v14[14];
    v55 = (char *)v8 + v54;
    v56 = (char *)v9 + v54;
    if (v12((_QWORD *)((char *)v9 + v54), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v55, v56, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v55, 0, 1, v10);
    }
    v58 = _s6StylesV5DailyVMa(0);
    v19(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v18);
    v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
    v59 = v14[15];
    v60 = (char *)v8 + v59;
    v61 = (char *)v9 + v59;
    if (v12((_QWORD *)((char *)v9 + v59), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v60, v61, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v60, 0, 1, v10);
    }
    a2 = v142;
    v63 = _s6StylesV9MomentaryVMa(0);
    v19(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v18);
    v64 = v14[16];
    v65 = (char *)v8 + v64;
    v66 = (char *)v9 + v64;
    if (v12((_QWORD *)((char *)v9 + v64), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v65, v66, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v65, 0, 1, v10);
    }
    v68 = _s6StylesV6HeaderVMa(0);
    v19(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v18);
    v69 = v14[17];
    v70 = (char *)v8 + v69;
    v71 = (char *)v9 + v69;
    if (v12((_QWORD *)((char *)v9 + v69), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v70, v71, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v70, 0, 1, v10);
    }
    v73 = _s6StylesV11ChartButtonVMa(0);
    v19(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v18);
    v74 = v14[18];
    v75 = (char *)v8 + v74;
    v76 = (char *)v9 + v74;
    if (v12((_QWORD *)((char *)v9 + v74), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v75, v76, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v75, 0, 1, v10);
    }
    a1 = v140;
    a3 = v143;
    v78 = _s6StylesV15LogButtonFooterVMa(0);
    v19(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v18);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v79 = *(int *)(a3 + 24);
  v80 = (char *)a1 + v79;
  v81 = (char *)a2 + v79;
  *(_QWORD *)((char *)a1 + v79) = *(_QWORD *)((char *)a2 + v79);
  v82 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v83 = v82[5];
  v84 = &v80[v83];
  v85 = &v81[v83];
  v86 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
  v87 = v82[6];
  v88 = &v80[v87];
  v89 = &v81[v87];
  v90 = *((_QWORD *)v89 + 1);
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *((_QWORD *)v88 + 1) = v90;
  v91 = v82[7];
  v92 = &v80[v91];
  v93 = &v81[v91];
  v94 = (int *)_s5EntryVMa();
  v95 = *((_QWORD *)v94 - 1);
  v96 = *(unsigned int (**)(char *, uint64_t, int *))(v95 + 48);
  swift_bridgeObjectRetain();
  if (v96(v93, 1, v94))
  {
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    v98 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v92, v93, v98);
    v99 = v94[5];
    v100 = &v92[v99];
    v101 = &v93[v99];
    v102 = *((_QWORD *)v101 + 1);
    *(_QWORD *)v100 = *(_QWORD *)v101;
    *((_QWORD *)v100 + 1) = v102;
    v103 = v94[6];
    v104 = &v92[v103];
    v105 = &v93[v103];
    v106 = *((_QWORD *)v105 + 1);
    *(_QWORD *)v104 = *(_QWORD *)v105;
    *((_QWORD *)v104 + 1) = v106;
    v107 = v94[7];
    v108 = &v92[v107];
    v109 = &v93[v107];
    v110 = *((_QWORD *)v109 + 1);
    *(_QWORD *)v108 = *(_QWORD *)v109;
    *((_QWORD *)v108 + 1) = v110;
    v111 = v94[8];
    v112 = &v92[v111];
    v113 = &v93[v111];
    v141 = a1;
    v114 = *((_QWORD *)v113 + 1);
    *(_QWORD *)v112 = *(_QWORD *)v113;
    *((_QWORD *)v112 + 1) = v114;
    *(_QWORD *)&v92[v94[9]] = *(_QWORD *)&v93[v94[9]];
    v115 = *(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1 = v141;
    swift_bridgeObjectRetain();
    v115(v92, 0, 1, v94);
  }
  *(_QWORD *)&v80[v82[8]] = *(_QWORD *)&v81[v82[8]];
  *(_QWORD *)&v80[v82[9]] = *(_QWORD *)&v81[v82[9]];
  v116 = *(int *)(v143 + 28);
  v117 = (char *)a1 + v116;
  v118 = (char *)v142 + v116;
  v119 = sub_2418A8130();
  v120 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v120(v117, v118, v119);
  v121 = v94[5];
  v122 = &v117[v121];
  v123 = &v118[v121];
  v124 = *((_QWORD *)v123 + 1);
  *(_QWORD *)v122 = *(_QWORD *)v123;
  *((_QWORD *)v122 + 1) = v124;
  v125 = v94[6];
  v126 = &v117[v125];
  v127 = &v118[v125];
  v128 = *((_QWORD *)v127 + 1);
  *(_QWORD *)v126 = *(_QWORD *)v127;
  *((_QWORD *)v126 + 1) = v128;
  v129 = v94[7];
  v130 = &v117[v129];
  v131 = &v118[v129];
  v132 = *((_QWORD *)v131 + 1);
  *(_QWORD *)v130 = *(_QWORD *)v131;
  *((_QWORD *)v130 + 1) = v132;
  v133 = v94[8];
  v134 = &v117[v133];
  v135 = &v118[v133];
  v136 = *((_QWORD *)v135 + 1);
  *(_QWORD *)v134 = *(_QWORD *)v135;
  *((_QWORD *)v134 + 1) = v136;
  *(_QWORD *)&v117[v94[9]] = *(_QWORD *)&v118[v94[9]];
  *(_QWORD *)((char *)a1 + *(int *)(v143 + 32)) = *(_QWORD *)((char *)v142 + *(int *)(v143 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2417442B0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int *v95;
  uint64_t v96;
  uint64_t (*v97)(char *, uint64_t, int *);
  int v98;
  uint64_t (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  void (*v114)(char *, _QWORD, uint64_t, int *);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  void (*v145)(char *, char *);
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  unsigned int (*v150)(char *, uint64_t, uint64_t);
  uint64_t v151;
  void (*v152)(char *, char *, uint64_t);
  _QWORD *v153;

  v5 = (_QWORD *)a1;
  if ((_QWORD *)a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60(a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, a2, v8);
    }
    else
    {
      *v5 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (_QWORD *)((char *)v5 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)v5 + v9, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      v148 = v5;
      v149 = v14;
      if (v150((char *)v11, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 16))(v10, v11, v13);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
      v16 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v17 = v16[5];
      v18 = (char *)v10 + v17;
      v19 = (char *)v11 + v17;
      v20 = sub_2418A87B4();
      v152 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v152(v18, v19, v20);
      *((_BYTE *)v10 + v16[6]) = *((_BYTE *)v11 + v16[6]);
      v21 = v16[7];
      v22 = (char *)v10 + v21;
      v23 = (char *)v11 + v21;
      v24 = sub_2418A84E4();
      v145 = *(void (**)(char *, char *))(*(_QWORD *)(v24 - 8) + 16);
      v146 = v24;
      v145(v22, v23);
      v25 = v16[8];
      v26 = (char *)v10 + v25;
      v27 = (char *)v11 + v25;
      v147 = v20;
      if (v150((char *)v11 + v25, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v26, v27, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v26, 0, 1, v13);
      }
      v29 = _s6StylesV8TimelineVMa(0);
      v152(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v20);
      v30 = v16[9];
      v31 = (char *)v10 + v30;
      v32 = (char *)v11 + v30;
      v33 = a3;
      if (v150((char *)v11 + v30, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v31, v32, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v31, 0, 1, v13);
      }
      v35 = _s6StylesV6NoDataVMa(0);
      v152(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v20);
      v31[*(int *)(v35 + 24)] = v32[*(int *)(v35 + 24)];
      v36 = v16[10];
      v37 = (char *)v10 + v36;
      v38 = (char *)v11 + v36;
      if (v150((char *)v11 + v36, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v37, v38, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v37, 0, 1, v13);
      }
      v40 = _s6StylesV11PlaceholderVMa(0);
      v152(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v20);
      v41 = v16[11];
      v42 = (char *)v10 + v41;
      v43 = (char *)v11 + v41;
      if (v150((char *)v11 + v41, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v42, v43, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v42, 0, 1, v13);
      }
      v45 = _s6StylesV6SymbolVMa(0);
      v152(&v42[*(int *)(v45 + 20)], &v43[*(int *)(v45 + 20)], v20);
      v46 = v16[12];
      v47 = (char *)v10 + v46;
      v48 = (char *)v11 + v46;
      if (v150((char *)v11 + v46, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v47, v48, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v47, 0, 1, v13);
      }
      v50 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v152(&v47[v50[5]], &v48[v50[5]], v20);
      v47[v50[6]] = v48[v50[6]];
      ((void (*)(char *, char *, uint64_t))v145)(&v47[v50[7]], &v48[v50[7]], v146);
      v51 = v16[13];
      v52 = (char *)v10 + v51;
      v53 = (char *)v11 + v51;
      if (v150((char *)v11 + v51, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v52, v53, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v52, 0, 1, v13);
      }
      v55 = _s6StylesV5EmptyVMa(0);
      v152(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v20);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      v56 = v16[14];
      v57 = (char *)v10 + v56;
      v58 = (char *)v11 + v56;
      if (v150((char *)v11 + v56, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v57, v58, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v57, 0, 1, v13);
      }
      v60 = _s6StylesV5DailyVMa(0);
      v152(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v20);
      v57[*(int *)(v60 + 24)] = v58[*(int *)(v60 + 24)];
      v61 = v16[15];
      v62 = (char *)v10 + v61;
      v63 = (char *)v11 + v61;
      if (v150((char *)v11 + v61, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v62, v63, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v62, 0, 1, v13);
      }
      a3 = v33;
      v65 = _s6StylesV9MomentaryVMa(0);
      v152(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v20);
      v66 = v16[16];
      v67 = (char *)v10 + v66;
      v68 = (char *)v11 + v66;
      if (v150((char *)v11 + v66, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v67, v68, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v67, 0, 1, v13);
      }
      v70 = _s6StylesV6HeaderVMa(0);
      v152(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v20);
      v71 = v16[17];
      v72 = (char *)v10 + v71;
      v73 = (char *)v11 + v71;
      if (v150((char *)v11 + v71, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v72, v73, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v72, 0, 1, v13);
      }
      v75 = _s6StylesV11ChartButtonVMa(0);
      v152(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v20);
      v76 = v16[18];
      v77 = (char *)v10 + v76;
      v78 = (char *)v11 + v76;
      if (v150(v78, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v77, v78, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v77, 0, 1, v13);
      }
      v5 = v148;
      v80 = _s6StylesV15LogButtonFooterVMa(0);
      v152(&v77[*(int *)(v80 + 20)], &v78[*(int *)(v80 + 20)], v147);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v151 = a3;
  v153 = a2;
  v81 = *(int *)(a3 + 24);
  v82 = (char *)v5 + v81;
  v83 = (_QWORD *)((char *)a2 + v81);
  *(_QWORD *)((char *)v5 + v81) = *v83;
  v84 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v85 = v84[5];
  v86 = &v82[v85];
  v87 = (char *)v83 + v85;
  v88 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 24))(v86, v87, v88);
  v89 = v84[6];
  v90 = &v82[v89];
  v91 = (_QWORD *)((char *)v83 + v89);
  *(_QWORD *)v90 = *v91;
  *((_QWORD *)v90 + 1) = v91[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v92 = v84[7];
  v93 = &v82[v92];
  v94 = (char *)v83 + v92;
  v95 = (int *)_s5EntryVMa();
  v96 = *((_QWORD *)v95 - 1);
  v97 = *(uint64_t (**)(char *, uint64_t, int *))(v96 + 48);
  LODWORD(v86) = v97(v93, 1, v95);
  v98 = v97(v94, 1, v95);
  if ((_DWORD)v86)
  {
    if (!v98)
    {
      v101 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v93, v94, v101);
      v102 = v95[5];
      v103 = &v93[v102];
      v104 = &v94[v102];
      *(_QWORD *)v103 = *(_QWORD *)v104;
      *((_QWORD *)v103 + 1) = *((_QWORD *)v104 + 1);
      v105 = v95[6];
      v106 = &v93[v105];
      v107 = &v94[v105];
      *(_QWORD *)v106 = *(_QWORD *)v107;
      *((_QWORD *)v106 + 1) = *((_QWORD *)v107 + 1);
      v108 = v95[7];
      v109 = &v93[v108];
      v110 = &v94[v108];
      *(_QWORD *)v109 = *(_QWORD *)v110;
      *((_QWORD *)v109 + 1) = *((_QWORD *)v110 + 1);
      v111 = v95[8];
      v112 = &v93[v111];
      v113 = &v94[v111];
      *(_QWORD *)v112 = *(_QWORD *)v113;
      *((_QWORD *)v112 + 1) = *((_QWORD *)v113 + 1);
      *(_QWORD *)&v93[v95[9]] = *(_QWORD *)&v94[v95[9]];
      v114 = *(void (**)(char *, _QWORD, uint64_t, int *))(v96 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v114(v93, 0, 1, v95);
      goto LABEL_53;
    }
    v99 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v98)
    {
      v115 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 24))(v93, v94, v115);
      v116 = v95[5];
      v117 = &v93[v116];
      v118 = &v94[v116];
      *(_QWORD *)v117 = *(_QWORD *)v118;
      *((_QWORD *)v117 + 1) = *((_QWORD *)v118 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v119 = v95[6];
      v120 = &v93[v119];
      v121 = &v94[v119];
      *(_QWORD *)v120 = *(_QWORD *)v121;
      *((_QWORD *)v120 + 1) = *((_QWORD *)v121 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v122 = v95[7];
      v123 = &v93[v122];
      v124 = &v94[v122];
      *(_QWORD *)v123 = *(_QWORD *)v124;
      *((_QWORD *)v123 + 1) = *((_QWORD *)v124 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v125 = v95[8];
      v126 = &v93[v125];
      v127 = &v94[v125];
      *(_QWORD *)v126 = *(_QWORD *)v127;
      *((_QWORD *)v126 + 1) = *((_QWORD *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v93[v95[9]] = *(_QWORD *)&v94[v95[9]];
      goto LABEL_53;
    }
    sub_24172588C((uint64_t)v93, (uint64_t (*)(_QWORD))_s5EntryVMa);
    v99 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v99);
  memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
LABEL_53:
  *(_QWORD *)&v82[v84[8]] = *(_QWORD *)((char *)v83 + v84[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v82[v84[9]] = *(_QWORD *)((char *)v83 + v84[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v128 = *(int *)(v151 + 28);
  v129 = (char *)v5 + v128;
  v130 = (char *)v153 + v128;
  v131 = sub_2418A8130();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 24))(v129, v130, v131);
  v132 = v95[5];
  v133 = &v129[v132];
  v134 = &v130[v132];
  *(_QWORD *)v133 = *(_QWORD *)v134;
  *((_QWORD *)v133 + 1) = *((_QWORD *)v134 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v135 = v95[6];
  v136 = &v129[v135];
  v137 = &v130[v135];
  *(_QWORD *)v136 = *(_QWORD *)v137;
  *((_QWORD *)v136 + 1) = *((_QWORD *)v137 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v138 = v95[7];
  v139 = &v129[v138];
  v140 = &v130[v138];
  *(_QWORD *)v139 = *(_QWORD *)v140;
  *((_QWORD *)v139 + 1) = *((_QWORD *)v140 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v141 = v95[8];
  v142 = &v129[v141];
  v143 = &v130[v141];
  *(_QWORD *)v142 = *(_QWORD *)v143;
  *((_QWORD *)v142 + 1) = *((_QWORD *)v143 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v129[v95[9]] = *(_QWORD *)&v130[v95[9]];
  *(_QWORD *)((char *)v5 + *(int *)(v151 + 32)) = *(_QWORD *)((char *)v153 + *(int *)(v151 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

char *sub_241745184(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  void (*v103)(char *, char *);
  uint64_t v104;
  int *v105;
  char *v106;
  char *v107;
  uint64_t v108;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2418A8EB0();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v108 = v15;
    v106 = a2;
    v107 = a1;
    if (v16(v11, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v19 = v18[5];
    v20 = &v10[v19];
    v21 = &v11[v19];
    v22 = sub_2418A87B4();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
    v23(v20, v21, v22);
    v10[v18[6]] = v11[v18[6]];
    v24 = v18[7];
    v25 = &v10[v24];
    v26 = &v11[v24];
    v27 = sub_2418A84E4();
    v103 = *(void (**)(char *, char *))(*(_QWORD *)(v27 - 8) + 32);
    v104 = v27;
    v103(v25, v26);
    v28 = v18[8];
    v29 = &v10[v28];
    v30 = &v11[v28];
    if (v16(&v11[v28], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v29, v30, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v29, 0, 1, v14);
    }
    v32 = _s6StylesV8TimelineVMa(0);
    v23(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v22);
    v33 = v18[9];
    v34 = &v10[v33];
    v35 = &v11[v33];
    v105 = a3;
    if (v16(&v11[v33], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v34, v35, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v34, 0, 1, v14);
    }
    v37 = _s6StylesV6NoDataVMa(0);
    v23(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v22);
    v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
    v38 = v18[10];
    v39 = &v10[v38];
    v40 = &v11[v38];
    if (v16(&v11[v38], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v39, v40, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v39, 0, 1, v14);
    }
    v42 = _s6StylesV11PlaceholderVMa(0);
    v23(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v22);
    v43 = v18[11];
    v44 = &v10[v43];
    v45 = &v11[v43];
    if (v16(&v11[v43], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v44, v45, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v44, 0, 1, v14);
    }
    v47 = _s6StylesV6SymbolVMa(0);
    v23(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v22);
    v48 = v18[12];
    v49 = &v10[v48];
    v50 = &v11[v48];
    if (v16(&v11[v48], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v49, v50, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v49, 0, 1, v14);
    }
    v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v23(&v49[v52[5]], &v50[v52[5]], v22);
    v49[v52[6]] = v50[v52[6]];
    ((void (*)(char *, char *, uint64_t))v103)(&v49[v52[7]], &v50[v52[7]], v104);
    v53 = v18[13];
    v54 = &v10[v53];
    v55 = &v11[v53];
    if (v16(&v11[v53], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v54, v55, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v54, 0, 1, v14);
    }
    v57 = _s6StylesV5EmptyVMa(0);
    v23(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v22);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    v58 = v18[14];
    v59 = &v10[v58];
    v60 = &v11[v58];
    if (v16(&v11[v58], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v59, v60, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v59, 0, 1, v14);
    }
    v62 = _s6StylesV5DailyVMa(0);
    v23(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v22);
    v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
    v63 = v18[15];
    v64 = &v10[v63];
    v65 = &v11[v63];
    if (v16(&v11[v63], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v64, v65, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v64, 0, 1, v14);
    }
    a3 = v105;
    v67 = _s6StylesV9MomentaryVMa(0);
    v23(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v22);
    v68 = v18[16];
    v69 = &v10[v68];
    v70 = &v11[v68];
    if (v16(&v11[v68], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v69, v70, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v69, 0, 1, v14);
    }
    v72 = _s6StylesV6HeaderVMa(0);
    v23(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v22);
    v73 = v18[17];
    v74 = &v10[v73];
    v75 = &v11[v73];
    if (v16(&v11[v73], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v74, v75, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v74, 0, 1, v14);
    }
    v77 = _s6StylesV11ChartButtonVMa(0);
    v23(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v22);
    v78 = v18[18];
    v79 = &v10[v78];
    v80 = &v11[v78];
    if (v16(&v11[v78], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v79, v80, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v79, 0, 1, v14);
    }
    a2 = v106;
    v82 = _s6StylesV15LogButtonFooterVMa(0);
    v23(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v22);
    swift_storeEnumTagMultiPayload();
    a1 = v107;
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v83 = a3[6];
  v84 = &a1[v83];
  v85 = &a2[v83];
  *(_QWORD *)&a1[v83] = *(_QWORD *)&a2[v83];
  v86 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v87 = v86[5];
  v88 = &v84[v87];
  v89 = &v85[v87];
  v90 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
  *(_OWORD *)&v84[v86[6]] = *(_OWORD *)&v85[v86[6]];
  v91 = v86[7];
  v92 = &v84[v91];
  v93 = &v85[v91];
  v94 = (int *)_s5EntryVMa();
  v95 = *((_QWORD *)v94 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v95 + 48))(v93, 1, v94))
  {
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
  }
  else
  {
    v97 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v92, v93, v97);
    *(_OWORD *)&v92[v94[5]] = *(_OWORD *)&v93[v94[5]];
    *(_OWORD *)&v92[v94[6]] = *(_OWORD *)&v93[v94[6]];
    *(_OWORD *)&v92[v94[7]] = *(_OWORD *)&v93[v94[7]];
    *(_OWORD *)&v92[v94[8]] = *(_OWORD *)&v93[v94[8]];
    *(_QWORD *)&v92[v94[9]] = *(_QWORD *)&v93[v94[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56))(v92, 0, 1, v94);
  }
  *(_QWORD *)&v84[v86[8]] = *(_QWORD *)&v85[v86[8]];
  *(_QWORD *)&v84[v86[9]] = *(_QWORD *)&v85[v86[9]];
  v98 = a3[7];
  v99 = &a1[v98];
  v100 = &a2[v98];
  v101 = sub_2418A8130();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
  *(_OWORD *)&v99[v94[5]] = *(_OWORD *)&v100[v94[5]];
  *(_OWORD *)&v99[v94[6]] = *(_OWORD *)&v100[v94[6]];
  *(_OWORD *)&v99[v94[7]] = *(_OWORD *)&v100[v94[7]];
  *(_OWORD *)&v99[v94[8]] = *(_OWORD *)&v100[v94[8]];
  *(_QWORD *)&v99[v94[9]] = *(_QWORD *)&v100[v94[9]];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return a1;
}

char *sub_241745D34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  int *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  int *v102;
  uint64_t v103;
  uint64_t (*v104)(char *, uint64_t, int *);
  int v105;
  uint64_t (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  void (*v155)(char *, char *);
  uint64_t v156;
  unsigned int (*v157)(char *, uint64_t, uint64_t);
  uint64_t v158;
  void (*v160)(char *, char *);
  uint64_t v161;
  char *v162;

  v3 = a3;
  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, v7);
    v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    v11 = *(int *)(v3 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)&a1[v11], &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v14);
    v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2418A8EB0();
      v18 = *(_QWORD *)(v17 - 8);
      v157 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      v158 = v18;
      if (v157(v13, 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v13, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
      }
      v20 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v21 = v20[5];
      v22 = &v12[v21];
      v23 = &v13[v21];
      v24 = sub_2418A87B4();
      v160 = *(void (**)(char *, char *))(*(_QWORD *)(v24 - 8) + 32);
      v161 = v24;
      v160(v22, v23);
      v12[v20[6]] = v13[v20[6]];
      v25 = v20[7];
      v26 = &v12[v25];
      v27 = &v13[v25];
      v28 = sub_2418A84E4();
      v155 = *(void (**)(char *, char *))(*(_QWORD *)(v28 - 8) + 32);
      v156 = v28;
      v155(v26, v27);
      v29 = v20[8];
      v30 = &v12[v29];
      v31 = &v13[v29];
      v32 = v157;
      if (v157(&v13[v29], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v30, v31, v17);
        v32 = v157;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v30, 0, 1, v17);
      }
      v34 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v160)(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v161);
      v35 = v20[9];
      v36 = &v12[v35];
      v37 = &v13[v35];
      if (v32(&v13[v35], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v36, v37, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v36, 0, 1, v17);
      }
      v39 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v160)(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v161);
      v36[*(int *)(v39 + 24)] = v37[*(int *)(v39 + 24)];
      v40 = v20[10];
      v41 = &v12[v40];
      v42 = &v13[v40];
      if (v32(&v13[v40], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v41, v42, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v41, 0, 1, v17);
      }
      v44 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v160)(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v161);
      v45 = v20[11];
      v46 = &v12[v45];
      v47 = &v13[v45];
      if (v32(&v13[v45], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v46, v47, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v46, 0, 1, v17);
      }
      v49 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v160)(&v46[*(int *)(v49 + 20)], &v47[*(int *)(v49 + 20)], v161);
      v50 = v20[12];
      v51 = &v12[v50];
      v52 = &v13[v50];
      if (v32(&v13[v50], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v51, v52, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v51, 0, 1, v17);
      }
      v54 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v160)(&v51[v54[5]], &v52[v54[5]], v161);
      v51[v54[6]] = v52[v54[6]];
      ((void (*)(char *, char *, uint64_t))v155)(&v51[v54[7]], &v52[v54[7]], v156);
      v55 = v20[13];
      v56 = &v12[v55];
      v57 = &v13[v55];
      if (v32(&v13[v55], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v56, v57, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v56, 0, 1, v17);
      }
      v59 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v160)(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v161);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      v60 = v20[14];
      v61 = &v12[v60];
      v62 = &v13[v60];
      if (v32(&v13[v60], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v61, v62, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v61, 0, 1, v17);
      }
      v64 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v160)(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v161);
      v61[*(int *)(v64 + 24)] = v62[*(int *)(v64 + 24)];
      v65 = v20[15];
      v66 = &v12[v65];
      v67 = &v13[v65];
      if (v32(&v13[v65], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v66, v67, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v66, 0, 1, v17);
      }
      v3 = a3;
      v69 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v160)(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v161);
      v70 = v20[16];
      v71 = &v12[v70];
      v72 = &v13[v70];
      if (v32(&v13[v70], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v71, v72, v17);
        v32 = v157;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v71, 0, 1, v17);
      }
      v74 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v160)(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v161);
      v75 = v20[17];
      v76 = &v12[v75];
      v77 = &v13[v75];
      if (v32(&v13[v75], 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v76, v77, v17);
        v32 = v157;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v76, 0, 1, v17);
      }
      v79 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v160)(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v161);
      v80 = v20[18];
      v81 = &v12[v80];
      v82 = &v13[v80];
      if (v32(v82, 1, v17))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v81, v82, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v81, 0, 1, v17);
      }
      v84 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v160)(&v81[*(int *)(v84 + 20)], &v82[*(int *)(v84 + 20)], v161);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v85 = *(int *)(v3 + 24);
  v162 = a1;
  v86 = &a1[v85];
  v87 = a2;
  v88 = &a2[v85];
  *(_QWORD *)v86 = *(_QWORD *)&a2[v85];
  v89 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v90 = v89[5];
  v91 = &v86[v90];
  v92 = &v88[v90];
  v93 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 40))(v91, v92, v93);
  v94 = v89[6];
  v95 = &v86[v94];
  v96 = &v88[v94];
  v98 = *(_QWORD *)v96;
  v97 = *((_QWORD *)v96 + 1);
  *(_QWORD *)v95 = v98;
  *((_QWORD *)v95 + 1) = v97;
  swift_bridgeObjectRelease();
  v99 = v89[7];
  v100 = &v86[v99];
  v101 = &v88[v99];
  v102 = (int *)_s5EntryVMa();
  v103 = *((_QWORD *)v102 - 1);
  v104 = *(uint64_t (**)(char *, uint64_t, int *))(v103 + 48);
  LODWORD(v91) = v104(v100, 1, v102);
  v105 = v104(v101, 1, v102);
  if ((_DWORD)v91)
  {
    if (!v105)
    {
      v108 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v100, v101, v108);
      *(_OWORD *)&v100[v102[5]] = *(_OWORD *)&v101[v102[5]];
      *(_OWORD *)&v100[v102[6]] = *(_OWORD *)&v101[v102[6]];
      *(_OWORD *)&v100[v102[7]] = *(_OWORD *)&v101[v102[7]];
      *(_OWORD *)&v100[v102[8]] = *(_OWORD *)&v101[v102[8]];
      *(_QWORD *)&v100[v102[9]] = *(_QWORD *)&v101[v102[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56))(v100, 0, 1, v102);
      goto LABEL_52;
    }
    v106 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v105)
    {
      v109 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 40))(v100, v101, v109);
      v110 = v102[5];
      v111 = &v100[v110];
      v112 = &v101[v110];
      v114 = *(_QWORD *)v112;
      v113 = *((_QWORD *)v112 + 1);
      *(_QWORD *)v111 = v114;
      *((_QWORD *)v111 + 1) = v113;
      swift_bridgeObjectRelease();
      v115 = v102[6];
      v116 = &v100[v115];
      v117 = &v101[v115];
      v119 = *(_QWORD *)v117;
      v118 = *((_QWORD *)v117 + 1);
      *(_QWORD *)v116 = v119;
      *((_QWORD *)v116 + 1) = v118;
      swift_bridgeObjectRelease();
      v120 = v102[7];
      v121 = &v100[v120];
      v122 = &v101[v120];
      v124 = *(_QWORD *)v122;
      v123 = *((_QWORD *)v122 + 1);
      *(_QWORD *)v121 = v124;
      *((_QWORD *)v121 + 1) = v123;
      swift_bridgeObjectRelease();
      v125 = v102[8];
      v126 = &v100[v125];
      v127 = &v101[v125];
      v129 = *(_QWORD *)v127;
      v128 = *((_QWORD *)v127 + 1);
      *(_QWORD *)v126 = v129;
      *((_QWORD *)v126 + 1) = v128;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v100[v102[9]] = *(_QWORD *)&v101[v102[9]];
      goto LABEL_52;
    }
    sub_24172588C((uint64_t)v100, (uint64_t (*)(_QWORD))_s5EntryVMa);
    v106 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v106);
  memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
LABEL_52:
  *(_QWORD *)&v86[v89[8]] = *(_QWORD *)&v88[v89[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v86[v89[9]] = *(_QWORD *)&v88[v89[9]];
  swift_bridgeObjectRelease();
  v130 = *(int *)(a3 + 28);
  v131 = &v162[v130];
  v132 = &v87[v130];
  v133 = sub_2418A8130();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 40))(v131, v132, v133);
  v134 = v102[5];
  v135 = &v131[v134];
  v136 = &v132[v134];
  v138 = *(_QWORD *)v136;
  v137 = *((_QWORD *)v136 + 1);
  *(_QWORD *)v135 = v138;
  *((_QWORD *)v135 + 1) = v137;
  swift_bridgeObjectRelease();
  v139 = v102[6];
  v140 = &v131[v139];
  v141 = &v132[v139];
  v143 = *(_QWORD *)v141;
  v142 = *((_QWORD *)v141 + 1);
  *(_QWORD *)v140 = v143;
  *((_QWORD *)v140 + 1) = v142;
  swift_bridgeObjectRelease();
  v144 = v102[7];
  v145 = &v131[v144];
  v146 = &v132[v144];
  v148 = *(_QWORD *)v146;
  v147 = *((_QWORD *)v146 + 1);
  *(_QWORD *)v145 = v148;
  *((_QWORD *)v145 + 1) = v147;
  swift_bridgeObjectRelease();
  v149 = v102[8];
  v150 = &v131[v149];
  v151 = &v132[v149];
  v153 = *(_QWORD *)v151;
  v152 = *((_QWORD *)v151 + 1);
  *(_QWORD *)v150 = v153;
  *((_QWORD *)v150 + 1) = v152;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v131[v102[9]] = *(_QWORD *)&v132[v102[9]];
  *(_QWORD *)&v162[*(int *)(a3 + 32)] = *(_QWORD *)&v87[*(int *)(a3 + 32)];
  swift_bridgeObjectRelease();
  return v162;
}

uint64_t sub_241746A68()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241746A74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_9;
  }
  v15 = _s5EntryVMa();
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[8]);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t sub_241746B94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241746BA0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_9;
  }
  result = _s5EntryVMa();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[7];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
  return result;
}

uint64_t _s16EntryDayDataViewVMa()
{
  uint64_t result;

  result = qword_25714CC48;
  if (!qword_25714CC48)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241746CF8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for StateOfMindTimeline.DaySummary();
      if (v2 <= 0x3F)
      {
        _s5EntryVMa();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_241746DF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241746E00(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_241802714(0, a1[2] + 1, 1, a1);
  v7 = a1[2];
  v6 = a1[3];
  if (v7 >= v6 >> 1)
    a1 = sub_241802714((_QWORD *)(v6 > 1), v7 + 1, 1, a1);
  a1[2] = v7 + 1;
  v8 = &a1[2 * v7];
  v8[4] = a2;
  v8[5] = a3;
  v9 = swift_bridgeObjectRetain();
  sub_2417739BC(v9);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24174B764(0, &qword_25714CCB0);
  sub_24174B5F0();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241746F9C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_241802714(0, a1[2] + 1, 1, a1);
  v7 = a1[2];
  v6 = a1[3];
  if (v7 >= v6 >> 1)
    a1 = sub_241802714((_QWORD *)(v6 > 1), v7 + 1, 1, a1);
  a1[2] = v7 + 1;
  v8 = &a1[2 * v7];
  v8[4] = a2;
  v8[5] = a3;
  v9 = swift_bridgeObjectRetain();
  sub_2417739BC(v9);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241747128(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_241802714(0, a1[2] + 1, 1, a1);
  v7 = a1[2];
  v6 = a1[3];
  if (v7 >= v6 >> 1)
    a1 = sub_241802714((_QWORD *)(v6 > 1), v7 + 1, 1, a1);
  a1[2] = v7 + 1;
  v8 = &a1[2 * v7];
  v8[4] = a2;
  v8[5] = a3;
  v9 = swift_bridgeObjectRetain();
  sub_2417739BC(v9);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24174B764(0, (unint64_t *)&qword_25714CD98);
  sub_24174B7AC();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2417472BC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_241802714(0, a1[2] + 1, 1, a1);
  v7 = a1[2];
  v6 = a1[3];
  if (v7 >= v6 >> 1)
    a1 = sub_241802714((_QWORD *)(v6 > 1), v7 + 1, 1, a1);
  a1[2] = v7 + 1;
  v8 = &a1[2 * v7];
  v8[4] = a2;
  v8[5] = a3;
  v9 = swift_bridgeObjectRetain();
  sub_2417739BC(v9);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241728808();
  sub_24174B6B4();
  sub_2418A9450();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_241747438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  void *v14;
  uint64_t v15;

  v1 = v0;
  v2 = _s6StylesV5DailyVMa(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s16EntryDayDataViewVMa();
  sub_241860D60((uint64_t)v9);
  sub_2417289A8((uint64_t)&v9[*(int *)(v6 + 56)], (uint64_t)v5, _s6StylesV5DailyVMa);
  sub_24172588C((uint64_t)v9, type metadata accessor for StateOfMindTimeline.Styles);
  v11 = *(int *)(v10 + 24);
  v12 = type metadata accessor for StateOfMindTimeline.DaySummary();
  if ((v5[*(int *)(v2 + 24)] & 1) != 0 || *(_QWORD *)(*(_QWORD *)(v1 + v11 + *(int *)(v12 + 32)) + 16) != 1)
    return (id)sub_24172588C((uint64_t)v5, _s6StylesV5DailyVMa);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v14 = result;
    objc_msgSend(result, sel_isiPad);

    return (id)sub_24172588C((uint64_t)v5, _s6StylesV5DailyVMa);
  }
  __break(1u);
  return result;
}

uint64_t sub_24174760C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = sub_2418A8F7C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AF7C(0, (unint64_t *)&qword_25714CC90, &qword_25714CC98, (uint64_t (*)(uint64_t))sub_24174ABCC, &qword_25714CD08);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v19 - v9;
  sub_24174B110();
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = sub_2418A8C58();
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 0;
  sub_24174B388(0, &qword_25714CD18, &qword_25714CC98, (uint64_t (*)(uint64_t))sub_24174ABCC);
  sub_241747800(v1, (uint64_t)&v10[*(int *)(v15 + 44)]);
  v16 = sub_2418A9960();
  sub_24185E274(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, INFINITY, 0, v16, v17);
  sub_24174B18C((uint64_t)v10, (unint64_t *)&qword_25714CC90, &qword_25714CC98, (uint64_t (*)(uint64_t))sub_24174ABCC, &qword_25714CD08);
  sub_2418A8F64();
  sub_24174B1C8();
  sub_2418A942C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return sub_24172588C((uint64_t)v14, (uint64_t (*)(_QWORD))sub_24174B110);
}

uint64_t sub_241747800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  __int128 v90;
  uint64_t v91;
  unsigned __int8 v92;
  uint64_t v93;
  unsigned __int8 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  __int128 v104;

  v79 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8];
  sub_24174B090(0, &qword_25714CD00, (uint64_t (*)(uint64_t, _QWORD, uint64_t))MEMORY[0x24BDEF3B8]);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v78 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v85 = (uint64_t)&v70 - v9;
  sub_24174AEF4(0, &qword_25714CCD8, v3);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v77 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v84 = (uint64_t)&v70 - v15;
  sub_24174AE94(0, &qword_25714CCB8, (uint64_t (*)(uint64_t))sub_24174AD38, MEMORY[0x24BDF5158], v3);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v83 = (uint64_t)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v82 = (uint64_t)&v70 - v21;
  v22 = _s6StylesV5DailyVMa(0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v30 = (char *)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v31);
  v33 = (char *)&v70 - v32;
  sub_24174ACBC();
  v36 = MEMORY[0x24BDAC7A8](v34, v35);
  v81 = (uint64_t)&v70 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v36, v38);
  v41 = (char *)&v70 - v40;
  MEMORY[0x24BDAC7A8](v39, v42);
  v80 = (uint64_t)&v70 - v43;
  v44 = (int *)_s16EntryDayDataViewVMa();
  v45 = a1 + v44[7];
  v46 = *(double *)(v45 + *(int *)(_s5EntryVMa() + 36));
  sub_241860D60((uint64_t)v33);
  sub_2417289A8((uint64_t)&v33[*(int *)(v26 + 56)], (uint64_t)v25, _s6StylesV5DailyVMa);
  sub_24172588C((uint64_t)v33, type metadata accessor for StateOfMindTimeline.Styles);
  v47 = a1 + v44[6];
  if (v25[*(int *)(v22 + 24)] & 1 | (*(_QWORD *)(*(_QWORD *)(v47
                                                            + *(int *)(type metadata accessor for StateOfMindTimeline.DaySummary()
                                                                     + 32))
                                                + 16) < 2uLL))
    v48 = 3;
  else
    v48 = 4;
  sub_24172588C((uint64_t)v25, _s6StylesV5DailyVMa);
  LOBYTE(v91) = v48;
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)((unsigned __int8 *)&v91, v46);
  v50 = v97;
  v49 = v98;
  v51 = v99;
  sub_241747438();
  sub_241747438();
  sub_2418A9960();
  sub_2418A861C();
  v97 = v50;
  v98 = v49;
  v99 = v51;
  v100 = v86;
  v101 = v87;
  v102 = v88;
  v103 = v89;
  v104 = v90;
  sub_241746E00(*(_QWORD **)(a1 + v44[8]), 0x7A696C6175736956, 0xED00006E6F697461);
  swift_bridgeObjectRelease();
  v52 = v80;
  sub_241731B4C((uint64_t)v41, v80, (uint64_t (*)(_QWORD))sub_24174ACBC);
  sub_241860D60((uint64_t)v30);
  sub_24172588C((uint64_t)v30, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9960();
  sub_2418A861C();
  v76 = v91;
  v75 = v92;
  v74 = v93;
  v73 = v94;
  v72 = v95;
  v71 = v96;
  v53 = v82;
  sub_241747F68(v82);
  v54 = v84;
  sub_241748A3C(v84);
  v55 = v85;
  sub_2417495F4();
  v56 = v81;
  sub_2417289A8(v52, v81, (uint64_t (*)(_QWORD))sub_24174ACBC);
  v57 = v83;
  v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8];
  sub_24174B298(v53, v83, &qword_25714CCB8, (uint64_t (*)(uint64_t))sub_24174AD38, MEMORY[0x24BDF5158], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  v59 = v77;
  sub_24174B2EC(v54, v77, (uint64_t)&qword_25714CCD8, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_24174AEF4);
  v60 = v78;
  sub_24174B2EC(v55, v78, (uint64_t)&qword_25714CD00, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_24174B090);
  v61 = v56;
  v62 = v79;
  sub_2417289A8(v61, v79, (uint64_t (*)(_QWORD))sub_24174ACBC);
  sub_24174ABCC();
  v64 = v63;
  v65 = v62 + *(int *)(v63 + 48);
  *(_QWORD *)v65 = 0;
  *(_BYTE *)(v65 + 8) = 1;
  *(_QWORD *)(v65 + 16) = v76;
  *(_BYTE *)(v65 + 24) = v75;
  *(_QWORD *)(v65 + 32) = v74;
  *(_BYTE *)(v65 + 40) = v73;
  v66 = v71;
  *(_QWORD *)(v65 + 48) = v72;
  *(_QWORD *)(v65 + 56) = v66;
  sub_24174B298(v57, v62 + *(int *)(v63 + 64), &qword_25714CCB8, (uint64_t (*)(uint64_t))sub_24174AD38, MEMORY[0x24BDF5158], v58);
  sub_24174B2EC(v59, v62 + *(int *)(v64 + 80), (uint64_t)&qword_25714CCD8, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_24174AEF4);
  sub_24174B2EC(v60, v62 + *(int *)(v64 + 96), (uint64_t)&qword_25714CD00, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_24174B090);
  sub_24174B340(v85, (uint64_t)&qword_25714CD00, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_24174B090);
  sub_24174B340(v84, (uint64_t)&qword_25714CCD8, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_24174AEF4);
  v67 = MEMORY[0x24BDF5158];
  v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8];
  sub_24174B4CC(v82, &qword_25714CCB8, (uint64_t (*)(uint64_t))sub_24174AD38, MEMORY[0x24BDF5158], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  sub_24172588C(v80, (uint64_t (*)(_QWORD))sub_24174ACBC);
  sub_24174B340(v60, (uint64_t)&qword_25714CD00, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_24174B090);
  sub_24174B340(v59, (uint64_t)&qword_25714CCD8, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_24174AEF4);
  sub_24174B4CC(v83, &qword_25714CCB8, (uint64_t (*)(uint64_t))sub_24174AD38, v67, v68);
  return sub_24172588C(v81, (uint64_t (*)(_QWORD))sub_24174ACBC);
}

uint64_t sub_241747F68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void **v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unsigned int *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t);
  uint64_t KeyPath;
  uint64_t v99;
  uint64_t (*v100)(uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  unint64_t v145;

  v2 = v1;
  v142 = a1;
  v3 = sub_2418A88D4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEDB60];
  MEMORY[0x24BDAC7A8](v3, v5);
  v139 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A99B4();
  v137 = *(_QWORD *)(v7 - 8);
  v138 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v136 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2418A84E4();
  v134 = *(_QWORD *)(v10 - 8);
  v135 = v10;
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v132 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v143 = (uint64_t)&v113 - v15;
  v126 = sub_2418A91E0();
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x24BDAC7A8](v126, v16);
  v124 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, &qword_25714CD68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v113 - v20;
  v123 = sub_2418A9228();
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123, v22);
  v24 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AE94(0, (unint64_t *)&qword_25714C418, v4, MEMORY[0x24BDF1FA8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v127 = v29;
  MEMORY[0x24BDAC7A8](v29, v30);
  v129 = (char *)&v113 - v31;
  sub_24174ADF8();
  v128 = v32;
  MEMORY[0x24BDAC7A8](v32, v33);
  v131 = (uint64_t)&v113 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AD9C();
  v133 = v35;
  MEMORY[0x24BDAC7A8](v35, v36);
  v130 = (uint64_t)&v113 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AD38();
  v39 = v38;
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v140 = (char *)&v113 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41, v43);
  v45 = (char *)&v113 - v44;
  sub_24174AE94(0, &qword_25714CD78, v46, MEMORY[0x24BDF5158], MEMORY[0x24BDEF380]);
  v48 = v47;
  MEMORY[0x24BDAC7A8](v47, v49);
  v51 = (char *)&v113 - v50;
  v52 = _s16EntryDayDataViewVMa();
  v53 = v2;
  v54 = v2 + *(int *)(v52 + 28);
  v55 = (void **)(v54 + *(int *)(_s5EntryVMa() + 24));
  v56 = (unint64_t)*v55;
  v57 = (unint64_t)v55[1];
  v58 = HIBYTE(v57) & 0xF;
  if ((v57 & 0x2000000000000000) == 0)
    v58 = v56 & 0xFFFFFFFFFFFFLL;
  if (v58)
  {
    v118 = v48;
    v119 = v51;
    v120 = v45;
    v121 = v39;
    v144 = (void *)v56;
    v145 = v57;
    sub_241721040();
    swift_bridgeObjectRetain();
    v59 = sub_2418A92D0();
    v114 = v60;
    v115 = v61;
    v62 = (uint64_t)v28;
    v64 = v63 & 1;
    v117 = v52;
    v141 = v53;
    v116 = v62;
    sub_241860D60(v62);
    sub_24172588C(v62, type metadata accessor for StateOfMindTimeline.Styles);
    v65 = v122;
    v66 = v123;
    (*(void (**)(char *, _QWORD, uint64_t))(v122 + 104))(v24, *MEMORY[0x24BDF1890], v123);
    v67 = *MEMORY[0x24BDF1668];
    v68 = sub_2418A9174();
    v69 = *(_QWORD *)(v68 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 104))(v21, v67, v68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v21, 0, 1, v68);
    sub_2418A9198();
    sub_2418A91B0();
    sub_24173FC60((uint64_t)v21, &qword_25714CD68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v66);
    v70 = v125;
    v71 = v124;
    v72 = v126;
    (*(void (**)(char *, _QWORD, uint64_t))(v125 + 104))(v124, *MEMORY[0x24BDF17C8], v126);
    sub_2418A91F8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    v73 = v59;
    v74 = v114;
    v75 = sub_2418A9294();
    v77 = v76;
    LOBYTE(v70) = v78 & 1;
    sub_2417289EC(v73, v74, v64);
    swift_release();
    swift_bridgeObjectRelease();
    v79 = v116;
    sub_241860D60(v116);
    sub_24172588C(v79, type metadata accessor for StateOfMindTimeline.Styles);
    v80 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v144 = (void *)MEMORY[0x24269BDB4](v80);
    v81 = sub_2418A9270();
    v83 = v82;
    v126 = v84;
    v86 = v85 & 1;
    sub_2417289EC(v75, v77, v70);
    swift_release();
    swift_bridgeObjectRelease();
    sub_241861034(v143);
    v87 = v134;
    v88 = v135;
    v89 = v132;
    (*(void (**)(char *, _QWORD, uint64_t))(v134 + 104))(v132, *MEMORY[0x24BDEB400], v135);
    LOBYTE(v77) = sub_2418A84D8();
    v134 = *(_QWORD *)(v87 + 8);
    ((void (*)(char *, uint64_t))v134)(v89, v88);
    v90 = (unsigned int *)MEMORY[0x24BDF5080];
    v92 = v136;
    v91 = v137;
    if ((v77 & 1) == 0)
      v90 = (unsigned int *)MEMORY[0x24BDF5098];
    v93 = v138;
    (*(void (**)(char *, _QWORD, uint64_t))(v137 + 104))(v136, *v90, v138);
    v94 = (uint64_t)v139;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v139, v92, v93);
    v95 = (uint64_t)v129;
    sub_2417289A8(v94, (uint64_t)&v129[*(int *)(v127 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
    *(_QWORD *)v95 = v81;
    *(_QWORD *)(v95 + 8) = v83;
    *(_BYTE *)(v95 + 16) = v86;
    *(_QWORD *)(v95 + 24) = v126;
    sub_241728A50(v81, v83, v86);
    swift_bridgeObjectRetain();
    v96 = v94;
    v97 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEDB60];
    sub_24172588C(v96, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
    ((void (*)(uint64_t, uint64_t))v134)(v143, v88);
    sub_2417289EC(v81, v83, v86);
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath();
    v99 = MEMORY[0x24BDF1FA8];
    v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
    v101 = v131;
    sub_24174B298(v95, v131, (unint64_t *)&qword_25714C418, v97, MEMORY[0x24BDF1FA8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v102 = v101 + *(int *)(v128 + 36);
    *(_QWORD *)v102 = KeyPath;
    *(_BYTE *)(v102 + 8) = 1;
    sub_24174B4CC(v95, (unint64_t *)&qword_25714C418, v97, v99, v100);
    v103 = v130;
    sub_2417289A8(v101, v130, (uint64_t (*)(_QWORD))sub_24174ADF8);
    *(_WORD *)(v103 + *(int *)(v133 + 36)) = 256;
    sub_24172588C(v101, (uint64_t (*)(_QWORD))sub_24174ADF8);
    v104 = *(_QWORD **)(v141 + *(int *)(v117 + 32));
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v104 = sub_241802714(0, v104[2] + 1, 1, v104);
    v106 = v104[2];
    v105 = v104[3];
    v107 = (uint64_t)v120;
    v108 = (uint64_t)v119;
    if (v106 >= v105 >> 1)
      v104 = sub_241802714((_QWORD *)(v105 > 1), v106 + 1, 1, v104);
    v104[2] = v106 + 1;
    v109 = &v104[2 * v106];
    v109[4] = 0x736C6562614CLL;
    v109[5] = 0xE600000000000000;
    v144 = &unk_2511AB450;
    v110 = swift_bridgeObjectRetain();
    sub_2417739BC(v110);
    sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_241731AEC();
    sub_2418A9D50();
    swift_bridgeObjectRelease();
    sub_24174B508();
    v111 = (uint64_t)v140;
    sub_2418A9450();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24172588C(v103, (uint64_t (*)(_QWORD))sub_24174AD9C);
    sub_241731B4C(v111, v107, (uint64_t (*)(_QWORD))sub_24174AD38);
    sub_2417289A8(v107, v108, (uint64_t (*)(_QWORD))sub_24174AD38);
    swift_storeEnumTagMultiPayload();
    sub_241728434(&qword_25714CD70, (uint64_t (*)(uint64_t))sub_24174AD38, (uint64_t (*)(void))sub_24174B508, sub_2417310D4);
    sub_2418A8D24();
    return sub_24172588C(v107, (uint64_t (*)(_QWORD))sub_24174AD38);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_241728434(&qword_25714CD70, (uint64_t (*)(uint64_t))sub_24174AD38, (uint64_t (*)(void))sub_24174B508, sub_2417310D4);
    return sub_2418A8D24();
  }
}

uint64_t sub_241748A3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  unsigned int *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t KeyPath;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t (*v106)(uint64_t);
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;

  v149 = a1;
  sub_24174AF7C(0, &qword_25714CCE0, &qword_25714CCE8, (uint64_t (*)(uint64_t))sub_24174B00C, &qword_25714CCF8);
  v148 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v117 - v4;
  sub_24174AEF4(0, &qword_25714CD60, MEMORY[0x24BDEF380]);
  v147 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v117 - v8;
  v10 = sub_2418A88D4();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEDB60];
  MEMORY[0x24BDAC7A8](v10, v12);
  v145 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2418A99B4();
  v143 = *(_QWORD *)(v14 - 8);
  v144 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v142 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2418A84E4();
  v140 = *(_QWORD *)(v17 - 8);
  v141 = v17;
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v138 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v146 = (uint64_t)&v117 - v22;
  v132 = sub_2418A91E0();
  v131 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132, v23);
  v130 = (char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, &qword_25714CD68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v117 - v27;
  v128 = sub_2418A9228();
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128, v29);
  v126 = (char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v31, v32);
  v129 = (uint64_t)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AE94(0, (unint64_t *)&qword_25714C418, v11, MEMORY[0x24BDF1FA8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v133 = v34;
  MEMORY[0x24BDAC7A8](v34, v35);
  v135 = (char *)&v117 - v36;
  sub_24174ADF8();
  v134 = v37;
  MEMORY[0x24BDAC7A8](v37, v38);
  v137 = (uint64_t)&v117 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AD9C();
  v139 = v40;
  MEMORY[0x24BDAC7A8](v40, v41);
  v136 = (uint64_t)&v117 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AD38();
  v44 = v43;
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v48 = (char *)&v117 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46, v49);
  v51 = (char *)&v117 - v50;
  v52 = _s16EntryDayDataViewVMa();
  v53 = v1;
  v54 = v1 + *(int *)(v52 + 28);
  v55 = _s5EntryVMa();
  v56 = (uint64_t *)(v54 + *(int *)(v55 + 24));
  v58 = *v56;
  v57 = v56[1];
  v59 = v58 & 0xFFFFFFFFFFFFLL;
  if ((v57 & 0x2000000000000000) != 0)
    v60 = HIBYTE(v57) & 0xF;
  else
    v60 = v59;
  if (v60)
  {
    *(_QWORD *)v5 = sub_2418A8C58();
    *((_QWORD *)v5 + 1) = 0;
    v5[16] = 0;
    sub_24174B388(0, &qword_25714CD38, &qword_25714CCE8, (uint64_t (*)(uint64_t))sub_24174B00C);
    sub_2417497E0(v1, &v5[*(int *)(v61 + 44)]);
    sub_24174B3F8((uint64_t)v5, (uint64_t)v9);
    swift_storeEnumTagMultiPayload();
    sub_241728434(&qword_25714CD70, (uint64_t (*)(uint64_t))sub_24174AD38, (uint64_t (*)(void))sub_24174B508, sub_2417310D4);
    sub_24174B45C();
    sub_2418A8D24();
    return sub_24174B18C((uint64_t)v5, &qword_25714CCE0, &qword_25714CCE8, (uint64_t (*)(uint64_t))sub_24174B00C, &qword_25714CCF8);
  }
  else
  {
    v121 = v48;
    v122 = v51;
    v123 = v44;
    v124 = v9;
    v63 = v54 + *(int *)(v55 + 20);
    v64 = *(_QWORD *)(v63 + 8);
    v150 = *(void **)v63;
    v151 = v64;
    sub_241721040();
    swift_bridgeObjectRetain();
    v118 = sub_2418A92D0();
    v117 = v65;
    v119 = v66;
    v68 = v67 & 1;
    v120 = v52;
    v125 = v53;
    v69 = v129;
    sub_241860D60(v129);
    sub_24172588C(v69, type metadata accessor for StateOfMindTimeline.Styles);
    v70 = v127;
    v71 = v126;
    v72 = v128;
    (*(void (**)(char *, _QWORD, uint64_t))(v127 + 104))(v126, *MEMORY[0x24BDF1890], v128);
    v73 = *MEMORY[0x24BDF1668];
    v74 = sub_2418A9174();
    v75 = *(_QWORD *)(v74 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 104))(v28, v73, v74);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v28, 0, 1, v74);
    sub_2418A9198();
    sub_2418A91B0();
    sub_24173FC60((uint64_t)v28, &qword_25714CD68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    v76 = v131;
    v77 = v130;
    v78 = v132;
    (*(void (**)(char *, _QWORD, uint64_t))(v131 + 104))(v130, *MEMORY[0x24BDF17C8], v132);
    sub_2418A91F8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
    v79 = v118;
    v80 = v117;
    LOBYTE(v77) = v68;
    v81 = sub_2418A9294();
    v83 = v82;
    v131 = v84;
    LOBYTE(v73) = v85 & 1;
    sub_2417289EC(v79, v80, (char)v77);
    swift_release();
    swift_bridgeObjectRelease();
    sub_241860D60(v69);
    sub_24172588C(v69, type metadata accessor for StateOfMindTimeline.Styles);
    v86 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v150 = (void *)MEMORY[0x24269BDB4](v86);
    v87 = sub_2418A9270();
    v89 = v88;
    v132 = v90;
    v92 = v91 & 1;
    sub_2417289EC(v81, v83, v73);
    swift_release();
    swift_bridgeObjectRelease();
    sub_241861034(v146);
    v94 = v140;
    v93 = v141;
    v95 = v138;
    (*(void (**)(char *, _QWORD, uint64_t))(v140 + 104))(v138, *MEMORY[0x24BDEB400], v141);
    LOBYTE(v64) = sub_2418A84D8();
    v140 = *(_QWORD *)(v94 + 8);
    ((void (*)(char *, uint64_t))v140)(v95, v93);
    v96 = (unsigned int *)MEMORY[0x24BDF5080];
    v98 = v142;
    v97 = v143;
    if ((v64 & 1) == 0)
      v96 = (unsigned int *)MEMORY[0x24BDF5098];
    v99 = v144;
    (*(void (**)(char *, _QWORD, uint64_t))(v143 + 104))(v142, *v96, v144);
    v100 = (uint64_t)v145;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v145, v98, v99);
    v101 = (uint64_t)v135;
    sub_2417289A8(v100, (uint64_t)&v135[*(int *)(v133 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
    *(_QWORD *)v101 = v87;
    *(_QWORD *)(v101 + 8) = v89;
    *(_BYTE *)(v101 + 16) = v92;
    *(_QWORD *)(v101 + 24) = v132;
    sub_241728A50(v87, v89, v92);
    swift_bridgeObjectRetain();
    sub_24172588C(v100, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v99);
    ((void (*)(uint64_t, uint64_t))v140)(v146, v93);
    sub_2417289EC(v87, v89, v92);
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath();
    v103 = MEMORY[0x24BDF1FA8];
    v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
    v105 = v137;
    v106 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEDB60];
    sub_24174B298(v101, v137, (unint64_t *)&qword_25714C418, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDB60], MEMORY[0x24BDF1FA8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v107 = v105 + *(int *)(v134 + 36);
    *(_QWORD *)v107 = KeyPath;
    *(_BYTE *)(v107 + 8) = 1;
    sub_24174B4CC(v101, (unint64_t *)&qword_25714C418, v106, v103, v104);
    v108 = v136;
    sub_2417289A8(v105, v136, (uint64_t (*)(_QWORD))sub_24174ADF8);
    *(_WORD *)(v108 + *(int *)(v139 + 36)) = 256;
    sub_24172588C(v105, (uint64_t (*)(_QWORD))sub_24174ADF8);
    v109 = *(_QWORD **)(v125 + *(int *)(v120 + 32));
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v109 = sub_241802714(0, v109[2] + 1, 1, v109);
    v110 = (uint64_t)v124;
    v111 = (uint64_t)v122;
    v113 = v109[2];
    v112 = v109[3];
    if (v113 >= v112 >> 1)
      v109 = sub_241802714((_QWORD *)(v112 > 1), v113 + 1, 1, v109);
    v109[2] = v113 + 1;
    v114 = &v109[2 * v113];
    v114[4] = 0x746E656D6F4DLL;
    v114[5] = 0xE600000000000000;
    v150 = &unk_2511AB450;
    v115 = swift_bridgeObjectRetain();
    sub_2417739BC(v115);
    sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_241731AEC();
    sub_2418A9D50();
    swift_bridgeObjectRelease();
    sub_24174B508();
    v116 = (uint64_t)v121;
    sub_2418A9450();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24172588C(v108, (uint64_t (*)(_QWORD))sub_24174AD9C);
    sub_241731B4C(v116, v111, (uint64_t (*)(_QWORD))sub_24174AD38);
    sub_2417289A8(v111, v110, (uint64_t (*)(_QWORD))sub_24174AD38);
    swift_storeEnumTagMultiPayload();
    sub_241728434(&qword_25714CD70, (uint64_t (*)(uint64_t))sub_24174AD38, (uint64_t (*)(void))sub_24174B508, sub_2417310D4);
    sub_24174B45C();
    sub_2418A8D24();
    return sub_24172588C(v111, (uint64_t (*)(_QWORD))sub_24174AD38);
  }
}

uint64_t sub_2417495F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_24174AF7C(0, &qword_25714CCE0, &qword_25714CCE8, (uint64_t (*)(uint64_t))sub_24174B00C, &qword_25714CCF8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v17 - v3;
  sub_24174B090(0, &qword_25714CD30, MEMORY[0x24BDEF380]);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v17 - v7;
  v9 = v0 + *(int *)(_s16EntryDayDataViewVMa() + 28);
  v10 = (uint64_t *)(v9 + *(int *)(_s5EntryVMa() + 28));
  v12 = *v10;
  v11 = v10[1];
  v13 = v12 & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0)
    v14 = HIBYTE(v11) & 0xF;
  else
    v14 = v13;
  if (v14)
  {
    *(_QWORD *)v4 = sub_2418A8C58();
    *((_QWORD *)v4 + 1) = 0;
    v4[16] = 0;
    sub_24174B388(0, &qword_25714CD38, &qword_25714CCE8, (uint64_t (*)(uint64_t))sub_24174B00C);
    sub_24174A164(v0, &v4[*(int *)(v15 + 44)]);
    sub_24174B3F8((uint64_t)v4, (uint64_t)v8);
    swift_storeEnumTagMultiPayload();
    sub_24174B45C();
    sub_2418A8D24();
    return sub_24174B18C((uint64_t)v4, &qword_25714CCE0, &qword_25714CCE8, (uint64_t (*)(uint64_t))sub_24174B00C, &qword_25714CCF8);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_24174B45C();
    return sub_2418A8D24();
  }
}

uint64_t sub_2417497E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  void (*v51)(char *, _QWORD, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  unsigned int *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(void);
  uint64_t v80;
  uint64_t (*v81)(uint64_t);
  uint64_t v82;
  uint64_t KeyPath;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v102[2];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  unsigned __int8 v133;
  uint64_t v134;
  unsigned __int8 v135;
  uint64_t v136;
  uint64_t v137;

  v125 = a2;
  v3 = sub_2418A88D4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEDB60];
  MEMORY[0x24BDAC7A8](v3, v5);
  v115 = (char *)v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_2418A99B4();
  v129 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114, v7);
  v112 = (char *)v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_2418A84E4();
  v109 = *(_QWORD *)(v128 - 8);
  v10 = MEMORY[0x24BDAC7A8](v128, v9);
  v108 = (char *)v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v127 = (char *)v102 - v13;
  v103 = sub_2418A91E0();
  v14 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103, v15);
  v17 = (char *)v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AE94(0, (unint64_t *)&qword_25714C418, v4, MEMORY[0x24BDF1FA8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v107 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v106 = (char *)v102 - v20;
  sub_24174ADF8();
  v113 = v21;
  MEMORY[0x24BDAC7A8](v21, v22);
  v111 = (uint64_t)v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AD9C();
  v110 = v24;
  MEMORY[0x24BDAC7A8](v24, v25);
  v104 = (uint64_t)v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AD38();
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v124 = (uint64_t)v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v122 = (char *)v102 - v33;
  MEMORY[0x24BDAC7A8](v32, v34);
  v123 = (uint64_t)v102 - v35;
  v36 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)v102 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = _s16EntryDayDataViewVMa();
  v105 = v40;
  v126 = a1;
  sub_241860D60((uint64_t)v39);
  sub_24172588C((uint64_t)v39, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9960();
  sub_2418A861C();
  v121 = v132;
  v120 = v133;
  v119 = v134;
  v118 = v135;
  v117 = v136;
  v116 = v137;
  v41 = a1 + *(int *)(v40 + 28);
  v42 = v41 + *(int *)(_s5EntryVMa() + 20);
  v43 = *(_QWORD *)(v42 + 8);
  v130 = *(void **)v42;
  v131 = v43;
  sub_241721040();
  swift_bridgeObjectRetain();
  v44 = sub_2418A92D0();
  v46 = v45;
  v102[0] = v47;
  v49 = v48 & 1;
  sub_241860D60((uint64_t)v39);
  sub_24172588C((uint64_t)v39, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A912C();
  v50 = v14;
  v51 = *(void (**)(char *, _QWORD, uint64_t))(v14 + 104);
  v52 = v103;
  v51(v17, *MEMORY[0x24BDF17C8], v103);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v17, v52);
  v53 = sub_2418A9294();
  v55 = v54;
  v102[1] = v56;
  LOBYTE(v43) = v57 & 1;
  sub_2417289EC(v44, v46, v49);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241860D60((uint64_t)v39);
  sub_24172588C((uint64_t)v39, type metadata accessor for StateOfMindTimeline.Styles);
  v58 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v130 = (void *)MEMORY[0x24269BDB4](v58);
  v59 = sub_2418A9270();
  v61 = v60;
  v103 = v62;
  v64 = v63 & 1;
  sub_2417289EC(v53, v55, v43);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241861034((uint64_t)v127);
  v65 = v109;
  v66 = v108;
  v67 = v128;
  (*(void (**)(char *, _QWORD, uint64_t))(v109 + 104))(v108, *MEMORY[0x24BDEB400], v128);
  LOBYTE(v43) = sub_2418A84D8();
  v68 = *(void (**)(char *, uint64_t))(v65 + 8);
  v68(v66, v67);
  v69 = (unsigned int *)MEMORY[0x24BDF5080];
  v70 = v129;
  if ((v43 & 1) == 0)
    v69 = (unsigned int *)MEMORY[0x24BDF5098];
  v71 = v112;
  v72 = v114;
  (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v112, *v69, v114);
  v73 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  v74 = v115;
  v75 = v72;
  v73(v115, v71, v72);
  v76 = (uint64_t)v106;
  v77 = (uint64_t)v74;
  v78 = (uint64_t)v74;
  v79 = MEMORY[0x24BDEDB60];
  sub_2417289A8(v77, (uint64_t)&v106[*(int *)(v107 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  *(_QWORD *)v76 = v59;
  *(_QWORD *)(v76 + 8) = v61;
  *(_BYTE *)(v76 + 16) = v64;
  *(_QWORD *)(v76 + 24) = v103;
  sub_241728A50(v59, v61, v64);
  swift_bridgeObjectRetain();
  v80 = v78;
  v81 = (uint64_t (*)(uint64_t))v79;
  sub_24172588C(v80, (uint64_t (*)(_QWORD))v79);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v71, v75);
  v68(v127, v128);
  sub_2417289EC(v59, v61, v64);
  v82 = v110;
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v84 = v111;
  v85 = MEMORY[0x24BDF1FA8];
  v86 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
  sub_24174B298(v76, v111, (unint64_t *)&qword_25714C418, v81, MEMORY[0x24BDF1FA8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v87 = v84 + *(int *)(v113 + 36);
  *(_QWORD *)v87 = KeyPath;
  *(_BYTE *)(v87 + 8) = 1;
  sub_24174B4CC(v76, (unint64_t *)&qword_25714C418, v81, v85, v86);
  v88 = v104;
  sub_2417289A8(v84, v104, (uint64_t (*)(_QWORD))sub_24174ADF8);
  v89 = v88;
  *(_WORD *)(v88 + *(int *)(v82 + 36)) = 256;
  sub_24172588C(v84, (uint64_t (*)(_QWORD))sub_24174ADF8);
  v90 = *(_QWORD **)(v126 + *(int *)(v105 + 32));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v90 = sub_241802714(0, v90[2] + 1, 1, v90);
  v92 = v90[2];
  v91 = v90[3];
  if (v92 >= v91 >> 1)
    v90 = sub_241802714((_QWORD *)(v91 > 1), v92 + 1, 1, v90);
  v90[2] = v92 + 1;
  v93 = &v90[2 * v92];
  v93[4] = 0x746E656D6F4DLL;
  v93[5] = 0xE600000000000000;
  v130 = &unk_2511AB450;
  v94 = swift_bridgeObjectRetain();
  sub_2417739BC(v94);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24174B508();
  v95 = (uint64_t)v122;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24172588C(v89, (uint64_t (*)(_QWORD))sub_24174AD9C);
  v96 = v123;
  sub_241731B4C(v95, v123, (uint64_t (*)(_QWORD))sub_24174AD38);
  v97 = v124;
  sub_2417289A8(v96, v124, (uint64_t (*)(_QWORD))sub_24174AD38);
  v98 = v125;
  *v125 = 0;
  *((_BYTE *)v98 + 8) = 1;
  v98[2] = v121;
  *((_BYTE *)v98 + 24) = v120;
  v98[4] = v119;
  *((_BYTE *)v98 + 40) = v118;
  v99 = v116;
  v98[6] = v117;
  v98[7] = v99;
  sub_24174B00C();
  sub_2417289A8(v97, (uint64_t)v98 + *(int *)(v100 + 48), (uint64_t (*)(_QWORD))sub_24174AD38);
  sub_24172588C(v96, (uint64_t (*)(_QWORD))sub_24174AD38);
  return sub_24172588C(v97, (uint64_t (*)(_QWORD))sub_24174AD38);
}

uint64_t sub_24174A164@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  unsigned int *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(void);
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t KeyPath;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  unsigned __int8 v143;
  uint64_t v144;
  unsigned __int8 v145;
  uint64_t v146;
  uint64_t v147;

  v135 = a2;
  v3 = sub_2418A88D4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEDB60];
  MEMORY[0x24BDAC7A8](v3, v5);
  v125 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_2418A99B4();
  v139 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124, v7);
  v122 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_2418A84E4();
  v120 = *(_QWORD *)(v138 - 8);
  v10 = MEMORY[0x24BDAC7A8](v138, v9);
  v117 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v137 = (uint64_t)&v109 - v13;
  v113 = sub_2418A91E0();
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113, v14);
  v111 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AE94(0, (unint64_t *)&qword_25714C418, v4, MEMORY[0x24BDF1FA8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v116 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v115 = (char *)&v109 - v18;
  sub_24174ADF8();
  v123 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v121 = (uint64_t)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AD9C();
  v119 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v118 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174AD38();
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v134 = (uint64_t)&v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v132 = (char *)&v109 - v31;
  MEMORY[0x24BDAC7A8](v30, v32);
  v133 = (uint64_t)&v109 - v33;
  v34 = _s6StylesV5DailyVMa(0);
  MEMORY[0x24BDAC7A8](v34, v35);
  v37 = (char *)&v109 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v40 = MEMORY[0x24BDAC7A8](v38, v39);
  v110 = (uint64_t)&v109 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40, v42);
  v44 = (char *)&v109 - v43;
  v45 = _s16EntryDayDataViewVMa();
  v46 = *(int *)(v45 + 20);
  v47 = v45;
  v114 = v45;
  v136 = a1;
  v109 = a1 + v46;
  sub_241860D60((uint64_t)v44);
  sub_2417289A8((uint64_t)&v44[*(int *)(v38 + 56)], (uint64_t)v37, _s6StylesV5DailyVMa);
  sub_24172588C((uint64_t)v44, type metadata accessor for StateOfMindTimeline.Styles);
  sub_24172588C((uint64_t)v37, _s6StylesV5DailyVMa);
  sub_2418A9960();
  sub_2418A861C();
  v131 = v142;
  v130 = v143;
  v129 = v144;
  v128 = v145;
  v127 = v146;
  v126 = v147;
  v48 = a1 + *(int *)(v47 + 28);
  v49 = v48 + *(int *)(_s5EntryVMa() + 28);
  v50 = *(_QWORD *)(v49 + 8);
  v140 = *(void **)v49;
  v141 = v50;
  sub_241721040();
  swift_bridgeObjectRetain();
  v51 = sub_2418A92D0();
  v53 = v52;
  v55 = v54 & 1;
  v56 = v110;
  sub_241860D60(v110);
  v57 = v56;
  sub_24172588C(v56, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A912C();
  v58 = v112;
  v59 = v111;
  v60 = v113;
  (*(void (**)(char *, _QWORD, uint64_t))(v112 + 104))(v111, *MEMORY[0x24BDF17C8], v113);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
  v61 = sub_2418A9294();
  v63 = v62;
  LOBYTE(v56) = v64 & 1;
  sub_2417289EC(v51, v53, v55);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241860D60(v57);
  sub_24172588C(v57, type metadata accessor for StateOfMindTimeline.Styles);
  v65 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v140 = (void *)MEMORY[0x24269BDB4](v65);
  v113 = sub_2418A9270();
  v67 = v66;
  v112 = v68;
  v70 = v69 & 1;
  sub_2417289EC(v61, v63, v56);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241861034(v137);
  v71 = v120;
  v72 = v117;
  v73 = v138;
  (*(void (**)(char *, _QWORD, uint64_t))(v120 + 104))(v117, *MEMORY[0x24BDEB400], v138);
  LOBYTE(v56) = sub_2418A84D8();
  v120 = *(_QWORD *)(v71 + 8);
  ((void (*)(char *, uint64_t))v120)(v72, v73);
  v74 = (unsigned int *)MEMORY[0x24BDF5080];
  v75 = v139;
  if ((v56 & 1) == 0)
    v74 = (unsigned int *)MEMORY[0x24BDF5098];
  v76 = v122;
  v77 = v124;
  (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v122, *v74, v124);
  v78 = v125;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v125, v76, v77);
  v79 = (uint64_t)v115;
  v80 = (uint64_t)v78;
  v81 = (uint64_t)v78;
  v82 = MEMORY[0x24BDEDB60];
  sub_2417289A8(v80, (uint64_t)&v115[*(int *)(v116 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  v83 = v113;
  *(_QWORD *)v79 = v113;
  *(_QWORD *)(v79 + 8) = v67;
  v84 = v67;
  v85 = v70;
  *(_BYTE *)(v79 + 16) = v70;
  *(_QWORD *)(v79 + 24) = v112;
  v86 = v83;
  v87 = v84;
  sub_241728A50(v83, v84, v85);
  swift_bridgeObjectRetain();
  v88 = v81;
  v89 = (uint64_t (*)(uint64_t))v82;
  sub_24172588C(v88, (uint64_t (*)(_QWORD))v82);
  (*(void (**)(char *, uint64_t))(v139 + 8))(v76, v77);
  ((void (*)(uint64_t, uint64_t))v120)(v137, v138);
  v90 = v119;
  sub_2417289EC(v86, v87, v85);
  v91 = (uint64_t)v118;
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v93 = v121;
  v94 = MEMORY[0x24BDF1FA8];
  v95 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0];
  sub_24174B298(v79, v121, (unint64_t *)&qword_25714C418, v89, MEMORY[0x24BDF1FA8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v96 = v93 + *(int *)(v123 + 36);
  *(_QWORD *)v96 = KeyPath;
  *(_BYTE *)(v96 + 8) = 1;
  sub_24174B4CC(v79, (unint64_t *)&qword_25714C418, v89, v94, v95);
  sub_2417289A8(v93, v91, (uint64_t (*)(_QWORD))sub_24174ADF8);
  *(_WORD *)(v91 + *(int *)(v90 + 36)) = 256;
  sub_24172588C(v93, (uint64_t (*)(_QWORD))sub_24174ADF8);
  v97 = *(_QWORD **)(v136 + *(int *)(v114 + 32));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v97 = sub_241802714(0, v97[2] + 1, 1, v97);
  v99 = v97[2];
  v98 = v97[3];
  if (v99 >= v98 >> 1)
    v97 = sub_241802714((_QWORD *)(v98 > 1), v99 + 1, 1, v97);
  v97[2] = v99 + 1;
  v100 = &v97[2 * v99];
  v100[4] = 0xD000000000000011;
  v100[5] = 0x80000002418DC250;
  v140 = &unk_2511AB450;
  v101 = swift_bridgeObjectRetain();
  sub_2417739BC(v101);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24174B508();
  v102 = (uint64_t)v132;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24172588C(v91, (uint64_t (*)(_QWORD))sub_24174AD9C);
  v103 = v133;
  sub_241731B4C(v102, v133, (uint64_t (*)(_QWORD))sub_24174AD38);
  v104 = v134;
  sub_2417289A8(v103, v134, (uint64_t (*)(_QWORD))sub_24174AD38);
  v105 = v135;
  *v135 = 0;
  *((_BYTE *)v105 + 8) = 1;
  v105[2] = v131;
  *((_BYTE *)v105 + 24) = v130;
  v105[4] = v129;
  *((_BYTE *)v105 + 40) = v128;
  v106 = v126;
  v105[6] = v127;
  v105[7] = v106;
  sub_24174B00C();
  sub_2417289A8(v104, (uint64_t)v105 + *(int *)(v107 + 48), (uint64_t (*)(_QWORD))sub_24174AD38);
  sub_24172588C(v103, (uint64_t (*)(_QWORD))sub_24174AD38);
  return sub_24172588C(v104, (uint64_t (*)(_QWORD))sub_24174AD38);
}

void sub_24174ABCC()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  unint64_t TupleTypeMetadata;
  uint64_t v2;

  if (!qword_25714CCA0)
  {
    sub_24174ACBC();
    sub_24174B764(255, (unint64_t *)&qword_25714C0A8);
    v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8];
    sub_24174AE94(255, &qword_25714CCB8, (uint64_t (*)(uint64_t))sub_24174AD38, MEMORY[0x24BDF5158], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    sub_24174AEF4(255, &qword_25714CCD8, v0);
    sub_24174B090(255, &qword_25714CD00, v0);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_25714CCA0);
  }
}

void sub_24174ACBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CCA8)
  {
    sub_24174B764(255, &qword_25714CCB0);
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CCA8);
  }
}

void sub_24174AD38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CCC0)
  {
    sub_24174AD9C();
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CCC0);
  }
}

void sub_24174AD9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CCC8)
  {
    sub_24174ADF8();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CCC8);
  }
}

void sub_24174ADF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CCD0)
  {
    sub_24174AE94(255, (unint64_t *)&qword_25714C418, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDB60], MEMORY[0x24BDF1FA8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24172887C(255, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CCD0);
  }
}

void sub_24174AE94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_24174AEF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_24174AD38();
    v7 = v6;
    sub_24174AF7C(255, &qword_25714CCE0, &qword_25714CCE8, (uint64_t (*)(uint64_t))sub_24174B00C, &qword_25714CCF8);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_24174AF7C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_24172570C(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417406BC(a5, a3, a4);
    v9 = sub_2418A97EC();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_24174B00C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714CCF0)
  {
    sub_24174B764(255, (unint64_t *)&qword_25714C0A8);
    sub_24174AD38();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714CCF0);
  }
}

void sub_24174B090(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_24174AF7C(255, &qword_25714CCE0, &qword_25714CCE8, (uint64_t (*)(uint64_t))sub_24174B00C, &qword_25714CCF8);
    v7 = a3(a1, MEMORY[0x24BDF5158], v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_24174B110()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CD10)
  {
    sub_24174AF7C(255, (unint64_t *)&qword_25714CC90, &qword_25714CC98, (uint64_t (*)(uint64_t))sub_24174ABCC, &qword_25714CD08);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CD10);
  }
}

uint64_t sub_24174B18C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  uint64_t v6;

  sub_24174AF7C(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

unint64_t sub_24174B1C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CD20;
  if (!qword_25714CD20)
  {
    sub_24174B110();
    v2 = v1;
    v3[0] = sub_24174B230();
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CD20);
  }
  return result;
}

unint64_t sub_24174B230()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714CD28;
  if (!qword_25714CD28)
  {
    sub_24174AF7C(255, (unint64_t *)&qword_25714CC90, &qword_25714CC98, (uint64_t (*)(uint64_t))sub_24174ABCC, &qword_25714CD08);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_25714CD28);
  }
  return result;
}

uint64_t sub_24174B298(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  sub_24174AE94(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_24174B2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v6;

  v6 = a4(0, a3, MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24174B340(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v4;

  v4 = a3(0, a2, MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_24174B388(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_24172570C(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v5 = sub_2418A86E8();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_24174B3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24174AF7C(0, &qword_25714CCE0, &qword_25714CCE8, (uint64_t (*)(uint64_t))sub_24174B00C, &qword_25714CCF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24174B45C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714CD40;
  if (!qword_25714CD40)
  {
    sub_24174AF7C(255, &qword_25714CCE0, &qword_25714CCE8, (uint64_t (*)(uint64_t))sub_24174B00C, &qword_25714CCF8);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_25714CD40);
  }
  return result;
}

uint64_t sub_24174B4CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;

  sub_24174AE94(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

unint64_t sub_24174B508()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CD48;
  if (!qword_25714CD48)
  {
    sub_24174AD9C();
    v2 = v1;
    v3[0] = sub_241728434((unint64_t *)&qword_25714CD50, (uint64_t (*)(uint64_t))sub_24174ADF8, (uint64_t (*)(void))sub_241731CDC, (uint64_t (*)(void))sub_24174B590);
    v3[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CD48);
  }
  return result;
}

unint64_t sub_24174B590()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714CD58;
  if (!qword_25714CD58)
  {
    sub_24172887C(255, (unint64_t *)&qword_25714C278, MEMORY[0x24BDEC3D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_25714CD58);
  }
  return result;
}

unint64_t sub_24174B5F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CD80;
  if (!qword_25714CD80)
  {
    sub_24174B764(255, &qword_25714CCB0);
    v2 = v1;
    v3[0] = sub_24174B670();
    v3[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CD80);
  }
  return result;
}

unint64_t sub_24174B670()
{
  unint64_t result;

  result = qword_25714CD88;
  if (!qword_25714CD88)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindVisualization.ValenceImage, &type metadata for StateOfMindVisualization.ValenceImage);
    atomic_store(result, (unint64_t *)&qword_25714CD88);
  }
  return result;
}

unint64_t sub_24174B6B4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  result = qword_25714CD90;
  if (!qword_25714CD90)
  {
    sub_241728808();
    v2 = v1;
    v3 = sub_24174B590();
    v4[0] = MEMORY[0x24BDF1F80];
    v4[1] = v3;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_25714CD90);
  }
  return result;
}

uint64_t sub_24174B71C()
{
  sub_24174B110();
  sub_24174B1C8();
  return swift_getOpaqueTypeConformance2();
}

void sub_24174B764(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_2418A87FC();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_24174B7AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25714CDA0[0];
  if (!qword_25714CDA0[0])
  {
    sub_24174B764(255, (unint64_t *)&qword_25714CD98);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, qword_25714CDA0);
  }
  return result;
}

uint64_t sub_24174B824()
{
  return swift_allocateGenericValueMetadata();
}

void sub_24174B82C()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_24174B8D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v37;
  size_t __n;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v43 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v44 = sub_2418A8EB0();
  v8 = *(_QWORD *)(v44 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = sub_2418A87B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_DWORD *)(v11 + 80) | v9;
  v14 = v13 & 0xF8 | 7u;
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  if (((v15 + v12) & (unint64_t)~v12) + *(_QWORD *)(v11 + 64) <= 8)
    v16 = 8;
  else
    v16 = ((v15 + v12) & ~v12) + *(_QWORD *)(v11 + 64);
  v17 = (v13 | v6) & 0x100000;
  if ((v14 | v6) != 7
    || v17 != 0
    || v16 + ((v7 + v14 + ((v6 + 80) & ~(unint64_t)v6)) & ~v14) + 1 > 0x18)
  {
    v20 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v20 + (((v14 | v6) + 16) & ~(v14 | v6));
LABEL_30:
    swift_retain();
    return a1;
  }
  v21 = v10;
  v22 = ~(unint64_t)v6;
  v40 = *(_QWORD *)(v10 - 8);
  v41 = ~v14;
  v23 = a2[1];
  __n = v15;
  v39 = v15 + v12;
  v42 = *(_DWORD *)(v11 + 80);
  if (v23 < 0xFFFFFFFF)
  {
    v26 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v26;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    v27 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v27;
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v23;
    v37 = v21;
    v24 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v24;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_QWORD *)(a1 + 48) = a2[6];
    v25 = a2[9];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_QWORD *)(a1 + 72) = v25;
    swift_bridgeObjectRetain();
    swift_retain();
    v21 = v37;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v22 = ~(unint64_t)v6;
  }
  v28 = (uint64_t)a2 + v6;
  v29 = (a1 + v6 + 80) & v22;
  v30 = (v28 + 80) & v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v29, v30, v43);
  v31 = v7 + v14;
  v32 = (_QWORD *)((v29 + v7 + v14) & v41);
  v33 = (_QWORD *)((v30 + v31) & v41);
  v34 = *((unsigned __int8 *)v33 + v16);
  if (v34 >= 2)
  {
    if (v16 <= 3)
      v35 = v16;
    else
      v35 = 4;
    __asm { BR              X12 }
  }
  if (v34 != 1)
  {
    *v32 = *v33;
    *((_BYTE *)v32 + v16) = 0;
    goto LABEL_30;
  }
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v33, 1, v44))
  {
    memcpy(v32, v33, __n);
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(v32, v33, v44);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v32, 0, 1, v44);
  }
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v40 + 16))(((unint64_t)v32 + v39) & ~v42, ((unint64_t)v33 + v39) & ~v42, v21);
  *((_BYTE *)v32 + v16) = 1;
  return a1;
}

uint64_t sub_24174BC14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  if (*(_QWORD *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = sub_2418A8EB0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = sub_2418A87B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = (*(_DWORD *)(v11 + 80) | v9) & 0xF8 | 7u;
  v14 = (v5 + v6 + v13) & ~v13;
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  v16 = v15 + v12;
  v17 = ((v15 + v12) & ~v12) + *(_QWORD *)(v11 + 64);
  if (v17 <= 8)
    v17 = 8;
  v18 = *(unsigned __int8 *)(v14 + v17);
  if (v18 >= 2)
  {
    if (v17 <= 3)
      v19 = v17;
    else
      v19 = 4;
    __asm { BR              X14 }
  }
  if (v18 != 1)
    return swift_release();
  v20 = ~v12;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v14, v7);
  return (*(uint64_t (**)(unint64_t, uint64_t))(v11 + 8))((v16 + v14) & v20, v10);
}

uint64_t sub_24174BDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  size_t v25;
  size_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v6 = *(_QWORD *)(a2 + 8);
  if (v6 < 0xFFFFFFFF)
  {
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    v8 = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 80 + a1) & ~v12;
  v14 = (v12 + 80 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64);
  v16 = sub_2418A8EB0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = sub_2418A87B4();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_DWORD *)(v20 + 80);
  v22 = (*(_DWORD *)(v20 + 80) | v18) & 0xF8 | 7u;
  v23 = (_QWORD *)((v15 + v22 + v13) & ~v22);
  v24 = (_QWORD *)((v15 + v22 + v14) & ~v22);
  if (*(_DWORD *)(v17 + 84))
    v25 = *(_QWORD *)(v17 + 64);
  else
    v25 = *(_QWORD *)(v17 + 64) + 1;
  v26 = v25 + v21;
  if (((v25 + v21) & ~v21) + *(_QWORD *)(v20 + 64) <= 8)
    v27 = 8;
  else
    v27 = ((v25 + v21) & ~v21) + *(_QWORD *)(v20 + 64);
  v28 = *((unsigned __int8 *)v24 + v27);
  if (v28 >= 2)
  {
    if (v27 <= 3)
      v29 = v27;
    else
      v29 = 4;
    __asm { BR              X13 }
  }
  if (v28 == 1)
  {
    v32 = v19;
    v30 = ~v21;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v24, 1, v16))
    {
      memcpy(v23, v24, v25);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v23, v24, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 16))(((unint64_t)v23 + v26) & v30, ((unint64_t)v24 + v26) & v30, v32);
    *((_BYTE *)v23 + v27) = 1;
  }
  else
  {
    *v23 = *v24;
    *((_BYTE *)v23 + v27) = 0;
    swift_retain();
  }
  return a1;
}

uint64_t sub_24174C080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v36;

  v6 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v6 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v9 = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v10 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v10;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v6 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_retain();
      swift_release();
      v7 = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v7;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v11 = *(_OWORD *)(a2 + 16);
  v12 = *(_OWORD *)(a2 + 32);
  v13 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v13;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = v12;
LABEL_8:
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v15 + 80 + a1) & ~v15;
  v17 = (v15 + 80 + a2) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v16, v17);
  v18 = *(_QWORD *)(v14 + 64);
  v19 = sub_2418A8EB0();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_DWORD *)(v20 + 80);
  v22 = sub_2418A87B4();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (*(_DWORD *)(v23 + 80) | v21) & 0xF8 | 7u;
  v25 = (_QWORD *)((v18 + v24 + v16) & ~v24);
  v26 = (_QWORD *)((v18 + v24 + v17) & ~v24);
  if (v25 != v26)
  {
    v27 = v22;
    v28 = *(_DWORD *)(v23 + 80);
    if (*(_DWORD *)(v20 + 84))
      v29 = *(_QWORD *)(v20 + 64);
    else
      v29 = *(_QWORD *)(v20 + 64) + 1;
    if (((v29 + v28) & ~v28) + *(_QWORD *)(v23 + 64) <= 8)
      v30 = 8;
    else
      v30 = ((v29 + v28) & ~v28) + *(_QWORD *)(v23 + 64);
    v31 = *((unsigned __int8 *)v25 + v30);
    if (v31 >= 2)
    {
      if (v30 <= 3)
        v32 = v30;
      else
        v32 = 4;
      __asm { BR              X12 }
    }
    v36 = ~v28;
    if (v31 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v25, 1, v19))
        (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v25, v19);
      (*(void (**)(unint64_t, uint64_t))(v23 + 8))(((unint64_t)v25 + v28 + v29) & v36, v27);
    }
    else
    {
      swift_release();
    }
    v33 = *((unsigned __int8 *)v26 + v30);
    if (v33 >= 2)
    {
      if (v30 <= 3)
        v34 = v30;
      else
        v34 = 4;
      __asm { BR              X12 }
    }
    if (v33 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v26, 1, v19))
      {
        memcpy(v25, v26, v29);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v20 + 16))(v25, v26, v19);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v25, 0, 1, v19);
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 16))(((unint64_t)v25 + v28 + v29) & v36, ((unint64_t)v26 + v28 + v29) & v36, v27);
      *((_BYTE *)v25 + v30) = 1;
    }
    else
    {
      *v25 = *v26;
      *((_BYTE *)v25 + v30) = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *sub_24174C4DC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  size_t v20;
  size_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;

  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 80) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 80) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = sub_2418A8EB0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = sub_2418A87B4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = (*(_DWORD *)(v15 + 80) | v13) & 0xF8 | 7u;
  v18 = (_QWORD *)((v10 + v17 + v8) & ~v17);
  v19 = (_QWORD *)((v10 + v17 + v9) & ~v17);
  if (*(_DWORD *)(v12 + 84))
    v20 = *(_QWORD *)(v12 + 64);
  else
    v20 = *(_QWORD *)(v12 + 64) + 1;
  v21 = v20 + v16;
  if (((v20 + v16) & ~v16) + *(_QWORD *)(v15 + 64) <= 8)
    v22 = 8;
  else
    v22 = ((v20 + v16) & ~v16) + *(_QWORD *)(v15 + 64);
  v23 = *((unsigned __int8 *)v19 + v22);
  if (v23 >= 2)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X13 }
  }
  if (v23 == 1)
  {
    v28 = v14;
    v25 = ~v16;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v19, 1, v11))
    {
      memcpy(v18, v19, v20);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 32))(v18, v19, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 32))(((unint64_t)v18 + v21) & v25, ((unint64_t)v19 + v21) & v25, v28);
    v26 = 1;
  }
  else
  {
    v26 = 0;
    *v18 = *v19;
  }
  *((_BYTE *)v18 + v22) = v26;
  return a1;
}

uint64_t sub_24174C6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  char v32;
  uint64_t v34;

  if (*(_QWORD *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    v6 = *(_QWORD *)(a2 + 8);
    if (v6 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_release();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_release();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v7 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      swift_release();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
LABEL_6:
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 80 + a1) & ~v11;
  v13 = (v11 + 80 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = sub_2418A8EB0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = sub_2418A87B4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(_DWORD *)(v19 + 80) | v17) & 0xF8 | 7u;
  v21 = v14 + v20;
  v22 = (_QWORD *)((v14 + v20 + v12) & ~v20);
  v23 = (_QWORD *)((v21 + v13) & ~v20);
  if (v22 != v23)
  {
    v24 = v18;
    v25 = *(_DWORD *)(v19 + 80);
    if (*(_DWORD *)(v16 + 84))
      v26 = *(_QWORD *)(v16 + 64);
    else
      v26 = *(_QWORD *)(v16 + 64) + 1;
    if (((v26 + v25) & ~v25) + *(_QWORD *)(v19 + 64) <= 8)
      v27 = 8;
    else
      v27 = ((v26 + v25) & ~v25) + *(_QWORD *)(v19 + 64);
    v28 = *((unsigned __int8 *)v22 + v27);
    if (v28 >= 2)
    {
      if (v27 <= 3)
        v29 = v27;
      else
        v29 = 4;
      __asm { BR              X12 }
    }
    v34 = ~v25;
    if (v28 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v22, 1, v15))
        (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v22, v15);
      (*(void (**)(unint64_t, uint64_t))(v19 + 8))(((unint64_t)v22 + v25 + v26) & v34, v24);
    }
    else
    {
      swift_release();
    }
    v30 = *((unsigned __int8 *)v23 + v27);
    if (v30 >= 2)
    {
      if (v27 <= 3)
        v31 = v27;
      else
        v31 = 4;
      __asm { BR              X12 }
    }
    if (v30 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v23, 1, v15))
      {
        memcpy(v22, v23, v26);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 32))(v22, v23, v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 32))(((unint64_t)v22 + v25 + v26) & v34, ((unint64_t)v23 + v25 + v26) & v34, v24);
      v32 = 1;
    }
    else
    {
      v32 = 0;
      *v22 = *v23;
    }
    *((_BYTE *)v22 + v27) = v32;
  }
  return a1;
}

uint64_t sub_24174CA90(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  unsigned int v24;
  int v25;
  unint64_t v26;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(sub_2418A8EB0() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(sub_2418A87B4() - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  if (v10)
    v15 = v11;
  else
    v15 = v11 + 1;
  v16 = ((v15 + v13) & ~(unint64_t)v13) + v14;
  v17 = 8;
  if (v16 > 8)
    v17 = v16;
  if (!a2)
    return 0;
  v18 = *(unsigned __int8 *)(v6 + 80);
  if (a2 <= v8)
    goto LABEL_27;
  v19 = (*(_DWORD *)(v9 + 80) | v13) & 0xF8 | 7u;
  v20 = v17 + ((((v18 + 80) & ~v18) + *(_QWORD *)(v6 + 64) + v19) & ~v19) + 1;
  v21 = 8 * v20;
  if (v20 <= 3)
  {
    v24 = ((a2 - v8 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v24))
    {
      v22 = *(_DWORD *)(a1 + v20);
      if (!v22)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v24 > 0xFF)
    {
      v22 = *(unsigned __int16 *)(a1 + v20);
      if (!*(_WORD *)(a1 + v20))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v24 < 2)
    {
LABEL_27:
      if (v7 > 0x7FFFFFFE)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))((a1 + v18 + 80) & ~v18, v7, v5);
      v26 = *(_QWORD *)(a1 + 8);
      if (v26 >= 0xFFFFFFFF)
        LODWORD(v26) = -1;
      if ((v26 + 1) >= 2)
        return v26;
      else
        return 0;
    }
  }
  v22 = *(unsigned __int8 *)(a1 + v20);
  if (!*(_BYTE *)(a1 + v20))
    goto LABEL_27;
LABEL_20:
  v25 = (v22 - 1) << v21;
  if (v20 > 3)
    v25 = 0;
  if ((_DWORD)v20)
  {
    if (v20 > 3)
      LODWORD(v20) = 4;
    __asm { BR              X11 }
  }
  return v8 + v25 + 1;
}

void sub_24174CCA8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  size_t v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFEu)
    v8 = 2147483646;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_2418A8EB0() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(sub_2418A87B4() - 8);
  v13 = (*(_DWORD *)(v9 + 80) | *(_DWORD *)(v12 + 80)) & 0xF8 | 7u;
  v14 = (((*(unsigned __int8 *)(v7 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
       + *(_QWORD *)(v7 + 64)
       + v13) & ~v13;
  if (v10)
    v15 = v11;
  else
    v15 = v11 + 1;
  v16 = ((v15 + *(_DWORD *)(v12 + 80)) & ~(unint64_t)*(_DWORD *)(v12 + 80))
      + *(_QWORD *)(v12 + 64);
  if (v16 <= 8)
    v16 = 8;
  v17 = v16 + v14 + 1;
  if (a3 <= v8)
  {
    v18 = 0;
  }
  else if (v17 <= 3)
  {
    v20 = ((a3 - v8 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v20))
    {
      v18 = 4u;
    }
    else if (v20 >= 0x100)
    {
      v18 = 2;
    }
    else
    {
      v18 = v20 > 1;
    }
  }
  else
  {
    v18 = 1u;
  }
  if (v8 < a2)
  {
    v19 = ~v8 + a2;
    if (v17 < 4)
    {
      if ((_DWORD)v17)
      {
        v21 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if ((_DWORD)v17 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if ((_DWORD)v17 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t type metadata accessor for StateOfMindEntryPhase_iOS(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateOfMindEntryPhase_iOS);
}

uint64_t sub_24174CF60()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24174CF94(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[2];
  _QWORD v40[2];

  v28 = a2;
  v29 = sub_2418A993C();
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v3);
  v26 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(a1 + 16);
  v5 = sub_2418A87FC();
  v6 = sub_2418A87FC();
  v7 = sub_2418A87FC();
  v8 = sub_2418A87FC();
  v9 = sub_2418A87FC();
  v25 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_24172570C(255, &qword_25714CE30, (uint64_t (*)(uint64_t))sub_24174DA60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = v11;
  v22 = v11;
  v23 = *(_QWORD *)(a1 + 24);
  v13 = MEMORY[0x24BDEDBB8];
  v40[0] = v23;
  v40[1] = MEMORY[0x24BDEDBB8];
  v14 = MEMORY[0x24BDED308];
  v15 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v5, v40);
  v16 = MEMORY[0x24BDECC60];
  v39[0] = v15;
  v39[1] = MEMORY[0x24BDECC60];
  v38[0] = MEMORY[0x24269D47C](v14, v6, v39);
  v38[1] = v16;
  v37[0] = MEMORY[0x24269D47C](v14, v7, v38);
  v37[1] = v16;
  v36[0] = MEMORY[0x24269D47C](v14, v8, v37);
  v36[1] = v13;
  v21 = v9;
  v17 = MEMORY[0x24269D47C](v14, v9, v36);
  v20 = v17;
  v19 = sub_24174DC18();
  v30 = v9;
  v31 = v12;
  v32 = v29;
  v33 = v17;
  v34 = v19;
  v35 = MEMORY[0x24BDF4E40];
  type metadata accessor for ScrollableWithPinnedFooter();
}

void sub_24174D1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  *(_QWORD *)(v11 - 328) = *(_QWORD *)(a1 - 8);
  v12 = MEMORY[0x24BDAC7A8](a1, a2);
  v14 = (char *)&a9 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v16 = v10;
  v17 = *(_QWORD *)(v11 - 312);
  *(_QWORD *)(v11 - 192) = type metadata accessor for AssociationSelectionPhaseSpecs();
  *(_QWORD *)(v11 - 184) = &off_2511B05C8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v11 - 216));
  sub_241861594((uint64_t)boxed_opaque_existential_1);
  v19 = v9;
  v20 = *(_QWORD *)(v11 - 304);
  v21 = *(_QWORD *)(v11 - 320);
  sub_2417E5920((_QWORD *)(v11 - 216), v21, v19);
  __swift_destroy_boxed_opaque_existential_1(v11 - 216);
  v23 = sub_24174D3C8(v16, v22);
  *(_QWORD *)(v11 - 240) = v20;
  *(_QWORD *)(v11 - 232) = v21;
  *(_QWORD *)(v11 - 224) = v17;
  v24 = *(_QWORD *)(v11 - 288);
  sub_2418A9930();
  sub_2417D904C(v23 & 1, v24, (uint64_t)sub_24174DD04, v11 - 256, *(_QWORD *)(v11 - 344), *(_QWORD *)(v11 - 336), *(_QWORD *)(v11 - 264), *(_QWORD *)(v11 - 352), v14, *(_QWORD *)(v11 - 360), MEMORY[0x24BDF4E40]);
}

uint64_t sub_24174D310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 280) + 8))(v2, v0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 296) + 8))(v3, v4);
  MEMORY[0x24269D47C](&unk_2418D6370, v6);
  sub_2417DA924(v1, v6, v5);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 328) + 8);
  v8(v1, v6);
  sub_2417D8FF8(v5, v6, *(_QWORD *)(v7 - 272));
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v6);
}

uint64_t sub_24174D3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;

  v3 = v2;
  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (_QWORD *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for AssociationSelectionPhaseSpecs();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241861594((uint64_t)v11);
  v12 = sub_2418A879C();
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v7, v3, a1);
  if ((v12 & 1) != 0)
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, a1);
  }
  else
  {
    v13 = *v7;
    v14 = v7[1];
    v15 = v7[5];
    v17[2] = v7[2];
    v18 = v13;
    v17[1] = v15;
    sub_24174DF3C(v13, v14);
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, a1);
    if (v14)
    {
      sub_24174DD14(v18, v14);
      return 1;
    }
  }
  return 0;
}

uint64_t sub_24174D558@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_24174DA60(0, a2, a3, a4);
  v10 = v9;
  MEMORY[0x24BDAC7A8](v9, v11);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[1];
  if (!v16)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a5, 1, 1, v10);
  v17 = a1[8];
  v18 = a1[9];
  v35 = a5;
  v19 = a1[6];
  v20 = a1[7];
  v32[0] = v17;
  v32[1] = v19;
  v21 = a1[5];
  v34 = a1[4];
  v23 = a1[2];
  v22 = a1[3];
  v24 = *a1;
  v32[2] = v21;
  v33 = v24;
  v36[0] = v24;
  v36[1] = v16;
  v36[2] = v23;
  v36[3] = v22;
  v36[4] = v34;
  v37 = v21 & 1;
  v38 = v19;
  v39 = v20;
  v40 = v17;
  v41 = v18;
  v25 = a3;
  v26 = v13;
  type metadata accessor for StateOfMindEntryPhase_iOS(0, a2, v25, v12);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24174D74C((uint64_t)v36);
  v27 = (uint64_t *)&v15[*(int *)(v10 + 36)];
  *v27 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  sub_24174DD14(v33, v16);
  v28 = v35;
  sub_24174DD70((uint64_t)v15, v35, v29, v30);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v10);
}

uint64_t sub_24174D74C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  _UNKNOWN **v19;
  _QWORD v20[2];
  _QWORD v21[8];
  char v22;
  uint64_t (*v23)@<X0>(uint64_t@<X8>);
  _OWORD *v24;
  uint64_t v25;
  char v26;
  _QWORD v27[2];

  v27[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v25 = *(_QWORD *)(a1 + 32);
  v26 = *(_BYTE *)(a1 + 40);
  v27[0] = v3;
  v18 = type metadata accessor for AssociationSelectionPhaseSpecs();
  v19 = &off_2511B05C8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
  sub_24174DDB4((uint64_t)v27);
  swift_retain();
  sub_241861594((uint64_t)boxed_opaque_existential_1);
  v5 = (_OWORD *)swift_allocObject();
  v6 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v6;
  v5[5] = *(_OWORD *)(a1 + 64);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = (_OWORD *)swift_allocObject();
  v9 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v9;
  v8[5] = *(_OWORD *)(a1 + 64);
  v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  v21[5] = v3;
  v21[6] = v2;
  v21[7] = v25;
  v22 = v26;
  sub_24174DE50(&v17, (uint64_t)v21);
  v20[0] = sub_24174DDE0;
  v20[1] = v5;
  v23 = sub_24174DE48;
  v24 = v8;
  sub_24174DEF4(0, (unint64_t *)&qword_2543915E0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D23E0;
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(inited + 32) = v17;
  sub_24174DE68(a1);
  sub_24174DE68(a1);
  sub_24174DECC((uint64_t)&v17);
  v12 = swift_bridgeObjectRetain();
  sub_2417739BC(v12);
  sub_24174DEF4(0, (unint64_t *)&qword_2543915D0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24174DB24(0, v13, v14, v15);
  sub_24172159C((unint64_t *)&qword_25714CE58, (uint64_t (*)(uint64_t))sub_24174DB24, (uint64_t)&unk_2418DA5E8);
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  return sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))sub_24174DB24);
}

uint64_t sub_24174D9F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_241721040();
  swift_bridgeObjectRetain();
  result = sub_2418A92D0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

void sub_24174DA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (!qword_25714CE38)
  {
    sub_24174DAC0(255, a2, a3, a4);
    v6 = v5;
    v10 = sub_24174DB80(v5, v7, v8, v9);
    v12 = type metadata accessor for StateOfMindEntryButtonTray(a1, v6, v10, v11);
    if (!v13)
      atomic_store(v12, (unint64_t *)&qword_25714CE38);
  }
}

void sub_24174DAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_25714CE40)
  {
    sub_24174DB24(255, a2, a3, a4);
    sub_2418A909C();
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714CE40);
  }
}

void sub_24174DB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_25714CE48)
  {
    v4 = type metadata accessor for ActionButton(0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714CE48);
  }
}

unint64_t sub_24174DB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  result = qword_25714CE50;
  if (!qword_25714CE50)
  {
    sub_24174DAC0(255, a2, a3, a4);
    v6 = v5;
    v7[0] = sub_24172159C((unint64_t *)&qword_25714CE58, (uint64_t (*)(uint64_t))sub_24174DB24, (uint64_t)&unk_2418DA5E8);
    v7[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, (unint64_t *)&qword_25714CE50);
  }
  return result;
}

unint64_t sub_24174DC18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_25714CE60;
  if (!qword_25714CE60)
  {
    sub_24172570C(255, &qword_25714CE30, (uint64_t (*)(uint64_t))sub_24174DA60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v2 = v1;
    v3 = sub_24172159C(&qword_25714CE68, (uint64_t (*)(uint64_t))sub_24174DA60, (uint64_t)&unk_2418D4EF0);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5578], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_25714CE60);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_24174DD04@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24174D558(*(uint64_t **)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_24174DD14(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24174DD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  sub_24174DA60(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_24174DDB4(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_24174DDE0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t objectdestroyTm_0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24174DE48@<X0>(uint64_t a1@<X8>)
{
  return sub_24174D9F4(a1);
}

uint64_t sub_24174DE50(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24174DE68(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24174DECC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void sub_24174DEF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE0D00]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_24174DF3C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24269D3E0](a1, v6, a5);
}

uint64_t destroy for StateOfMindEntryPhaseButtonConfiguration()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for StateOfMindEntryPhaseButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StateOfMindEntryPhaseButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for StateOfMindEntryPhaseButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateOfMindEntryPhaseButtonConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindEntryPhaseButtonConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryPhaseButtonConfiguration()
{
  return &type metadata for StateOfMindEntryPhaseButtonConfiguration;
}

void sub_24174E2B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2418A87FC();
  v3 = sub_2418A87FC();
  v4 = sub_2418A87FC();
  v5 = sub_2418A87FC();
  v6 = sub_2418A87FC();
  sub_24172570C(255, &qword_25714CE30, (uint64_t (*)(uint64_t))sub_24174DA60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2418A993C();
  v7 = MEMORY[0x24BDEDBB8];
  v15[0] = v1;
  v15[1] = MEMORY[0x24BDEDBB8];
  v8 = MEMORY[0x24BDED308];
  v9 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v15);
  v10 = MEMORY[0x24BDECC60];
  v14[0] = v9;
  v14[1] = MEMORY[0x24BDECC60];
  v13[0] = MEMORY[0x24269D47C](v8, v3, v14);
  v13[1] = v10;
  v12[0] = MEMORY[0x24269D47C](v8, v4, v13);
  v12[1] = v10;
  v11[0] = MEMORY[0x24269D47C](v8, v5, v12);
  v11[1] = v7;
  MEMORY[0x24269D47C](v8, v6, v11);
  sub_24174DC18();
  type metadata accessor for ScrollableWithPinnedFooter();
}

uint64_t sub_24174E418(uint64_t a1)
{
  return MEMORY[0x24269D47C](&unk_2418D6370, a1);
}

uint64_t *sub_24174E448(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)((char *)a2 + v8);
    *((_WORD *)v9 + 8) = *(_WORD *)((char *)a2 + v8 + 16);
    v11 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
    __dst = &v9[v11];
    v12 = &v10[v11];
    v13 = sub_2418A7EC0();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v16 = v7;
    if (v15(v12, 1, v13))
    {
      sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    *(_QWORD *)&v9[*(int *)(v19 + 28)] = *(_QWORD *)&v10[*(int *)(v19 + 28)];
    v20 = *(int *)(a3 + 24);
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    *v21 = *v22;
    *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24174E5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = v4 + *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v6 = sub_2418A7EC0();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  swift_release();
  return swift_release();
}

_QWORD *sub_24174E6A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v5 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  *((_WORD *)v7 + 8) = *(_WORD *)((char *)a2 + v6 + 16);
  v9 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_2418A7EC0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v5;
  if (v14(v11, 1, v12))
  {
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v7[*(int *)(v17 + 28)] = *(_QWORD *)&v8[*(int *)(v17 + 28)];
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *v19 = *v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_24174E814(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v26;

  *a1 = *a2;
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = v6;
  v8 = v6;

  v26 = a3;
  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)((char *)a2 + v9);
  *((_QWORD *)v10 + 1) = *(_QWORD *)((char *)a2 + v9 + 8);
  v10[16] = *((_BYTE *)a2 + v9 + 16);
  v10[17] = *((_BYTE *)a2 + v9 + 17);
  v12 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v13 = &v10[v12];
  v14 = &v11[v12];
  v15 = sub_2418A7EC0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v10[*(int *)(v21 + 28)] = *(_QWORD *)&v11[*(int *)(v21 + 28)];
  swift_retain();
  swift_release();
  v22 = *(int *)(v26 + 24);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *v23 = *v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_24174EA00(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  *((_WORD *)v7 + 8) = *(_WORD *)((char *)a2 + v6 + 16);
  v9 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_2418A7EC0();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v7[*(int *)(v15 + 28)] = *(_QWORD *)&v8[*(int *)(v15 + 28)];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_24174EB44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v25;

  v6 = a2[1];
  v7 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v6;

  v25 = a3;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  *(_OWORD *)v9 = *(_OWORD *)((char *)a2 + v8);
  v9[16] = *((_BYTE *)a2 + v8 + 16);
  v9[17] = *((_BYTE *)a2 + v8 + 17);
  v11 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v12 = &v9[v11];
  v13 = &v10[v11];
  v14 = sub_2418A7EC0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v9[*(int *)(v20 + 28)] = *(_QWORD *)&v10[*(int *)(v20 + 28)];
  swift_release();
  v21 = *(int *)(v25 + 24);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *v22 = *v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_release();
  return a1;
}

uint64_t sub_24174ED0C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24174ED18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_24174EDAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24174EDB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CustomReminderRow()
{
  uint64_t result;

  result = qword_25714CED8;
  if (!qword_25714CED8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24174EE80()
{
  unint64_t v0;

  sub_24172570C(319, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24174EF14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24174EF24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  uint64_t inited;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  void *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v70 = a1;
  v81 = *MEMORY[0x24BDAC8D0];
  v2 = type metadata accessor for CustomReminderModel();
  MEMORY[0x24BDAC7A8](v2, v3);
  v67 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_2418A88A4();
  v66 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72, v5);
  v65 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CustomReminderRow();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = v7;
  v62 = v7;
  v10 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7, v11);
  v12 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241750658();
  v59 = v13;
  v60 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241750D94(0);
  v64 = v17;
  v63 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v18);
  v58 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241750E68();
  v71 = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v61 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241750EE4(0);
  v68 = v23;
  v69 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v24);
  v73 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417289A8(v1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderRow);
  v26 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v27 = swift_allocObject();
  sub_241731B4C((uint64_t)v12, v27 + v26, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderRow);
  v74 = v1;
  sub_2417506B8();
  sub_241750CAC();
  sub_2418A9708();
  v28 = v1 + *(int *)(v9 + 24);
  v29 = *(_BYTE *)v28;
  v30 = *(_QWORD *)(v28 + 8);
  LOBYTE(v79) = v29;
  v80 = v30;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  sub_2417289A8(v1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderRow);
  v31 = swift_allocObject();
  sub_241731B4C((uint64_t)v12, v31 + v26, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderRow);
  type metadata accessor for CustomReminderView(0);
  sub_24172159C(&qword_25714CFE8, (uint64_t (*)(uint64_t))sub_241750658, MEMORY[0x24BDF43B0]);
  sub_24172159C(&qword_25714CFF0, type metadata accessor for CustomReminderView, (uint64_t)&unk_2418D4F88);
  v32 = v58;
  v33 = v59;
  sub_2418A94D4();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v33);
  v34 = *(void **)(v1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  v35 = v34;
  sub_2418A8418();

  swift_release();
  swift_release();
  LOBYTE(v35) = (_BYTE)v75;
  KeyPath = swift_getKeyPath();
  v37 = swift_allocObject();
  *(_BYTE *)(v37 + 16) = (_BYTE)v35;
  v38 = v63;
  v39 = (uint64_t)v61;
  v40 = v32;
  v41 = v32;
  v42 = v64;
  (*(void (**)(char *, char *, unint64_t))(v63 + 16))(v61, v41, v64);
  v43 = (uint64_t *)(v39 + v71[9]);
  *v43 = KeyPath;
  v43[1] = (uint64_t)sub_241751224;
  v43[2] = v37;
  (*(void (**)(char *, unint64_t))(v38 + 8))(v40, v42);
  v44 = v65;
  sub_2418A8898();
  v64 = sub_241750F9C();
  v63 = sub_24172159C(&qword_25714D010, (uint64_t (*)(uint64_t))MEMORY[0x24BDED868], MEMORY[0x24BDED858]);
  v45 = v72;
  sub_2418A930C();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v44, v45);
  sub_24172588C(v39, (uint64_t (*)(_QWORD))sub_241750E68);
  sub_24172887C(0, (unint64_t *)&qword_2543915E0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D1940;
  *(_QWORD *)(inited + 32) = 0xD000000000000014;
  *(_QWORD *)(inited + 40) = 0x80000002418DBDE0;
  v75 = 0;
  v76 = 0xE000000000000000;
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  v47 = (uint64_t *)v67;
  sub_2418A96CC();
  v48 = *v47;
  sub_24172588C((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  v79 = v48;
  v49 = sub_2418AA4AC();
  v51 = v50;
  swift_bridgeObjectRelease();
  v75 = (void *)v49;
  v76 = v51;
  sub_2418A9E40();
  sub_2418A96CC();
  v52 = *v47;
  sub_24172588C((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  v79 = v52;
  sub_2418AA4AC();
  sub_2418A9E40();
  swift_bridgeObjectRelease();
  v53 = v76;
  *(_QWORD *)(inited + 48) = v75;
  *(_QWORD *)(inited + 56) = v53;
  v75 = &unk_2511AB450;
  v54 = swift_bridgeObjectRetain();
  sub_2417739BC(v54);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v75 = v71;
  v76 = v72;
  v77 = v64;
  v78 = v63;
  swift_getOpaqueTypeConformance2();
  v55 = v68;
  v56 = v73;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v56, v55);
}

uint64_t sub_24174F730()
{
  type metadata accessor for CustomReminderRow();
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  swift_retain();
  sub_2418A96CC();
  sub_2418A96D8();
  return swift_release();
}

uint64_t sub_24174F7E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_24175073C(0, &qword_25714CF28, &qword_25714CF30, (uint64_t (*)(uint64_t))sub_2417507CC, &qword_25714CFB0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - v6;
  *(_QWORD *)v7 = sub_2418A8B8C();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  sub_241751290();
  sub_24174F8B0(a1, &v7[*(int *)(v8 + 44)]);
  sub_24175130C((uint64_t)v7, a2);
  sub_2417506B8();
  *(_BYTE *)(a2 + *(int *)(v9 + 36)) = 0;
  return sub_241751370((uint64_t)v7);
}

uint64_t sub_24174F8B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _BYTE v50[288];
  _BYTE v51[304];
  _QWORD v52[39];
  char v53;
  _BYTE v54[312];
  _QWORD v55[2];
  char v56;
  _BYTE v57[295];
  _BYTE v58[320];
  _BYTE v59[319];
  _QWORD v60[44];
  _QWORD v61[2];
  char v62;
  _BYTE v63[319];
  uint64_t v64;
  char v65;

  v49 = a2;
  sub_24172570C(0, &qword_25714CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  v43 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (uint64_t *)((char *)&v39 - v5);
  v7 = sub_2418A9684();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241750AD4();
  v42 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241750A60(0);
  v47 = *(_QWORD *)(v16 - 8);
  v48 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v40 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417509DC();
  v46 = v19;
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v44 = (uint64_t)&v39 - v25;
  v45 = sub_2418A8B8C();
  v26 = sub_2418A8C58();
  sub_24174FD58(a1, v50);
  v51[296] = 1;
  memcpy(&v51[7], v50, 0x120uLL);
  v52[0] = v26;
  v52[1] = 0;
  LOBYTE(v52[2]) = 1;
  memcpy((char *)&v52[2] + 1, v51, 0x127uLL);
  memcpy(v54, v52, sizeof(v54));
  v53 = 1;
  v55[0] = v26;
  v55[1] = 0;
  v56 = 1;
  memcpy(v57, v51, sizeof(v57));
  sub_2417513CC((uint64_t)v52);
  sub_24175143C((uint64_t)v55);
  v58[319] = 1;
  memcpy(&v58[7], v54, 0x138uLL);
  v41 = 1;
  memcpy(v59, v58, sizeof(v59));
  v27 = sub_2418A9660();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BDF40B0], v7);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v43 + 28), v11, v7);
  *v6 = KeyPath;
  sub_2417514B4((uint64_t)v6, (uint64_t)v15 + *(int *)(v42 + 36));
  *v15 = v27;
  swift_retain();
  sub_241751510((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  swift_release();
  sub_2418A9198();
  sub_241750B48();
  v29 = v40;
  sub_2418A9300();
  sub_24172588C((uint64_t)v15, (uint64_t (*)(_QWORD))sub_241750AD4);
  v30 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  v31 = MEMORY[0x24269BDB4](v30);
  v33 = v47;
  v32 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v23, v29, v48);
  *(_QWORD *)&v23[*(int *)(v46 + 36)] = v31;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v32);
  v34 = v44;
  sub_241731B4C((uint64_t)v23, v44, (uint64_t (*)(_QWORD))sub_2417509DC);
  sub_2417289A8(v34, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417509DC);
  v35 = v45;
  v60[0] = v45;
  v60[1] = 0;
  LOBYTE(v27) = v41;
  LOBYTE(v60[2]) = v41;
  memcpy((char *)&v60[2] + 1, v59, 0x13FuLL);
  v60[42] = 0;
  LOBYTE(v60[43]) = 1;
  v36 = v49;
  memcpy(v49, v60, 0x159uLL);
  v36[44] = 0;
  *((_BYTE *)v36 + 360) = 1;
  sub_2417507CC();
  sub_2417289A8((uint64_t)v23, (uint64_t)v36 + *(int *)(v37 + 64), (uint64_t (*)(_QWORD))sub_2417509DC);
  sub_241751564((uint64_t)v60);
  sub_24172588C(v34, (uint64_t (*)(_QWORD))sub_2417509DC);
  sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417509DC);
  v61[0] = v35;
  v61[1] = 0;
  v62 = v27;
  memcpy(v63, v59, sizeof(v63));
  v64 = 0;
  v65 = 1;
  return sub_2417515D4((uint64_t)v61);
}

uint64_t sub_24174FD58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  _OWORD v88[9];
  _OWORD v89[9];
  _OWORD v90[18];
  _OWORD v91[9];
  _OWORD v92[10];

  v68 = a1;
  v69 = a2;
  v3 = sub_2418A7F80();
  v64 = *(_QWORD *)(v3 - 8);
  v65 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_2418A7F98();
  v7 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63, v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2418A8100();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CustomReminderModel();
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = a1 + *(int *)(type metadata accessor for CustomReminderRow() + 20);
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  v66 = v20;
  sub_2418A96CC();
  sub_2417A6608((uint64_t)v15);
  sub_2418A7F8C();
  sub_2418A7F74();
  v21 = sub_2418A80DC();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v6, v65);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v63);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  *(_QWORD *)&v90[0] = v21;
  *((_QWORD *)&v90[0] + 1) = v23;
  sub_241721040();
  v24 = sub_2418A92D0();
  v26 = v25;
  v28 = v27;
  LOBYTE(v10) = v29 & 1;
  v30 = sub_2418A996C();
  sub_24185E094(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v90, 0.0, 1, 0.0, 1, v30, v31, v24, v26, (char)v10, v28);
  sub_2417289EC(v24, v26, (char)v10);
  swift_bridgeObjectRelease();
  v85 = v90[6];
  v86 = v90[7];
  v87 = v90[8];
  v81 = v90[2];
  v82 = v90[3];
  v83 = v90[4];
  v84 = v90[5];
  v79 = v90[0];
  v80 = v90[1];
  sub_2418A96CC();
  v32 = *(void **)(v68 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  v33 = v32;
  sub_2418A8418();

  swift_release();
  swift_release();
  v34 = sub_2417A64C8(v90[0]);
  v36 = v35;
  sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  *(_QWORD *)&v90[0] = v34;
  *((_QWORD *)&v90[0] + 1) = v36;
  v37 = sub_2418A92D0();
  v39 = v38;
  LOBYTE(v10) = v40 & 1;
  sub_2418A912C();
  v41 = sub_2418A9294();
  v43 = v42;
  LOBYTE(v6) = v44;
  swift_release();
  sub_2417289EC(v37, v39, (char)v10);
  swift_bridgeObjectRelease();
  LODWORD(v90[0]) = sub_2418A8E74();
  v45 = sub_2418A9270();
  v47 = v46;
  v49 = v48;
  LOBYTE(v10) = v50 & 1;
  sub_2417289EC(v41, v43, v6 & 1);
  swift_bridgeObjectRelease();
  v51 = sub_2418A996C();
  sub_24185E094(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v90, 0.0, 1, 0.0, 1, v51, v52, v45, v47, (char)v10, v49);
  sub_2417289EC(v45, v47, (char)v10);
  swift_bridgeObjectRelease();
  v76 = v90[6];
  v77 = v90[7];
  v78 = v90[8];
  v72 = v90[2];
  v73 = v90[3];
  v74 = v90[4];
  v75 = v90[5];
  v70 = v90[0];
  v71 = v90[1];
  v88[6] = v85;
  v88[7] = v86;
  v88[8] = v87;
  v88[2] = v81;
  v88[3] = v82;
  v88[4] = v83;
  v88[5] = v84;
  v88[0] = v79;
  v88[1] = v80;
  v53 = v90[6];
  v54 = v90[7];
  v89[6] = v90[6];
  v89[7] = v90[7];
  v89[8] = v90[8];
  v55 = v90[2];
  v56 = v90[3];
  v89[2] = v90[2];
  v89[3] = v90[3];
  v58 = v90[4];
  v57 = v90[5];
  v89[4] = v90[4];
  v89[5] = v90[5];
  v60 = v90[0];
  v59 = v90[1];
  v89[0] = v90[0];
  v89[1] = v90[1];
  v90[6] = v85;
  v90[7] = v86;
  v90[2] = v81;
  v90[3] = v82;
  v90[4] = v83;
  v90[5] = v84;
  v90[0] = v79;
  v90[1] = v80;
  v90[14] = v57;
  v90[15] = v53;
  v90[16] = v54;
  v90[17] = v90[8];
  v90[10] = v59;
  v90[11] = v55;
  v90[12] = v56;
  v90[13] = v58;
  v90[8] = v87;
  v90[9] = v60;
  memcpy(v69, v90, 0x120uLL);
  v91[6] = v76;
  v91[7] = v77;
  v91[8] = v78;
  v91[2] = v72;
  v91[3] = v73;
  v91[5] = v75;
  v91[4] = v74;
  v91[0] = v70;
  v91[1] = v71;
  sub_241751644((uint64_t)v88);
  sub_241751644((uint64_t)v89);
  sub_241751680((uint64_t)v91);
  v92[6] = v85;
  v92[7] = v86;
  v92[8] = v87;
  v92[2] = v81;
  v92[3] = v82;
  v92[4] = v83;
  v92[5] = v84;
  v92[0] = v79;
  v92[1] = v80;
  return sub_241751680((uint64_t)v92);
}

uint64_t sub_241750318@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v38 = (_QWORD *)((char *)v34 - v6);
  v37 = sub_2418A8100();
  v41 = *(_QWORD *)(v37 - 8);
  v8 = MEMORY[0x24BDAC7A8](v37, v7);
  v40 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v34 - v11;
  v39 = type metadata accessor for CustomReminderModel();
  v14 = MEMORY[0x24BDAC7A8](v39, v13);
  v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v34 - v18;
  v20 = *(void **)(a1 + 8);
  v21 = type metadata accessor for CustomReminderRow();
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  v34[1] = v20;
  sub_2418A96CC();
  sub_2418A96CC();
  sub_2417A6608((uint64_t)v12);
  sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  v22 = (char *)(a1 + *(int *)(v21 + 24));
  v23 = *v22;
  v24 = *((_QWORD *)v22 + 1);
  v42 = v23;
  v43 = v24;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  v35 = v45;
  v36 = v44;
  LOBYTE(v21) = v46;
  KeyPath = swift_getKeyPath();
  v26 = (uint64_t)v38;
  *v38 = KeyPath;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for NotificationSettingsModel();
  sub_24172159C((unint64_t *)&qword_25714D020, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsModel, (uint64_t)&protocol conformance descriptor for NotificationSettingsModel);
  *a2 = sub_2418A8760();
  a2[1] = v27;
  v28 = type metadata accessor for CustomReminderView(0);
  sub_2417289A8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  sub_2418A96C0();
  sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  v29 = v41;
  v30 = v37;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v40, v12, v37);
  sub_2418A96C0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v30);
  v31 = (char *)a2 + *(int *)(v28 + 28);
  v32 = v35;
  *(_QWORD *)v31 = v36;
  *((_QWORD *)v31 + 1) = v32;
  v31[16] = v21;
  return sub_241751234(v26, (uint64_t)a2 + *(int *)(v28 + 32));
}

void sub_241750658()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CF18)
  {
    sub_2417506B8();
    sub_241750CAC();
    v0 = sub_2418A9720();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CF18);
  }
}

void sub_2417506B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CF20)
  {
    sub_24175073C(255, &qword_25714CF28, &qword_25714CF30, (uint64_t (*)(uint64_t))sub_2417507CC, &qword_25714CFB0);
    sub_241750C10();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CF20);
  }
}

void sub_24175073C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_24172570C(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417406BC(a5, a3, a4);
    v9 = sub_2418A972C();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2417507CC()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714CF38)
  {
    sub_24175073C(255, &qword_25714CF40, &qword_25714CF48, (uint64_t (*)(uint64_t))sub_241750860, &qword_25714CF78);
    sub_2417509DC();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714CF38);
  }
}

void sub_241750860()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714CF50)
  {
    sub_2417508C4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714CF50);
  }
}

void sub_2417508C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CF58)
  {
    sub_24172570C(255, &qword_25714CF60, (uint64_t (*)(uint64_t))sub_24175095C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417406BC(&qword_25714CF70, &qword_25714CF60, (uint64_t (*)(uint64_t))sub_24175095C);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CF58);
  }
}

void sub_24175095C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714CF68)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C9B0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714CF68);
  }
}

void sub_2417509DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CF80)
  {
    sub_241750A60(255);
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CF80);
  }
}

void sub_241750A60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714CF88)
  {
    sub_241750AD4();
    v5[0] = v2;
    v5[1] = sub_241750B48();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2150], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714CF88);
  }
}

void sub_241750AD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CF90)
  {
    sub_24172570C(255, &qword_25714CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CF90);
  }
}

unint64_t sub_241750B48()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  result = qword_25714CFA0;
  if (!qword_25714CFA0)
  {
    sub_241750AD4();
    v2 = v1;
    v3 = sub_241750BB0();
    v4[0] = MEMORY[0x24BDF40E8];
    v4[1] = v3;
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_25714CFA0);
  }
  return result;
}

unint64_t sub_241750BB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714CFA8;
  if (!qword_25714CFA8)
  {
    sub_24172570C(255, &qword_25714CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_25714CFA8);
  }
  return result;
}

void sub_241750C10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CFB8)
  {
    sub_241750C68();
    v0 = sub_2418A8E44();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CFB8);
  }
}

unint64_t sub_241750C68()
{
  unint64_t result;

  result = qword_25714CFC0;
  if (!qword_25714CFC0)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF52E0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_25714CFC0);
  }
  return result;
}

unint64_t sub_241750CAC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CFC8;
  if (!qword_25714CFC8)
  {
    sub_2417506B8();
    v2 = v1;
    v3[0] = sub_241750D2C();
    v3[1] = sub_24172159C(&qword_25714CFD8, (uint64_t (*)(uint64_t))sub_241750C10, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CFC8);
  }
  return result;
}

unint64_t sub_241750D2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714CFD0;
  if (!qword_25714CFD0)
  {
    sub_24175073C(255, &qword_25714CF28, &qword_25714CF30, (uint64_t (*)(uint64_t))sub_2417507CC, &qword_25714CFB0);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4498], v1);
    atomic_store(result, (unint64_t *)&qword_25714CFD0);
  }
  return result;
}

void sub_241750D94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_25714CFE0)
  {
    sub_241750658();
    v5[0] = v2;
    v5[1] = type metadata accessor for CustomReminderView(255);
    v5[2] = sub_24172159C(&qword_25714CFE8, (uint64_t (*)(uint64_t))sub_241750658, MEMORY[0x24BDF43B0]);
    v5[3] = sub_24172159C(&qword_25714CFF0, type metadata accessor for CustomReminderView, (uint64_t)&unk_2418D4F88);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF3650], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714CFE0);
  }
}

void sub_241750E68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CFF8)
  {
    sub_241750D94(255);
    sub_24172887C(255, &qword_25714C860, MEMORY[0x24BEE1328], MEMORY[0x24BDF1230]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CFF8);
  }
}

void sub_241750EE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_25714D000)
  {
    sub_241750E68();
    v3 = v2;
    v4 = sub_2418A88A4();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
    v8[0] = v3;
    v8[1] = v4;
    v8[2] = sub_241750F9C();
    v8[3] = sub_24172159C(&qword_25714D010, v5, MEMORY[0x24BDED858]);
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF22B8], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_25714D000);
  }
}

unint64_t sub_241750F9C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_25714D008;
  if (!qword_25714D008)
  {
    sub_241750E68();
    v2 = v1;
    sub_241750658();
    v4[2] = v3;
    v4[3] = type metadata accessor for CustomReminderView(255);
    v4[4] = sub_24172159C(&qword_25714CFE8, (uint64_t (*)(uint64_t))sub_241750658, MEMORY[0x24BDF43B0]);
    v4[5] = sub_24172159C(&qword_25714CFF0, type metadata accessor for CustomReminderView, (uint64_t)&unk_2418D4F88);
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_24173E43C();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_25714D008);
  }
  return result;
}

uint64_t sub_24175108C()
{
  type metadata accessor for CustomReminderRow();
  return sub_24174F730();
}

uint64_t sub_2417510B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24174F7E8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for CustomReminderRow();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);

  v4 = v3 + *(int *)(v1 + 20);
  v5 = v4 + *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v6 = sub_2418A7EC0();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2417511C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CustomReminderRow() - 8) + 80);
  return sub_241750318(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_241751214()
{
  return swift_deallocObject();
}

_BYTE *sub_241751224(_BYTE *a1)
{
  uint64_t v1;

  return sub_24173FD3C(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_241751234(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241751290()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D028)
  {
    sub_24172570C(255, &qword_25714CF30, (uint64_t (*)(uint64_t))sub_2417507CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D028);
  }
}

uint64_t sub_24175130C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24175073C(0, &qword_25714CF28, &qword_25714CF30, (uint64_t (*)(uint64_t))sub_2417507CC, &qword_25714CFB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241751370(uint64_t a1)
{
  uint64_t v2;

  sub_24175073C(0, &qword_25714CF28, &qword_25714CF30, (uint64_t (*)(uint64_t))sub_2417507CC, &qword_25714CFB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417513CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 168);
  v3 = *(_QWORD *)(a1 + 176);
  v4 = *(_BYTE *)(a1 + 184);
  sub_241728A50(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_241728A50(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24175143C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 168);
  v3 = *(_QWORD *)(a1 + 176);
  v4 = *(_BYTE *)(a1 + 184);
  sub_2417289EC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_2417289EC(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2417514B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_25714CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241751510(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, &qword_25714CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241751564(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 192);
  v3 = *(_QWORD *)(a1 + 200);
  v4 = *(_BYTE *)(a1 + 208);
  sub_241728A50(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_bridgeObjectRetain();
  sub_241728A50(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2417515D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 192);
  v3 = *(_QWORD *)(a1 + 200);
  v4 = *(_BYTE *)(a1 + 208);
  sub_2417289EC(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_bridgeObjectRelease();
  sub_2417289EC(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241751644(uint64_t a1)
{
  sub_241728A50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241751680(uint64_t a1)
{
  sub_2417289EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2417516C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  _QWORD v7[6];

  result = qword_25714D030;
  if (!qword_25714D030)
  {
    sub_2417517A8();
    v2 = v1;
    sub_241750E68();
    v4 = v3;
    v5 = sub_2418A88A4();
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
    v7[2] = v4;
    v7[3] = v5;
    v7[4] = sub_241750F9C();
    v7[5] = sub_24172159C(&qword_25714D010, v6, MEMORY[0x24BDED858]);
    v7[0] = swift_getOpaqueTypeConformance2();
    v7[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v7);
    atomic_store(result, (unint64_t *)&qword_25714D030);
  }
  return result;
}

void sub_2417517A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D038)
  {
    sub_241750EE4(255);
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D038);
  }
}

uint64_t *sub_24175180C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v5 = *(int *)(a3 + 20);
    v6 = (uint64_t *)((char *)a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_241751910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_24175199C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_241751A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_241751B54(a1 + v6);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241751B54(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_241751BA8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_241751C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_241751B54(a1 + v6);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v10 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241751D48()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241751D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t sub_241751DF4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241751E00(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StateOfMindCalendarTitleView()
{
  uint64_t result;

  result = qword_25714D098;
  if (!qword_25714D098)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241751EC8()
{
  unint64_t v0;

  sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241751F54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241751F64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char v46;
  char v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  _DWORD v56[3];
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;

  v64 = a2;
  v68 = sub_2418A8ED4();
  v66 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68, v3);
  v5 = (uint64_t *)((char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for StateOfMindCalendarTitleView();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6, v9);
  v10 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241752C6C();
  v61 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241752BB0(0);
  v69 = v15;
  v67 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v65 = (char *)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v19);
  v63 = (char *)v56 - v20;
  if (qword_25714B958 != -1)
    swift_once();
  v21 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v22 = sub_2418A7EFC();
  v24 = v23;
  swift_bridgeObjectRelease();

  v73 = v22;
  v74 = v24;
  sub_241721040();
  v25 = sub_2418A92D0();
  v27 = v26;
  LOBYTE(v24) = v28 & 1;
  v29 = sub_2418A9288();
  v59 = v30;
  v60 = v29;
  v58 = v31;
  v57 = v32;
  sub_2417289EC(v25, v27, v24);
  swift_bridgeObjectRelease();
  sub_241752E98(a1, (uint64_t)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v34 = swift_allocObject();
  sub_241752EE0((uint64_t)v10, v34 + v33);
  sub_241752CCC();
  sub_241752DB4();
  sub_2418A9708();
  v35 = *(_QWORD *)(a1 + 8);
  v71 = *(_BYTE *)a1;
  v72 = v35;
  sub_241752F50();
  sub_2418A96E4();
  v56[2] = v75;
  sub_241752E98(a1, (uint64_t)v10);
  v36 = swift_allocObject();
  sub_241752EE0((uint64_t)v10, v36 + v33);
  *v5 = sub_2418A96FC();
  v37 = v66;
  v38 = v68;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v66 + 104))(v5, *MEMORY[0x24BDF02C0], v68);
  sub_241752E40(0, v39);
  sub_24172159C(&qword_25714D118, (uint64_t (*)(uint64_t))sub_241752C6C, MEMORY[0x24BDF43B0]);
  swift_getOpaqueTypeConformance2();
  v40 = v65;
  v41 = v62;
  sub_2418A951C();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t *, uint64_t))(v37 + 8))(v5, v38);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v14, v41);
  v42 = v67;
  v43 = v63;
  v44 = v69;
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v63, v40, v69);
  LOBYTE(v73) = v57 & 1;
  v71 = 1;
  v70 = 0;
  v45 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  v45(v40, v43, v44);
  v46 = v73;
  v47 = v71;
  v48 = v70;
  v49 = v64;
  v50 = v59;
  v51 = v60;
  v52 = v58;
  *v64 = v60;
  v49[1] = v52;
  *((_BYTE *)v49 + 16) = v46;
  v49[3] = v50;
  *((_BYTE *)v49 + 32) = v47;
  *((_BYTE *)v49 + 33) = v48;
  sub_241752AE8();
  v45((char *)v49 + *(int *)(v53 + 48), v40, v44);
  sub_241728A50(v51, v52, v46);
  v54 = *(void (**)(char *, uint64_t))(v42 + 8);
  swift_bridgeObjectRetain();
  v54(v43, v44);
  v54(v40, v44);
  sub_2417289EC(v51, v52, v73);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24175244C()
{
  sub_241752F50();
  return sub_2418A96D8();
}

uint64_t sub_24175249C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD v19[2];

  v2 = sub_2418A9684();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241752D48();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = sub_2418A9660();
  sub_2418A9498();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BDF40B8], v2);
  KeyPath = swift_getKeyPath();
  sub_241752CCC();
  v16 = (uint64_t *)(a1 + *(int *)(v15 + 36));
  sub_24172570C(0, &qword_25714CF98, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v16 + *(int *)(v17 + 28), v7, v2);
  *v16 = KeyPath;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(a1, v13, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_241752650@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  void *v29;
  char **v30;
  char *v31;
  _QWORD v33[3];
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;

  v35 = a1;
  v43 = a2;
  v41 = sub_2418A84E4();
  v39 = *(_QWORD *)(v41 - 8);
  v3 = MEMORY[0x24BDAC7A8](v41, v2);
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)v33 - v7;
  v9 = sub_2418A9C24();
  MEMORY[0x24BDAC7A8](v9, v10);
  v42 = sub_2418A9C48();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42, v11);
  v38 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241752E40(0, v13);
  v36 = *(_QWORD *)(v14 - 8);
  v37 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v34 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v17 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v18 = sub_2418A7EFC();
  v33[1] = v19;
  v33[2] = v18;
  swift_bridgeObjectRelease();

  v20 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  type metadata accessor for MentalHealthUIRepresentative();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v22 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_2418A9C18();
  v23 = *((_QWORD *)v35 + 1);
  v44 = *v35;
  v45 = v23;
  sub_241752F50();
  sub_2418A96E4();
  v24 = v38;
  sub_2418A9C3C();
  type metadata accessor for StateOfMindCalendarTitleView();
  sub_241861034((uint64_t)v8);
  v25 = v39;
  v26 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v5, *MEMORY[0x24BDEB3F0], v41);
  v27 = sub_2418A84D8();
  v28 = *(void (**)(char *, uint64_t))(v25 + 8);
  v28(v5, v26);
  v28(v8, v26);
  v29 = (void *)objc_opt_self();
  v30 = &selRef_secondarySystemBackgroundColor;
  if ((v27 & 1) == 0)
    v30 = &selRef_systemBackgroundColor;
  MEMORY[0x24269BDB4](objc_msgSend(v29, *v30));
  v31 = v34;
  sub_2418A9C30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v42);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v43, v31, v37);
}

uint64_t sub_241752A28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2418A8B8C();
  *(_QWORD *)(a1 + 8) = 0x4008000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  sub_241752A6C();
  return sub_241751F64(v1, (uint64_t *)(a1 + *(int *)(v3 + 44)));
}

void sub_241752A6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D0D0)
  {
    sub_24172570C(255, &qword_25714D0D8, (uint64_t (*)(uint64_t))sub_241752AE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D0D0);
  }
}

void sub_241752AE8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714D0E0)
  {
    sub_241752B54();
    sub_241752BB0(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714D0E0);
  }
}

void sub_241752B54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CD98)
  {
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CD98);
  }
}

void sub_241752BB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_25714D0E8)
  {
    sub_241752C6C();
    v3 = v2;
    sub_241752E40(255, v4);
    v8[0] = v3;
    v8[1] = v5;
    v8[2] = sub_24172159C(&qword_25714D118, (uint64_t (*)(uint64_t))sub_241752C6C, MEMORY[0x24BDF43B0]);
    v8[3] = swift_getOpaqueTypeConformance2();
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF37F8], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_25714D0E8);
  }
}

void sub_241752C6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D0F0)
  {
    sub_241752CCC();
    sub_241752DB4();
    v0 = sub_2418A9720();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D0F0);
  }
}

void sub_241752CCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D0F8)
  {
    sub_241752D48();
    sub_24172570C(255, &qword_25714CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D0F8);
  }
}

void sub_241752D48()
{
  unint64_t v0;
  uint64_t v1;
  _QWORD v2[2];

  if (!qword_25714D100)
  {
    v2[0] = MEMORY[0x24BDF4108];
    v2[1] = MEMORY[0x24BDF40E8];
    v0 = MEMORY[0x24269D434](0, v2, MEMORY[0x24BDF3488], 0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D100);
  }
}

unint64_t sub_241752DB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_25714D108;
  if (!qword_25714D108)
  {
    sub_241752CCC();
    v2 = v1;
    v3[2] = MEMORY[0x24BDF4108];
    v3[3] = MEMORY[0x24BDF40E8];
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = sub_241750BB0();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714D108);
  }
  return result;
}

void sub_241752E40(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  if (!qword_25714D110)
  {
    v2 = MEMORY[0x24269D434](0, a2, MEMORY[0x24BE49F50], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_25714D110);
  }
}

uint64_t sub_241752E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StateOfMindCalendarTitleView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241752EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StateOfMindCalendarTitleView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241752F24()
{
  type metadata accessor for StateOfMindCalendarTitleView();
  return sub_24175244C();
}

void sub_241752F50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D018)
  {
    v0 = sub_2418A96F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D018);
  }
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for StateOfMindCalendarTitleView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24175306C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StateOfMindCalendarTitleView() - 8) + 80);
  return sub_241752650((char *)(v1 + ((v3 + 16) & ~v3)), a1);
}

uint64_t sub_2417530A8()
{
  return sub_2418A8934();
}

uint64_t sub_2417530C8()
{
  return sub_2418A8934();
}

uint64_t sub_2417530E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2418A9684();
  MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_2418A8940();
}

uint64_t sub_241753168()
{
  return sub_24172159C(&qword_25714D120, (uint64_t (*)(uint64_t))sub_241753194, MEMORY[0x24BDF4498]);
}

void sub_241753194()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D128)
  {
    sub_24172570C(255, &qword_25714D0D8, (uint64_t (*)(uint64_t))sub_241752AE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_24175320C();
    v0 = sub_2418A972C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D128);
  }
}

unint64_t sub_24175320C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714D130;
  if (!qword_25714D130)
  {
    sub_24172570C(255, &qword_25714D0D8, (uint64_t (*)(uint64_t))sub_241752AE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_25714D130);
  }
  return result;
}

_QWORD *sub_24175326C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v27;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    v6 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    v8 = a3[11];
    v27 = (_QWORD *)(a1 + v8);
    v9 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 96) = a2[12];
    sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v27, v9, v10);
    }
    else
    {
      *v27 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v12 = a3[12];
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v16 = a3[13];
    v17 = (_QWORD *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2418A8EB0();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v22 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v23 = (char *)v17 + v22;
      v24 = (char *)v18 + v22;
      v25 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((_BYTE *)v4 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  }
  return v4;
}

uint64_t sub_2417535D0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + a2[11];
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + a2[12];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = a1 + a2[13];
  sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v9 = sub_2418A8EB0();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v8 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
  v12 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t sub_2417537A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = a3[11];
  v25 = (_QWORD *)(a1 + v7);
  v8 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8658();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v25, v8, v9);
  }
  else
  {
    *v25 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v10 = a3[12];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v14 = a3[13];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2418A8EB0();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v21 = (char *)v15 + v20;
    v22 = (char *)v16 + v20;
    v23 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_241753AE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[11];
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038];
    sub_24172B778(a1 + v7, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038]);
    sub_24172570C(0, &qword_25714C2E0, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v12 = a3[12];
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778(a1 + v12, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = a3[13];
    v18 = (_QWORD *)(a1 + v17);
    v19 = (_QWORD *)(a2 + v17);
    sub_24172B778(a1 + v17, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs);
    sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_2418A8EB0();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v23 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v24 = (char *)v18 + v23;
      v25 = (char *)v19 + v23;
      v26 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_241753E84(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = a3[11];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A8658();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[12];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v17 = v16;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v14, v15, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  v19 = a3[13];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_2418A8EB0();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v21, 1, v24))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v20, v21, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v24);
    }
    v27 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v28 = &v20[v27];
    v29 = &v21[v27];
    v30 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_241754144(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[11];
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038];
    sub_24172B778(a1 + v7, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038]);
    sub_24172570C(0, &qword_25714C2E0, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8658();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    v14 = a3[12];
    v15 = (void *)(a1 + v14);
    v16 = (const void *)(a2 + v14);
    v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778(a1 + v14, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v19 = v18;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v15, v16, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    v21 = a3[13];
    v22 = (char *)(a1 + v21);
    v23 = (char *)(a2 + v21);
    sub_24172B778(a1 + v21, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs);
    sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v25 = v24;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_2418A8EB0();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v23, 1, v26))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v22, v23, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v22, 0, 1, v26);
      }
      v29 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      v30 = &v22[v29];
      v31 = &v23[v29];
      v32 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
  }
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_2417544B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417544C0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[11];
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[12];
      }
      else
      {
        sub_24172570C(0, qword_25714C0E0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x24BDEB580]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a3[13];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2417545CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417545D8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[11];
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[12];
      }
      else
      {
        sub_24172570C(0, qword_25714C0E0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x24BDEB580]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[13];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for StateOfMindEntryView_iOS()
{
  uint64_t result;

  result = qword_25714D190;
  if (!qword_25714D190)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24175471C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24172570C(319, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_241754840()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241754850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  int *v10;
  uint64_t *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v9 = *a4;
  sub_24172887C(0, &qword_25714D210, (uint64_t)&type metadata for StateOfMindEntryPhaseType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_2418A96C0();
  *(_QWORD *)(a5 + 40) = v21;
  *(_QWORD *)(a5 + 48) = v22;
  sub_2418A96C0();
  *(_BYTE *)(a5 + 56) = v21;
  *(_QWORD *)(a5 + 64) = v22;
  sub_2418A96C0();
  *(_BYTE *)(a5 + 72) = v21;
  *(_QWORD *)(a5 + 80) = v22;
  v10 = (int *)type metadata accessor for StateOfMindEntryView_iOS();
  v11 = (uint64_t *)(a5 + v10[11]);
  *v11 = swift_getKeyPath();
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v13 = (uint64_t *)(a5 + v10[12]);
  *v13 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v12);
  swift_storeEnumTagMultiPayload();
  v14 = (uint64_t *)(a5 + v10[13]);
  *v14 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, v12);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  swift_retain();
  *(_QWORD *)a5 = sub_2418A8760();
  *(_QWORD *)(a5 + 8) = v15;
  *(_QWORD *)(a5 + 16) = a2;
  *(_QWORD *)(a5 + 24) = a3;
  *(_BYTE *)(a5 + 32) = v9;
  v16 = a1 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration;
  swift_beginAccess();
  if (*(_BYTE *)(v16 + 8) == 1)
  {
    *(_BYTE *)(a5 + v10[14]) = 2;
    swift_retain();
  }
  else
  {
    swift_retain();
    v17 = sub_241794598();
    v18 = v10[14];
    *(_BYTE *)(a5 + v18) = (v17 & 1) == 0;
  }
  sub_2418A96C0();
  swift_release();
  result = swift_release();
  *(_BYTE *)(a5 + 88) = 0;
  *(_QWORD *)(a5 + 96) = v20;
  return result;
}

BOOL sub_241754B00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s14MentalHealthUI24StateOfMindVisualizationV6ColorsO9hashValueSivg_0()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

uint64_t sub_241754B58()
{
  return sub_2418AA578();
}

uint64_t sub_241754B80()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

unint64_t sub_241754BC0@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_24175DE3C(*a1);
  *a2 = result;
  return result;
}

void sub_241754BE8(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_241754BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for StateOfMindEntryView_iOS();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 48);
  v10[1] = *(_QWORD *)(v0 + 40);
  v10[2] = v6;
  sub_24175D0AC();
  sub_2418A96CC();
  v7 = *(_QWORD *)(v11 + 16);
  if (v7)
  {
    v8 = *(unsigned __int8 *)(v7 + v11 + 31);
    swift_bridgeObjectRelease();
    sub_2417289A8(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
    if ((_DWORD)v8 != 6)
      goto LABEL_6;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_2417289A8(v0, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  }
  v8 = v5[*(int *)(v2 + 56)];
LABEL_6:
  sub_24172588C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  return v8;
}

uint64_t sub_241754CE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;

  v28 = a1;
  sub_24175AB18();
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175AAF4(0);
  v25 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + 48);
  v35 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)&v36 = v10;
  sub_24175D0AC();
  sub_2418A96E4();
  v35 = v30;
  v36 = v31;
  v29 = v1;
  sub_24172887C(0, &qword_25714D210, (uint64_t)&type metadata for StateOfMindEntryPhaseType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v24[1] = v11;
  sub_24175AC10(0);
  v24[0] = v12;
  sub_24175D120(&qword_25714D3E8, &qword_25714D210, (uint64_t)&type metadata for StateOfMindEntryPhaseType, MEMORY[0x24BEE12B8]);
  sub_24175D120(&qword_25714D3F0, &qword_25714D210, (uint64_t)&type metadata for StateOfMindEntryPhaseType, MEMORY[0x24BEE12D8]);
  sub_24175D120(&qword_25714D3F8, &qword_25714D210, (uint64_t)&type metadata for StateOfMindEntryPhaseType, MEMORY[0x24BEE12E8]);
  sub_24175ACC4(255);
  v14 = v13;
  v15 = sub_24175C4B0(&qword_25714D368, (uint64_t (*)(uint64_t))sub_24175ACC4, sub_24175C48C, (uint64_t (*)(void))sub_24175C9E0);
  v16 = sub_24175CC60();
  v30 = v14;
  *(_QWORD *)&v31 = &type metadata for StateOfMindEntryPhaseType;
  *((_QWORD *)&v31 + 1) = v14;
  v32 = v15;
  v33 = v16;
  v34 = v15;
  swift_getOpaqueTypeConformance2();
  sub_2418A8808();
  v17 = sub_241757DA8();
  KeyPath = swift_getKeyPath();
  if (v17)
  {
    v30 = v17;
    swift_retain();
    v19 = sub_2418A8628();
  }
  else
  {
    v19 = 0;
  }
  v21 = v26;
  v20 = v27;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v9, v5, v27);
  swift_release();
  v22 = (uint64_t *)&v9[*(int *)(v25 + 36)];
  *v22 = KeyPath;
  v22[1] = v19;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
  sub_24175CD10();
  sub_2418A9474();
  return sub_24172588C((uint64_t)v9, (uint64_t (*)(_QWORD))sub_24175AAF4);
}

uint64_t sub_241754FB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = type metadata accessor for StateOfMindEntryView_iOS();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  sub_24175ACC4(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241755140(*(_BYTE *)(a1 + *(int *)(v2 + 56)), (uint64_t)v9);
  sub_2417289A8(a1, (uint64_t)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  sub_241731B4C((uint64_t)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  sub_24175C4B0(&qword_25714D368, (uint64_t (*)(uint64_t))sub_24175ACC4, sub_24175C48C, (uint64_t (*)(void))sub_24175C9E0);
  sub_24175CC60();
  sub_2418A9438();
  swift_release();
  return sub_24172588C((uint64_t)v9, (uint64_t (*)(_QWORD))sub_24175ACC4);
}

void sub_241755140(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD v113[40];
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;

  v158 = a2;
  sub_24175BBBC(0, &qword_25714D358, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS, &qword_25714D360, (uint64_t)&unk_2418D37C8);
  v137 = v3;
  v113[29] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v113[26] = (char *)v113 - v5;
  sub_24175C38C(0);
  v140 = v6;
  v113[33] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v113[32] = (char *)v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for NotificationsSetupPhase_iOS();
  MEMORY[0x24BDAC7A8](v133, v9);
  v113[31] = (char *)v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175C1E4(0);
  v141 = v11;
  v113[37] = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v113[30] = (char *)v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v113[36] = (char *)v113 - v16;
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380];
  sub_241731FB0(0, &qword_25714D400, (uint64_t (*)(uint64_t))sub_24175BF3C, v18, MEMORY[0x24BDEF380]);
  v136 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v139 = (char *)v113 - v21;
  sub_24175BF18(0);
  v157 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_24175BBBC(0, &qword_25714D338, (uint64_t (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS, &qword_25714D340, (uint64_t)&unk_2418D7220);
  v130 = v24;
  v113[21] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v25);
  v113[20] = (char *)v113 - v26;
  sub_24175C0E4(0);
  v134 = v27;
  v113[28] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v28);
  v113[25] = (char *)v113 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for DomainsSelectionPhase_iOS();
  MEMORY[0x24BDAC7A8](v127, v30);
  v113[24] = (char *)v113 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175BF3C(0);
  v138 = v32;
  v113[35] = *(_QWORD *)(v32 - 8);
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v113[22] = (char *)v113 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34, v36);
  v113[34] = (char *)v113 - v37;
  sub_24175BBBC(0, &qword_25714D310, (uint64_t (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS, &qword_25714D318, (uint64_t)&unk_2418D35C0);
  v126 = v38;
  v113[14] = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38, v39);
  v113[13] = (char *)v113 - v40;
  sub_24175BE18(0);
  v131 = v41;
  v113[19] = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41, v42);
  v113[17] = (char *)v113 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for LabelsSelectionPhase_iOS();
  MEMORY[0x24BDAC7A8](v123, v44);
  v113[16] = (char *)v113 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175BC70(0);
  v135 = v46;
  v113[27] = *(_QWORD *)(v46 - 8);
  v48 = MEMORY[0x24BDAC7A8](v46, v47);
  v113[15] = (char *)v113 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48, v50);
  v113[23] = (char *)v113 - v51;
  sub_241731FB0(0, &qword_25714D408, (uint64_t (*)(uint64_t))sub_24175B914, v52, v17);
  v125 = v53;
  MEMORY[0x24BDAC7A8](v53, v54);
  v129 = (char *)v113 - v55;
  sub_24175B8F0(0);
  v146 = v56;
  MEMORY[0x24BDAC7A8](v56, v57);
  v132 = (char *)v113 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175BBBC(0, &qword_25714D2F0, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS, &qword_25714D2F8, (uint64_t)&unk_2418D8478);
  v122 = v59;
  v113[8] = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59, v60);
  v113[6] = (char *)v113 - v61;
  sub_24175BABC(0);
  v124 = v62;
  v113[12] = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62, v63);
  v113[11] = (char *)v113 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for ValenceSelectionPhase_iOS();
  MEMORY[0x24BDAC7A8](v121, v65);
  sub_24175B914(0);
  v128 = v66;
  v113[18] = *(_QWORD *)(v66 - 8);
  v68 = MEMORY[0x24BDAC7A8](v66, v67);
  v113[10] = (char *)v113 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v68, v70);
  v118 = (char *)v113 - v71;
  v151 = sub_2418A8B44();
  v149 = *(_QWORD *)(v151 - 8);
  MEMORY[0x24BDAC7A8](v151, v72);
  v150 = (char *)v113 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_2418A993C();
  v147 = *(_QWORD *)(v160 - 8);
  MEMORY[0x24BDAC7A8](v160, v74);
  v148 = (char *)v113 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175BBBC(0, &qword_25714D2C8, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS, &qword_25714D2D0, (uint64_t)&unk_2418D60C8);
  v115 = v76;
  v113[2] = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76, v77);
  sub_24175B7F0(0);
  v119 = v78;
  v113[5] = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78, v79);
  v113[4] = (char *)v113 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  MEMORY[0x24BDAC7A8](v114, v81);
  v113[38] = (char *)v113 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175B648(0);
  v120 = v83;
  v113[9] = *(_QWORD *)(v83 - 8);
  v85 = MEMORY[0x24BDAC7A8](v83, v84);
  v113[3] = (char *)v113 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v85, v87);
  v113[7] = (char *)v113 - v88;
  sub_241731FB0(0, &qword_25714D410, (uint64_t (*)(uint64_t))sub_24175ACE8, (uint64_t (*)(uint64_t))sub_24175BF18, v17);
  v154 = v89;
  MEMORY[0x24BDAC7A8](v89, v90);
  v156 = (char *)v113 - v91;
  sub_241731FB0(0, &qword_25714D418, (uint64_t (*)(uint64_t))sub_24175AD0C, (uint64_t (*)(uint64_t))sub_24175B8F0, v17);
  v142 = v92;
  MEMORY[0x24BDAC7A8](v92, v93);
  v144 = (char *)v113 - v94;
  sub_241731FB0(0, &qword_25714D420, (uint64_t (*)(uint64_t))sub_24175AD30, (uint64_t (*)(uint64_t))sub_24175B648, v17);
  v113[39] = v95;
  MEMORY[0x24BDAC7A8](v95, v96);
  v116 = (char *)v113 - v97;
  sub_24175AD0C(0);
  v143 = v98;
  MEMORY[0x24BDAC7A8](v98, v99);
  v117 = (char *)v113 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175ACE8(0);
  v155 = v101;
  MEMORY[0x24BDAC7A8](v101, v102);
  v145 = (char *)v113 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175B0D0(0, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
  v152 = *(_QWORD *)(v104 - 8);
  v153 = v104;
  MEMORY[0x24BDAC7A8](v104, v105);
  v159 = (char *)v113 - v106;
  v107 = type metadata accessor for StateOfMindEntryView_iOS();
  MEMORY[0x24BDAC7A8](v107, v108);
  sub_24175AD30(0);
  v111 = MEMORY[0x24BDAC7A8](v109, v110);
  MEMORY[0x24BDAC7A8](v111, v112);
  __asm { BR              X10 }
}

uint64_t sub_241755CC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = *(_QWORD *)(v6 - 240);
  *(_DWORD *)(v6 - 248) = *(unsigned __int8 *)(v7 + 32);
  *(_QWORD *)(v6 - 856) = a1;
  sub_2417289A8(v7, v4, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  v8 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v9 = swift_allocObject();
  sub_241731B4C(v4, v9 + v8, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  swift_retain();
  v10 = sub_2418A8760();
  v12 = v11;
  v13 = *(_QWORD *)(v6 - 176);
  sub_241758E94(0, 1, v13);
  *(_QWORD *)(v6 - 128) = v10;
  *(_QWORD *)(v6 - 120) = v12;
  *(_BYTE *)(v6 - 112) = (*(_DWORD *)(v6 - 248) & 1) == 0;
  *(_QWORD *)(v6 - 104) = sub_24175D2DC;
  *(_QWORD *)(v6 - 96) = v9;
  sub_2417592DC(v13, v2);
  v14 = *(_QWORD *)(v6 - 224);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 232) + 8))(v13, v14);
  swift_release();
  swift_release();
  v15 = *(_QWORD *)(v6 - 856);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v2, v15);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 + 16))(*(_QWORD *)(v6 - 528), v3, v15);
  swift_storeEnumTagMultiPayload();
  sub_24175AE94(255);
  v17 = v16;
  sub_24175B014(255);
  v19 = v18;
  sub_24175AF48(255);
  v21 = v20;
  v22 = sub_24175AFD0();
  v23 = *(_QWORD *)(v6 - 168);
  *(_QWORD *)(v6 - 160) = &type metadata for IntroPhase_iOS;
  *(_QWORD *)(v6 - 152) = v23;
  v24 = MEMORY[0x24BDF4E40];
  *(_QWORD *)(v6 - 144) = v22;
  *(_QWORD *)(v6 - 136) = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v6 - 160) = v21;
  *(_QWORD *)(v6 - 152) = OpaqueTypeConformance2;
  v26 = swift_getOpaqueTypeConformance2();
  sub_24175B150();
  v28 = v27;
  v29 = sub_24175B580();
  *(_QWORD *)(v6 - 160) = v28;
  *(_QWORD *)(v6 - 152) = v29;
  v30 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v6 - 160) = v14;
  *(_QWORD *)(v6 - 152) = v30;
  v31 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v6 - 160) = v17;
  *(_QWORD *)(v6 - 152) = v19;
  *(_QWORD *)(v6 - 144) = v26;
  *(_QWORD *)(v6 - 136) = v31;
  swift_getOpaqueTypeConformance2();
  v32 = sub_24172159C(&qword_25714D2D0, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS, (uint64_t)&unk_2418D60C8);
  *(_QWORD *)(v6 - 160) = *(_QWORD *)(v6 - 544);
  *(_QWORD *)(v6 - 152) = v23;
  *(_QWORD *)(v6 - 144) = v32;
  *(_QWORD *)(v6 - 136) = MEMORY[0x24BDF4E40];
  v33 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v6 - 160) = *(_QWORD *)(v6 - 536);
  *(_QWORD *)(v6 - 152) = v33;
  v34 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v6 - 160) = *(_QWORD *)(v6 - 504);
  *(_QWORD *)(v6 - 152) = v19;
  *(_QWORD *)(v6 - 144) = v34;
  *(_QWORD *)(v6 - 136) = v31;
  swift_getOpaqueTypeConformance2();
  v35 = *(_QWORD *)(v6 - 520);
  v36 = *(_QWORD *)(v6 - 856);
  sub_2418A8D24();
  sub_2417289A8(v35, *(_QWORD *)(v6 - 304), (uint64_t (*)(_QWORD))sub_24175AD0C);
  swift_storeEnumTagMultiPayload();
  sub_24175C520();
  sub_24175C760();
  v37 = *(_QWORD *)(v6 - 296);
  sub_2418A8D24();
  sub_24172588C(v35, (uint64_t (*)(_QWORD))sub_24175AD0C);
  sub_2417289A8(v37, *(_QWORD *)(v6 - 200), (uint64_t (*)(_QWORD))sub_24175ACE8);
  swift_storeEnumTagMultiPayload();
  sub_24175C48C();
  sub_24175C9E0();
  sub_2418A8D24();
  sub_24172588C(v37, (uint64_t (*)(_QWORD))sub_24175ACE8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v36);
}

uint64_t sub_241757DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unsigned __int8 v5;
  double v6;
  uint64_t v7;
  _QWORD v9[2];

  v0 = sub_2418A84E4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_241754BF4();
  if (!v5)
    return v5;
  if (v5 == 1)
  {
    type metadata accessor for StateOfMindEntryView_iOS();
    v6 = 0.0;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2418A8418();
    swift_release();
    swift_release();
    swift_release();
    v6 = *(double *)&v9[1];
    type metadata accessor for StateOfMindEntryView_iOS();
  }
  sub_241861034((uint64_t)v4);
  v7 = sub_24180E5E8((uint64_t)v4, v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v7;
}

uint64_t sub_241757F08@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_t v22;
  uint64_t v23;
  double v24;
  BOOL v25;
  uint64_t result;
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for IntroPhaseSpecs();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A8688();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2418A8340();
  v34 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  v17 = sub_2418A8334();
  v18 = sub_2418AA038();
  v33 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v32 = a1;
    v20 = v19;
    v30 = swift_slowAlloc();
    v36 = v30;
    *(_DWORD *)v20 = 136315394;
    v28 = v17;
    v35 = sub_24176024C(0xD000000000000018, 0x80000002418D2630, &v36);
    v31 = v7;
    sub_2418AA1F4();
    *(_WORD *)(v20 + 12) = 2048;
    v29 = v13;
    sub_2418A8670();
    v35 = v21;
    v7 = v31;
    sub_2418AA1F4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v22 = v28;
    _os_log_impl(&dword_24171C000, v28, (os_log_type_t)v33, "[%s] Height: %f", (uint8_t *)v20, 0x16u);
    v23 = v30;
    swift_arrayDestroy();
    MEMORY[0x24269D548](v23, -1, -1);
    MEMORY[0x24269D548](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v13);
  }
  type metadata accessor for StateOfMindEntryView_iOS();
  sub_241861064((uint64_t)v7);
  sub_2418A8670();
  v25 = v24 <= 600.0;
  result = sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
  *a2 = v25;
  return result;
}

uint64_t sub_241758200()
{
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  return sub_2418A96D8();
}

uint64_t sub_241758268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (**v30)@<X0>(uint64_t@<X0>, BOOL *@<X8>);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39[2];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v3 = type metadata accessor for StateOfMindEntryView_iOS();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  v7 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175AA50();
  v43 = v8;
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v40 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v41 = (uint64_t)v39 - v13;
  sub_24175CDA8(0, &qword_25714D3C8, MEMORY[0x24BDEF380]);
  v42 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)v39 - v16;
  sub_24175B0D0(0, &qword_25714D1F8, (uint64_t (*)(uint64_t))sub_24175AAF4, (uint64_t (*)(void))sub_24175CD10, MEMORY[0x24BDF32F0]);
  v19 = v18;
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v21);
  v23 = (char *)v39 - v22;
  v24 = *(_BYTE *)(v1 + 32);
  sub_241754CE0((uint64_t)v39 - v22);
  if ((v24 & 1) != 0)
  {
    v39[0] = (uint64_t)v17;
    sub_2417289A8(v1, (uint64_t)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
    v25 = *(unsigned __int8 *)(v4 + 80);
    v39[1] = a1;
    v26 = (v25 + 16) & ~v25;
    v27 = swift_allocObject();
    sub_241731B4C((uint64_t)v7, v27 + v26, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
    sub_2417289A8(v1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
    v28 = swift_allocObject();
    sub_241731B4C((uint64_t)v7, v28 + v26, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
    v29 = (uint64_t)v40;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v40, v23, v19);
    v30 = (uint64_t (**)@<X0>(uint64_t@<X0>, BOOL *@<X8>))(v29 + *(int *)(v43 + 36));
    *v30 = sub_24175CE34;
    v30[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, BOOL *@<X8>))v27;
    v30[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, BOOL *@<X8>))sub_24175CE84;
    v30[3] = (uint64_t (*)@<X0>(uint64_t@<X0>, BOOL *@<X8>))v28;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    v31 = v41;
    sub_241731B4C(v29, v41, (uint64_t (*)(_QWORD))sub_24175AA50);
    sub_2417289A8(v31, v39[0], (uint64_t (*)(_QWORD))sub_24175AA50);
    swift_storeEnumTagMultiPayload();
    sub_24175AAF4(255);
    v33 = v32;
    v34 = sub_24175CD10();
    v44 = v33;
    v45 = v34;
    swift_getOpaqueTypeConformance2();
    sub_24175CEC0();
    sub_2418A8D24();
    return sub_24172588C(v31, (uint64_t (*)(_QWORD))sub_24175AA50);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v23, v19);
    swift_storeEnumTagMultiPayload();
    sub_24175AAF4(255);
    v37 = v36;
    v38 = sub_24175CD10();
    v44 = v37;
    v45 = v38;
    swift_getOpaqueTypeConformance2();
    sub_24175CEC0();
    sub_2418A8D24();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
  }
}

uint64_t sub_2417585E0(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[2];
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;

  v2 = sub_2418A9A44();
  v23 = *(_QWORD *)(v2 - 8);
  v24 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v22 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2418A9A68();
  v20 = *(_QWORD *)(v5 - 8);
  v21 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v19 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StateOfMindEntryView_iOS();
  v17[1] = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = sub_2418A9A38();
  MEMORY[0x24BDAC7A8](v10, v11);
  v18 = sub_2418A9A80();
  v13 = MEMORY[0x24BDAC7A8](v18, v12);
  MEMORY[0x24BDAC7A8](v13, v14);
  v25 = (char *)v17 - v15;
  result = sub_241754BF4();
  if (result == a1)
    __asm { BR              X10 }
  return result;
}

uint64_t sub_241758D54()
{
  swift_retain();
  sub_241794684(9, 0);
  swift_release();
  return sub_241759A14();
}

uint64_t sub_241758E94@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v41 = a1;
  v42 = a2;
  v49 = a3;
  sub_24175B1A8(0);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v46 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A8DB4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_24175B2EC();
  v10 = v9;
  v43 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175B260(0);
  v15 = v14;
  v45 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v41 - v21;
  sub_24175B150();
  v44 = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_BYTE *)(v3 + 32);
  v28 = sub_2418A8DA8();
  MEMORY[0x24BDAC7A8](v28, v29);
  if ((v27 & 1) != 0)
  {
    *((_BYTE *)&v41 - 32) = v41;
    *((_QWORD *)&v41 - 3) = v3;
    *((_BYTE *)&v41 - 16) = v42 & 1;
    sub_24175B358();
    sub_24175B430();
    sub_2418A8580();
    v30 = sub_24172159C(&qword_25714D2A8, (uint64_t (*)(uint64_t))sub_24175B2EC, MEMORY[0x24BDEB848]);
    MEMORY[0x24269B628](v13, v10, v30);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v10);
    v31 = v45;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v22, v19, v15);
    v50 = v10;
    v51 = v30;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v33 = v46;
    MEMORY[0x24269B628](v22, v15, OpaqueTypeConformance2);
    v50 = v15;
    v51 = OpaqueTypeConformance2;
    v34 = swift_getOpaqueTypeConformance2();
    v35 = v48;
    MEMORY[0x24269B640](v33, v48, v48, v34, v34);
  }
  else
  {
    *((_QWORD *)&v41 - 2) = v3;
    *((_BYTE *)&v41 - 8) = v42 & 1;
    sub_24175B358();
    sub_24175B430();
    sub_2418A8580();
    v36 = sub_24172159C(&qword_25714D2A8, (uint64_t (*)(uint64_t))sub_24175B2EC, MEMORY[0x24BDEB848]);
    MEMORY[0x24269B628](v13, v10, v36);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v10);
    v31 = v45;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v22, v19, v15);
    v50 = v10;
    v51 = v36;
    v37 = swift_getOpaqueTypeConformance2();
    v33 = v46;
    MEMORY[0x24269B628](v22, v15, v37);
    v50 = v15;
    v51 = v37;
    v38 = swift_getOpaqueTypeConformance2();
    v35 = v48;
    MEMORY[0x24269B634](v33, v48, v48, v38, v38);
  }
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v35);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v15);
  v39 = sub_24175B580();
  MEMORY[0x24269B628](v26, v44, v39);
  return sub_24172588C((uint64_t)v26, (uint64_t (*)(_QWORD))sub_24175B150);
}

uint64_t sub_2417592DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  ValueMetadata *v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  ValueMetadata *v26;
  ValueMetadata *v27;
  ValueMetadata *v28;
  ValueMetadata *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  void (**Description)(char *, ValueMetadata *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  ValueMetadata *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v38 = a1;
  v41 = a2;
  v37 = sub_2418A8B44();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2418A993C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175AF48(0);
  v12 = v11;
  Description = (void (**)(char *, ValueMetadata *))v11[-1].Description;
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175AE94(0);
  v17 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  v40 = v17;
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v2[1];
  v47 = *v2;
  v48 = v21;
  v49 = *((_QWORD *)v2 + 4);
  sub_2418A9930();
  v22 = sub_24175AFD0();
  MEMORY[0x24269BBEC](v10, MEMORY[0x24BEE4AF8], &type metadata for IntroPhase_iOS, v6, v22, MEMORY[0x24BDF4E40]);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v23 = v35;
  v24 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v5, *MEMORY[0x24BDEE5F0], v37);
  v43 = &type metadata for IntroPhase_iOS;
  v44 = v6;
  v45 = v22;
  v46 = MEMORY[0x24BDF4E40];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_2418A948C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
  Description[1](v15, v12);
  v42 = v38;
  sub_24175B014(0);
  v43 = v12;
  v44 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_24175B0D0(255, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
  v27 = v26;
  sub_24175B150();
  v29 = v28;
  v30 = sub_24175B580();
  v43 = v29;
  v44 = v30;
  v31 = swift_getOpaqueTypeConformance2();
  v43 = v27;
  v44 = v31;
  swift_getOpaqueTypeConformance2();
  v32 = v39;
  sub_2418A9528();
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v20, v32);
}

uint64_t sub_2417595D4()
{
  uint64_t result;

  result = sub_241754BF4();
  if (result == 5)
  {
    swift_retain();
    sub_241794684(9, 0);
    swift_release();
    return sub_241759A14();
  }
  return result;
}

uint64_t sub_24175962C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;

  v1 = type metadata accessor for StateOfMindEntryView_iOS();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1, v4);
  v5 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24172570C(0, (unint64_t *)&qword_254391478, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v17[-v8];
  v10 = *(_QWORD *)(v0 + 80);
  v17[16] = *(_BYTE *)(v0 + 72);
  v18 = v10;
  v17[15] = 1;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96D8();
  v11 = sub_2418A9F60();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  sub_2417289A8(v0, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  sub_2418A9F48();
  v12 = sub_2418A9F3C();
  v13 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v15;
  sub_241731B4C((uint64_t)v5, v14 + v13, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  sub_241826138((uint64_t)v9, (uint64_t)&unk_25714D448, v14);
  return swift_release();
}

void sub_2417597D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  unsigned __int8 v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v1 = type metadata accessor for StateOfMindEntryView_iOS();
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE65DF0]), sel_init);
  if ((objc_msgSend(v5, sel_hasEverEnabledAStateOfMindReminderNotification) & 1) != 0)
  {
    sub_2417289A8(v0, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
    goto LABEL_5;
  }
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_isiPad);

    sub_2417289A8(v0, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
    if ((v8 & 1) == 0)
    {
      v9 = v4[32];
      sub_24172588C((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
      if (v9 != 1)
      {
        v10 = *(_QWORD *)(v0 + 40);
        v11 = *(_QWORD *)(v0 + 48);
        v22 = v10;
        v23 = v11;
        sub_24175D0AC();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2418A96CC();
        v12 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_241802DF0(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
        v13 = *((_QWORD *)v12 + 2);
        v14 = *((_QWORD *)v12 + 3);
        v15 = v13 + 1;
        if (v13 >= v14 >> 1)
        {
          v20 = v13 + 1;
          v16 = v12;
          v17 = v13;
          v18 = sub_241802DF0((char *)(v14 > 1), v13 + 1, 1, v16);
          v13 = v17;
          v15 = v20;
          v12 = v18;
        }
        *((_QWORD *)v12 + 2) = v15;
        v12[v13 + 32] = 5;
        v22 = v10;
        v23 = v11;
        v21 = v12;
        sub_2418A96D8();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
LABEL_6:
      sub_241759A14();
LABEL_7:

      return;
    }
LABEL_5:
    sub_24172588C((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_2417599E8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_241759A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD);
  char v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v21 = sub_2418A9A44();
  v24 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2418A9A68();
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StateOfMindEntryView_iOS();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8, v11);
  v12 = *(void (**)(_QWORD))(v0 + 16);
  swift_retain();
  v13 = sub_241794598();
  swift_release();
  v12(v13 & 1);
  sub_24175D33C();
  v14 = (void *)sub_2418AA0D4();
  sub_2417289A8(v0, (uint64_t)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = swift_allocObject();
  sub_241731B4C((uint64_t)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  aBlock[4] = sub_24175D728;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2417599E8;
  aBlock[3] = &block_descriptor_83;
  v17 = _Block_copy(aBlock);
  swift_release();
  sub_2418A9A5C();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_24172159C((unint64_t *)&unk_25714F340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_24172570C(0, &qword_25714D438, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_24175D3CC();
  v19 = v21;
  sub_2418AA248();
  MEMORY[0x24269C8E8](0, v7, v3, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v7, v23);
}

uint64_t sub_241759CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  v4[3] = sub_2418A9F48();
  v4[4] = sub_2418A9F3C();
  v4[5] = sub_2418A9F18();
  v4[6] = v5;
  return swift_task_switch();
}

uint64_t sub_241759D10()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = *(_QWORD *)(v0[2] + 8);
  swift_retain();
  v0[8] = sub_2418A9F3C();
  v0[9] = sub_2418A9F18();
  v0[10] = v1;
  return swift_task_switch();
}

uint64_t sub_241759D7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[7];
  v2 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_hasInitiatedSampleSave;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_hasInitiatedSampleSave) == 1)
  {
    swift_release();
    swift_release();
    return swift_task_switch();
  }
  else
  {
    v4 = sub_2417981DC();
    v0[11] = v4;
    *(_BYTE *)(v1 + v2) = 1;
    v5 = (_QWORD *)swift_task_alloc();
    v0[12] = v5;
    *v5 = v0;
    v5[1] = sub_241759E2C;
    return sub_2417984B0(v4);
  }
}

uint64_t sub_241759E2C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241759E78()
{
  uint64_t v0;
  _QWORD *v1;

  sub_241794684(7, 0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_241759ED0;
  return sub_241799044();
}

uint64_t sub_241759ED0()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 112) = v2;
  *v2 = v4;
  v2[1] = sub_241759F34;
  return sub_241799760();
}

uint64_t sub_241759F34()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241759F80()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  swift_release();

  swift_release();
  return swift_task_switch();
}

uint64_t sub_241759FC8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241759FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_2418A8658();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StateOfMindEntryView_iOS();
  sub_2418612BC((uint64_t)v4);
  sub_2418A864C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_24175A090@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t *v32;
  double v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;

  v41 = a2;
  v36 = a1;
  v42 = a3;
  v3 = type metadata accessor for StateOfMindEntryView_iOS();
  v35 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v35 + 64);
  MEMORY[0x24BDAC7A8](v3, v5);
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v40 = v6;
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v35 - v8;
  sub_2417312C0();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175B3B4();
  v37 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175B358();
  v39 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v22 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v23 = sub_2418A7EFC();
  v25 = v24;
  swift_bridgeObjectRelease();

  v43 = (void *)v23;
  v44 = v25;
  sub_2417289A8(v36, (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  v26 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v27 = swift_allocObject();
  sub_241731B4C((uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  sub_241721040();
  v28 = MEMORY[0x24BEE0D00];
  sub_2418A9714();
  v43 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511ABA20);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, v28, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_24175D120((unint64_t *)&qword_2543915D8, (unint64_t *)&qword_2543915D0, v28, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241731344();
  v29 = v40;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v29);
  KeyPath = swift_getKeyPath();
  v31 = swift_allocObject();
  LOBYTE(v29) = v41;
  *(_BYTE *)(v31 + 16) = (v41 & 1) == 0;
  sub_2417289A8((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_2417312C0);
  v32 = (uint64_t *)&v17[*(int *)(v37 + 36)];
  *v32 = KeyPath;
  v32[1] = (uint64_t)sub_241751224;
  v32[2] = v31;
  sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2417312C0);
  if ((v29 & 1) != 0)
    v33 = 1.0;
  else
    v33 = 0.0;
  sub_2417289A8((uint64_t)v17, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_24175B3B4);
  *(double *)&v21[*(int *)(v39 + 36)] = v33;
  sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))sub_24175B3B4);
  return sub_241731B4C((uint64_t)v21, v42, (uint64_t (*)(_QWORD))sub_24175B358);
}

uint64_t sub_24175A4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v7;

  v0 = sub_2418A8658();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0x90504030201uLL >> (8 * sub_241754BF4());
  swift_retain();
  sub_241794684(v5, 1);
  swift_release();
  type metadata accessor for StateOfMindEntryView_iOS();
  sub_2418612BC((uint64_t)v4);
  sub_2418A864C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_24175A5BC@<X0>(char a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t *v35;
  double v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;

  v47 = a3;
  v40 = a2;
  v48 = a4;
  v5 = type metadata accessor for StateOfMindEntryView_iOS();
  v39 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v39 + 64);
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v45 = v9;
  v43 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v39 - v11;
  sub_2417312C0();
  MEMORY[0x24BDAC7A8](v13, v14);
  v46 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175B3B4();
  v42 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24175B358();
  v44 = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v41 = (uint64_t)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25714B958 != -1)
    swift_once();
  v23 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v24 = sub_2418A7EFC();
  v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v49 = (void *)v24;
  v50 = v26;
  sub_2417289A8(v40, (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  v27 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v28 = v27 + v6;
  v29 = swift_allocObject();
  sub_241731B4C((uint64_t)v8, v29 + v27, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindEntryView_iOS);
  *(_BYTE *)(v29 + v28) = a1;
  sub_241721040();
  v30 = MEMORY[0x24BEE0D00];
  sub_2418A9714();
  v49 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511ABA50);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, v30, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_24175D120((unint64_t *)&qword_2543915D8, (unint64_t *)&qword_2543915D0, v30, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_241731344();
  v31 = v45;
  v32 = (uint64_t)v46;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v31);
  KeyPath = swift_getKeyPath();
  v34 = swift_allocObject();
  LOBYTE(v31) = v47;
  *(_BYTE *)(v34 + 16) = (v47 & 1) == 0;
  sub_2417289A8(v32, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_2417312C0);
  v35 = (uint64_t *)&v19[*(int *)(v42 + 36)];
  *v35 = KeyPath;
  v35[1] = (uint64_t)sub_24175DE5C;
  v35[2] = v34;
  sub_24172588C(v32, (uint64_t (*)(_QWORD))sub_2417312C0);
  if ((v31 & 1) != 0)
    v36 = 1.0;
  else
    v36 = 0.0;
  v37 = v41;
  sub_2417289A8((uint64_t)v19, v41, (uint64_t (*)(_QWORD))sub_24175B3B4);
  *(double *)(v37 + *(int *)(v44 + 36)) = v36;
  sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))sub_24175B3B4);
  return sub_241731B4C(v37, v48, (uint64_t (*)(_QWORD))sub_24175B358);
}

void sub_24175AA50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D1F0)
  {
    sub_24175B0D0(255, &qword_25714D1F8, (uint64_t (*)(uint64_t))sub_24175AAF4, (uint64_t (*)(void))sub_24175CD10, MEMORY[0x24BDF32F0]);
    sub_24172835C(255, &qword_25714D3C0, MEMORY[0x24BEE1328], MEMORY[0x24BEE1340], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF03F0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D1F0);
  }
}

void sub_24175AAF4(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714D200, (uint64_t (*)(uint64_t))sub_24175AB18, (uint64_t (*)(uint64_t))sub_24175CCA4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_24175AB18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D208)
  {
    sub_24172887C(255, &qword_25714D210, (uint64_t)&type metadata for StateOfMindEntryPhaseType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_24175AC10(255);
    sub_24175ACC4(255);
    sub_24175C4B0(&qword_25714D368, (uint64_t (*)(uint64_t))sub_24175ACC4, sub_24175C48C, (uint64_t (*)(void))sub_24175C9E0);
    sub_24175CC60();
    swift_getOpaqueTypeConformance2();
    v0 = sub_2418A8820();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D208);
  }
}

void sub_24175AC10(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[3];
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!qword_25714D218)
  {
    sub_24175ACC4(255);
    v5[0] = v2;
    v5[1] = &type metadata for StateOfMindEntryPhaseType;
    v5[2] = v2;
    v6 = sub_24175C4B0(&qword_25714D368, (uint64_t (*)(uint64_t))sub_24175ACC4, sub_24175C48C, (uint64_t (*)(void))sub_24175C9E0);
    v7 = sub_24175CC60();
    v8 = v6;
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF3068], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714D218);
  }
}

void sub_24175ACC4(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714D220, (uint64_t (*)(uint64_t))sub_24175ACE8, (uint64_t (*)(uint64_t))sub_24175BF18, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_24175ACE8(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714D228, (uint64_t (*)(uint64_t))sub_24175AD0C, (uint64_t (*)(uint64_t))sub_24175B8F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_24175AD0C(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714D230, (uint64_t (*)(uint64_t))sub_24175AD30, (uint64_t (*)(uint64_t))sub_24175B648, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_24175AD30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_25714D238)
  {
    sub_24175AE94(255);
    v3 = v2;
    sub_24175B014(255);
    v5 = v4;
    sub_24175AF48(255);
    sub_2418A993C();
    sub_24175AFD0();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_24175B0D0(255, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
    sub_24175B150();
    sub_24175B580();
    swift_getOpaqueTypeConformance2();
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = OpaqueTypeConformance2;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF3858], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_25714D238);
  }
}

void sub_24175AE94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_25714D240)
  {
    sub_24175AF48(255);
    v3 = v2;
    sub_2418A993C();
    v6[2] = sub_24175AFD0();
    v6[3] = MEMORY[0x24BDF4E40];
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF33A8], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714D240);
  }
}

void sub_24175AF48(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  if (!qword_25714D248)
  {
    v4[0] = &type metadata for IntroPhase_iOS;
    v4[1] = sub_2418A993C();
    v4[2] = sub_24175AFD0();
    v4[3] = MEMORY[0x24BDF4E40];
    v2 = MEMORY[0x24269D434](a1, v4, MEMORY[0x24BDF2B08], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_25714D248);
  }
}

unint64_t sub_24175AFD0()
{
  unint64_t result;

  result = qword_25714D250;
  if (!qword_25714D250)
  {
    result = MEMORY[0x24269D47C](&unk_2418D3238, &type metadata for IntroPhase_iOS);
    atomic_store(result, (unint64_t *)&qword_25714D250);
  }
  return result;
}

void sub_24175B014(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  if (!qword_25714D258)
  {
    v2 = MEMORY[0x24BDEFA90];
    sub_24175B0D0(255, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
    v4 = v3;
    sub_24175B150();
    sub_24175B580();
    v7[0] = v4;
    v7[1] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x24269D434](a1, v7, v2, 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714D258);
  }
}

void sub_24175B0D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = a4();
    v9 = MEMORY[0x24269D434](a1, v11, a5, 0);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_24175B150()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D268)
  {
    sub_24175B1A8(255);
    v0 = sub_2418A8D30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D268);
  }
}

void sub_24175B1A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  if (!qword_25714D270)
  {
    sub_24175B260(255);
    v3 = v2;
    sub_24175B2EC();
    sub_24172159C(&qword_25714D2A8, (uint64_t (*)(uint64_t))sub_24175B2EC, MEMORY[0x24BDEB848]);
    v4 = MEMORY[0x24BDEFA90];
    v7[0] = v3;
    v7[1] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x24269D434](a1, v7, v4, 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714D270);
  }
}

void sub_24175B260(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714D278)
  {
    sub_24175B2EC();
    v5[0] = v2;
    v5[1] = sub_24172159C(&qword_25714D2A8, (uint64_t (*)(uint64_t))sub_24175B2EC, MEMORY[0x24BDEB848]);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDEFA90], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714D278);
  }
}

void sub_24175B2EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D280)
  {
    sub_24175B358();
    sub_24175B430();
    v0 = sub_2418A858C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D280);
  }
}

void sub_24175B358()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D288)
  {
    sub_24175B3B4();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D288);
  }
}

void sub_24175B3B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D290)
  {
    sub_2417312C0();
    sub_24172887C(255, &qword_25714C860, MEMORY[0x24BEE1328], MEMORY[0x24BDF1230]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D290);
  }
}

unint64_t sub_24175B430()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714D298;
  if (!qword_25714D298)
  {
    sub_24175B358();
    v2 = v1;
    v3[0] = sub_24175B498();
    v3[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714D298);
  }
  return result;
}

unint64_t sub_24175B498()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714D2A0;
  if (!qword_25714D2A0)
  {
    sub_24175B3B4();
    v2 = v1;
    v3[0] = sub_24175B500();
    v3[1] = sub_24173E43C();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714D2A0);
  }
  return result;
}

unint64_t sub_24175B500()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714C588;
  if (!qword_25714C588)
  {
    sub_2417312C0();
    v2 = v1;
    v3[0] = sub_241731344();
    v3[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714C588);
  }
  return result;
}

unint64_t sub_24175B580()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  result = qword_25714D2B0;
  if (!qword_25714D2B0)
  {
    sub_24175B150();
    v2 = v1;
    sub_24175B260(255);
    v4 = v3;
    sub_24175B2EC();
    sub_24172159C(&qword_25714D2A8, (uint64_t (*)(uint64_t))sub_24175B2EC, MEMORY[0x24BDEB848]);
    v5[2] = v4;
    v5[3] = swift_getOpaqueTypeConformance2();
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = v5[0];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3D0], v2, v5);
    atomic_store(result, (unint64_t *)&qword_25714D2B0);
  }
  return result;
}

void sub_24175B648(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_25714D2B8)
  {
    sub_24175B7F0(255);
    v3 = v2;
    sub_24175B014(255);
    v5 = v4;
    sub_24175BBBC(255, &qword_25714D2C8, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS, &qword_25714D2D0, (uint64_t)&unk_2418D60C8);
    type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
    sub_2418A993C();
    sub_24172159C(&qword_25714D2D0, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS, (uint64_t)&unk_2418D60C8);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_24175B0D0(255, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
    sub_24175B150();
    sub_24175B580();
    swift_getOpaqueTypeConformance2();
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = OpaqueTypeConformance2;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF3858], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_25714D2B8);
  }
}

void sub_24175B7F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_25714D2C0)
  {
    sub_24175BBBC(255, &qword_25714D2C8, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS, &qword_25714D2D0, (uint64_t)&unk_2418D60C8);
    v3 = v2;
    type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
    sub_2418A993C();
    v6[2] = sub_24172159C(&qword_25714D2D0, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS, (uint64_t)&unk_2418D60C8);
    v6[3] = MEMORY[0x24BDF4E40];
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF33A8], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714D2C0);
  }
}

void sub_24175B8F0(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714D2D8, (uint64_t (*)(uint64_t))sub_24175B914, (uint64_t (*)(uint64_t))sub_24175BC70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_24175B914(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_25714D2E0)
  {
    sub_24175BABC(255);
    v3 = v2;
    sub_24175B014(255);
    v5 = v4;
    sub_24175BBBC(255, &qword_25714D2F0, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS, &qword_25714D2F8, (uint64_t)&unk_2418D8478);
    type metadata accessor for ValenceSelectionPhase_iOS();
    sub_2418A993C();
    sub_24172159C(&qword_25714D2F8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS, (uint64_t)&unk_2418D8478);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_24175B0D0(255, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
    sub_24175B150();
    sub_24175B580();
    swift_getOpaqueTypeConformance2();
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = OpaqueTypeConformance2;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF3858], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_25714D2E0);
  }
}

void sub_24175BABC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_25714D2E8)
  {
    sub_24175BBBC(255, &qword_25714D2F0, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS, &qword_25714D2F8, (uint64_t)&unk_2418D8478);
    v3 = v2;
    type metadata accessor for ValenceSelectionPhase_iOS();
    sub_2418A993C();
    v6[2] = sub_24172159C(&qword_25714D2F8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS, (uint64_t)&unk_2418D8478);
    v6[3] = MEMORY[0x24BDF4E40];
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF33A8], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714D2E8);
  }
}

void sub_24175BBBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v10;
  uint64_t v11;
  _QWORD v12[4];

  if (!*a2)
  {
    v12[0] = a3(255);
    v12[1] = sub_2418A993C();
    v12[2] = sub_24172159C(a4, a3, a5);
    v12[3] = MEMORY[0x24BDF4E40];
    v10 = MEMORY[0x24269D434](a1, v12, MEMORY[0x24BDF2B08], 0);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_24175BC70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_25714D300)
  {
    sub_24175BE18(255);
    v3 = v2;
    sub_24175B014(255);
    v5 = v4;
    sub_24175BBBC(255, &qword_25714D310, (uint64_t (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS, &qword_25714D318, (uint64_t)&unk_2418D35C0);
    type metadata accessor for LabelsSelectionPhase_iOS();
    sub_2418A993C();
    sub_24172159C(&qword_25714D318, (uint64_t (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS, (uint64_t)&unk_2418D35C0);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_24175B0D0(255, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
    sub_24175B150();
    sub_24175B580();
    swift_getOpaqueTypeConformance2();
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = OpaqueTypeConformance2;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF3858], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_25714D300);
  }
}

void sub_24175BE18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_25714D308)
  {
    sub_24175BBBC(255, &qword_25714D310, (uint64_t (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS, &qword_25714D318, (uint64_t)&unk_2418D35C0);
    v3 = v2;
    type metadata accessor for LabelsSelectionPhase_iOS();
    sub_2418A993C();
    v6[2] = sub_24172159C(&qword_25714D318, (uint64_t (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS, (uint64_t)&unk_2418D35C0);
    v6[3] = MEMORY[0x24BDF4E40];
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF33A8], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714D308);
  }
}

void sub_24175BF18(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714D320, (uint64_t (*)(uint64_t))sub_24175BF3C, (uint64_t (*)(uint64_t))sub_24175C1E4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_24175BF3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_25714D328)
  {
    sub_24175C0E4(255);
    v3 = v2;
    sub_24175B014(255);
    v5 = v4;
    sub_24175BBBC(255, &qword_25714D338, (uint64_t (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS, &qword_25714D340, (uint64_t)&unk_2418D7220);
    type metadata accessor for DomainsSelectionPhase_iOS();
    sub_2418A993C();
    sub_24172159C(&qword_25714D340, (uint64_t (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS, (uint64_t)&unk_2418D7220);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_24175B0D0(255, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
    sub_24175B150();
    sub_24175B580();
    swift_getOpaqueTypeConformance2();
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = OpaqueTypeConformance2;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF3858], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_25714D328);
  }
}

void sub_24175C0E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_25714D330)
  {
    sub_24175BBBC(255, &qword_25714D338, (uint64_t (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS, &qword_25714D340, (uint64_t)&unk_2418D7220);
    v3 = v2;
    type metadata accessor for DomainsSelectionPhase_iOS();
    sub_2418A993C();
    v6[2] = sub_24172159C(&qword_25714D340, (uint64_t (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS, (uint64_t)&unk_2418D7220);
    v6[3] = MEMORY[0x24BDF4E40];
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF33A8], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714D330);
  }
}

void sub_24175C1E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_25714D348)
  {
    sub_24175C38C(255);
    v3 = v2;
    sub_24175B014(255);
    v5 = v4;
    sub_24175BBBC(255, &qword_25714D358, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS, &qword_25714D360, (uint64_t)&unk_2418D37C8);
    type metadata accessor for NotificationsSetupPhase_iOS();
    sub_2418A993C();
    sub_24172159C(&qword_25714D360, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS, (uint64_t)&unk_2418D37C8);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_24175B0D0(255, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
    sub_24175B150();
    sub_24175B580();
    swift_getOpaqueTypeConformance2();
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = OpaqueTypeConformance2;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF3858], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_25714D348);
  }
}

void sub_24175C38C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_25714D350)
  {
    sub_24175BBBC(255, &qword_25714D358, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS, &qword_25714D360, (uint64_t)&unk_2418D37C8);
    v3 = v2;
    type metadata accessor for NotificationsSetupPhase_iOS();
    sub_2418A993C();
    v6[2] = sub_24172159C(&qword_25714D360, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS, (uint64_t)&unk_2418D37C8);
    v6[3] = MEMORY[0x24BDF4E40];
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF33A8], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714D350);
  }
}

uint64_t sub_24175C48C()
{
  return sub_24175C4B0(&qword_25714D370, (uint64_t (*)(uint64_t))sub_24175ACE8, (uint64_t (*)(void))sub_24175C520, (uint64_t (*)(void))sub_24175C760);
}

uint64_t sub_24175C4B0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24175C520()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[6];

  result = qword_25714D378;
  if (!qword_25714D378)
  {
    sub_24175AD0C(255);
    v8 = v1;
    sub_24175AE94(255);
    sub_24175B014(255);
    v3 = v2;
    sub_24175AF48(255);
    sub_2418A993C();
    sub_24175AFD0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_24175B0D0(255, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
    sub_24175B150();
    sub_24175B580();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v5 = swift_getOpaqueTypeConformance2();
    sub_24175B7F0(255);
    v7 = v6;
    sub_24175BBBC(255, &qword_25714D2C8, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS, &qword_25714D2D0, (uint64_t)&unk_2418D60C8);
    type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
    sub_24172159C(&qword_25714D2D0, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS, (uint64_t)&unk_2418D60C8);
    swift_getOpaqueTypeConformance2();
    v9[2] = v7;
    v9[3] = v3;
    v9[4] = swift_getOpaqueTypeConformance2();
    v9[5] = OpaqueTypeConformance2;
    v9[0] = v5;
    v9[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, (unint64_t *)&qword_25714D378);
  }
  return result;
}

unint64_t sub_24175C760()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[6];

  result = qword_25714D380;
  if (!qword_25714D380)
  {
    sub_24175B8F0(255);
    v8 = v1;
    sub_24175BABC(255);
    sub_24175B014(255);
    v3 = v2;
    sub_24175BBBC(255, &qword_25714D2F0, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS, &qword_25714D2F8, (uint64_t)&unk_2418D8478);
    type metadata accessor for ValenceSelectionPhase_iOS();
    sub_2418A993C();
    sub_24172159C(&qword_25714D2F8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS, (uint64_t)&unk_2418D8478);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_24175B0D0(255, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
    sub_24175B150();
    sub_24175B580();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v5 = swift_getOpaqueTypeConformance2();
    sub_24175BE18(255);
    v7 = v6;
    sub_24175BBBC(255, &qword_25714D310, (uint64_t (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS, &qword_25714D318, (uint64_t)&unk_2418D35C0);
    type metadata accessor for LabelsSelectionPhase_iOS();
    sub_24172159C(&qword_25714D318, (uint64_t (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS, (uint64_t)&unk_2418D35C0);
    swift_getOpaqueTypeConformance2();
    v9[2] = v7;
    v9[3] = v3;
    v9[4] = swift_getOpaqueTypeConformance2();
    v9[5] = OpaqueTypeConformance2;
    v9[0] = v5;
    v9[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, (unint64_t *)&qword_25714D380);
  }
  return result;
}

unint64_t sub_24175C9E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[6];

  result = qword_25714D388;
  if (!qword_25714D388)
  {
    sub_24175BF18(255);
    v8 = v1;
    sub_24175C0E4(255);
    sub_24175B014(255);
    v3 = v2;
    sub_24175BBBC(255, &qword_25714D338, (uint64_t (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS, &qword_25714D340, (uint64_t)&unk_2418D7220);
    type metadata accessor for DomainsSelectionPhase_iOS();
    sub_2418A993C();
    sub_24172159C(&qword_25714D340, (uint64_t (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS, (uint64_t)&unk_2418D7220);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_24175B0D0(255, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
    sub_24175B150();
    sub_24175B580();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v5 = swift_getOpaqueTypeConformance2();
    sub_24175C38C(255);
    v7 = v6;
    sub_24175BBBC(255, &qword_25714D358, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS, &qword_25714D360, (uint64_t)&unk_2418D37C8);
    type metadata accessor for NotificationsSetupPhase_iOS();
    sub_24172159C(&qword_25714D360, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS, (uint64_t)&unk_2418D37C8);
    swift_getOpaqueTypeConformance2();
    v9[2] = v7;
    v9[3] = v3;
    v9[4] = swift_getOpaqueTypeConformance2();
    v9[5] = OpaqueTypeConformance2;
    v9[0] = v5;
    v9[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, (unint64_t *)&qword_25714D388);
  }
  return result;
}

unint64_t sub_24175CC60()
{
  unint64_t result;

  result = qword_25714D390;
  if (!qword_25714D390)
  {
    result = MEMORY[0x24269D47C](&unk_2418D2AA4, &type metadata for StateOfMindEntryPhaseType);
    atomic_store(result, (unint64_t *)&qword_25714D390);
  }
  return result;
}

void sub_24175CCA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D398)
  {
    sub_24172887C(255, &qword_25714D3A0, MEMORY[0x24BDEBF80], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2418A9090();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D398);
  }
}

unint64_t sub_24175CD10()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714D3A8;
  if (!qword_25714D3A8)
  {
    sub_24175AAF4(255);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714D3B0, (uint64_t (*)(uint64_t))sub_24175AB18, MEMORY[0x24BDED358]);
    v3[1] = sub_24172159C((unint64_t *)&qword_25714D3B8, (uint64_t (*)(uint64_t))sub_24175CCA4, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714D3A8);
  }
  return result;
}

void sub_24175CDA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_24175B0D0(255, &qword_25714D1F8, (uint64_t (*)(uint64_t))sub_24175AAF4, (uint64_t (*)(void))sub_24175CD10, MEMORY[0x24BDF32F0]);
    v7 = v6;
    sub_24175AA50();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_24175CE34@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  type metadata accessor for StateOfMindEntryView_iOS();
  return sub_241757F08(a1, a2);
}

uint64_t sub_24175CE84()
{
  type metadata accessor for StateOfMindEntryView_iOS();
  return sub_241758200();
}

uint64_t sub_24175CEC0()
{
  return sub_24175DD38(&qword_25714D3D0, (uint64_t (*)(uint64_t))sub_24175AA50, (uint64_t (*)(void))sub_24175CEE4, MEMORY[0x24BDED308]);
}

unint64_t sub_24175CEE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714D3D8;
  if (!qword_25714D3D8)
  {
    sub_24172835C(255, &qword_25714D3C0, MEMORY[0x24BEE1328], MEMORY[0x24BEE1340], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF03F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF0400], v1);
    atomic_store(result, (unint64_t *)&qword_25714D3D8);
  }
  return result;
}

uint64_t sub_24175CF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_23Tm(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
}

uint64_t sub_24175CF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_23Tm(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
}

uint64_t sub_24175CF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_23Tm(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
}

uint64_t sub_24175CF70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t OpaqueTypeConformance2;
  _QWORD v13[2];

  sub_24175B0D0(0, &qword_25714D260, (uint64_t (*)(uint64_t))sub_24175B150, (uint64_t (*)(void))sub_24175B580, MEMORY[0x24BDEFA90]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v5);
  v7 = (char *)v13 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v13 - v6, a1, v3);
  sub_24175B150();
  v9 = v8;
  v10 = sub_24175B580();
  v13[0] = v9;
  v13[1] = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  MEMORY[0x24269B628](v7, v3, OpaqueTypeConformance2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_24175D05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_23Tm(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
}

uint64_t keypath_get_23Tm(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  sub_2418A8A24();
  a4(0);
  return sub_2418A89A0();
}

void sub_24175D0AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D3E0)
  {
    sub_24172887C(255, &qword_25714D210, (uint64_t)&type metadata for StateOfMindEntryPhaseType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2418A96F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D3E0);
  }
}

uint64_t sub_24175D118()
{
  uint64_t v0;

  return sub_241754FB0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24175D120(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_24172887C(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x24269D47C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24175D168@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A8A78();
  *a1 = result;
  return result;
}

uint64_t sub_24175D190@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A8A78();
  *a1 = result;
  return result;
}

uint64_t sub_24175D1B8()
{
  swift_retain();
  return sub_2418A8A84();
}

uint64_t sub_24175D1E0()
{
  swift_retain();
  return sub_2418A8A84();
}

void sub_24175D21C(char *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for StateOfMindEntryView_iOS();
  sub_241755140(*a1, a2);
}

uint64_t sub_24175D270()
{
  return sub_24175D96C((uint64_t (*)(uint64_t))sub_2417595D4);
}

uint64_t sub_24175D27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_23Tm(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
}

uint64_t sub_24175D294()
{
  return sub_24175D2E4(4u);
}

uint64_t sub_24175D29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_23Tm(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
}

uint64_t sub_24175D2AC()
{
  return sub_24175D2E4(3u);
}

uint64_t sub_24175D2B8()
{
  return sub_24175D2E4(2u);
}

uint64_t sub_24175D2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_23Tm(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
}

uint64_t sub_24175D2D0()
{
  return sub_24175D2E4(1u);
}

uint64_t sub_24175D2DC()
{
  return sub_24175D2E4(0);
}

uint64_t sub_24175D2E4(unsigned __int8 a1)
{
  type metadata accessor for StateOfMindEntryView_iOS();
  return sub_2417585E0(a1);
}

uint64_t sub_24175D324()
{
  uint64_t v0;

  return sub_24175CF70(*(_QWORD *)(v0 + 16));
}

unint64_t sub_24175D33C()
{
  unint64_t result;

  result = qword_2543915E8;
  if (!qword_2543915E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2543915E8);
  }
  return result;
}

void sub_24175D37C()
{
  type metadata accessor for StateOfMindEntryView_iOS();
  sub_2417597D4();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_24175D3CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714F350;
  if (!qword_25714F350)
  {
    sub_24172570C(255, &qword_25714D438, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25714F350);
  }
  return result;
}

uint64_t sub_24175D444()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for StateOfMindEntryView_iOS();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + ((v2 + 32) & ~v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + v1[11];
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v3 + v1[12];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = v3 + v1[13];
  sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8EB0();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = v8 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v12 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24175D658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StateOfMindEntryView_iOS() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_24175D6DC;
  return sub_241759CA0(a1, v5, v6, v7);
}

uint64_t sub_24175D6DC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_24175D728()
{
  return sub_24175D96C((uint64_t (*)(uint64_t))sub_241759FF8);
}

uint64_t sub_24175D734@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24175A5BC(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_24175D744@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24175A090(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for StateOfMindEntryView_iOS();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + v1[11];
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v3 + v1[12];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = v3 + v1[13];
  sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8EB0();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = v8 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v12 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24175D960()
{
  return sub_24175D96C((uint64_t (*)(uint64_t))sub_24175A4E0);
}

uint64_t sub_24175D96C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StateOfMindEntryView_iOS() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_24175D9B0()
{
  return swift_deallocObject();
}

uint64_t sub_24175D9C0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for StateOfMindEntryView_iOS();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + v1[11];
  sub_24172570C(0, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v3 + v1[12];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = v3 + v1[13];
  sub_24172570C(0, &qword_25714C0D0, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8EB0();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = v8 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    v12 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24175DBD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for StateOfMindEntryView_iOS();
  return sub_2417585E0(*(_BYTE *)(v0
                                + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
                                + *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)));
}

uint64_t sub_24175DC18()
{
  return swift_deallocObject();
}

uint64_t sub_24175DC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_23Tm(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for IntroPhaseSpecs);
}

uint64_t storeEnumTagSinglePayload for StateOfMindEntryPhaseType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_24175DC84 + 4 * byte_2418D263D[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_24175DCB8 + 4 * byte_2418D2638[v4]))();
}

uint64_t sub_24175DCB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24175DCC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24175DCC8);
  return result;
}

uint64_t sub_24175DCD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24175DCDCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_24175DCE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24175DCE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryPhaseType()
{
  return &type metadata for StateOfMindEntryPhaseType;
}

uint64_t sub_24175DD04()
{
  return sub_24175DD38(&qword_25714D450, (uint64_t (*)(uint64_t))sub_24175DDD0, sub_24175CEC0, MEMORY[0x24BDEF3E0]);
}

uint64_t sub_24175DD38(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    sub_24175AAF4(255);
    v10[2] = v9;
    v10[3] = sub_24175CD10();
    v10[0] = swift_getOpaqueTypeConformance2();
    v10[1] = a3();
    result = MEMORY[0x24269D47C](a4, v8, v10);
    atomic_store(result, a1);
  }
  return result;
}

void sub_24175DDD0(uint64_t a1)
{
  sub_24175CDA8(a1, &qword_25714D458, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

uint64_t sub_24175DDE4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24175DDF8()
{
  unint64_t result;

  result = qword_25714D460;
  if (!qword_25714D460)
  {
    result = MEMORY[0x24269D47C](&unk_2418D2A7C, &type metadata for StateOfMindEntryPhaseType);
    atomic_store(result, (unint64_t *)&qword_25714D460);
  }
  return result;
}

unint64_t sub_24175DE3C(unint64_t result)
{
  if (result >= 6)
    return 6;
  return result;
}

uint64_t sub_24175DE4C()
{
  return MEMORY[0x24BEE1778];
}

uint64_t NotificationSettingsModel.areNotificationsDisabled.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24175DED8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24175DF58(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v2;
  return sub_2418A8424();
}

uint64_t NotificationSettingsModel.areNotificationsDisabled.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_2418A8424();
}

void (*NotificationSettingsModel.areNotificationsDisabled.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_2418A840C();
  return sub_24175E0A8;
}

void sub_24175E0A8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t NotificationSettingsModel.$areNotificationsDisabled.getter()
{
  swift_beginAccess();
  sub_24172887C(0, &qword_2543914E8, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A83F4();
  return swift_endAccess();
}

uint64_t sub_24175E168()
{
  swift_beginAccess();
  sub_24172887C(0, &qword_2543914E8, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A83F4();
  return swift_endAccess();
}

uint64_t sub_24175E1E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v2 = MEMORY[0x24BEE1328];
  sub_24172887C(0, &qword_25714D470, MEMORY[0x24BEE1328], MEMORY[0x24BDB9ED8]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v7 = MEMORY[0x24BDAC7A8](v3, v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v15 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13((char *)&v15 - v11, a1, v4);
  v13(v9, (uint64_t)v12, v4);
  swift_beginAccess();
  sub_24172887C(0, &qword_2543914E8, v2, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A8400();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v12, v4);
}

uint64_t NotificationSettingsModel.$areNotificationsDisabled.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = MEMORY[0x24BEE1328];
  sub_24172887C(0, &qword_25714D470, MEMORY[0x24BEE1328], MEMORY[0x24BDB9ED8]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v9 - v7, a1, v4);
  swift_beginAccess();
  sub_24172887C(0, &qword_2543914E8, v2, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A8400();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void (*NotificationSettingsModel.$areNotificationsDisabled.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = MEMORY[0x24BEE1328];
  sub_24172887C(0, &qword_25714D470, MEMORY[0x24BEE1328], MEMORY[0x24BDB9ED8]);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  v8 = malloc(v7);
  v9 = OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel__areNotificationsDisabled;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_24172887C(0, &qword_2543914E8, v4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v3[16] = v10;
  sub_2418A83F4();
  swift_endAccess();
  return sub_24175E504;
}

void sub_24175E504(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_2418A8400();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_2418A8400();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

id NotificationSettingsModel.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *NotificationSettingsModel.init()()
{
  objc_class *ObjectType;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  char *v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE65DF0]), sel_init);
  sub_2418A9DE0();
  v2 = objc_allocWithZone(MEMORY[0x24BDF88B8]);
  v3 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithBundleIdentifier_, v3);

  v5 = objc_allocWithZone(ObjectType);
  v6 = NotificationSettingsModel.init(settingsManager:userNotificationCenter:)(v1, v4);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v6;
}

char *NotificationSettingsModel.__allocating_init(settingsManager:userNotificationCenter:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return NotificationSettingsModel.init(settingsManager:userNotificationCenter:)(a1, a2);
}

char *NotificationSettingsModel.init(settingsManager:userNotificationCenter:)(void *a1, void *a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  char *v17;
  void *v18;
  char *v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  char *v24;
  void *v25;
  uint64_t v27;
  objc_super v28;
  BOOL v29;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_24172887C(0, &qword_2543914E8, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v27 - v11;
  v13 = &v3[OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel__areNotificationsDisabled];
  v29 = 0;
  v14 = v3;
  sub_2418A83E8();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v12, v8);
  *(_QWORD *)&v14[OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager] = a1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_userNotificationCenter] = a2;
  v15 = a1;
  v16 = a2;

  v28.receiver = v14;
  v28.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v28, sel_init);
  v18 = *(void **)&v17[OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_userNotificationCenter];
  v19 = v17;
  v20 = objc_msgSend(v18, sel_notificationSettings);
  v21 = objc_msgSend(v20, sel_authorizationStatus);

  swift_getKeyPath();
  swift_getKeyPath();
  v29 = v21 != (id)2;
  v22 = v19;
  sub_2418A8424();
  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v23, sel_addObserver_selector_name_object_, v22, sel_updateNotificationAuthorizationStatus, *MEMORY[0x24BEBE008], 0);

  sub_241762EFC(0, (unint64_t *)&qword_2543915E8);
  v24 = v22;
  v25 = (void *)sub_2418AA0D4();
  objc_msgSend(v15, sel_addObserver_queue_, v24, v25);

  return v24;
}

Swift::Void __swiftcall NotificationSettingsModel.updateNotificationAuthorizationStatus()()
{
  char *v0;
  id v1;
  char *v2;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_userNotificationCenter], sel_notificationSettings);
  objc_msgSend(v1, sel_authorizationStatus);

  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v0;
  sub_2418A8424();
}

id NotificationSettingsModel.__deallocating_deinit()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_, v0);

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t NotificationSettingsModel.middayNotificationsEnabled.getter()
{
  return sub_24175FBB0((SEL *)&selRef_middayNotificationsEnabled);
}

id sub_24175EDB4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24175FC58(a1, (SEL *)&selRef_middayNotificationsEnabled, a2);
}

id sub_24175EDC0(unsigned __int8 *a1, _QWORD *a2)
{
  return objc_msgSend(*(id *)(*a2 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setMiddayNotificationsEnabled_, *a1);
}

id NotificationSettingsModel.middayNotificationsEnabled.setter(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setMiddayNotificationsEnabled_, a1 & 1);
}

id (*NotificationSettingsModel.middayNotificationsEnabled.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  void *v3;
  char v4;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  *(_QWORD *)a1 = v3;
  if (objc_msgSend(v3, sel_middayNotificationsEnabled))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2418A8418();
    swift_release();
    swift_release();
    v4 = *(_BYTE *)(a1 + 9) ^ 1;
  }
  else
  {
    v4 = 0;
  }
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_24175EEC0;
}

id sub_24175EEC0(uint64_t a1, uint64_t a2)
{
  return sub_24175FE08(a1, a2, (SEL *)&selRef_setMiddayNotificationsEnabled_);
}

uint64_t NotificationSettingsModel.endOfDayNotificationsEnabled.getter()
{
  return sub_24175FBB0((SEL *)&selRef_endOfDayNotificationsEnabled);
}

id sub_24175EED8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24175FC58(a1, (SEL *)&selRef_endOfDayNotificationsEnabled, a2);
}

id sub_24175EEE4(unsigned __int8 *a1, _QWORD *a2)
{
  return objc_msgSend(*(id *)(*a2 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setEndOfDayNotificationsEnabled_, *a1);
}

id NotificationSettingsModel.endOfDayNotificationsEnabled.setter(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setEndOfDayNotificationsEnabled_, a1 & 1);
}

id (*NotificationSettingsModel.endOfDayNotificationsEnabled.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  void *v3;
  char v4;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  *(_QWORD *)a1 = v3;
  if (objc_msgSend(v3, sel_endOfDayNotificationsEnabled))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2418A8418();
    swift_release();
    swift_release();
    v4 = *(_BYTE *)(a1 + 9) ^ 1;
  }
  else
  {
    v4 = 0;
  }
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_24175EFE4;
}

id sub_24175EFE4(uint64_t a1, uint64_t a2)
{
  return sub_24175FE08(a1, a2, (SEL *)&selRef_setEndOfDayNotificationsEnabled_);
}

uint64_t NotificationSettingsModel.customReminderSchedule.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_customReminderSchedule);
  sub_241762EFC(0, (unint64_t *)&qword_2543914F0);
  v2 = sub_2418A9EB8();

  if (v2 < 0 || (v2 & 0x4000000000000000) != 0)
  {
    v5 = swift_bridgeObjectRetain();
    v3 = (uint64_t)sub_241760E20(v5, (void (*)(_QWORD *, uint64_t, unint64_t))sub_241762418);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v6 = v3;
  sub_2417608B4(&v6);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_24175F0CC(uint64_t a1, _QWORD *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(*a2 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  sub_241762EFC(0, (unint64_t *)&qword_2543914F0);
  swift_bridgeObjectRetain();
  v3 = (id)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setCustomReminderSchedule_, v3);

}

void NotificationSettingsModel.customReminderSchedule.setter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  sub_241762EFC(0, (unint64_t *)&qword_2543914F0);
  v2 = (id)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setCustomReminderSchedule_, v2);

}

uint64_t sub_24175F1D0(id *a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  char v23;
  char v24;
  uint64_t (*v25)(char *, uint64_t);
  uint64_t result;
  id v27;
  uint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  char v32;
  id v33;
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;

  v4 = sub_2418A7EC0();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v38 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)&v37 - v11;
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)&v37 - v15;
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v37 - v18;
  v20 = *a1;
  v21 = *a2;
  v22 = objc_msgSend(*a1, sel_dateComponents);
  sub_2418A7E6C();

  v37 = sub_2418A7E78();
  v24 = v23;
  v25 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  result = v25(v19, v4);
  if ((v24 & 1) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v27 = objc_msgSend(v20, sel_dateComponents);
  sub_2418A7E6C();

  v28 = sub_2418A7E90();
  LOBYTE(v27) = v29;
  result = v25(v16, v4);
  if ((v27 & 1) != 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v30 = objc_msgSend(v21, sel_dateComponents);
  sub_2418A7E6C();

  v31 = sub_2418A7E78();
  LOBYTE(v30) = v32;
  result = v25(v12, v4);
  if ((v30 & 1) != 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v33 = objc_msgSend(v21, sel_dateComponents);
  v34 = v38;
  sub_2418A7E6C();

  v35 = sub_2418A7E90();
  LOBYTE(v33) = v36;
  result = v25(v34, v4);
  if ((v33 & 1) != 0)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (v37 == v31)
    return v28 < v35;
  else
    return v37 < v31;
}

void (*NotificationSettingsModel.customReminderSchedule.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = NotificationSettingsModel.customReminderSchedule.getter();
  return sub_24175F42C;
}

void sub_24175F42C(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(*(_QWORD *)(a1 + 8) + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  sub_241762EFC(0, (unint64_t *)&qword_2543914F0);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = (void *)sub_2418A9EAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setCustomReminderSchedule_, v4);

    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = (id)sub_2418A9EAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setCustomReminderSchedule_, v5);

  }
}

void sub_24175F510(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v6 = sub_2418A8340();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = NotificationSettingsModel.customReminderSchedule.getter();
  v23 = a1;
  v12 = sub_241808DAC(sub_241763004, (uint64_t)v22, v11);
  swift_bridgeObjectRelease();
  if (v12)
  {
    sub_2418A8328();
    v13 = sub_2418A8334();
    v14 = sub_2418AA05C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_24171C000, v13, v14, "Attempting to add a reminder time that already exists in the schedule.", v15, 2u);
      MEMORY[0x24269D548](v15, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    v16 = objc_allocWithZone(MEMORY[0x24BE65DE8]);
    v17 = (void *)sub_2418A7E54();
    v18 = objc_msgSend(v16, sel_initWithDateComponents_isEnabled_, v17, a2 & 1);

    v19 = v18;
    v24 = NotificationSettingsModel.customReminderSchedule.getter();
    MEMORY[0x24269C6A8]();
    if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2418A9EDC();
    sub_2418A9EF4();
    sub_2418A9EC4();
    v20 = *(void **)(v3 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
    sub_241762EFC(0, (unint64_t *)&qword_2543914F0);
    v21 = (void *)sub_2418A9EAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setCustomReminderSchedule_, v21);

  }
}

void sub_24175F740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  void *v12;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;

  v3 = sub_2418A8340();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = NotificationSettingsModel.customReminderSchedule.getter();
  v18 = a1;
  v9 = sub_24175F9B0(sub_241763020, (uint64_t)v17, v8);
  v11 = v10;
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
    sub_2418A8328();
    v14 = sub_2418A8334();
    v15 = sub_2418AA044();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_24171C000, v14, v15, "trying to remove a component not found in the array", v16, 2u);
      MEMORY[0x24269D548](v16, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    v19 = NotificationSettingsModel.customReminderSchedule.getter();

    v12 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
    sub_241762EFC(0, (unint64_t *)&qword_2543914F0);
    v13 = (void *)sub_2418A9EAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setCustomReminderSchedule_, v13);

  }
}

uint64_t sub_24175F8F0(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;

  v4 = sub_2418A7EC0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(*a1, sel_dateComponents);
  sub_2418A7E6C();

  LOBYTE(a2) = MEMORY[0x24269A668](v8, a2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return a2 & 1;
}

uint64_t sub_24175F9B0(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  char v10;
  uint64_t v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_14;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = 0;
  if (v6)
  {
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24269CAD4](v7, a3) : *(id *)(a3 + 8 * v7 + 32);
      v9 = v8;
      v13 = v8;
      v10 = a1(&v13);

      if (v3 || (v10 & 1) != 0)
        break;
      v11 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        v6 = sub_2418AA398();
        swift_bridgeObjectRelease();
        v7 = 0;
        if (!v6)
          return v7;
      }
      else
      {
        ++v7;
        if (v11 == v6)
          return 0;
      }
    }
  }
  return v7;
}

uint64_t sub_24175FAC4(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_2417623B0(v3);
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_2418A9EC4();
      return v10;
    }
  }
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t NotificationSettingsModel.periodicPromptedAssessmentNotificationsEnabled.getter()
{
  return sub_24175FBB0((SEL *)&selRef_periodicPromptedAssessmentNotificationsEnabled);
}

uint64_t sub_24175FBB0(SEL *a1)
{
  uint64_t v1;
  char v2;
  char v4;

  if (objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), *a1))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2418A8418();
    swift_release();
    swift_release();
    v2 = v4 ^ 1;
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

id sub_24175FC4C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24175FC58(a1, (SEL *)&selRef_periodicPromptedAssessmentNotificationsEnabled, a2);
}

id sub_24175FC58@<X0>(_QWORD *a1@<X0>, SEL *a2@<X3>, _BYTE *a3@<X8>)
{
  id result;
  char v5;
  char v6;

  result = objc_msgSend(*(id *)(*a1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), *a2);
  if ((_DWORD)result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2418A8418();
    swift_release();
    result = (id)swift_release();
    v5 = v6 ^ 1;
  }
  else
  {
    v5 = 0;
  }
  *a3 = v5 & 1;
  return result;
}

id sub_24175FCFC(unsigned __int8 *a1, _QWORD *a2)
{
  return objc_msgSend(*(id *)(*a2 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setPeriodicPromptedAssessmentNotificationsEnabled_, *a1);
}

id NotificationSettingsModel.periodicPromptedAssessmentNotificationsEnabled.setter(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setPeriodicPromptedAssessmentNotificationsEnabled_, a1 & 1);
}

id (*NotificationSettingsModel.periodicPromptedAssessmentNotificationsEnabled.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  void *v3;
  char v4;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  *(_QWORD *)a1 = v3;
  if (objc_msgSend(v3, sel_periodicPromptedAssessmentNotificationsEnabled))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2418A8418();
    swift_release();
    swift_release();
    v4 = *(_BYTE *)(a1 + 9) ^ 1;
  }
  else
  {
    v4 = 0;
  }
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_24175FDFC;
}

id sub_24175FDFC(uint64_t a1, uint64_t a2)
{
  return sub_24175FE08(a1, a2, (SEL *)&selRef_setPeriodicPromptedAssessmentNotificationsEnabled_);
}

id sub_24175FE08(uint64_t a1, uint64_t a2, SEL *a3)
{
  return objc_msgSend(*(id *)a1, *a3, *(unsigned __int8 *)(a1 + 8));
}

uint64_t NotificationSettingsModel.settingsManagerDidUpdateNotificationSettings(_:)()
{
  swift_getObjectType();
  sub_24176092C();
  sub_2418A83B8();
  sub_2418A83D0();
  return swift_release();
}

Swift::Bool __swiftcall NotificationSettingsModel.shouldShowMindfulnessSettingsButton()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  unsigned __int8 v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29[2];

  v29[1] = *(id *)MEMORY[0x24BDAC8D0];
  swift_getObjectType();
  v0 = sub_2418A8340();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A9DE0();
  v5 = objc_allocWithZone(MEMORY[0x24BDD3E00]);
  v6 = (void *)sub_2418A9DB0();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithBundleIdentifier_, v6);

  v29[0] = 0;
  v8 = objc_msgSend(v7, sel_isWatchAppInstalledWithError_, v29);
  if (v8)
  {
    v9 = v8;
    v10 = v29[0];
    v11 = objc_msgSend(v9, sel_BOOLValue);

  }
  else
  {
    v12 = v29[0];
    v13 = (void *)sub_2418A7F14();

    swift_willThrow();
    sub_2418A8328();
    v14 = v13;
    v15 = v13;
    v16 = sub_2418A8334();
    v17 = sub_2418AA044();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v27 = (void *)swift_slowAlloc();
      v29[0] = v27;
      *(_DWORD *)v18 = 136446466;
      v19 = sub_2418AA5D8();
      v28 = sub_24176024C(v19, v20, (uint64_t *)v29);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      v28 = (uint64_t)v13;
      v21 = v13;
      sub_2417609B0();
      v22 = sub_2418A9DF8();
      v28 = sub_24176024C(v22, v23, (uint64_t *)v29);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24171C000, v16, v17, "[%{public}s] Could not determine if Mindfulness app is installed with error: %s", (uint8_t *)v18, 0x16u);
      v24 = v27;
      swift_arrayDestroy();
      MEMORY[0x24269D548](v24, -1, -1);
      MEMORY[0x24269D548](v18, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
  return v11;
}

uint64_t sub_241760210@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getObjectType();
  result = sub_2418A83B8();
  *a1 = result;
  return result;
}

uint64_t sub_24176024C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_24176031C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_241762F34((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_241762F34((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_24176031C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2418AA200();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2417604D4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2418AA314();
  if (!v8)
  {
    sub_2418AA374();
    __break(1u);
LABEL_17:
    result = sub_2418AA3D4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2417604D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_241760568(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_241760754(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_241760754(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_241760568(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2417606DC(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2418AA2C0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_2418AA374();
      __break(1u);
LABEL_10:
      v2 = sub_2418A9E4C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2418AA3D4();
    __break(1u);
LABEL_14:
    result = sub_2418AA374();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2417606DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_24172887C(0, &qword_25714D560, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_241760754(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_24172887C(0, &qword_25714D560, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_2417608B4(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24188F148();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2417611AC(v6);
  return sub_2418AA32C();
}

unint64_t sub_24176092C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714D020;
  if (!qword_25714D020)
  {
    v1 = type metadata accessor for NotificationSettingsModel();
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for NotificationSettingsModel, v1);
    atomic_store(result, (unint64_t *)&qword_25714D020);
  }
  return result;
}

uint64_t type metadata accessor for NotificationSettingsModel()
{
  uint64_t result;

  result = qword_2543914D0;
  if (!qword_2543914D0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2417609B0()
{
  unint64_t result;

  result = qword_25714D490;
  if (!qword_25714D490)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25714D490);
  }
  return result;
}

uint64_t sub_241760A04()
{
  return MEMORY[0x24BDB9D70];
}

id sub_241760A18@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24175FC58(a1, (SEL *)&selRef_middayNotificationsEnabled, a2);
}

id sub_241760A34(unsigned __int8 *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_6Tm(a1, a2, a3, a4, (SEL *)&selRef_setMiddayNotificationsEnabled_);
}

id sub_241760A40@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24175FC58(a1, (SEL *)&selRef_endOfDayNotificationsEnabled, a2);
}

id sub_241760A5C(unsigned __int8 *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_6Tm(a1, a2, a3, a4, (SEL *)&selRef_setEndOfDayNotificationsEnabled_);
}

uint64_t sub_241760A68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = NotificationSettingsModel.customReminderSchedule.getter();
  *a1 = result;
  return result;
}

id sub_241760A94@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24175FC58(a1, (SEL *)&selRef_periodicPromptedAssessmentNotificationsEnabled, a2);
}

id sub_241760AB0(unsigned __int8 *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_6Tm(a1, a2, a3, a4, (SEL *)&selRef_setPeriodicPromptedAssessmentNotificationsEnabled_);
}

id keypath_set_6Tm(unsigned __int8 *a1, _QWORD *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  return objc_msgSend(*(id *)(*a2 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), *a5, *a1);
}

uint64_t sub_241760AD8()
{
  return type metadata accessor for NotificationSettingsModel();
}

void sub_241760AE0()
{
  unint64_t v0;

  sub_24172887C(319, &qword_2543914E8, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for NotificationSettingsModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NotificationSettingsModel.__allocating_init(settingsManager:userNotificationCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_241760B88(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  size_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = a2 + 48 * a3;
        if (v10 < (unint64_t)&v8[6 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 48 * v5)
          goto LABEL_17;
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_24172887C(0, (unint64_t *)&unk_25714D580, (uint64_t)&_s19EntryMomentDataViewV15ItemDescriptionVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 48);
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

_QWORD *sub_241760D28(unint64_t a1)
{
  return sub_241760E20(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_241762654);
}

_QWORD *sub_241760D34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_241762FB0();
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_241762D08(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_241762E9C();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_241760E14(unint64_t a1)
{
  return sub_241760E20(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_241762890);
}

_QWORD *sub_241760E20(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      sub_24172887C(0, (unint64_t *)&qword_25714D510, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_2418AA398();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_241760F38(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = 8 * v5;
    if (v5 <= 0)
    {
      v9 = (char *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = v9 + 32;
        v13 = (char *)(a2 + 8 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8])
          goto LABEL_19;
        memcpy(v12, v13, 8 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_24172887C(0, &qword_25714D508, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v9 = (char *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      *((_QWORD *)v9 + 2) = v5;
      *((_QWORD *)v9 + 3) = 2 * (v11 >> 3);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

_QWORD *sub_2417610B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_24172887C(0, &qword_25714D500, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_241762D08(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_241762E9C();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

void sub_2417611AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint32_t *p_align;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  id *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  uint32_t *v49;
  char *v50;
  void *v51;
  char v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  id v55;
  char *v56;
  uint64_t v57;
  char v58;
  id v59;
  char *v60;
  id v61;
  char v62;
  id v63;
  char *v64;
  uint64_t v65;
  char v66;
  char v67;
  _BOOL4 v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  void *v80;
  id v81;
  id v82;
  id v83;
  char *v84;
  char v85;
  void (*v86)(char *, uint64_t);
  id v87;
  char *v88;
  uint64_t v89;
  char v90;
  id v91;
  char *v92;
  id v93;
  char v94;
  id v95;
  char *v96;
  uint64_t v97;
  char v98;
  _BOOL4 v99;
  void *v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  BOOL v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  BOOL v128;
  uint64_t v129;
  char v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  BOOL v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char *v153;
  uint64_t v154;
  unint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void **v176;
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  id v187;
  id v188;
  void *v189;
  id v190;
  uint64_t v191;

  v3 = sub_2418A7EC0();
  v183 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v178 = (char *)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v179 = (char *)&v162 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v180 = (char *)&v162 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v181 = (char *)&v162 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v169 = (char *)&v162 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v170 = (char *)&v162 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v171 = (char *)&v162 - v24;
  MEMORY[0x24BDAC7A8](v23, v25);
  v172 = (char *)&v162 - v26;
  v27 = a1[1];
  v28 = sub_2418AA4A0();
  if (v28 >= v27)
  {
    if (v27 < 0)
      goto LABEL_151;
    if (v27)
      sub_241761D6C(0, v27, 1, a1);
    return;
  }
  if (v27 >= 0)
    v29 = v27;
  else
    v29 = v27 + 1;
  if (v27 < -1)
    goto LABEL_167;
  v167 = v28;
  v174 = v27;
  v177 = v1;
  v163 = a1;
  if (v27 < 2)
  {
    v32 = (char *)MEMORY[0x24BEE4AF8];
    v191 = MEMORY[0x24BEE4AF8];
    v176 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v27 != 1)
    {
      v103 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_114:
      if (v103 >= 2)
      {
        v154 = *v163;
        do
        {
          v155 = v103 - 2;
          if (v103 < 2)
            goto LABEL_145;
          if (!v154)
            goto LABEL_166;
          v156 = v32;
          v157 = *(_QWORD *)&v32[16 * v155 + 32];
          v158 = *(_QWORD *)&v32[16 * v103 + 24];
          v159 = v177;
          sub_24176207C((void **)(v154 + 8 * v157), (void **)(v154 + 8 * *(_QWORD *)&v32[16 * v103 + 16]), v154 + 8 * v158, v176);
          v177 = v159;
          if (v159)
            break;
          if (v158 < v157)
            goto LABEL_147;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v156 = sub_24188E1A4((uint64_t)v32);
          if (v155 >= *((_QWORD *)v156 + 2))
            goto LABEL_148;
          v160 = &v156[16 * v155 + 32];
          *(_QWORD *)v160 = v157;
          *((_QWORD *)v160 + 1) = v158;
          v161 = *((_QWORD *)v156 + 2);
          if (v103 > v161)
            goto LABEL_149;
          v32 = v156;
          memmove(&v156[16 * v103 + 16], &v156[16 * v103 + 32], 16 * (v161 - v103));
          *((_QWORD *)v156 + 2) = v161 - 1;
          v103 = v161 - 1;
        }
        while (v161 > 2);
      }
LABEL_125:
      swift_bridgeObjectRelease();
LABEL_126:
      *(_QWORD *)((v191 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_2418A9EC4();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v30 = v29 >> 1;
    sub_241762EFC(0, (unint64_t *)&qword_2543914F0);
    v31 = sub_2418A9EE8();
    *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) = v30;
    v176 = (void **)((v31 & 0xFFFFFFFFFFFFFF8) + 32);
    v191 = v31;
  }
  v33 = 0;
  v34 = *a1;
  v164 = *a1 + 16;
  v165 = v34 - 8;
  v32 = (char *)MEMORY[0x24BEE4AF8];
  p_align = &stru_2511B9FE8.align;
  v182 = v3;
  v36 = v174;
  v184 = v34;
  while (1)
  {
    v37 = v33 + 1;
    v173 = v33;
    if (v33 + 1 < v36)
    {
      v38 = *(void **)(v34 + 8 * v37);
      v189 = *(void **)(v34 + 8 * v33);
      v39 = v189;
      v190 = v38;
      v40 = v33;
      v41 = v38;
      v42 = v39;
      v43 = v177;
      LODWORD(v186) = sub_24175F1D0(&v190, &v189);
      v177 = v43;
      if (v43)
      {
        swift_bridgeObjectRelease();

        goto LABEL_126;
      }

      v37 = v40 + 2;
      v33 = v40;
      if (v40 + 2 < v174)
      {
        v185 = v40 + 2;
        v166 = v32;
        v44 = (id *)(v164 + 8 * v40);
        do
        {
          v45 = *(v44 - 1);
          v46 = *v44;
          v47 = v45;
          v48 = objc_msgSend(v46, *((SEL *)p_align + 455));
          v49 = p_align;
          v50 = v172;
          sub_2418A7E6C();

          v51 = (void *)sub_2418A7E78();
          LOBYTE(v48) = v52;
          v53 = v182;
          v54 = *(void (**)(char *, uint64_t))(v183 + 8);
          v54(v50, v182);
          if ((v48 & 1) != 0)
            goto LABEL_162;
          v187 = v51;
          v188 = v46;
          v55 = objc_msgSend(v46, (SEL)v49 + 113);
          v56 = v171;
          sub_2418A7E6C();

          v57 = sub_2418A7E90();
          LOBYTE(v55) = v58;
          v54(v56, v53);
          if ((v55 & 1) != 0)
            goto LABEL_164;
          v59 = objc_msgSend(v47, (SEL)v49 + 113);
          v60 = v170;
          sub_2418A7E6C();

          v61 = (id)sub_2418A7E78();
          LOBYTE(v59) = v62;
          v54(v60, v53);
          if ((v59 & 1) != 0)
            goto LABEL_161;
          v63 = objc_msgSend(v47, (SEL)v49 + 113);
          v64 = v169;
          sub_2418A7E6C();

          v65 = sub_2418A7E90();
          v67 = v66;
          v54(v64, v53);
          if ((v67 & 1) != 0)
            goto LABEL_163;

          v68 = v57 < v65;
          if (v187 != v61)
            v68 = (uint64_t)v187 < (uint64_t)v61;
          if ((v186 & 1) != v68)
          {
            v32 = v166;
            v3 = v182;
            p_align = (_DWORD *)(&stru_2511B9FE8 + 24);
            v37 = v185;
            goto LABEL_27;
          }
          ++v44;
          ++v185;
          p_align = (_DWORD *)(&stru_2511B9FE8 + 24);
        }
        while (v174 != v185);
        v37 = v174;
        v32 = v166;
        v3 = v182;
LABEL_27:
        v33 = v173;
      }
      v34 = v184;
      if ((v186 & 1) != 0)
      {
        if (v37 < v33)
          goto LABEL_154;
        if (v33 < v37)
        {
          v69 = (uint64_t *)(v165 + 8 * v37);
          v70 = v33;
          v71 = v37;
          v72 = v70;
          v73 = (uint64_t *)(v184 + 8 * v70);
          do
          {
            if (v72 != --v71)
            {
              if (!v34)
                goto LABEL_165;
              v74 = *v73;
              *v73 = *v69;
              *v69 = v74;
            }
            ++v72;
            --v69;
            ++v73;
          }
          while (v72 < v71);
          v33 = v173;
        }
      }
    }
    if (v37 >= v174)
      goto LABEL_61;
    if (__OFSUB__(v37, v33))
      goto LABEL_150;
    if (v37 - v33 >= v167)
    {
      v33 = v173;
      goto LABEL_61;
    }
    v75 = v173 + v167;
    if (__OFADD__(v173, v167))
      goto LABEL_152;
    if (v75 >= v174)
      v75 = v174;
    v33 = v173;
    if (v75 < v173)
      break;
    if (v37 != v75)
    {
      v168 = v75;
      v166 = v32;
      v76 = v165 + 8 * v37;
      do
      {
        v78 = *(void **)(v34 + 8 * v37);
        v79 = v33;
        v175 = v76;
        v185 = v37;
        while (1)
        {
          v80 = *(void **)v76;
          v81 = v78;
          v82 = v80;
          v83 = objc_msgSend(v81, *((SEL *)p_align + 455));
          v84 = v181;
          sub_2418A7E6C();

          v188 = (id)sub_2418A7E78();
          LOBYTE(v83) = v85;
          v86 = *(void (**)(char *, uint64_t))(v183 + 8);
          v86(v84, v3);
          if ((v83 & 1) != 0)
            goto LABEL_156;
          v186 = v79;
          v187 = v81;
          v87 = objc_msgSend(v81, *((SEL *)p_align + 455));
          v88 = v180;
          sub_2418A7E6C();

          v89 = sub_2418A7E90();
          LOBYTE(v87) = v90;
          v86(v88, v3);
          if ((v87 & 1) != 0)
            goto LABEL_157;
          v91 = objc_msgSend(v82, *((SEL *)p_align + 455));
          v92 = v179;
          sub_2418A7E6C();

          v93 = (id)sub_2418A7E78();
          LOBYTE(v91) = v94;
          v86(v92, v3);
          if ((v91 & 1) != 0)
            goto LABEL_155;
          v95 = objc_msgSend(v82, *((SEL *)p_align + 455));
          v96 = v178;
          sub_2418A7E6C();

          v97 = sub_2418A7E90();
          LOBYTE(v95) = v98;
          v86(v96, v3);
          if ((v95 & 1) != 0)
            goto LABEL_158;

          v99 = v89 < v97;
          if (v188 != v93)
            v99 = (uint64_t)v188 < (uint64_t)v93;
          if (!v99)
            break;
          v3 = v182;
          v34 = v184;
          v77 = v185;
          p_align = (_DWORD *)(&stru_2511B9FE8 + 24);
          if (!v184)
            goto LABEL_159;
          v100 = *(void **)v76;
          v78 = *(void **)(v76 + 8);
          *(_QWORD *)v76 = v78;
          *(_QWORD *)(v76 + 8) = v100;
          v76 -= 8;
          v79 = v186 + 1;
          if (v77 == v186 + 1)
            goto LABEL_48;
        }
        v3 = v182;
        v34 = v184;
        v77 = v185;
        p_align = &stru_2511B9FE8.align;
LABEL_48:
        v37 = v77 + 1;
        v76 = v175 + 8;
        v33 = v173;
      }
      while (v37 != v168);
      v37 = v168;
      v32 = v166;
      if (v168 < v173)
        goto LABEL_146;
      goto LABEL_62;
    }
LABEL_61:
    if (v37 < v33)
      goto LABEL_146;
LABEL_62:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v32 = sub_24188E004(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
    v102 = *((_QWORD *)v32 + 2);
    v101 = *((_QWORD *)v32 + 3);
    v103 = v102 + 1;
    v34 = v184;
    v104 = v173;
    if (v102 >= v101 >> 1)
    {
      v153 = sub_24188E004((char *)(v101 > 1), v102 + 1, 1, v32);
      v104 = v173;
      v34 = v184;
      v32 = v153;
    }
    *((_QWORD *)v32 + 2) = v103;
    v105 = v32 + 32;
    v106 = &v32[16 * v102 + 32];
    *(_QWORD *)v106 = v104;
    *((_QWORD *)v106 + 1) = v37;
    v185 = v37;
    if (v102)
    {
      while (1)
      {
        v107 = v103 - 1;
        if (v103 >= 4)
        {
          v112 = &v105[16 * v103];
          v113 = *((_QWORD *)v112 - 8);
          v114 = *((_QWORD *)v112 - 7);
          v118 = __OFSUB__(v114, v113);
          v115 = v114 - v113;
          if (v118)
            goto LABEL_134;
          v117 = *((_QWORD *)v112 - 6);
          v116 = *((_QWORD *)v112 - 5);
          v118 = __OFSUB__(v116, v117);
          v110 = v116 - v117;
          v111 = v118;
          if (v118)
            goto LABEL_135;
          v119 = v103 - 2;
          v120 = &v105[16 * v103 - 32];
          v122 = *(_QWORD *)v120;
          v121 = *((_QWORD *)v120 + 1);
          v118 = __OFSUB__(v121, v122);
          v123 = v121 - v122;
          if (v118)
            goto LABEL_137;
          v118 = __OFADD__(v110, v123);
          v124 = v110 + v123;
          if (v118)
            goto LABEL_140;
          if (v124 >= v115)
          {
            v142 = &v105[16 * v107];
            v144 = *(_QWORD *)v142;
            v143 = *((_QWORD *)v142 + 1);
            v118 = __OFSUB__(v143, v144);
            v145 = v143 - v144;
            if (v118)
              goto LABEL_144;
            v135 = v110 < v145;
            goto LABEL_98;
          }
        }
        else
        {
          if (v103 != 3)
          {
            v136 = *((_QWORD *)v32 + 4);
            v137 = *((_QWORD *)v32 + 5);
            v118 = __OFSUB__(v137, v136);
            v129 = v137 - v136;
            v130 = v118;
            goto LABEL_92;
          }
          v109 = *((_QWORD *)v32 + 4);
          v108 = *((_QWORD *)v32 + 5);
          v118 = __OFSUB__(v108, v109);
          v110 = v108 - v109;
          v111 = v118;
        }
        if ((v111 & 1) != 0)
          goto LABEL_136;
        v119 = v103 - 2;
        v125 = &v105[16 * v103 - 32];
        v127 = *(_QWORD *)v125;
        v126 = *((_QWORD *)v125 + 1);
        v128 = __OFSUB__(v126, v127);
        v129 = v126 - v127;
        v130 = v128;
        if (v128)
          goto LABEL_139;
        v131 = &v105[16 * v107];
        v133 = *(_QWORD *)v131;
        v132 = *((_QWORD *)v131 + 1);
        v118 = __OFSUB__(v132, v133);
        v134 = v132 - v133;
        if (v118)
          goto LABEL_142;
        if (__OFADD__(v129, v134))
          goto LABEL_143;
        if (v129 + v134 >= v110)
        {
          v135 = v110 < v134;
LABEL_98:
          if (v135)
            v107 = v119;
          goto LABEL_100;
        }
LABEL_92:
        if ((v130 & 1) != 0)
          goto LABEL_138;
        v138 = &v105[16 * v107];
        v140 = *(_QWORD *)v138;
        v139 = *((_QWORD *)v138 + 1);
        v118 = __OFSUB__(v139, v140);
        v141 = v139 - v140;
        if (v118)
          goto LABEL_141;
        if (v141 < v129)
          goto LABEL_109;
LABEL_100:
        v146 = v107 - 1;
        if (v107 - 1 >= v103)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v34)
          goto LABEL_160;
        v147 = &v105[16 * v146];
        v148 = *(_QWORD *)v147;
        v149 = &v105[16 * v107];
        v150 = *((_QWORD *)v149 + 1);
        v151 = v177;
        sub_24176207C((void **)(v34 + 8 * *(_QWORD *)v147), (void **)(v34 + 8 * *(_QWORD *)v149), v34 + 8 * v150, v176);
        v177 = v151;
        if (v151)
          goto LABEL_125;
        if (v150 < v148)
          goto LABEL_131;
        if (v107 > *((_QWORD *)v32 + 2))
          goto LABEL_132;
        *(_QWORD *)v147 = v148;
        *(_QWORD *)&v105[16 * v146 + 8] = v150;
        v152 = *((_QWORD *)v32 + 2);
        if (v107 >= v152)
          goto LABEL_133;
        v103 = v152 - 1;
        memmove(&v105[16 * v107], v149 + 16, 16 * (v152 - 1 - v107));
        *((_QWORD *)v32 + 2) = v152 - 1;
        v34 = v184;
        if (v152 <= 2)
          goto LABEL_109;
      }
    }
    v103 = 1;
LABEL_109:
    v36 = v174;
    v33 = v185;
    p_align = (_DWORD *)(&stru_2511B9FE8 + 24);
    if (v185 >= v174)
      goto LABEL_114;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  sub_2418AA374();
  __break(1u);
}

void sub_241761D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  uint64_t v28;
  char v29;
  id v30;
  char *v31;
  char v32;
  id v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  char v41;
  char v42;
  char *v43;
  _BOOL4 v44;
  void **v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void **v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void **v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);

  v49 = a1;
  v7 = sub_2418A7EC0();
  v55 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v51 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v52 = (char *)&v47 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v53 = (char *)&v47 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v54 = (char *)&v47 - v19;
  v48 = a2;
  if (a3 != a2)
  {
    v20 = v18;
    v56 = *a4;
    v21 = (void **)(v56 + 8 * a3 - 8);
LABEL_5:
    v22 = *(void **)(v56 + 8 * a3);
    v57 = v49;
    v50 = v21;
    while (1)
    {
      v23 = *v21;
      v24 = v22;
      v25 = v23;
      v26 = objc_msgSend(v24, sel_dateComponents);
      v27 = v54;
      sub_2418A7E6C();

      v28 = sub_2418A7E78();
      LOBYTE(v26) = v29;
      v61 = *(void (**)(char *, uint64_t))(v55 + 8);
      v61(v27, v20);
      if ((v26 & 1) != 0)
        break;
      v30 = objc_msgSend(v24, sel_dateComponents);
      v31 = v53;
      sub_2418A7E6C();

      v60 = sub_2418A7E90();
      LOBYTE(v30) = v32;
      v61(v31, v20);
      if ((v30 & 1) != 0)
        goto LABEL_17;
      v33 = objc_msgSend(v25, sel_dateComponents);
      v34 = v52;
      sub_2418A7E6C();

      v59 = sub_2418A7E78();
      LOBYTE(v33) = v35;
      v61(v34, v20);
      if ((v33 & 1) != 0)
        goto LABEL_18;
      v58 = v21;
      v36 = v20;
      v37 = a3;
      v38 = objc_msgSend(v25, sel_dateComponents);
      v39 = v51;
      sub_2418A7E6C();

      v40 = sub_2418A7E90();
      v42 = v41;
      v43 = v39;
      v20 = v36;
      v61(v43, v36);
      if ((v42 & 1) != 0)
        goto LABEL_19;

      v44 = v60 < v40;
      if (v28 != v59)
        v44 = v28 < v59;
      a3 = v37;
      v45 = v58;
      if (v44)
      {
        if (!v56)
          goto LABEL_20;
        v46 = *v58;
        v22 = v58[1];
        *v58 = v22;
        v45[1] = v46;
        v21 = v45 - 1;
        if (a3 != ++v57)
          continue;
      }
      ++a3;
      v21 = v50 + 1;
      if (a3 == v48)
        return;
      goto LABEL_5;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
}

uint64_t sub_24176207C(void **__src, void **a2, unint64_t a3, void **__dst)
{
  id *v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  char v19;
  id *v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  char v29;
  char v30;
  id *v31;
  void **v32;
  uint64_t result;
  void **v34;
  void **v35;
  uint64_t v36;
  void *v37;
  id v38;
  void **v39;
  void **v40;
  void **v41;

  v35 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v41 = __src;
  v40 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        memmove(__dst, a2, 8 * v12);
        __dst = v35;
      }
      v21 = &__dst[v12];
      v39 = v21;
      v41 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        v22 = (id *)(a3 - 8);
        v23 = v5;
        v34 = v6;
        while (1)
        {
          v24 = v21;
          v25 = *--v21;
          v38 = v25;
          v26 = *--v23;
          v37 = v26;
          v27 = v38;
          v28 = v26;
          v29 = sub_24175F1D0(&v38, &v37);
          if (v36)
            break;
          v30 = v29;
          v36 = 0;
          v31 = v22 + 1;

          if ((v30 & 1) != 0)
          {
            v32 = v35;
            if (v31 != v5 || v22 >= v5)
              *v22 = *v23;
            v41 = v23;
            v21 = v24;
          }
          else
          {
            v39 = v21;
            v32 = v35;
            if (v31 < v24 || v22 >= v24 || v31 != v24)
              *v22 = *v21;
            v23 = v5;
          }
          if (v23 > v34)
          {
            --v22;
            v5 = v23;
            if (v21 > v32)
              continue;
          }
          goto LABEL_48;
        }

      }
      goto LABEL_48;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      memmove(__dst, __src, 8 * v9);
      __dst = v35;
    }
    v13 = &__dst[v9];
    v39 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        v38 = *v5;
        v14 = __dst;
        v37 = *__dst;
        v15 = v37;
        v16 = v38;
        v17 = v15;
        v18 = sub_24175F1D0(&v38, &v37);
        if (v36)
          break;
        v19 = v18;

        if ((v19 & 1) != 0)
        {
          v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5)
            *v6 = *v5;
          __dst = v14;
        }
        else
        {
          if (v6 != v14)
            *v6 = *v14;
          __dst = v14 + 1;
          v40 = v14 + 1;
          v20 = v5;
        }
        v36 = 0;
        v41 = ++v6;
        if (__dst < v13)
        {
          v5 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        goto LABEL_48;
      }

    }
LABEL_48:
    sub_24188E0F8(&v41, &v40, &v39);
    return 1;
  }
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

void sub_2417623B0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2418AA398();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x24269CAE0);
}

uint64_t sub_241762418(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2418AA398();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2418AA398();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_241762EA8(0, &qword_25714D568, (unint64_t *)&qword_2543914F0);
        sub_241762F70(&qword_25714D570, &qword_25714D568, (unint64_t *)&qword_2543914F0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_24181D71C(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241762EFC(0, (unint64_t *)&qword_2543914F0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_241762654(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2418AA398();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2418AA398();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_241762EA8(0, &qword_25714D550, (unint64_t *)&qword_2571545F0);
        sub_241762F70(&qword_25714D558, &qword_25714D550, (unint64_t *)&qword_2571545F0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_24181D774(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241762EFC(0, (unint64_t *)&qword_2571545F0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_241762890(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2418AA398();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2418AA398();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_241762EA8(0, (unint64_t *)&qword_25714D520, (unint64_t *)&qword_257152CA0);
        sub_241762F70(&qword_25714D528, (unint64_t *)&qword_25714D520, (unint64_t *)&qword_257152CA0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_24181D774(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241762EFC(0, (unint64_t *)&qword_257152CA0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_241762ACC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2418AA398();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2418AA398();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_241762EA8(0, &qword_25714D538, &qword_25714D530);
        sub_241762F70((unint64_t *)&unk_25714D540, &qword_25714D538, &qword_25714D530);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_24181D774(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241762EFC(0, &qword_25714D530);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

_QWORD *sub_241762D08(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_241762E9C()
{
  return swift_release();
}

void sub_241762EA8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_241762EFC(255, a3);
    v4 = sub_2418A9F0C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_241762EFC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_241762F34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_241762F70(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_241762EA8(255, a2, a3);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE12E0], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_241762FB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D578)
  {
    type metadata accessor for Label(255);
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D578);
  }
}

uint64_t sub_241763004(id *a1)
{
  uint64_t v1;

  return sub_24175F8F0(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_241763020(id *a1)
{
  return sub_241763004(a1) & 1;
}

uint64_t *sub_241763038(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  int *v97;
  uint64_t v98;
  unsigned int (*v99)(char *, uint64_t, int *);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, _QWORD, uint64_t, int *);
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v124;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v123 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      v122 = v8;
      v121 = v6;
      if (v123(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v13 = v12[5];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_2418A87B4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(v14, v15, v16);
      *((_BYTE *)a1 + v12[6]) = *((_BYTE *)a2 + v12[6]);
      v18 = v12[7];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_2418A84E4();
      v120 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      v120(v19, v20, v21);
      v22 = v12[8];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      if (v123((uint64_t *)((char *)a2 + v22), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v23, v24, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v23, 0, 1, v7);
      }
      v26 = _s6StylesV8TimelineVMa(0);
      v17(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      v27 = v12[9];
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      if (v123((uint64_t *)((char *)a2 + v27), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v28, v29, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v28, 0, 1, v7);
      }
      v31 = _s6StylesV6NoDataVMa(0);
      v17(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      v32 = v12[10];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      if (v123((uint64_t *)((char *)a2 + v32), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v33, v34, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v33, 0, 1, v7);
      }
      v36 = _s6StylesV11PlaceholderVMa(0);
      v17(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v16);
      v37 = v12[11];
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      if (v123((uint64_t *)((char *)a2 + v37), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v38, v39, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v38, 0, 1, v7);
      }
      v41 = _s6StylesV6SymbolVMa(0);
      v17(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v16);
      v42 = v12[12];
      v43 = (char *)a1 + v42;
      v44 = (char *)a2 + v42;
      if (v123((uint64_t *)((char *)a2 + v42), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v43, v44, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v43, 0, 1, v7);
      }
      v46 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v17(&v43[v46[5]], &v44[v46[5]], v16);
      v43[v46[6]] = v44[v46[6]];
      v120(&v43[v46[7]], &v44[v46[7]], v21);
      v47 = v12[13];
      v48 = (char *)a1 + v47;
      v49 = (char *)a2 + v47;
      if (v123((uint64_t *)((char *)a2 + v47), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        v51 = v122;
      }
      else
      {
        v51 = v122;
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v48, v49, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v48, 0, 1, v7);
      }
      v52 = _s6StylesV5EmptyVMa(0);
      v17(&v48[*(int *)(v52 + 20)], &v49[*(int *)(v52 + 20)], v16);
      v48[*(int *)(v52 + 24)] = v49[*(int *)(v52 + 24)];
      v53 = v12[14];
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      if (v123((uint64_t *)((char *)a2 + v53), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v54, v55, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v7);
      }
      v57 = _s6StylesV5DailyVMa(0);
      v17(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      v58 = v12[15];
      v59 = (char *)a1 + v58;
      v60 = (char *)a2 + v58;
      if (v123((uint64_t *)((char *)a2 + v58), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v59, v60, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v59, 0, 1, v7);
      }
      v62 = _s6StylesV9MomentaryVMa(0);
      v17(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v16);
      v63 = v12[16];
      v64 = (char *)a1 + v63;
      v65 = (char *)a2 + v63;
      if (v123((uint64_t *)((char *)a2 + v63), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v64, v65, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v64, 0, 1, v7);
      }
      v67 = _s6StylesV6HeaderVMa(0);
      v17(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v16);
      v68 = v12[17];
      v69 = (char *)a1 + v68;
      v70 = (char *)a2 + v68;
      if (v123((uint64_t *)((char *)a2 + v68), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v69, v70, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v69, 0, 1, v7);
      }
      v72 = _s6StylesV11ChartButtonVMa(0);
      v17(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v16);
      v73 = v12[18];
      v74 = (char *)a1 + v73;
      v75 = (char *)a2 + v73;
      if (v123((uint64_t *)((char *)a2 + v73), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v74, v75, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v74, 0, 1, v7);
      }
      v77 = _s6StylesV15LogButtonFooterVMa(0);
      v17(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v16);
      swift_storeEnumTagMultiPayload();
      v6 = v121;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    v78 = *(int *)(v6 + 20);
    v79 = (uint64_t *)((char *)a1 + v78);
    v80 = (uint64_t *)((char *)a2 + v78);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v81 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
    }
    else
    {
      *v79 = *v80;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v82 = *(int *)(v6 + 24);
    v124 = a1;
    v83 = (char *)a1 + v82;
    v84 = (char *)a2 + v82;
    *(uint64_t *)((char *)a1 + v82) = *(uint64_t *)((char *)a2 + v82);
    v85 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
    v86 = v85[5];
    v87 = &v83[v86];
    v88 = &v84[v86];
    v89 = sub_2418A9CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
    v90 = v85[6];
    v91 = &v83[v90];
    v92 = &v84[v90];
    v93 = *((_QWORD *)v92 + 1);
    *(_QWORD *)v91 = *(_QWORD *)v92;
    *((_QWORD *)v91 + 1) = v93;
    v94 = v85[7];
    v95 = &v83[v94];
    v96 = &v84[v94];
    v97 = (int *)_s5EntryVMa();
    v98 = *((_QWORD *)v97 - 1);
    v99 = *(unsigned int (**)(char *, uint64_t, int *))(v98 + 48);
    swift_bridgeObjectRetain();
    if (v99(v96, 1, v97))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
    else
    {
      v101 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v95, v96, v101);
      v102 = v97[5];
      v103 = &v95[v102];
      v104 = &v96[v102];
      v105 = *((_QWORD *)v104 + 1);
      *(_QWORD *)v103 = *(_QWORD *)v104;
      *((_QWORD *)v103 + 1) = v105;
      v106 = v97[6];
      v107 = &v95[v106];
      v108 = &v96[v106];
      v109 = *((_QWORD *)v108 + 1);
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *((_QWORD *)v107 + 1) = v109;
      v110 = v97[7];
      v111 = &v95[v110];
      v112 = &v96[v110];
      v113 = *((_QWORD *)v112 + 1);
      *(_QWORD *)v111 = *(_QWORD *)v112;
      *((_QWORD *)v111 + 1) = v113;
      v114 = v97[8];
      v115 = &v95[v114];
      v116 = &v96[v114];
      v117 = *((_QWORD *)v116 + 1);
      *(_QWORD *)v115 = *(_QWORD *)v116;
      *((_QWORD *)v115 + 1) = v117;
      *(_QWORD *)&v95[v97[9]] = *(_QWORD *)&v96[v97[9]];
      v118 = *(void (**)(char *, _QWORD, uint64_t, int *))(v98 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v118(v95, 0, 1, v97);
    }
    v11 = v124;
    *(_QWORD *)&v83[v85[8]] = *(_QWORD *)&v84[v85[8]];
    *(_QWORD *)&v83[v85[9]] = *(_QWORD *)&v84[v85[9]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v11;
}

uint64_t sub_241763C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v46 = a2;
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(a1, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v8 = a1 + v7[5];
    v9 = sub_2418A87B4();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v8, v9);
    v11 = a1 + v7[7];
    v12 = sub_2418A84E4();
    v45 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v45(v11, v12);
    v13 = a1 + v7[8];
    if (!v6(v13, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v4);
    v14 = _s6StylesV8TimelineVMa(0);
    v10(v13 + *(int *)(v14 + 20), v9);
    v15 = a1 + v7[9];
    if (!v6(v15, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    v16 = _s6StylesV6NoDataVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    v17 = a1 + v7[10];
    if (!v6(v17, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    v18 = _s6StylesV11PlaceholderVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    v19 = a1 + v7[11];
    if (!v6(v19, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    v20 = _s6StylesV6SymbolVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    v21 = a1 + v7[12];
    if (!v6(v21, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    v22 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    v45(v21 + *(int *)(v22 + 28), v12);
    v23 = a1 + v7[13];
    if (!v6(v23, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    v24 = _s6StylesV5EmptyVMa(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    v25 = a1 + v7[14];
    if (!v6(v25, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v25, v4);
    v26 = _s6StylesV5DailyVMa(0);
    v10(v25 + *(int *)(v26 + 20), v9);
    v27 = a1 + v7[15];
    if (!v6(v27, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v27, v4);
    v28 = _s6StylesV9MomentaryVMa(0);
    v10(v27 + *(int *)(v28 + 20), v9);
    v29 = a1 + v7[16];
    if (!v6(v29, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
    v30 = _s6StylesV6HeaderVMa(0);
    v10(v29 + *(int *)(v30 + 20), v9);
    v31 = a1 + v7[17];
    if (!v6(v31, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v31, v4);
    v32 = _s6StylesV11ChartButtonVMa(0);
    v10(v31 + *(int *)(v32 + 20), v9);
    v33 = a1 + v7[18];
    if (!v6(v33, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v33, v4);
    v34 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v33 + *(int *)(v34 + 20), v9);
    a2 = v46;
  }
  else
  {
    swift_release();
  }
  v35 = a1 + *(int *)(a2 + 20);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v36 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  }
  else
  {
    swift_release();
  }
  v37 = a1 + *(int *)(a2 + 24);
  v38 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v39 = v37 + *(int *)(v38 + 20);
  v40 = sub_2418A9CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
  swift_bridgeObjectRelease();
  v41 = v37 + *(int *)(v38 + 28);
  v42 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42))
  {
    v43 = sub_2418A8130();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v41, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_241764194(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  unsigned int (*v96)(char *, uint64_t, int *);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, _QWORD, uint64_t, int *);
  void (*v117)(char *, char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  unsigned int (*v120)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v121;

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v120 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
    v119 = v7;
    if (v120(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    v117 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v117(v16, v17, v18);
    v19 = v9[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v120((_QWORD *)((char *)a2 + v19), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v118 = a3;
    if (v120((_QWORD *)((char *)a2 + v24), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v120((_QWORD *)((char *)a2 + v29), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v30, 0, 1, v6);
    }
    v33 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    v34 = v9[11];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v120((_QWORD *)((char *)a2 + v34), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v35, 0, 1, v6);
    }
    v38 = _s6StylesV6SymbolVMa(0);
    v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    v39 = v9[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    if (v120((_QWORD *)((char *)a2 + v39), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v40, v41, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v40, 0, 1, v6);
    }
    v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v117(&v40[v43[7]], &v41[v43[7]], v18);
    v44 = v9[13];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v120((_QWORD *)((char *)a2 + v44), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v119;
    }
    else
    {
      v48 = v119;
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v45, v46, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v45, 0, 1, v6);
    }
    v49 = _s6StylesV5EmptyVMa(0);
    v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    v50 = v9[14];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    if (v120((_QWORD *)((char *)a2 + v50), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    v54 = _s6StylesV5DailyVMa(0);
    v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v9[15];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v120((_QWORD *)((char *)a2 + v55), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v118;
    v59 = _s6StylesV9MomentaryVMa(0);
    v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    v60 = v9[16];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    if (v120((_QWORD *)((char *)a2 + v60), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    v64 = _s6StylesV6HeaderVMa(0);
    v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    v65 = v9[17];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    if (v120((_QWORD *)((char *)a2 + v65), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    v69 = _s6StylesV11ChartButtonVMa(0);
    v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    v70 = v9[18];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    if (v120((_QWORD *)((char *)a2 + v70), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    v74 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v75 = *(int *)(a3 + 20);
  v76 = (_QWORD *)((char *)a1 + v75);
  v77 = (_QWORD *)((char *)a2 + v75);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v78 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
  }
  else
  {
    *v76 = *v77;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v79 = *(int *)(a3 + 24);
  v121 = a1;
  v80 = (char *)a1 + v79;
  v81 = (char *)a2 + v79;
  *(_QWORD *)((char *)a1 + v79) = *(_QWORD *)((char *)a2 + v79);
  v82 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v83 = v82[5];
  v84 = &v80[v83];
  v85 = &v81[v83];
  v86 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
  v87 = v82[6];
  v88 = &v80[v87];
  v89 = &v81[v87];
  v90 = *((_QWORD *)v89 + 1);
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *((_QWORD *)v88 + 1) = v90;
  v91 = v82[7];
  v92 = &v80[v91];
  v93 = &v81[v91];
  v94 = (int *)_s5EntryVMa();
  v95 = *((_QWORD *)v94 - 1);
  v96 = *(unsigned int (**)(char *, uint64_t, int *))(v95 + 48);
  swift_bridgeObjectRetain();
  if (v96(v93, 1, v94))
  {
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    v98 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v92, v93, v98);
    v99 = v94[5];
    v100 = &v92[v99];
    v101 = &v93[v99];
    v102 = *((_QWORD *)v101 + 1);
    *(_QWORD *)v100 = *(_QWORD *)v101;
    *((_QWORD *)v100 + 1) = v102;
    v103 = v94[6];
    v104 = &v92[v103];
    v105 = &v93[v103];
    v106 = *((_QWORD *)v105 + 1);
    *(_QWORD *)v104 = *(_QWORD *)v105;
    *((_QWORD *)v104 + 1) = v106;
    v107 = v94[7];
    v108 = &v92[v107];
    v109 = &v93[v107];
    v110 = *((_QWORD *)v109 + 1);
    *(_QWORD *)v108 = *(_QWORD *)v109;
    *((_QWORD *)v108 + 1) = v110;
    v111 = v94[8];
    v112 = &v92[v111];
    v113 = &v93[v111];
    v114 = *((_QWORD *)v113 + 1);
    *(_QWORD *)v112 = *(_QWORD *)v113;
    *((_QWORD *)v112 + 1) = v114;
    *(_QWORD *)&v92[v94[9]] = *(_QWORD *)&v93[v94[9]];
    v115 = *(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v115(v92, 0, 1, v94);
  }
  *(_QWORD *)&v80[v82[8]] = *(_QWORD *)&v81[v82[8]];
  *(_QWORD *)&v80[v82[9]] = *(_QWORD *)&v81[v82[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v121;
}

_QWORD *sub_241764D4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t (*v79)(uint64_t);
  uint64_t (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int *v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, int *);
  int v99;
  int v100;
  uint64_t (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  void (*v116)(char *, _QWORD, uint64_t, int *);
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  void (*v131)(char *, char *, uint64_t);
  uint64_t v132;
  uint64_t v133;
  unsigned int (*v134)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v135;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v134 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48);
      v132 = a3;
      v133 = v8;
      if (v134(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2418A87B4();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      v15(v12, v13, v14);
      *((_BYTE *)a1 + v10[6]) = *((_BYTE *)a2 + v10[6]);
      v16 = v10[7];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_2418A84E4();
      v131 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v131(v17, v18, v19);
      v20 = v10[8];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      if (v134((_QWORD *)((char *)a2 + v20), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v21, v22, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v21, 0, 1, v7);
      }
      v24 = _s6StylesV8TimelineVMa(0);
      v15(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      v25 = v10[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      if (v134((_QWORD *)((char *)a2 + v25), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v26, v27, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v26, 0, 1, v7);
      }
      v29 = _s6StylesV6NoDataVMa(0);
      v15(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      v30 = v10[10];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      if (v134((_QWORD *)((char *)a2 + v30), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v31, v32, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v31, 0, 1, v7);
      }
      v34 = _s6StylesV11PlaceholderVMa(0);
      v15(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v14);
      v35 = v10[11];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      if (v134((_QWORD *)((char *)a2 + v35), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v36, v37, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v36, 0, 1, v7);
      }
      v39 = _s6StylesV6SymbolVMa(0);
      v15(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v14);
      v40 = v10[12];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      if (v134((_QWORD *)((char *)a2 + v40), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v41, v42, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v41, 0, 1, v7);
      }
      v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v15(&v41[v44[5]], &v42[v44[5]], v14);
      v41[v44[6]] = v42[v44[6]];
      v131(&v41[v44[7]], &v42[v44[7]], v19);
      v45 = v10[13];
      v46 = (char *)a1 + v45;
      v47 = (char *)a2 + v45;
      if (v134((_QWORD *)((char *)a2 + v45), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        v49 = v133;
      }
      else
      {
        v49 = v133;
        (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v46, v47, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v46, 0, 1, v7);
      }
      v50 = _s6StylesV5EmptyVMa(0);
      v15(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v14);
      v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
      v51 = v10[14];
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      if (v134((_QWORD *)((char *)a2 + v51), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v52, v53, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v7);
      }
      v55 = _s6StylesV5DailyVMa(0);
      v15(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v14);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      v56 = v10[15];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      if (v134((_QWORD *)((char *)a2 + v56), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v57, v58, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v7);
      }
      v60 = _s6StylesV9MomentaryVMa(0);
      v15(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v14);
      v61 = v10[16];
      v62 = (char *)a1 + v61;
      v63 = (char *)a2 + v61;
      if (v134((_QWORD *)((char *)a2 + v61), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v62, v63, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v7);
      }
      v65 = _s6StylesV6HeaderVMa(0);
      v15(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v14);
      v66 = v10[17];
      v67 = (char *)a1 + v66;
      v68 = (char *)a2 + v66;
      if (v134((_QWORD *)((char *)a2 + v66), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v67, v68, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v7);
      }
      v70 = _s6StylesV11ChartButtonVMa(0);
      v15(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v14);
      v71 = v10[18];
      v72 = (char *)a1 + v71;
      v73 = (char *)a2 + v71;
      if (v134((_QWORD *)((char *)a2 + v71), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v72, v73, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v7);
      }
      v75 = _s6StylesV15LogButtonFooterVMa(0);
      v15(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v14);
      a3 = v132;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v76 = *(int *)(a3 + 20);
    v77 = (_QWORD *)((char *)a1 + v76);
    v78 = (_QWORD *)((char *)a2 + v76);
    v79 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v80 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v76, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v79, v80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v81 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v77, v78, v81);
    }
    else
    {
      *v77 = *v78;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v82 = *(int *)(a3 + 24);
  v135 = a1;
  v83 = (char *)a1 + v82;
  v84 = (char *)a2 + v82;
  *(_QWORD *)((char *)a1 + v82) = *(_QWORD *)((char *)a2 + v82);
  v85 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v86 = v85[5];
  v87 = &v83[v86];
  v88 = &v84[v86];
  v89 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 24))(v87, v88, v89);
  v90 = v85[6];
  v91 = &v83[v90];
  v92 = &v84[v90];
  *(_QWORD *)v91 = *(_QWORD *)v92;
  *((_QWORD *)v91 + 1) = *((_QWORD *)v92 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v93 = v85[7];
  v94 = &v83[v93];
  v95 = &v84[v93];
  v96 = (int *)_s5EntryVMa();
  v97 = *((_QWORD *)v96 - 1);
  v98 = *(uint64_t (**)(char *, uint64_t, int *))(v97 + 48);
  v99 = v98(v94, 1, v96);
  v100 = v98(v95, 1, v96);
  if (v99)
  {
    if (!v100)
    {
      v103 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v94, v95, v103);
      v104 = v96[5];
      v105 = &v94[v104];
      v106 = &v95[v104];
      *(_QWORD *)v105 = *(_QWORD *)v106;
      *((_QWORD *)v105 + 1) = *((_QWORD *)v106 + 1);
      v107 = v96[6];
      v108 = &v94[v107];
      v109 = &v95[v107];
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *((_QWORD *)v108 + 1) = *((_QWORD *)v109 + 1);
      v110 = v96[7];
      v111 = &v94[v110];
      v112 = &v95[v110];
      *(_QWORD *)v111 = *(_QWORD *)v112;
      *((_QWORD *)v111 + 1) = *((_QWORD *)v112 + 1);
      v113 = v96[8];
      v114 = &v94[v113];
      v115 = &v95[v113];
      *(_QWORD *)v114 = *(_QWORD *)v115;
      *((_QWORD *)v114 + 1) = *((_QWORD *)v115 + 1);
      *(_QWORD *)&v94[v96[9]] = *(_QWORD *)&v95[v96[9]];
      v116 = *(void (**)(char *, _QWORD, uint64_t, int *))(v97 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v116(v94, 0, 1, v96);
      goto LABEL_53;
    }
    v101 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v100)
    {
      v117 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 24))(v94, v95, v117);
      v118 = v96[5];
      v119 = &v94[v118];
      v120 = &v95[v118];
      *(_QWORD *)v119 = *(_QWORD *)v120;
      *((_QWORD *)v119 + 1) = *((_QWORD *)v120 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v121 = v96[6];
      v122 = &v94[v121];
      v123 = &v95[v121];
      *(_QWORD *)v122 = *(_QWORD *)v123;
      *((_QWORD *)v122 + 1) = *((_QWORD *)v123 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v124 = v96[7];
      v125 = &v94[v124];
      v126 = &v95[v124];
      *(_QWORD *)v125 = *(_QWORD *)v126;
      *((_QWORD *)v125 + 1) = *((_QWORD *)v126 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v127 = v96[8];
      v128 = &v94[v127];
      v129 = &v95[v127];
      *(_QWORD *)v128 = *(_QWORD *)v129;
      *((_QWORD *)v128 + 1) = *((_QWORD *)v129 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v94[v96[9]] = *(_QWORD *)&v95[v96[9]];
      goto LABEL_53;
    }
    sub_24172588C((uint64_t)v94, (uint64_t (*)(_QWORD))_s5EntryVMa);
    v101 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v101);
  memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
LABEL_53:
  *(_QWORD *)&v83[v85[8]] = *(_QWORD *)&v84[v85[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v83[v85[9]] = *(_QWORD *)&v84[v85[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v135;
}

char *sub_241765AB4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v102 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    v101 = v9;
    if (v102(a2, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2418A87B4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    v17 = v11[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_2418A84E4();
    v99 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
    v99(v18, v19, v20);
    v21 = v11[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (v102(&a2[v21], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v22, v23, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v22, 0, 1, v8);
    }
    v25 = _s6StylesV8TimelineVMa(0);
    v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    v26 = v11[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v100 = a3;
    if (v102(&a2[v26], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v27, v28, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v27, 0, 1, v8);
    }
    v30 = _s6StylesV6NoDataVMa(0);
    v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    v31 = v11[10];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (v102(&a2[v31], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v32, v33, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v32, 0, 1, v8);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    v36 = v11[11];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if (v102(&a2[v36], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v37, v38, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v37, 0, 1, v8);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    v41 = v11[12];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v102(&a2[v41], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v42, v43, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v42, 0, 1, v8);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v16(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v99(&v42[v45[7]], &v43[v45[7]], v20);
    v46 = v11[13];
    v47 = &a1[v46];
    v48 = &a2[v46];
    if (v102(&a2[v46], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = v101;
    }
    else
    {
      v50 = v101;
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v47, v48, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v47, 0, 1, v8);
    }
    v51 = _s6StylesV5EmptyVMa(0);
    v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    v52 = v11[14];
    v53 = &a1[v52];
    v54 = &a2[v52];
    if (v102(&a2[v52], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    v56 = _s6StylesV5DailyVMa(0);
    v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = v11[15];
    v58 = &a1[v57];
    v59 = &a2[v57];
    if (v102(&a2[v57], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v100;
    v61 = _s6StylesV9MomentaryVMa(0);
    v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    v62 = v11[16];
    v63 = &a1[v62];
    v64 = &a2[v62];
    if (v102(&a2[v62], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    v66 = _s6StylesV6HeaderVMa(0);
    v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    v67 = v11[17];
    v68 = &a1[v67];
    v69 = &a2[v67];
    if (v102(&a2[v67], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    v71 = _s6StylesV11ChartButtonVMa(0);
    v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    v72 = v11[18];
    v73 = &a1[v72];
    v74 = &a2[v72];
    if (v102(&a2[v72], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    v76 = _s6StylesV15LogButtonFooterVMa(0);
    v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v77 = *(int *)(a3 + 20);
  v78 = &a1[v77];
  v79 = &a2[v77];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v81 = v80;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v82 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v78, v79, v82);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  v83 = *(int *)(a3 + 24);
  v84 = &a1[v83];
  v85 = &a2[v83];
  *(_QWORD *)&a1[v83] = *(_QWORD *)&a2[v83];
  v86 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v87 = v86[5];
  v88 = &v84[v87];
  v89 = &v85[v87];
  v90 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
  *(_OWORD *)&v84[v86[6]] = *(_OWORD *)&v85[v86[6]];
  v91 = v86[7];
  v92 = &v84[v91];
  v93 = &v85[v91];
  v94 = (int *)_s5EntryVMa();
  v95 = *((_QWORD *)v94 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v95 + 48))(v93, 1, v94))
  {
    sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
  }
  else
  {
    v97 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v92, v93, v97);
    *(_OWORD *)&v92[v94[5]] = *(_OWORD *)&v93[v94[5]];
    *(_OWORD *)&v92[v94[6]] = *(_OWORD *)&v93[v94[6]];
    *(_OWORD *)&v92[v94[7]] = *(_OWORD *)&v93[v94[7]];
    *(_OWORD *)&v92[v94[8]] = *(_OWORD *)&v93[v94[8]];
    *(_QWORD *)&v92[v94[9]] = *(_QWORD *)&v93[v94[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56))(v92, 0, 1, v94);
  }
  *(_QWORD *)&v84[v86[8]] = *(_QWORD *)&v85[v86[8]];
  *(_QWORD *)&v84[v86[9]] = *(_QWORD *)&v85[v86[9]];
  return a1;
}

char *sub_24176660C(char *a1, char *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t (*v81)(uint64_t);
  uint64_t (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  int *v102;
  uint64_t v103;
  uint64_t (*v104)(char *, uint64_t, int *);
  int v105;
  int v106;
  uint64_t (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  void (*v132)(char *, char *, uint64_t);
  uint64_t v133;
  uint64_t v134;
  unsigned int (*v135)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A8EB0();
      v10 = *(_QWORD *)(v9 - 8);
      v135 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      v133 = a3;
      v134 = v10;
      if (v135(a2, 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v13 = v12[5];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_2418A87B4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v17(v14, v15, v16);
      a1[v12[6]] = a2[v12[6]];
      v18 = v12[7];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = sub_2418A84E4();
      v132 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
      v132(v19, v20, v21);
      v22 = v12[8];
      v23 = &a1[v22];
      v24 = &a2[v22];
      if (v135(&a2[v22], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v23, v24, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v23, 0, 1, v9);
      }
      v26 = _s6StylesV8TimelineVMa(0);
      v17(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      v27 = v12[9];
      v28 = &a1[v27];
      v29 = &a2[v27];
      if (v135(&a2[v27], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v28, v29, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v28, 0, 1, v9);
      }
      v31 = _s6StylesV6NoDataVMa(0);
      v17(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      v32 = v12[10];
      v33 = &a1[v32];
      v34 = &a2[v32];
      if (v135(&a2[v32], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v33, v34, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v33, 0, 1, v9);
      }
      v36 = _s6StylesV11PlaceholderVMa(0);
      v17(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v16);
      v37 = v12[11];
      v38 = &a1[v37];
      v39 = &a2[v37];
      if (v135(&a2[v37], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v38, v39, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v38, 0, 1, v9);
      }
      v41 = _s6StylesV6SymbolVMa(0);
      v17(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v16);
      v42 = v12[12];
      v43 = &a1[v42];
      v44 = &a2[v42];
      if (v135(&a2[v42], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v43, v44, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v43, 0, 1, v9);
      }
      v46 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v17(&v43[v46[5]], &v44[v46[5]], v16);
      v43[v46[6]] = v44[v46[6]];
      v132(&v43[v46[7]], &v44[v46[7]], v21);
      v47 = v12[13];
      v48 = &a1[v47];
      v49 = &a2[v47];
      if (v135(&a2[v47], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        v51 = v134;
      }
      else
      {
        v51 = v134;
        (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v48, v49, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v48, 0, 1, v9);
      }
      v52 = _s6StylesV5EmptyVMa(0);
      v17(&v48[*(int *)(v52 + 20)], &v49[*(int *)(v52 + 20)], v16);
      v48[*(int *)(v52 + 24)] = v49[*(int *)(v52 + 24)];
      v53 = v12[14];
      v54 = &a1[v53];
      v55 = &a2[v53];
      if (v135(&a2[v53], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v54, v55, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v9);
      }
      v57 = _s6StylesV5DailyVMa(0);
      v17(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      v58 = v12[15];
      v59 = &a1[v58];
      v60 = &a2[v58];
      if (v135(&a2[v58], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v59, v60, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v59, 0, 1, v9);
      }
      v62 = _s6StylesV9MomentaryVMa(0);
      v17(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v16);
      v63 = v12[16];
      v64 = &a1[v63];
      v65 = &a2[v63];
      if (v135(&a2[v63], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v64, v65, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v64, 0, 1, v9);
      }
      v67 = _s6StylesV6HeaderVMa(0);
      v17(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v16);
      v68 = v12[17];
      v69 = &a1[v68];
      v70 = &a2[v68];
      if (v135(&a2[v68], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v69, v70, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v69, 0, 1, v9);
      }
      v72 = _s6StylesV11ChartButtonVMa(0);
      v17(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v16);
      v73 = v12[18];
      v74 = &a1[v73];
      v75 = &a2[v73];
      if (v135(&a2[v73], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v74, v75, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v74, 0, 1, v9);
      }
      v77 = _s6StylesV15LogButtonFooterVMa(0);
      v17(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v16);
      swift_storeEnumTagMultiPayload();
      a3 = v133;
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    v78 = *(int *)(a3 + 20);
    v79 = &a1[v78];
    v80 = &a2[v78];
    v81 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v82 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)&a1[v78], (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v81, v82);
    v84 = v83;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v85 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v79, v80, v85);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
  }
  v86 = *(int *)(a3 + 24);
  v87 = &a1[v86];
  v88 = &a2[v86];
  *(_QWORD *)&a1[v86] = *(_QWORD *)&a2[v86];
  v89 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  v90 = v89[5];
  v91 = &v87[v90];
  v92 = &v88[v90];
  v93 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 40))(v91, v92, v93);
  v94 = v89[6];
  v95 = &v87[v94];
  v96 = &v88[v94];
  v98 = *(_QWORD *)v96;
  v97 = *((_QWORD *)v96 + 1);
  *(_QWORD *)v95 = v98;
  *((_QWORD *)v95 + 1) = v97;
  swift_bridgeObjectRelease();
  v99 = v89[7];
  v100 = &v87[v99];
  v101 = &v88[v99];
  v102 = (int *)_s5EntryVMa();
  v103 = *((_QWORD *)v102 - 1);
  v104 = *(uint64_t (**)(char *, uint64_t, int *))(v103 + 48);
  v105 = v104(v100, 1, v102);
  v106 = v104(v101, 1, v102);
  if (v105)
  {
    if (!v106)
    {
      v109 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v100, v101, v109);
      *(_OWORD *)&v100[v102[5]] = *(_OWORD *)&v101[v102[5]];
      *(_OWORD *)&v100[v102[6]] = *(_OWORD *)&v101[v102[6]];
      *(_OWORD *)&v100[v102[7]] = *(_OWORD *)&v101[v102[7]];
      *(_OWORD *)&v100[v102[8]] = *(_OWORD *)&v101[v102[8]];
      *(_QWORD *)&v100[v102[9]] = *(_QWORD *)&v101[v102[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56))(v100, 0, 1, v102);
      goto LABEL_52;
    }
    v107 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v106)
    {
      v110 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 40))(v100, v101, v110);
      v111 = v102[5];
      v112 = &v100[v111];
      v113 = &v101[v111];
      v115 = *(_QWORD *)v113;
      v114 = *((_QWORD *)v113 + 1);
      *(_QWORD *)v112 = v115;
      *((_QWORD *)v112 + 1) = v114;
      swift_bridgeObjectRelease();
      v116 = v102[6];
      v117 = &v100[v116];
      v118 = &v101[v116];
      v120 = *(_QWORD *)v118;
      v119 = *((_QWORD *)v118 + 1);
      *(_QWORD *)v117 = v120;
      *((_QWORD *)v117 + 1) = v119;
      swift_bridgeObjectRelease();
      v121 = v102[7];
      v122 = &v100[v121];
      v123 = &v101[v121];
      v125 = *(_QWORD *)v123;
      v124 = *((_QWORD *)v123 + 1);
      *(_QWORD *)v122 = v125;
      *((_QWORD *)v122 + 1) = v124;
      swift_bridgeObjectRelease();
      v126 = v102[8];
      v127 = &v100[v126];
      v128 = &v101[v126];
      v130 = *(_QWORD *)v128;
      v129 = *((_QWORD *)v128 + 1);
      *(_QWORD *)v127 = v130;
      *((_QWORD *)v127 + 1) = v129;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v100[v102[9]] = *(_QWORD *)&v101[v102[9]];
      goto LABEL_52;
    }
    sub_24172588C((uint64_t)v100, (uint64_t (*)(_QWORD))_s5EntryVMa);
    v107 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v107);
  memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
LABEL_52:
  *(_QWORD *)&v87[v89[8]] = *(_QWORD *)&v88[v89[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v87[v89[9]] = *(_QWORD *)&v88[v89[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2417672A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417672B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = type metadata accessor for StateOfMindTimeline.DaySummary();
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_24176737C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241767388(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for StateOfMindTimeline.DaySummary();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s22DaySummaryGradientViewVMa()
{
  uint64_t result;

  result = qword_25714D5E8;
  if (!qword_25714D5E8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241767494()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for StateOfMindTimeline.DaySummary();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_241767564()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_241767574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id result;
  void *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v33 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v3 = MEMORY[0x24BDAC7A8](v33, v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v32 - v7;
  v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v17 = (char *)&v32 - v16;
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v32 - v19;
  sub_241767BE8();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_2418D1940;
  *(_QWORD *)(v21 + 32) = sub_241767850();
  sub_241860D60((uint64_t)v20);
  sub_241767C3C((uint64_t)&v20[*(int *)(v9 + 48)], (uint64_t)v8);
  sub_24172588C((uint64_t)v20, type metadata accessor for StateOfMindTimeline.Styles);
  v22 = sub_2417CC290();
  sub_24172588C((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  *(_QWORD *)(v21 + 40) = v22;
  v34 = v21;
  sub_2418A9EC4();
  v23 = MEMORY[0x24269C120](v34);
  sub_241860D60((uint64_t)v17);
  sub_24172588C((uint64_t)v17, type metadata accessor for StateOfMindTimeline.Styles);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v25 = result;
    objc_msgSend(result, sel_isiPad);

    sub_241860D60((uint64_t)v13);
    sub_241767C3C((uint64_t)&v13[*(int *)(v9 + 48)], (uint64_t)v5);
    sub_24172588C((uint64_t)v13, type metadata accessor for StateOfMindTimeline.Styles);
    sub_24172588C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles.Entry);
    sub_2418A9960();
    sub_2418A861C();
    v26 = v34;
    v27 = v35;
    v28 = v36;
    v29 = v37;
    v30 = v38;
    v31 = v39;
    result = (id)sub_2418A960C();
    *(_QWORD *)a1 = v23;
    *(_QWORD *)(a1 + 8) = v26;
    *(_BYTE *)(a1 + 16) = v27;
    *(_QWORD *)(a1 + 24) = v28;
    *(_BYTE *)(a1 + 32) = v29;
    *(_QWORD *)(a1 + 40) = v30;
    *(_QWORD *)(a1 + 48) = v31;
    *(_QWORD *)(a1 + 56) = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241767850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;

  v1 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v36 = (uint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2418A84E4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v38 = (char *)&v35 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v37 = (uint64_t)&v35 - v14;
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v35 - v17;
  v19 = _s5EntryVMa();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v0 + *(int *)(_s22DaySummaryGradientViewVMa() + 24);
  v25 = type metadata accessor for StateOfMindTimeline.DaySummary();
  sub_241767C80(v24 + *(int *)(v25 + 28), (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_24173FC60((uint64_t)v18, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v26 = v36;
    sub_241860D60(v36);
    sub_24172588C(v26, type metadata accessor for StateOfMindTimeline.Styles);
    sub_2418A95F4();
    v27 = sub_2418A9624();
    swift_release();
  }
  else
  {
    sub_241767CDC((uint64_t)v18, (uint64_t)v23);
    v28 = v37;
    sub_241861034(v37);
    v29 = *(double *)&v23[*(int *)(v19 + 36)];
    v30 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v38, v28, v4);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v9, *MEMORY[0x24BDEB3F0], v4);
    sub_2418A84D8();
    v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v9, v4);
    swift_getKeyPath();
    sub_241810204(fmax(fmin(v29, 1.0), -1.0));
    v33 = v32;
    swift_release();
    v27 = MEMORY[0x24269BD9C](v33);
    v31(v30, v4);
    v31((char *)v28, v4);
    sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))_s5EntryVMa);
  }
  return v27;
}

__n128 sub_241767B6C@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  unint64_t v6;
  unsigned __int8 v7;
  unint64_t v8;
  __n128 result;
  _QWORD v10[2];
  unsigned __int8 v11;
  unint64_t v12;
  unsigned __int8 v13;
  __n128 v14;
  unint64_t v15;

  v2 = sub_2418A8C58();
  sub_241767574((uint64_t)v10);
  v3 = v10[0];
  v4 = v10[1];
  v5 = v11;
  v6 = v12;
  v7 = v13;
  v8 = v15;
  result = v14;
  a1->n128_u64[0] = v2;
  a1->n128_u64[1] = 0;
  a1[1].n128_u8[0] = 1;
  a1[1].n128_u64[1] = v3;
  a1[2].n128_u64[0] = v4;
  a1[2].n128_u8[8] = v5;
  a1[3].n128_u64[0] = v6;
  a1[3].n128_u8[8] = v7;
  a1[4] = result;
  a1[5].n128_u64[0] = v8;
  return result;
}

void sub_241767BE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714C5F0)
  {
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714C5F0);
  }
}

uint64_t sub_241767C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241767C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241767CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s5EntryVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241767D2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714D628;
  if (!qword_25714D628)
  {
    sub_241767D74();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_25714D628);
  }
  return result;
}

void sub_241767D74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D630)
  {
    sub_24172570C(255, &qword_25714D638, (uint64_t (*)(uint64_t))sub_241767DEC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_241767F9C();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D630);
  }
}

void sub_241767DEC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714D640)
  {
    sub_241767E78();
    sub_241767EF4(255, (unint64_t *)&qword_25714D658, (unint64_t *)&qword_25714C1F0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714D640);
  }
}

void sub_241767E78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D648)
  {
    sub_241767EF4(255, &qword_25714D650, &qword_25714C470);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D648);
  }
}

void sub_241767EF4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_241767F54(255, a3);
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_241767F54(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_2418A8F4C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_241767F9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714D660;
  if (!qword_25714D660)
  {
    sub_24172570C(255, &qword_25714D638, (uint64_t (*)(uint64_t))sub_241767DEC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_25714D660);
  }
  return result;
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsStepType_optional __swiftcall MentalHealthAssessmentsAnalyticsStepType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (MentalHealthUI::MentalHealthAssessmentsAnalyticsStepType_optional)sub_2417688D0(v1);
}

uint64_t MentalHealthAssessmentsAnalyticsStepType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24176803C + 4 * byte_2418D2C80[*v0]))(0xD000000000000010, 0x80000002418DBAF0);
}

uint64_t sub_24176803C()
{
  return 0x6574614720656741;
}

uint64_t sub_241768060()
{
  return 0x6F72746E49;
}

uint64_t sub_241768074()
{
  return 0x6E6F697473657551;
}

uint64_t sub_241768090()
{
  return 0x746C75736552;
}

void sub_2417680A4(char *a1)
{
  sub_241865A50(*a1);
}

void sub_2417680B0()
{
  char *v0;

  sub_241865E70(*v0);
}

void sub_2417680B8()
{
  __asm { BR              X10 }
}

uint64_t sub_2417680F8()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

void sub_241768174(uint64_t a1)
{
  char *v1;

  sub_2418667E8(a1, *v1);
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsStepType_optional sub_24176817C(Swift::String *a1)
{
  return MentalHealthAssessmentsAnalyticsStepType.init(rawValue:)(*a1);
}

uint64_t sub_241768188()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2417681BC + 4 * byte_2418D2C8A[*v0]))();
}

void sub_2417681BC(_QWORD *a1@<X8>)
{
  *a1 = 0x6574614720656741;
  a1[1] = 0xEF6F72746E492064;
}

void sub_2417681E4(_QWORD *a1@<X8>)
{
  *a1 = 0x6F72746E49;
  a1[1] = 0xE500000000000000;
}

void sub_2417681FC(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F697473657551;
  a1[1] = 0xE900000000000073;
}

void sub_24176821C(_QWORD *a1@<X8>)
{
  *a1 = 0x746C75736552;
  a1[1] = 0xE600000000000000;
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsActionType_optional __swiftcall MentalHealthAssessmentsAnalyticsActionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  MentalHealthUI::MentalHealthAssessmentsAnalyticsActionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2418AA3F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MentalHealthAssessmentsAnalyticsActionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2417682B8 + 4 * byte_2418D2C8F[*v0]))(0x6E69676542, 0xE500000000000000);
}

uint64_t sub_2417682B8()
{
  return 0x65736F6C43;
}

uint64_t sub_2417682C8()
{
  return 1954047310;
}

uint64_t sub_2417682D8()
{
  return 1701736260;
}

uint64_t sub_2417682E8()
{
  return 0x74726F707845;
}

uint64_t sub_2417682FC()
{
  return 0x20656C6369747241;
}

uint64_t sub_241768320()
{
  return 0x696C43206F666E49;
}

unint64_t sub_24176833C()
{
  return 0xD000000000000013;
}

unint64_t sub_241768358()
{
  return 0xD00000000000001ALL;
}

void sub_2417683A8(char *a1)
{
  sub_2418657BC(*a1);
}

uint64_t sub_2417683B4(uint64_t a1, uint64_t a2)
{
  return sub_2417687F4(a1, a2, (void (*)(_BYTE *, uint64_t))sub_2418666A8);
}

void sub_2417683C0(uint64_t a1)
{
  char *v1;

  sub_2418666A8(a1, *v1);
}

uint64_t sub_2417683C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241768850(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_2418666A8);
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsActionType_optional sub_2417683D4(Swift::String *a1)
{
  return MentalHealthAssessmentsAnalyticsActionType.init(rawValue:)(*a1);
}

uint64_t sub_2417683E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MentalHealthAssessmentsAnalyticsActionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsAssessmentType_optional __swiftcall MentalHealthAssessmentsAnalyticsAssessmentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  MentalHealthUI::MentalHealthAssessmentsAnalyticsAssessmentType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2418AA3F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MentalHealthAssessmentsAnalyticsAssessmentType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 927220039;
  if (*v0 != 1)
    v1 = 0x50646E6137444147;
  if (*v0)
    return v1;
  else
    return 961628240;
}

uint64_t sub_2417684B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_241865324(*a1, *a2);
}

uint64_t sub_2417684BC()
{
  sub_2418AA56C();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_241768554()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2417685C8()
{
  sub_2418AA56C();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsAssessmentType_optional sub_24176865C(Swift::String *a1)
{
  return MentalHealthAssessmentsAnalyticsAssessmentType.init(rawValue:)(*a1);
}

void sub_241768668(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE400000000000000;
  v5 = 927220039;
  if (v2 != 1)
  {
    v5 = 0x50646E6137444147;
    v4 = 0xEB00000000395148;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 961628240;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsEntryPoint_optional __swiftcall MentalHealthAssessmentsAnalyticsEntryPoint.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  MentalHealthUI::MentalHealthAssessmentsAnalyticsEntryPoint_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2418AA3F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MentalHealthAssessmentsAnalyticsEntryPoint.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24176874C + 4 * byte_2418D2C9A[*v0]))(0xD000000000000020, 0x80000002418DBC00);
}

uint64_t sub_24176874C(uint64_t a1)
{
  return a1 + 1;
}

void sub_2417687DC(char *a1)
{
  sub_2418655E4(*a1);
}

uint64_t sub_2417687E8(uint64_t a1, uint64_t a2)
{
  return sub_2417687F4(a1, a2, (void (*)(_BYTE *, uint64_t))sub_2418665C0);
}

uint64_t sub_2417687F4(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  unsigned __int8 *v3;
  uint64_t v5;
  _BYTE v7[72];

  v5 = *v3;
  sub_2418AA56C();
  a3(v7, v5);
  return sub_2418AA59C();
}

void sub_24176883C(uint64_t a1)
{
  char *v1;

  sub_2418665C0(a1, *v1);
}

uint64_t sub_241768844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241768850(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_2418665C0);
}

uint64_t sub_241768850(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  unsigned __int8 *v4;
  uint64_t v6;
  _BYTE v8[72];

  v6 = *v4;
  sub_2418AA56C();
  a4(v8, v6);
  return sub_2418AA59C();
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsEntryPoint_optional sub_241768894(Swift::String *a1)
{
  return MentalHealthAssessmentsAnalyticsEntryPoint.init(rawValue:)(*a1);
}

uint64_t sub_2417688A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MentalHealthAssessmentsAnalyticsEntryPoint.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsProvenance_optional __swiftcall MentalHealthAssessmentsAnalyticsProvenance.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (MentalHealthUI::MentalHealthAssessmentsAnalyticsProvenance_optional)sub_2417688D0(v1);
}

uint64_t sub_2417688D0@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_2418AA3F8();
  result = swift_bridgeObjectRelease();
  v4 = 5;
  if (v2 < 5)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t MentalHealthAssessmentsAnalyticsProvenance.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_241768954 + 4 * byte_2418D2CA4[*v0]))(0x7972616D6D7553, 0xE700000000000000);
}

uint64_t sub_241768954()
{
  return 0x7079542065746144;
}

uint64_t sub_241768978()
{
  return 0x656C6369747241;
}

unint64_t sub_24176898C()
{
  return 0xD000000000000012;
}

uint64_t sub_2417689A8()
{
  return 0x6163696669746F4ELL;
}

unint64_t sub_2417689CC()
{
  unint64_t result;

  result = qword_25714D668;
  if (!qword_25714D668)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for MentalHealthAssessmentsAnalyticsStepType, &type metadata for MentalHealthAssessmentsAnalyticsStepType);
    atomic_store(result, (unint64_t *)&qword_25714D668);
  }
  return result;
}

unint64_t sub_241768A14()
{
  unint64_t result;

  result = qword_25714D670;
  if (!qword_25714D670)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for MentalHealthAssessmentsAnalyticsActionType, &type metadata for MentalHealthAssessmentsAnalyticsActionType);
    atomic_store(result, (unint64_t *)&qword_25714D670);
  }
  return result;
}

unint64_t sub_241768A5C()
{
  unint64_t result;

  result = qword_25714D678;
  if (!qword_25714D678)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for MentalHealthAssessmentsAnalyticsAssessmentType, &type metadata for MentalHealthAssessmentsAnalyticsAssessmentType);
    atomic_store(result, (unint64_t *)&qword_25714D678);
  }
  return result;
}

unint64_t sub_241768AA4()
{
  unint64_t result;

  result = qword_25714D680;
  if (!qword_25714D680)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for MentalHealthAssessmentsAnalyticsEntryPoint, &type metadata for MentalHealthAssessmentsAnalyticsEntryPoint);
    atomic_store(result, (unint64_t *)&qword_25714D680);
  }
  return result;
}

void sub_241768AE8(char *a1)
{
  sub_24186542C(*a1);
}

unint64_t sub_241768AF8()
{
  unint64_t result;

  result = qword_25714D688;
  if (!qword_25714D688)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for MentalHealthAssessmentsAnalyticsProvenance, &type metadata for MentalHealthAssessmentsAnalyticsProvenance);
    atomic_store(result, (unint64_t *)&qword_25714D688);
  }
  return result;
}

void sub_241768B3C()
{
  char *v0;

  sub_241865F54(*v0);
}

void sub_241768B44()
{
  __asm { BR              X10 }
}

uint64_t sub_241768B80()
{
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

void sub_241768C08(uint64_t a1)
{
  char *v1;

  sub_2418668C8(a1, *v1);
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsProvenance_optional sub_241768C10(Swift::String *a1)
{
  return MentalHealthAssessmentsAnalyticsProvenance.init(rawValue:)(*a1);
}

uint64_t sub_241768C1C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_241768C4C + 4 * byte_2418D2CAE[*v0]))();
}

void sub_241768C4C(char *a1@<X8>)
{
  strcpy(a1, "Date Type Room");
  a1[15] = -18;
}

void sub_241768C74(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656C6369747241;
  a1[1] = v1;
}

void sub_241768C8C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000002418DBDA0;
}

void sub_241768CAC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "Notification");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsAnalyticsStepType()
{
  return &type metadata for MentalHealthAssessmentsAnalyticsStepType;
}

uint64_t storeEnumTagSinglePayload for MentalHealthAssessmentsAnalyticsActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_241768D34 + 4 * byte_2418D2CB8[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_241768D68 + 4 * byte_2418D2CB3[v4]))();
}

uint64_t sub_241768D68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241768D70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241768D78);
  return result;
}

uint64_t sub_241768D84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241768D8CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_241768D90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241768D98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsAnalyticsActionType()
{
  return &type metadata for MentalHealthAssessmentsAnalyticsActionType;
}

uint64_t getEnumTagSinglePayload for MentalHealthAssessmentsAnalyticsAssessmentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MentalHealthAssessmentsAnalyticsAssessmentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_241768E90 + 4 * byte_2418D2CC2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_241768EC4 + 4 * byte_2418D2CBD[v4]))();
}

uint64_t sub_241768EC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241768ECC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241768ED4);
  return result;
}

uint64_t sub_241768EE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241768EE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_241768EEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241768EF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsAnalyticsAssessmentType()
{
  return &type metadata for MentalHealthAssessmentsAnalyticsAssessmentType;
}

uint64_t storeEnumTagSinglePayload for MentalHealthAssessmentsAnalyticsEntryPoint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_241768F5C + 4 * byte_2418D2CCC[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_241768F90 + 4 * byte_2418D2CC7[v4]))();
}

uint64_t sub_241768F90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241768F98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241768FA0);
  return result;
}

uint64_t sub_241768FAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241768FB4);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_241768FB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241768FC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsAnalyticsEntryPoint()
{
  return &type metadata for MentalHealthAssessmentsAnalyticsEntryPoint;
}

uint64_t getEnumTagSinglePayload for Route(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14MentalHealthUI40MentalHealthAssessmentsAnalyticsStepTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2417690B8 + 4 * byte_2418D2CD6[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2417690EC + 4 * byte_2418D2CD1[v4]))();
}

uint64_t sub_2417690EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2417690F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2417690FCLL);
  return result;
}

uint64_t sub_241769108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241769110);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_241769114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24176911C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsAnalyticsProvenance()
{
  return &type metadata for MentalHealthAssessmentsAnalyticsProvenance;
}

uint64_t sub_241769138(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v19)(char *, char *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD aBlock[6];

  sub_241769330();
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2418A8100();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)aBlock - v16;
  sub_2417289A8(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_241769330);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))sub_241769330);
  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(v17, v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v17, v9);
  v20 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v2;
  v19((char *)(v21 + v20), v14, v9);
  aBlock[4] = sub_2417693F8;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_241769450;
  aBlock[3] = &block_descriptor_0;
  v22 = _Block_copy(aBlock);
  v23 = v2;
  swift_release();
  objc_msgSend(a1, sel_setTitleTapOutBlock_, v22);
  _Block_release(v22);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v17, v9);
}

void sub_241769330()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F360)
  {
    sub_2418A8100();
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F360);
  }
}

uint64_t sub_241769384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2418A8100();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2417693F8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_2418A8100() - 8) + 80);
  return sub_2417694D4(v2 + ((v5 + 24) & ~v5), a1, a2);
}

void sub_241769450(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, id);
  id v6;
  id v7;

  v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, v6);
  swift_release();

}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_2417694D4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Class v33;
  id v34;
  void *v35;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t ObjectType;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  ObjectType = swift_getObjectType();
  v6 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v44 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (uint64_t *)((char *)&v37 - v11);
  v13 = sub_2418A8100();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2418A8340();
  v41 = *(_QWORD *)(v18 - 8);
  v42 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8328();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v43 = a1;
  v22(v17, a1, v13);
  v23 = sub_2418A8334();
  v24 = sub_2418AA05C();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v39 = a3;
    v26 = v25;
    v37 = swift_slowAlloc();
    v46 = v37;
    *(_DWORD *)v26 = 136446466;
    v27 = sub_2418AA5D8();
    ObjectType = (uint64_t)v12;
    v45 = sub_24176024C(v27, v28, &v46);
    v38 = a2;
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    sub_24172159C((unint64_t *)&qword_257154530, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    v29 = sub_2418AA4AC();
    v45 = sub_24176024C(v29, v30, &v46);
    a2 = v38;
    v12 = (uint64_t *)ObjectType;
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    _os_log_impl(&dword_24171C000, v23, v24, "[%{public}s] Presenting timeline for date: %{public}s", (uint8_t *)v26, 0x16u);
    v31 = v37;
    swift_arrayDestroy();
    MEMORY[0x24269D548](v31, -1, -1);
    v32 = v26;
    a3 = v39;
    MEMORY[0x24269D548](v32, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v42);
  _s14MentalHealthUI19StateOfMindTimelineO5ModelC05buildgH03day11healthStoreAE10Foundation4DateV_So08HKHealthL0CtFZ_0(v43, a2);
  swift_retain();
  StateOfMindTimeline.EntryFullView.init(model:)(v12);
  sub_2417289A8((uint64_t)v12, v44, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
  sub_24176999C();
  v34 = objc_allocWithZone(v33);
  v35 = (void *)sub_2418A8C7C();
  objc_msgSend(a3, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v35, 0, 1, 0);
  swift_release();

  return sub_24172588C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.EntryFullView);
}

id StateOfMindChartTapOutFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id StateOfMindChartTapOutFormatter.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartTapOutFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for StateOfMindChartTapOutFormatter()
{
  uint64_t result;

  result = qword_25714D690;
  if (!qword_25714D690)
    return swift_getSingletonMetadata();
  return result;
}

id sub_2417698D8(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartTapOutFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

id StateOfMindChartTapOutFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartTapOutFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24176994C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for StateOfMindChartTapOutFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_241769994()
{
  return type metadata accessor for StateOfMindChartTapOutFormatter();
}

void sub_24176999C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D6E0)
  {
    type metadata accessor for StateOfMindTimeline.EntryFullView();
    sub_24172159C(&qword_25714D6E8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.EntryFullView, (uint64_t)&protocol conformance descriptor for StateOfMindTimeline.EntryFullView);
    v0 = sub_2418A8C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D6E0);
  }
}

_QWORD *sub_241769A14(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v81)(char *, char *);
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(char *, uint64_t, uint64_t);
  void (*v87)(char *, char *, uint64_t);

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(v6 + 20);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)v3 + v9);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      v85 = v13;
      v83 = v3;
      if (v86((char *)v11, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v15 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v16 = v15[5];
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = sub_2418A87B4();
      v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v87(v17, v18, v19);
      *((_BYTE *)v10 + v15[6]) = *((_BYTE *)v11 + v15[6]);
      v20 = v15[7];
      v21 = (char *)v10 + v20;
      v22 = (char *)v11 + v20;
      v23 = sub_2418A84E4();
      v81 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
      v82 = v23;
      v81(v21, v22);
      v24 = v15[8];
      v25 = (char *)v10 + v24;
      v26 = (char *)v11 + v24;
      v27 = v86;
      if (v86((char *)v11 + v24, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v25, v26, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v25, 0, 1, v12);
      }
      v29 = _s6StylesV8TimelineVMa(0);
      v87(&v25[*(int *)(v29 + 20)], &v26[*(int *)(v29 + 20)], v19);
      v30 = v15[9];
      v31 = (char *)v10 + v30;
      v32 = (char *)v11 + v30;
      v84 = v6;
      if (v27((char *)v11 + v30, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v31, v32, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v31, 0, 1, v12);
      }
      v34 = _s6StylesV6NoDataVMa(0);
      v87(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v19);
      v31[*(int *)(v34 + 24)] = v32[*(int *)(v34 + 24)];
      v35 = v15[10];
      v36 = (char *)v10 + v35;
      v37 = (char *)v11 + v35;
      if (v27((char *)v11 + v35, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v36, v37, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v36, 0, 1, v12);
      }
      v39 = _s6StylesV11PlaceholderVMa(0);
      v87(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v19);
      v40 = v15[11];
      v41 = (char *)v10 + v40;
      v42 = (char *)v11 + v40;
      if (v27((char *)v11 + v40, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v41, v42, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v41, 0, 1, v12);
      }
      v44 = _s6StylesV6SymbolVMa(0);
      v87(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v19);
      v45 = v15[12];
      v46 = (char *)v10 + v45;
      v47 = (char *)v11 + v45;
      if (v27((char *)v11 + v45, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v46, v47, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v46, 0, 1, v12);
      }
      v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v87(&v46[v49[5]], &v47[v49[5]], v19);
      v46[v49[6]] = v47[v49[6]];
      ((void (*)(char *, char *, uint64_t))v81)(&v46[v49[7]], &v47[v49[7]], v82);
      v50 = v15[13];
      v51 = (char *)v10 + v50;
      v52 = (char *)v11 + v50;
      if (v27((char *)v11 + v50, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v51, v52, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v51, 0, 1, v12);
      }
      v54 = _s6StylesV5EmptyVMa(0);
      v87(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v19);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v15[14];
      v56 = (char *)v10 + v55;
      v57 = (char *)v11 + v55;
      if (v27((char *)v11 + v55, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v56, v57, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v56, 0, 1, v12);
      }
      v59 = _s6StylesV5DailyVMa(0);
      v87(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v19);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      v60 = v15[15];
      v61 = (char *)v10 + v60;
      v62 = (char *)v11 + v60;
      if (v27((char *)v11 + v60, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v61, v62, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v61, 0, 1, v12);
      }
      v6 = v84;
      v64 = _s6StylesV9MomentaryVMa(0);
      v87(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v19);
      v65 = v15[16];
      v66 = (char *)v10 + v65;
      v67 = (char *)v11 + v65;
      if (v27((char *)v11 + v65, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v66, v67, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v66, 0, 1, v12);
      }
      v69 = _s6StylesV6HeaderVMa(0);
      v87(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v19);
      v70 = v15[17];
      v71 = (char *)v10 + v70;
      v72 = (char *)v11 + v70;
      if (v27((char *)v11 + v70, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v71, v72, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v71, 0, 1, v12);
      }
      v74 = _s6StylesV11ChartButtonVMa(0);
      v87(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v19);
      v75 = v15[18];
      v76 = (char *)v10 + v75;
      v77 = (char *)v11 + v75;
      if (v27(v77, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v76, v77, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v76, 0, 1, v12);
      }
      v79 = _s6StylesV15LogButtonFooterVMa(0);
      v87(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v19);
      v3 = v83;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)v3 + *(int *)(v6 + 24));
  }
  return a1;
}

uint64_t sub_24176A460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v38)(uint64_t, uint64_t);

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
  v10 = v5 + v9[5];
  v11 = sub_2418A87B4();
  v38 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v38(v10, v11);
  v12 = v5 + v9[7];
  v13 = sub_2418A84E4();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(v12, v13);
  v15 = v5 + v9[8];
  if (!v8(v15, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
  v16 = _s6StylesV8TimelineVMa(0);
  v38(v15 + *(int *)(v16 + 20), v11);
  v17 = v5 + v9[9];
  if (!v8(v17, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
  v18 = _s6StylesV6NoDataVMa(0);
  v38(v17 + *(int *)(v18 + 20), v11);
  v19 = v5 + v9[10];
  if (!v8(v19, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
  v20 = _s6StylesV11PlaceholderVMa(0);
  v38(v19 + *(int *)(v20 + 20), v11);
  v21 = v5 + v9[11];
  if (!v8(v21, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
  v22 = _s6StylesV6SymbolVMa(0);
  v38(v21 + *(int *)(v22 + 20), v11);
  v23 = v5 + v9[12];
  if (!v8(v23, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
  v24 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v38(v23 + *(int *)(v24 + 20), v11);
  v14(v23 + *(int *)(v24 + 28), v13);
  v25 = v5 + v9[13];
  if (!v8(v25, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v6);
  v26 = _s6StylesV5EmptyVMa(0);
  v38(v25 + *(int *)(v26 + 20), v11);
  v27 = v5 + v9[14];
  if (!v8(v27, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v27, v6);
  v28 = _s6StylesV5DailyVMa(0);
  v38(v27 + *(int *)(v28 + 20), v11);
  v29 = v5 + v9[15];
  if (!v8(v29, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v29, v6);
  v30 = _s6StylesV9MomentaryVMa(0);
  v38(v29 + *(int *)(v30 + 20), v11);
  v31 = v5 + v9[16];
  if (!v8(v31, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v31, v6);
  v32 = _s6StylesV6HeaderVMa(0);
  v38(v31 + *(int *)(v32 + 20), v11);
  v33 = v5 + v9[17];
  if (!v8(v33, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v33, v6);
  v34 = _s6StylesV11ChartButtonVMa(0);
  v38(v33 + *(int *)(v34 + 20), v11);
  v35 = v5 + v9[18];
  if (!v8(v35, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v35, v6);
  v36 = v35 + *(int *)(_s6StylesV15LogButtonFooterVMa(0) + 20);
  return ((uint64_t (*)(uint64_t, uint64_t))v38)(v36, v11);
}

_QWORD *sub_24176A924(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v80)(char *, char *);
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v84 = a1;
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
    v85 = v11;
    v82 = a3;
    if (v12(v9, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v15 = v14[5];
    v16 = (char *)v8 + v15;
    v17 = (char *)v9 + v15;
    v18 = sub_2418A87B4();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v19(v16, v17, v18);
    *((_BYTE *)v8 + v14[6]) = *((_BYTE *)v9 + v14[6]);
    v20 = v14[7];
    v21 = (char *)v8 + v20;
    v22 = (char *)v9 + v20;
    v23 = sub_2418A84E4();
    v80 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
    v81 = v23;
    v80(v21, v22);
    v24 = v14[8];
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    if (v12((_QWORD *)((char *)v9 + v24), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v25, v26, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v25, 0, 1, v10);
    }
    v28 = _s6StylesV8TimelineVMa(0);
    v19(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v18);
    v29 = v14[9];
    v30 = (char *)v8 + v29;
    v31 = (char *)v9 + v29;
    v83 = a2;
    if (v12((_QWORD *)((char *)v9 + v29), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v30, v31, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v30, 0, 1, v10);
    }
    v33 = _s6StylesV6NoDataVMa(0);
    v19(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v18);
    v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
    v34 = v14[10];
    v35 = (char *)v8 + v34;
    v36 = (char *)v9 + v34;
    if (v12((_QWORD *)((char *)v9 + v34), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v35, v36, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v35, 0, 1, v10);
    }
    v38 = _s6StylesV11PlaceholderVMa(0);
    v19(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v18);
    v39 = v14[11];
    v40 = (char *)v8 + v39;
    v41 = (char *)v9 + v39;
    if (v12((_QWORD *)((char *)v9 + v39), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v40, v41, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v40, 0, 1, v10);
    }
    v43 = _s6StylesV6SymbolVMa(0);
    v19(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v18);
    v44 = v14[12];
    v45 = (char *)v8 + v44;
    v46 = (char *)v9 + v44;
    if (v12((_QWORD *)((char *)v9 + v44), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v45, v46, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v45, 0, 1, v10);
    }
    v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v19(&v45[v48[5]], &v46[v48[5]], v18);
    v45[v48[6]] = v46[v48[6]];
    ((void (*)(char *, char *, uint64_t))v80)(&v45[v48[7]], &v46[v48[7]], v81);
    v49 = v14[13];
    v50 = (char *)v8 + v49;
    v51 = (char *)v9 + v49;
    if (v12((_QWORD *)((char *)v9 + v49), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v50, v51, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v50, 0, 1, v10);
    }
    v53 = _s6StylesV5EmptyVMa(0);
    v19(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v18);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    v54 = v14[14];
    v55 = (char *)v8 + v54;
    v56 = (char *)v9 + v54;
    if (v12((_QWORD *)((char *)v9 + v54), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v55, v56, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v55, 0, 1, v10);
    }
    v58 = _s6StylesV5DailyVMa(0);
    v19(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v18);
    v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
    v59 = v14[15];
    v60 = (char *)v8 + v59;
    v61 = (char *)v9 + v59;
    if (v12((_QWORD *)((char *)v9 + v59), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v60, v61, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v60, 0, 1, v10);
    }
    a2 = v83;
    v63 = _s6StylesV9MomentaryVMa(0);
    v19(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v18);
    v64 = v14[16];
    v65 = (char *)v8 + v64;
    v66 = (char *)v9 + v64;
    if (v12((_QWORD *)((char *)v9 + v64), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v65, v66, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v65, 0, 1, v10);
    }
    v68 = _s6StylesV6HeaderVMa(0);
    v19(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v18);
    v69 = v14[17];
    v70 = (char *)v8 + v69;
    v71 = (char *)v9 + v69;
    if (v12((_QWORD *)((char *)v9 + v69), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v70, v71, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v70, 0, 1, v10);
    }
    v73 = _s6StylesV11ChartButtonVMa(0);
    v19(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v18);
    v74 = v14[18];
    v75 = (char *)v8 + v74;
    v76 = (char *)v9 + v74;
    if (v12((_QWORD *)((char *)v9 + v74), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v75, v76, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v75, 0, 1, v10);
    }
    a1 = v84;
    v78 = _s6StylesV15LogButtonFooterVMa(0);
    v19(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v18);
    a3 = v82;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_24176B318(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v82)(char *, char *);
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  unsigned int (*v87)(_QWORD *, uint64_t, uint64_t);

  v4 = a2;
  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v4, v7);
    }
    else
    {
      *a1 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)v4 + v8);
    sub_24172B778((uint64_t)a1 + v8, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v84 = a3;
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      v87 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
      v85 = v4;
      if (v87(v10, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v15 = v14[5];
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_2418A87B4();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v19(v16, v17, v18);
      *((_BYTE *)v9 + v14[6]) = *((_BYTE *)v10 + v14[6]);
      v20 = v14[7];
      v21 = (char *)v9 + v20;
      v22 = (char *)v10 + v20;
      v23 = sub_2418A84E4();
      v82 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
      v83 = v23;
      v82(v21, v22);
      v24 = v14[8];
      v25 = (char *)v9 + v24;
      v26 = (char *)v10 + v24;
      if (v87((_QWORD *)((char *)v10 + v24), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
      }
      v28 = _s6StylesV8TimelineVMa(0);
      v19(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v18);
      v29 = v14[9];
      v30 = (char *)v9 + v29;
      v31 = (char *)v10 + v29;
      v86 = v12;
      if (v87((_QWORD *)((char *)v10 + v29), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v30, v31, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v30, 0, 1, v11);
      }
      v33 = _s6StylesV6NoDataVMa(0);
      v19(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v18);
      v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
      v34 = v14[10];
      v35 = (char *)v9 + v34;
      v36 = (char *)v10 + v34;
      if (v87((_QWORD *)((char *)v10 + v34), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        v38 = v86;
      }
      else
      {
        v38 = v86;
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v35, v36, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v35, 0, 1, v11);
      }
      v39 = _s6StylesV11PlaceholderVMa(0);
      v19(&v35[*(int *)(v39 + 20)], &v36[*(int *)(v39 + 20)], v18);
      v40 = v14[11];
      v41 = (char *)v9 + v40;
      v42 = (char *)v10 + v40;
      if (v87((_QWORD *)((char *)v10 + v40), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v41, v42, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v11);
      }
      v44 = _s6StylesV6SymbolVMa(0);
      v19(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v18);
      v45 = v14[12];
      v46 = (char *)v9 + v45;
      v47 = (char *)v10 + v45;
      if (v87((_QWORD *)((char *)v10 + v45), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v46, v47, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v46, 0, 1, v11);
      }
      v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v19(&v46[v49[5]], &v47[v49[5]], v18);
      v46[v49[6]] = v47[v49[6]];
      ((void (*)(char *, char *, uint64_t))v82)(&v46[v49[7]], &v47[v49[7]], v83);
      v50 = v14[13];
      v51 = (char *)v9 + v50;
      v52 = (char *)v10 + v50;
      if (v87((_QWORD *)((char *)v10 + v50), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v51, v52, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v51, 0, 1, v11);
      }
      v54 = _s6StylesV5EmptyVMa(0);
      v19(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v18);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v14[14];
      v56 = (char *)v9 + v55;
      v57 = (char *)v10 + v55;
      if (v87((_QWORD *)((char *)v10 + v55), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v56, v57, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v56, 0, 1, v11);
      }
      v59 = _s6StylesV5DailyVMa(0);
      v19(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v18);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      v60 = v14[15];
      v61 = (char *)v9 + v60;
      v62 = (char *)v10 + v60;
      if (v87((_QWORD *)((char *)v10 + v60), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        v64 = v86;
      }
      else
      {
        v64 = v86;
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v61, v62, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v61, 0, 1, v11);
      }
      v65 = _s6StylesV9MomentaryVMa(0);
      v19(&v61[*(int *)(v65 + 20)], &v62[*(int *)(v65 + 20)], v18);
      v66 = v14[16];
      v67 = (char *)v9 + v66;
      v68 = (char *)v10 + v66;
      if (v87((_QWORD *)((char *)v10 + v66), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v67, v68, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v67, 0, 1, v11);
      }
      v70 = _s6StylesV6HeaderVMa(0);
      v19(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v18);
      v71 = v14[17];
      v72 = (char *)v9 + v71;
      v73 = (char *)v10 + v71;
      if (v87((_QWORD *)((char *)v10 + v71), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v72, v73, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v72, 0, 1, v11);
      }
      v75 = _s6StylesV11ChartButtonVMa(0);
      v19(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v18);
      v76 = v14[18];
      v77 = (char *)v9 + v76;
      v78 = (char *)v10 + v76;
      if (v87((_QWORD *)((char *)v10 + v76), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v77, v78, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v77, 0, 1, v11);
      }
      a3 = v84;
      v80 = _s6StylesV15LogButtonFooterVMa(0);
      v19(&v77[*(int *)(v80 + 20)], &v78[*(int *)(v80 + 20)], v18);
      v4 = v85;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)v4 + *(int *)(a3 + 24));
  return a1;
}

char *sub_24176BD34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v84)(char *, char *);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v88 = a1;
    v14 = sub_2418A8EB0();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v89 = v15;
    v86 = a3;
    if (v16(v11, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v19 = v18[5];
    v20 = &v10[v19];
    v21 = &v11[v19];
    v22 = sub_2418A87B4();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
    v23(v20, v21, v22);
    v10[v18[6]] = v11[v18[6]];
    v24 = v18[7];
    v25 = &v10[v24];
    v26 = &v11[v24];
    v27 = sub_2418A84E4();
    v84 = *(void (**)(char *, char *))(*(_QWORD *)(v27 - 8) + 32);
    v85 = v27;
    v84(v25, v26);
    v28 = v18[8];
    v29 = &v10[v28];
    v30 = &v11[v28];
    if (v16(&v11[v28], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v29, v30, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v29, 0, 1, v14);
    }
    v32 = _s6StylesV8TimelineVMa(0);
    v23(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v22);
    v33 = v18[9];
    v34 = &v10[v33];
    v35 = &v11[v33];
    v87 = a2;
    if (v16(&v11[v33], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v34, v35, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v34, 0, 1, v14);
    }
    v37 = _s6StylesV6NoDataVMa(0);
    v23(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v22);
    v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
    v38 = v18[10];
    v39 = &v10[v38];
    v40 = &v11[v38];
    if (v16(&v11[v38], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v39, v40, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v39, 0, 1, v14);
    }
    v42 = _s6StylesV11PlaceholderVMa(0);
    v23(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v22);
    v43 = v18[11];
    v44 = &v10[v43];
    v45 = &v11[v43];
    if (v16(&v11[v43], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v44, v45, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v44, 0, 1, v14);
    }
    v47 = _s6StylesV6SymbolVMa(0);
    v23(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v22);
    v48 = v18[12];
    v49 = &v10[v48];
    v50 = &v11[v48];
    if (v16(&v11[v48], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v49, v50, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v49, 0, 1, v14);
    }
    v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v23(&v49[v52[5]], &v50[v52[5]], v22);
    v49[v52[6]] = v50[v52[6]];
    ((void (*)(char *, char *, uint64_t))v84)(&v49[v52[7]], &v50[v52[7]], v85);
    v53 = v18[13];
    v54 = &v10[v53];
    v55 = &v11[v53];
    if (v16(&v11[v53], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v54, v55, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v54, 0, 1, v14);
    }
    v57 = _s6StylesV5EmptyVMa(0);
    v23(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v22);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    v58 = v18[14];
    v59 = &v10[v58];
    v60 = &v11[v58];
    if (v16(&v11[v58], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v59, v60, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v59, 0, 1, v14);
    }
    v62 = _s6StylesV5DailyVMa(0);
    v23(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v22);
    v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
    v63 = v18[15];
    v64 = &v10[v63];
    v65 = &v11[v63];
    if (v16(&v11[v63], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v64, v65, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v64, 0, 1, v14);
    }
    a2 = v87;
    v67 = _s6StylesV9MomentaryVMa(0);
    v23(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v22);
    v68 = v18[16];
    v69 = &v10[v68];
    v70 = &v11[v68];
    if (v16(&v11[v68], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v69, v70, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v69, 0, 1, v14);
    }
    v72 = _s6StylesV6HeaderVMa(0);
    v23(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v22);
    v73 = v18[17];
    v74 = &v10[v73];
    v75 = &v11[v73];
    if (v16(&v11[v73], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v74, v75, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v74, 0, 1, v14);
    }
    v77 = _s6StylesV11ChartButtonVMa(0);
    v23(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v22);
    v78 = v18[18];
    v79 = &v10[v78];
    v80 = &v11[v78];
    if (v16(&v11[v78], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v79, v80, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v79, 0, 1, v14);
    }
    a1 = v88;
    v82 = _s6StylesV15LogButtonFooterVMa(0);
    v23(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v22);
    swift_storeEnumTagMultiPayload();
    a3 = v86;
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_24176C728(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v86)(char *, char *);
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unsigned int (*v91)(char *, uint64_t, uint64_t);

  v4 = a2;
  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, v4, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, v4, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    v10 = *(int *)(a3 + 20);
    v11 = &a1[v10];
    v12 = &v4[v10];
    sub_24172B778((uint64_t)&a1[v10], &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v14 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v88 = a3;
      v15 = sub_2418A8EB0();
      v16 = *(_QWORD *)(v15 - 8);
      v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v89 = v4;
      if (v91(v12, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v12, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      }
      v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v19 = v18[5];
      v20 = &v11[v19];
      v21 = &v12[v19];
      v22 = sub_2418A87B4();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
      v23(v20, v21, v22);
      v11[v18[6]] = v12[v18[6]];
      v24 = v18[7];
      v25 = &v11[v24];
      v26 = &v12[v24];
      v27 = sub_2418A84E4();
      v86 = *(void (**)(char *, char *))(*(_QWORD *)(v27 - 8) + 32);
      v87 = v27;
      v86(v25, v26);
      v28 = v18[8];
      v29 = &v11[v28];
      v30 = &v12[v28];
      if (v91(&v12[v28], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v29, v30, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v15);
      }
      v32 = _s6StylesV8TimelineVMa(0);
      v23(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v22);
      v33 = v18[9];
      v34 = &v11[v33];
      v35 = &v12[v33];
      v90 = v16;
      if (v91(&v12[v33], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v34, v35, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v34, 0, 1, v15);
      }
      v37 = _s6StylesV6NoDataVMa(0);
      v23(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v22);
      v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
      v38 = v18[10];
      v39 = &v11[v38];
      v40 = &v12[v38];
      if (v91(&v12[v38], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        v42 = v90;
      }
      else
      {
        v42 = v90;
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v39, v40, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v39, 0, 1, v15);
      }
      v43 = _s6StylesV11PlaceholderVMa(0);
      v23(&v39[*(int *)(v43 + 20)], &v40[*(int *)(v43 + 20)], v22);
      v44 = v18[11];
      v45 = &v11[v44];
      v46 = &v12[v44];
      if (v91(&v12[v44], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v45, v46, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v15);
      }
      v48 = _s6StylesV6SymbolVMa(0);
      v23(&v45[*(int *)(v48 + 20)], &v46[*(int *)(v48 + 20)], v22);
      v49 = v18[12];
      v50 = &v11[v49];
      v51 = &v12[v49];
      if (v91(&v12[v49], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v50, v51, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v50, 0, 1, v15);
      }
      v53 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v23(&v50[v53[5]], &v51[v53[5]], v22);
      v50[v53[6]] = v51[v53[6]];
      ((void (*)(char *, char *, uint64_t))v86)(&v50[v53[7]], &v51[v53[7]], v87);
      v54 = v18[13];
      v55 = &v11[v54];
      v56 = &v12[v54];
      if (v91(&v12[v54], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v55, v56, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v55, 0, 1, v15);
      }
      v58 = _s6StylesV5EmptyVMa(0);
      v23(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v22);
      v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
      v59 = v18[14];
      v60 = &v11[v59];
      v61 = &v12[v59];
      if (v91(&v12[v59], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v60, v61, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v60, 0, 1, v15);
      }
      v63 = _s6StylesV5DailyVMa(0);
      v23(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v22);
      v60[*(int *)(v63 + 24)] = v61[*(int *)(v63 + 24)];
      v64 = v18[15];
      v65 = &v11[v64];
      v66 = &v12[v64];
      if (v91(&v12[v64], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        v68 = v90;
      }
      else
      {
        v68 = v90;
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v65, v66, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v65, 0, 1, v15);
      }
      v69 = _s6StylesV9MomentaryVMa(0);
      v23(&v65[*(int *)(v69 + 20)], &v66[*(int *)(v69 + 20)], v22);
      v70 = v18[16];
      v71 = &v11[v70];
      v72 = &v12[v70];
      if (v91(&v12[v70], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v71, v72, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v71, 0, 1, v15);
      }
      v74 = _s6StylesV6HeaderVMa(0);
      v23(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v22);
      v75 = v18[17];
      v76 = &v11[v75];
      v77 = &v12[v75];
      if (v91(&v12[v75], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v76, v77, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v76, 0, 1, v15);
      }
      v79 = _s6StylesV11ChartButtonVMa(0);
      v23(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v22);
      v80 = v18[18];
      v81 = &v11[v80];
      v82 = &v12[v80];
      if (v91(&v12[v80], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v81, v82, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v81, 0, 1, v15);
      }
      a3 = v88;
      v84 = _s6StylesV15LogButtonFooterVMa(0);
      v23(&v81[*(int *)(v84 + 20)], &v82[*(int *)(v84 + 20)], v22);
      swift_storeEnumTagMultiPayload();
      v4 = v89;
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  a1[*(int *)(a3 + 24)] = v4[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_24176D140()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24176D14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_24176D234()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24176D240(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_5:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
}

uint64_t _s21StateOfMindSymbolViewVMa()
{
  uint64_t result;

  result = qword_25714D748;
  if (!qword_25714D748)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24176D350()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_24176D40C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24176D41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t ObjCClassFromMetadata;
  id v15;
  uint64_t v16;
  uint64_t v18;

  sub_24176DB14();
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24176DBD4(0, &qword_25714D798, MEMORY[0x24BDEF380]);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v18 - v7;
  v9 = sub_2418A966C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + *(int *)(_s21StateOfMindSymbolViewVMa() + 24)) == 1)
  {
    type metadata accessor for MentalHealthUIRepresentative();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v15 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_2418A969C();
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BDF3FD0], v9);
    v16 = sub_2418A9690();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    *(_QWORD *)v8 = v16;
    *((_QWORD *)v8 + 1) = 0;
    *((_WORD *)v8 + 8) = 1;
    swift_storeEnumTagMultiPayload();
    sub_24172835C(0, (unint64_t *)&qword_25714C1E8, MEMORY[0x24BDF4108], MEMORY[0x24BDEEC60], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_2417284A4();
    sub_241721DF8(&qword_25714D7A0, (uint64_t (*)(uint64_t))sub_24176DB14, sub_24176DC5C, MEMORY[0x24BDECC38]);
    return sub_2418A8D24();
  }
  else
  {
    sub_24176D714((uint64_t)v4);
    sub_2417289A8((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_24176DB14);
    swift_storeEnumTagMultiPayload();
    sub_24172835C(0, (unint64_t *)&qword_25714C1E8, MEMORY[0x24BDF4108], MEMORY[0x24BDEEC60], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_2417284A4();
    sub_241721DF8(&qword_25714D7A0, (uint64_t (*)(uint64_t))sub_24176DB14, sub_24176DC5C, MEMORY[0x24BDECC38]);
    sub_2418A8D24();
    return sub_24172588C((uint64_t)v4, (uint64_t (*)(_QWORD))sub_24176DB14);
  }
}

uint64_t sub_24176D714@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  unsigned int *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a1;
  v1 = sub_2418A88D4();
  MEMORY[0x24BDAC7A8](v1, v2);
  v51 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2418A99B4();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_2418A84E4();
  v8 = *(_QWORD *)(v53 - 8);
  v10 = MEMORY[0x24BDAC7A8](v53, v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v44 - v14;
  v16 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2418A966C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24176DB70();
  v47 = v25;
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A9678();
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v24, *MEMORY[0x24BDF3FD0], v20);
  v45 = sub_2418A9690();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  v46 = v48 + *(int *)(_s21StateOfMindSymbolViewVMa() + 20);
  sub_241860D60((uint64_t)v19);
  sub_24172588C((uint64_t)v19, type metadata accessor for StateOfMindTimeline.Styles);
  v29 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v30 = MEMORY[0x24269BDB4](v29);
  v44 = v15;
  sub_241861034((uint64_t)v15);
  v31 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v12, *MEMORY[0x24BDEB400], v53);
  LOBYTE(v20) = sub_2418A84D8();
  v32 = *(void (**)(char *, uint64_t))(v8 + 8);
  v32(v12, v31);
  v33 = (unsigned int *)MEMORY[0x24BDF5080];
  v34 = v49;
  if ((v20 & 1) == 0)
    v33 = (unsigned int *)MEMORY[0x24BDF5098];
  v35 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v7, *v33, v50);
  v36 = v51;
  v37 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v51, v7, v35);
  v38 = (uint64_t)v36;
  v39 = (uint64_t)v36;
  v40 = MEMORY[0x24BDEDB60];
  sub_2417289A8(v38, (uint64_t)&v28[*(int *)(v47 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  *(_QWORD *)v28 = v45;
  *((_QWORD *)v28 + 1) = 0;
  *((_WORD *)v28 + 8) = 1;
  *((_QWORD *)v28 + 3) = v30;
  swift_retain();
  swift_retain();
  sub_24172588C(v39, (uint64_t (*)(_QWORD))v40);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v37);
  v32(v44, v53);
  swift_release();
  swift_release();
  sub_241860D60((uint64_t)v19);
  sub_24172588C((uint64_t)v19, type metadata accessor for StateOfMindTimeline.Styles);
  v41 = v52;
  sub_2417289A8((uint64_t)v28, v52, (uint64_t (*)(_QWORD))sub_24176DB70);
  sub_24176DB14();
  *(_QWORD *)(v41 + *(int *)(v42 + 36)) = 0x3FA999999999999ALL;
  return sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))sub_24176DB70);
}

void sub_24176DB14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D788)
  {
    sub_24176DB70();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D788);
  }
}

void sub_24176DB70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D790)
  {
    sub_2417282B8();
    sub_2418A88D4();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D790);
  }
}

void sub_24176DBD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C1E8, MEMORY[0x24BDF4108], MEMORY[0x24BDEEC60], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v7 = v6;
    sub_24176DB14();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_24176DC5C()
{
  return sub_241721DF8(&qword_25714D7A8, (uint64_t (*)(uint64_t))sub_24176DB70, sub_241728410, MEMORY[0x24BDEDB58]);
}

unint64_t sub_24176DC84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714D7B0;
  if (!qword_25714D7B0)
  {
    sub_24176DBD4(255, &qword_25714D7B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_2417284A4();
    v3[1] = sub_241721DF8(&qword_25714D7A0, (uint64_t (*)(uint64_t))sub_24176DB14, sub_24176DC5C, MEMORY[0x24BDECC38]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714D7B0);
  }
  return result;
}

uint64_t destroy for IntroPhase_iOS()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for IntroPhase_iOS(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for IntroPhase_iOS(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for IntroPhase_iOS(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntroPhase_iOS(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntroPhase_iOS(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntroPhase_iOS()
{
  return &type metadata for IntroPhase_iOS;
}

uint64_t sub_24176DEF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24176DF04@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t *v22;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;

  sub_24176E2A4(0);
  v4 = v3;
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v1[1] & 1) != 0)
  {
    sub_24176E0F0(&v24);
    v9 = v24.n128_u64[1];
    v8 = v24.n128_u64[0];
    v10 = v25;
    v11 = v26;
    v12 = v27;
    v13 = v28;
    v14 = v29;
    v16 = v30;
    v15 = v31;
  }
  else
  {
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0uLL;
  }
  *(_QWORD *)v7 = v8;
  *((_QWORD *)v7 + 1) = v9;
  *((_QWORD *)v7 + 2) = v10;
  *((_QWORD *)v7 + 3) = v11;
  *((_QWORD *)v7 + 4) = v12;
  *((_QWORD *)v7 + 5) = v13;
  *((_QWORD *)v7 + 6) = v14;
  *(_OWORD *)(v7 + 56) = v16;
  *((_QWORD *)v7 + 9) = v15;
  v17 = (uint64_t *)&v7[*(int *)(v4 + 36)];
  v32 = *v1;
  v19 = *((_QWORD *)v1 + 3);
  v18 = *((_QWORD *)v1 + 4);
  KeyPath = swift_getKeyPath();
  *(uint64_t *)((char *)v17 + *(int *)(type metadata accessor for IntroPhaseContent() + 24)) = KeyPath;
  sub_24176E34C(0, &qword_25714C0D0, (void (*)(uint64_t))type metadata accessor for IntroPhaseSpecs);
  swift_storeEnumTagMultiPayload();
  sub_24176E320((uint64_t)&v32);
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  swift_retain();
  *v17 = sub_2418A8760();
  v17[1] = v21;
  v17[2] = v19;
  v17[3] = v18;
  v22 = (uint64_t *)&v7[*(int *)(v4 + 40)];
  *v22 = swift_getKeyPath();
  sub_24176E34C(0, &qword_25714CE28, (void (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
  swift_storeEnumTagMultiPayload();
  return sub_24176E398((uint64_t)v7, a1);
}

__n128 sub_24176E0F0@<Q0>(__n128 *a1@<X8>)
{
  __int128 *v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __n128 result;
  __n128 v10;
  unint64_t v11;
  unsigned __int8 v12;
  __int128 v13;

  if (qword_25714B958 != -1)
    swift_once();
  v3 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v4 = sub_2418A7EFC();
  v6 = v5;
  swift_bridgeObjectRelease();

  v13 = *v1;
  v7 = swift_allocObject();
  v8 = v1[1];
  *(_OWORD *)(v7 + 16) = *v1;
  *(_OWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 48) = *((_QWORD *)v1 + 4);
  sub_24176E320((uint64_t)&v13);
  sub_24176E428();
  swift_retain();
  sub_2418A9840();
  result = v10;
  a1->n128_u64[0] = v4;
  a1->n128_u64[1] = v6;
  a1[1] = v10;
  a1[2].n128_u64[0] = v11;
  a1[2].n128_u8[8] = v12;
  a1[3].n128_u64[0] = 0x747475427478654ELL;
  a1[3].n128_u64[1] = 0xEA00000000006E6FLL;
  a1[4].n128_u64[0] = (unint64_t)sub_24176E408;
  a1[4].n128_u64[1] = v7;
  return result;
}

uint64_t sub_24176E26C@<X0>(uint64_t a1@<X8>)
{
  return sub_24176DF04(a1);
}

void sub_24176E2A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_25714D7C0)
  {
    v2 = type metadata accessor for IntroPhaseContent();
    v3 = sub_24172159C(&qword_25714D7C8, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseContent, (uint64_t)&unk_2418D56B0);
    v5 = type metadata accessor for StateOfMindEntryPhase_iOS(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714D7C0);
  }
}

uint64_t sub_24176E320(uint64_t a1)
{
  swift_retain();
  return a1;
}

void sub_24176E34C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2418A8538();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_24176E398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24176E2A4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24176E3DC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24176E408()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

void sub_24176E428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D7D0)
  {
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D7D0);
  }
}

uint64_t sub_24176E47C()
{
  return sub_24172159C(qword_25714D7D8, (uint64_t (*)(uint64_t))sub_24176E2A4, (uint64_t)&unk_2418D2338);
}

_QWORD *sub_24176E4A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v81)(char *, char *);
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(char *, uint64_t, uint64_t);
  void (*v87)(char *, char *, uint64_t);

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(v6 + 20);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)v3 + v9);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      v85 = v13;
      v83 = v3;
      if (v86((char *)v11, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v15 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v16 = v15[5];
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = sub_2418A87B4();
      v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v87(v17, v18, v19);
      *((_BYTE *)v10 + v15[6]) = *((_BYTE *)v11 + v15[6]);
      v20 = v15[7];
      v21 = (char *)v10 + v20;
      v22 = (char *)v11 + v20;
      v23 = sub_2418A84E4();
      v81 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
      v82 = v23;
      v81(v21, v22);
      v24 = v15[8];
      v25 = (char *)v10 + v24;
      v26 = (char *)v11 + v24;
      v27 = v86;
      if (v86((char *)v11 + v24, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v25, v26, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v25, 0, 1, v12);
      }
      v29 = _s6StylesV8TimelineVMa(0);
      v87(&v25[*(int *)(v29 + 20)], &v26[*(int *)(v29 + 20)], v19);
      v30 = v15[9];
      v31 = (char *)v10 + v30;
      v32 = (char *)v11 + v30;
      v84 = v6;
      if (v27((char *)v11 + v30, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v31, v32, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v31, 0, 1, v12);
      }
      v34 = _s6StylesV6NoDataVMa(0);
      v87(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v19);
      v31[*(int *)(v34 + 24)] = v32[*(int *)(v34 + 24)];
      v35 = v15[10];
      v36 = (char *)v10 + v35;
      v37 = (char *)v11 + v35;
      if (v27((char *)v11 + v35, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v36, v37, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v36, 0, 1, v12);
      }
      v39 = _s6StylesV11PlaceholderVMa(0);
      v87(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v19);
      v40 = v15[11];
      v41 = (char *)v10 + v40;
      v42 = (char *)v11 + v40;
      if (v27((char *)v11 + v40, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v41, v42, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v41, 0, 1, v12);
      }
      v44 = _s6StylesV6SymbolVMa(0);
      v87(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v19);
      v45 = v15[12];
      v46 = (char *)v10 + v45;
      v47 = (char *)v11 + v45;
      if (v27((char *)v11 + v45, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v46, v47, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v46, 0, 1, v12);
      }
      v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v87(&v46[v49[5]], &v47[v49[5]], v19);
      v46[v49[6]] = v47[v49[6]];
      ((void (*)(char *, char *, uint64_t))v81)(&v46[v49[7]], &v47[v49[7]], v82);
      v50 = v15[13];
      v51 = (char *)v10 + v50;
      v52 = (char *)v11 + v50;
      if (v27((char *)v11 + v50, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v51, v52, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v51, 0, 1, v12);
      }
      v54 = _s6StylesV5EmptyVMa(0);
      v87(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v19);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v15[14];
      v56 = (char *)v10 + v55;
      v57 = (char *)v11 + v55;
      if (v27((char *)v11 + v55, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v56, v57, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v56, 0, 1, v12);
      }
      v59 = _s6StylesV5DailyVMa(0);
      v87(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v19);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      v60 = v15[15];
      v61 = (char *)v10 + v60;
      v62 = (char *)v11 + v60;
      if (v27((char *)v11 + v60, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v61, v62, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v61, 0, 1, v12);
      }
      v6 = v84;
      v64 = _s6StylesV9MomentaryVMa(0);
      v87(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v19);
      v65 = v15[16];
      v66 = (char *)v10 + v65;
      v67 = (char *)v11 + v65;
      if (v27((char *)v11 + v65, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v66, v67, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v66, 0, 1, v12);
      }
      v69 = _s6StylesV6HeaderVMa(0);
      v87(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v19);
      v70 = v15[17];
      v71 = (char *)v10 + v70;
      v72 = (char *)v11 + v70;
      if (v27((char *)v11 + v70, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v71, v72, v12);
        v27 = v86;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v71, 0, 1, v12);
      }
      v74 = _s6StylesV11ChartButtonVMa(0);
      v87(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v19);
      v75 = v15[18];
      v76 = (char *)v10 + v75;
      v77 = (char *)v11 + v75;
      if (v27(v77, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v76, v77, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v76, 0, 1, v12);
      }
      v79 = _s6StylesV15LogButtonFooterVMa(0);
      v87(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v19);
      v3 = v83;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)v3 + *(int *)(v6 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24176EEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v39)(uint64_t, uint64_t);

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v5 + v9[5];
    v11 = sub_2418A87B4();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v10, v11);
    v13 = v5 + v9[7];
    v14 = sub_2418A84E4();
    v39 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
    v39(v13, v14);
    v15 = v5 + v9[8];
    if (!v8(v15, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
    v16 = _s6StylesV8TimelineVMa(0);
    v12(v15 + *(int *)(v16 + 20), v11);
    v17 = v5 + v9[9];
    if (!v8(v17, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    v18 = _s6StylesV6NoDataVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    v19 = v5 + v9[10];
    if (!v8(v19, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    v20 = _s6StylesV11PlaceholderVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    v21 = v5 + v9[11];
    if (!v8(v21, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    v22 = _s6StylesV6SymbolVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    v23 = v5 + v9[12];
    if (!v8(v23, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    v24 = v7;
    v25 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v23 + *(int *)(v25 + 20), v11);
    v39(v23 + *(int *)(v25 + 28), v14);
    v26 = v5 + v9[13];
    if (!v8(v26, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v6);
    v27 = _s6StylesV5EmptyVMa(0);
    v12(v26 + *(int *)(v27 + 20), v11);
    v28 = v5 + v9[14];
    if (!v8(v28, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v28, v6);
    v29 = _s6StylesV5DailyVMa(0);
    v12(v28 + *(int *)(v29 + 20), v11);
    v30 = v5 + v9[15];
    if (!v8(v30, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v30, v6);
    v31 = _s6StylesV9MomentaryVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    v32 = v5 + v9[16];
    if (!v8(v32, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v32, v6);
    v33 = _s6StylesV6HeaderVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    v34 = v5 + v9[17];
    if (!v8(v34, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v34, v6);
    v35 = _s6StylesV11ChartButtonVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    v36 = v5 + v9[18];
    if (!v8(v36, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v36, v6);
    v37 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
  }
  else
  {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_24176F3A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v80)(char *, char *);
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v84 = a1;
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
    v85 = v11;
    v82 = a3;
    if (v12(v9, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v15 = v14[5];
    v16 = (char *)v8 + v15;
    v17 = (char *)v9 + v15;
    v18 = sub_2418A87B4();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v19(v16, v17, v18);
    *((_BYTE *)v8 + v14[6]) = *((_BYTE *)v9 + v14[6]);
    v20 = v14[7];
    v21 = (char *)v8 + v20;
    v22 = (char *)v9 + v20;
    v23 = sub_2418A84E4();
    v80 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
    v81 = v23;
    v80(v21, v22);
    v24 = v14[8];
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    if (v12((_QWORD *)((char *)v9 + v24), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v25, v26, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v25, 0, 1, v10);
    }
    v28 = _s6StylesV8TimelineVMa(0);
    v19(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v18);
    v29 = v14[9];
    v30 = (char *)v8 + v29;
    v31 = (char *)v9 + v29;
    v83 = a2;
    if (v12((_QWORD *)((char *)v9 + v29), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v30, v31, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v30, 0, 1, v10);
    }
    v33 = _s6StylesV6NoDataVMa(0);
    v19(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v18);
    v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
    v34 = v14[10];
    v35 = (char *)v8 + v34;
    v36 = (char *)v9 + v34;
    if (v12((_QWORD *)((char *)v9 + v34), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v35, v36, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v35, 0, 1, v10);
    }
    v38 = _s6StylesV11PlaceholderVMa(0);
    v19(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v18);
    v39 = v14[11];
    v40 = (char *)v8 + v39;
    v41 = (char *)v9 + v39;
    if (v12((_QWORD *)((char *)v9 + v39), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v40, v41, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v40, 0, 1, v10);
    }
    v43 = _s6StylesV6SymbolVMa(0);
    v19(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v18);
    v44 = v14[12];
    v45 = (char *)v8 + v44;
    v46 = (char *)v9 + v44;
    if (v12((_QWORD *)((char *)v9 + v44), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v45, v46, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v45, 0, 1, v10);
    }
    v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v19(&v45[v48[5]], &v46[v48[5]], v18);
    v45[v48[6]] = v46[v48[6]];
    ((void (*)(char *, char *, uint64_t))v80)(&v45[v48[7]], &v46[v48[7]], v81);
    v49 = v14[13];
    v50 = (char *)v8 + v49;
    v51 = (char *)v9 + v49;
    if (v12((_QWORD *)((char *)v9 + v49), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v50, v51, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v50, 0, 1, v10);
    }
    v53 = _s6StylesV5EmptyVMa(0);
    v19(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v18);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    v54 = v14[14];
    v55 = (char *)v8 + v54;
    v56 = (char *)v9 + v54;
    if (v12((_QWORD *)((char *)v9 + v54), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v55, v56, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v55, 0, 1, v10);
    }
    v58 = _s6StylesV5DailyVMa(0);
    v19(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v18);
    v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
    v59 = v14[15];
    v60 = (char *)v8 + v59;
    v61 = (char *)v9 + v59;
    if (v12((_QWORD *)((char *)v9 + v59), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v60, v61, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v60, 0, 1, v10);
    }
    a2 = v83;
    v63 = _s6StylesV9MomentaryVMa(0);
    v19(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v18);
    v64 = v14[16];
    v65 = (char *)v8 + v64;
    v66 = (char *)v9 + v64;
    if (v12((_QWORD *)((char *)v9 + v64), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v65, v66, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v65, 0, 1, v10);
    }
    v68 = _s6StylesV6HeaderVMa(0);
    v19(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v18);
    v69 = v14[17];
    v70 = (char *)v8 + v69;
    v71 = (char *)v9 + v69;
    if (v12((_QWORD *)((char *)v9 + v69), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v70, v71, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v70, 0, 1, v10);
    }
    v73 = _s6StylesV11ChartButtonVMa(0);
    v19(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v18);
    v74 = v14[18];
    v75 = (char *)v8 + v74;
    v76 = (char *)v9 + v74;
    if (v12((_QWORD *)((char *)v9 + v74), 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v75, v76, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v75, 0, 1, v10);
    }
    a1 = v84;
    v78 = _s6StylesV15LogButtonFooterVMa(0);
    v19(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v18);
    a3 = v82;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_24176FD98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v82)(char *, char *);
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  unsigned int (*v87)(_QWORD *, uint64_t, uint64_t);

  v4 = a2;
  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v4, v7);
    }
    else
    {
      *a1 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)v4 + v8);
    sub_24172B778((uint64_t)a1 + v8, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v84 = a3;
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      v87 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
      v85 = v4;
      if (v87(v10, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v15 = v14[5];
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_2418A87B4();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v19(v16, v17, v18);
      *((_BYTE *)v9 + v14[6]) = *((_BYTE *)v10 + v14[6]);
      v20 = v14[7];
      v21 = (char *)v9 + v20;
      v22 = (char *)v10 + v20;
      v23 = sub_2418A84E4();
      v82 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
      v83 = v23;
      v82(v21, v22);
      v24 = v14[8];
      v25 = (char *)v9 + v24;
      v26 = (char *)v10 + v24;
      if (v87((_QWORD *)((char *)v10 + v24), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
      }
      v28 = _s6StylesV8TimelineVMa(0);
      v19(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v18);
      v29 = v14[9];
      v30 = (char *)v9 + v29;
      v31 = (char *)v10 + v29;
      v86 = v12;
      if (v87((_QWORD *)((char *)v10 + v29), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v30, v31, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v30, 0, 1, v11);
      }
      v33 = _s6StylesV6NoDataVMa(0);
      v19(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v18);
      v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
      v34 = v14[10];
      v35 = (char *)v9 + v34;
      v36 = (char *)v10 + v34;
      if (v87((_QWORD *)((char *)v10 + v34), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        v38 = v86;
      }
      else
      {
        v38 = v86;
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v35, v36, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v35, 0, 1, v11);
      }
      v39 = _s6StylesV11PlaceholderVMa(0);
      v19(&v35[*(int *)(v39 + 20)], &v36[*(int *)(v39 + 20)], v18);
      v40 = v14[11];
      v41 = (char *)v9 + v40;
      v42 = (char *)v10 + v40;
      if (v87((_QWORD *)((char *)v10 + v40), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v41, v42, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v11);
      }
      v44 = _s6StylesV6SymbolVMa(0);
      v19(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v18);
      v45 = v14[12];
      v46 = (char *)v9 + v45;
      v47 = (char *)v10 + v45;
      if (v87((_QWORD *)((char *)v10 + v45), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v46, v47, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v46, 0, 1, v11);
      }
      v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v19(&v46[v49[5]], &v47[v49[5]], v18);
      v46[v49[6]] = v47[v49[6]];
      ((void (*)(char *, char *, uint64_t))v82)(&v46[v49[7]], &v47[v49[7]], v83);
      v50 = v14[13];
      v51 = (char *)v9 + v50;
      v52 = (char *)v10 + v50;
      if (v87((_QWORD *)((char *)v10 + v50), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v51, v52, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v51, 0, 1, v11);
      }
      v54 = _s6StylesV5EmptyVMa(0);
      v19(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v18);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v14[14];
      v56 = (char *)v9 + v55;
      v57 = (char *)v10 + v55;
      if (v87((_QWORD *)((char *)v10 + v55), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v56, v57, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v56, 0, 1, v11);
      }
      v59 = _s6StylesV5DailyVMa(0);
      v19(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v18);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      v60 = v14[15];
      v61 = (char *)v9 + v60;
      v62 = (char *)v10 + v60;
      if (v87((_QWORD *)((char *)v10 + v60), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        v64 = v86;
      }
      else
      {
        v64 = v86;
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v61, v62, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v61, 0, 1, v11);
      }
      v65 = _s6StylesV9MomentaryVMa(0);
      v19(&v61[*(int *)(v65 + 20)], &v62[*(int *)(v65 + 20)], v18);
      v66 = v14[16];
      v67 = (char *)v9 + v66;
      v68 = (char *)v10 + v66;
      if (v87((_QWORD *)((char *)v10 + v66), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v67, v68, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v67, 0, 1, v11);
      }
      v70 = _s6StylesV6HeaderVMa(0);
      v19(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v18);
      v71 = v14[17];
      v72 = (char *)v9 + v71;
      v73 = (char *)v10 + v71;
      if (v87((_QWORD *)((char *)v10 + v71), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v72, v73, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v72, 0, 1, v11);
      }
      v75 = _s6StylesV11ChartButtonVMa(0);
      v19(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v18);
      v76 = v14[18];
      v77 = (char *)v9 + v76;
      v78 = (char *)v10 + v76;
      if (v87((_QWORD *)((char *)v10 + v76), 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v77, v78, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v77, 0, 1, v11);
      }
      a3 = v84;
      v80 = _s6StylesV15LogButtonFooterVMa(0);
      v19(&v77[*(int *)(v80 + 20)], &v78[*(int *)(v80 + 20)], v18);
      v4 = v85;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)v4 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_2417707C4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v84)(char *, char *);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v88 = a1;
    v14 = sub_2418A8EB0();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v89 = v15;
    v86 = a3;
    if (v16(v11, 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v19 = v18[5];
    v20 = &v10[v19];
    v21 = &v11[v19];
    v22 = sub_2418A87B4();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
    v23(v20, v21, v22);
    v10[v18[6]] = v11[v18[6]];
    v24 = v18[7];
    v25 = &v10[v24];
    v26 = &v11[v24];
    v27 = sub_2418A84E4();
    v84 = *(void (**)(char *, char *))(*(_QWORD *)(v27 - 8) + 32);
    v85 = v27;
    v84(v25, v26);
    v28 = v18[8];
    v29 = &v10[v28];
    v30 = &v11[v28];
    if (v16(&v11[v28], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v29, v30, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v29, 0, 1, v14);
    }
    v32 = _s6StylesV8TimelineVMa(0);
    v23(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v22);
    v33 = v18[9];
    v34 = &v10[v33];
    v35 = &v11[v33];
    v87 = a2;
    if (v16(&v11[v33], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v34, v35, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v34, 0, 1, v14);
    }
    v37 = _s6StylesV6NoDataVMa(0);
    v23(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v22);
    v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
    v38 = v18[10];
    v39 = &v10[v38];
    v40 = &v11[v38];
    if (v16(&v11[v38], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v39, v40, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v39, 0, 1, v14);
    }
    v42 = _s6StylesV11PlaceholderVMa(0);
    v23(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v22);
    v43 = v18[11];
    v44 = &v10[v43];
    v45 = &v11[v43];
    if (v16(&v11[v43], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v44, v45, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v44, 0, 1, v14);
    }
    v47 = _s6StylesV6SymbolVMa(0);
    v23(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v22);
    v48 = v18[12];
    v49 = &v10[v48];
    v50 = &v11[v48];
    if (v16(&v11[v48], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v49, v50, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v49, 0, 1, v14);
    }
    v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v23(&v49[v52[5]], &v50[v52[5]], v22);
    v49[v52[6]] = v50[v52[6]];
    ((void (*)(char *, char *, uint64_t))v84)(&v49[v52[7]], &v50[v52[7]], v85);
    v53 = v18[13];
    v54 = &v10[v53];
    v55 = &v11[v53];
    if (v16(&v11[v53], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v54, v55, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v54, 0, 1, v14);
    }
    v57 = _s6StylesV5EmptyVMa(0);
    v23(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v22);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    v58 = v18[14];
    v59 = &v10[v58];
    v60 = &v11[v58];
    if (v16(&v11[v58], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v59, v60, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v59, 0, 1, v14);
    }
    v62 = _s6StylesV5DailyVMa(0);
    v23(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v22);
    v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
    v63 = v18[15];
    v64 = &v10[v63];
    v65 = &v11[v63];
    if (v16(&v11[v63], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v64, v65, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v64, 0, 1, v14);
    }
    a2 = v87;
    v67 = _s6StylesV9MomentaryVMa(0);
    v23(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v22);
    v68 = v18[16];
    v69 = &v10[v68];
    v70 = &v11[v68];
    if (v16(&v11[v68], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v69, v70, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v69, 0, 1, v14);
    }
    v72 = _s6StylesV6HeaderVMa(0);
    v23(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v22);
    v73 = v18[17];
    v74 = &v10[v73];
    v75 = &v11[v73];
    if (v16(&v11[v73], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v74, v75, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v74, 0, 1, v14);
    }
    v77 = _s6StylesV11ChartButtonVMa(0);
    v23(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v22);
    v78 = v18[18];
    v79 = &v10[v78];
    v80 = &v11[v78];
    if (v16(&v11[v78], 1, v14))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v79, v80, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v79, 0, 1, v14);
    }
    a1 = v88;
    v82 = _s6StylesV15LogButtonFooterVMa(0);
    v23(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v22);
    swift_storeEnumTagMultiPayload();
    a3 = v86;
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2417711B8(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v86)(char *, char *);
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unsigned int (*v91)(char *, uint64_t, uint64_t);

  v4 = a2;
  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, v4, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, v4, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    v10 = *(int *)(a3 + 20);
    v11 = &a1[v10];
    v12 = &v4[v10];
    sub_24172B778((uint64_t)&a1[v10], &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v14 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v88 = a3;
      v15 = sub_2418A8EB0();
      v16 = *(_QWORD *)(v15 - 8);
      v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v89 = v4;
      if (v91(v12, 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v12, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      }
      v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v19 = v18[5];
      v20 = &v11[v19];
      v21 = &v12[v19];
      v22 = sub_2418A87B4();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
      v23(v20, v21, v22);
      v11[v18[6]] = v12[v18[6]];
      v24 = v18[7];
      v25 = &v11[v24];
      v26 = &v12[v24];
      v27 = sub_2418A84E4();
      v86 = *(void (**)(char *, char *))(*(_QWORD *)(v27 - 8) + 32);
      v87 = v27;
      v86(v25, v26);
      v28 = v18[8];
      v29 = &v11[v28];
      v30 = &v12[v28];
      if (v91(&v12[v28], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v29, v30, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v15);
      }
      v32 = _s6StylesV8TimelineVMa(0);
      v23(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v22);
      v33 = v18[9];
      v34 = &v11[v33];
      v35 = &v12[v33];
      v90 = v16;
      if (v91(&v12[v33], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v34, v35, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v34, 0, 1, v15);
      }
      v37 = _s6StylesV6NoDataVMa(0);
      v23(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v22);
      v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
      v38 = v18[10];
      v39 = &v11[v38];
      v40 = &v12[v38];
      if (v91(&v12[v38], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        v42 = v90;
      }
      else
      {
        v42 = v90;
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v39, v40, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v39, 0, 1, v15);
      }
      v43 = _s6StylesV11PlaceholderVMa(0);
      v23(&v39[*(int *)(v43 + 20)], &v40[*(int *)(v43 + 20)], v22);
      v44 = v18[11];
      v45 = &v11[v44];
      v46 = &v12[v44];
      if (v91(&v12[v44], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v45, v46, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v15);
      }
      v48 = _s6StylesV6SymbolVMa(0);
      v23(&v45[*(int *)(v48 + 20)], &v46[*(int *)(v48 + 20)], v22);
      v49 = v18[12];
      v50 = &v11[v49];
      v51 = &v12[v49];
      if (v91(&v12[v49], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v50, v51, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v50, 0, 1, v15);
      }
      v53 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v23(&v50[v53[5]], &v51[v53[5]], v22);
      v50[v53[6]] = v51[v53[6]];
      ((void (*)(char *, char *, uint64_t))v86)(&v50[v53[7]], &v51[v53[7]], v87);
      v54 = v18[13];
      v55 = &v11[v54];
      v56 = &v12[v54];
      if (v91(&v12[v54], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v55, v56, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v55, 0, 1, v15);
      }
      v58 = _s6StylesV5EmptyVMa(0);
      v23(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v22);
      v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
      v59 = v18[14];
      v60 = &v11[v59];
      v61 = &v12[v59];
      if (v91(&v12[v59], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v60, v61, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v60, 0, 1, v15);
      }
      v63 = _s6StylesV5DailyVMa(0);
      v23(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v22);
      v60[*(int *)(v63 + 24)] = v61[*(int *)(v63 + 24)];
      v64 = v18[15];
      v65 = &v11[v64];
      v66 = &v12[v64];
      if (v91(&v12[v64], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        v68 = v90;
      }
      else
      {
        v68 = v90;
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v65, v66, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v65, 0, 1, v15);
      }
      v69 = _s6StylesV9MomentaryVMa(0);
      v23(&v65[*(int *)(v69 + 20)], &v66[*(int *)(v69 + 20)], v22);
      v70 = v18[16];
      v71 = &v11[v70];
      v72 = &v12[v70];
      if (v91(&v12[v70], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v71, v72, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v71, 0, 1, v15);
      }
      v74 = _s6StylesV6HeaderVMa(0);
      v23(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v22);
      v75 = v18[17];
      v76 = &v11[v75];
      v77 = &v12[v75];
      if (v91(&v12[v75], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v76, v77, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v76, 0, 1, v15);
      }
      v79 = _s6StylesV11ChartButtonVMa(0);
      v23(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v22);
      v80 = v18[18];
      v81 = &v11[v80];
      v82 = &v12[v80];
      if (v91(&v12[v80], 1, v15))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v81, v82, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v81, 0, 1, v15);
      }
      a3 = v88;
      v84 = _s6StylesV15LogButtonFooterVMa(0);
      v23(&v81[*(int *)(v84 + 20)], &v82[*(int *)(v84 + 20)], v22);
      swift_storeEnumTagMultiPayload();
      v4 = v89;
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&v4[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241771BD8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241771BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_241771CBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_241771CC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_5:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
}

uint64_t _s14EntryEmptyViewVMa()
{
  uint64_t result;

  result = qword_25714D838;
  if (!qword_25714D838)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241771DD8()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_241771E98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241771EA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v51 = a1;
  v2 = sub_2418A8F7C();
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = _s6StylesV5EmptyVMa(0);
  MEMORY[0x24BDAC7A8](v45, v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241773124();
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_25714D8B0, v17);
  v19 = v18;
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v44 - v21;
  sub_24177331C(0);
  v49 = *(_QWORD *)(v23 - 8);
  v50 = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241773440(0, &qword_25714D8D0, v27);
  MEMORY[0x24BDAC7A8](v28, v29);
  v46 = (char *)&v44 - v30;
  *(_QWORD *)v16 = sub_2418A8C58();
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 0;
  sub_2417734A4();
  sub_2417722F4(v1, &v16[*(int *)(v31 + 44)]);
  _s14EntryEmptyViewVMa();
  sub_241860D60((uint64_t)v12);
  sub_2417289A8((uint64_t)&v12[*(int *)(v9 + 52)], (uint64_t)v8, _s6StylesV5EmptyVMa);
  sub_24172588C((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  if (v8[*(int *)(v45 + 24)])
    v32 = 321.0;
  else
    v32 = 0.0;
  v33 = v8[*(int *)(v45 + 24)] ^ 1;
  sub_24172588C((uint64_t)v8, _s6StylesV5EmptyVMa);
  v34 = sub_2418A9960();
  sub_24185E2CC(0.0, 1, 0.0, 1, INFINITY, 0, v32, v33, (uint64_t)v22, 0.0, 1, INFINITY, 0, v34, v35);
  sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))sub_241773124);
  sub_2418A8F64();
  v36 = sub_2417733A8();
  sub_2418A942C();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v5, v48);
  sub_241773520((uint64_t)v22, &qword_25714D8B0, (void (*)(uint64_t))sub_241773124);
  if (qword_25714B958 != -1)
    swift_once();
  v37 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v38 = sub_2418A7EFC();
  v40 = v39;
  swift_bridgeObjectRelease();

  v54 = v38;
  v55 = v40;
  v52 = v19;
  v53 = v36;
  swift_getOpaqueTypeConformance2();
  sub_241721040();
  v41 = (uint64_t)v46;
  v42 = v50;
  sub_2418A93FC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v42);
  return sub_24177355C(v41, v51);
}

uint64_t sub_2417722F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t (*v65)(uint64_t, uint64_t);
  uint64_t *v66;
  char *v67;
  __int128 v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  unsigned int *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t KeyPath;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;

  v175 = a1;
  v171 = a2;
  v2 = sub_2418A88D4();
  MEMORY[0x24BDAC7A8](v2, v3);
  v161 = (char *)&v145 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_2418A99B4();
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x24BDAC7A8](v160, v5);
  v158 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2418A84E4();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
  v157 = v7;
  v153 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v152 = (char *)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v173 = (uint64_t)&v145 - v13;
  v150 = sub_2418A91E0();
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150, v14);
  v148 = (char *)&v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241730780();
  v151 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v155 = (char *)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174ADF8();
  v156 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v154 = (uint64_t)&v145 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241773440(0, &qword_25714D8A0, v22);
  MEMORY[0x24BDAC7A8](v23, v24);
  v165 = (char *)&v145 - v25;
  sub_241773250();
  v163 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v168 = (uint64_t)&v145 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_25714D890, v29);
  v167 = v30;
  v32 = MEMORY[0x24BDAC7A8](v30, v31);
  v170 = (uint64_t)&v145 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v166 = (uint64_t)&v145 - v36;
  MEMORY[0x24BDAC7A8](v35, v37);
  v169 = (uint64_t)&v145 - v38;
  v162 = (char *)_s6StylesV5EmptyVMa(0);
  MEMORY[0x24BDAC7A8](v162, v39);
  v41 = (char *)&v145 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v43 = MEMORY[0x24BDAC7A8](v146, v42);
  v174 = (uint64_t)&v145 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43, v45);
  v47 = (char *)&v145 - v46;
  v48 = _s21StateOfMindSymbolViewVMa();
  MEMORY[0x24BDAC7A8](v48, v49);
  v51 = (uint64_t *)((char *)&v145 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241721CBC(0, &qword_25714C3F8, v52);
  v54 = v53;
  v56 = MEMORY[0x24BDAC7A8](v53, v55);
  v164 = (uint64_t)&v145 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = MEMORY[0x24BDAC7A8](v56, v58);
  v61 = (char *)&v145 - v60;
  MEMORY[0x24BDAC7A8](v59, v62);
  v64 = (char *)&v145 - v63;
  *v51 = swift_getKeyPath();
  v65 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v66 = (uint64_t *)((char *)v51 + *(int *)(v48 + 20));
  *v66 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v65);
  swift_storeEnumTagMultiPayload();
  *((_BYTE *)v51 + *(int *)(v48 + 24)) = 0;
  v147 = _s14EntryEmptyViewVMa();
  v172 = v175 + *(int *)(v147 + 20);
  sub_241860D60((uint64_t)v47);
  sub_2417289A8((uint64_t)&v47[*(int *)(v146 + 52)], (uint64_t)v41, _s6StylesV5EmptyVMa);
  sub_24172588C((uint64_t)v47, type metadata accessor for StateOfMindTimeline.Styles);
  sub_24172588C((uint64_t)v41, _s6StylesV5EmptyVMa);
  sub_2418A9960();
  sub_2418A861C();
  sub_2417289A8((uint64_t)v51, (uint64_t)v61, (uint64_t (*)(_QWORD))_s21StateOfMindSymbolViewVMa);
  v67 = &v61[*(int *)(v54 + 36)];
  v68 = v179;
  *(_OWORD *)v67 = v178;
  *((_OWORD *)v67 + 1) = v68;
  *((_OWORD *)v67 + 2) = v180;
  sub_24172588C((uint64_t)v51, (uint64_t (*)(_QWORD))_s21StateOfMindSymbolViewVMa);
  v162 = v64;
  sub_2417736CC((uint64_t)v61, (uint64_t)v64, &qword_25714C3F8, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  if (qword_25714B958 != -1)
    swift_once();
  v69 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v70 = sub_2418A7EFC();
  v72 = v71;
  swift_bridgeObjectRelease();

  v176 = (void *)v70;
  v177 = v72;
  sub_241721040();
  v73 = sub_2418A92D0();
  v75 = v74;
  v77 = v76 & 1;
  v78 = v174;
  sub_241860D60(v174);
  sub_24172588C(v78, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A91BC();
  sub_2418A9198();
  sub_2418A91D4();
  swift_release();
  v79 = v149;
  v80 = v148;
  v81 = v150;
  (*(void (**)(char *, _QWORD, uint64_t))(v149 + 104))(v148, *MEMORY[0x24BDF17C8], v150);
  sub_2418A91F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v81);
  v82 = sub_2418A9294();
  v84 = v83;
  LOBYTE(v78) = v85 & 1;
  sub_2417289EC(v73, v75, v77);
  swift_release();
  swift_bridgeObjectRelease();
  v86 = v174;
  sub_241860D60(v174);
  sub_24172588C(v86, type metadata accessor for StateOfMindTimeline.Styles);
  v87 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  v176 = (void *)MEMORY[0x24269BDB4](v87);
  v149 = sub_2418A9270();
  v148 = v88;
  v150 = v89;
  v91 = v90 & 1;
  sub_2417289EC(v82, v84, v78);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241861034(v173);
  v92 = v153;
  v93 = v152;
  v94 = v157;
  (*(void (**)(char *, _QWORD, uint64_t))(v153 + 104))(v152, *MEMORY[0x24BDEB400], v157);
  LOBYTE(v81) = sub_2418A84D8();
  v153 = *(_QWORD *)(v92 + 8);
  ((void (*)(char *, uint64_t))v153)(v93, v94);
  v95 = (unsigned int *)MEMORY[0x24BDF5080];
  v96 = v159;
  if ((v81 & 1) == 0)
    v95 = (unsigned int *)MEMORY[0x24BDF5098];
  v97 = v158;
  v98 = v160;
  (*(void (**)(char *, _QWORD, uint64_t))(v159 + 104))(v158, *v95, v160);
  v99 = (uint64_t)v161;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v161, v97, v98);
  v100 = (uint64_t)v155;
  sub_2417289A8(v99, (uint64_t)&v155[*(int *)(v151 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  v101 = v149;
  v102 = (uint64_t)v148;
  *(_QWORD *)v100 = v149;
  *(_QWORD *)(v100 + 8) = v102;
  *(_BYTE *)(v100 + 16) = v91;
  *(_QWORD *)(v100 + 24) = v150;
  sub_241728A50(v101, v102, v91);
  swift_bridgeObjectRetain();
  sub_24172588C(v99, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v98);
  ((void (*)(uint64_t, uint64_t))v153)(v173, v94);
  sub_2417289EC(v101, v102, v91);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v104 = v154;
  sub_2417289A8(v100, v154, (uint64_t (*)(_QWORD))sub_241730780);
  v105 = v104 + *(int *)(v156 + 36);
  *(_QWORD *)v105 = KeyPath;
  *(_BYTE *)(v105 + 8) = 1;
  sub_24172588C(v100, (uint64_t (*)(_QWORD))sub_241730780);
  v106 = *(_QWORD **)(v175 + *(int *)(v147 + 24));
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v108 = v174;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v106 = sub_241802714(0, v106[2] + 1, 1, v106);
  v110 = v106[2];
  v109 = v106[3];
  if (v110 >= v109 >> 1)
    v106 = sub_241802714((_QWORD *)(v109 > 1), v110 + 1, 1, v106);
  v106[2] = v110 + 1;
  v111 = &v106[2 * v110];
  v111[4] = 0x62614C7974706D45;
  v111[5] = 0xEA00000000006C65;
  v176 = &unk_2511AB450;
  v112 = swift_bridgeObjectRetain();
  sub_2417739BC(v112);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2417735C4();
  v113 = (uint64_t)v165;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24172588C(v104, (uint64_t (*)(_QWORD))sub_24174ADF8);
  v114 = sub_2418A90E4();
  sub_241860D60(v108);
  sub_24172588C(v108, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A84A8();
  v116 = v115;
  v118 = v117;
  v120 = v119;
  v122 = v121;
  v123 = v168;
  sub_24177362C(v113, v168);
  v124 = v123 + *(int *)(v163 + 36);
  *(_BYTE *)v124 = v114;
  *(_QWORD *)(v124 + 8) = v116;
  *(_QWORD *)(v124 + 16) = v118;
  *(_QWORD *)(v124 + 24) = v120;
  *(_QWORD *)(v124 + 32) = v122;
  *(_BYTE *)(v124 + 40) = 0;
  sub_241773680(v113);
  v125 = sub_2418A90CC();
  sub_241860D60(v108);
  sub_24172588C(v108, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A84A8();
  v127 = v126;
  v129 = v128;
  v131 = v130;
  v133 = v132;
  v134 = v166;
  sub_2417289A8(v123, v166, (uint64_t (*)(_QWORD))sub_241773250);
  v135 = v134 + *(int *)(v167 + 36);
  *(_BYTE *)v135 = v125;
  *(_QWORD *)(v135 + 8) = v127;
  *(_QWORD *)(v135 + 16) = v129;
  *(_QWORD *)(v135 + 24) = v131;
  *(_QWORD *)(v135 + 32) = v133;
  *(_BYTE *)(v135 + 40) = 0;
  sub_24172588C(v123, (uint64_t (*)(_QWORD))sub_241773250);
  v136 = v169;
  sub_2417736CC(v134, v169, &qword_25714D890, (void (*)(uint64_t))sub_241773250);
  v137 = (uint64_t)v162;
  v138 = v164;
  sub_24177371C((uint64_t)v162, v164, &qword_25714C3F8, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  v139 = v170;
  sub_24177371C(v136, v170, &qword_25714D890, (void (*)(uint64_t))sub_241773250);
  v140 = v171;
  *v171 = 0;
  *((_BYTE *)v140 + 8) = 1;
  sub_24177319C();
  v142 = v141;
  sub_24177371C(v138, (uint64_t)v140 + *(int *)(v141 + 48), &qword_25714C3F8, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  sub_24177371C(v139, (uint64_t)v140 + *(int *)(v142 + 64), &qword_25714D890, (void (*)(uint64_t))sub_241773250);
  v143 = (char *)v140 + *(int *)(v142 + 80);
  *(_QWORD *)v143 = 0;
  v143[8] = 1;
  sub_241773520(v136, &qword_25714D890, (void (*)(uint64_t))sub_241773250);
  sub_241773520(v137, &qword_25714C3F8, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  sub_241773520(v139, &qword_25714D890, (void (*)(uint64_t))sub_241773250);
  return sub_241773520(v138, &qword_25714C3F8, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
}

void sub_241773124()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D878)
  {
    sub_24172570C(255, &qword_25714D880, (uint64_t (*)(uint64_t))sub_24177319C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417732BC();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D878);
  }
}

void sub_24177319C()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_25714D888)
  {
    sub_241721CBC(255, &qword_25714C3F8, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
    sub_241721CBC(255, &qword_25714D890, (void (*)(uint64_t))sub_241773250);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_25714D888);
  }
}

void sub_241773250()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D898)
  {
    sub_241773440(255, &qword_25714D8A0, (void (*)(uint64_t))sub_24174ADF8);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D898);
  }
}

unint64_t sub_2417732BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714D8A8;
  if (!qword_25714D8A8)
  {
    sub_24172570C(255, &qword_25714D880, (uint64_t (*)(uint64_t))sub_24177319C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_25714D8A8);
  }
  return result;
}

void sub_24177331C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714D8B8)
  {
    sub_241721CBC(255, &qword_25714D8B0, (void (*)(uint64_t))sub_241773124);
    v5[0] = v2;
    v5[1] = sub_2417733A8();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2F10], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714D8B8);
  }
}

unint64_t sub_2417733A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714D8C0;
  if (!qword_25714D8C0)
  {
    sub_241721CBC(255, &qword_25714D8B0, (void (*)(uint64_t))sub_241773124);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714D8C8, (uint64_t (*)(uint64_t))sub_241773124, MEMORY[0x24BDF4700]);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714D8C0);
  }
  return result;
}

void sub_241773440(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_2418A909C();
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_2417734A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D8D8)
  {
    sub_24172570C(255, &qword_25714D880, (uint64_t (*)(uint64_t))sub_24177319C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D8D8);
  }
}

uint64_t sub_241773520(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_241721CBC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24177355C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241773440(0, &qword_25714D8D0, sub_24177331C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2417735C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714CD50;
  if (!qword_25714CD50)
  {
    sub_24174ADF8();
    v2 = v1;
    v3[0] = sub_241731CDC();
    v3[1] = sub_24174B590();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714CD50);
  }
  return result;
}

uint64_t sub_24177362C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241773440(0, &qword_25714D8A0, (void (*)(uint64_t))sub_24174ADF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241773680(uint64_t a1)
{
  uint64_t v2;

  sub_241773440(0, &qword_25714D8A0, (void (*)(uint64_t))sub_24174ADF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417736CC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_241721CBC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_24177371C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_241721CBC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_241773770()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_25714D8E0;
  if (!qword_25714D8E0)
  {
    sub_241773440(255, &qword_25714D8D0, sub_24177331C);
    v2 = v1;
    sub_241721CBC(255, &qword_25714D8B0, (void (*)(uint64_t))sub_241773124);
    v4[2] = v3;
    v4[3] = sub_2417733A8();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_25714D8E0);
  }
  return result;
}

uint64_t MentalHealthAccessibilityCategory.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2418AA3F8();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t MentalHealthAccessibilityCategory.rawValue.getter()
{
  return 0x746567646957;
}

uint64_t sub_2417738A4()
{
  return 1;
}

uint64_t sub_2417738AC()
{
  sub_2418AA56C();
  sub_2418A9E1C();
  return sub_2418AA59C();
}

uint64_t sub_2417738F8()
{
  return sub_2418A9E1C();
}

uint64_t sub_24177390C()
{
  sub_2418AA56C();
  sub_2418A9E1C();
  return sub_2418AA59C();
}

uint64_t sub_241773954@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2418AA3F8();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2417739A4(_QWORD *a1@<X8>)
{
  *a1 = 0x746567646957;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_2417739BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_241802714(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_241773B0C(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_2418AA398();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2418AA398();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x24269CAE0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_241762ACC(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_2418AA398();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_2418A9EC4();
  }
  __break(1u);
  return result;
}

uint64_t sub_241773CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_2418038FC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_241773E08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_241803A1C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t static String.mindAccessibilityIdentifier(_:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  sub_2417739BC(v0);
  sub_241773FD4();
  sub_241731AEC();
  v1 = sub_2418A9D50();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_241773FD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543915D0)
  {
    v0 = sub_2418A9F0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543915D0);
  }
}

uint64_t static String.mindAccessibilityIdentifier(_:components:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_bridgeObjectRetain();
  sub_2417739BC(v0);
  v1 = swift_bridgeObjectRetain();
  sub_2417739BC(v1);
  sub_241773FD4();
  sub_241731AEC();
  v2 = sub_2418A9D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_2417740E0()
{
  unint64_t result;

  result = qword_25714D8E8;
  if (!qword_25714D8E8)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for MentalHealthAccessibilityCategory, &type metadata for MentalHealthAccessibilityCategory);
    atomic_store(result, (unint64_t *)&qword_25714D8E8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MentalHealthAccessibilityCategory(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for MentalHealthAccessibilityCategory(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2417741B8 + 4 * byte_2418D33C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2417741D8 + 4 * byte_2418D33C5[v4]))();
}

_BYTE *sub_2417741B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2417741D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2417741E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2417741E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2417741F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2417741F8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_241774204()
{
  return 0;
}

ValueMetadata *type metadata accessor for MentalHealthAccessibilityCategory()
{
  return &type metadata for MentalHealthAccessibilityCategory;
}

_QWORD *sub_24177421C(_QWORD *a1, _QWORD *a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_2418A8EB0();
      v6 = *(_QWORD *)(v5 - 8);
      v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      if (v78((char *)a2, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      v8 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2418A87B4();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      v13(v10, v11, v12);
      *((_BYTE *)a1 + v8[6]) = *((_BYTE *)a2 + v8[6]);
      v14 = v8[7];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_2418A84E4();
      v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      v76(v15, v16, v17);
      v18 = v8[8];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      if (v78((char *)a2 + v18, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v19, v20, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
      }
      v22 = _s6StylesV8TimelineVMa(0);
      v13(&v19[*(int *)(v22 + 20)], &v20[*(int *)(v22 + 20)], v12);
      v23 = v8[9];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v77 = v6;
      if (v78((char *)a2 + v23, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v24, v25, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v24, 0, 1, v5);
      }
      v27 = _s6StylesV6NoDataVMa(0);
      v13(&v24[*(int *)(v27 + 20)], &v25[*(int *)(v27 + 20)], v12);
      v24[*(int *)(v27 + 24)] = v25[*(int *)(v27 + 24)];
      v28 = v8[10];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      if (v78((char *)a2 + v28, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        v32 = v77;
      }
      else
      {
        v32 = v77;
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v29, v30, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v29, 0, 1, v5);
      }
      v33 = _s6StylesV11PlaceholderVMa(0);
      v13(&v29[*(int *)(v33 + 20)], &v30[*(int *)(v33 + 20)], v12);
      v34 = v8[11];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      if (v78((char *)a2 + v34, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v35, v36, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v5);
      }
      v38 = _s6StylesV6SymbolVMa(0);
      v13(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v12);
      v39 = v8[12];
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      if (v78((char *)a2 + v39, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v40, v41, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v40, 0, 1, v5);
      }
      v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v13(&v40[v43[5]], &v41[v43[5]], v12);
      v40[v43[6]] = v41[v43[6]];
      v76(&v40[v43[7]], &v41[v43[7]], v17);
      v44 = v8[13];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      if (v78((char *)a2 + v44, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v77;
      }
      else
      {
        v48 = v77;
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v45, v46, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v45, 0, 1, v5);
      }
      v49 = _s6StylesV5EmptyVMa(0);
      v13(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v12);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      v50 = v8[14];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      if (v78((char *)a2 + v50, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v5);
      }
      v54 = _s6StylesV5DailyVMa(0);
      v13(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v12);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v8[15];
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      if (v78((char *)a2 + v55, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v5);
      }
      v59 = _s6StylesV9MomentaryVMa(0);
      v13(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v12);
      v60 = v8[16];
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      if (v78((char *)a2 + v60, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v5);
      }
      v64 = _s6StylesV6HeaderVMa(0);
      v13(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v12);
      v65 = v8[17];
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      if (v78((char *)a2 + v65, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v5);
      }
      v69 = _s6StylesV11ChartButtonVMa(0);
      v13(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v12);
      v70 = v8[18];
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      if (v78(v72, 1, v5))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v5);
      }
      v74 = _s6StylesV15LogButtonFooterVMa(0);
      v13(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v12);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_241774B78(char *a1, char *a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v4);
    v6 = v5;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v80(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = sub_2418A87B4();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
      v15(v12, v13, v14);
      a1[v10[6]] = a2[v10[6]];
      v16 = v10[7];
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = sub_2418A84E4();
      v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
      v78(v17, v18, v19);
      v20 = v10[8];
      v21 = &a1[v20];
      v22 = &a2[v20];
      if (v80(&a2[v20], 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
      }
      v24 = _s6StylesV8TimelineVMa(0);
      v15(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      v25 = v10[9];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v79 = v8;
      if (v80(&a2[v25], 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v26, v27, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v26, 0, 1, v7);
      }
      v29 = _s6StylesV6NoDataVMa(0);
      v15(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      v30 = v10[10];
      v31 = &a1[v30];
      v32 = &a2[v30];
      if (v80(&a2[v30], 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        v34 = v79;
      }
      else
      {
        v34 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v31, v32, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v31, 0, 1, v7);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v15(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v14);
      v36 = v10[11];
      v37 = &a1[v36];
      v38 = &a2[v36];
      if (v80(&a2[v36], 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v37, v38, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v7);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v15(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v14);
      v41 = v10[12];
      v42 = &a1[v41];
      v43 = &a2[v41];
      if (v80(&a2[v41], 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v42, v43, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v42, 0, 1, v7);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v15(&v42[v45[5]], &v43[v45[5]], v14);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v19);
      v46 = v10[13];
      v47 = &a1[v46];
      v48 = &a2[v46];
      if (v80(&a2[v46], 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v79;
      }
      else
      {
        v50 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v47, v48, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v47, 0, 1, v7);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v15(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v14);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v10[14];
      v53 = &a1[v52];
      v54 = &a2[v52];
      if (v80(&a2[v52], 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v15(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v14);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v10[15];
      v58 = &a1[v57];
      v59 = &a2[v57];
      if (v80(&a2[v57], 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v15(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v14);
      v62 = v10[16];
      v63 = &a1[v62];
      v64 = &a2[v62];
      if (v80(&a2[v62], 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v15(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v14);
      v67 = v10[17];
      v68 = &a1[v67];
      v69 = &a2[v67];
      if (v80(&a2[v67], 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v15(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v14);
      v72 = v10[18];
      v73 = &a1[v72];
      v74 = &a2[v72];
      if (v80(v74, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v15(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417754D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417754E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_241775534()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241775540(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t _s14EntryViewStackVMa()
{
  uint64_t result;

  result = qword_25714D948;
  if (!qword_25714D948)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2417755D8()
{
  unint64_t result;

  result = qword_25714D980;
  if (!qword_25714D980)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEEF18], MEMORY[0x24BDEEF38]);
    atomic_store(result, (unint64_t *)&qword_25714D980);
  }
  return result;
}

uint64_t sub_24177561C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  void (*v28)(char *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42[32];
  uint64_t v43;

  v4 = sub_2418A86C4();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)&v38 - v15;
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v38 - v18;
  v20 = _s14EntryViewStackVMa();
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177667C(v2, (uint64_t)v23);
  if ((a2 & 1) != 0)
  {
    sub_241860D60((uint64_t)v19);
    sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))_s14EntryViewStackVMa);
    sub_24172588C((uint64_t)v19, type metadata accessor for StateOfMindTimeline.Styles);
  }
  else
  {
    sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))_s14EntryViewStackVMa);
  }
  sub_241860D60((uint64_t)v19);
  sub_24172588C((uint64_t)v19, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v16);
  sub_24172588C((uint64_t)v16, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v12);
  sub_24172588C((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A8724();
  sub_24172159C((unint64_t *)&qword_25714D9D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778], MEMORY[0x24BDEC7A0]);
  v24 = sub_2418A9F9C();
  v25 = MEMORY[0x24BEE4AF8];
  if (!v24)
    return v25;
  v26 = v24;
  v43 = MEMORY[0x24BEE4AF8];
  sub_24183D5C8(0, v24 & ~(v24 >> 63), 0);
  result = sub_2418A9F90();
  if ((v26 & 0x8000000000000000) == 0)
  {
    do
    {
      v28 = (void (*)(char *, _QWORD))sub_2418A9FC0();
      v30 = v39;
      v29 = v40;
      (*(void (**)(char *))(v39 + 16))(v7);
      v28(v42, 0);
      v42[0] = 0;
      v41 = 1;
      sub_2418A86AC();
      v32 = v31;
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v29);
      v25 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24183D5C8(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v43;
      }
      v36 = *(_QWORD *)(v25 + 16);
      v35 = *(_QWORD *)(v25 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_24183D5C8(v35 > 1, v36 + 1, 1);
        v25 = v43;
      }
      *(_QWORD *)(v25 + 16) = v36 + 1;
      v37 = v25 + 16 * v36;
      *(_QWORD *)(v37 + 32) = v32;
      *(_QWORD *)(v37 + 40) = v34;
      sub_2418A9FB4();
      --v26;
    }
    while (v26);
    return v25;
  }
  __break(1u);
  return result;
}

double sub_2417759B0(uint64_t a1, char a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  double *v6;
  double v7;
  double v8;
  double v9;

  v2 = sub_24177561C(a1, a2 & 1);
  v4 = v3;
  v5 = *(_QWORD *)(v2 + 16);
  if (v5)
  {
    v6 = (double *)(v2 + 40);
    v7 = 0.0;
    do
    {
      v8 = *v6;
      v6 += 2;
      v9 = v8;
      if (v7 <= v8)
        v7 = v9;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_241775A20(uint64_t a1, char a2, double a3, double a4, double a5, double a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  double v26;
  uint64_t v27;
  int64_t v28;
  double v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  char v45;

  sub_2417764A8(0, &qword_25714D990, MEMORY[0x24BEE2610]);
  v19 = v18;
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v41 - v21;
  LOBYTE(v44) = a2 & 1;
  v45 = a8 & 1;
  v23 = sub_24177561C(a1, a2 & 1);
  v24 = v23;
  v25 = *(_QWORD *)(v23 + 16);
  if (v25)
  {
    v42 = a9;
    v43 = v9;
    v26 = 0.0;
    v27 = 40;
    v28 = v25;
    do
    {
      if (v26 <= *(double *)(v23 + v27))
        v26 = *(double *)(v23 + v27);
      v27 += 16;
      --v28;
    }
    while (v28);
    v44 = MEMORY[0x24BEE4AF8];
    sub_24183D5E4(0, v25, 0);
    v29 = v44;
    v30 = *(_QWORD *)(*(_QWORD *)&v44 + 16);
    v31 = 32 * v30 + 56;
    v32 = 32;
    do
    {
      v33 = *(_QWORD *)(v24 + v32);
      v44 = v29;
      v34 = *(_QWORD *)(*(_QWORD *)&v29 + 24);
      v35 = v30 + 1;
      if (v30 >= v34 >> 1)
      {
        sub_24183D5E4(v34 > 1, v30 + 1, 1);
        v29 = v44;
      }
      *(_QWORD *)(*(_QWORD *)&v29 + 16) = v35;
      v36 = (_BYTE *)(*(_QWORD *)&v29 + v31);
      *((_QWORD *)v36 - 3) = v33;
      *(v36 - 16) = 0;
      *((double *)v36 - 1) = v26;
      v31 += 32;
      v32 += 16;
      v30 = v35;
      *v36 = 0;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    a9 = v42;
    v9 = v43;
  }
  else
  {
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x24BEE4AF8];
  }
  v44 = a3;
  v37 = sub_2418A8724();
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v22, a9, v37);
  *(double *)&v22[*(int *)(v19 + 52)] = v29;
  MEMORY[0x24BDAC7A8](v38, v39);
  *(&v41 - 6) = (uint64_t)&v44;
  *((double *)&v41 - 5) = a3;
  *((double *)&v41 - 4) = a4;
  *((double *)&v41 - 3) = a5;
  *((double *)&v41 - 2) = a6;
  *(&v41 - 1) = v9;
  sub_241775FA8((uint64_t)v22, (void (*)(char *, uint64_t, uint64_t, uint64_t, _QWORD))sub_241775F7C, (uint64_t)(&v41 - 8));
  return sub_241776640((uint64_t)v22, &qword_25714D990, MEMORY[0x24BEE2610]);
}

uint64_t sub_241775C84(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, double *a6)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t result;
  _BYTE v16[16];

  v10 = a3 & 1;
  v11 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2418A99F0();
  v16[8] = v10;
  v16[0] = a5 & 1;
  result = sub_2418A86B8();
  if ((a3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_241860D60((uint64_t)v14);
    result = sub_24172588C((uint64_t)v14, type metadata accessor for StateOfMindTimeline.Styles);
    *a6 = *(double *)&a2 + 10.0 + *a6;
  }
  return result;
}

double sub_241775DAC(uint64_t a1, char a2)
{
  return sub_2417759B0(a1, a2 & 1);
}

uint64_t sub_241775DC4(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  return sub_241775A20(a1, a2 & 1, a6, a7, a8, a9, a3, a4 & 1, a5);
}

uint64_t sub_241775DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_241775E34(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF44F8]);
}

uint64_t sub_241775E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_241775E34(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF4500]);
}

uint64_t sub_241775E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_241775E70(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2418A8478();
  return sub_241775ECC;
}

void sub_241775ECC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_241775EFC()
{
  return sub_24172159C(&qword_25714D988, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, (uint64_t)&unk_2418D34A8);
}

void sub_241775F28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D998)
  {
    v0 = sub_2418A9F0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D998);
  }
}

uint64_t sub_241775F7C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return sub_241775C84(a1, a2, a3 & 1, a4, a5 & 1, *(double **)(v5 + 16));
}

uint64_t sub_241775FA8(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *, _QWORD);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t (*v38)(char *, char *, uint64_t);
  uint64_t result;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[3];
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70[4];
  unsigned __int8 v71;

  v62 = a2;
  v63 = a3;
  sub_24172570C(0, (unint64_t *)&qword_25714D9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC280], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v56 - v6;
  v67 = sub_2418A86C4();
  v8 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67, v9);
  v69 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241776444();
  v61 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v60 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2418A8724();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417764A8(0, &qword_25714D990, MEMORY[0x24BEE2610]);
  v68 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)v56 - v21;
  sub_2417764A8(0, &qword_25714D9C0, MEMORY[0x24BEE2600]);
  v24 = v23;
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)v56 - v26;
  sub_241776574(a1, (uint64_t)v22);
  v65 = v15;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v22, v14);
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778];
  sub_24172159C(&qword_25714D9A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778], MEMORY[0x24BDEC798]);
  v64 = v18;
  sub_2418A9E70();
  v29 = &v27[*(int *)(v24 + 52)];
  *(_QWORD *)v29 = *(_QWORD *)&v22[*((int *)v68 + 13)];
  *((_QWORD *)v29 + 1) = 0;
  v68 = v29;
  v66 = *(int *)(v24 + 56);
  v27[v66] = 0;
  sub_2417765C8();
  v31 = &v27[*(int *)(v30 + 36)];
  v32 = sub_24172159C((unint64_t *)&qword_25714D9D0, v28, MEMORY[0x24BDEC7A0]);
  v58 = v8;
  v59 = v14;
  v56[2] = v32;
  v57 = v7;
  while (1)
  {
    v33 = *(_QWORD *)v31;
    sub_2418A9FA8();
    if (v33 == v70[0])
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v7, 1, 1, v67);
LABEL_9:
      sub_24173FC60((uint64_t)v7, (unint64_t *)&qword_25714D9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC280], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      goto LABEL_11;
    }
    v34 = (void (*)(uint64_t *, _QWORD))sub_2418A9FC0();
    v35 = v67;
    (*(void (**)(char *))(v8 + 16))(v7);
    v34(v70, 0);
    v36 = v64;
    v37 = v65;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v64, v27, v14);
    sub_2418A9FB4();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v35);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v35) == 1)
      goto LABEL_9;
    v38 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 32);
    result = v38(v69, v7, v35);
    v40 = *((_QWORD *)v68 + 1);
    v41 = *(_QWORD *)(*(_QWORD *)v68 + 16);
    if (v40 == v41)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v69, v35);
LABEL_11:
      v27[v66] = 1;
      return sub_241776640((uint64_t)v27, &qword_25714D9C0, MEMORY[0x24BEE2600]);
    }
    if (v40 >= v41)
      break;
    v42 = v40 + 1;
    v43 = *(_QWORD *)v68 + 32 * v40;
    v44 = v31;
    v45 = v27;
    v46 = *(_BYTE *)(v43 + 56);
    v47 = *(_QWORD *)(v43 + 48);
    v48 = *(unsigned __int8 *)(v43 + 40);
    v49 = v35;
    v50 = *(_QWORD *)(v43 + 32);
    v51 = v69;
    *((_QWORD *)v68 + 1) = v42;
    v52 = v60;
    v53 = &v60[*(int *)(v61 + 48)];
    v38(v60, v51, v49);
    *(_QWORD *)v53 = v50;
    v53[8] = v48;
    *((_QWORD *)v53 + 2) = v47;
    v53[24] = v46;
    LOBYTE(v70[0]) = v48;
    v71 = v46;
    v27 = v45;
    v31 = v44;
    v54 = v48;
    v7 = v57;
    v8 = v58;
    v62(v52, v50, v54, v47, v71);
    v55 = (uint64_t)v52;
    v14 = v59;
    sub_24172588C(v55, (uint64_t (*)(_QWORD))sub_241776444);
    if ((v27[v66] & 1) != 0)
      return sub_241776640((uint64_t)v27, &qword_25714D9C0, MEMORY[0x24BEE2600]);
  }
  __break(1u);
  return result;
}

void sub_241776444()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714D9B8)
  {
    sub_2418A86C4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714D9B8);
  }
}

void sub_2417764A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!*a2)
  {
    v6 = sub_2418A8724();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778];
    sub_241775F28();
    v11[0] = v6;
    v11[1] = v8;
    v11[2] = sub_24172159C(&qword_25714D9A0, v7, MEMORY[0x24BDEC798]);
    v11[3] = sub_24172159C(&qword_25714D9A8, (uint64_t (*)(uint64_t))sub_241775F28, MEMORY[0x24BEE12C8]);
    v9 = a3(a1, v11);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_241776574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417764A8(0, &qword_25714D990, MEMORY[0x24BEE2610]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2417765C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D9C8)
  {
    sub_2418A8724();
    sub_24172159C((unint64_t *)&qword_25714D9D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778], MEMORY[0x24BDEC7A0]);
    v0 = sub_2418AA368();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D9C8);
  }
}

uint64_t sub_241776640(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v4;

  sub_2417764A8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24177667C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s14EntryViewStackVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_2417766C0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v8 = a2[4];
    v9 = *(int *)(a3 + 32);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    sub_2417768DC(0);
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v16 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v20 = *(int *)(a3 + 36);
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    sub_241725C90(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

void sub_2417768DC(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
}

uint64_t sub_2417768F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 32);
  sub_2417768DC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = a1 + *(int *)(a2 + 36);
  sub_241725C90(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v10 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t sub_241776A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(int *)(a3 + 32);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  sub_2417768DC(0);
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8EB0();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v15 = (char *)v9 + v14;
    v16 = (char *)v10 + v14;
    v17 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v18 = *(int *)(a3 + 36);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  sub_241725C90(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_241776C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 32);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_24172588C(a1 + v7, (uint64_t (*)(_QWORD))sub_2417768DC);
    sub_2417768DC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = *(int *)(a3 + 36);
    v18 = (_QWORD *)(a1 + v17);
    v19 = (_QWORD *)(a2 + v17);
    sub_24172588C(a1 + v17, (uint64_t (*)(_QWORD))sub_241725C90);
    sub_241725C90(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241776E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 32);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  sub_2417768DC(0);
  v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8EB0();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v18 = *(int *)(a3 + 36);
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  sub_241725C90(0);
  v22 = v21;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v19, v20, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t sub_241777018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 32);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    sub_24172588C(a1 + v7, (uint64_t (*)(_QWORD))sub_2417768DC);
    sub_2417768DC(0);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v19 = *(int *)(a3 + 36);
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    sub_24172588C(a1 + v19, (uint64_t (*)(_QWORD))sub_241725C90);
    sub_241725C90(0);
    v23 = v22;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v20, v21, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241777238()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241777244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_241777314()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241777320(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for LabelsSelectionPhase_iOS()
{
  uint64_t result;

  result = qword_25714DA38;
  if (!qword_25714DA38)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241777428()
{
  unint64_t v0;
  unint64_t v1;

  sub_2417768DC(319);
  if (v0 <= 0x3F)
  {
    sub_241725C90(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2417774D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417774E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  __int128 v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;

  v54 = a1;
  v2 = sub_2418A84E4();
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v51 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for LabelsSelectionPhaseContent();
  MEMORY[0x24BDAC7A8](v48, v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417780FC(0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417781B4(0);
  v13 = v12;
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417781F4(0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v49 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417782D8(0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v50 = (uint64_t)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 17) & 1) != 0)
  {
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0uLL;
  }
  else
  {
    sub_241777A18(&v57);
    v24 = v57.n128_u64[1];
    v23 = v57.n128_u64[0];
    v25 = v58;
    v26 = v59;
    v27 = v60;
    v28 = v61;
    v29 = v62;
    v31 = v63;
    v30 = v64;
  }
  *(_QWORD *)v16 = v23;
  *((_QWORD *)v16 + 1) = v24;
  *((_QWORD *)v16 + 2) = v25;
  *((_QWORD *)v16 + 3) = v26;
  *((_QWORD *)v16 + 4) = v27;
  *((_QWORD *)v16 + 5) = v28;
  *((_QWORD *)v16 + 6) = v29;
  *(_OWORD *)(v16 + 56) = v31;
  *((_QWORD *)v16 + 9) = v30;
  v47 = &v16[*(int *)(v13 + 36)];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v32 = v55;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  v33 = sub_2418AA104();
  swift_release();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  v34 = v13;
  sub_2418A876C();
  swift_getKeyPath();
  sub_2418A8778();
  swift_release();
  swift_release();
  v35 = v55;
  v36 = *(_BYTE *)(v1 + 16);
  v37 = *(_QWORD *)(v1 + 24);
  v38 = *(_QWORD *)(v1 + 32);
  *(double *)v7 = v32;
  *((_QWORD *)v7 + 1) = v33;
  *((double *)v7 + 2) = v35;
  *(_OWORD *)(v7 + 24) = v56;
  v7[40] = v36;
  *((_QWORD *)v7 + 6) = v37;
  *((_QWORD *)v7 + 7) = v38;
  v39 = (uint64_t *)&v7[*(int *)(v48 + 36)];
  *v39 = swift_getKeyPath();
  sub_2417768DC(0);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  *v11 = sub_2418A90B4();
  sub_2417783F8();
  sub_2417784C8((uint64_t)v7, &qword_25714DA98, (uint64_t (*)(uint64_t))type metadata accessor for LabelsSelectionPhaseContent, sub_24177817C, (uint64_t (*)(_QWORD))sub_24177813C, (uint64_t)&v11[*(int *)(v40 + 44)]);
  sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LabelsSelectionPhaseContent);
  sub_241731B4C((uint64_t)v11, (uint64_t)v47, (uint64_t (*)(_QWORD))sub_2417780FC);
  v41 = (uint64_t *)&v16[*(int *)(v34 + 40)];
  *v41 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v42 = (uint64_t)v49;
  sub_241777BB0(*(_BYTE *)(v1 + 16), *(_BYTE *)(v1 + 17));
  sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))sub_2417781B4);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v43 = v55;
  type metadata accessor for LabelsSelectionPhase_iOS();
  v44 = v51;
  sub_241861034(v51);
  v45 = v50;
  sub_24182EA60(v44, v42, v50, v43);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v44, v53);
  sub_24172588C(v42, (uint64_t (*)(_QWORD))sub_2417781F4);
  return sub_241731B4C(v45, v54, (uint64_t (*)(_QWORD))sub_2417782D8);
}

__n128 sub_241777A18@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 result;
  __n128 v10;
  unint64_t v11;
  unsigned __int8 v12;

  if (qword_25714B958 != -1)
    swift_once();
  v3 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v4 = sub_2418A7EFC();
  v6 = v5;
  swift_bridgeObjectRelease();

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v8 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  sub_24176E428();
  swift_retain();
  sub_2418A9840();
  result = v10;
  a1->n128_u64[0] = v4;
  a1->n128_u64[1] = v6;
  a1[1] = v10;
  a1[2].n128_u64[0] = v11;
  a1[2].n128_u8[8] = v12;
  a1[3].n128_u64[0] = 0x747475427478654ELL;
  a1[3].n128_u64[1] = 0xEA00000000006E6FLL;
  a1[4].n128_u64[0] = v8;
  a1[4].n128_u64[1] = v7;
  return result;
}

uint64_t sub_241777BB0(char a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  sub_2417781B4(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241731FB0(0, &qword_25714DB10, (uint64_t (*)(uint64_t))sub_241778218, v9, MEMORY[0x24BDEF380]);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v29 - v12;
  sub_241778218(0);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v19 = sub_2418A9960();
    v21 = v20;
    sub_24182FC6C(a1 & 1, (uint64_t)&v30);
    v22 = v30;
    v29 = v31;
    v23 = v32;
    v24 = v33;
    sub_2417289A8(v2, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_2417781B4);
    v25 = &v18[*(int *)(v15 + 36)];
    *(_QWORD *)v25 = v19;
    *((_QWORD *)v25 + 1) = v21;
    *((_QWORD *)v25 + 2) = v22;
    *(_OWORD *)(v25 + 24) = v29;
    *((_QWORD *)v25 + 5) = v23;
    *((_QWORD *)v25 + 6) = v24;
    sub_2417289A8((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_241778218);
    swift_storeEnumTagMultiPayload();
    sub_241728434(&qword_25714DB18, (uint64_t (*)(uint64_t))sub_241778218, sub_241778784, sub_2417787A0);
    sub_241778784();
    sub_2418A8D24();
    v26 = (uint64_t)v18;
    v27 = sub_241778218;
  }
  else
  {
    sub_2417289A8(v2, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_2417781B4);
    sub_2417289A8((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_2417781B4);
    swift_storeEnumTagMultiPayload();
    sub_241728434(&qword_25714DB18, (uint64_t (*)(uint64_t))sub_241778218, sub_241778784, sub_2417787A0);
    sub_241778784();
    sub_2418A8D24();
    v26 = (uint64_t)v8;
    v27 = sub_2417781B4;
  }
  return sub_24172588C(v26, (uint64_t (*)(_QWORD))v27);
}

uint64_t sub_241777E2C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v4 = v3;
  v39 = a3;
  sub_2417787BC(0);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241731FB0(0, &qword_25714DB80, (uint64_t (*)(uint64_t))sub_241778AB0, v13, MEMORY[0x24BDEF380]);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v38 - v16;
  sub_241778AB0(0);
  v19 = v18;
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v23 = sub_2418A9960();
    v25 = v24;
    sub_24182FC6C(a1 & 1, (uint64_t)&v40);
    v26 = v40;
    v38 = v41;
    v27 = v42;
    v28 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v22, v4, v8);
    v29 = &v22[*(int *)(v19 + 36)];
    *(_QWORD *)v29 = v23;
    *((_QWORD *)v29 + 1) = v25;
    *((_QWORD *)v29 + 2) = v26;
    *(_OWORD *)(v29 + 24) = v38;
    *((_QWORD *)v29 + 5) = v27;
    *((_QWORD *)v29 + 6) = v28;
    sub_2417289A8((uint64_t)v22, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_241778AB0);
    swift_storeEnumTagMultiPayload();
    sub_241778AD4();
    sub_24173EEE8(255, &qword_25714DB38, (uint64_t (*)(uint64_t))sub_241778850, sub_241778A2C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    v31 = v30;
    v32 = sub_241778A48();
    v40 = v31;
    *(_QWORD *)&v41 = v32;
    swift_getOpaqueTypeConformance2();
    sub_2418A8D24();
    return sub_24172588C((uint64_t)v22, (uint64_t (*)(_QWORD))sub_241778AB0);
  }
  else
  {
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v34(v12, v4, v8);
    v34(v17, (uint64_t)v12, v8);
    swift_storeEnumTagMultiPayload();
    sub_241778AD4();
    sub_24173EEE8(255, &qword_25714DB38, (uint64_t (*)(uint64_t))sub_241778850, sub_241778A2C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    v36 = v35;
    v37 = sub_241778A48();
    v40 = v36;
    *(_QWORD *)&v41 = v37;
    swift_getOpaqueTypeConformance2();
    sub_2418A8D24();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
}

void sub_2417780FC(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_25714DA80, (uint64_t (*)(uint64_t))sub_241778120, sub_241778198, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEBE30]);
}

void sub_241778120(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714DA88, (uint64_t (*)(uint64_t))sub_24177813C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_24177813C(uint64_t a1)
{
  sub_2417788B4(a1, &qword_25714DA90, (uint64_t (*)(uint64_t))type metadata accessor for LabelsSelectionPhaseContent, &qword_25714DA98, sub_24177817C);
}

uint64_t sub_241778160()
{
  return sub_24172159C(&qword_25714CB30, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
}

uint64_t sub_24177817C()
{
  return sub_24172159C(&qword_25714DAA0, (uint64_t (*)(uint64_t))type metadata accessor for LabelsSelectionPhaseContent, (uint64_t)&unk_2418D5EF0);
}

uint64_t sub_241778198()
{
  return sub_24172159C(&qword_25714DAA8, (uint64_t (*)(uint64_t))sub_241778120, MEMORY[0x24BDF5428]);
}

void sub_2417781B4(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_25714DAB0, (uint64_t (*)(uint64_t))sub_2417780FC, sub_2417781D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
}

uint64_t sub_2417781D8()
{
  return sub_24172159C(&qword_25714DAB8, (uint64_t (*)(uint64_t))sub_2417780FC, MEMORY[0x24BDEBE40]);
}

void sub_2417781F4(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714DAC0, (uint64_t (*)(uint64_t))sub_241778218, (uint64_t (*)(uint64_t))sub_2417781B4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_241778218(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714DAC8, (uint64_t (*)(uint64_t))sub_2417781B4, (uint64_t (*)(uint64_t))sub_24177823C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_24177823C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DAD0)
  {
    sub_241778294();
    v0 = sub_2418A8DE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DAD0);
  }
}

unint64_t sub_241778294()
{
  unint64_t result;

  result = qword_25714DAD8;
  if (!qword_25714DAD8)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEC7C0], MEMORY[0x24BDEC7D0]);
    atomic_store(result, (unint64_t *)&qword_25714DAD8);
  }
  return result;
}

void sub_2417782D8(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714DAE0, (uint64_t (*)(uint64_t))sub_2417781F4, (uint64_t (*)(uint64_t))sub_2417782FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_2417782FC(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_25714DAE8, (uint64_t (*)(uint64_t))sub_241778320, (uint64_t (*)(void))sub_24177837C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF358]);
}

void sub_241778320()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DAF0)
  {
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DAF0);
  }
}

unint64_t sub_24177837C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714DAF8;
  if (!qword_25714DAF8)
  {
    sub_241778320();
    v2 = v1;
    v3[0] = sub_241778294();
    v3[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714DAF8);
  }
  return result;
}

void sub_2417783F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DB00)
  {
    sub_241778120(255);
    sub_241778460();
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DB00);
  }
}

unint64_t sub_241778460()
{
  unint64_t result;

  result = qword_25714DB08;
  if (!qword_25714DB08)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEDC40], MEMORY[0x24BDEDC50]);
    atomic_store(result, (unint64_t *)&qword_25714DB08);
  }
  return result;
}

uint64_t sub_2417784A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2417784C8(a1, &qword_25714DB58, (uint64_t (*)(uint64_t))type metadata accessor for DomainsSelectionPhaseContent, sub_2417789F4, (uint64_t (*)(_QWORD))sub_241778890, a2);
}

uint64_t sub_2417784C8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);

  v41 = a6;
  v42 = a5;
  sub_24174184C();
  v39[1] = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[0] = a4;
  sub_241778940(0, a2, a3, a4);
  v15 = v14;
  v40 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)v39 - v21;
  v23 = a3(0);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v27 = (char *)v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)v39 - v29;
  v39[2] = a1;
  sub_2417289A8(a1, (uint64_t)v39 - v29, a3);
  v31 = *MEMORY[0x24BDECEC0];
  v32 = sub_2418A87B4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v13, v31, v32);
  sub_24172159C(&qword_25714CBB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF78]);
  result = sub_2418A9DA4();
  if ((result & 1) != 0)
  {
    ((void (*)(void))v39[0])();
    sub_24172159C((unint64_t *)&qword_25714CB40, (uint64_t (*)(uint64_t))sub_24174184C, MEMORY[0x24BEE30C8]);
    sub_2418A9390();
    sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))sub_24174184C);
    v34 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v22, v19, v15);
    sub_2417289A8((uint64_t)v30, (uint64_t)v27, a3);
    v35 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v35(v19, v22, v15);
    v36 = v41;
    sub_2417289A8((uint64_t)v27, v41, a3);
    v37 = v42(0);
    v35((char *)(v36 + *(int *)(v37 + 48)), v19, v15);
    v38 = *(void (**)(char *, uint64_t))(v34 + 8);
    v38(v22, v15);
    sub_24172588C((uint64_t)v30, a3);
    v38(v19, v15);
    return sub_24172588C((uint64_t)v27, a3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241778784()
{
  return sub_24172159C(&qword_25714DB20, (uint64_t (*)(uint64_t))sub_2417781B4, (uint64_t)&unk_2418D2338);
}

uint64_t sub_2417787A0()
{
  return sub_24172159C(&qword_25714DB28, (uint64_t (*)(uint64_t))sub_24177823C, MEMORY[0x24BDEF828]);
}

void sub_2417787BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714DB30)
  {
    sub_24173EEE8(255, &qword_25714DB38, (uint64_t (*)(uint64_t))sub_241778850, sub_241778A2C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    v5[0] = v2;
    v5[1] = sub_241778A48();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF31D0], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714DB30);
  }
}

void sub_241778850(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_25714DB40, (uint64_t (*)(uint64_t))sub_241778874, sub_241778A10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEBE30]);
}

void sub_241778874(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714DB48, (uint64_t (*)(uint64_t))sub_241778890, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241778890(uint64_t a1)
{
  sub_2417788B4(a1, &qword_25714DB50, (uint64_t (*)(uint64_t))type metadata accessor for DomainsSelectionPhaseContent, &qword_25714DB58, sub_2417789F4);
}

void sub_2417788B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(void))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_241778940(255, a4, a3, a5);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v10)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_241778940(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!*a2)
  {
    v7 = a3(255);
    sub_24174184C();
    v11[0] = v7;
    v11[1] = v8;
    v11[2] = a4();
    v11[3] = sub_24172159C((unint64_t *)&qword_25714CB40, (uint64_t (*)(uint64_t))sub_24174184C, MEMORY[0x24BEE30C8]);
    v9 = MEMORY[0x24269D434](a1, v11, MEMORY[0x24BDF2800], 0);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2417789F4()
{
  return sub_24172159C(&qword_25714DB60, (uint64_t (*)(uint64_t))type metadata accessor for DomainsSelectionPhaseContent, (uint64_t)&unk_2418D3D08);
}

uint64_t sub_241778A10()
{
  return sub_24172159C(&qword_25714DB68, (uint64_t (*)(uint64_t))sub_241778874, MEMORY[0x24BDF5428]);
}

uint64_t sub_241778A2C()
{
  return sub_24172159C(&qword_25714DB70, (uint64_t (*)(uint64_t))sub_241778850, MEMORY[0x24BDEBE40]);
}

unint64_t sub_241778A48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714DB78;
  if (!qword_25714DB78)
  {
    sub_24173EEE8(255, &qword_25714DB38, (uint64_t (*)(uint64_t))sub_241778850, sub_241778A2C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    result = MEMORY[0x24269D47C](&unk_2418D2338, v1);
    atomic_store(result, (unint64_t *)&qword_25714DB78);
  }
  return result;
}

void sub_241778AB0(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714DB88, (uint64_t (*)(uint64_t))sub_2417787BC, (uint64_t (*)(uint64_t))sub_24177823C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

unint64_t sub_241778AD4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_25714DB90;
  if (!qword_25714DB90)
  {
    sub_241778AB0(255);
    v2 = v1;
    sub_24173EEE8(255, &qword_25714DB38, (uint64_t (*)(uint64_t))sub_241778850, sub_241778A2C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    v4[2] = v3;
    v4[3] = sub_241778A48();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_2417787A0();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_25714DB90);
  }
  return result;
}

uint64_t sub_241778B80()
{
  return sub_241728434(&qword_25714DB98, (uint64_t (*)(uint64_t))sub_2417782D8, (uint64_t (*)(void))sub_241778BB4, sub_241778C3C);
}

unint64_t sub_241778BB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714DBA0;
  if (!qword_25714DBA0)
  {
    sub_2417781F4(255);
    v2 = v1;
    v3[0] = sub_241728434(&qword_25714DB18, (uint64_t (*)(uint64_t))sub_241778218, sub_241778784, sub_2417787A0);
    v3[1] = sub_241778784();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714DBA0);
  }
  return result;
}

uint64_t sub_241778C3C()
{
  return sub_24172159C(&qword_25714DBA8, (uint64_t (*)(uint64_t))sub_2417782FC, MEMORY[0x24BDEF370]);
}

uint64_t sub_241778C58(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;

  v2 = sub_241778CFC(a1, a2);
  v3 = 0x4075400000000000;
  if ((v2 & 1) == 0)
    return 0;
  return v3;
}

uint64_t sub_241778C88(uint64_t a1, uint64_t a2)
{
  if ((sub_241778CFC(a1, a2) & 1) != 0)
    return 0;
  else
    return 0x7FF0000000000000;
}

double sub_241778CA8(uint64_t a1, uint64_t a2)
{
  char v4;
  double result;
  char v6;

  v4 = sub_241778CFC(a1, a2);
  result = 0.0;
  if ((v4 & 1) != 0)
  {
    v6 = sub_241778FD8(a1, a2);
    result = 56.0;
    if ((v6 & 1) != 0)
      return 14.0;
  }
  return result;
}

uint64_t sub_241778CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  void (*v27)();
  char v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  char *v33;

  v4 = sub_2418A8EB0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v33 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241779078();
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417790D8();
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)&v32 - v20;
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v32 - v23;
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v21, *MEMORY[0x24BDEFEF0], v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v21, 0, 1, v4);
  v25 = (uint64_t)&v12[*(int *)(v9 + 48)];
  sub_24177912C((uint64_t)v24, (uint64_t)v12);
  sub_24177912C((uint64_t)v21, v25);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v12, 1, v4) == 1)
  {
    v27 = sub_2417790D8;
    sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2417790D8);
    sub_24172588C((uint64_t)v24, (uint64_t (*)(_QWORD))sub_2417790D8);
    if (v26(v25, 1, v4) == 1)
    {
      v28 = -1;
    }
    else
    {
      v27 = sub_241779078;
      v28 = 0;
    }
  }
  else
  {
    sub_24177912C((uint64_t)v12, (uint64_t)v17);
    if (v26(v25, 1, v4) == 1)
    {
      sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2417790D8);
      sub_24172588C((uint64_t)v24, (uint64_t (*)(_QWORD))sub_2417790D8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
      v28 = 0;
      v27 = sub_241779078;
    }
    else
    {
      v29 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v25, v4);
      sub_241779170();
      v28 = sub_2418A9DA4();
      v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v29, v4);
      v27 = sub_2417790D8;
      sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2417790D8);
      sub_24172588C((uint64_t)v24, (uint64_t (*)(_QWORD))sub_2417790D8);
      v30(v17, v4);
    }
  }
  sub_24172588C((uint64_t)v12, (uint64_t (*)(_QWORD))v27);
  return v28 & 1;
}

uint64_t sub_241778FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v4 = sub_2418A87B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  LOBYTE(a2) = sub_2418A879C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return a2 & 1;
}

void sub_241779078()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714DBB0)
  {
    sub_2417790D8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714DBB0);
  }
}

void sub_2417790D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714BFF0)
  {
    sub_2418A8EB0();
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714BFF0);
  }
}

uint64_t sub_24177912C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417790D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_241779170()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714DBB8[0];
  if (!qword_25714DBB8[0])
  {
    v1 = sub_2418A8EB0();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEFF08], v1);
    atomic_store(result, qword_25714DBB8);
  }
  return result;
}

void sub_2417791B8(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;

  if ((sub_241778FD8(a1, a2) & 1) != 0)
  {
    v2 = (id)MobileGestalt_get_current_device();
    if (v2)
    {
      v3 = v2;
      MobileGestalt_get_homeButtonType();

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_241779218()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_241779220()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2417792D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64) + 7;
  if ((v9 | v6) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || ((v10 + ((v7 + v9 + ((v6 + 40) & ~v6)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + (((v9 | v6) & 0xF8 ^ 0x1F8) & ((v9 | v6) + 16)));
  }
  else
  {
    v29 = *(_QWORD *)(a3 + 24);
    v14 = ~v6;
    v28 = ~v9;
    *a1 = *a2;
    v15 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
    v16 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
    v17 = *(_QWORD *)v16;
    *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
    *(_QWORD *)v15 = v17;
    v18 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
    v19 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v19 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
    }
    else
    {
      v20 = *(_QWORD *)(v19 + 8);
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *(_QWORD *)(v18 + 8) = v20;
      swift_retain();
      v14 = ~v6;
    }
    v21 = v19 + v6;
    v22 = (v18 + v6 + 16) & v14;
    v23 = (v21 + 16) & v14;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v22, v23, v4);
    v24 = (v22 + v7 + v9) & v28;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v24, (v23 + v7 + v9) & v28, v29);
    v25 = (v10 + v24) & 0xFFFFFFFFFFFFFFF8;
    v26 = (v10 + ((v23 + v7 + v9) & v28)) & 0xFFFFFFFFFFFFFFF8;
    *(_BYTE *)v25 = *(_BYTE *)v26;
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  }
  swift_retain();
  return v3;
}

uint64_t sub_241779488(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (_QWORD *)((a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  if (*v3 >= 0xFFFFFFFFuLL)
    swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = ((unint64_t)v3 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((v5
                                                                                            + *(_QWORD *)(v4 + 64)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  return swift_release();
}

_QWORD *sub_24177952C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  *a1 = *a2;
  v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)v6;
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(v6 + 8);
  *(_QWORD *)v5 = v7;
  v8 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v9 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v10 = *(_QWORD *)(v9 + 8);
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    swift_retain();
  }
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 + v12 + 16) & ~v12;
  v14 = (v9 + v12 + 16) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64) + 7;
  v22 = (v21 + v19) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v21 + v20) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  swift_retain();
  return a1;
}

_QWORD *sub_241779650(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  *a1 = *a2;
  v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)v6;
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(v6 + 8);
  *(_QWORD *)v5 = v7;
  v8 = (_QWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  v9 = (unint64_t *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  if (*v8 < 0xFFFFFFFFuLL)
  {
    if (v10 >= 0xFFFFFFFF)
    {
      v12 = v9[1];
      *v8 = v10;
      v8[1] = v12;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  if (v10 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v11 = v9[1];
  *v8 = v10;
  v8[1] = v11;
  swift_retain();
  swift_release();
LABEL_8:
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = ((unint64_t)v8 + v14 + 16) & ~v14;
  v16 = ((unint64_t)v9 + v14 + 16) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v15, v16);
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = *(_QWORD *)(v13 + 64) + v18;
  v20 = (v19 + v15) & ~v18;
  v21 = (v19 + v16) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v20, v21);
  v22 = *(_QWORD *)(v17 + 64) + 7;
  v23 = (v22 + v20) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v22 + v21) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_2417797C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)v6;
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(v6 + 8);
  *(_QWORD *)v5 = v7;
  v8 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v9 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v10 = *(_QWORD *)(v9 + 8);
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 + v12 + 16) & ~v12;
  v14 = (v9 + v12 + 16) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v19, v20);
  *(_OWORD *)((*(_QWORD *)(v16 + 64) + 7 + v19) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v16 + 64) + 7 + v20) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_2417798D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;

  *a1 = *a2;
  v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)v6;
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(v6 + 8);
  *(_QWORD *)v5 = v7;
  v8 = (_QWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  v9 = (unint64_t *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  if (*v8 < 0xFFFFFFFFuLL)
  {
    if (v10 >= 0xFFFFFFFF)
    {
      v12 = v9[1];
      *v8 = v10;
      v8[1] = v12;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  if (v10 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v11 = v9[1];
  *v8 = v10;
  v8[1] = v11;
  swift_release();
LABEL_8:
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = ((unint64_t)v8 + v14 + 16) & ~v14;
  v16 = ((unint64_t)v9 + v14 + 16) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v15, v16);
  v17 = *(_QWORD *)(v13 + 64);
  v18 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v17 + v19;
  v21 = (v20 + v15) & ~v19;
  v22 = (v20 + v16) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v18 + 40))(v21, v22);
  v23 = *(_QWORD *)(v18 + 64) + 7;
  v24 = (v23 + v21) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v23 + v22) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  swift_release();
  return a1;
}

uint64_t sub_241779A30(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (v4 <= *(_DWORD *)(v5 + 84))
    v6 = *(_DWORD *)(v5 + 84);
  else
    v6 = *(_DWORD *)(v3 + 84);
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = v6;
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = *(_QWORD *)(v3 + 64);
  v10 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    v15 = (uint64_t *)((a1 + 31) & 0xFFFFFFFFFFFFFFF8);
    if (v6 > 0x7FFFFFFE)
    {
      v17 = ((unint64_t)v15 + v8 + 16) & ~v8;
      if (v4 == v7)
        return (*(uint64_t (**)(uint64_t, _QWORD))(v3 + 48))(v17, *(unsigned int *)(v3 + 84));
      else
        return (*(uint64_t (**)(uint64_t))(v5 + 48))((v17 + v9 + v10) & ~v10);
    }
    else
    {
      v16 = *v15;
      if ((unint64_t)*v15 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      if ((v16 + 1) >= 2)
        return v16;
      else
        return 0;
    }
  }
  else
  {
    if (((((*(_QWORD *)(v5 + 64) + ((v9 + v10 + ((v8 + 40) & ~v8)) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v7 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_241779AE8 + 4 * byte_2418D36D0[v13]))();
  }
}

void sub_241779BB0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  if (v8 >= a3)
  {
    v11 = 0;
    if (a2 <= v8)
      goto LABEL_20;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64)
         + ((*(_DWORD *)(v5 + 64)
           + *(unsigned __int8 *)(v6 + 80)
           + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v8)
LABEL_20:
      __asm { BR              X6 }
  }
  if (((*(_DWORD *)(v6 + 64)
       + ((*(_DWORD *)(v5 + 64)
         + *(unsigned __int8 *)(v6 + 80)
         + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v8 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64)+ ((*(_QWORD *)(v5 + 64)+ *(unsigned __int8 *)(v6 + 80)+ ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_241779CE8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x241779D6CLL);
}

void sub_241779CF0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x241779CF8);
  JUMPOUT(0x241779D6CLL);
}

void sub_241779D40()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x241779D6CLL);
}

void sub_241779D48()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x241779D6CLL);
}

void sub_241779D50(uint64_t a1, unsigned int a2)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (a2)
  {
    if (v4 > 0x7FFFFFFE)
    {
      if (v2 == v3)
        JUMPOUT(0x241779D94);
      JUMPOUT(0x241779D80);
    }
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x241779D5CLL);
    *(_QWORD *)((v5 + 31) & 0xFFFFFFFFFFFFFFF8) = a2;
  }
  JUMPOUT(0x241779D6CLL);
}

void type metadata accessor for UnlimitedHeightVStackWithFooter()
{
  JUMPOUT(0x24269D3E0);
}

uint64_t sub_241779DB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241779DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[10];

  v19[0] = a6;
  v19[1] = a7;
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2418A85A4();
  MEMORY[0x24BDAC7A8](v16, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v7, a3);
  sub_2418A85B0();
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = a5;
  v19[7] = v19[0];
  v19[8] = a1;
  v19[9] = a2;
  MEMORY[0x24269D47C](MEMORY[0x24BDEB998], v16);
  return sub_2418A86F4();
}

uint64_t sub_241779F1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96[8];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD v104[2];
  _QWORD v105[2];
  _QWORD v106[2];
  _QWORD v107[2];
  _QWORD v108[2];
  _QWORD v109[3];

  v90 = a3;
  v88 = *(a1 - 1);
  v89 = *(_QWORD *)(v88 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v87 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177AE40(255, &qword_25714DC40, (uint64_t (*)(void))sub_24177ADFC, (uint64_t)&_s21UnlimitedHeightVStackVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB978]);
  v77 = a1[2];
  v73 = sub_2418A87FC();
  sub_24177AE40(255, (unint64_t *)&qword_25714DC50, (uint64_t (*)(void))sub_24173EB88, MEMORY[0x24BEE50B0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF03F0]);
  v72 = sub_2418A87FC();
  sub_24177AE9C(&qword_25714DC58, MEMORY[0x24BDEB998]);
  v5 = sub_2418A86E8();
  v84 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v80 = (uint64_t)v62 - v7;
  v64 = v5;
  v8 = sub_2418A87FC();
  v83 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v81 = (char *)v62 - v10;
  sub_24177AE40(255, &qword_25714DC60, (uint64_t (*)(void))sub_241750C68, MEMORY[0x24BDF52F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB938]);
  v65 = v8;
  v11 = sub_2418A87FC();
  v82 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v76 = (char *)v62 - v13;
  v68 = a1[3];
  v14 = sub_2418AA1E8();
  v15 = a1[5];
  v16 = a1;
  v75 = a1;
  v109[2] = v15;
  v79 = v14;
  v78 = MEMORY[0x24269D47C](MEMORY[0x24BDF5578]);
  v17 = sub_2418A88EC();
  v66 = v11;
  v18 = sub_2418A87FC();
  v85 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v19);
  v74 = (char *)v62 - v20;
  v21 = sub_24177AE9C(&qword_25714DC68, MEMORY[0x24BDEB9A8]);
  v109[0] = v16[4];
  v22 = v109[0];
  v109[1] = MEMORY[0x24BDEDBB8];
  v23 = MEMORY[0x24BDED308];
  v24 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v73, v109);
  v25 = sub_24177AEFC();
  v108[0] = v24;
  v108[1] = v25;
  v26 = MEMORY[0x24269D47C](v23, v72, v108);
  v107[0] = v21;
  v107[1] = v26;
  v63 = MEMORY[0x24269D47C](MEMORY[0x24BDEC550], v5, v107);
  v106[0] = v63;
  v106[1] = MEMORY[0x24BDEBEE0];
  v27 = MEMORY[0x24269D47C](v23, v8, v106);
  v62[1] = v27;
  v28 = sub_24177AF64();
  v105[0] = v27;
  v105[1] = v28;
  v29 = MEMORY[0x24269D47C](v23, v11, v105);
  v30 = MEMORY[0x24269D47C](MEMORY[0x24BDEDC10], v17);
  v104[0] = v29;
  v104[1] = v30;
  v71 = v18;
  v70 = MEMORY[0x24269D47C](v23, v18, v104);
  v102 = v18;
  v103 = v70;
  v72 = MEMORY[0x24269D434](0, &v102, MEMORY[0x24BDF2550], 0);
  v73 = *(_QWORD *)(v72 - 8);
  v32 = MEMORY[0x24BDAC7A8](v72, v31);
  v67 = (char *)v62 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32, v34);
  v69 = (uint64_t)v62 - v35;
  v36 = (_QWORD *)swift_allocObject();
  v37 = v77;
  v38 = v68;
  v36[2] = v77;
  v36[3] = v38;
  v36[4] = v22;
  v36[5] = v15;
  v39 = v15;
  v97 = v37;
  v98 = v38;
  v99 = v22;
  v100 = v15;
  v40 = v86;
  v101 = v86;
  v41 = v80;
  sub_24177A6B8((uint64_t)sub_24177AFCC, (uint64_t)v96, v22, v80);
  swift_release();
  sub_2418A9960();
  v42 = v81;
  v43 = v64;
  sub_2418A94BC();
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v41, v43);
  v44 = v76;
  v45 = v65;
  sub_2418A94EC();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v42, v45);
  sub_2418A9954();
  v91 = v37;
  v92 = v38;
  v93 = v22;
  v94 = v39;
  v95 = v40;
  v46 = v74;
  v47 = v66;
  sub_2418A9504();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v44, v47);
  v48 = v88;
  v49 = v87;
  v50 = v75;
  (*(void (**)(char *, uint64_t, _QWORD *))(v88 + 16))(v87, v40, v75);
  v51 = v48;
  v52 = (*(unsigned __int8 *)(v48 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v53 = (char *)swift_allocObject();
  *((_QWORD *)v53 + 2) = v37;
  *((_QWORD *)v53 + 3) = v38;
  *((_QWORD *)v53 + 4) = v22;
  *((_QWORD *)v53 + 5) = v39;
  (*(void (**)(char *, char *, _QWORD *))(v51 + 32))(&v53[v52], v49, v50);
  v54 = (uint64_t)v67;
  v55 = v71;
  v56 = v70;
  sub_2418A9354();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v46, v55);
  v102 = v55;
  v103 = v56;
  swift_getOpaqueTypeConformance2();
  v57 = v69;
  v58 = v54;
  v59 = v72;
  sub_2417DA924(v54, v72, v69);
  v60 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
  v60(v58, v59);
  sub_2417D8FF8(v57, v59, v90);
  return ((uint64_t (*)(uint64_t, uint64_t))v60)(v57, v59);
}

uint64_t sub_24177A6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  _QWORD v15[2];

  v8 = sub_2418A87FC();
  sub_24177AE40(255, (unint64_t *)&qword_25714DC50, (uint64_t (*)(void))sub_24173EB88, MEMORY[0x24BEE50B0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF03F0]);
  v9 = sub_2418A87FC();
  v10 = sub_24177ADFC();
  v15[0] = a3;
  v15[1] = MEMORY[0x24BDEDBB8];
  v11 = MEMORY[0x24BDED308];
  v14[0] = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v8, v15);
  v14[1] = sub_24177AEFC();
  v12 = MEMORY[0x24269D47C](v11, v9, v14);
  return sub_241779DEC(a1, a2, (uint64_t)&_s21UnlimitedHeightVStackVN, v9, v10, v12, a4);
}

void sub_24177A7C4()
{
  type metadata accessor for UnlimitedHeightVStackWithFooter();
}

uint64_t sub_24177A80C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  _BYTE v35[32];

  v7 = *(_QWORD *)(a1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v5 - 216) = v7;
  *(_QWORD *)(v5 - 208) = v8;
  MEMORY[0x24BDAC7A8](a1, a2);
  *(_QWORD *)(v5 - 224) = &v35[-v9];
  v10 = sub_2418A87FC();
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  *(_QWORD *)(v5 - 240) = &v35[-v12];
  sub_24177AE40(255, (unint64_t *)&qword_25714DC50, (uint64_t (*)(void))sub_24173EB88, MEMORY[0x24BEE50B0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF03F0]);
  v13 = sub_2418A87FC();
  *(_QWORD *)(v5 - 176) = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  *(_QWORD *)(v5 - 232) = &v35[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15, v17);
  *(_QWORD *)(v5 - 200) = &v35[-v18];
  sub_2418A9960();
  sub_2418A94C8();
  v19 = *(_QWORD *)(v5 - 224);
  v20 = *(_QWORD *)(v5 - 216);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v3, a1);
  v21 = v20;
  v22 = (*(unsigned __int8 *)(v20 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v23 = (char *)swift_allocObject();
  v24 = *(_QWORD *)(v5 - 192);
  *((_QWORD *)v23 + 2) = v2;
  *((_QWORD *)v23 + 3) = v24;
  v25 = *(_QWORD *)(v5 - 184);
  *((_QWORD *)v23 + 4) = v4;
  *((_QWORD *)v23 + 5) = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(&v23[v22], v19, a1);
  v26 = MEMORY[0x24BDEDBB8];
  *(_QWORD *)(v5 - 136) = v4;
  *(_QWORD *)(v5 - 128) = v26;
  v27 = MEMORY[0x24BDED308];
  v28 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v10, v5 - 136);
  sub_24173EB88();
  v29 = *(_QWORD *)(v5 - 240);
  v30 = *(_QWORD *)(v5 - 232);
  sub_2418A93C0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 168) + 8))(v29, v10);
  v31 = sub_24177AEFC();
  *(_QWORD *)(v5 - 152) = v28;
  *(_QWORD *)(v5 - 144) = v31;
  MEMORY[0x24269D47C](v27, v13, v5 - 152);
  v32 = *(_QWORD *)(v5 - 200);
  sub_2417DA924(v30, v13, v32);
  v33 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 176) + 8);
  v33(v30, v13);
  sub_2417D8FF8(v32, v13, *(_QWORD *)(v5 - 160));
  return ((uint64_t (*)(uint64_t, uint64_t))v33)(v32, v13);
}

uint64_t sub_24177AAE8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2418A8670();
  *a1 = v3;
  return result;
}

void sub_24177AB10()
{
  type metadata accessor for UnlimitedHeightVStackWithFooter();
}

uint64_t sub_24177AB48()
{
  sub_241752F50();
  return sub_2418A96D8();
}

void sub_24177AB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1, a2);
  v2 = sub_2418AA1E8();
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  MEMORY[0x24BDAC7A8](v4, v5);
  type metadata accessor for UnlimitedHeightVStackWithFooter();
}

uint64_t sub_24177AC60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  v11 = (char *)(v8 + *(int *)(a1 + 68));
  v12 = *v11;
  v13 = *((_QWORD *)v11 + 1);
  *(_BYTE *)(v9 - 112) = v12;
  *(_QWORD *)(v9 - 104) = v13;
  sub_241752F50();
  sub_2418A96CC();
  if (*(_BYTE *)(v9 - 113) == 1)
  {
    sub_2417DA924(v8 + *(int *)(a1 + 64), v4, v7);
    sub_2417D8FF8(v7, v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v7, v4);
    v14 = 0;
  }
  else
  {
    v14 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, v14, 1, v4);
  sub_2417D9010(v6, v5);
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 144) + 8);
  v15(v6, v3);
  *(_QWORD *)(v9 - 128) = v2;
  MEMORY[0x24269D47C](MEMORY[0x24BDF5578], v3, v9 - 128);
  sub_2417D8FF8(v5, v3, *(_QWORD *)(v9 - 136));
  return ((uint64_t (*)(uint64_t, uint64_t))v15)(v5, v3);
}

void sub_24177AD78()
{
  type metadata accessor for UnlimitedHeightVStackWithFooter();
}

uint64_t sub_24177ADA0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t (*v2)(uint64_t);
  char v3;

  sub_241752F50();
  result = sub_2418A96CC();
  if (v3 == 1)
  {
    v2 = *(uint64_t (**)(uint64_t))(v0 + 24);
    if (v2)
      return v2(result);
  }
  return result;
}

unint64_t sub_24177ADFC()
{
  unint64_t result;

  result = qword_25714DC48;
  if (!qword_25714DC48)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4E08, &_s21UnlimitedHeightVStackVN);
    atomic_store(result, (unint64_t *)&qword_25714DC48);
  }
  return result;
}

void sub_24177AE40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_24177AE9C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_24177AE40(255, &qword_25714DC40, (uint64_t (*)(void))sub_24177ADFC, (uint64_t)&_s21UnlimitedHeightVStackVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB978]);
    result = MEMORY[0x24269D47C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24177AEFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714DC70;
  if (!qword_25714DC70)
  {
    sub_24177AE40(255, (unint64_t *)&qword_25714DC50, (uint64_t (*)(void))sub_24173EB88, MEMORY[0x24BEE50B0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF03F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF0400], v1);
    atomic_store(result, (unint64_t *)&qword_25714DC70);
  }
  return result;
}

unint64_t sub_24177AF64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714DC78;
  if (!qword_25714DC78)
  {
    sub_24177AE40(255, &qword_25714DC60, (uint64_t (*)(void))sub_241750C68, MEMORY[0x24BDF52F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB938]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEB950], v1);
    atomic_store(result, (unint64_t *)&qword_25714DC78);
  }
  return result;
}

uint64_t sub_24177AFCC()
{
  return sub_24177AFE4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24177A7C4);
}

uint64_t sub_24177AFD8()
{
  return sub_24177AFE4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24177AB8C);
}

uint64_t sub_24177AFE4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

void sub_24177AFFC()
{
  type metadata accessor for UnlimitedHeightVStackWithFooter();
}

void sub_24177B030()
{
  sub_24177AD78();
}

void objectdestroyTm_4()
{
  type metadata accessor for UnlimitedHeightVStackWithFooter();
}

uint64_t sub_24177B0B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v5 = v2 + ((v4 + 48) & ~v4);
  if (*(_QWORD *)(v5 + 24))
    swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5 + *(int *)(a1 + 60), v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5 + *(int *)(a1 + 64));
  swift_release();
  return swift_deallocObject();
}

void sub_24177B158()
{
  type metadata accessor for UnlimitedHeightVStackWithFooter();
}

void sub_24177B190()
{
  sub_24177AB10();
}

uint64_t sub_24177B1D0()
{
  return swift_deallocObject();
}

uint64_t sub_24177B1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v6 = *(_QWORD *)(a3 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1, a2);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void (*)(void))MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)&v16 - v12;
  v11();
  sub_2417DA924((uint64_t)v9, a3, (uint64_t)v13);
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, a3);
  sub_2417D8FF8((uint64_t)v13, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v14)(v13, a3);
}

uint64_t sub_24177B2B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24177B1E0(v1[6], v1[7], v1[3], a1);
}

uint64_t sub_24177B2C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  v1 = *(_QWORD *)(a1 + 24);
  sub_24177AE40(255, &qword_25714DC40, (uint64_t (*)(void))sub_24177ADFC, (uint64_t)&_s21UnlimitedHeightVStackVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB978]);
  v3 = sub_2418A87FC();
  sub_24177AE40(255, (unint64_t *)&qword_25714DC50, (uint64_t (*)(void))sub_24173EB88, MEMORY[0x24BEE50B0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF03F0]);
  v4 = sub_2418A87FC();
  sub_24177AE9C(&qword_25714DC58, MEMORY[0x24BDEB998]);
  v5 = sub_2418A86E8();
  v6 = sub_2418A87FC();
  sub_24177AE40(255, &qword_25714DC60, (uint64_t (*)(void))sub_241750C68, MEMORY[0x24BDF52F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEB938]);
  v7 = sub_2418A87FC();
  v8 = sub_2418AA1E8();
  v20 = v1;
  MEMORY[0x24269D47C](MEMORY[0x24BDF5578], v8, &v20);
  v9 = sub_2418A88EC();
  v10 = sub_2418A87FC();
  v11 = sub_24177AE9C(&qword_25714DC68, MEMORY[0x24BDEB9A8]);
  v19[0] = v2;
  v19[1] = MEMORY[0x24BDEDBB8];
  v12 = MEMORY[0x24BDED308];
  v18[0] = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v19);
  v18[1] = sub_24177AEFC();
  v17[0] = v11;
  v17[1] = MEMORY[0x24269D47C](v12, v4, v18);
  v16[0] = MEMORY[0x24269D47C](MEMORY[0x24BDEC550], v5, v17);
  v16[1] = MEMORY[0x24BDEBEE0];
  v15[0] = MEMORY[0x24269D47C](v12, v6, v16);
  v15[1] = sub_24177AF64();
  v14[0] = MEMORY[0x24269D47C](v12, v7, v15);
  v14[1] = MEMORY[0x24269D47C](MEMORY[0x24BDEDC10], v9);
  MEMORY[0x24269D47C](v12, v10, v14);
  return swift_getOpaqueTypeConformance2();
}

_QWORD *sub_24177B548(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    v7 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = v7;
    v8 = *(int *)(a3 + 24);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_24177B774(0);
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v15 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = *(int *)(a3 + 28);
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    sub_241725C90(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

void sub_24177B774(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
}

uint64_t sub_24177B790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  sub_24177B774(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = a1 + *(int *)(a2 + 28);
  sub_241725C90(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v10 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t sub_24177B8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  sub_24177B774(0);
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v17 = *(int *)(a3 + 28);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  sub_241725C90(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_24177BAB0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_24172588C((uint64_t)a1 + v7, (uint64_t (*)(_QWORD))sub_24177B774);
    sub_24177B774(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = *(int *)(a3 + 28);
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    sub_24172588C((uint64_t)a1 + v17, (uint64_t (*)(_QWORD))sub_241725C90);
    sub_241725C90(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_24177BCD0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  sub_24177B774(0);
  v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A8EB0();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
    v15 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v19 = *(int *)(a3 + 28);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  sub_241725C90(0);
  v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24177BEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    sub_24172588C(a1 + v7, (uint64_t (*)(_QWORD))sub_24177B774);
    sub_24177B774(0);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      v15 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v19 = *(int *)(a3 + 28);
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    sub_24172588C(a1 + v19, (uint64_t (*)(_QWORD))sub_241725C90);
    sub_241725C90(0);
    v23 = v22;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v20, v21, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24177C0B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24177C0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_24177C18C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24177C198(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for NotificationsSetupPhase_iOS()
{
  uint64_t result;

  result = qword_25714DCE0;
  if (!qword_25714DCE0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24177C2A0()
{
  unint64_t v0;
  unint64_t v1;

  sub_24177B774(319);
  if (v0 <= 0x3F)
  {
    sub_241725C90(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_24177C33C()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_24177C34C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;
  id result;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v61 = a2;
  sub_24177D40C(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177D3F0(0);
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177D3D4(0);
  v13 = v12;
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177D3B8(0);
  v60 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2418A9960();
  sub_24185E324(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v6, 0.0, 1, 0.0, 1, v21, v22);
  v23 = sub_2418A90CC();
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_2417791B8(v24, v25);
  sub_2418A84A8();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_2417289A8((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_24177D40C);
  v34 = &v11[*(int *)(v8 + 36)];
  *v34 = v23;
  *((_QWORD *)v34 + 1) = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  v34[40] = 0;
  sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))sub_24177D40C);
  LOBYTE(v6) = sub_2418A90CC();
  v35 = a1[3];
  v36 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  sub_241778CA8(v35, v36);
  sub_2418A84A8();
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_2417289A8((uint64_t)v11, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_24177D3F0);
  v45 = &v16[*(int *)(v13 + 36)];
  *v45 = (char)v6;
  *((_QWORD *)v45 + 1) = v38;
  *((_QWORD *)v45 + 2) = v40;
  *((_QWORD *)v45 + 3) = v42;
  *((_QWORD *)v45 + 4) = v44;
  v45[40] = 0;
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))sub_24177D3F0);
  v46 = sub_2418A90F0();
  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v48 = result;
    MobileGestalt_get_homeButtonType();

    sub_2418A84A8();
    v50 = v49;
    v52 = v51;
    v54 = v53;
    v56 = v55;
    sub_2417289A8((uint64_t)v16, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_24177D3D4);
    v57 = &v20[*(int *)(v60 + 36)];
    *v57 = v46;
    *((_QWORD *)v57 + 1) = v50;
    *((_QWORD *)v57 + 2) = v52;
    *((_QWORD *)v57 + 3) = v54;
    *((_QWORD *)v57 + 4) = v56;
    v57[40] = 0;
    sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))sub_24177D3D4);
    v58 = sub_2418A9960();
    sub_24185E37C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v61, 0.0, 1, 0.0, 1, v58, v59);
    return (id)sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))sub_24177D3B8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_24177C6B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;
  id result;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v61 = a2;
  sub_24177DAEC();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177E198(0);
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177E1B4(0);
  v13 = v12;
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177E1D0(0);
  v60 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2418A9960();
  sub_24185E908(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v6, 0.0, 1, 0.0, 1, v21, v22);
  v23 = sub_2418A90CC();
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_2417791B8(v24, v25);
  sub_2418A84A8();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_2417289A8((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_24177DAEC);
  v34 = &v11[*(int *)(v8 + 36)];
  *v34 = v23;
  *((_QWORD *)v34 + 1) = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  v34[40] = 0;
  sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))sub_24177DAEC);
  LOBYTE(v6) = sub_2418A90CC();
  v35 = a1[3];
  v36 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  sub_241778CA8(v35, v36);
  sub_2418A84A8();
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_2417289A8((uint64_t)v11, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_24177E198);
  v45 = &v16[*(int *)(v13 + 36)];
  *v45 = (char)v6;
  *((_QWORD *)v45 + 1) = v38;
  *((_QWORD *)v45 + 2) = v40;
  *((_QWORD *)v45 + 3) = v42;
  *((_QWORD *)v45 + 4) = v44;
  v45[40] = 0;
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))sub_24177E198);
  v46 = sub_2418A90F0();
  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v48 = result;
    MobileGestalt_get_homeButtonType();

    sub_2418A84A8();
    v50 = v49;
    v52 = v51;
    v54 = v53;
    v56 = v55;
    sub_2417289A8((uint64_t)v16, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_24177E1B4);
    v57 = &v20[*(int *)(v60 + 36)];
    *v57 = v46;
    *((_QWORD *)v57 + 1) = v50;
    *((_QWORD *)v57 + 2) = v52;
    *((_QWORD *)v57 + 3) = v54;
    *((_QWORD *)v57 + 4) = v56;
    v57[40] = 0;
    sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))sub_24177E1B4);
    v58 = sub_2418A9960();
    sub_24185E960(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v61, 0.0, 1, 0.0, 1, v58, v59);
    return (id)sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))sub_24177E1D0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24177CA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t *v61;
  double *v62;
  uint64_t v63;
  double *v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v71[3];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t ButtonView;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  _UNKNOWN **v94;

  v73 = a1;
  v83 = a3;
  v4 = sub_2418A84E4();
  v81 = *(_QWORD *)(v4 - 8);
  v82 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v80 = (uint64_t)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonView = type metadata accessor for NotificationsNextButtonView(0);
  MEMORY[0x24BDAC7A8](ButtonView, v7);
  v9 = (char *)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173EEE8(0, &qword_25714DD20, v10, sub_24177D380, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryButtonTray);
  v77 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v75 = (uint64_t)v71 - v13;
  v14 = sub_2418A993C();
  v15 = *(_QWORD *)(v14 - 8);
  v87 = v14;
  v88 = v15;
  MEMORY[0x24BDAC7A8](v14, v16);
  v85 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for NotificationsSetupPhase_iOS();
  v18 = *(_QWORD *)(v89 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v21 = MEMORY[0x24BDAC7A8](v89, v20);
  v74 = (uint64_t)v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)v71 - v23;
  v25 = type metadata accessor for NotificationsSetupPhaseContent();
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (uint64_t *)((char *)v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24177D39C(0);
  MEMORY[0x24BDAC7A8](v29, v30);
  v86 = (uint64_t)v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (int *)sub_24177D428();
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)v71 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177D628(0);
  v79 = v36;
  MEMORY[0x24BDAC7A8](v36, v37);
  v76 = (uint64_t)v71 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = a2;
  sub_2417289A8(a2, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhase_iOS);
  v39 = *(unsigned __int8 *)(v18 + 80);
  v71[2] = ((v39 + 16) & ~v39) + v19;
  v40 = (v39 + 16) & ~v39;
  v72 = v40;
  v71[1] = v39 | 7;
  v41 = swift_allocObject();
  sub_241731B4C((uint64_t)v24, v41 + v40, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhase_iOS);
  v42 = (char *)v28 + *(int *)(v25 + 24);
  v43 = sub_2418A8688();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v42, v73, v43);
  type metadata accessor for StateOfMindEntryModel(0);
  sub_24172159C(&qword_25714C2D0, type metadata accessor for StateOfMindEntryModel, (uint64_t)&protocol conformance descriptor for StateOfMindEntryModel);
  swift_retain();
  *v28 = sub_2418A8760();
  v28[1] = v44;
  v28[2] = (uint64_t)sub_24177D7A0;
  v28[3] = v41;
  v45 = (uint64_t *)((char *)v28 + *(int *)(v25 + 28));
  *v45 = swift_getKeyPath();
  sub_24177B774(0);
  v73 = v46;
  swift_storeEnumTagMultiPayload();
  v93 = type metadata accessor for NotificationsSetupPhaseSpecs();
  v94 = &off_2511B1B50;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v91);
  v48 = v84;
  sub_2418617E4((uint64_t)boxed_opaque_existential_1);
  v49 = v86;
  sub_24177C34C(&v91, v86);
  sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseContent);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
  v50 = v85;
  sub_2418A9930();
  (*(void (**)(_BYTE *, char *, uint64_t))(v88 + 16))(&v35[v32[17]], v50, v87);
  *v35 = 1;
  sub_2417289A8(v49, (uint64_t)&v35[v32[18]], (uint64_t (*)(_QWORD))sub_24177D39C);
  v71[0] = (uint64_t)&v35[v32[19]];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v51 = *(_QWORD *)&v91;
  v52 = (uint64_t)v24;
  sub_2417289A8(v48, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhase_iOS);
  v53 = swift_allocObject();
  v54 = v72;
  sub_241731B4C(v52, v53 + v72, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhase_iOS);
  v55 = v74;
  sub_2417289A8(v48, v74, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhase_iOS);
  v56 = swift_allocObject();
  sub_241731B4C(v55, v56 + v54, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhase_iOS);
  *(_QWORD *)v9 = v51;
  *((_QWORD *)v9 + 1) = sub_24177D7A0;
  *((_QWORD *)v9 + 2) = v53;
  *((_QWORD *)v9 + 3) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE65DF0]), sel_init);
  *((_QWORD *)v9 + 4) = sub_24177D7F4;
  *((_QWORD *)v9 + 5) = v56;
  LOBYTE(v90) = 0;
  sub_2418A96C0();
  v57 = v92;
  v9[48] = LOBYTE(v91);
  *((_QWORD *)v9 + 7) = v57;
  LOBYTE(v90) = 2;
  sub_24177D840();
  sub_2418A96C0();
  v58 = v92;
  v9[64] = LOBYTE(v91);
  *((_QWORD *)v9 + 9) = v58;
  v59 = (uint64_t *)&v9[*(int *)(ButtonView + 40)];
  *v59 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v60 = v75;
  sub_241731B4C((uint64_t)v9, v75, type metadata accessor for NotificationsNextButtonView);
  v61 = (uint64_t *)(v60 + *(int *)(v77 + 36));
  *v61 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714CE28, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  sub_24177D898(v60, v71[0]);
  v62 = (double *)&v35[v32[20]];
  v90 = 0;
  sub_2418A96C0();
  v63 = v92;
  *v62 = v91;
  *((_QWORD *)v62 + 1) = v63;
  v64 = (double *)&v35[v32[21]];
  v90 = 0;
  sub_2418A96C0();
  v65 = v92;
  *v64 = v91;
  *((_QWORD *)v64 + 1) = v65;
  (*(void (**)(char *, uint64_t))(v88 + 8))(v85, v87);
  sub_24172588C(v86, (uint64_t (*)(_QWORD))sub_24177D39C);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_release();
  v66 = v91;
  v67 = v80;
  sub_241861034(v80);
  v68 = v76;
  sub_24182EC68(v67, (uint64_t)v35, v76, v66);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v67, v82);
  sub_24172588C((uint64_t)v35, (uint64_t (*)(_QWORD))sub_24177D428);
  v69 = sub_24177D8FC();
  MEMORY[0x24269BD3C](2, MEMORY[0x24BEE4AF8], v79, v69);
  return sub_24172588C(v68, (uint64_t (*)(_QWORD))sub_24177D628);
}

uint64_t sub_24177D234(uint64_t a1, char a2)
{
  swift_retain();
  sub_241794684(a1, a2);
  return swift_release();
}

uint64_t sub_24177D27C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  sub_2417289A8(v3, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhase_iOS);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  result = sub_241731B4C((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhase_iOS);
  *a3 = sub_24177D334;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v8;
  return result;
}

uint64_t sub_24177D334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NotificationsSetupPhase_iOS() - 8) + 80);
  return sub_24177CA1C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_24177D380()
{
  return sub_24172159C(&qword_25714DD28, type metadata accessor for NotificationsNextButtonView, (uint64_t)&unk_2418DA308);
}

void sub_24177D39C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DD30, sub_24177D3B8);
}

void sub_24177D3B8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DD38, sub_24177D3D4);
}

void sub_24177D3D4(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DD40, sub_24177D3F0);
}

void sub_24177D3F0(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DD48, sub_24177D40C);
}

void sub_24177D40C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DD50, (void (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseContent);
}

uint64_t sub_24177D428()
{
  uint64_t result;

  result = qword_25714DD58;
  if (!qword_25714DD58)
  {
    sub_24177D39C(255);
    sub_24173EEE8(255, &qword_25714DD20, type metadata accessor for NotificationsNextButtonView, sub_24177D380, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryButtonTray);
    sub_2418A993C();
    sub_241721DF8(&qword_25714DD60, (uint64_t (*)(uint64_t))sub_24177D39C, sub_24177D514, MEMORY[0x24BDEDBB8]);
    sub_24177D5C0();
    type metadata accessor for ScrollableWithPinnedFooter();
  }
  return result;
}

uint64_t sub_24177D514()
{
  return sub_241721DF8(&qword_25714DD68, (uint64_t (*)(uint64_t))sub_24177D3B8, sub_24177D538, MEMORY[0x24BDECC60]);
}

uint64_t sub_24177D538()
{
  return sub_241721DF8(&qword_25714DD70, (uint64_t (*)(uint64_t))sub_24177D3D4, sub_24177D55C, MEMORY[0x24BDECC60]);
}

uint64_t sub_24177D55C()
{
  return sub_241721DF8(&qword_25714DD78, (uint64_t (*)(uint64_t))sub_24177D3F0, sub_24177D580, MEMORY[0x24BDECC60]);
}

uint64_t sub_24177D580()
{
  return sub_241721DF8(&qword_25714DD80, (uint64_t (*)(uint64_t))sub_24177D40C, sub_24177D5A4, MEMORY[0x24BDEDBB8]);
}

uint64_t sub_24177D5A4()
{
  return sub_24172159C(&qword_25714DD88, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseContent, (uint64_t)&unk_2418D9898);
}

unint64_t sub_24177D5C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714DD90;
  if (!qword_25714DD90)
  {
    sub_24173EEE8(255, &qword_25714DD20, type metadata accessor for NotificationsNextButtonView, sub_24177D380, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryButtonTray);
    result = MEMORY[0x24269D47C](&unk_2418D4EF0, v1);
    atomic_store(result, (unint64_t *)&qword_25714DD90);
  }
  return result;
}

void sub_24177D628(uint64_t a1)
{
  sub_241728250(a1, &qword_25714DD98, (void (*)(uint64_t))sub_24177D428, sub_2417782FC);
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for NotificationsSetupPhase_iOS();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 24);
  sub_24177B774(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A8EB0();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v8 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v3 + *(int *)(v1 + 28);
  sub_241725C90(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24177D7B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NotificationsSetupPhase_iOS() - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 16))();
}

uint64_t sub_24177D7F4(uint64_t a1, char a2)
{
  type metadata accessor for NotificationsSetupPhase_iOS();
  return sub_24177D234(a1, a2);
}

void sub_24177D840()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DDA0)
  {
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DDA0);
  }
}

uint64_t sub_24177D898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24173EEE8(0, &qword_25714DD20, type metadata accessor for NotificationsNextButtonView, sub_24177D380, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryButtonTray);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24177D8FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714DDA8;
  if (!qword_25714DDA8)
  {
    sub_24177D628(255);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714DDB0, (uint64_t (*)(uint64_t))sub_24177D428, (uint64_t)&unk_2418D6370);
    v3[1] = sub_24172159C(&qword_25714DBA8, (uint64_t (*)(uint64_t))sub_2417782FC, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714DDA8);
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_24177D9B8()
{
  return sub_24172159C(&qword_25714DDB8, (uint64_t (*)(uint64_t))sub_24177D9E4, MEMORY[0x24BDEC6F8]);
}

void sub_24177D9E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DDC0)
  {
    sub_24177DA78(255);
    sub_24177D628(255);
    sub_24177D8FC();
    swift_getOpaqueTypeConformance2();
    v0 = sub_2418A8718();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DDC0);
  }
}

void sub_24177DA78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714DDC8)
  {
    sub_24177D628(255);
    v5[0] = v2;
    v5[1] = sub_24177D8FC();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF3888], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714DDC8);
  }
}

void sub_24177DAEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DDD0)
  {
    sub_24173EEE8(255, &qword_25714DDD8, (uint64_t (*)(uint64_t))sub_24177DB68, sub_24177E17C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DDD0);
  }
}

void sub_24177DB68(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714DDE0, (uint64_t (*)(uint64_t))sub_24177DB84, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_24177DB84()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_25714DDE8)
  {
    sub_241721CBC(255, &qword_25714DDF0, sub_24177DC8C);
    sub_24177DCC4();
    sub_241721CBC(255, &qword_25714DE48, sub_24177DEEC);
    sub_241721CBC(255, &qword_25714DE60, (void (*)(uint64_t))sub_24177DF24);
    sub_24172570C(255, &qword_25714DE78, (uint64_t (*)(uint64_t))sub_24177DFA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_25714DDE8);
  }
}

void sub_24177DC8C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DDF8, sub_24177DCA8);
}

void sub_24177DCA8(uint64_t a1)
{
  sub_241728250(a1, &qword_25714DE00, (void (*)(uint64_t))type metadata accessor for ValenceSelectionTitleText, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_24177DCC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DE08)
  {
    sub_24177DD40();
    sub_241721CBC(255, &qword_25714DE38, (void (*)(uint64_t))sub_24177DE90);
    v0 = sub_2418A8D30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DE08);
  }
}

void sub_24177DD40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DE10)
  {
    sub_241721CBC(255, &qword_25714DE18, sub_24177DDDC);
    sub_24173EEE8(255, (unint64_t *)&qword_25714DE28, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, sub_24177DE74, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF03F0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DE10);
  }
}

void sub_24177DDDC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DE20, (void (*)(uint64_t))sub_24177DDF8);
}

void sub_24177DDF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D658)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C1F0, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D658);
  }
}

uint64_t sub_24177DE74()
{
  return sub_24172159C(&qword_25714DE30, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD830]);
}

void sub_24177DE90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DE40)
  {
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DE40);
  }
}

void sub_24177DEEC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DE50, sub_24177DF08);
}

void sub_24177DF08(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DE58, sub_24177DCA8);
}

void sub_24177DF24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DE68)
  {
    sub_241721CBC(255, &qword_25714DE70, (void (*)(uint64_t))type metadata accessor for ValenceSlider);
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DE68);
  }
}

void sub_24177DFA0(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DE80, sub_24177DFBC);
}

void sub_24177DFBC(uint64_t a1)
{
  sub_241728250(a1, &qword_25714DE88, sub_24177DFD8, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_24177DFD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_25714DE90)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714CE48, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ActionButton);
    v3 = v2;
    sub_24173EEE8(255, (unint64_t *)&qword_25714CB28, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], sub_241778160, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE30B8]);
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_24177E0AC();
    v7[3] = sub_24177E114();
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF2800], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714DE90);
  }
}

unint64_t sub_24177E0AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714CE58;
  if (!qword_25714CE58)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714CE48, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ActionButton);
    result = MEMORY[0x24269D47C](&unk_2418DA5E8, v1);
    atomic_store(result, (unint64_t *)&qword_25714CE58);
  }
  return result;
}

unint64_t sub_24177E114()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714CB40;
  if (!qword_25714CB40)
  {
    sub_24173EEE8(255, (unint64_t *)&qword_25714CB28, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], sub_241778160, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE30B8]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE30C8], v1);
    atomic_store(result, (unint64_t *)&qword_25714CB40);
  }
  return result;
}

uint64_t sub_24177E17C()
{
  return sub_24172159C(&qword_25714DE98, (uint64_t (*)(uint64_t))sub_24177DB68, MEMORY[0x24BDF5428]);
}

void sub_24177E198(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DEA0, (void (*)(uint64_t))sub_24177DAEC);
}

void sub_24177E1B4(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DEA8, sub_24177E198);
}

void sub_24177E1D0(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714DEB0, sub_24177E1B4);
}

BOOL static AssessmentRiskInformationalView.Configuration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AssessmentRiskInformationalView.Configuration.hash(into:)()
{
  return sub_2418AA578();
}

uint64_t AssessmentRiskInformationalView.Configuration.hashValue.getter()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

BOOL sub_24177E270(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

double AssessmentRiskInformationalView.init(configuration:)@<D0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  __int128 v7;
  double result;
  _OWORD v9[2];
  __int128 v10;
  uint64_t v11;

  v2 = (int *)type metadata accessor for AssessmentRiskInformationalView();
  v3 = (uint64_t *)(a1 + v2[5]);
  *v3 = swift_getKeyPath();
  sub_241725C90(0);
  swift_storeEnumTagMultiPayload();
  v4 = (uint64_t *)(a1 + v2[6]);
  *v4 = swift_getKeyPath();
  sub_24177FB30(0);
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t *)(a1 + v2[7]);
  *v5 = swift_getKeyPath();
  sub_24177FC0C(0);
  swift_storeEnumTagMultiPayload();
  v6 = (uint64_t *)(a1 + v2[8]);
  *v6 = swift_getKeyPath();
  sub_24177FCC8(0);
  swift_storeEnumTagMultiPayload();
  sub_24186D35C((uint64_t *)v9);
  v7 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v7;
  result = *(double *)&v10;
  *(_OWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  return result;
}

uint64_t type metadata accessor for AssessmentRiskInformationalView()
{
  uint64_t result;

  result = qword_25714DFC0;
  if (!qword_25714DFC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AssessmentRiskInformationalView.body.getter()
{
  sub_24177FCEC();
  sub_241780354();
  return sub_2418A8814();
}

uint64_t sub_24177E448@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t OpaqueTypeConformance2;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(char *, uint64_t);
  void *v76;
  char **v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  unint64_t v112;

  v108 = a2;
  v3 = sub_2418A84E4();
  v106 = *(_QWORD *)(v3 - 8);
  v107 = v3;
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v105 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v104 = (uint64_t)&v85 - v8;
  v99 = sub_2418A8B44();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99, v9);
  v97 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_2418A87B4();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89, v11);
  v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417790D8();
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241780004();
  v87 = v18;
  v86 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241782A08(0, &qword_25714DEE8, v22, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v24 = v23;
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)&v85 - v26;
  sub_24177FF70(0);
  v92 = v28;
  v93 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)&v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177FEB0(0);
  v95 = v32;
  v96 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v33);
  v90 = (char *)&v85 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177FD70(0);
  v103 = v35;
  v102 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v36);
  v94 = (char *)&v85 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177FCEC();
  v101 = v38;
  MEMORY[0x24BDAC7A8](v38, v39);
  v100 = (char *)&v85 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = a1;
  sub_241780080();
  sub_2417800E4();
  sub_2418A9240();
  v41 = sub_2418A90CC();
  v91 = type metadata accessor for AssessmentRiskInformationalView();
  sub_241861A68((uint64_t)v17);
  sub_241861A34((uint64_t)v13);
  sub_241781EA0((uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v13, v89);
  sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))sub_2417790D8);
  sub_2418A84A8();
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = v86;
  v51 = v87;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v27, v21, v87);
  v52 = &v27[*(int *)(v24 + 36)];
  *v52 = v41;
  *((_QWORD *)v52 + 1) = v43;
  *((_QWORD *)v52 + 2) = v45;
  *((_QWORD *)v52 + 3) = v47;
  *((_QWORD *)v52 + 4) = v49;
  v52[40] = 0;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v51);
  v53 = a1[1];
  v111 = *a1;
  v112 = v53;
  sub_241721040();
  swift_bridgeObjectRetain();
  v54 = sub_2418A92D0();
  v56 = v55;
  LOBYTE(v21) = v57 & 1;
  v58 = sub_24178019C();
  sub_2418A939C();
  sub_2417289EC(v54, v56, (char)v21);
  swift_bridgeObjectRelease();
  sub_241782400((uint64_t)v27);
  v59 = v98;
  v60 = v97;
  v61 = v99;
  (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v97, *MEMORY[0x24BDEE5F0], v99);
  v111 = v24;
  v112 = v58;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v63 = v90;
  v64 = v92;
  sub_2418A948C();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v31, v64);
  v109 = a1;
  sub_24178023C(0);
  v111 = v64;
  v112 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_2417802C8();
  v66 = v65;
  v67 = sub_24172159C(&qword_25714DF30, (uint64_t (*)(uint64_t))sub_2417802C8, MEMORY[0x24BDEB848]);
  v111 = v66;
  v112 = v67;
  swift_getOpaqueTypeConformance2();
  v68 = v94;
  v69 = v95;
  sub_2418A9528();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v63, v69);
  v70 = v104;
  sub_241861034(v104);
  v71 = v105;
  v72 = v106;
  v73 = v107;
  (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v105, *MEMORY[0x24BDEB3F0], v107);
  v74 = v71;
  LOBYTE(v71) = sub_2418A84D8();
  v75 = *(void (**)(char *, uint64_t))(v72 + 8);
  v75(v74, v73);
  v75((char *)v70, v73);
  v76 = (void *)objc_opt_self();
  v77 = &selRef_systemBackgroundColor;
  if ((v71 & 1) == 0)
    v77 = &selRef_systemGroupedBackgroundColor;
  v78 = MEMORY[0x24269BE5C](objc_msgSend(v76, *v77));
  v79 = sub_2418A90D8();
  v80 = v102;
  v81 = (uint64_t)v100;
  v82 = v103;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v100, v68, v103);
  v83 = v81 + *(int *)(v101 + 36);
  *(_QWORD *)v83 = v78;
  *(_BYTE *)(v83 + 8) = v79;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v68, v82);
  return sub_241731B4C(v81, v108, (uint64_t (*)(_QWORD))sub_24177FCEC);
}

uint64_t sub_24177EB7C()
{
  sub_241721040();
  swift_bridgeObjectRetain();
  sub_2418A92D0();
  sub_241780158();
  return sub_2418A98DC();
}

uint64_t sub_24177EC20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;

  v2 = sub_2418A8DB4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2417802C8();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2418A8D90();
  v13 = a1;
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  sub_241731344();
  sub_2418A8580();
  v10 = sub_24172159C(&qword_25714DF30, (uint64_t (*)(uint64_t))sub_2417802C8, MEMORY[0x24BDEB848]);
  MEMORY[0x24269B628](v9, v5, v10);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_24177ED6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v2 = type metadata accessor for AssessmentRiskInformationalView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  if (qword_25714B958 != -1)
    swift_once();
  v6 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v7 = sub_2418A7EFC();
  v9 = v8;
  swift_bridgeObjectRelease();

  v13[0] = v7;
  v13[1] = v9;
  sub_2417289A8(a1, (uint64_t)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for AssessmentRiskInformationalView);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  sub_241731B4C((uint64_t)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentRiskInformationalView);
  sub_241721040();
  return sub_2418A9714();
}

uint64_t sub_24177EEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_2418A8658();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AssessmentRiskInformationalView();
  sub_2418612BC((uint64_t)v4);
  sub_2418A864C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_24177EF94()
{
  sub_24177FCEC();
  sub_241780354();
  return sub_2418A8814();
}

uint64_t sub_24177EFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void *v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v85;
  int v86;
  unint64_t v87;
  id v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;

  v99 = a3;
  v101 = a2;
  v100 = a1;
  sub_241781C54();
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v106 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v105 = (uint64_t *)((char *)&v85 - v10);
  if (qword_25714B958 != -1)
    swift_once();
  v11 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v12 = sub_2418A7EFC();
  v14 = v13;
  swift_bridgeObjectRelease();

  v108 = v12;
  v109 = v14;
  v87 = sub_241721040();
  v15 = sub_2418A92D0();
  v17 = v16;
  v19 = v18 & 1;
  sub_2418A9168();
  sub_2418A9150();
  swift_release();
  v20 = sub_2418A9294();
  v22 = v21;
  LOBYTE(v12) = v23;
  swift_release();
  sub_2417289EC(v15, v17, v19);
  swift_bridgeObjectRelease();
  v24 = (void *)objc_opt_self();
  v88 = v24;
  MEMORY[0x24269BE5C](objc_msgSend(v24, sel_labelColor));
  v103 = sub_2418A9264();
  v98 = v25;
  v27 = v26;
  v104 = v28;
  swift_release();
  v102 = v27 & 1;
  sub_2417289EC(v20, v22, v12 & 1);
  swift_bridgeObjectRelease();
  v97 = sub_2418A90F0();
  sub_2418A84A8();
  v96 = v29;
  v95 = v30;
  v94 = v31;
  v93 = v32;
  v108 = v100;
  v109 = v101;
  swift_bridgeObjectRetain();
  v33 = sub_2418A92D0();
  v35 = v34;
  LOBYTE(v11) = v36 & 1;
  MEMORY[0x24269BE5C](objc_msgSend(v24, sel_labelColor));
  v90 = sub_2418A9264();
  v91 = v37;
  LOBYTE(v20) = v38;
  v92 = v39;
  swift_release();
  LODWORD(v101) = v20 & 1;
  sub_2417289EC(v33, v35, (char)v11);
  swift_bridgeObjectRelease();
  v89 = sub_2418A90F0();
  sub_2418A84A8();
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v48 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v49 = sub_2418A7EFC();
  v51 = v50;
  swift_bridgeObjectRelease();

  v108 = v49;
  v109 = v51;
  v52 = sub_2418A92D0();
  v54 = v53;
  LOBYTE(v51) = v55 & 1;
  sub_2418A9168();
  sub_2418A9150();
  swift_release();
  v56 = sub_2418A9294();
  v58 = v57;
  LOBYTE(v20) = v59;
  swift_release();
  LOBYTE(v22) = v20 & 1;
  sub_2417289EC(v52, v54, v51);
  swift_bridgeObjectRelease();
  MEMORY[0x24269BE5C](objc_msgSend(v88, sel_labelColor));
  v88 = (id)sub_2418A9264();
  v87 = v60;
  LOBYTE(v20) = v61;
  v100 = v62;
  swift_release();
  v86 = v20 & 1;
  sub_2417289EC(v56, v58, v22);
  swift_bridgeObjectRelease();
  v85 = sub_2418A90F0();
  sub_2418A84A8();
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v71 = sub_2418A8C64();
  v72 = v105;
  *v105 = v71;
  v72[1] = 0x4034000000000000;
  *((_BYTE *)v72 + 16) = 0;
  v73 = (uint64_t)v72;
  sub_241731B94(0, &qword_25714E070, (void (*)(uint64_t))sub_241781CB4);
  v108 = v99;
  swift_getKeyPath();
  sub_241781D5C();
  sub_24172159C(&qword_25714E050, (uint64_t (*)(uint64_t))sub_241781D5C, MEMORY[0x24BEE12D8]);
  sub_241781DB0();
  sub_241781E54();
  swift_bridgeObjectRetain();
  sub_2418A9888();
  LOBYTE(v58) = v102;
  LOBYTE(v108) = v102;
  LOBYTE(v22) = v101;
  v107 = v101;
  sub_2417289A8(v73, v106, (uint64_t (*)(_QWORD))sub_241781C54);
  v75 = v103;
  v74 = v104;
  v76 = v98;
  *(_QWORD *)a4 = v103;
  *(_QWORD *)(a4 + 8) = v76;
  *(_BYTE *)(a4 + 16) = v58;
  *(_QWORD *)(a4 + 24) = v74;
  *(_BYTE *)(a4 + 32) = v97;
  v77 = v95;
  *(_QWORD *)(a4 + 40) = v96;
  *(_QWORD *)(a4 + 48) = v77;
  v78 = v93;
  *(_QWORD *)(a4 + 56) = v94;
  *(_QWORD *)(a4 + 64) = v78;
  *(_BYTE *)(a4 + 72) = 0;
  v79 = v90;
  v80 = v91;
  *(_QWORD *)(a4 + 80) = v90;
  *(_QWORD *)(a4 + 88) = v80;
  *(_BYTE *)(a4 + 96) = v22;
  *(_QWORD *)(a4 + 104) = v92;
  *(_BYTE *)(a4 + 112) = v89;
  *(_QWORD *)(a4 + 120) = v41;
  *(_QWORD *)(a4 + 128) = v43;
  *(_QWORD *)(a4 + 136) = v45;
  *(_QWORD *)(a4 + 144) = v47;
  *(_BYTE *)(a4 + 152) = 0;
  v81 = (uint64_t)v88;
  v82 = v87;
  *(_QWORD *)(a4 + 160) = v88;
  *(_QWORD *)(a4 + 168) = v82;
  LOBYTE(v58) = v86;
  *(_BYTE *)(a4 + 176) = v86;
  *(_QWORD *)(a4 + 184) = v100;
  *(_BYTE *)(a4 + 192) = v85;
  *(_QWORD *)(a4 + 200) = v64;
  *(_QWORD *)(a4 + 208) = v66;
  *(_QWORD *)(a4 + 216) = v68;
  *(_QWORD *)(a4 + 224) = v70;
  *(_BYTE *)(a4 + 232) = 0;
  sub_241781BB8();
  sub_2417289A8(v106, a4 + *(int *)(v83 + 80), (uint64_t (*)(_QWORD))sub_241781C54);
  sub_241728A50(v75, v76, v102);
  swift_bridgeObjectRetain();
  sub_241728A50(v79, v80, v101);
  swift_bridgeObjectRetain();
  sub_241728A50(v81, v82, v58);
  swift_bridgeObjectRetain();
  sub_24172588C((uint64_t)v105, (uint64_t (*)(_QWORD))sub_241781C54);
  sub_24172588C(v106, (uint64_t (*)(_QWORD))sub_241781C54);
  sub_2417289EC(v81, v82, v58);
  swift_bridgeObjectRelease();
  sub_2417289EC(v79, v80, v107);
  swift_bridgeObjectRelease();
  sub_2417289EC(v103, v76, v108);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24177F7E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24177F814@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  *(_QWORD *)a1 = sub_2418A8C64();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_241731B94(0, &qword_25714E018, sub_241781B9C);
  return sub_24177EFE8(v3, v4, v5, a1 + *(int *)(v6 + 44));
}

uint64_t sub_24177F87C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;

  sub_241721040();
  swift_bridgeObjectRetain();
  v2 = sub_2418A92D0();
  v4 = v3;
  v6 = v5 & 1;
  sub_2418A921C();
  v7 = sub_2418A9294();
  v9 = v8;
  v11 = v10;
  swift_release();
  v12 = v11 & 1;
  sub_2417289EC(v2, v4, v6);
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  MEMORY[0x24269BE5C](v13);
  v14 = sub_2418A9264();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_release();
  v21 = v18 & 1;
  sub_2417289EC(v7, v9, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v22 = sub_2418A92D0();
  v24 = v23;
  v26 = v25 & 1;
  *(_QWORD *)a1 = v14;
  *(_QWORD *)(a1 + 8) = v16;
  *(_BYTE *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v20;
  *(_QWORD *)(a1 + 32) = v22;
  *(_QWORD *)(a1 + 40) = v23;
  *(_BYTE *)(a1 + 48) = v25 & 1;
  *(_QWORD *)(a1 + 56) = v27;
  *(_WORD *)(a1 + 64) = 256;
  *(_QWORD *)(a1 + 72) = 0x3FF0000000000000;
  sub_241728A50(v14, v16, v21);
  swift_bridgeObjectRetain();
  sub_241728A50(v22, v24, v26);
  swift_bridgeObjectRetain();
  sub_2417289EC(v22, v24, v26);
  swift_bridgeObjectRelease();
  sub_2417289EC(v14, v16, v21);
  return swift_bridgeObjectRelease();
}

double sub_24177FA80@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  double result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  double v20;

  v2 = sub_2418A8C64();
  sub_24177F87C((uint64_t)&v12);
  v3 = v13;
  v4 = v14;
  v5 = v16;
  v6 = v17;
  v7 = v18;
  v8 = v19;
  result = v20;
  v10 = v12;
  v11 = v15;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 72) = v5;
  *(_QWORD *)(a1 + 80) = v6;
  *(_BYTE *)(a1 + 88) = v7;
  *(_BYTE *)(a1 + 89) = v8;
  *(double *)(a1 + 96) = result;
  return result;
}

void sub_24177FB30(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714C2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
}

uint64_t sub_24177FB4C()
{
  return sub_2418A89A0();
}

uint64_t sub_24177FB6C()
{
  return sub_2418A89A0();
}

uint64_t sub_24177FB8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2418A87B4();
  MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_2418A89AC();
}

void sub_24177FC0C(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714DEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
}

uint64_t sub_24177FC28()
{
  return sub_2418A8A24();
}

uint64_t sub_24177FC48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  sub_2417790D8();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2417289A8(a1, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  return sub_2418A8A30();
}

void sub_24177FCC8(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714DEC0, (uint64_t (*)(uint64_t))sub_2417790D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
}

uint64_t sub_24177FCE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24177E448(*(_QWORD **)(v1 + 16), a1);
}

void sub_24177FCEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DEC8)
  {
    sub_24177FD70(255);
    sub_24172835C(255, &qword_25714DF38, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], MEMORY[0x24BDF06B8]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DEC8);
  }
}

void sub_24177FD70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_25714DED0)
  {
    sub_24177FEB0(255);
    v3 = v2;
    sub_24178023C(255);
    v5 = v4;
    sub_24177FF70(255);
    sub_241782A08(255, &qword_25714DEE8, (uint64_t (*)(uint64_t))sub_241780004, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24178019C();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_2417802C8();
    sub_24172159C(&qword_25714DF30, (uint64_t (*)(uint64_t))sub_2417802C8, MEMORY[0x24BDEB848]);
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = OpaqueTypeConformance2;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF3858], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_25714DED0);
  }
}

void sub_24177FEB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!qword_25714DED8)
  {
    sub_24177FF70(255);
    v3 = v2;
    sub_241782A08(255, &qword_25714DEE8, (uint64_t (*)(uint64_t))sub_241780004, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24178019C();
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF33A8], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714DED8);
  }
}

void sub_24177FF70(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714DEE0)
  {
    sub_241782A08(255, &qword_25714DEE8, (uint64_t (*)(uint64_t))sub_241780004, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v5[0] = v2;
    v5[1] = sub_24178019C();
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2898], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714DEE0);
  }
}

void sub_241780004()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DEF0)
  {
    sub_241780080();
    sub_2417800E4();
    v0 = sub_2418A924C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DEF0);
  }
}

void sub_241780080()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DEF8)
  {
    v0 = sub_2418A98E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DEF8);
  }
}

unint64_t sub_2417800E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  result = qword_25714DF00;
  if (!qword_25714DF00)
  {
    sub_241780080();
    v2 = v1;
    v3 = sub_241780158();
    v4[0] = MEMORY[0x24BDF5138];
    v4[1] = v3;
    v4[2] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4AF8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_25714DF00);
  }
  return result;
}

unint64_t sub_241780158()
{
  unint64_t result;

  result = qword_25714DF08;
  if (!qword_25714DF08)
  {
    result = MEMORY[0x24269D47C](&unk_2418D3AB4, &type metadata for AssessmentRiskInformationalContent);
    atomic_store(result, (unint64_t *)&qword_25714DF08);
  }
  return result;
}

unint64_t sub_24178019C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714DF10;
  if (!qword_25714DF10)
  {
    sub_241782A08(255, &qword_25714DEE8, (uint64_t (*)(uint64_t))sub_241780004, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714DF18, (uint64_t (*)(uint64_t))sub_241780004, MEMORY[0x24BDF1A30]);
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714DF10);
  }
  return result;
}

void sub_24178023C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_25714DF20)
  {
    sub_2417802C8();
    v5[0] = v2;
    v5[1] = sub_24172159C(&qword_25714DF30, (uint64_t (*)(uint64_t))sub_2417802C8, MEMORY[0x24BDEB848]);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDEFA90], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714DF20);
  }
}

void sub_2417802C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714DF28)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    sub_241731344();
    v0 = sub_2418A858C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714DF28);
  }
}

unint64_t sub_241780354()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  _QWORD v8[6];

  result = qword_25714DF40;
  if (!qword_25714DF40)
  {
    sub_24177FCEC();
    v2 = v1;
    sub_24177FEB0(255);
    v4 = v3;
    sub_24178023C(255);
    v6 = v5;
    sub_24177FF70(255);
    sub_241782A08(255, &qword_25714DEE8, (uint64_t (*)(uint64_t))sub_241780004, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_24178019C();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_2417802C8();
    sub_24172159C(&qword_25714DF30, (uint64_t (*)(uint64_t))sub_2417802C8, MEMORY[0x24BDEB848]);
    v8[2] = v4;
    v8[3] = v6;
    v8[4] = OpaqueTypeConformance2;
    v8[5] = swift_getOpaqueTypeConformance2();
    v8[0] = swift_getOpaqueTypeConformance2();
    v8[1] = sub_2417804AC();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v8);
    atomic_store(result, (unint64_t *)&qword_25714DF40);
  }
  return result;
}

unint64_t sub_2417804AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714DF48;
  if (!qword_25714DF48)
  {
    sub_24172835C(255, &qword_25714DF38, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], MEMORY[0x24BDF06B8]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF06D0], v1);
    atomic_store(result, (unint64_t *)&qword_25714DF48);
  }
  return result;
}

unint64_t sub_241780518()
{
  unint64_t result;

  result = qword_25714DF50;
  if (!qword_25714DF50)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for AssessmentRiskInformationalView.Configuration, &type metadata for AssessmentRiskInformationalView.Configuration);
    atomic_store(result, (unint64_t *)&qword_25714DF50);
  }
  return result;
}

uint64_t sub_24178055C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for AssessmentRiskInformationalView(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a3[5];
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    a1[6] = a2[6];
    sub_241725C90(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[6];
    v16 = (uint64_t *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    sub_24177FB30(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = a3[7];
    v20 = (uint64_t *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    sub_24177FC0C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_2418A87B4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v23 = a3[8];
    v24 = (uint64_t *)((char *)v4 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    sub_24177FCC8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_2418A8EB0();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        sub_2417790D8();
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v27 + 16))(v24, v25, v26);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
    }
    else
    {
      *v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t destroy for AssessmentRiskInformationalView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  sub_241725C90(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + a2[6];
  sub_24177FB30(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = a1 + a2[7];
  sub_24177FC0C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = a1 + a2[8];
  sub_24177FCC8(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v11 = sub_2418A8EB0();
  v12 = *(_QWORD *)(v11 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  return result;
}

_QWORD *initializeWithCopy for AssessmentRiskInformationalView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a3[5];
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  a1[6] = a2[6];
  sub_241725C90(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = a3[6];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  sub_24177FB30(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_2418A8658();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  sub_24177FC0C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_2418A87B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  sub_24177FCC8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_2418A8EB0();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      sub_2417790D8();
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  else
  {
    *v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for AssessmentRiskInformationalView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_24172588C((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))sub_241725C90);
    sub_241725C90(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = a3[6];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    sub_24172588C((uint64_t)a1 + v10, (uint64_t (*)(_QWORD))sub_24177FB30);
    sub_24177FB30(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8658();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v14 = a3[7];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    sub_24172588C((uint64_t)a1 + v14, (uint64_t (*)(_QWORD))sub_24177FC0C);
    sub_24177FC0C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2418A87B4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v18 = a3[8];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    sub_24172588C((uint64_t)a1 + v18, (uint64_t (*)(_QWORD))sub_24177FCC8);
    sub_24177FCC8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_2418A8EB0();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_2417790D8();
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for AssessmentRiskInformationalView(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  sub_241725C90(0);
  v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  sub_24177FB30(0);
  v17 = v16;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_2418A8658();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v14, v15, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  v19 = a3[7];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  sub_24177FC0C(0);
  v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_2418A87B4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v25 = a3[8];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  sub_24177FCC8(0);
  v29 = v28;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = sub_2418A8EB0();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v27, 1, v30))
    {
      sub_2417790D8();
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v26, v27, v30);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v26, 0, 1, v30);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for AssessmentRiskInformationalView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v8 = a2[6];
  a1[5] = a2[5];
  a1[6] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    sub_24172588C((uint64_t)a1 + v9, (uint64_t (*)(_QWORD))sub_241725C90);
    sub_241725C90(0);
    v13 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v10, v11, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v15 = a3[6];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    sub_24172588C((uint64_t)a1 + v15, (uint64_t (*)(_QWORD))sub_24177FB30);
    sub_24177FB30(0);
    v19 = v18;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_2418A8658();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v16, v17, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    v21 = a3[7];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    sub_24172588C((uint64_t)a1 + v21, (uint64_t (*)(_QWORD))sub_24177FC0C);
    sub_24177FC0C(0);
    v25 = v24;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v22, v23, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    v27 = a3[8];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    sub_24172588C((uint64_t)a1 + v27, (uint64_t (*)(_QWORD))sub_24177FCC8);
    sub_24177FCC8(0);
    v31 = v30;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = sub_2418A8EB0();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v29, 1, v32))
      {
        sub_2417790D8();
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v28, v29, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v32);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentRiskInformationalView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241781500(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        sub_24172570C(0, &qword_25714DF58, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[7];
        }
        else
        {
          sub_24172570C(0, &qword_25714DF60, (uint64_t (*)(uint64_t))sub_2417790D8, MEMORY[0x24BDEB580]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a3[8];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AssessmentRiskInformationalView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241781654(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      sub_24172570C(0, &qword_25714C2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        sub_24172570C(0, &qword_25714DF58, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[7];
        }
        else
        {
          sub_24172570C(0, &qword_25714DF60, (uint64_t (*)(uint64_t))sub_2417790D8, MEMORY[0x24BDEB580]);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a4[8];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_241781798()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_241725C90(319);
  if (v0 <= 0x3F)
  {
    sub_24177FB30(319);
    if (v1 <= 0x3F)
    {
      sub_24177FC0C(319);
      if (v2 <= 0x3F)
      {
        sub_24177FCC8(319);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t storeEnumTagSinglePayload for AssessmentRiskInformationalView.Configuration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2417818AC + 4 * byte_2418D38B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2417818E0 + 4 * byte_2418D38B0[v4]))();
}

uint64_t sub_2417818E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2417818E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2417818F0);
  return result;
}

uint64_t sub_2417818FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241781904);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241781908(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241781910(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssessmentRiskInformationalView.Configuration()
{
  return &type metadata for AssessmentRiskInformationalView.Configuration;
}

uint64_t sub_24178192C()
{
  return sub_24172159C(&qword_25714E008, (uint64_t (*)(uint64_t))sub_241781958, MEMORY[0x24BDED358]);
}

void sub_241781958()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E010)
  {
    sub_2418A8754();
    sub_24177FCEC();
    sub_241780354();
    v0 = sub_2418A8820();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E010);
  }
}

uint64_t destroy for AssessmentRiskInformationalContent()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14MentalHealthUI34AssessmentRiskInformationalContentVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AssessmentRiskInformationalContent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AssessmentRiskInformationalContent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentRiskInformationalContent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentRiskInformationalContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentRiskInformationalContent()
{
  return &type metadata for AssessmentRiskInformationalContent;
}

uint64_t sub_241781B8C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241781B9C(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E020, (uint64_t (*)(uint64_t))sub_241781BB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241781BB8()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_25714E028)
  {
    sub_24172835C(255, &qword_25714E030, MEMORY[0x24BDF1FA8], MEMORY[0x24BDECC80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_241781C54();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_25714E028);
  }
}

void sub_241781C54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E038)
  {
    sub_241781CB4();
    sub_241781DF4();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E038);
  }
}

void sub_241781CB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E040)
  {
    sub_241781D5C();
    sub_24172159C(&qword_25714E050, (uint64_t (*)(uint64_t))sub_241781D5C, MEMORY[0x24BEE12D8]);
    sub_241781DB0();
    v0 = sub_2418A98A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E040);
  }
}

void sub_241781D5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E048)
  {
    v0 = sub_2418A9F0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E048);
  }
}

unint64_t sub_241781DB0()
{
  unint64_t result;

  result = qword_25714E058;
  if (!qword_25714E058)
  {
    result = MEMORY[0x24269D47C](&unk_2418DA288, &type metadata for LocalizedAssessmentInformationalContent.Section);
    atomic_store(result, (unint64_t *)&qword_25714E058);
  }
  return result;
}

unint64_t sub_241781DF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_25714E060;
  if (!qword_25714E060)
  {
    sub_241781CB4();
    v2 = v1;
    v3 = sub_241781E54();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4A08], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_25714E060);
  }
  return result;
}

unint64_t sub_241781E54()
{
  unint64_t result;

  result = qword_25714E068;
  if (!qword_25714E068)
  {
    result = MEMORY[0x24269D47C](&unk_2418D3B54, &type metadata for AssessmentRiskInformationalSection);
    atomic_store(result, (unint64_t *)&qword_25714E068);
  }
  return result;
}

uint64_t sub_241781E98()
{
  return sub_24177EB7C();
}

id sub_241781EA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  id result;
  void *v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  v44 = a1;
  v1 = sub_2418A8EB0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v43 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241779078();
  v6 = v5;
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v41 - v12;
  sub_2417790D8();
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v42 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v41 - v20;
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (char *)&v41 - v24;
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v41 - v27;
  v29 = sub_2418A879C();
  result = (id)MobileGestalt_get_current_device();
  v31 = result;
  if ((v29 & 1) == 0)
  {
    if (result)
    {
      MobileGestalt_get_homeButtonType();

      (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v21, *MEMORY[0x24BDEFEF0], v1);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v21, 0, 1, v1);
      v34 = (uint64_t)&v10[*(int *)(v6 + 48)];
      sub_2417289A8(v44, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_2417790D8);
      sub_2417289A8((uint64_t)v21, v34, (uint64_t (*)(_QWORD))sub_2417790D8);
      v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
      if (v35((uint64_t)v10, 1, v1) == 1)
      {
        sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2417790D8);
        if (v35(v34, 1, v1) == 1)
          return (id)sub_24172588C((uint64_t)v10, (uint64_t (*)(_QWORD))sub_2417790D8);
      }
      else
      {
        v36 = v42;
        sub_2417289A8((uint64_t)v10, v42, (uint64_t (*)(_QWORD))sub_2417790D8);
        if (v35(v34, 1, v1) != 1)
        {
          v39 = v43;
          (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v43, v34, v1);
          sub_24172159C(qword_25714DBB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], MEMORY[0x24BDEFF08]);
          sub_2418A9DA4();
          v40 = *(void (**)(char *, uint64_t))(v2 + 8);
          v40(v39, v1);
          sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2417790D8);
          v40((char *)v36, v1);
          return (id)sub_24172588C((uint64_t)v10, (uint64_t (*)(_QWORD))sub_2417790D8);
        }
        sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2417790D8);
        (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v36, v1);
      }
      return (id)sub_24172588C((uint64_t)v10, (uint64_t (*)(_QWORD))sub_241779078);
    }
LABEL_20:
    __break(1u);
    return result;
  }
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  MobileGestalt_get_homeButtonType();

  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v28, *MEMORY[0x24BDEFEF0], v1);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v28, 0, 1, v1);
  v32 = (uint64_t)&v13[*(int *)(v6 + 48)];
  sub_2417289A8(v44, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_2417790D8);
  sub_2417289A8((uint64_t)v28, v32, (uint64_t (*)(_QWORD))sub_2417790D8);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v33((uint64_t)v13, 1, v1) == 1)
  {
    sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))sub_2417790D8);
    if (v33(v32, 1, v1) == 1)
      return (id)sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2417790D8);
    return (id)sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))sub_241779078);
  }
  sub_2417289A8((uint64_t)v13, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_2417790D8);
  if (v33(v32, 1, v1) == 1)
  {
    sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))sub_2417790D8);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v25, v1);
    return (id)sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))sub_241779078);
  }
  v37 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v43, v32, v1);
  sub_24172159C(qword_25714DBB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], MEMORY[0x24BDEFF08]);
  sub_2418A9DA4();
  v38 = *(void (**)(char *, uint64_t))(v2 + 8);
  v38(v37, v1);
  sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))sub_2417790D8);
  v38(v25, v1);
  return (id)sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2417790D8);
}

uint64_t sub_241782400(uint64_t a1)
{
  uint64_t v2;

  sub_241782A08(0, &qword_25714DEE8, (uint64_t (*)(uint64_t))sub_241780004, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24178245C()
{
  uint64_t v0;

  return sub_24177EC20(*(_QWORD *)(v0 + 16));
}

uint64_t sub_241782464()
{
  uint64_t v0;

  return sub_24177ED6C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24178246C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for AssessmentRiskInformationalView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + v1[5];
  sub_241725C90(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v3 + v1[6];
  sub_24177FB30(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2418A8658();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = v3 + v1[7];
  sub_24177FC0C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = v3 + v1[8];
  sub_24177FCC8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A8EB0();
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241782638()
{
  type metadata accessor for AssessmentRiskInformationalView();
  return sub_24177EEFC();
}

uint64_t sub_241782664@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD **)(v1 + 16);
  v3 = v2[3];
  v4 = v2[4];
  *a1 = v2[2];
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for LocalizedAssessmentInformationalContent.Section()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for LocalizedAssessmentInformationalContent.Section(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LocalizedAssessmentInformationalContent.Section(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for LocalizedAssessmentInformationalContent.Section(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedAssessmentInformationalContent.Section(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedAssessmentInformationalContent.Section(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentRiskInformationalSection()
{
  return &type metadata for AssessmentRiskInformationalSection;
}

uint64_t sub_241782844()
{
  return sub_24172159C(&qword_25714E078, (uint64_t (*)(uint64_t))sub_241782870, MEMORY[0x24BDF4700]);
}

void sub_241782870(uint64_t a1)
{
  sub_241730584(a1, &qword_25714E080, (uint64_t (*)(uint64_t))sub_241781B9C, &qword_25714E088);
}

uint64_t sub_24178288C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24178289C()
{
  return sub_24172159C(&qword_25714E090, (uint64_t (*)(uint64_t))sub_2417828C8, MEMORY[0x24BDF4700]);
}

void sub_2417828C8(uint64_t a1)
{
  sub_241730584(a1, &qword_25714E098, (uint64_t (*)(uint64_t))sub_2417828E4, qword_25714E0C0);
}

void sub_2417828E4(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E0A0, (uint64_t (*)(uint64_t))sub_241782900, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241782900()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714E0A8)
  {
    sub_241782964();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714E0A8);
  }
}

void sub_241782964()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E0B0)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714CD98, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEDBA0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_241782A08(255, &qword_25714E0B8, MEMORY[0x24BDEFD08], MEMORY[0x24BDEFD00], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEFB28]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E0B0);
  }
}

void sub_241782A08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a5(a1, v9, a4);
    if (!v11)
      atomic_store(v10, a2);
  }
}

_QWORD *sub_241782A70(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = a2[5];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v7 = *(int *)(a3 + 28);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    *(_QWORD *)(a1 + 40) = v6;
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      v17 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_241782C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_241782D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8EB0();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v12 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_241782ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 28);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4(a1 + v7, (uint64_t)&qword_25714D428, (uint64_t)type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A8EB0();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v8, v9, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      v17 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_2417830BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v14 = &v6[v13];
    v15 = &v7[v13];
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_241783228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 28);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4(a1 + v7, (uint64_t)&qword_25714D428, (uint64_t)type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v10);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417833F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241783400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_241783494()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417834A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714DC80, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for EditButton()
{
  uint64_t result;

  result = qword_25714E120;
  if (!qword_25714E120)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241783568()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24178360C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24178361C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  unint64_t v54;
  unint64_t v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  int *v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;

  v65 = a2;
  v3 = type metadata accessor for EditButton();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v58 = v7;
  v57 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v56 - v9;
  sub_24178464C();
  v71 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417845A0(0);
  v69 = v15;
  v67 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v16);
  v66 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728250(0, &qword_25714E178, v18, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v70 = (char *)v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v23);
  v68 = (uint64_t)v56 - v24;
  v25 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418617E4((uint64_t)v28);
  sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_2418A9960();
  sub_2418A861C();
  v64 = v78;
  v63 = v79;
  v62 = v80;
  v61 = v81;
  v60 = v82;
  v59 = v83;
  if (qword_25714B958 != -1)
    swift_once();
  v29 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v30 = sub_2418A7EFC();
  v32 = v31;
  swift_bridgeObjectRelease();

  v72 = (void *)v30;
  v73 = v32;
  sub_241784A14(a1, (uint64_t)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v56[1] = v33 + v5;
  v34 = swift_allocObject();
  sub_241784A5C((uint64_t)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v34 + v33);
  sub_241721040();
  sub_2418A9714();
  v35 = sub_2418A95DC();
  KeyPath = swift_getKeyPath();
  v37 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v57;
  v39 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v14, v10, v58);
  v40 = (uint64_t *)&v14[v71[9]];
  *v40 = KeyPath;
  v40[1] = v35;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
  v41 = *(_QWORD *)(a1 + 24);
  v76 = *(_BYTE *)(a1 + 16);
  v77 = v41;
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  sub_241784A14(a1, (uint64_t)v37);
  v42 = swift_allocObject();
  sub_241784A5C((uint64_t)v37, v42 + v33);
  sub_241728250(0, &qword_25714E190, (void (*)(uint64_t))sub_2417846D0, (void (*)(uint64_t))sub_24173EF74);
  v58 = v43;
  v54 = sub_2417848DC();
  v55 = sub_24178495C();
  v44 = v66;
  v45 = v71;
  sub_2418A94D4();
  swift_release();
  swift_release();
  swift_release();
  sub_24172588C((uint64_t)v14, (uint64_t (*)(_QWORD))sub_24178464C);
  v72 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC140);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  v72 = v45;
  v73 = v58;
  v74 = v54;
  v75 = v55;
  swift_getOpaqueTypeConformance2();
  v46 = v69;
  v47 = (uint64_t)v70;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v44, v46);
  v48 = v68;
  sub_241784AEC(v47, v68);
  sub_241784B48(v48, v47);
  v49 = v65;
  *v65 = 0;
  *((_BYTE *)v49 + 8) = 1;
  v49[2] = v64;
  *((_BYTE *)v49 + 24) = v63;
  v49[4] = v62;
  *((_BYTE *)v49 + 40) = v61;
  v50 = v59;
  v49[6] = v60;
  v49[7] = v50;
  sub_2417844FC();
  sub_241784B48(v47, (uint64_t)v49 + *(int *)(v51 + 48));
  v52 = MEMORY[0x24BDF1088];
  sub_241784BA4(v48, (uint64_t)&qword_25714E178, (uint64_t)sub_2417845A0, (uint64_t)MEMORY[0x24BDF1088], (uint64_t (*)(_QWORD))sub_241728250);
  return sub_241784BA4(v47, (uint64_t)&qword_25714E178, (uint64_t)sub_2417845A0, (uint64_t)v52, (uint64_t (*)(_QWORD))sub_241728250);
}

uint64_t sub_241783CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  ValueMetadata *v13;
  ValueMetadata *v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t *v19;
  _BYTE v21[16];
  uint64_t v22;
  ValueMetadata *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  sub_2417846D0();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = a1;
  sub_2417847CC(0);
  sub_24178023C(255);
  v11 = v10;
  v12 = sub_241784898();
  sub_2417802C8();
  v14 = v13;
  v15 = sub_24172159C(&qword_25714DF30, (uint64_t (*)(uint64_t))sub_2417802C8, MEMORY[0x24BDEB848]);
  v23 = v14;
  v24 = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v23 = &type metadata for NotificationSOMSettingsView;
  v24 = v11;
  v25 = v12;
  v26 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_2418A8814();
  KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 16))(a2, v9, v5);
  sub_241728250(0, &qword_25714E190, (void (*)(uint64_t))sub_2417846D0, (void (*)(uint64_t))sub_24173EF74);
  v19 = (uint64_t *)(a2 + *(int *)(v18 + 36));
  *v19 = KeyPath;
  v19[1] = 0;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_241783E74()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NotificationSettingsModel()), sel_init);
  if (qword_25714B958 != -1)
    swift_once();
  v1 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v5 = (void *)v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_24178023C(0);
  sub_241784898();
  sub_2417802C8();
  sub_24172159C(&qword_25714DF30, (uint64_t (*)(uint64_t))sub_2417802C8, MEMORY[0x24BDEB848]);
  swift_getOpaqueTypeConformance2();
  sub_2418A9528();
  sub_241784C24((uint64_t)sub_241784C14, v5, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_241784058(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;

  v2 = sub_2418A8DB4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2417802C8();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2418A8D90();
  v13 = a1;
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  sub_241731344();
  sub_2418A8580();
  v10 = sub_24172159C(&qword_25714DF30, (uint64_t (*)(uint64_t))sub_2417802C8, MEMORY[0x24BDEB848]);
  MEMORY[0x24269B628](v9, v5, v10);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_2417841A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v2 = type metadata accessor for EditButton();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  if (qword_25714B958 != -1)
    swift_once();
  v6 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v7 = sub_2418A7EFC();
  v9 = v8;
  swift_bridgeObjectRelease();

  v13[0] = v7;
  v13[1] = v9;
  sub_241784A14(a1, (uint64_t)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  sub_241784A5C((uint64_t)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  sub_241721040();
  return sub_2418A9714();
}

uint64_t sub_241784324()
{
  sub_24172887C(0, (unint64_t *)&qword_25714D018, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0]);
  swift_retain();
  sub_2418A96CC();
  sub_2418A96D8();
  return swift_release();
}

uint64_t sub_2417843C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418617E4((uint64_t)v6);
  sub_24172588C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for NotificationsSetupPhaseSpecs);
  *(_QWORD *)a1 = sub_2418A8B8C();
  *(_QWORD *)(a1 + 8) = 0x4024000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  sub_241784480();
  return sub_24178361C(v1, (_QWORD *)(a1 + *(int *)(v7 + 44)));
}

void sub_241784480()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E160)
  {
    sub_24172570C(255, &qword_25714E168, (uint64_t (*)(uint64_t))sub_2417844FC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E160);
  }
}

void sub_2417844FC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714E170)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C0A8, MEMORY[0x24BDF4638], MEMORY[0x24BDEBEF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_241728250(255, &qword_25714E178, sub_2417845A0, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714E170);
  }
}

void sub_2417845A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_25714E180)
  {
    sub_24178464C();
    v3 = v2;
    sub_241728250(255, &qword_25714E190, (void (*)(uint64_t))sub_2417846D0, (void (*)(uint64_t))sub_24173EF74);
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_2417848DC();
    v7[3] = sub_24178495C();
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF3650], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714E180);
  }
}

void sub_24178464C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E188)
  {
    sub_24172835C(255, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    sub_24173EF74();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E188);
  }
}

void sub_2417846D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E198)
  {
    sub_2418A8754();
    sub_2417847CC(255);
    sub_24178023C(255);
    sub_241784898();
    sub_2417802C8();
    sub_24172159C(&qword_25714DF30, (uint64_t (*)(uint64_t))sub_2417802C8, MEMORY[0x24BDEB848]);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    v0 = sub_2418A8820();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E198);
  }
}

void sub_2417847CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_25714E1A0)
  {
    sub_24178023C(255);
    v3 = v2;
    v4 = sub_241784898();
    sub_2417802C8();
    sub_24172159C(&qword_25714DF30, (uint64_t (*)(uint64_t))sub_2417802C8, MEMORY[0x24BDEB848]);
    v7[0] = &type metadata for NotificationSOMSettingsView;
    v7[1] = v3;
    v7[2] = v4;
    v7[3] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF3858], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714E1A0);
  }
}

unint64_t sub_241784898()
{
  unint64_t result;

  result = qword_25714E1A8;
  if (!qword_25714E1A8)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for NotificationSOMSettingsView, &type metadata for NotificationSOMSettingsView);
    atomic_store(result, (unint64_t *)&qword_25714E1A8);
  }
  return result;
}

unint64_t sub_2417848DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714E1B0;
  if (!qword_25714E1B0)
  {
    sub_24178464C();
    v2 = v1;
    v3[0] = sub_241731344();
    v3[1] = sub_24172159C((unint64_t *)&qword_25714C9E8, (uint64_t (*)(uint64_t))sub_24173EF74, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714E1B0);
  }
  return result;
}

unint64_t sub_24178495C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714E1B8;
  if (!qword_25714E1B8)
  {
    sub_241728250(255, &qword_25714E190, (void (*)(uint64_t))sub_2417846D0, (void (*)(uint64_t))sub_24173EF74);
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714E1C0, (uint64_t (*)(uint64_t))sub_2417846D0, MEMORY[0x24BDED358]);
    v3[1] = sub_24172159C((unint64_t *)&qword_25714C9E8, (uint64_t (*)(uint64_t))sub_24173EF74, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714E1B8);
  }
  return result;
}

uint64_t sub_241784A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EditButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241784A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EditButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241784AB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EditButton() - 8) + 80);
  return sub_241783CEC(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_241784AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241728250(0, &qword_25714E178, sub_2417845A0, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241784B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241728250(0, &qword_25714E178, sub_2417845A0, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241784BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;

  v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_241784BE0()
{
  return sub_241783E74();
}

uint64_t sub_241784BF0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_241784C14()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_241784C1C()
{
  uint64_t v0;

  return sub_241784058(*(_QWORD *)(v0 + 16));
}

void sub_241784C24(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release();
}

uint64_t sub_241784C34()
{
  uint64_t v0;

  return sub_2417841A4(*(_QWORD *)(v0 + 16));
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for EditButton();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 28);
  sub_24172570C(0, &qword_25714D428, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v6 = v3 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    v7 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241784D64()
{
  type metadata accessor for EditButton();
  return sub_241784324();
}

uint64_t sub_241784D94()
{
  return sub_24172159C(&qword_25714E1C8, (uint64_t (*)(uint64_t))sub_241784DC0, MEMORY[0x24BDF4498]);
}

void sub_241784DC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E1D0)
  {
    sub_24172570C(255, &qword_25714E168, (uint64_t (*)(uint64_t))sub_2417844FC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_241784E38();
    v0 = sub_2418A972C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E1D0);
  }
}

unint64_t sub_241784E38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714E1D8;
  if (!qword_25714E1D8)
  {
    sub_24172570C(255, &qword_25714E168, (uint64_t (*)(uint64_t))sub_2417844FC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_25714E1D8);
  }
  return result;
}

_QWORD *sub_241784E98(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v22;
  _QWORD *v23;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v9;
    *(_WORD *)(a1 + 80) = *((_WORD *)a2 + 40);
    v10 = a2[12];
    v11 = a2[13];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v10;
    v12 = *(int *)(a3 + 52);
    v23 = (_QWORD *)(a1 + v12);
    v22 = (uint64_t *)((char *)a2 + v12);
    *(_QWORD *)(a1 + 104) = v11;
    sub_2417768DC(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2418A8EB0();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v22, 1, v13))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v23, v22, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 16))(v23, v22, v13);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
      }
      v17 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v18 = (char *)v23 + v17;
      v19 = (char *)v22 + v17;
      v20 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *v23 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_2417850C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 52);
  sub_2417768DC(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_2417851CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v20;
  _QWORD *v21;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  v11 = *(int *)(a3 + 52);
  v21 = (_QWORD *)(a1 + v11);
  v20 = (_QWORD *)(a2 + v11);
  *(_QWORD *)(a1 + 104) = v10;
  sub_2417768DC(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2418A8EB0();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v20, 1, v12))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v21, v20, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v21, v20, v12);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    }
    v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v16 = (char *)v21 + v15;
    v17 = (char *)v20 + v15;
    v18 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *v21 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2417853C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 52);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_24172588C(a1 + v7, (uint64_t (*)(_QWORD))sub_2417768DC);
    sub_2417768DC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241785624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v5 = *(int *)(a3 + 52);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  sub_2417768DC(0);
  v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A8EB0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v14 = &v6[v13];
    v15 = &v7[v13];
    v16 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2417857A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 52);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    sub_24172588C(a1 + v7, (uint64_t (*)(_QWORD))sub_2417768DC);
    sub_2417768DC(0);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417859BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417859C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 52), a2, v8);
  }
}

uint64_t sub_241785A5C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241785A68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714D9D8, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 52), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DomainsSelectionPhaseContent()
{
  uint64_t result;

  result = qword_25714E238;
  if (!qword_25714E238)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241785B30()
{
  unint64_t v0;

  sub_2417768DC(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241785BE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241785BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t (*v86)(void);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  uint64_t v156;
  char v157;
  _BYTE v158[24];
  uint64_t v159;
  _UNKNOWN **v160;
  _BYTE v161[24];
  uint64_t v162;
  __int128 v163;
  uint64_t v164;
  char v165;
  uint64_t (*v166)@<X0>(uint64_t@<X8>);
  uint64_t v167;

  v152 = a2;
  v140 = type metadata accessor for DomainsSelectionPhaseContent();
  v134 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140, v3);
  v135 = v4;
  v136 = (uint64_t)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174DAC0(0, v5, v6, v7);
  MEMORY[0x24BDAC7A8](v8, v9);
  v138 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241786A20(0);
  v149 = v11;
  v150 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v137 = (uint64_t)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241786A04(0);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v151 = (uint64_t)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v148 = (uint64_t)&v133 - v19;
  v146 = (char *)type metadata accessor for DomainsAndContextEntry();
  v21 = MEMORY[0x24BDAC7A8](v146, v20);
  v23 = (char *)&v133 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v154 = (uint64_t)&v133 - v25;
  v145 = type metadata accessor for AssociationSelectionPhaseSpecs();
  v27 = MEMORY[0x24BDAC7A8](v145, v26);
  v144 = (uint64_t)&v133 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v142 = (char *)&v133 - v31;
  MEMORY[0x24BDAC7A8](v30, v32);
  v141 = (char *)&v133 - v33;
  sub_241786A34(0);
  MEMORY[0x24BDAC7A8](v34, v35);
  v37 = (uint64_t *)((char *)&v133 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = type metadata accessor for ValenceSelectionSummary();
  MEMORY[0x24BDAC7A8](v38, v39);
  v41 = (char *)&v133 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24178699C(0);
  v43 = v42;
  MEMORY[0x24BDAC7A8](v42, v44);
  v46 = (char *)&v133 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241786988(0);
  *(_QWORD *)&v143 = v47;
  v49 = MEMORY[0x24BDAC7A8](v47, v48);
  v147 = (uint64_t)&v133 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x24BDAC7A8](v49, v51);
  v54 = (char *)&v133 - v53;
  MEMORY[0x24BDAC7A8](v52, v55);
  v153 = (uint64_t)&v133 - v56;
  v57 = *(_QWORD *)a1;
  v58 = *(_QWORD *)(a1 + 8);
  v59 = *(_BYTE *)(a1 + 80);
  *v37 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v41 = v57;
  *((_QWORD *)v41 + 1) = v58;
  v41[16] = v59;
  v60 = (uint64_t *)&v41[*(int *)(v38 + 28)];
  *v60 = swift_getKeyPath();
  sub_2417768DC(0);
  v139 = v61;
  swift_storeEnumTagMultiPayload();
  sub_241731B4C((uint64_t)v37, (uint64_t)&v41[*(int *)(v38 + 32)], (uint64_t (*)(_QWORD))sub_241786A34);
  swift_bridgeObjectRetain();
  v62 = sub_2418A90F0();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 8) + 16))
    v63 = (uint64_t)v142;
  else
    v63 = (uint64_t)v141;
  sub_241861594(v63);
  sub_24172588C(v63, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A84A8();
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v70;
  sub_2417289A8((uint64_t)v41, (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionSummary);
  v72 = &v46[*(int *)(v43 + 36)];
  *v72 = v62;
  *((_QWORD *)v72 + 1) = v65;
  *((_QWORD *)v72 + 2) = v67;
  *((_QWORD *)v72 + 3) = v69;
  *((_QWORD *)v72 + 4) = v71;
  v72[40] = 0;
  sub_24172588C((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionSummary);
  v73 = sub_2418A90E4();
  v74 = v144;
  sub_241861594(v144);
  sub_2417CC1B0(*(_BYTE *)(a1 + 80));
  v75 = v74;
  sub_24172588C(v74, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2418A84A8();
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v83 = v82;
  sub_2417289A8((uint64_t)v46, (uint64_t)v54, (uint64_t (*)(_QWORD))sub_24178699C);
  v84 = &v54[*(int *)(v143 + 36)];
  *v84 = v73;
  *((_QWORD *)v84 + 1) = v77;
  *((_QWORD *)v84 + 2) = v79;
  *((_QWORD *)v84 + 3) = v81;
  *((_QWORD *)v84 + 4) = v83;
  v84[40] = 0;
  sub_24172588C((uint64_t)v46, (uint64_t (*)(_QWORD))sub_24178699C);
  sub_241731B4C((uint64_t)v54, v153, (uint64_t (*)(_QWORD))sub_241786988);
  v85 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v158 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)&v158[8] = *(_OWORD *)(a1 + 32);
  v86 = MEMORY[0x24BDF4870];
  sub_24172570C(0, &qword_25714E2C8, (uint64_t (*)(uint64_t))sub_241786A5C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  swift_bridgeObjectRetain();
  sub_2418A9828();
  v87 = *(_QWORD *)v161;
  sub_24172887C(0, &qword_25714E2D8, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))v86);
  v143 = *(_OWORD *)&v161[8];
  v88 = *(_QWORD *)(a1 + 64);
  v89 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)v158 = *(_OWORD *)(a1 + 48);
  *(_QWORD *)&v158[16] = v88;
  v159 = v89;
  sub_2418A9828();
  v90 = *(_OWORD *)v161;
  v91 = *(_QWORD *)&v161[16];
  v92 = v162;
  v93 = *(_BYTE *)(a1 + 81);
  v94 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)v23 = v85;
  *((_QWORD *)v23 + 1) = v87;
  v95 = v145;
  *((_OWORD *)v23 + 1) = v143;
  *((_OWORD *)v23 + 2) = v90;
  *((_QWORD *)v23 + 6) = v91;
  *((_QWORD *)v23 + 7) = v92;
  v23[64] = v93;
  *((_QWORD *)v23 + 9) = v94;
  v96 = (uint64_t)v146;
  v97 = (uint64_t *)&v23[*((int *)v146 + 9)];
  *v97 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v98 = &v23[*(int *)(v96 + 40)];
  v158[0] = 0;
  sub_2418A96C0();
  v99 = *(_QWORD *)&v161[8];
  *v98 = v161[0];
  *((_QWORD *)v98 + 1) = v99;
  v146 = v23;
  sub_241731B4C((uint64_t)v23, v154, (uint64_t (*)(_QWORD))type metadata accessor for DomainsAndContextEntry);
  sub_241861594(v75);
  LOBYTE(v98) = sub_2418A879C();
  sub_24172588C(v75, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
  if ((v98 & 1) != 0)
  {
    v100 = *(_QWORD *)a1;
    v159 = v95;
    v160 = &off_2511B05C8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v158);
    sub_241861594((uint64_t)boxed_opaque_existential_1);
    v102 = v136;
    sub_2417289A8(a1, v136, (uint64_t (*)(_QWORD))type metadata accessor for DomainsSelectionPhaseContent);
    v103 = (*(unsigned __int8 *)(v134 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
    v104 = swift_allocObject();
    sub_241731B4C(v102, v104 + v103, (uint64_t (*)(_QWORD))type metadata accessor for DomainsSelectionPhaseContent);
    *(_QWORD *)v161 = v100;
    v161[8] = 0;
    sub_24172887C(0, (unint64_t *)&qword_25714D7D0, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2418A9840();
    v163 = v155;
    v164 = v156;
    v165 = v157;
    sub_24174DE50((__int128 *)v158, (uint64_t)&v161[16]);
    *(_QWORD *)v161 = sub_241786BB4;
    *(_QWORD *)&v161[8] = v104;
    v166 = sub_24178674C;
    v167 = 0;
    *(_QWORD *)v158 = &unk_2511AB450;
    sub_2417739BC((uint64_t)&unk_2511AC170);
    sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_241731AEC();
    sub_2418A9D50();
    swift_bridgeObjectRelease();
    sub_24174DB24(0, v105, v106, v107);
    sub_24172159C((unint64_t *)&qword_25714CE58, (uint64_t (*)(uint64_t))sub_24174DB24, (uint64_t)&unk_2418DA5E8);
    v108 = (uint64_t)v138;
    sub_2418A9450();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_24172588C((uint64_t)v161, (uint64_t (*)(_QWORD))sub_24174DB24);
    v109 = sub_2418A90E4();
    sub_241861594(v75);
    sub_24172588C(v75, (uint64_t (*)(_QWORD))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_2418A84A8();
    v111 = v110;
    v113 = v112;
    v115 = v114;
    v117 = v116;
    v118 = v137;
    sub_2417289A8(v108, v137, (uint64_t (*)(_QWORD))sub_24174DAC0);
    v119 = v149;
    v120 = v118 + *(int *)(v149 + 36);
    *(_BYTE *)v120 = v109;
    *(_QWORD *)(v120 + 8) = v111;
    *(_QWORD *)(v120 + 16) = v113;
    *(_QWORD *)(v120 + 24) = v115;
    *(_QWORD *)(v120 + 32) = v117;
    *(_BYTE *)(v120 + 40) = 0;
    sub_24172588C(v108, (uint64_t (*)(_QWORD))sub_24174DAC0);
    v121 = v148;
    sub_241731B4C(v118, v148, (uint64_t (*)(_QWORD))sub_241786A20);
    v122 = 0;
    v123 = v119;
  }
  else
  {
    v122 = 1;
    v121 = v148;
    v123 = v149;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v150 + 56))(v121, v122, 1, v123);
  v124 = v153;
  v125 = v147;
  sub_2417289A8(v153, v147, (uint64_t (*)(_QWORD))sub_241786988);
  v126 = v154;
  v127 = (uint64_t)v146;
  sub_2417289A8(v154, (uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for DomainsAndContextEntry);
  v128 = v151;
  sub_2417289A8(v121, v151, (uint64_t (*)(_QWORD))sub_241786A04);
  v129 = v152;
  sub_2417289A8(v125, v152, (uint64_t (*)(_QWORD))sub_241786988);
  sub_241786904();
  v131 = v130;
  sub_2417289A8(v127, v129 + *(int *)(v130 + 48), (uint64_t (*)(_QWORD))type metadata accessor for DomainsAndContextEntry);
  sub_2417289A8(v128, v129 + *(int *)(v131 + 64), (uint64_t (*)(_QWORD))sub_241786A04);
  sub_24172588C(v121, (uint64_t (*)(_QWORD))sub_241786A04);
  sub_24172588C(v126, (uint64_t (*)(_QWORD))type metadata accessor for DomainsAndContextEntry);
  sub_24172588C(v124, (uint64_t (*)(_QWORD))sub_241786988);
  sub_24172588C(v128, (uint64_t (*)(_QWORD))sub_241786A04);
  sub_24172588C(v127, (uint64_t (*)(_QWORD))type metadata accessor for DomainsAndContextEntry);
  return sub_24172588C(v125, (uint64_t (*)(_QWORD))sub_241786988);
}

uint64_t sub_24178674C@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_25714B958 != -1)
    swift_once();
  v2 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  sub_241721040();
  result = sub_2418A92D0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_241786844@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2418A8C58();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_241786884();
  return sub_241785BF8(v1, a1 + *(int *)(v3 + 44));
}

void sub_241786884()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E290)
  {
    sub_2417868E8(255);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E290);
  }
}

void sub_2417868E8(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E298, (uint64_t (*)(uint64_t))sub_241786904, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241786904()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714E2A0)
  {
    sub_241786988(255);
    type metadata accessor for DomainsAndContextEntry();
    sub_241786A04(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714E2A0);
  }
}

void sub_241786988(uint64_t a1)
{
  sub_2417869B0(a1, &qword_25714E2A8, sub_24178699C);
}

void sub_24178699C(uint64_t a1)
{
  sub_2417869B0(a1, &qword_25714E2B0, (void (*)(uint64_t))type metadata accessor for ValenceSelectionSummary);
}

void sub_2417869B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_241786A04(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E2B8, (uint64_t (*)(uint64_t))sub_241786A20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_241786A20(uint64_t a1)
{
  sub_2417869B0(a1, &qword_25714E2C0, (void (*)(uint64_t))sub_24174DAC0);
}

void sub_241786A34(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
}

void sub_241786A5C(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E2D0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t sub_241786A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for DomainsSelectionPhaseContent();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 52);
  sub_2417768DC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v6 = v3 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    v7 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241786BB4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DomainsSelectionPhaseContent() - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 96))();
}

uint64_t sub_241786BF0()
{
  return sub_24172159C(&qword_25714E2E0, (uint64_t (*)(uint64_t))sub_241786C1C, MEMORY[0x24BDF4700]);
}

void sub_241786C1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E2E8)
  {
    sub_2417868E8(255);
    sub_24172159C(&qword_25714E2F0, (uint64_t (*)(uint64_t))sub_2417868E8, MEMORY[0x24BDF5428]);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E2E8);
  }
}

ValueMetadata *type metadata accessor for TagLayout()
{
  return &type metadata for TagLayout;
}

uint64_t sub_241786CA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void (*v4)(_QWORD *, _QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[5];

  sub_2418A8724();
  sub_241787A2C();
  sub_2418A9F90();
  sub_2418A9FA8();
  if (v9[4] == v9[0])
  {
    v2 = sub_2418A86C4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    v4 = (void (*)(_QWORD *, _QWORD))sub_2418A9FC0();
    v6 = v5;
    v7 = sub_2418A86C4();
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
    v4(v9, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

double sub_241786DA4(uint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, double a6, double a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  double v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  char *v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double *v44;
  uint64_t v45;
  uint64_t v46;
  double *v47;
  double v48;
  double v50;
  uint64_t v51;
  double v52;
  double v53;
  unint64_t v54;
  double v55;
  double v56;
  double v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  char *v64;
  int v65;
  __int128 v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v67 = a3;
  v68 = *(double *)&a1;
  v71 = *MEMORY[0x24BDAC8D0];
  sub_241787948();
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2418A86C4();
  v16 = *(_QWORD *)(v15 - 8);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v21);
  v23 = (char *)&v64 - v22;
  sub_241786CA4((uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    v65 = a4;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v23, v14, v15);
    sub_2418A88B0();
    LOBYTE(v70) = v25 & 1;
    LOBYTE(v69) = v26 & 1;
    sub_2418A86AC();
    v28 = v27;
    v30 = v29;
    sub_2417879D8();
    inited = swift_initStackObject();
    v66 = xmmword_2418D23E0;
    *(_OWORD *)(inited + 16) = xmmword_2418D23E0;
    *(_QWORD *)(inited + 32) = v28;
    v32 = a5;
    v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = v66;
    *(_QWORD *)(v33 + 32) = v30;
    sub_2418A8724();
    sub_241787A2C();
    sub_2418A9F90();
    *(_QWORD *)&v66 = v32;
    sub_2418A9FA8();
    v34 = v69;
    if (v69 >= v70)
    {
      if (__OFSUB__(v69, v70))
      {
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      v64 = v23;
      if (v69 == v70)
        goto LABEL_10;
      v35 = v70 + 1;
      if (__OFADD__(v70, 1))
        goto LABEL_46;
      if (v35 < v70 || v69 < v35)
        goto LABEL_47;
      if (v35 == v69)
      {
LABEL_10:
        v36 = *(_QWORD *)(inited + 16);
        if (v36)
        {
          v37 = (double *)(inited + 32);
          v24 = 0.0;
          v38 = v64;
          do
          {
            v39 = *v37++;
            v40 = v39;
            if (v24 <= v39)
              v24 = v40;
            --v36;
          }
          while (v36);
          v41 = *(_QWORD *)(v33 + 16);
          if (!v41)
            goto LABEL_25;
        }
        else
        {
          v24 = 0.0;
          v38 = v64;
          v41 = *(_QWORD *)(v33 + 16);
          if (!v41)
            goto LABEL_25;
        }
        if (v41 == 1)
        {
          v42 = 0;
          v43 = 0.0;
        }
        else
        {
          v42 = v41 & 0x7FFFFFFFFFFFFFFELL;
          v44 = (double *)(v33 + 40);
          v43 = 0.0;
          v45 = v41 & 0x7FFFFFFFFFFFFFFELL;
          do
          {
            v43 = v43 + *(v44 - 1) + *v44;
            v44 += 2;
            v45 -= 2;
          }
          while (v45);
          if (v41 == v42)
            goto LABEL_25;
        }
        v46 = v41 - v42;
        v47 = (double *)(v33 + 8 * v42 + 32);
        do
        {
          v48 = *v47++;
          v43 = v43 + v48;
          --v46;
        }
        while (v46);
LABEL_25:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v38, v15);
        swift_bridgeObjectRelease();
        return v24;
      }
      if (v35 >= v69)
LABEL_48:
        __break(1u);
      v50 = v68;
      v65 &= 1u;
      while (1)
      {
        v51 = v15;
        sub_2418A8730();
        LOBYTE(v70) = a2 & 1;
        LOBYTE(v69) = v65;
        sub_2418A86AC();
        v54 = *(_QWORD *)(inited + 16);
        if (!v54)
          break;
        v55 = v52;
        v56 = v53;
        v57 = v52 + a7 + *(double *)(inited + 32 + 8 * (v54 - 1));
        if ((a2 & 1) != 0 || v57 <= v50)
        {
          *(double *)(inited + 32 + 8 * (v54 - 1)) = v57;
          v61 = *(_QWORD *)(v33 + 16);
          if (!v61)
            goto LABEL_43;
          v62 = v33 + 8 * v61;
          v63 = *(double *)(v62 + 24);
          if (v63 <= v53)
            v63 = v53;
          *(double *)(v62 + 24) = v63;
        }
        else
        {
          v58 = *(_QWORD *)(inited + 24);
          if (v54 >= v58 >> 1)
            inited = (uint64_t)sub_241802EFC((_QWORD *)(v58 > 1), v54 + 1, 1, (_QWORD *)inited);
          *(_QWORD *)(inited + 16) = v54 + 1;
          *(double *)(inited + 8 * v54 + 32) = v55;
          v60 = *(_QWORD *)(v33 + 16);
          v59 = *(_QWORD *)(v33 + 24);
          if (v60 >= v59 >> 1)
            v33 = (uint64_t)sub_241802EFC((_QWORD *)(v59 > 1), v60 + 1, 1, (_QWORD *)v33);
          *(_QWORD *)(v33 + 16) = v60 + 1;
          *(double *)(v33 + 8 * v60 + 32) = v56;
        }
        ++v35;
        v15 = v51;
        (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v51);
        if (v34 == v35)
          goto LABEL_10;
      }
      __break(1u);
LABEL_43:
      __break(1u);
    }
    __break(1u);
    goto LABEL_45;
  }
  sub_24178799C((uint64_t)v14);
  return 0.0;
}

uint64_t sub_24178726C(uint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10, double a11)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t inited;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, _QWORD);
  double v48;
  double v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  double *v56;
  double v57;
  uint64_t v58;
  double v59;
  unint64_t v60;
  unint64_t v61;
  double v62;
  double *v63;
  unint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  double v75;
  double v76;
  double v77;
  __int128 v78;
  uint64_t v79;
  double v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;

  v80 = a10;
  v82 = a4;
  v81 = a3;
  v85 = *MEMORY[0x24BDAC8D0];
  sub_241787948();
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2418A86C4();
  v24 = *(_QWORD *)(v23 - 8);
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v29);
  v31 = (char *)&v74 - v30;
  sub_241786CA4((uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
    return sub_24178799C((uint64_t)v22);
  v79 = v24;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v31, v22, v23);
  sub_2418A88B0();
  v34 = v33;
  v36 = v35;
  sub_2418A99F0();
  LOBYTE(v84) = v34 & 1;
  LOBYTE(v83) = v36 & 1;
  sub_2418A86B8();
  sub_2418A88B0();
  LOBYTE(v84) = v37 & 1;
  LOBYTE(v83) = v38 & 1;
  v74 = v31;
  sub_2418A86AC();
  v40 = v39;
  v42 = v41;
  sub_2417879D8();
  inited = swift_initStackObject();
  v78 = xmmword_2418D23E0;
  *(_OWORD *)(inited + 16) = xmmword_2418D23E0;
  *(_QWORD *)(inited + 32) = v40;
  v44 = swift_initStackObject();
  *(_OWORD *)(v44 + 16) = v78;
  *(_QWORD *)(v44 + 32) = v42;
  sub_2418A8724();
  sub_241787A2C();
  sub_2418A9F90();
  sub_2418A9FA8();
  v45 = v83;
  if (v83 < v84)
    goto LABEL_42;
  if (__OFSUB__(v83, v84))
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v83 == v84)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v74, v23);
    return swift_bridgeObjectRelease();
  }
  v46 = v84 + 1;
  if (__OFADD__(v84, 1))
    goto LABEL_44;
  if (v46 < v84 || v83 < v46)
LABEL_45:
    __break(1u);
  if (v46 == v83)
    goto LABEL_10;
  *(_QWORD *)&v78 = v23;
  v75 = *(double *)&a1;
  v77 = a11;
  v76 = a9;
  do
  {
    if (v46 >= v45)
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    sub_2418A8730();
    LOBYTE(v84) = a2 & 1;
    LOBYTE(v83) = v82 & 1;
    sub_2418A86AC();
    v50 = *(_QWORD *)(inited + 16);
    if (!v50)
      goto LABEL_38;
    v51 = v48;
    v52 = v49;
    v53 = a5;
    v54 = v48 + a11;
    v55 = inited + 32;
    if ((a2 & 1) != 0 || v54 + *(double *)(v55 + 8 * v50 - 8) <= v75)
    {
      v87.origin.x = a6;
      v87.origin.y = a7;
      v87.size.width = a8;
      v87.size.height = a9;
      CGRectGetMinX(v87);
      if (!*(_QWORD *)(inited + 16))
        goto LABEL_39;
      v88.size.height = a9;
      v88.origin.x = a6;
      v88.origin.y = a7;
      v88.size.width = a8;
      CGRectGetMinY(v88);
      v60 = *(_QWORD *)(v44 + 16);
      v61 = v60 - 1;
      v62 = 0.0;
      if (v60 >= 2)
      {
        v63 = (double *)(v44 + 32);
        v64 = v61;
        do
        {
          v65 = *v63++;
          v62 = v62 + v65;
          --v64;
        }
        while (v64);
      }
      sub_2418A99F0();
      LOBYTE(v84) = a2 & 1;
      LOBYTE(v83) = v82 & 1;
      sub_2418A86B8();
      v66 = *(_QWORD *)(inited + 16);
      if (!v66)
        goto LABEL_40;
      *(double *)(v55 + 8 * v66 - 8) = v54 + *(double *)(v55 + 8 * v66 - 8);
      v67 = *(_QWORD *)(v44 + 16);
      if (!v67)
        goto LABEL_41;
      v68 = v44 + 8 * v67;
      v69 = *(double *)(v68 + 24);
      if (v69 <= v52)
        v69 = v52;
      *(double *)(v68 + 24) = v69;
      a11 = v77;
      a9 = v76;
    }
    else
    {
      v86.origin.x = a6;
      v86.origin.y = a7;
      v86.size.width = a8;
      v86.size.height = a9;
      CGRectGetMinY(v86);
      if (*(_QWORD *)(v44 + 16))
      {
        v56 = (double *)(v44 + 32);
        v57 = 0.0;
        v58 = *(_QWORD *)(v44 + 16);
        do
        {
          v59 = *v56++;
          v57 = v57 + v59;
          --v58;
        }
        while (v58);
      }
      v89.origin.x = a6;
      v89.origin.y = a7;
      v89.size.width = a8;
      v89.size.height = a9;
      CGRectGetMinX(v89);
      sub_2418A99F0();
      LOBYTE(v84) = 0;
      LOBYTE(v83) = v82 & 1;
      sub_2418A86B8();
      v71 = *(_QWORD *)(inited + 16);
      v70 = *(_QWORD *)(inited + 24);
      if (v71 >= v70 >> 1)
        inited = (uint64_t)sub_241802EFC((_QWORD *)(v70 > 1), v71 + 1, 1, (_QWORD *)inited);
      *(_QWORD *)(inited + 16) = v71 + 1;
      *(double *)(inited + 8 * v71 + 32) = v51;
      v73 = *(_QWORD *)(v44 + 16);
      v72 = *(_QWORD *)(v44 + 24);
      a11 = v77;
      a9 = v76;
      if (v73 >= v72 >> 1)
        v44 = (uint64_t)sub_241802EFC((_QWORD *)(v72 > 1), v73 + 1, 1, (_QWORD *)v44);
      *(_QWORD *)(v44 + 16) = v73 + 1;
      *(double *)(v44 + 8 * v73 + 32) = v52;
    }
    ++v46;
    v47 = *(void (**)(char *, _QWORD))(v79 + 8);
    v47(v28, v78);
    a5 = v53;
  }
  while (v46 != v45);
  swift_bridgeObjectRelease();
  v47(v74, v78);
  return swift_bridgeObjectRelease();
}

double sub_2417878C8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  double *v5;

  return sub_241786DA4(a1, a2 & 1, a3, a4 & 1, a5, *v5, v5[1]);
}

uint64_t sub_2417878E4(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  double *v9;

  return sub_24178726C(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9, *v9, v9[1]);
}

unint64_t sub_241787904()
{
  unint64_t result;

  result = qword_25714E2F8;
  if (!qword_25714E2F8)
  {
    result = MEMORY[0x24269D47C](&unk_2418D3DBC, &type metadata for TagLayout);
    atomic_store(result, (unint64_t *)&qword_25714E2F8);
  }
  return result;
}

void sub_241787948()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D9B0)
  {
    sub_2418A86C4();
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D9B0);
  }
}

uint64_t sub_24178799C(uint64_t a1)
{
  uint64_t v2;

  sub_241787948();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2417879D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E300)
  {
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E300);
  }
}

unint64_t sub_241787A2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714D9D0;
  if (!qword_25714D9D0)
  {
    v1 = sub_2418A8724();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEC7A0], v1);
    atomic_store(result, (unint64_t *)&qword_25714D9D0);
  }
  return result;
}

uint64_t *sub_241787A74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2418A87CC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_241787C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2418A87CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 24);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_241787D04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2418A87CC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_241787E64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED130];
    sub_24172B778((uint64_t)a1 + v6, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130]);
    sub_24172570C(0, &qword_25714C668, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A87CC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v11 = *(int *)(a3 + 24);
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1 + v11, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_24178800C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A87CC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v16 = v15;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v13, v14, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_241788164(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED130];
    sub_24172B778((uint64_t)a1 + v6, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130]);
    sub_24172570C(0, &qword_25714C668, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A87CC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v13 = *(int *)(a3 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1 + v13, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v16, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24178830C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241788318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714C680, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2417883E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417883F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714C680, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ValenceSliderStyle()
{
  uint64_t result;

  result = qword_25714E360;
  if (!qword_25714E360)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417884FC()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2417885BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417885CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v72 = a4;
  v7 = sub_2418A8F40();
  v64 = *(_QWORD *)(v7 - 8);
  v65 = v7;
  v67 = *(_QWORD *)(v64 + 64);
  MEMORY[0x24BDAC7A8](v7, v8);
  v62 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2418A8688();
  v58 = *(_QWORD *)(v10 - 8);
  v59 = v10;
  v63 = *(_QWORD *)(v58 + 64);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v13;
  v14 = type metadata accessor for ValenceSliderStyle();
  v57 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v57 + 64);
  MEMORY[0x24BDAC7A8](v14, v16);
  v56 = (uint64_t)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2418A8D54();
  MEMORY[0x24BDAC7A8](v17, v18);
  v66 = sub_2418A852C();
  v69 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66, v19);
  v55 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24173E628();
  v22 = *(_QWORD *)(v21 - 8);
  v70 = v21;
  v71 = v22;
  MEMORY[0x24BDAC7A8](v21, v23);
  v61 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24178948C();
  v68 = v25;
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (uint64_t *)((char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2418A8F28();
  v30 = v29;
  sub_2418A8670();
  v32 = v31;
  sub_2418A8670();
  if (v33 >= v32)
    v33 = v32;
  v34 = *a3 * v33;
  *v28 = sub_2418A996C();
  v28[1] = v35;
  v60 = v28;
  sub_241789758();
  sub_241788A44(a3, a1, (uint64_t)v28 + *(int *)(v36 + 44), v34, v30);
  sub_2418A8EBC();
  sub_2418A8508();
  v37 = v56;
  sub_2417289A8((uint64_t)a3, v56, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSliderStyle);
  v39 = v58;
  v38 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v13, a1, v59);
  v40 = v64;
  v41 = v65;
  v42 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v62, a2, v65);
  v43 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v44 = (v15 + *(unsigned __int8 *)(v39 + 80) + v43) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v45 = v40;
  v46 = (v63 + *(unsigned __int8 *)(v40 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v47 = swift_allocObject();
  sub_241731B4C(v37, v47 + v43, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSliderStyle);
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v47 + v44, v54, v38);
  (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v47 + v46, v42, v41);
  sub_24172159C(&qword_25714C8C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
  sub_24172159C(&qword_25714C8D0, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
  v48 = v61;
  v49 = v66;
  v50 = v55;
  sub_2418A98B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v50, v49);
  sub_2418A8544();
  sub_24172159C(&qword_25714E400, (uint64_t (*)(uint64_t))sub_24178948C, MEMORY[0x24BDF4750]);
  sub_24172159C(&qword_25714C8D8, (uint64_t (*)(uint64_t))sub_24173E628, MEMORY[0x24BDED570]);
  v51 = v70;
  v52 = (uint64_t)v60;
  sub_2418A94F8();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v48, v51);
  return sub_24172588C(v52, (uint64_t (*)(_QWORD))sub_24178948C);
}

uint64_t sub_241788A44@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  unsigned int *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t (*v52)(void);
  uint64_t v53;
  double v54;
  double v55;
  double v56;
  double *v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v91 = a2;
  v92 = a3;
  v82 = a1;
  v7 = sub_2418A99B4();
  v88 = *(_QWORD *)(v7 - 8);
  v89 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v87 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2418A84E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = v10;
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v82 - v18;
  sub_241789664();
  v86 = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (uint64_t *)((char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = sub_2418A9864();
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = v27;
  sub_241789588();
  v84 = v28;
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v90 = (uint64_t)&v82 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v35 = (char *)&v82 - v34;
  MEMORY[0x24BDAC7A8](v33, v36);
  v85 = (uint64_t)&v82 - v37;
  v38 = *MEMORY[0x24BDEEB68];
  v39 = sub_2418A8BE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v27, v38, v39);
  v40 = objc_msgSend((id)objc_opt_self(), sel_systemGray6Color);
  v41 = MEMORY[0x24269BDB4](v40);
  type metadata accessor for ValenceSliderStyle();
  v42 = v19;
  sub_241861034((uint64_t)v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v16, *MEMORY[0x24BDEB3F0], v12);
  LOBYTE(v38) = sub_2418A84D8();
  v43 = *(void (**)(char *, uint64_t))(v11 + 8);
  v44 = v12;
  v43(v16, v12);
  v45 = (unsigned int *)MEMORY[0x24BDF5098];
  v47 = v87;
  v46 = v88;
  if ((v38 & 1) == 0)
    v45 = (unsigned int *)MEMORY[0x24BDF5080];
  v48 = v89;
  (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v87, *v45, v89);
  v49 = v48;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))((char *)v23 + *(int *)(v86 + 36), v47, v48);
  *v23 = v41;
  v50 = *(void (**)(char *, uint64_t))(v46 + 8);
  swift_retain();
  v50(v47, v49);
  v43(v42, v44);
  swift_release();
  sub_2417289A8((uint64_t)v23, (uint64_t)&v35[*(int *)(v84 + 36)], (uint64_t (*)(_QWORD))sub_241789664);
  v51 = (uint64_t)v83;
  v52 = MEMORY[0x24BDF48E8];
  sub_2417289A8((uint64_t)v83, (uint64_t)v35, (uint64_t (*)(_QWORD))MEMORY[0x24BDF48E8]);
  sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))sub_241789664);
  sub_24172588C(v51, (uint64_t (*)(_QWORD))v52);
  v53 = v85;
  sub_241731B4C((uint64_t)v35, v85, (uint64_t (*)(_QWORD))sub_241789588);
  sub_2418A8670();
  v55 = v54;
  sub_2418A8670();
  if (v56 >= v55)
    v56 = v55;
  v57 = v82;
  v58 = *v82;
  v59 = v56 * (1.0 - (v58 + v58));
  sub_2418A8670();
  v61 = v60;
  sub_2418A8670();
  if (v62 >= v61)
    v62 = v61;
  v63 = v58 * v62;
  sub_2418A8670();
  v65 = v64 - v59 - (v63 + v63);
  v66 = *((_QWORD *)v57 + 1);
  swift_retain();
  sub_2418A9600();
  v67 = sub_2418A9624();
  swift_release();
  v68 = sub_2418A9114();
  sub_2418A84A8();
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v77 = v90;
  sub_2417289A8(v53, v90, (uint64_t (*)(_QWORD))sub_241789588);
  v78 = v92;
  sub_2417289A8(v77, v92, (uint64_t (*)(_QWORD))sub_241789588);
  sub_241789504();
  v80 = v78 + *(int *)(v79 + 48);
  *(_QWORD *)v80 = v66;
  *(_WORD *)(v80 + 8) = 256;
  *(_QWORD *)(v80 + 16) = v67;
  *(_OWORD *)(v80 + 24) = xmmword_2418D3E90;
  *(_QWORD *)(v80 + 40) = 0x3FF0000000000000;
  *(_BYTE *)(v80 + 48) = v68;
  *(_QWORD *)(v80 + 56) = v70;
  *(_QWORD *)(v80 + 64) = v72;
  *(_QWORD *)(v80 + 72) = v74;
  *(_QWORD *)(v80 + 80) = v76;
  *(_BYTE *)(v80 + 88) = 0;
  *(double *)(v80 + 96) = v65 * a5 + a4;
  *(_QWORD *)(v80 + 104) = 0;
  swift_retain();
  swift_retain();
  sub_24172588C(v53, (uint64_t (*)(_QWORD))sub_241789588);
  swift_release();
  swift_release();
  return sub_24172588C(v77, (uint64_t (*)(_QWORD))sub_241789588);
}

uint64_t sub_241788F30(uint64_t a1, double *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  char v34;
  void (*v35)(char *, uint64_t);
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v3 = sub_2418A87CC();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v41 - v10;
  sub_2418A8670();
  v13 = v12;
  sub_2418A8670();
  if (v14 >= v13)
    v14 = v13;
  v15 = *a2;
  v16 = 1.0 - (v15 + v15);
  v17 = v14 * v16;
  sub_2418A8670();
  v19 = v18;
  sub_2418A8670();
  if (v20 >= v19)
    v20 = v19;
  v21 = v15 * v20;
  sub_2418A8670();
  v23 = v22;
  sub_2418A8670();
  if (v24 >= v23)
    v24 = v23;
  v25 = v16 * v24;
  sub_2418A8670();
  v27 = v26;
  sub_2418A8670();
  if (v28 >= v27)
    v28 = v27;
  v29 = v15 * v28;
  sub_2418A8670();
  v31 = v30 - v25 - (v29 + v29);
  sub_2418A8520();
  v33 = v32 - v21 + v17 * -0.5;
  type metadata accessor for ValenceSliderStyle();
  sub_241861534((uint64_t)v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v8, *MEMORY[0x24BDED118], v3);
  v34 = sub_2418A87C0();
  v35 = *(void (**)(char *, uint64_t))(v4 + 8);
  v35(v8, v3);
  v35(v11, v3);
  v36 = v31 - v33;
  if ((v34 & 1) == 0)
    v36 = v33;
  v37 = v36 / v31;
  v44 = sub_2418A8F34();
  v45 = v38;
  v46 = v39;
  v42 = v37;
  v41 = xmmword_2418D3EA0;
  sub_2418A9D5C();
  *(_QWORD *)&v41 = v43;
  sub_241789A34();
  sub_2418A9810();
  swift_release();
  return swift_release();
}

uint64_t sub_241789164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = sub_2418A8F40();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8, v11);
  v12 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  sub_2417289A8(v3, (uint64_t)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ValenceSliderStyle);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (v10 + *(unsigned __int8 *)(v6 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v13, v12, v8);
  result = sub_241731B4C((uint64_t)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSliderStyle);
  *a3 = sub_241789414;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v15;
  return result;
}

uint64_t sub_2417892A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_2418A8F40();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for ValenceSliderStyle();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = v0 + ((v3 + v4 + v6) & ~v6);
  swift_release();
  v8 = v7 + *(int *)(v5 + 20);
  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A87CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = v7 + *(int *)(v5 + 24);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241789414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(sub_2418A8F40() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ValenceSliderStyle() - 8) + 80);
  return sub_2417885CC(a1, v2 + v6, (double *)(v2 + ((v6 + v7 + v8) & ~v8)), a2);
}

void sub_24178948C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E3A0)
  {
    sub_24172570C(255, &qword_25714E3A8, (uint64_t (*)(uint64_t))sub_241789504, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417896F8();
    v0 = sub_2418A97F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E3A0);
  }
}

void sub_241789504()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714E3B0)
  {
    sub_241789588();
    sub_241721CBC(255, &qword_25714E3D8, sub_2417896C0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714E3B0);
  }
}

void sub_241789588()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E3B8)
  {
    sub_2418A9864();
    sub_2417895EC();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E3B8);
  }
}

void sub_2417895EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E3C0)
  {
    sub_241789664();
    sub_24172159C(&qword_25714E3D0, (uint64_t (*)(uint64_t))sub_241789664, MEMORY[0x24BDEF780]);
    v0 = sub_2418A8F4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E3C0);
  }
}

void sub_241789664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E3C8)
  {
    v0 = sub_2418A8DD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E3C8);
  }
}

void sub_2417896C0(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714E3E0, sub_2417896DC);
}

void sub_2417896DC(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714E3E8, (void (*)(uint64_t))sub_241721D18);
}

unint64_t sub_2417896F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714E3F0;
  if (!qword_25714E3F0)
  {
    sub_24172570C(255, &qword_25714E3A8, (uint64_t (*)(uint64_t))sub_241789504, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_25714E3F0);
  }
  return result;
}

void sub_241789758()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E3F8)
  {
    sub_24172570C(255, &qword_25714E3A8, (uint64_t (*)(uint64_t))sub_241789504, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E3F8);
  }
}

uint64_t sub_2417897D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = type metadata accessor for ValenceSliderStyle();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v16 = *(_QWORD *)(v2 + 64);
  v18 = sub_2418A8688();
  v4 = *(_QWORD *)(v18 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v15 = *(_QWORD *)(v4 + 64);
  v17 = sub_2418A8F40();
  v6 = *(_QWORD *)(v17 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_release();
  v8 = v0 + v3 + *(int *)(v1 + 20);
  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A87CC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = v0 + v3 + *(int *)(v1 + 24);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2418A84E4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  v12 = (v3 + v16 + v5) & ~v5;
  v13 = (v12 + v15 + v7) & ~v7;
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v12, v18);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v13, v17);
  return swift_deallocObject();
}

uint64_t sub_2417899A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for ValenceSliderStyle() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_2418A8688();
  sub_2418A8F40();
  return sub_241788F30(a1, (double *)(v1 + v4));
}

void sub_241789A34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E408)
  {
    v0 = sub_2418A984C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E408);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ValenceSliderStyle.StyleConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ValenceSliderStyle.StyleConfiguration()
{
  return swift_release();
}

_QWORD *assignWithCopy for ValenceSliderStyle.StyleConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for ValenceSliderStyle.StyleConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ValenceSliderStyle.StyleConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ValenceSliderStyle.StyleConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ValenceSliderStyle.StyleConfiguration()
{
  return &type metadata for ValenceSliderStyle.StyleConfiguration;
}

uint64_t sub_241789BC8()
{
  return sub_24172159C(&qword_25714E410, (uint64_t (*)(uint64_t))sub_241789BF4, MEMORY[0x24BDEC6F8]);
}

void sub_241789BF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E418)
  {
    sub_241789CE0(255);
    sub_24178948C();
    sub_24173E628();
    sub_24172159C(&qword_25714E400, (uint64_t (*)(uint64_t))sub_24178948C, MEMORY[0x24BDF4750]);
    sub_24172159C(&qword_25714C8D8, (uint64_t (*)(uint64_t))sub_24173E628, MEMORY[0x24BDED570]);
    swift_getOpaqueTypeConformance2();
    v0 = sub_2418A8718();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E418);
  }
}

void sub_241789CE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_25714E420)
  {
    sub_24178948C();
    v3 = v2;
    sub_24173E628();
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_24172159C(&qword_25714E400, (uint64_t (*)(uint64_t))sub_24178948C, MEMORY[0x24BDF4750]);
    v7[3] = sub_24172159C(&qword_25714C8D8, (uint64_t (*)(uint64_t))sub_24173E628, MEMORY[0x24BDED570]);
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF3770], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714E420);
  }
}

void sub_241789E54(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_241789F34(void *a1, uint64_t a2, double a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v28;
  char *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  objc_class *v37;
  uint64_t ObjCClassFromMetadata;
  id v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  char *v52;
  id v53;
  void *v54;
  void *v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  void *v61;
  void (*v62)(char *, uint64_t);
  void *v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;
  id v73;
  void *v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  objc_super v82;
  id v83[2];

  v83[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24178B2C0();
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2418A7F50();
  v12 = *(_QWORD *)(v11 - 8);
  v77 = v11;
  v78 = v12;
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v79 = (char *)&v75 - v18;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_framerateDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLinkTarget] = 0;
  v19 = &v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLinkWillRenderFrame];
  *v19 = 0;
  v19[1] = 0;
  v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueueIsEmpty] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive] = 0;
  v20 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer] = 0;
  v21 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount] = 1;
  v22 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling] = 0x3FF0000000000000;
  *(_DWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_currentTime] = 0;
  *(_DWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_timeDelta] = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_lastDrawableSize] = _Q0;
  v28 = *(void **)&v3[v20];
  *(_QWORD *)&v3[v20] = a1;
  v29 = v3;
  v30 = a1;

  *(_QWORD *)&v3[v21] = a2;
  *(double *)&v3[v22] = a3;
  if (a1)
  {
    v31 = v30;
    v32 = objc_msgSend(v31, sel_device);
    if (!v32)
    {
LABEL_23:
      result = sub_2418AA380();
      __break(1u);
      return result;
    }
    v33 = v32;

  }
  else
  {
    v33 = MTLCreateSystemDefaultDevice();
    if (!v33)
    {
      __break(1u);
      goto LABEL_23;
    }
  }
  *(_QWORD *)&v29[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device] = v33;
  v34 = objc_msgSend(v33, sel_newCommandQueue);
  if (!v34)
    goto LABEL_23;
  v35 = v34;
  v76 = v30;
  *(_QWORD *)&v29[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueue] = v34;
  swift_unknownObjectRetain_n();
  v36 = (void *)sub_2418A9DB0();
  objc_msgSend(v35, sel_setLabel_, v36);
  swift_unknownObjectRelease();

  v37 = (objc_class *)type metadata accessor for MetalRenderer();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v39 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v40 = (void *)sub_2418A9DB0();
  v41 = (void *)sub_2418A9DB0();
  v75 = v39;
  v42 = objc_msgSend(v39, sel_URLForResource_withExtension_, v40, v41);

  if (!v42)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v10, 1, 1, v77);
    goto LABEL_21;
  }
  sub_2418A7F38();

  v44 = v77;
  v43 = v78;
  v45 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
  v45(v10, v16, v77);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v10, 0, 1, v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v10, 1, v44) == 1)
  {
LABEL_21:
    sub_24178B314((uint64_t)v10);
    goto LABEL_23;
  }
  v46 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device;
  v45(v79, v10, v44);
  v47 = *(void **)&v29[v46];
  swift_unknownObjectRetain();
  v48 = (void *)sub_2418A7F2C();
  v83[0] = 0;
  v49 = objc_msgSend(v47, sel_newLibraryWithURL_error_, v48, v83);
  swift_unknownObjectRelease();

  v50 = v83[0];
  if (!v49)
  {
    v73 = v83[0];
    v74 = (void *)sub_2418A7F14();

    swift_willThrow();
    goto LABEL_23;
  }
  *(_QWORD *)&v29[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary] = v49;
  swift_unknownObjectRetain();
  v51 = v50;

  v82.receiver = v29;
  v82.super_class = v37;
  v52 = (char *)objc_msgSendSuper2(&v82, sel_init);
  v53 = v76;
  if (a1)
  {
    sub_24178A760();
    v54 = *(void **)&v52[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink];
    if (v54)
      objc_msgSend(v54, sel_setPaused_, 0);
  }
  v55 = (void *)sub_2418A9DB0();
  v56 = (void *)sub_2418A9DB0();
  v57 = v75;
  v58 = objc_msgSend(v75, sel_pathForResource_ofType_, v55, v56);

  if (v58)
  {
    sub_2418A9DE0();

    v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD4D8]), sel_init);
    sub_2418A7F20();
    v60 = v77;
    swift_bridgeObjectRelease();
    v61 = (void *)sub_2418A7F2C();
    v62 = *(void (**)(char *, uint64_t))(v78 + 8);
    v62(v16, v60);
    objc_msgSend(v59, sel_setUrl_, v61);

    v63 = *(void **)&v52[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device];
    v83[0] = 0;
    v64 = objc_msgSend(v63, sel_newBinaryArchiveWithDescriptor_error_, v59, v83);
    v65 = v83[0];
    if (v64)
    {

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v62(v79, v60);
      *(_QWORD *)&v52[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive] = v64;
      swift_unknownObjectRelease();
    }
    else
    {
      v66 = v65;
      v67 = (void *)sub_2418A7F14();

      swift_willThrow();
      sub_24178B210();
      v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = xmmword_2418D1940;
      *(_QWORD *)(v68 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v68 + 32) = 0xD000000000000049;
      *(_QWORD *)(v68 + 40) = 0x80000002418DCC50;
      swift_getErrorValue();
      v69 = v80;
      v70 = v81;
      *(_QWORD *)(v68 + 88) = v81;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v68 + 64));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(boxed_opaque_existential_1, v69, v70);
      sub_2418AA554();

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v62(v79, v77);
    }
  }
  else
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v44);
  }
  return (uint64_t)v52;
}

void sub_24178A760()
{
  _QWORD *v0;
  void *v1;
  id v2;
  objc_class *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  objc_super v11;
  CGRect v12;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, sel_bounds);
    if (!CGRectIsEmpty(v12))
      (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x260))();
    v3 = (objc_class *)type metadata accessor for MetalRenderer.DisplayLinkTarget();
    v4 = objc_allocWithZone(v3);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v11.receiver = v4;
    v11.super_class = v3;
    v5 = objc_msgSendSuper2(&v11, sel_init);
    v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLinkTarget);
    *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLinkTarget) = v5;
    v7 = v5;

    v8 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, v7, sel_fireWithLink_);
    objc_msgSend(v8, sel_setPreferredFramesPerSecond_, 60);
    v9 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop);
    objc_msgSend(v8, sel_addToRunLoop_forMode_, v9, *MEMORY[0x24BDBCB80]);

    v10 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink);
    *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink) = v8;

  }
  else
  {
    sub_2418AA380();
    __break(1u);
  }
}

void sub_24178A92C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  BOOL v6;
  void *v7;
  BOOL v8;
  void *v9;
  CGRect v10;
  CGRect v11;

  v3 = MEMORY[0x24269D5FC](v1+ OBJC_IVAR____TtCC14MentalHealthUI13MetalRendererP33_3D7E1FDF28A65721717625FA5324475917DisplayLinkTarget_renderer);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(void **)(v3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink);
    if (v5)
      v6 = v5 == a1;
    else
      v6 = 0;
    if (!v6)
      goto LABEL_13;
    v9 = (void *)v3;
    v7 = *(void **)(v3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
    if (v7)
    {
      objc_msgSend(v7, sel_bounds);
      v11.origin.x = 0.0;
      v11.origin.y = 0.0;
      v11.size.width = 0.0;
      v11.size.height = 0.0;
      v8 = CGRectEqualToRect(v10, v11);
      v4 = v9;
      if (v8)
      {
LABEL_13:

        return;
      }
      sub_24178AAB4();
    }
    else
    {
      objc_msgSend(a1, sel_setPaused_, 1);
    }
    v4 = v9;
    goto LABEL_13;
  }
}

id sub_24178AA70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_24178AAB4()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(void *);
  void *v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  char v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = *(void (**)(void *))((char *)v0
                                     + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLinkWillRenderFrame);
  if (v2)
  {
    v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink);
    sub_24178B19C((uint64_t)v2);
    v4 = v3;
    v2(v3);
    sub_24178B1AC((uint64_t)v2);

  }
  v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink);
  if (!v5)
    goto LABEL_17;
  v6 = v5;
  objc_msgSend(v6, sel_targetTimestamp);
  v8 = v7;
  objc_msgSend(v6, sel_timestamp);
  *(float *)&v9 = v8 - v9;
  *(_DWORD *)((char *)v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_timeDelta) = LODWORD(v9);
  *(float *)((char *)v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_currentTime) = *(float *)((char *)v1
                                                                                                  + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_currentTime)
                                                                                       + *(float *)&v9;

  v10 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueueIsEmpty;
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueueIsEmpty) & 1) != 0)
  {
    v11 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer;
    v12 = *(void **)((char *)v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
    if (v12)
    {
      v13 = v12;
      if ((objc_msgSend(v13, sel_isDrawableAvailable) & 1) == 0)
      {
        sub_24178B210();
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_2418D23E0;
        *(_QWORD *)(v28 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v28 + 32) = 0xD00000000000003DLL;
        *(_QWORD *)(v28 + 40) = 0x80000002418DCB20;
        sub_2418AA554();

        swift_bridgeObjectRelease();
        return;
      }

    }
    v14 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueue;
    v15 = (_QWORD *)MEMORY[0x24BEE4EA0];
    v16 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v1) + 0x268);
    v17 = swift_unknownObjectRetain();
    v18 = v16(v17);
    swift_unknownObjectRelease();
    if ((v18 & 1) != 0)
    {
      v19 = objc_msgSend(*(id *)((char *)v1 + v14), sel_commandBuffer);
      if (v19)
      {
        v20 = v19;
        *((_BYTE *)v1 + v10) = 0;
        v21 = swift_allocObject();
        *(_QWORD *)(v21 + 16) = v1;
        aBlock[4] = sub_24178B1E0;
        aBlock[5] = v21;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24178AE8C;
        aBlock[3] = &block_descriptor_1;
        v22 = _Block_copy(aBlock);
        v23 = v1;
        swift_release();
        objc_msgSend(v20, sel_addCompletedHandler_, v22);
        _Block_release(v22);
        v24 = *(void **)((char *)v1 + v11);
        if (v24 && (v25 = objc_msgSend(v24, sel_nextDrawable)) != 0)
        {
          v26 = v25;
          v27 = objc_msgSend(v25, sel_texture);
          (*(void (**)(void))((*v15 & *v23) + 0x278))();
          swift_unknownObjectRelease();
          objc_msgSend(v26, sel_present);
          swift_unknownObjectRelease();
        }
        else
        {
          objc_msgSend(v20, sel_commit);
        }
        swift_unknownObjectRelease();
        return;
      }
      while (1)
      {
LABEL_17:
        sub_2418AA380();
        __break(1u);
      }
    }
  }
}

uint64_t sub_24178AE8C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_24178AED4()
{
  sub_2418AA380();
  __break(1u);
}

void sub_24178AF34()
{
  sub_2418AA380();
  __break(1u);
}

void sub_24178AF94()
{
  sub_2418AA380();
  __break(1u);
}

id sub_24178AFF4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  objc_super v5;

  v1 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink;
  v2 = *(void **)&v0[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink];
  if (v2)
  {
    objc_msgSend(v2, sel_setPaused_, 1);
    v3 = *(void **)&v0[v1];
    if (v3)
      objc_msgSend(v3, sel_invalidate);
  }
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MetalRenderer();
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t type metadata accessor for MetalRenderer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MetalRenderer.DisplayLinkTarget()
{
  return objc_opt_self();
}

uint64_t sub_24178B19C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_24178B1AC(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_24178B1BC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_24178B1E0()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueueIsEmpty) = 1;
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

void sub_24178B210()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E500)
  {
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E500);
  }
}

uint64_t sub_24178B268()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_24178B28C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_24178B29C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

void sub_24178B2C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543915A0)
  {
    sub_2418A7F50();
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543915A0);
  }
}

uint64_t sub_24178B314(uint64_t a1)
{
  uint64_t v2;

  sub_24178B2C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t View.mindAccessibilityIdentifierComponents(_:components:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  sub_2417739BC(v0);
  v1 = swift_bridgeObjectRetain();
  sub_2417739BC(v1);
  sub_241773FD4();
  sub_24172159C((unint64_t *)&qword_2543915D8, (uint64_t (*)(uint64_t))sub_241773FD4, MEMORY[0x24BEE12B0]);
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2418A9450();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24178B460(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  _QWORD v5[2];

  v1 = *(_QWORD *)(a1 + 8);
  sub_2418A909C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v3 = sub_2418A87FC();
  v5[0] = v1;
  v5[1] = sub_24172159C(&qword_25714C550, v2, MEMORY[0x24BDF1078]);
  return MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v5);
}

uint64_t sub_24178B4E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v6;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

uint64_t sub_24178B690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
  v8 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_24178B778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    v11 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v12 = (char *)v6 + v11;
    v13 = (char *)v7 + v11;
    v14 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24178B8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4(a1 + v6, (uint64_t)&qword_25714D430, (uint64_t)type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2418A8EB0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v14 = (char *)v7 + v13;
      v15 = (char *)v8 + v13;
      v16 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24178BAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8EB0();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v5, v6, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    v12 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v13 = &v5[v12];
    v14 = &v6[v12];
    v15 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24178BC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (char *)(a1 + v6);
    v8 = (char *)(a2 + v6);
    v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_241784BA4(a1 + v6, (uint64_t)&qword_25714D430, (uint64_t)type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t)MEMORY[0x24BDEB560], (uint64_t (*)(_QWORD))sub_24172570C);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v9);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2418A8EB0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v7, v8, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
      }
      v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v16 = &v7[v15];
      v17 = &v8[v15];
      v18 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24178BE00()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24178BE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_24178BEA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24178BEAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ValenceSlider()
{
  uint64_t result;

  result = qword_25714E568;
  if (!qword_25714E568)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24178BF74()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24178C008()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24178C018@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t (*v65)(uint64_t, uint64_t);
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t KeyPath;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  __int128 v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;

  v127 = a2;
  v122 = type metadata accessor for ValenceSliderCaptions();
  MEMORY[0x24BDAC7A8](v122, v3);
  v121 = (uint64_t *)((char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241721CBC(0, &qword_25714E5F8, v5);
  v125 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v126 = (uint64_t)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v123 = (uint64_t)&v109 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v124 = (uint64_t)&v109 - v14;
  v15 = type metadata accessor for ValenceSelectionPhaseSpecs();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v120 = (uint64_t)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v118 = (uint64_t)&v109 - v21;
  MEMORY[0x24BDAC7A8](v20, v22);
  v114 = (uint64_t)&v109 - v23;
  v24 = type metadata accessor for ValenceSliderStyle();
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v28 = (uint64_t *)((char *)&v109 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v26, v29);
  v31 = (char *)&v109 - v30;
  sub_24178CCC8();
  v33 = v32;
  v109 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v34);
  v36 = (char *)&v109 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24178CBF4(0);
  v113 = v37;
  v112 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v38);
  v40 = (char *)&v109 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_25714E5D0, v41);
  v110 = v42;
  MEMORY[0x24BDAC7A8](v42, v43);
  v45 = (char *)&v109 - v44;
  sub_24178CB78();
  MEMORY[0x24BDAC7A8](v46, v47);
  v115 = (char *)&v109 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_25714E5C0, v49);
  v117 = v50;
  v52 = MEMORY[0x24BDAC7A8](v50, v51);
  v119 = (uint64_t)&v109 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v52, v54);
  v57 = (char *)&v109 - v56;
  MEMORY[0x24BDAC7A8](v55, v58);
  v116 = (uint64_t)&v109 - v59;
  v60 = *a1;
  v61 = a1[1];
  v62 = a1[2];
  v128 = a1;
  *(_QWORD *)&v129 = v60;
  *((_QWORD *)&v129 + 1) = v61;
  v130 = v62;
  sub_24172887C(0, (unint64_t *)&qword_25714E408, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  sub_2418A9828();
  v129 = xmmword_2418D3FA0;
  sub_24178CD2C();
  sub_2418A9798();
  v63 = sub_2418A9618();
  *v28 = 0x3FB0000000000000;
  v28[1] = v63;
  v64 = (_QWORD *)((char *)v28 + *(int *)(v24 + 20));
  *v64 = swift_getKeyPath();
  v65 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714C668, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v66 = (_QWORD *)((char *)v28 + *(int *)(v24 + 24));
  *v66 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v65);
  v111 = v67;
  swift_storeEnumTagMultiPayload();
  sub_24178CD80((uint64_t)v28, (uint64_t)v31);
  sub_24172159C(&qword_25714E5E8, (uint64_t (*)(uint64_t))sub_24178CCC8, MEMORY[0x24BDF4608]);
  sub_24172159C(&qword_25714E5F0, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSliderStyle, (uint64_t)&unk_2418D3EE0);
  sub_2418A9330();
  sub_24172588C((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSliderStyle);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v36, v33);
  type metadata accessor for ValenceSlider();
  v68 = v114;
  sub_241861CB8(v114);
  sub_24172588C(v68, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_2418A9960();
  sub_2418A861C();
  v69 = v112;
  v70 = v113;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v45, v40, v113);
  v71 = &v45[*(int *)(v110 + 36)];
  v72 = v132;
  *(_OWORD *)v71 = v131;
  *((_OWORD *)v71 + 1) = v72;
  *((_OWORD *)v71 + 2) = v133;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v70);
  *(_QWORD *)&v129 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC1F8);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_24178CDC4();
  v73 = (uint64_t)v115;
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_241784BA4((uint64_t)v45, (uint64_t)&qword_25714E5D0, (uint64_t)sub_24178CBF4, MEMORY[0x24BDEBEF8], (uint64_t (*)(_QWORD))sub_241721CBC);
  LOBYTE(v69) = sub_2418A90F0();
  v74 = v118;
  sub_241861CB8(v118);
  sub_24172588C(v74, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_2418A84A8();
  v76 = v75;
  v78 = v77;
  v80 = v79;
  v82 = v81;
  sub_2417289A8(v73, (uint64_t)v57, (uint64_t (*)(_QWORD))sub_24178CB78);
  v83 = &v57[*(int *)(v117 + 36)];
  *v83 = v69;
  *((_QWORD *)v83 + 1) = v76;
  *((_QWORD *)v83 + 2) = v78;
  *((_QWORD *)v83 + 3) = v80;
  *((_QWORD *)v83 + 4) = v82;
  v83[40] = 0;
  sub_24172588C(v73, (uint64_t (*)(_QWORD))sub_24178CB78);
  v84 = v116;
  sub_24178CEC8((uint64_t)v57, v116, &qword_25714E5C0, (void (*)(uint64_t))sub_24178CB78);
  LOBYTE(v69) = *((_BYTE *)v128 + 24);
  KeyPath = swift_getKeyPath();
  v86 = (uint64_t)v121;
  *v121 = KeyPath;
  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v87 = v122;
  v88 = (uint64_t *)(v86 + *(int *)(v122 + 20));
  *v88 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v86 + *(int *)(v87 + 24)) = v69;
  LOBYTE(v69) = sub_2418A90CC();
  v89 = v120;
  sub_241861CB8(v120);
  sub_24172588C(v89, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_2418A84A8();
  v91 = v90;
  v93 = v92;
  v95 = v94;
  v97 = v96;
  v98 = v123;
  sub_2417289A8(v86, v123, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSliderCaptions);
  v99 = v98 + *(int *)(v125 + 36);
  *(_BYTE *)v99 = v69;
  *(_QWORD *)(v99 + 8) = v91;
  *(_QWORD *)(v99 + 16) = v93;
  *(_QWORD *)(v99 + 24) = v95;
  *(_QWORD *)(v99 + 32) = v97;
  *(_BYTE *)(v99 + 40) = 0;
  sub_24172588C(v86, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSliderCaptions);
  v100 = v124;
  sub_24178CEC8(v98, v124, &qword_25714E5F8, (void (*)(uint64_t))type metadata accessor for ValenceSliderCaptions);
  v101 = v84;
  v102 = v84;
  v103 = v119;
  sub_24178CF24(v101, v119, &qword_25714E5C0, (void (*)(uint64_t))sub_24178CB78);
  v104 = v126;
  sub_24178CF24(v100, v126, &qword_25714E5F8, (void (*)(uint64_t))type metadata accessor for ValenceSliderCaptions);
  v105 = v127;
  sub_24178CF24(v103, v127, &qword_25714E5C0, (void (*)(uint64_t))sub_24178CB78);
  sub_24178CAD4();
  sub_24178CF24(v104, v105 + *(int *)(v106 + 48), &qword_25714E5F8, (void (*)(uint64_t))type metadata accessor for ValenceSliderCaptions);
  v107 = MEMORY[0x24BDECC80];
  sub_241784BA4(v100, (uint64_t)&qword_25714E5F8, (uint64_t)type metadata accessor for ValenceSliderCaptions, MEMORY[0x24BDECC80], (uint64_t (*)(_QWORD))sub_241721CBC);
  sub_241784BA4(v102, (uint64_t)&qword_25714E5C0, (uint64_t)sub_24178CB78, v107, (uint64_t (*)(_QWORD))sub_241721CBC);
  sub_241784BA4(v104, (uint64_t)&qword_25714E5F8, (uint64_t)type metadata accessor for ValenceSliderCaptions, v107, (uint64_t (*)(_QWORD))sub_241721CBC);
  return sub_241784BA4(v103, (uint64_t)&qword_25714E5C0, (uint64_t)sub_24178CB78, v107, (uint64_t (*)(_QWORD))sub_241721CBC);
}

uint64_t sub_24178CA18@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2418A8C58();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_24178CA58();
  return sub_24178C018(v1, a1 + *(int *)(v3 + 44));
}

void sub_24178CA58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E5A8)
  {
    sub_24172570C(255, &qword_25714E5B0, (uint64_t (*)(uint64_t))sub_24178CAD4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E5A8);
  }
}

void sub_24178CAD4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714E5B8)
  {
    sub_241721CBC(255, &qword_25714E5C0, (void (*)(uint64_t))sub_24178CB78);
    sub_241721CBC(255, &qword_25714E5F8, (void (*)(uint64_t))type metadata accessor for ValenceSliderCaptions);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714E5B8);
  }
}

void sub_24178CB78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E5C8)
  {
    sub_241721CBC(255, &qword_25714E5D0, sub_24178CBF4);
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E5C8);
  }
}

void sub_24178CBF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_25714E5D8)
  {
    sub_24178CCC8();
    v5[0] = v2;
    v5[1] = type metadata accessor for ValenceSliderStyle();
    v5[2] = sub_24172159C(&qword_25714E5E8, (uint64_t (*)(uint64_t))sub_24178CCC8, MEMORY[0x24BDF4608]);
    v5[3] = sub_24172159C(&qword_25714E5F0, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSliderStyle, (uint64_t)&unk_2418D3EE0);
    v3 = MEMORY[0x24269D434](a1, v5, MEMORY[0x24BDF2438], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_25714E5D8);
  }
}

void sub_24178CCC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E5E0)
  {
    v0 = sub_2418A97A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E5E0);
  }
}

unint64_t sub_24178CD2C()
{
  unint64_t result;

  result = qword_25714E600;
  if (!qword_25714E600)
  {
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_25714E600);
  }
  return result;
}

uint64_t sub_24178CD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ValenceSliderStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24178CDC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_25714E608;
  if (!qword_25714E608)
  {
    sub_241721CBC(255, &qword_25714E5D0, sub_24178CBF4);
    v2 = v1;
    sub_24178CCC8();
    v4[2] = v3;
    v4[3] = type metadata accessor for ValenceSliderStyle();
    v4[4] = sub_24172159C(&qword_25714E5E8, (uint64_t (*)(uint64_t))sub_24178CCC8, MEMORY[0x24BDF4608]);
    v4[5] = sub_24172159C(&qword_25714E5F0, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSliderStyle, (uint64_t)&unk_2418D3EE0);
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_25714E608);
  }
  return result;
}

uint64_t sub_24178CEC8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_241721CBC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_24178CF24(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_241721CBC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24178CF7C()
{
  return sub_24172159C(&qword_25714E610, (uint64_t (*)(uint64_t))sub_24178CFA8, MEMORY[0x24BDF4700]);
}

void sub_24178CFA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E618)
  {
    sub_24172570C(255, &qword_25714E5B0, (uint64_t (*)(uint64_t))sub_24178CAD4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_24178D020();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E618);
  }
}

unint64_t sub_24178D020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714E620;
  if (!qword_25714E620)
  {
    sub_24172570C(255, &qword_25714E5B0, (uint64_t (*)(uint64_t))sub_24178CAD4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_25714E620);
  }
  return result;
}

uint64_t *sub_24178D080(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(uint64_t *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24178DAD0(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v103 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      v102 = v8;
      v101 = v6;
      if (v103(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v13, v14, v15);
      *((_BYTE *)a1 + v11[6]) = *((_BYTE *)a2 + v11[6]);
      v17 = v11[7];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_2418A84E4();
      v100 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v100(v18, v19, v20);
      v21 = v11[8];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      if (v103((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v22, v23, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v22, 0, 1, v7);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      if (v103((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v27, v28, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v27, 0, 1, v7);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      if (v103((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v32, v33, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v32, 0, 1, v7);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      if (v103((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v37, v38, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v37, 0, 1, v7);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      if (v103((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v42, v43, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v42, 0, 1, v7);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v100(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      if (v103((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v102;
      }
      else
      {
        v50 = v102;
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v47, v48, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v47, 0, 1, v7);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      if (v103((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      if (v103((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      if (v103((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      if (v103((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      if (v103((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      v6 = v101;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    v77 = *(int *)(v6 + 20);
    v78 = (char *)a1 + v77;
    v79 = (char *)a2 + v77;
    v80 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v78, v79, v80);
    v81 = (int *)_s5EntryVMa();
    v82 = v81[5];
    v83 = &v78[v82];
    v84 = &v79[v82];
    v86 = *(_QWORD *)v84;
    v85 = *((_QWORD *)v84 + 1);
    *(_QWORD *)v83 = v86;
    *((_QWORD *)v83 + 1) = v85;
    v87 = v81[6];
    v88 = &v78[v87];
    v89 = &v79[v87];
    v90 = *((_QWORD *)v89 + 1);
    *(_QWORD *)v88 = *(_QWORD *)v89;
    *((_QWORD *)v88 + 1) = v90;
    v91 = v81[7];
    v92 = &v78[v91];
    v93 = &v79[v91];
    v94 = *((_QWORD *)v93 + 1);
    *(_QWORD *)v92 = *(_QWORD *)v93;
    *((_QWORD *)v92 + 1) = v94;
    v95 = v81[8];
    v96 = &v78[v95];
    v97 = &v79[v95];
    v98 = *((_QWORD *)v97 + 1);
    *(_QWORD *)v96 = *(_QWORD *)v97;
    *((_QWORD *)v96 + 1) = v98;
    *(_QWORD *)&v78[v81[9]] = *(_QWORD *)&v79[v81[9]];
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_24178DAD0(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
}

uint64_t sub_24178DAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;

  sub_24178DAD0(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = a2;
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(a1, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v8 = a1 + v7[5];
    v9 = sub_2418A87B4();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v8, v9);
    v11 = a1 + v7[7];
    v12 = sub_2418A84E4();
    v38 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v38(v11, v12);
    v13 = a1 + v7[8];
    if (!v6(v13, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v4);
    v14 = _s6StylesV8TimelineVMa(0);
    v10(v13 + *(int *)(v14 + 20), v9);
    v15 = a1 + v7[9];
    if (!v6(v15, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    v16 = _s6StylesV6NoDataVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    v17 = a1 + v7[10];
    if (!v6(v17, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    v18 = _s6StylesV11PlaceholderVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    v19 = a1 + v7[11];
    if (!v6(v19, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    v20 = _s6StylesV6SymbolVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    v21 = a1 + v7[12];
    if (!v6(v21, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    v22 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    v38(v21 + *(int *)(v22 + 28), v12);
    v23 = a1 + v7[13];
    if (!v6(v23, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    v24 = _s6StylesV5EmptyVMa(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    v25 = a1 + v7[14];
    if (!v6(v25, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v25, v4);
    v26 = _s6StylesV5DailyVMa(0);
    v10(v25 + *(int *)(v26 + 20), v9);
    v27 = a1 + v7[15];
    if (!v6(v27, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v27, v4);
    v28 = _s6StylesV9MomentaryVMa(0);
    v10(v27 + *(int *)(v28 + 20), v9);
    v29 = a1 + v7[16];
    if (!v6(v29, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
    v30 = _s6StylesV6HeaderVMa(0);
    v10(v29 + *(int *)(v30 + 20), v9);
    v31 = a1 + v7[17];
    if (!v6(v31, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v31, v4);
    v32 = _s6StylesV11ChartButtonVMa(0);
    v10(v31 + *(int *)(v32 + 20), v9);
    v33 = a1 + v7[18];
    if (!v6(v33, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v33, v4);
    v34 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v33 + *(int *)(v34 + 20), v9);
    a2 = v39;
  }
  else
  {
    swift_release();
  }
  v35 = a1 + *(int *)(a2 + 20);
  v36 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  _s5EntryVMa();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_24178DF78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(_QWORD *, uint64_t, uint64_t);

  sub_24178DAD0(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v101 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
    v99 = a3;
    v100 = v7;
    if (v101(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v98(v16, v17, v18);
    v19 = v9[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v101((_QWORD *)((char *)a2 + v19), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    if (v101((_QWORD *)((char *)a2 + v24), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v101((_QWORD *)((char *)a2 + v29), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v30, 0, 1, v6);
    }
    v33 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    v34 = v9[11];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v101((_QWORD *)((char *)a2 + v34), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v35, 0, 1, v6);
    }
    v38 = _s6StylesV6SymbolVMa(0);
    v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    v39 = v9[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    if (v101((_QWORD *)((char *)a2 + v39), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v40, v41, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v40, 0, 1, v6);
    }
    v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v98(&v40[v43[7]], &v41[v43[7]], v18);
    v44 = v9[13];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v101((_QWORD *)((char *)a2 + v44), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v100;
    }
    else
    {
      v48 = v100;
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v45, v46, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v45, 0, 1, v6);
    }
    v49 = _s6StylesV5EmptyVMa(0);
    v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    v50 = v9[14];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    if (v101((_QWORD *)((char *)a2 + v50), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    v54 = _s6StylesV5DailyVMa(0);
    v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v9[15];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v101((_QWORD *)((char *)a2 + v55), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    v59 = _s6StylesV9MomentaryVMa(0);
    v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    v60 = v9[16];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    if (v101((_QWORD *)((char *)a2 + v60), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    v64 = _s6StylesV6HeaderVMa(0);
    v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    v65 = v9[17];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    if (v101((_QWORD *)((char *)a2 + v65), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    v69 = _s6StylesV11ChartButtonVMa(0);
    v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    v70 = v9[18];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    if (v101((_QWORD *)((char *)a2 + v70), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    v74 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
    swift_storeEnumTagMultiPayload();
    a3 = v99;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  v75 = *(int *)(a3 + 20);
  v76 = (char *)a1 + v75;
  v77 = (char *)a2 + v75;
  v78 = sub_2418A8130();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
  v79 = (int *)_s5EntryVMa();
  v80 = v79[5];
  v81 = &v76[v80];
  v82 = &v77[v80];
  v84 = *(_QWORD *)v82;
  v83 = *((_QWORD *)v82 + 1);
  *(_QWORD *)v81 = v84;
  *((_QWORD *)v81 + 1) = v83;
  v85 = v79[6];
  v86 = &v76[v85];
  v87 = &v77[v85];
  v88 = *((_QWORD *)v87 + 1);
  *(_QWORD *)v86 = *(_QWORD *)v87;
  *((_QWORD *)v86 + 1) = v88;
  v89 = v79[7];
  v90 = &v76[v89];
  v91 = &v77[v89];
  v92 = *((_QWORD *)v91 + 1);
  *(_QWORD *)v90 = *(_QWORD *)v91;
  *((_QWORD *)v90 + 1) = v92;
  v93 = v79[8];
  v94 = &v76[v93];
  v95 = &v77[v93];
  v96 = *((_QWORD *)v95 + 1);
  *(_QWORD *)v94 = *(_QWORD *)v95;
  *((_QWORD *)v94 + 1) = v96;
  *(_QWORD *)&v76[v79[9]] = *(_QWORD *)&v77[v79[9]];
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_24178E998(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  unsigned int (*v96)(_QWORD *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_24172588C((uint64_t)a1, (uint64_t (*)(_QWORD))sub_24178DAD0);
    sub_24178DAD0(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A8EB0();
      v7 = *(_QWORD *)(v6 - 8);
      v96 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
      v94 = a3;
      v95 = v7;
      if (v96(a2, 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2418A87B4();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
      v15 = v9[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_2418A84E4();
      v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v93(v16, v17, v18);
      v19 = v9[8];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (v96((_QWORD *)((char *)a2 + v19), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v20, v21, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v20, 0, 1, v6);
      }
      v23 = _s6StylesV8TimelineVMa(0);
      v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      v24 = v9[9];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      if (v96((_QWORD *)((char *)a2 + v24), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v25, v26, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v25, 0, 1, v6);
      }
      v28 = _s6StylesV6NoDataVMa(0);
      v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      v29 = v9[10];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      if (v96((_QWORD *)((char *)a2 + v29), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v30, v31, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v30, 0, 1, v6);
      }
      v33 = _s6StylesV11PlaceholderVMa(0);
      v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
      v34 = v9[11];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      if (v96((_QWORD *)((char *)a2 + v34), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v35, v36, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v35, 0, 1, v6);
      }
      v38 = _s6StylesV6SymbolVMa(0);
      v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
      v39 = v9[12];
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      if (v96((_QWORD *)((char *)a2 + v39), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v40, v41, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v40, 0, 1, v6);
      }
      v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v14(&v40[v43[5]], &v41[v43[5]], v13);
      v40[v43[6]] = v41[v43[6]];
      v93(&v40[v43[7]], &v41[v43[7]], v18);
      v44 = v9[13];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      if (v96((_QWORD *)((char *)a2 + v44), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = v95;
      }
      else
      {
        v48 = v95;
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v45, v46, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v45, 0, 1, v6);
      }
      v49 = _s6StylesV5EmptyVMa(0);
      v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      v50 = v9[14];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      if (v96((_QWORD *)((char *)a2 + v50), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
      }
      v54 = _s6StylesV5DailyVMa(0);
      v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      v55 = v9[15];
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      if (v96((_QWORD *)((char *)a2 + v55), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
      }
      v59 = _s6StylesV9MomentaryVMa(0);
      v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
      v60 = v9[16];
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      if (v96((_QWORD *)((char *)a2 + v60), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
      }
      v64 = _s6StylesV6HeaderVMa(0);
      v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
      v65 = v9[17];
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      if (v96((_QWORD *)((char *)a2 + v65), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
      }
      v69 = _s6StylesV11ChartButtonVMa(0);
      v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
      v70 = v9[18];
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      if (v96((_QWORD *)((char *)a2 + v70), 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
      }
      v74 = _s6StylesV15LogButtonFooterVMa(0);
      v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
      a3 = v94;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v75 = *(int *)(a3 + 20);
  v76 = (char *)a1 + v75;
  v77 = (char *)a2 + v75;
  v78 = sub_2418A8130();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 24))(v76, v77, v78);
  v79 = (int *)_s5EntryVMa();
  v80 = v79[5];
  v81 = &v76[v80];
  v82 = &v77[v80];
  *(_QWORD *)v81 = *(_QWORD *)v82;
  *((_QWORD *)v81 + 1) = *((_QWORD *)v82 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v83 = v79[6];
  v84 = &v76[v83];
  v85 = &v77[v83];
  *(_QWORD *)v84 = *(_QWORD *)v85;
  *((_QWORD *)v84 + 1) = *((_QWORD *)v85 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v86 = v79[7];
  v87 = &v76[v86];
  v88 = &v77[v86];
  *(_QWORD *)v87 = *(_QWORD *)v88;
  *((_QWORD *)v87 + 1) = *((_QWORD *)v88 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v89 = v79[8];
  v90 = &v76[v89];
  v91 = &v77[v89];
  *(_QWORD *)v90 = *(_QWORD *)v91;
  *((_QWORD *)v90 + 1) = *((_QWORD *)v91 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v76[v79[9]] = *(_QWORD *)&v77[v79[9]];
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_24178F418(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  int *v81;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(char *, uint64_t, uint64_t);

  sub_24178DAD0(0);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v84 = a3;
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    v85 = v9;
    if (v86(a2, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2418A87B4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    v17 = v11[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_2418A84E4();
    v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
    v83(v18, v19, v20);
    v21 = v11[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (v86(&a2[v21], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v22, v23, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v22, 0, 1, v8);
    }
    v25 = _s6StylesV8TimelineVMa(0);
    v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    v26 = v11[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    if (v86(&a2[v26], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v27, v28, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v27, 0, 1, v8);
    }
    v30 = _s6StylesV6NoDataVMa(0);
    v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    v31 = v11[10];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (v86(&a2[v31], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v32, v33, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v32, 0, 1, v8);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    v36 = v11[11];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if (v86(&a2[v36], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v37, v38, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v37, 0, 1, v8);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    v41 = v11[12];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v86(&a2[v41], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v42, v43, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v42, 0, 1, v8);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v16(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v83(&v42[v45[7]], &v43[v45[7]], v20);
    v46 = v11[13];
    v47 = &a1[v46];
    v48 = &a2[v46];
    if (v86(&a2[v46], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = v85;
    }
    else
    {
      v50 = v85;
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v47, v48, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v47, 0, 1, v8);
    }
    v51 = _s6StylesV5EmptyVMa(0);
    v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    v52 = v11[14];
    v53 = &a1[v52];
    v54 = &a2[v52];
    if (v86(&a2[v52], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    v56 = _s6StylesV5DailyVMa(0);
    v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = v11[15];
    v58 = &a1[v57];
    v59 = &a2[v57];
    if (v86(&a2[v57], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    v61 = _s6StylesV9MomentaryVMa(0);
    v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    v62 = v11[16];
    v63 = &a1[v62];
    v64 = &a2[v62];
    if (v86(&a2[v62], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    v66 = _s6StylesV6HeaderVMa(0);
    v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    v67 = v11[17];
    v68 = &a1[v67];
    v69 = &a2[v67];
    if (v86(&a2[v67], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    v71 = _s6StylesV11ChartButtonVMa(0);
    v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    v72 = v11[18];
    v73 = &a1[v72];
    v74 = &a2[v72];
    if (v86(&a2[v72], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    a3 = v84;
    v76 = _s6StylesV15LogButtonFooterVMa(0);
    v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v77 = *(int *)(a3 + 20);
  v78 = &a1[v77];
  v79 = &a2[v77];
  v80 = sub_2418A8130();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
  v81 = (int *)_s5EntryVMa();
  *(_OWORD *)&v78[v81[5]] = *(_OWORD *)&v79[v81[5]];
  *(_OWORD *)&v78[v81[6]] = *(_OWORD *)&v79[v81[6]];
  *(_OWORD *)&v78[v81[7]] = *(_OWORD *)&v79[v81[7]];
  *(_OWORD *)&v78[v81[8]] = *(_OWORD *)&v79[v81[8]];
  *(_QWORD *)&v78[v81[9]] = *(_QWORD *)&v79[v81[9]];
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_24178FDEC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  unsigned int (*v106)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_24172588C((uint64_t)a1, (uint64_t (*)(_QWORD))sub_24178DAD0);
    sub_24178DAD0(0);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A8EB0();
      v9 = *(_QWORD *)(v8 - 8);
      v106 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      v104 = a3;
      v105 = v9;
      if (v106(a2, 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      v17 = v11[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_2418A84E4();
      v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
      v103(v18, v19, v20);
      v21 = v11[8];
      v22 = &a1[v21];
      v23 = &a2[v21];
      if (v106(&a2[v21], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v22, v23, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v22, 0, 1, v8);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = &a1[v26];
      v28 = &a2[v26];
      if (v106(&a2[v26], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v27, v28, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v27, 0, 1, v8);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = &a1[v31];
      v33 = &a2[v31];
      if (v106(&a2[v31], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v32, v33, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v32, 0, 1, v8);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = &a1[v36];
      v38 = &a2[v36];
      if (v106(&a2[v36], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v37, v38, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v37, 0, 1, v8);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = &a1[v41];
      v43 = &a2[v41];
      if (v106(&a2[v41], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v42, v43, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v42, 0, 1, v8);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v103(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = &a1[v46];
      v48 = &a2[v46];
      if (v106(&a2[v46], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v105;
      }
      else
      {
        v50 = v105;
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v47, v48, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v47, 0, 1, v8);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = &a1[v52];
      v54 = &a2[v52];
      if (v106(&a2[v52], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = &a1[v57];
      v59 = &a2[v57];
      if (v106(&a2[v57], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = &a1[v62];
      v64 = &a2[v62];
      if (v106(&a2[v62], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = &a1[v67];
      v69 = &a2[v67];
      if (v106(&a2[v67], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = &a1[v72];
      v74 = &a2[v72];
      if (v106(&a2[v72], 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      a3 = v104;
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  v77 = *(int *)(a3 + 20);
  v78 = &a1[v77];
  v79 = &a2[v77];
  v80 = sub_2418A8130();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 40))(v78, v79, v80);
  v81 = (int *)_s5EntryVMa();
  v82 = v81[5];
  v83 = &v78[v82];
  v84 = &v79[v82];
  v86 = *(_QWORD *)v84;
  v85 = *((_QWORD *)v84 + 1);
  *(_QWORD *)v83 = v86;
  *((_QWORD *)v83 + 1) = v85;
  swift_bridgeObjectRelease();
  v87 = v81[6];
  v88 = &v78[v87];
  v89 = &v79[v87];
  v91 = *(_QWORD *)v89;
  v90 = *((_QWORD *)v89 + 1);
  *(_QWORD *)v88 = v91;
  *((_QWORD *)v88 + 1) = v90;
  swift_bridgeObjectRelease();
  v92 = v81[7];
  v93 = &v78[v92];
  v94 = &v79[v92];
  v96 = *(_QWORD *)v94;
  v95 = *((_QWORD *)v94 + 1);
  *(_QWORD *)v93 = v96;
  *((_QWORD *)v93 + 1) = v95;
  swift_bridgeObjectRelease();
  v97 = v81[8];
  v98 = &v78[v97];
  v99 = &v79[v97];
  v101 = *(_QWORD *)v99;
  v100 = *((_QWORD *)v99 + 1);
  *(_QWORD *)v98 = v101;
  *((_QWORD *)v98 + 1) = v100;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v78[v81[9]] = *(_QWORD *)&v79[v81[9]];
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241790820()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24179082C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = _s5EntryVMa();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_2417908EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417908F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = _s5EntryVMa();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t _s19EntryMomentDataViewVMa()
{
  uint64_t result;

  result = qword_25714E680;
  if (!qword_25714E680)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417909F0()
{
  unint64_t v0;
  unint64_t v1;

  sub_24178DAD0(319);
  if (v0 <= 0x3F)
  {
    _s5EntryVMa();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_241790A80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241790A90()
{
  sub_2418AA56C();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_2418A915C();
  swift_release();
  swift_retain();
  sub_2418A95E8();
  swift_release();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_241790B60()
{
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_2418A915C();
  swift_release();
  swift_retain();
  sub_2418A95E8();
  swift_release();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241790C14()
{
  sub_2418AA56C();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_2418A915C();
  swift_release();
  swift_retain();
  sub_2418A95E8();
  swift_release();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  return sub_2418AA59C();
}

uint64_t sub_241790CD8(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_2417944F8(v7, v8) & 1;
}

uint64_t sub_241790D1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  void (*v14)(char *, _QWORD, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  char v18;
  uint64_t v19;

  v0 = sub_2418A87B4();
  v1 = *(_QWORD **)(v0 - 8);
  v3 = MEMORY[0x24BDAC7A8](v0, v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v19 - v7;
  v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241860D60((uint64_t)v12);
  v13 = (void (*)(char *, char *, uint64_t))v1[2];
  v13(v8, &v12[*(int *)(v9 + 20)], v0);
  sub_24172588C((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  v14 = (void (*)(char *, _QWORD, uint64_t))v1[13];
  v14(v5, *MEMORY[0x24BDECEE0], v0);
  v15 = sub_2418A87A8();
  v16 = (void (*)(char *, uint64_t))v1[1];
  v16(v5, v0);
  v16(v8, v0);
  if ((v15 & 1) != 0)
    return 2;
  sub_241860D60((uint64_t)v12);
  v13(v8, &v12[*(int *)(v9 + 20)], v0);
  sub_24172588C((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  v14(v5, *MEMORY[0x24BDECEA0], v0);
  sub_24172159C(&qword_25714CB30, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
  v18 = sub_2418A9D68();
  v16(v5, v0);
  v16(v8, v0);
  return (v18 & 1) == 0;
}

uint64_t sub_241790F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  int v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  _QWORD v52[8];

  v52[6] = a2;
  sub_2417939DC(0);
  v52[7] = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417938F4(0);
  v52[3] = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380];
  sub_241731FB0(0, &qword_25714E808, (uint64_t (*)(uint64_t))sub_2417931CC, (uint64_t (*)(uint64_t))sub_2417939DC, MEMORY[0x24BDEF380]);
  v52[4] = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v52 - v14;
  sub_241731FB0(0, &qword_25714E810, (uint64_t (*)(uint64_t))sub_2417931F0, (uint64_t (*)(uint64_t))sub_2417938F4, v11);
  v52[2] = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)v52 - v18;
  sub_2417931CC(0);
  v52[5] = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417931F0(0);
  v52[1] = v24;
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v28 = (char *)v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v26, v29);
  v32 = (char *)v52 - v31;
  v34 = MEMORY[0x24BDAC7A8](v30, v33);
  v36 = (char *)v52 - v35;
  MEMORY[0x24BDAC7A8](v34, v37);
  v39 = (char *)v52 - v38;
  v40 = sub_241790D1C();
  if (v40)
  {
    if (v40 == 1)
    {
      v41 = sub_241791450();
      *(_QWORD *)v10 = sub_2418A8C64();
      *((_QWORD *)v10 + 1) = 0;
      v10[16] = 0;
      sub_241728944(0, &qword_25714E820, sub_241793918);
      sub_241791F8C(a1, v41, (uint64_t)&v10[*(int *)(v42 + 44)]);
      swift_bridgeObjectRelease();
      v43 = sub_2417938F4;
      sub_2417289A8((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_2417938F4);
      swift_storeEnumTagMultiPayload();
      sub_241793B80();
      sub_241793B9C();
      sub_2418A8D24();
      sub_2417289A8((uint64_t)v23, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_2417931CC);
      swift_storeEnumTagMultiPayload();
      sub_241793B5C();
      sub_241793BB8();
      sub_2418A8D24();
      sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417931CC);
      v44 = (uint64_t)v10;
    }
    else
    {
      v47 = sub_241791450();
      *(_QWORD *)v6 = sub_2418A8C64();
      *((_QWORD *)v6 + 1) = 0;
      v6[16] = 0;
      sub_241728944(0, &qword_25714E818, sub_241793A00);
      sub_241792150(a1, (uint64_t)v47, (uint64_t)&v6[*(int *)(v48 + 44)]);
      swift_bridgeObjectRelease();
      v43 = sub_2417939DC;
      sub_2417289A8((uint64_t)v6, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_2417939DC);
      swift_storeEnumTagMultiPayload();
      sub_241793B5C();
      sub_241793BB8();
      sub_2418A8D24();
      v44 = (uint64_t)v6;
    }
    v49 = v43;
  }
  else
  {
    v45 = sub_241791450();
    if (v45[2] < 2uLL)
      v46 = sub_2418A8B8C();
    else
      v46 = sub_2418A8B74();
    *(_QWORD *)v28 = v46;
    *((_QWORD *)v28 + 1) = 0;
    v28[16] = 0;
    sub_241728944(0, &qword_25714E828, sub_241793214);
    sub_241791B18(a1, v45, (uint64_t)&v28[*(int *)(v50 + 44)]);
    sub_241731B4C((uint64_t)v28, (uint64_t)v32, (uint64_t (*)(_QWORD))sub_2417931F0);
    sub_241731B4C((uint64_t)v32, (uint64_t)v36, (uint64_t (*)(_QWORD))sub_2417931F0);
    swift_bridgeObjectRelease();
    sub_241731B4C((uint64_t)v36, (uint64_t)v39, (uint64_t (*)(_QWORD))sub_2417931F0);
    sub_2417289A8((uint64_t)v39, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_2417931F0);
    swift_storeEnumTagMultiPayload();
    sub_241793B80();
    sub_241793B9C();
    sub_2418A8D24();
    sub_2417289A8((uint64_t)v23, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_2417931CC);
    swift_storeEnumTagMultiPayload();
    sub_241793B5C();
    sub_241793BB8();
    sub_2418A8D24();
    sub_24172588C((uint64_t)v23, (uint64_t (*)(_QWORD))sub_2417931CC);
    v44 = (uint64_t)v39;
    v49 = sub_2417931F0;
  }
  return sub_24172588C(v44, (uint64_t (*)(_QWORD))v49);
}

_QWORD *sub_241791450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v1 = sub_2418A91E0();
  v2 = *(_QWORD *)(v1 - 8);
  v71 = v1;
  v72 = v2;
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241794200(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2418A9228();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241860D60((uint64_t)v18);
  sub_24172588C((uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x24BDF1878], v10);
  v19 = *MEMORY[0x24BDF1668];
  v20 = sub_2418A9174();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v9, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v9, 0, 1, v20);
  sub_2418A9198();
  sub_2418A91B0();
  sub_24172588C((uint64_t)v9, (uint64_t (*)(_QWORD))sub_241794200);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v22 = *MEMORY[0x24BDF17C8];
  v23 = v71;
  v24 = v72;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 104);
  v25(v5, v22, v71);
  v26 = sub_2418A91F8();
  swift_release();
  v27 = *(void (**)(char *, uint64_t))(v24 + 8);
  v27(v5, v23);
  sub_241860D60((uint64_t)v18);
  sub_24172588C((uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A912C();
  v25(v5, v22, v23);
  v72 = sub_2418A91F8();
  swift_release();
  v27(v5, v23);
  sub_241860D60((uint64_t)v18);
  sub_24172588C((uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A912C();
  v25(v5, v22, v23);
  v70 = sub_2418A91F8();
  swift_release();
  v27(v5, v23);
  sub_241860D60((uint64_t)v18);
  sub_24172588C((uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles);
  v28 = (void *)objc_opt_self();
  v29 = MEMORY[0x24269BDB4](objc_msgSend(v28, sel_labelColor));
  sub_241860D60((uint64_t)v18);
  sub_24172588C((uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles);
  v30 = MEMORY[0x24269BDB4](objc_msgSend(v28, sel_labelColor));
  sub_241860D60((uint64_t)v18);
  sub_24172588C((uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles);
  v69 = MEMORY[0x24269BDB4](objc_msgSend(v28, sel_secondaryLabelColor));
  v31 = v0 + *(int *)(_s19EntryMomentDataViewVMa() + 20);
  v32 = _s5EntryVMa();
  v33 = v32;
  v34 = (uint64_t *)(v31 + *(int *)(v32 + 24));
  v35 = *v34;
  v36 = v34[1];
  v37 = HIBYTE(v36) & 0xF;
  if ((v36 & 0x2000000000000000) == 0)
    v37 = v35 & 0xFFFFFFFFFFFFLL;
  v38 = (uint64_t *)(v31 + *(int *)(v32 + 20));
  v39 = *v38;
  v40 = v38[1];
  v71 = v30;
  if (v37)
  {
    v66 = v39;
    v67 = v32;
    v68 = v31;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v41 = sub_2418035A8(0, 2, 1, MEMORY[0x24BEE4AF8]);
    v42 = v41[2];
    v43 = v41[3];
    v44 = v42 + 1;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v42 >= v43 >> 1)
      v41 = sub_2418035A8((_QWORD *)(v43 > 1), v42 + 1, 1, v41);
    v41[2] = v44;
    v45 = &v41[6 * v42];
    v45[4] = v35;
    v45[5] = v36;
    v45[6] = v26;
    v45[7] = v29;
    v45[8] = 0x736C6562614CLL;
    v45[9] = 0xE600000000000000;
    v46 = v41[3];
    v47 = v42 + 2;
    swift_bridgeObjectRetain();
    v48 = v72;
    swift_retain();
    swift_retain();
    v49 = v66;
    if (v44 >= v46 >> 1)
      v41 = sub_2418035A8((_QWORD *)(v46 > 1), v47, 1, v41);
    v41[2] = v47;
    v50 = &v41[6 * v44];
    v50[4] = v49;
    v50[5] = v40;
    v51 = v71;
    v50[6] = v48;
    v50[7] = v51;
    v50[8] = 0x746E656D6F4DLL;
    v50[9] = 0xE600000000000000;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v31 = v68;
    v52 = v69;
    v33 = v67;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v41 = sub_2418035A8(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v54 = v41[2];
    v53 = v41[3];
    if (v54 >= v53 >> 1)
      v41 = sub_2418035A8((_QWORD *)(v53 > 1), v54 + 1, 1, v41);
    v52 = v69;
    v41[2] = v54 + 1;
    v55 = &v41[6 * v54];
    v55[4] = v39;
    v55[5] = v40;
    v55[6] = v26;
    v55[7] = v29;
    v55[8] = 0x746E656D6F4DLL;
    v55[9] = 0xE600000000000000;
  }
  v56 = (uint64_t *)(v31 + *(int *)(v33 + 28));
  v58 = *v56;
  v57 = v56[1];
  v59 = HIBYTE(v57) & 0xF;
  if ((v57 & 0x2000000000000000) == 0)
    v59 = v58 & 0xFFFFFFFFFFFFLL;
  if (v59)
  {
    v60 = v41[2];
    v61 = v41[3];
    swift_bridgeObjectRetain();
    v62 = v70;
    swift_retain();
    swift_retain();
    if (v60 >= v61 >> 1)
      v41 = sub_2418035A8((_QWORD *)(v61 > 1), v60 + 1, 1, v41);
    v41[2] = v60 + 1;
    v63 = &v41[6 * v60];
    v63[4] = v58;
    v63[5] = v57;
    v63[6] = v62;
    v63[7] = v52;
    v63[8] = 0xD000000000000011;
    v63[9] = 0x80000002418DC250;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v41;
}

uint64_t sub_241791B18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v43;
  uint64_t v44;

  v43 = a2;
  v44 = a3;
  sub_24179337C(0);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v43 - v10;
  v12 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24179330C(0, (unint64_t *)&qword_25714CCA8, &qword_25714CCB0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v43 - v18;
  sub_241793290();
  v21 = v20;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v43 - v27;
  sub_241791DFC();
  v29 = sub_2418A9108();
  sub_241860D60((uint64_t)v15);
  sub_24172588C((uint64_t)v15, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A84A8();
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_241793BD4((uint64_t)v19, (uint64_t)v25);
  v38 = &v25[*(int *)(v21 + 36)];
  *v38 = v29;
  *((_QWORD *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  sub_241793C38((uint64_t)v19);
  sub_241731B4C((uint64_t)v25, (uint64_t)v28, (uint64_t (*)(_QWORD))sub_241793290);
  *(_QWORD *)v11 = sub_2418A8C64();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  sub_241728944(0, &qword_25714E830, sub_2417933A0);
  sub_241792744(v43, a1, (uint64_t)&v11[*(int *)(v39 + 44)]);
  sub_2417289A8((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_241793290);
  sub_2417289A8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_24179337C);
  v40 = v44;
  sub_2417289A8((uint64_t)v25, v44, (uint64_t (*)(_QWORD))sub_241793290);
  sub_2417933C4(0, &qword_25714E6E8, (void (*)(uint64_t))sub_241793290, sub_24179337C);
  sub_2417289A8((uint64_t)v8, v40 + *(int *)(v41 + 48), (uint64_t (*)(_QWORD))sub_24179337C);
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))sub_24179337C);
  sub_24172588C((uint64_t)v28, (uint64_t (*)(_QWORD))sub_241793290);
  sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))sub_24179337C);
  return sub_24172588C((uint64_t)v25, (uint64_t (*)(_QWORD))sub_241793290);
}

uint64_t sub_241791DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  __int128 v29;

  v1 = type metadata accessor for StateOfMindTimeline.Styles(0);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v16 - v7;
  v9 = _s19EntryMomentDataViewVMa();
  v10 = v0 + *(int *)(v9 + 20);
  v11 = *(double *)(v10 + *(int *)(_s5EntryVMa() + 36));
  LOBYTE(v17) = 5;
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)((unsigned __int8 *)&v17, v11);
  v13 = v22;
  v12 = v23;
  v14 = v24;
  sub_241860D60((uint64_t)v8);
  sub_24172588C((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles);
  sub_241860D60((uint64_t)v5);
  sub_24172588C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9960();
  sub_2418A861C();
  v22 = v13;
  v23 = v12;
  v24 = v14;
  v25 = v17;
  v26 = v18;
  v27 = v19;
  v28 = v20;
  v29 = v21;
  sub_241746E00(*(_QWORD **)(v0 + *(int *)(v9 + 24)), 0x7A696C6175736956, 0xED00006E6F697461);
  return swift_bridgeObjectRelease();
}

uint64_t sub_241791F8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  sub_24179337C(0);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v25 - v12;
  sub_24179330C(0, (unint64_t *)&qword_25714CCA8, &qword_25714CCB0);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)&v25 - v20;
  sub_241791DFC();
  *(_QWORD *)v13 = sub_2418A8C64();
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  sub_241728944(0, &qword_25714E830, sub_2417933A0);
  sub_241792744(a2, a1, (uint64_t)&v13[*(int *)(v22 + 44)]);
  sub_241793BD4((uint64_t)v21, (uint64_t)v18);
  sub_2417289A8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_24179337C);
  sub_241793BD4((uint64_t)v18, a3);
  sub_241793934();
  sub_2417289A8((uint64_t)v10, a3 + *(int *)(v23 + 48), (uint64_t (*)(_QWORD))sub_24179337C);
  sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))sub_24179337C);
  sub_241793C38((uint64_t)v21);
  sub_24172588C((uint64_t)v10, (uint64_t (*)(_QWORD))sub_24179337C);
  return sub_241793C38((uint64_t)v18);
}

uint64_t sub_241792150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[4];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v40[1] = a2;
  v43 = a3;
  v5 = _s19EntryMomentDataViewVMa();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5, v8);
  sub_241793630(0);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v42 = (uint64_t)v40 - v15;
  sub_2417935B8();
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v41 = (uint64_t)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)v40 - v21;
  sub_24179330C(0, (unint64_t *)&qword_25714CCA8, &qword_25714CCB0);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v27 = (char *)v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)v40 - v29;
  sub_241791DFC();
  sub_24179251C((uint64_t)v22);
  *(_QWORD *)v13 = sub_2418A8C64();
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  sub_241728944(0, &qword_25714E840, (void (*)(uint64_t))sub_241793654);
  v40[3] = &v13[*(int *)(v31 + 44)];
  v44 = a2;
  v40[2] = swift_getKeyPath();
  sub_2417289A8(a1, (uint64_t)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))_s19EntryMomentDataViewVMa);
  v32 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v33 = swift_allocObject();
  sub_241731B4C((uint64_t)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v33 + v32, (uint64_t (*)(_QWORD))_s19EntryMomentDataViewVMa);
  sub_241793724();
  sub_24179330C(0, &qword_25714E730, (unint64_t *)&qword_25714CD98);
  sub_24172159C(&qword_25714E768, (uint64_t (*)(uint64_t))sub_241793724, MEMORY[0x24BEE12D8]);
  sub_241793778();
  sub_24179381C();
  swift_bridgeObjectRetain();
  sub_2418A9888();
  v34 = v42;
  sub_241731B4C((uint64_t)v13, v42, (uint64_t (*)(_QWORD))sub_241793630);
  sub_241793BD4((uint64_t)v30, (uint64_t)v27);
  v35 = v41;
  sub_2417289A8((uint64_t)v22, v41, (uint64_t (*)(_QWORD))sub_2417935B8);
  sub_2417289A8(v34, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_241793630);
  v36 = v43;
  sub_241793BD4((uint64_t)v27, v43);
  sub_241793A1C();
  v38 = v37;
  sub_2417289A8(v35, v36 + *(int *)(v37 + 48), (uint64_t (*)(_QWORD))sub_2417935B8);
  sub_2417289A8((uint64_t)v13, v36 + *(int *)(v38 + 64), (uint64_t (*)(_QWORD))sub_241793630);
  sub_24172588C(v34, (uint64_t (*)(_QWORD))sub_241793630);
  sub_24172588C((uint64_t)v22, (uint64_t (*)(_QWORD))sub_2417935B8);
  sub_241793C38((uint64_t)v30);
  sub_24172588C((uint64_t)v13, (uint64_t (*)(_QWORD))sub_241793630);
  sub_24172588C(v35, (uint64_t (*)(_QWORD))sub_2417935B8);
  return sub_241793C38((uint64_t)v27);
}

uint64_t sub_24179251C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a1;
  v2 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = _s19EntryMomentDataViewVMa();
  v6 = v1 + *(int *)(v27 + 20);
  v7 = (uint64_t *)(v6 + *(int *)(_s5EntryVMa() + 32));
  v8 = v7[1];
  v29 = *v7;
  v30 = v8;
  sub_241721040();
  swift_bridgeObjectRetain();
  v9 = sub_2418A92D0();
  v11 = v10;
  v13 = v12 & 1;
  sub_241860D60((uint64_t)v5);
  sub_24172588C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A9210();
  v14 = sub_2418A9294();
  v16 = v15;
  v26 = v17;
  v19 = v18 & 1;
  sub_2417289EC(v9, v11, v13);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241860D60((uint64_t)v5);
  sub_24172588C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles);
  v20 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v29 = MEMORY[0x24269BDB4](v20);
  v21 = sub_2418A9270();
  v23 = v22;
  LOBYTE(v8) = v24 & 1;
  sub_2417289EC(v14, v16, v19);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241746F9C(*(_QWORD **)(v1 + *(int *)(v27 + 24)), 1701669204, 0xE400000000000000);
  sub_2417289EC(v21, v23, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_241792744@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a3;
  v5 = _s19EntryMomentDataViewVMa();
  v39 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v39 + 64);
  MEMORY[0x24BDAC7A8](v5, v7);
  sub_241793630(0);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v42 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (char *)&v39 - v14;
  MEMORY[0x24BDAC7A8](v13, v16);
  v41 = (uint64_t)&v39 - v17;
  sub_241793434(0);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v23);
  v25 = (char *)&v39 - v24;
  *(_QWORD *)v25 = sub_2418A8B68();
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = 1;
  sub_241728944(0, &qword_25714E838, sub_241793458);
  v27 = (uint64_t)&v25[*(int *)(v26 + 44)];
  v40 = a2;
  sub_241792B80(a1, v27);
  v28 = a1[2];
  sub_2418AA4F4();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v29 = swift_dynamicCastClass();
  if (!v29)
  {
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x24BEE4AF8];
  }
  v30 = *(_QWORD *)(v29 + 16);
  swift_release();
  if (v30 == v28 - (v28 != 0))
  {
    v31 = swift_dynamicCastClass();
    if (!v31)
    {
      swift_bridgeObjectRelease();
      v31 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v31 = sub_241760B88((uint64_t)a1, (uint64_t)(a1 + 4), v28 != 0, (2 * v28) | 1);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)v15 = sub_2418A8C64();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  sub_241728944(0, &qword_25714E840, (void (*)(uint64_t))sub_241793654);
  v44 = v31;
  swift_getKeyPath();
  sub_2417289A8(v40, (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))_s19EntryMomentDataViewVMa);
  v32 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v33 = swift_allocObject();
  sub_241731B4C((uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v33 + v32, (uint64_t (*)(_QWORD))_s19EntryMomentDataViewVMa);
  sub_241793724();
  sub_24179330C(0, &qword_25714E730, (unint64_t *)&qword_25714CD98);
  sub_24172159C(&qword_25714E768, (uint64_t (*)(uint64_t))sub_241793724, MEMORY[0x24BEE12D8]);
  sub_241793778();
  sub_24179381C();
  sub_2418A9888();
  v34 = v41;
  sub_241731B4C((uint64_t)v15, v41, (uint64_t (*)(_QWORD))sub_241793630);
  sub_2417289A8((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_241793434);
  v35 = v42;
  sub_2417289A8(v34, v42, (uint64_t (*)(_QWORD))sub_241793630);
  v36 = v43;
  sub_2417289A8((uint64_t)v22, v43, (uint64_t (*)(_QWORD))sub_241793434);
  sub_2417933C4(0, &qword_25714E708, sub_241793434, sub_241793630);
  sub_2417289A8(v35, v36 + *(int *)(v37 + 48), (uint64_t (*)(_QWORD))sub_241793630);
  sub_24172588C(v34, (uint64_t (*)(_QWORD))sub_241793630);
  sub_24172588C((uint64_t)v25, (uint64_t (*)(_QWORD))sub_241793434);
  sub_24172588C(v35, (uint64_t (*)(_QWORD))sub_241793630);
  return sub_24172588C((uint64_t)v22, (uint64_t (*)(_QWORD))sub_241793434);
}

uint64_t sub_241792B80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54[6];

  v4 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417935B8();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24179355C();
  v53 = v12;
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v50 - v18;
  sub_2417934E8();
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v25);
  v27 = (char *)&v50 - v26;
  if (a1[2])
  {
    v28 = a1[4];
    v29 = a1[5];
    v51 = v7;
    v52 = v19;
    v30 = a2;
    v32 = a1[6];
    v31 = a1[7];
    v33 = a1[8];
    v34 = a1[9];
    v54[0] = v28;
    v54[1] = v29;
    v54[2] = v32;
    v54[3] = v31;
    v54[4] = v33;
    v54[5] = v34;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_241792F1C(v54);
    swift_bridgeObjectRelease();
    a2 = v30;
    v19 = v52;
    swift_release();
    v7 = v51;
    swift_release();
    swift_bridgeObjectRelease();
    sub_24179330C(0, &qword_25714E730, (unint64_t *)&qword_25714CD98);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v27, 0, 1, v35);
  }
  else
  {
    sub_24179330C(0, &qword_25714E730, (unint64_t *)&qword_25714CD98);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v27, 1, 1, v36);
  }
  sub_24179251C((uint64_t)v11);
  v37 = sub_2418A90FC();
  sub_241860D60((uint64_t)v7);
  sub_24172588C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2418A84A8();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  sub_2417289A8((uint64_t)v11, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_2417935B8);
  v46 = &v16[*(int *)(v53 + 36)];
  *v46 = v37;
  *((_QWORD *)v46 + 1) = v39;
  *((_QWORD *)v46 + 2) = v41;
  *((_QWORD *)v46 + 3) = v43;
  *((_QWORD *)v46 + 4) = v45;
  v46[40] = 0;
  sub_24172588C((uint64_t)v11, (uint64_t (*)(_QWORD))sub_2417935B8);
  sub_241731B4C((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_24179355C);
  sub_2417289A8((uint64_t)v27, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_2417934E8);
  sub_2417289A8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_24179355C);
  sub_2417289A8((uint64_t)v24, a2, (uint64_t (*)(_QWORD))sub_2417934E8);
  sub_241793474();
  v48 = a2 + *(int *)(v47 + 48);
  *(_QWORD *)v48 = 0;
  *(_BYTE *)(v48 + 8) = 1;
  sub_2417289A8((uint64_t)v16, a2 + *(int *)(v47 + 64), (uint64_t (*)(_QWORD))sub_24179355C);
  sub_24172588C((uint64_t)v19, (uint64_t (*)(_QWORD))sub_24179355C);
  sub_24172588C((uint64_t)v27, (uint64_t (*)(_QWORD))sub_2417934E8);
  sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))sub_24179355C);
  return sub_24172588C((uint64_t)v24, (uint64_t (*)(_QWORD))sub_2417934E8);
}

uint64_t sub_241792F1C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  __int16 v28;

  v3 = a1[1];
  v24 = *a1;
  v25 = v3;
  sub_241721040();
  swift_bridgeObjectRetain();
  v4 = sub_2418A92D0();
  v6 = v5;
  v8 = v7 & 1;
  v9 = sub_2418A9294();
  v11 = v10;
  v13 = v12 & 1;
  sub_2417289EC(v4, v6, v8);
  swift_bridgeObjectRelease();
  v23 = a1[3];
  v24 = v23;
  swift_retain();
  v14 = sub_2418A9270();
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  sub_2417289EC(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_241793C9C((uint64_t)&v23);
  v24 = v14;
  v25 = v16;
  v26 = v20;
  v27 = v18;
  v28 = 256;
  v21 = _s19EntryMomentDataViewVMa();
  sub_241747128(*(_QWORD **)(v1 + *(int *)(v21 + 24)), a1[4], a1[5]);
  sub_2417289EC(v14, v16, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_241793090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v1 = sub_2418A8F7C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24179318C(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241790F08(v0, (uint64_t)v9);
  sub_2418A8F64();
  sub_241793ADC();
  sub_2418A942C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return sub_24172588C((uint64_t)v9, (uint64_t (*)(_QWORD))sub_24179318C);
}

void sub_24179318C(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E6C0, (uint64_t (*)(uint64_t))sub_2417931A8, MEMORY[0x24BDF3F28]);
}

void sub_2417931A8(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714E6C8, (uint64_t (*)(uint64_t))sub_2417931CC, (uint64_t (*)(uint64_t))sub_2417939DC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_2417931CC(uint64_t a1)
{
  sub_241731FB0(a1, &qword_25714E6D0, (uint64_t (*)(uint64_t))sub_2417931F0, (uint64_t (*)(uint64_t))sub_2417938F4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_2417931F0(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_25714E6D8, (uint64_t (*)(uint64_t))sub_241793214, sub_2417938D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF4480]);
}

void sub_241793214(uint64_t a1)
{
  sub_241793238(a1, &qword_25714E6E0, &qword_25714E6E8, (void (*)(uint64_t))sub_241793290, sub_24179337C);
}

void sub_241793238(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_2417933C4(255, a3, a4, a5);
    v6 = sub_2418A99CC();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_241793290()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E6F0)
  {
    sub_24179330C(255, (unint64_t *)&qword_25714CCA8, &qword_25714CCB0);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E6F0);
  }
}

void sub_24179330C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_24174B764(255, a3);
    sub_2418A909C();
    v4 = sub_2418A87FC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_24179337C(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_25714E6F8, (uint64_t (*)(uint64_t))sub_2417933A0, sub_2417938BC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
}

void sub_2417933A0(uint64_t a1)
{
  sub_241793238(a1, &qword_25714E700, &qword_25714E708, sub_241793434, sub_241793630);
}

void sub_2417933C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_241793434(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_25714E710, (uint64_t (*)(uint64_t))sub_241793458, sub_241793614, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF4480]);
}

void sub_241793458(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E718, (uint64_t (*)(uint64_t))sub_241793474, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241793474()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714E720)
  {
    sub_2417934E8();
    sub_24179355C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714E720);
  }
}

void sub_2417934E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E728)
  {
    sub_24179330C(255, &qword_25714E730, (unint64_t *)&qword_25714CD98);
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E728);
  }
}

void sub_24179355C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E738)
  {
    sub_2417935B8();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E738);
  }
}

void sub_2417935B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E740)
  {
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E740);
  }
}

uint64_t sub_241793614()
{
  return sub_24172159C(&qword_25714E748, (uint64_t (*)(uint64_t))sub_241793458, MEMORY[0x24BDF5428]);
}

void sub_241793630(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_25714E750, (uint64_t (*)(uint64_t))sub_241793654, (uint64_t (*)(void))sub_2417937BC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
}

void sub_241793654()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E758)
  {
    sub_241793724();
    sub_24179330C(255, &qword_25714E730, (unint64_t *)&qword_25714CD98);
    sub_24172159C(&qword_25714E768, (uint64_t (*)(uint64_t))sub_241793724, MEMORY[0x24BEE12D8]);
    sub_241793778();
    v0 = sub_2418A98A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E758);
  }
}

void sub_241793724()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714E760)
  {
    v0 = sub_2418A9F0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714E760);
  }
}

unint64_t sub_241793778()
{
  unint64_t result;

  result = qword_25714E770;
  if (!qword_25714E770)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4190, &_s19EntryMomentDataViewV15ItemDescriptionVN);
    atomic_store(result, (unint64_t *)&qword_25714E770);
  }
  return result;
}

unint64_t sub_2417937BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_25714E778;
  if (!qword_25714E778)
  {
    sub_241793654();
    v2 = v1;
    v3 = sub_24179381C();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4A08], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_25714E778);
  }
  return result;
}

unint64_t sub_24179381C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714E780;
  if (!qword_25714E780)
  {
    sub_24179330C(255, &qword_25714E730, (unint64_t *)&qword_25714CD98);
    v2 = v1;
    v3[0] = sub_24174B7AC();
    v3[1] = sub_24172159C(&qword_25714C550, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714E780);
  }
  return result;
}

uint64_t sub_2417938BC()
{
  return sub_24172159C(&qword_25714E788, (uint64_t (*)(uint64_t))sub_2417933A0, MEMORY[0x24BDF5428]);
}

uint64_t sub_2417938D8()
{
  return sub_24172159C(&qword_25714E790, (uint64_t (*)(uint64_t))sub_241793214, MEMORY[0x24BDF5428]);
}

void sub_2417938F4(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_25714E798, (uint64_t (*)(uint64_t))sub_241793918, sub_2417939C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
}

void sub_241793918(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E7A0, (uint64_t (*)(uint64_t))sub_241793934, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241793934()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714E7A8)
  {
    sub_24179330C(255, (unint64_t *)&qword_25714CCA8, &qword_25714CCB0);
    sub_24179337C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714E7A8);
  }
}

uint64_t sub_2417939C0()
{
  return sub_24172159C(&qword_25714E7B0, (uint64_t (*)(uint64_t))sub_241793918, MEMORY[0x24BDF5428]);
}

void sub_2417939DC(uint64_t a1)
{
  sub_24173EEE8(a1, &qword_25714E7B8, (uint64_t (*)(uint64_t))sub_241793A00, sub_241793AC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
}

void sub_241793A00(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E7C0, (uint64_t (*)(uint64_t))sub_241793A1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_241793A1C()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_25714E7C8)
  {
    sub_24179330C(255, (unint64_t *)&qword_25714CCA8, &qword_25714CCB0);
    sub_2417935B8();
    sub_241793630(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_25714E7C8);
  }
}

uint64_t sub_241793AC0()
{
  return sub_24172159C(&qword_25714E7D0, (uint64_t (*)(uint64_t))sub_241793A00, MEMORY[0x24BDF5428]);
}

unint64_t sub_241793ADC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_25714E7D8;
  if (!qword_25714E7D8)
  {
    sub_24179318C(255);
    v2 = v1;
    v3 = sub_24175C4B0(&qword_25714E7E0, (uint64_t (*)(uint64_t))sub_2417931A8, sub_241793B5C, sub_241793BB8);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF3F50], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_25714E7D8);
  }
  return result;
}

uint64_t sub_241793B5C()
{
  return sub_24175C4B0(&qword_25714E7E8, (uint64_t (*)(uint64_t))sub_2417931CC, sub_241793B80, sub_241793B9C);
}

uint64_t sub_241793B80()
{
  return sub_24172159C(&qword_25714E7F0, (uint64_t (*)(uint64_t))sub_2417931F0, MEMORY[0x24BDF4498]);
}

uint64_t sub_241793B9C()
{
  return sub_24172159C(&qword_25714E7F8, (uint64_t (*)(uint64_t))sub_2417938F4, MEMORY[0x24BDF4700]);
}

uint64_t sub_241793BB8()
{
  return sub_24172159C(&qword_25714E800, (uint64_t (*)(uint64_t))sub_2417939DC, MEMORY[0x24BDF4700]);
}

uint64_t sub_241793BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24179330C(0, (unint64_t *)&qword_25714CCA8, &qword_25714CCB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241793C38(uint64_t a1)
{
  uint64_t v2;

  sub_24179330C(0, (unint64_t *)&qword_25714CCA8, &qword_25714CCB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241793C9C(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t objectdestroyTm_7()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(unint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;

  v1 = _s19EntryMomentDataViewVMa();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + v2;
  sub_24178DAD0(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = v1;
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v0 + v2, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v8 = v3 + v7[5];
    v9 = sub_2418A87B4();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v8, v9);
    v11 = v3 + v7[7];
    v12 = sub_2418A84E4();
    v38 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v38(v11, v12);
    v13 = v3 + v7[8];
    if (!v6(v13, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v13, v4);
    v14 = _s6StylesV8TimelineVMa(0);
    v10(v13 + *(int *)(v14 + 20), v9);
    v15 = v3 + v7[9];
    if (!v6(v15, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v15, v4);
    v16 = _s6StylesV6NoDataVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    v17 = v3 + v7[10];
    if (!v6(v17, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v17, v4);
    v18 = _s6StylesV11PlaceholderVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    v19 = v3 + v7[11];
    if (!v6(v19, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v19, v4);
    v20 = _s6StylesV6SymbolVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    v21 = v3 + v7[12];
    if (!v6(v21, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v21, v4);
    v22 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    v38(v21 + *(int *)(v22 + 28), v12);
    v23 = v3 + v7[13];
    if (!v6(v23, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v23, v4);
    v24 = _s6StylesV5EmptyVMa(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    v25 = v3 + v7[14];
    if (!v6(v25, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v25, v4);
    v26 = _s6StylesV5DailyVMa(0);
    v10(v25 + *(int *)(v26 + 20), v9);
    v27 = v3 + v7[15];
    if (!v6(v27, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v27, v4);
    v28 = _s6StylesV9MomentaryVMa(0);
    v10(v27 + *(int *)(v28 + 20), v9);
    v29 = v3 + v7[16];
    if (!v6(v29, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v29, v4);
    v30 = _s6StylesV6HeaderVMa(0);
    v10(v29 + *(int *)(v30 + 20), v9);
    v31 = v3 + v7[17];
    if (!v6(v31, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v31, v4);
    v32 = _s6StylesV11ChartButtonVMa(0);
    v10(v31 + *(int *)(v32 + 20), v9);
    v33 = v3 + v7[18];
    if (!v6(v33, 1, v4))
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v33, v4);
    v34 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v33 + *(int *)(v34 + 20), v9);
    v1 = v39;
  }
  else
  {
    swift_release();
  }
  v35 = v3 + *(int *)(v1 + 20);
  v36 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  _s5EntryVMa();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_241794198(_OWORD *a1)
{
  __int128 v2;
  _OWORD v4[3];

  _s19EntryMomentDataViewVMa();
  v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  v4[2] = a1[2];
  return sub_241792F1C((uint64_t *)v4);
}

void sub_241794200(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714CD68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t _s19EntryMomentDataViewV15ItemDescriptionVwxx()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19EntryMomentDataViewV15ItemDescriptionVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s19EntryMomentDataViewV15ItemDescriptionVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s19EntryMomentDataViewV15ItemDescriptionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19EntryMomentDataViewV15ItemDescriptionVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s19EntryMomentDataViewV15ItemDescriptionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s19EntryMomentDataViewV15ItemDescriptionVMa()
{
  return &_s19EntryMomentDataViewV15ItemDescriptionVN;
}

uint64_t sub_241794468()
{
  sub_24179318C(255);
  sub_241793ADC();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2417944B4()
{
  unint64_t result;

  result = qword_25714E848;
  if (!qword_25714E848)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4168, &_s19EntryMomentDataViewV15ItemDescriptionVN);
    atomic_store(result, (unint64_t *)&qword_25714E848);
  }
  return result;
}

uint64_t sub_2417944F8(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_2418AA4DC(), result = 0, (v5 & 1) != 0))
  {
    if ((sub_2418A9138() & 1) != 0 && (sub_2418A95C4() & 1) != 0)
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
        return 1;
      else
        return sub_2418AA4DC();
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241794598()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;

  v1 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___isCompletingFirstTimeFlow;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___isCompletingFirstTimeFlow);
  if (v2 == 2)
  {
    v3 = sub_24179787C(*(_QWORD *)(v0 + 16)) ^ 1;
    *(_BYTE *)(v0 + v1) = v3 & 1;
  }
  else
  {
    v3 = v2 & 1;
  }
  return v3 & 1;
}

double StateOfMindEntryModel.effectiveValence.getter()
{
  return sub_24179461C();
}

double StateOfMindEntryModel.valence.getter()
{
  return sub_24179461C();
}

double sub_24179461C()
{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_241794684(uint64_t a1, char a2)
{
  uint64_t *v2;
  char *v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;
  char v14;
  _BYTE *v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  BOOL v21;
  uint64_t v23;
  char v24;
  _QWORD aBlock[6];

  v23 = *v2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  v21 = aBlock[0] == 2;
  v4 = (char *)v2 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration;
  swift_beginAccess();
  v5 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  v6 = v4[*(int *)(v5 + 32)];
  v7 = v4[*(int *)(v5 + 36)];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  v8 = *(_QWORD *)(aBlock[0] + 16);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  v9 = *(_QWORD *)(aBlock[0] + 16);
  swift_bridgeObjectRelease();
  v10 = v9 != 0;
  v11 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_completedAnalyticsSteps);
  swift_beginAccess();
  v12 = *v11;
  swift_bridgeObjectRetain();
  v13 = sub_2418A6494(a1, v12);
  swift_bridgeObjectRelease();
  v14 = sub_241794598();
  type metadata accessor for StateOfMindLoggingEvent();
  v15 = (_BYTE *)swift_allocObject();
  v15[16] = a1;
  v15[17] = a2;
  v15[18] = v6;
  v15[19] = v7;
  v15[20] = v21;
  v15[21] = v8 != 0;
  v15[22] = v10;
  v15[23] = (v13 & 1) == 0;
  v15[24] = v14 & 1;
  v16 = sub_241797C64();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v23;
  aBlock[4] = sub_24179E90C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2418A6B0C;
  aBlock[3] = &block_descriptor_58;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_submitEvent_completion_, v15, v18);
  _Block_release(v18);

  swift_release();
  v19 = *v11;
  swift_bridgeObjectRetain();
  LOBYTE(v18) = sub_2418A6494(a1, v19);
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    swift_beginAccess();
    sub_24188A414(&v24, a1);
    swift_endAccess();
  }
  return swift_release();
}

uint64_t StateOfMindEntryModel.valence.setter()
{
  return sub_2417949D4();
}

uint64_t StateOfMindEntryModel.effectiveValence.setter()
{
  return sub_2417949D4();
}

uint64_t sub_2417949D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2418A8424();
}

uint64_t StateOfMindEntryModel.labels.setter()
{
  return sub_241794A68();
}

uint64_t StateOfMindEntryModel.domains.setter()
{
  return sub_241794A68();
}

uint64_t sub_241794A68()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2418A8424();
}

uint64_t StateOfMindEntryModel.context.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2418A8424();
  return sub_241797194();
}

uint64_t StateOfMindEntryModel.saveSample()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  sub_2418A9F48();
  v1[3] = sub_2418A9F3C();
  v1[4] = sub_2418A9F18();
  v1[5] = v2;
  return swift_task_switch();
}

uint64_t sub_241794BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_hasInitiatedSampleSave;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_hasInitiatedSampleSave) & 1) != 0)
  {
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = sub_2417981DC();
    *(_QWORD *)(v0 + 48) = v4;
    *(_BYTE *)(v1 + v2) = 1;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v5;
    *v5 = v0;
    v5[1] = sub_241794C54;
    return sub_2417984B0(v4);
  }
}

uint64_t sub_241794C54()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241794CA0()
{
  uint64_t v0;
  _QWORD *v1;

  sub_241794684(7, 0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_241794CF8;
  return sub_241799044();
}

uint64_t sub_241794CF8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 72) = v2;
  *v2 = v4;
  v2[1] = sub_241794D5C;
  return sub_241799760();
}

uint64_t sub_241794D5C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241794DA8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StateOfMindEntryModel.labels.getter()
{
  return sub_241796D40();
}

uint64_t sub_241794DF4@<X0>(_QWORD *a1@<X8>)
{
  return sub_241796DBC(a1);
}

uint64_t sub_241794E08()
{
  return sub_241796E48();
}

void StateOfMindEntryModel.Configuration.initialReflectiveInterval.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t StateOfMindEntryModel.Configuration.initialReflectiveInterval.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

uint64_t (*StateOfMindEntryModel.Configuration.initialReflectiveInterval.modify())()
{
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StateOfMindEntryModel.Configuration(0) + 20);
  v4 = sub_2418A8100();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StateOfMindEntryModel.Configuration.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StateOfMindEntryModel.Configuration(0) + 20);
  v4 = sub_2418A8100();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*StateOfMindEntryModel.Configuration.date.modify())()
{
  type metadata accessor for StateOfMindEntryModel.Configuration(0);
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.parentSampleUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  return sub_2417289A8(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))sub_241799D38);
}

uint64_t StateOfMindEntryModel.Configuration.parentSampleUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for StateOfMindEntryModel.Configuration(0) + 24);
  return sub_241799D54(a1, v3);
}

uint64_t (*StateOfMindEntryModel.Configuration.parentSampleUUID.modify())()
{
  type metadata accessor for StateOfMindEntryModel.Configuration(0);
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.fitnessPlusSessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StateOfMindEntryModel.Configuration(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StateOfMindEntryModel.Configuration.fitnessPlusSessionID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for StateOfMindEntryModel.Configuration(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*StateOfMindEntryModel.Configuration.fitnessPlusSessionID.modify())()
{
  type metadata accessor for StateOfMindEntryModel.Configuration(0);
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.entryPoint.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t StateOfMindEntryModel.Configuration.entryPoint.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*StateOfMindEntryModel.Configuration.entryPoint.modify())()
{
  type metadata accessor for StateOfMindEntryModel.Configuration(0);
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.provenance.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t StateOfMindEntryModel.Configuration.provenance.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*StateOfMindEntryModel.Configuration.provenance.modify())()
{
  type metadata accessor for StateOfMindEntryModel.Configuration(0);
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.init(reflectiveInterval:date:parentSampleUUID:fitnessPlusSessionID:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  char v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  v11 = *a1;
  v12 = *((_BYTE *)a1 + 8);
  v13 = (int *)type metadata accessor for StateOfMindEntryModel.Configuration(0);
  v14 = a6 + v13[6];
  v15 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = (_QWORD *)(a6 + v13[7]);
  *v16 = 0;
  v16[1] = 0;
  *(_BYTE *)(a6 + v13[8]) = 11;
  *(_BYTE *)(a6 + v13[9]) = 6;
  *(_QWORD *)a6 = v11;
  *(_BYTE *)(a6 + 8) = v12;
  v17 = a6 + v13[5];
  v18 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a2, v18);
  sub_241799D54(a3, v14);
  result = swift_bridgeObjectRelease();
  *v16 = a4;
  v16[1] = a5;
  return result;
}

uint64_t StateOfMindEntryModel.Configuration.init(reflectiveInterval:date:parentSampleUUID:fitnessPlusSessionID:entryPoint:provenance:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  char v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  char v23;

  v11 = *a1;
  v12 = *((_BYTE *)a1 + 8);
  v22 = *a7;
  v23 = *a6;
  v13 = (int *)type metadata accessor for StateOfMindEntryModel.Configuration(0);
  v14 = a8 + v13[6];
  v15 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = (_QWORD *)(a8 + v13[7]);
  *v16 = 0;
  v16[1] = 0;
  v17 = v13[8];
  *(_BYTE *)(a8 + v17) = 11;
  v18 = v13[9];
  *(_BYTE *)(a8 + v18) = 6;
  *(_QWORD *)a8 = v11;
  *(_BYTE *)(a8 + 8) = v12;
  v19 = a8 + v13[5];
  v20 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a2, v20);
  sub_241799D54(a3, v14);
  result = swift_bridgeObjectRelease();
  *v16 = a4;
  v16[1] = a5;
  *(_BYTE *)(a8 + v17) = v23;
  *(_BYTE *)(a8 + v18) = v22;
  return result;
}

uint64_t sub_241795368(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2417953A8 + 4 * byte_2418D41E0[a1]))(0xD000000000000019, 0x80000002418DCF00);
}

uint64_t sub_2417953A8()
{
  return 1702125924;
}

unint64_t sub_2417953B8()
{
  return 0xD000000000000010;
}

uint64_t sub_2417953D4()
{
  uint64_t v0;

  return v0 + 4;
}

uint64_t sub_2417953EC()
{
  return 0x696F507972746E65;
}

uint64_t sub_24179540C()
{
  return 0x6E616E65766F7270;
}

uint64_t sub_241795430()
{
  unsigned __int8 *v0;

  return sub_241795368(*v0);
}

uint64_t sub_241795438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24179BFBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24179545C()
{
  return 0;
}

void sub_241795468(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_241795474()
{
  sub_241799D98();
  return sub_2418AA5C0();
}

uint64_t sub_24179549C()
{
  sub_241799D98();
  return sub_2418AA5CC();
}

uint64_t StateOfMindEntryModel.Configuration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v3 = v1;
  sub_24177AE40(0, &qword_25714E8A0, (uint64_t (*)(void))sub_241799D98, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241799D98();
  sub_2418AA5B4();
  v11 = *((_BYTE *)v3 + 8);
  v14 = *v3;
  v15 = v11;
  v16 = 0;
  sub_241799DDC();
  sub_2418AA488();
  if (!v2)
  {
    v12 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
    LOBYTE(v14) = 1;
    sub_2418A8100();
    sub_24172159C(&qword_25714E8B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_2418AA488();
    LOBYTE(v14) = 2;
    sub_2418A8130();
    sub_24172159C(&qword_25714E8C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_2418AA470();
    LOBYTE(v14) = 3;
    sub_2418AA464();
    LOBYTE(v14) = *((_BYTE *)v3 + *(int *)(v12 + 32));
    v16 = 4;
    sub_241799E20();
    sub_2418AA470();
    LOBYTE(v14) = *((_BYTE *)v3 + *(int *)(v12 + 36));
    v16 = 5;
    sub_241799E64();
    sub_2418AA470();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t StateOfMindEntryModel.Configuration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v50;
  char v51;

  v37 = a2;
  sub_241799D38(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v39 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2418A8100();
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24177AE40(0, &qword_25714E8D8, (uint64_t (*)(void))sub_241799D98, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.CodingKeys, MEMORY[0x24BEE33E0]);
  v44 = v9;
  v40 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v36 - v11;
  v13 = (int *)type metadata accessor for StateOfMindEntryModel.Configuration(0);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v17[*(int *)(v15 + 24)];
  v19 = sub_2418A8130();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v46 = v18;
  v20(v18, 1, 1, v19);
  v21 = &v17[v13[7]];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v48 = v21;
  v38 = v13[8];
  v17[v38] = 11;
  v22 = v13[9];
  v17[v22] = 6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241799D98();
  v45 = v12;
  v23 = v47;
  sub_2418AA5A8();
  v24 = (uint64_t)a1;
  if (v23)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_24172588C(v46, (uint64_t (*)(_QWORD))sub_241799D38);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v36[0] = v22;
    v36[1] = v19;
    v26 = v41;
    v25 = v42;
    v27 = v43;
    v47 = v24;
    v51 = 0;
    sub_241799EA8();
    sub_2418AA440();
    v28 = v50;
    *(_QWORD *)v17 = v49;
    v17[8] = v28;
    LOBYTE(v49) = 1;
    sub_24172159C(&qword_25714E8E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_2418AA440();
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v17[v13[5]], v26, v27);
    LOBYTE(v49) = 2;
    sub_24172159C(&qword_25714E8F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v29 = (uint64_t)v39;
    sub_2418AA428();
    sub_241799D54(v29, v46);
    LOBYTE(v49) = 3;
    v30 = sub_2418AA41C();
    v32 = v31;
    v33 = (uint64_t *)v48;
    swift_bridgeObjectRelease();
    *v33 = v30;
    v33[1] = v32;
    v51 = 4;
    sub_241799EEC();
    v34 = v44;
    sub_2418AA428();
    v17[v38] = v49;
    v51 = 5;
    sub_241799F30();
    sub_2418AA428();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v45, v34);
    v17[v36[0]] = v49;
    sub_2417289A8((uint64_t)v17, v37, type metadata accessor for StateOfMindEntryModel.Configuration);
    __swift_destroy_boxed_opaque_existential_1(v47);
    return sub_24172588C((uint64_t)v17, type metadata accessor for StateOfMindEntryModel.Configuration);
  }
}

uint64_t sub_241795C54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StateOfMindEntryModel.Configuration.init(from:)(a1, a2);
}

uint64_t sub_241795C68(_QWORD *a1)
{
  return StateOfMindEntryModel.Configuration.encode(to:)(a1);
}

uint64_t StateOfMindEntryModel.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration;
  swift_beginAccess();
  return sub_2417289A8(v3, a1, type metadata accessor for StateOfMindEntryModel.Configuration);
}

uint64_t StateOfMindEntryModel.date.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  return swift_release();
}

uint64_t sub_241795D38()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  return swift_release();
}

uint64_t sub_241795DA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v2 = sub_2418A8100();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v13 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11((char *)&v13 - v9, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v11(v7, (uint64_t)v10, v2);
  swift_retain();
  sub_2418A8424();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
}

uint64_t StateOfMindEntryModel.date.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = sub_2418A8100();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  swift_retain();
  sub_2418A8424();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*StateOfMindEntryModel.date.modify(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_2418A840C();
  return sub_241795FEC;
}

uint64_t StateOfMindEntryModel.$date.getter()
{
  return sub_241796338((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date, sub_241799F7C);
}

uint64_t StateOfMindEntryModel.$date.setter(uint64_t a1)
{
  return sub_24179653C(a1, (uint64_t (*)(_QWORD))sub_241799F98, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date, sub_241799F7C);
}

void (*StateOfMindEntryModel.$date.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_241799F98(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_241799F7C(0);
  v3[16] = v9;
  sub_2418A83F4();
  swift_endAccess();
  return sub_2417960E0;
}

uint64_t StateOfMindEntryModel.reflectiveInterval.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_241796154@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2417961D0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2418A8424();
}

uint64_t StateOfMindEntryModel.reflectiveInterval.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2418A8424();
}

void (*StateOfMindEntryModel.reflectiveInterval.modify(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_2418A840C();
  return sub_241795FEC;
}

uint64_t StateOfMindEntryModel.$reflectiveInterval.getter()
{
  return sub_241796338((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval, sub_241799FBC);
}

uint64_t sub_241796338(uint64_t a1, void (*a2)(_QWORD))
{
  swift_beginAccess();
  a2(0);
  sub_2418A83F4();
  return swift_endAccess();
}

uint64_t sub_24179639C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  swift_beginAccess();
  a5(0);
  sub_2418A83F4();
  return swift_endAccess();
}

uint64_t sub_241796408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, void (*a7)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v20;

  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v20 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v18((char *)&v20 - v16, a1, v9);
  v18(v14, (uint64_t)v17, v9);
  swift_beginAccess();
  a7(0);
  sub_2418A8400();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v17, v9);
}

uint64_t StateOfMindEntryModel.$reflectiveInterval.setter(uint64_t a1)
{
  return sub_24179653C(a1, (uint64_t (*)(_QWORD))sub_241799FD8, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval, sub_241799FBC);
}

uint64_t sub_24179653C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v6 = a2(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v11 - v9, a1, v6);
  swift_beginAccess();
  a4(0);
  sub_2418A8400();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

void (*StateOfMindEntryModel.$reflectiveInterval.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_241799FD8(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_241799FBC(0);
  v3[16] = v9;
  sub_2418A83F4();
  swift_endAccess();
  return sub_2417960E0;
}

double sub_2417966D0@<D0>(double *a1@<X8>)
{
  return sub_2417975AC(a1);
}

uint64_t sub_2417966E4()
{
  return sub_24179763C();
}

void (*StateOfMindEntryModel.valence.modify(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_2418A840C();
  return sub_241795FEC;
}

uint64_t StateOfMindEntryModel.$valence.getter()
{
  return sub_24179678C((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence, &qword_25714E938, MEMORY[0x24BEE13C8]);
}

uint64_t sub_24179678C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  swift_beginAccess();
  sub_24172887C(0, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A83F4();
  return swift_endAccess();
}

uint64_t sub_241796804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  swift_beginAccess();
  sub_24172887C(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A83F4();
  return swift_endAccess();
}

uint64_t sub_241796884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, uint64_t a7, unint64_t *a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v23;

  sub_24172887C(0, a5, a6, MEMORY[0x24BDB9ED8]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v23 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v21((char *)&v23 - v19, a1, v12);
  v21(v17, (uint64_t)v20, v12);
  swift_beginAccess();
  sub_24172887C(0, a8, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A8400();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v20, v12);
}

uint64_t StateOfMindEntryModel.$valence.setter(uint64_t a1)
{
  return sub_2417969E4(a1, &qword_25714E940, MEMORY[0x24BEE13C8], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence, &qword_25714E938);
}

uint64_t sub_2417969E4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_24172887C(0, a2, a3, MEMORY[0x24BDB9ED8]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v14 - v12, a1, v9);
  swift_beginAccess();
  sub_24172887C(0, a5, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2418A8400();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
}

void (*StateOfMindEntryModel.$valence.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = MEMORY[0x24BEE13C8];
  sub_24172887C(0, &qword_25714E940, MEMORY[0x24BEE13C8], MEMORY[0x24BDB9ED8]);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  v8 = malloc(v7);
  v9 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_24172887C(0, &qword_25714E938, v4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v3[16] = v10;
  sub_2418A83F4();
  swift_endAccess();
  return sub_2417960E0;
}

void (*StateOfMindEntryModel.labels.modify(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_2418A840C();
  return sub_241795FEC;
}

uint64_t StateOfMindEntryModel.$labels.getter()
{
  return sub_241796338((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels, sub_241799FF4);
}

uint64_t StateOfMindEntryModel.$labels.setter(uint64_t a1)
{
  return sub_24179653C(a1, (uint64_t (*)(_QWORD))sub_24179A02C, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels, sub_241799FF4);
}

void (*StateOfMindEntryModel.$labels.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_24179A02C(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_241799FF4(0);
  v3[16] = v9;
  sub_2418A83F4();
  swift_endAccess();
  return sub_2417960E0;
}

uint64_t StateOfMindEntryModel.domains.getter()
{
  return sub_241796D40();
}

uint64_t sub_241796D40()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_241796DA8@<X0>(_QWORD *a1@<X8>)
{
  return sub_241796DBC(a1);
}

uint64_t sub_241796DBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_241796E34()
{
  return sub_241796E48();
}

uint64_t sub_241796E48()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_2418A8424();
}

void (*StateOfMindEntryModel.domains.modify(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_2418A840C();
  return sub_241795FEC;
}

uint64_t StateOfMindEntryModel.$domains.getter()
{
  return sub_241796338((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains, sub_24179A048);
}

uint64_t StateOfMindEntryModel.$domains.setter(uint64_t a1)
{
  return sub_24179653C(a1, (uint64_t (*)(_QWORD))sub_24179A064, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains, sub_24179A048);
}

void (*StateOfMindEntryModel.$domains.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_24179A064(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_24179A048(0);
  v3[16] = v9;
  sub_2418A83F4();
  swift_endAccess();
  return sub_2417960E0;
}

uint64_t StateOfMindEntryModel.context.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_241797094@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_241797110()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2418A8424();
  return sub_241797194();
}

uint64_t sub_241797194()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  v0 = sub_2418A9E28();
  result = swift_bridgeObjectRelease();
  if (v0 >= 61)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2418A8418();
    swift_release();
    swift_release();
    v2 = sub_24179BF34(60);
    v4 = v3;
    v6 = v5;
    v8 = v7;
    swift_bridgeObjectRelease();
    MEMORY[0x24269C618](v2, v4, v6, v8);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    v9 = sub_2418A8424();
    return sub_241797194(v9);
  }
  return result;
}

void (*StateOfMindEntryModel.context.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  v4 = v3[3];
  *v3 = v3[2];
  v3[1] = v4;
  return sub_2417973A0;
}

void sub_2417973A0(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = **a1;
  v5 = (*a1)[1];
  swift_getKeyPath();
  swift_getKeyPath();
  v3[2] = v4;
  v3[3] = v5;
  swift_retain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2418A8424();
    sub_241797194();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2418A8424();
    sub_241797194();
  }
  free(v3);
}

uint64_t StateOfMindEntryModel.$context.getter()
{
  return sub_24179678C((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context, &qword_25714E970, MEMORY[0x24BEE0D00]);
}

uint64_t StateOfMindEntryModel.$context.setter(uint64_t a1)
{
  return sub_2417969E4(a1, &qword_25714E978, MEMORY[0x24BEE0D00], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context, &qword_25714E970);
}

void (*StateOfMindEntryModel.$context.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = MEMORY[0x24BEE0D00];
  sub_24172887C(0, &qword_25714E978, MEMORY[0x24BEE0D00], MEMORY[0x24BDB9ED8]);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  v8 = malloc(v7);
  v9 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_24172887C(0, &qword_25714E970, v4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v3[16] = v10;
  sub_2418A83F4();
  swift_endAccess();
  return sub_2417960E0;
}

double sub_241797598@<D0>(double *a1@<X8>)
{
  return sub_2417975AC(a1);
}

double sub_2417975AC@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_241797628()
{
  return sub_24179763C();
}

uint64_t sub_24179763C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2418A8424();
}

void (*StateOfMindEntryModel.effectiveValence.modify(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_2418A840C();
  return sub_241795FEC;
}

uint64_t StateOfMindEntryModel.$effectiveValence.getter()
{
  return sub_24179678C((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence, &qword_25714E938, MEMORY[0x24BEE13C8]);
}

uint64_t StateOfMindEntryModel.$effectiveValence.setter(uint64_t a1)
{
  return sub_2417969E4(a1, &qword_25714E940, MEMORY[0x24BEE13C8], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence, &qword_25714E938);
}

void (*StateOfMindEntryModel.$effectiveValence.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = MEMORY[0x24BEE13C8];
  sub_24172887C(0, &qword_25714E940, MEMORY[0x24BEE13C8], MEMORY[0x24BDB9ED8]);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  v8 = malloc(v7);
  v9 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_24172887C(0, &qword_25714E938, v4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v3[16] = v10;
  sub_2418A83F4();
  swift_endAccess();
  return sub_2417960E0;
}

uint64_t sub_24179787C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36[2];

  v36[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_2418A8340();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v33 - v9;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BE0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2E90], a1);
  v36[0] = 0;
  v12 = objc_msgSend(v11, sel_featureOnboardingRecordWithError_, v36);
  if (v12)
  {
    v13 = v12;
    v14 = v36[0];
    sub_2418A8328();
    v15 = sub_2418A8334();
    v16 = sub_2418AA05C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (void *)swift_slowAlloc();
      v33 = v3;
      v19 = v18;
      v36[0] = v18;
      *(_DWORD *)v17 = 136446210;
      v34 = v2;
      v20 = sub_2418AA5D8();
      v35 = sub_24176024C(v20, v21, (uint64_t *)v36);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v15, v16, "[%{public}s]: Retrieved onboarding record", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v19, -1, -1);
      MEMORY[0x24269D548](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    }
    v31 = (uint64_t)objc_msgSend(v13, sel_isOnboardingPresent);

  }
  else
  {
    v22 = v36[0];
    v23 = (void *)sub_2418A7F14();

    swift_willThrow();
    sub_2418A8328();
    v24 = sub_2418A8334();
    v25 = sub_2418AA044();
    if (os_log_type_enabled(v24, v25))
    {
      v34 = v2;
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = (void *)swift_slowAlloc();
      v33 = v3;
      v28 = v27;
      v36[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v29 = sub_2418AA5D8();
      v35 = sub_24176024C(v29, v30, (uint64_t *)v36);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v24, v25, "[%{public}s]: Error checking state of mind onboarding record", v26, 0xCu);
      v31 = 1;
      swift_arrayDestroy();
      MEMORY[0x24269D548](v28, -1, -1);
      MEMORY[0x24269D548](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v34);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
      return 1;
    }
  }
  return v31;
}

id sub_241797C64()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___eventSubmissionManager;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___eventSubmissionManager);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___eventSubmissionManager);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3918]), sel_initWithLoggingCategory_healthDataSource_, *MEMORY[0x24BDD3038], *(_QWORD *)(v0 + 16));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id StateOfMindEntryModel.__allocating_init(healthStore:configuration:onSampleSave:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;

  swift_allocObject();
  v8 = sub_24179C220(a1, a2, a3, a4);

  swift_release();
  return v8;
}

id StateOfMindEntryModel.init(healthStore:configuration:onSampleSave:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;

  v5 = sub_24179C220(a1, a2, a3, a4);

  swift_release();
  return v5;
}

id StateOfMindEntryModel.__allocating_init(healthStore:date:reflectiveInterval:valence:labels:domains:context:parentSampleUUID:onSampleSave:)(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char *v52;
  char *v53;
  double v54;
  uint64_t v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;

  v55 = a8;
  v56 = *(double *)&a5;
  v57 = *(double *)&a6;
  v58 = a7;
  v53 = a2;
  v54 = *(double *)&a4;
  v49 = a3;
  v50 = a10;
  v59 = a11;
  v48 = sub_2418A8100();
  v14 = *(_QWORD *)(v48 - 8);
  v16 = MEMORY[0x24BDAC7A8](v48, v15);
  v52 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v48 - v19;
  sub_241799D38(0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (int *)type metadata accessor for StateOfMindEntryModel.Configuration(0);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v29 = (char *)&v48 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v30);
  v32 = (char *)&v48 - v31;
  sub_2417289A8(a8, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_241799D38);
  v33 = a1;
  sub_2418A80F4();
  v34 = (uint64_t)&v29[v25[6]];
  v35 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = &v29[v25[7]];
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  v29[v25[8]] = 11;
  v29[v25[9]] = 6;
  *(_QWORD *)v29 = v49;
  v29[8] = 0;
  v37 = &v29[v25[5]];
  v38 = v14;
  v39 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v40 = v48;
  v39(v37, v20, v48);
  sub_241799D54((uint64_t)v24, v34);
  swift_bridgeObjectRelease();
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  sub_24179CE0C((uint64_t)v29, (uint64_t)v32);
  swift_allocObject();
  v41 = v59;
  swift_retain();
  v51 = v33;
  v42 = sub_24179C220(v33, (uint64_t)v32, v50, v41);

  swift_release();
  v43 = v38;
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  v45 = v53;
  v44(v20, (uint64_t)v53, v40);
  swift_getKeyPath();
  swift_getKeyPath();
  v44(v52, (uint64_t)v20, v40);
  swift_retain_n();
  sub_2418A8424();
  v46 = *(void (**)(char *, uint64_t))(v43 + 8);
  v46(v20, v40);
  swift_getKeyPath();
  swift_getKeyPath();
  v60 = a9;
  swift_retain();
  sub_2418A8424();
  swift_getKeyPath();
  swift_getKeyPath();
  v60 = v54;
  swift_retain();
  sub_2418A8424();
  swift_getKeyPath();
  swift_getKeyPath();
  v60 = v56;
  swift_retain();
  sub_2418A8424();
  swift_getKeyPath();
  swift_getKeyPath();
  v60 = v57;
  v61 = v58;
  swift_retain();
  sub_2418A8424();
  sub_241797194();

  swift_release();
  swift_release();
  sub_24172588C(v55, (uint64_t (*)(_QWORD))sub_241799D38);
  v46(v45, v40);
  return v42;
}

uint64_t static StateOfMindEntryModel.Configuration.InitialReflectiveInterval.explicit(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_2417981DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v0 = sub_2418A8100();
  MEMORY[0x24BDAC7A8](v0, v1);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  v2 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2418A8418();
    swift_release();
    swift_release();
  }
  sub_241762EFC(0, (unint64_t *)&qword_2571545F0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2418A8418();
  swift_release();
  swift_release();
  sub_241875268(MEMORY[0x24BEE4AF8]);
  return sub_2418AA008();
}

uint64_t sub_2417984B0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[34] = a1;
  v2[35] = v1;
  v2[36] = *v1;
  v3 = sub_2418A8340();
  v2[37] = v3;
  v2[38] = *(_QWORD *)(v3 - 8);
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  sub_241799D38(0);
  v2[41] = swift_task_alloc();
  v4 = sub_2418A8130();
  v2[42] = v4;
  v2[43] = *(_QWORD *)(v4 - 8);
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  sub_2418A9F48();
  v2[46] = sub_2418A9F3C();
  v2[47] = sub_2418A9F18();
  v2[48] = v5;
  return swift_task_switch();
}

uint64_t sub_2417985B4()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (void *)v0[34];
  v2 = *(void **)(v0[35] + 16);
  v0[49] = v2;
  sub_24172887C(0, (unint64_t *)&qword_25714D510, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2418D4D90;
  *(_QWORD *)(v3 + 32) = v1;
  sub_2418A9EC4();
  sub_241762EFC(0, &qword_25714EBA8);
  v4 = v1;
  v5 = sub_2418A9EAC();
  v0[50] = v5;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_2417986F0;
  v6 = swift_continuation_init();
  v0[23] = MEMORY[0x24BDAC760];
  v0[24] = 0x40000000;
  v0[25] = sub_24179A470;
  v0[26] = &block_descriptor_59;
  v0[27] = v6;
  objc_msgSend(v2, sel_saveObjects_skipInsertionFilter_completion_, v5, 1, v0 + 23);
  return swift_continuation_await();
}

uint64_t sub_2417986F0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 408) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_24179874C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 416) = v1;
  *v1 = v0;
  v1[1] = sub_2417987A4;
  return sub_24179A4E8(*(_QWORD *)(v0 + 328));
}

uint64_t sub_2417987A4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2417987F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  void *v7;
  void (*v8)(unint64_t, uint64_t, uint64_t);
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 328);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    swift_release();
    sub_24172588C(v3, (uint64_t (*)(_QWORD))sub_241799D38);
    (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 280)
                                   + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_didSaveSample))(*(_QWORD *)(v0 + 272));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(void **)(v0 + 392);
    v6 = *(_QWORD *)(v0 + 352);
    v7 = *(void **)(v0 + 272);
    v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
    v8(*(_QWORD *)(v0 + 360), v3, v1);
    sub_24172570C(0, &qword_25714EBB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_2418D23E0;
    v11 = v10 + v9;
    v12 = objc_msgSend(v7, sel_UUID);
    sub_2418A8124();

    v8(v11, v6, v1);
    v13 = sub_2418A9EAC();
    *(_QWORD *)(v0 + 424) = v13;
    swift_bridgeObjectRelease();
    v14 = sub_2418A810C();
    *(_QWORD *)(v0 + 432) = v14;
    *(_QWORD *)(v0 + 80) = v0;
    *(_QWORD *)(v0 + 88) = sub_241798A1C;
    v15 = swift_continuation_init();
    *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
    v16 = (_QWORD *)(v0 + 144);
    v16[1] = 0x40000000;
    v16[2] = sub_24179A470;
    v16[3] = &block_descriptor_61;
    v16[4] = v15;
    objc_msgSend(v5, sel_associateSampleUUIDs_withSampleUUID_completion_, v13, v14, v16);
    return swift_continuation_await();
  }
}

uint64_t sub_241798A1C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 440) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_241798A78()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void **)(v0 + 424);
  v1 = *(void **)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 344);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);

  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 280)
                                 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_didSaveSample))(*(_QWORD *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241798B20()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[2];

  v2 = *(void **)(v0 + 400);
  v1 = *(void **)(v0 + 408);
  swift_release();
  swift_willThrow();

  sub_2418A8328();
  v3 = v1;
  v4 = v1;
  v5 = sub_2418A8334();
  v6 = sub_2418AA044();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 408);
    v8 = *(_QWORD *)(v0 + 304);
    v22 = *(_QWORD *)(v0 + 296);
    v23 = *(_QWORD *)(v0 + 320);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v24[0] = v10;
    *(_DWORD *)v9 = 136446466;
    v11 = sub_2418AA5D8();
    *(_QWORD *)(v0 + 240) = sub_24176024C(v11, v12, v24);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 232) = v7;
    v13 = v7;
    sub_2417609B0();
    v14 = sub_2418A9E04();
    *(_QWORD *)(v0 + 224) = sub_24176024C(v14, v15, v24);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24171C000, v5, v6, "[%{public}s] Failed to save sample: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v10, -1, -1);
    MEMORY[0x24269D548](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v23, v22);
  }
  else
  {
    v16 = *(void **)(v0 + 408);
    v17 = *(_QWORD *)(v0 + 320);
    v18 = *(_QWORD *)(v0 + 296);
    v19 = *(_QWORD *)(v0 + 304);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  v20 = *(void **)(v0 + 408);
  sub_241794684(8, 0);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241798D9C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[2];

  v2 = *(void **)(v0 + 432);
  v1 = *(void **)(v0 + 440);
  v3 = *(void **)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 344);
  swift_release();
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

  sub_2418A8328();
  v7 = v1;
  v8 = v1;
  v9 = sub_2418A8334();
  v10 = sub_2418AA044();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 440);
    v24 = *(_QWORD *)(v0 + 304);
    v25 = *(_QWORD *)(v0 + 296);
    v26 = *(_QWORD *)(v0 + 312);
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v27[0] = v13;
    *(_DWORD *)v12 = 136446466;
    v14 = sub_2418AA5D8();
    *(_QWORD *)(v0 + 248) = sub_24176024C(v14, v15, v27);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    *(_QWORD *)(v0 + 256) = v11;
    v16 = v11;
    sub_2417609B0();
    v17 = sub_2418A9E04();
    *(_QWORD *)(v0 + 264) = sub_24176024C(v17, v18, v27);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24171C000, v9, v10, "[%{public}s] Failed to save association: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v13, -1, -1);
    MEMORY[0x24269D548](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  }
  else
  {
    v19 = *(void **)(v0 + 440);
    v21 = *(_QWORD *)(v0 + 304);
    v20 = *(_QWORD *)(v0 + 312);
    v22 = *(_QWORD *)(v0 + 296);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 280)
                                 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_didSaveSample))(*(_QWORD *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241799044()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[19] = v0;
  v1[20] = *v0;
  v2 = sub_2418A8340();
  v1[21] = v2;
  v1[22] = *(_QWORD *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v3 = sub_2418A8100();
  v1[25] = v3;
  v1[26] = *(_QWORD *)(v3 - 8);
  v1[27] = swift_task_alloc();
  sub_2418A9F48();
  v1[28] = sub_2418A9F3C();
  v1[29] = sub_2418A9F18();
  v1[30] = v4;
  return swift_task_switch();
}

uint64_t sub_241799118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;

  if ((sub_241794598() & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 208);
    v1 = *(_QWORD *)(v0 + 216);
    v3 = *(_QWORD *)(v0 + 200);
    v4 = (void *)*MEMORY[0x24BDD2E90];
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BE0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2E90], *(_QWORD *)(*(_QWORD *)(v0 + 152) + 16));
    *(_QWORD *)(v0 + 248) = v5;
    v6 = v4;
    sub_2418A80D0();
    v7 = objc_allocWithZone(MEMORY[0x24BDD3DD8]);
    v8 = (void *)sub_2418A80AC();
    v9 = objc_msgSend(v7, sel_initWithFeatureIdentifier_version_completionDate_countryCode_countryCodeProvenance_, v6, 1, v8, 0, 0);
    *(_QWORD *)(v0 + 256) = v9;

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_2417992C0;
    v10 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v11 = (_QWORD *)(v0 + 80);
    v11[1] = 0x40000000;
    v11[2] = sub_24179A470;
    v11[3] = &block_descriptor_56;
    v11[4] = v10;
    objc_msgSend(v5, sel_saveOnboardingCompletion_settings_completion_, v9, 0, v11);
    return swift_continuation_await();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2417992C0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 264) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_24179931C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  void *v3;
  void *v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_release();
  sub_2418A8328();
  v1 = sub_2418A8334();
  v2 = sub_2418AA05C();
  if (os_log_type_enabled(v1, v2))
  {
    v4 = *(void **)(v0 + 248);
    v3 = *(void **)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 192);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v17 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = sub_2418AA5D8();
    *(_QWORD *)(v0 + 144) = sub_24176024C(v7, v8, &v17);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v1, v2, "[%{public}s]: Successfully saved onboarding record", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v6, -1, -1);
    MEMORY[0x24269D548](v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  }
  else
  {
    v9 = *(void **)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 176);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2417994E4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[2];

  v1 = *(void **)(v0 + 264);
  swift_release();
  swift_willThrow();
  sub_2418A8328();
  v2 = v1;
  v3 = v1;
  v4 = sub_2418A8334();
  v5 = sub_2418AA044();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 256);
    v7 = *(void **)(v0 + 264);
    v21 = *(void **)(v0 + 248);
    v22 = *(_QWORD *)(v0 + 176);
    v23 = *(_QWORD *)(v0 + 168);
    v24 = *(_QWORD *)(v0 + 184);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v25[0] = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = sub_2418AA5D8();
    *(_QWORD *)(v0 + 120) = sub_24176024C(v10, v11, v25);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    *(_QWORD *)(v0 + 128) = v7;
    v12 = v7;
    sub_2417609B0();
    v13 = sub_2418A9E04();
    *(_QWORD *)(v0 + 136) = sub_24176024C(v13, v14, v25);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24171C000, v4, v5, "[%{public}s]: Error saving onboarding record: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v9, -1, -1);
    MEMORY[0x24269D548](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    v15 = *(void **)(v0 + 264);
    v16 = *(void **)(v0 + 248);
    v18 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 168);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241799760()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[19] = v0;
  v1[20] = *v0;
  v2 = sub_2418A8340();
  v1[21] = v2;
  v1[22] = *(_QWORD *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  sub_2418A9F48();
  v1[25] = sub_2418A9F3C();
  v1[26] = sub_2418A9F18();
  v1[27] = v3;
  return swift_task_switch();
}

uint64_t sub_24179980C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3D80]), sel_initWithHealthStore_, *(_QWORD *)(v0[19] + 16));
  v0[28] = v1;
  v0[2] = v0;
  v0[3] = sub_2417998C4;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_24179A470;
  v3[3] = &block_descriptor_2;
  v3[4] = v2;
  objc_msgSend(v1, sel_forceNanoSyncWithOptions_completion_, 0, v3);
  return swift_continuation_await();
}

uint64_t sub_2417998C4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 232) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_241799920()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  void *v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_release();
  sub_2418A8328();
  v1 = sub_2418A8334();
  v2 = sub_2418AA05C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(void **)(v0 + 224);
    v4 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 168);
    v14 = *(_QWORD *)(v0 + 192);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = sub_2418AA5D8();
    *(_QWORD *)(v0 + 144) = sub_24176024C(v7, v8, &v15);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24171C000, v1, v2, "[%{public}s] Successfully completed nano sync", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v6, -1, -1);
    MEMORY[0x24269D548](v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v13);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241799AC8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[2];

  v1 = *(void **)(v0 + 232);
  swift_release();
  swift_willThrow();
  sub_2418A8328();
  v2 = v1;
  v3 = v1;
  v4 = sub_2418A8334();
  v5 = sub_2418AA044();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 224);
    v7 = *(void **)(v0 + 232);
    v20 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 184);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v23[0] = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = sub_2418AA5D8();
    *(_QWORD *)(v0 + 120) = sub_24176024C(v10, v11, v23);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    *(_QWORD *)(v0 + 128) = v7;
    v12 = v7;
    sub_2417609B0();
    v13 = sub_2418A9E04();
    *(_QWORD *)(v0 + 136) = sub_24176024C(v13, v14, v23);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24171C000, v4, v5, "[%{public}s] Nano sync finished with error: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v9, -1, -1);
    MEMORY[0x24269D548](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    v15 = *(void **)(v0 + 232);
    v17 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 168);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for StateOfMindEntryModel.Configuration(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_2543915B0);
}

void sub_241799D38(uint64_t a1)
{
  sub_24172570C(a1, &qword_2543915A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_241799D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241799D38(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_241799D98()
{
  unint64_t result;

  result = qword_25714E8A8;
  if (!qword_25714E8A8)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4908, &type metadata for StateOfMindEntryModel.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714E8A8);
  }
  return result;
}

unint64_t sub_241799DDC()
{
  unint64_t result;

  result = qword_25714E8B0;
  if (!qword_25714E8B0)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval);
    atomic_store(result, (unint64_t *)&qword_25714E8B0);
  }
  return result;
}

unint64_t sub_241799E20()
{
  unint64_t result;

  result = qword_25714E8C8;
  if (!qword_25714E8C8)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindLoggingAnalyticsEntryPointType, &type metadata for StateOfMindLoggingAnalyticsEntryPointType);
    atomic_store(result, (unint64_t *)&qword_25714E8C8);
  }
  return result;
}

unint64_t sub_241799E64()
{
  unint64_t result;

  result = qword_25714E8D0;
  if (!qword_25714E8D0)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindLoggingAnalyticsProvenanceType, &type metadata for StateOfMindLoggingAnalyticsProvenanceType);
    atomic_store(result, (unint64_t *)&qword_25714E8D0);
  }
  return result;
}

unint64_t sub_241799EA8()
{
  unint64_t result;

  result = qword_25714E8E0;
  if (!qword_25714E8E0)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval);
    atomic_store(result, (unint64_t *)&qword_25714E8E0);
  }
  return result;
}

unint64_t sub_241799EEC()
{
  unint64_t result;

  result = qword_25714E8F8;
  if (!qword_25714E8F8)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindLoggingAnalyticsEntryPointType, &type metadata for StateOfMindLoggingAnalyticsEntryPointType);
    atomic_store(result, (unint64_t *)&qword_25714E8F8);
  }
  return result;
}

unint64_t sub_241799F30()
{
  unint64_t result;

  result = qword_25714E900;
  if (!qword_25714E900)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindLoggingAnalyticsProvenanceType, &type metadata for StateOfMindLoggingAnalyticsProvenanceType);
    atomic_store(result, (unint64_t *)&qword_25714E900);
  }
  return result;
}

void sub_241799F7C(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E910, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
}

void sub_241799F98(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDB9ED8]);
}

void sub_241799FBC(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E928, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
}

void sub_241799FD8(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E930, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, MEMORY[0x24BDB9ED8]);
}

void sub_241799FF4(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E948, (uint64_t (*)(uint64_t))sub_24179A010, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
}

void sub_24179A010(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E950, (uint64_t (*)(uint64_t))type metadata accessor for Label, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

void sub_24179A02C(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E958, (uint64_t (*)(uint64_t))sub_24179A010, MEMORY[0x24BDB9ED8]);
}

void sub_24179A048(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E960, (uint64_t (*)(uint64_t))sub_241786A5C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
}

void sub_24179A064(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714E968, (uint64_t (*)(uint64_t))sub_241786A5C, MEMORY[0x24BDB9ED8]);
}

uint64_t sub_24179A080(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(char *, uint64_t);
  char *v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[2];

  v38[1] = *MEMORY[0x24BDAC8D0];
  v4 = sub_2418A8340();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v34 - v11;
  if ((a1 & 1) != 0)
  {
    sub_2418A8328();
    v13 = sub_2418A8334();
    v14 = sub_2418AA02C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v38[0] = v16;
      *(_DWORD *)v15 = 136446210;
      v17 = sub_2418AA5D8();
      v37 = sub_24176024C(v17, v18, v38);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v13, v14, "[%{public}s] Successfully submitted analytics", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v16, -1, -1);
      MEMORY[0x24269D548](v15, -1, -1);
    }

    v19 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    v20 = v12;
    goto LABEL_9;
  }
  sub_2418A8328();
  v21 = a2;
  v22 = a2;
  v23 = sub_2418A8334();
  v24 = sub_2418AA044();
  if (!os_log_type_enabled(v23, v24))
  {

    v19 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    v20 = v9;
LABEL_9:
    v31 = v4;
    return v19(v20, v31);
  }
  v36 = v4;
  v25 = swift_slowAlloc();
  v26 = (_QWORD *)swift_slowAlloc();
  v35 = swift_slowAlloc();
  v38[0] = v35;
  *(_DWORD *)v25 = 136446466;
  v27 = sub_2418AA5D8();
  v37 = sub_24176024C(v27, v28, v38);
  sub_2418AA1F4();
  swift_bridgeObjectRelease();
  *(_WORD *)(v25 + 12) = 2112;
  if (a2)
  {
    v29 = a2;
    v30 = _swift_stdlib_bridgeErrorToNSError();
    v37 = v30;
    sub_2418AA1F4();
  }
  else
  {
    v37 = 0;
    sub_2418AA1F4();
    v30 = 0;
  }
  *v26 = v30;

  _os_log_impl(&dword_24171C000, v23, v24, "[%{public}s] Failed to submit analytics with error: %@", (uint8_t *)v25, 0x16u);
  sub_24179E92C(0, &qword_25714EB98, &qword_25714EBA0, 0x24BEDCDF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  swift_arrayDestroy();
  MEMORY[0x24269D548](v26, -1, -1);
  v32 = v35;
  swift_arrayDestroy();
  MEMORY[0x24269D548](v32, -1, -1);
  MEMORY[0x24269D548](v25, -1, -1);

  v19 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v20 = v9;
  v31 = v36;
  return v19(v20, v31);
}

uint64_t sub_24179A470(uint64_t a1, int a2, void *a3)
{
  uint64_t result;
  _QWORD *v5;
  id v6;

  if (a2)
    return swift_continuation_throwingResume();
  if (a3)
  {
    sub_2417609B0();
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24179A4E8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[9] = a1;
  v2[10] = v1;
  v2[11] = *v1;
  v3 = sub_2418A8340();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  sub_24179E92C(0, &qword_25714EBC0, &qword_25714EBC8, 0x24BDD3ED8, MEMORY[0x24BDD2220]);
  v2[16] = v4;
  v2[17] = *(_QWORD *)(v4 - 8);
  v2[18] = swift_task_alloc();
  sub_2418A9F48();
  v2[19] = sub_2418A9F3C();
  v2[20] = sub_2418A9F18();
  v2[21] = v5;
  return swift_task_switch();
}

uint64_t sub_24179A5DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  void *v9;
  id v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t KeyPath;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration;
  swift_beginAccess();
  v2 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  if (*(_QWORD *)(v1 + *(int *)(v2 + 28) + 8))
  {
    v3 = (void *)objc_opt_self();
    v4 = (void *)*MEMORY[0x24BE65D28];
    swift_bridgeObjectRetain();
    v5 = v4;
    v6 = (void *)sub_2418A9DB0();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v3, sel_predicateForObjectsWithMetadataKey_operatorType_value_, v5, 4, v6);
    *(_QWORD *)(v0 + 176) = v7;

    v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2120];
    sub_24179E98C(0, (unint64_t *)&qword_25714EBD0, &qword_25714EBD8, MEMORY[0x24BDD2120]);
    sub_24179E92C(0, &qword_25714EBD8, &qword_25714EBC8, 0x24BDD3ED8, v8);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2418D23E0;
    sub_241762EFC(0, &qword_25714EBE0);
    v9 = (void *)MEMORY[0x24269C87C]((id)*MEMORY[0x24BDD29A0]);
    sub_241762EFC(0, &qword_25714EBC8);
    v10 = v7;
    sub_2418A9C54();

    v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDCBEC0];
    sub_24179E98C(0, &qword_25714EBE8, &qword_25714EBF0, MEMORY[0x24BDCBEC0]);
    sub_24179E92C(0, &qword_25714EBF0, &qword_25714EBC8, 0x24BDD3ED8, v11);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2418D23E0;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24269A6F8](KeyPath, 1);
    sub_2418A9C60();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v13;
    *v13 = v0;
    v13[1] = sub_24179A92C;
    return sub_2418A9C6C();
  }
  else
  {
    v15 = v2;
    v16 = *(_QWORD *)(v0 + 72);
    swift_release();
    sub_2417289A8(v1 + *(int *)(v15 + 24), v16, (uint64_t (*)(_QWORD))sub_241799D38);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_24179A92C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 192) = a1;
  *(_QWORD *)(v3 + 200) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24179A994()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 192);
  result = swift_release();
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_2418A8328();
    v12 = sub_2418A8334();
    v13 = sub_2418AA044();
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(void **)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 128);
    v21 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 104);
    if (v14)
    {
      v30 = *(_QWORD *)(v0 + 96);
      v29 = *(_QWORD *)(v0 + 128);
      v22 = (uint8_t *)swift_slowAlloc();
      v28 = v19;
      v23 = swift_slowAlloc();
      v31 = v23;
      *(_DWORD *)v22 = 136446210;
      v24 = sub_2418AA5D8();
      *(_QWORD *)(v0 + 64) = sub_24176024C(v24, v25, &v31);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v12, v13, "[%{public}s] Unable to find associated Fitness+ meditation session sample", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v23, -1, -1);
      MEMORY[0x24269D548](v22, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v28, v30);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v29);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    }
    v26 = *(_QWORD *)(v0 + 72);
    v27 = sub_2418A8130();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v11 = sub_2418AA398();
  result = swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)MEMORY[0x24269CAD4](0, *(_QWORD *)(v0 + 192));
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(id *)(*(_QWORD *)(v0 + 192) + 32);
LABEL_6:
    v4 = *(void **)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v3, sel_UUID);
    sub_2418A8124();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v10 = sub_2418A8130();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_24179ACAC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(void **)(v0 + 200);
  swift_release();
  sub_2418A8328();
  v2 = v1;
  v3 = v1;
  v4 = sub_2418A8334();
  v5 = sub_2418AA044();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 200);
    v28 = *(void **)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 136);
    v30 = *(_QWORD *)(v0 + 128);
    v31 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 104);
    v26 = *(_QWORD *)(v0 + 96);
    v27 = *(_QWORD *)(v0 + 112);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v32 = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = sub_2418AA5D8();
    *(_QWORD *)(v0 + 40) = sub_24176024C(v10, v11, &v32);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    *(_QWORD *)(v0 + 48) = v6;
    v12 = v6;
    sub_2417609B0();
    v13 = sub_2418A9E04();
    *(_QWORD *)(v0 + 56) = sub_24176024C(v13, v14, &v32);
    sub_2418AA1F4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24171C000, v4, v5, "[%{public}s] Error querying find associated samples: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24269D548](v9, -1, -1);
    MEMORY[0x24269D548](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v27, v26);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    v15 = *(void **)(v0 + 200);
    v16 = *(void **)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 128);
    v21 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 112);
    v22 = *(_QWORD *)(v0 + 96);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v23 = *(_QWORD *)(v0 + 72);
  v24 = sub_2418A8130();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_24179AF70(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_startDate);
  sub_2418A80C4();

}

uint64_t StateOfMindEntryModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_24172588C(v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration, type metadata accessor for StateOfMindEntryModel.Configuration);
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date;
  sub_241799F7C(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval;
  sub_241799FBC(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence;
  v6 = MEMORY[0x24BDB9EF0];
  sub_24172887C(0, &qword_25714E938, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v8 = v7;
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v9(v5, v7);
  v10 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels;
  sub_241799FF4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains;
  sub_24179A048(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context;
  sub_24172887C(0, &qword_25714E970, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v9(v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence, v8);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___eventSubmissionManager));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StateOfMindEntryModel.__deallocating_deinit()
{
  StateOfMindEntryModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24179B198(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  char v37;
  char v38;

  v35 = a3;
  v33 = a2;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  sub_24177AE40(0, &qword_25714EB28, (uint64_t (*)(void))sub_24179E0E0, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.InferredCodingKeys, MEMORY[0x24BEE3520]);
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v29 = (char *)&v26 - v7;
  sub_24177AE40(0, &qword_25714EB38, (uint64_t (*)(void))sub_24179E124, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys, v4);
  v30 = v8;
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v26 - v10;
  sub_24177AE40(0, &qword_25714EB48, (uint64_t (*)(void))sub_24179E168, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys, v4);
  v27 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v26 - v15;
  sub_24177AE40(0, &qword_25714EB58, (uint64_t (*)(void))sub_24179E1AC, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys, v4);
  v18 = v17;
  v34 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v26 - v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24179E1AC();
  sub_2418AA5B4();
  if (!(_BYTE)v35)
  {
    v36 = 0;
    sub_24179E168();
    sub_2418AA458();
    v23 = v27;
    sub_2418AA47C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v21, v18);
  }
  if (v35 == 1)
  {
    v37 = 1;
    sub_24179E124();
    sub_2418AA458();
    v22 = v30;
    sub_2418AA47C();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v21, v18);
  }
  v38 = 2;
  sub_24179E0E0();
  v25 = v29;
  sub_2418AA458();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v21, v18);
}

uint64_t sub_24179B4B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A83B8();
  *a1 = result;
  return result;
}

uint64_t sub_24179B4DC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465786966;
  if (*v0 != 1)
    v1 = 0x6465727265666E69;
  if (*v0)
    return v1;
  else
    return 0x746963696C707865;
}

uint64_t sub_24179B534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24179E1F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24179B558(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24179B564()
{
  sub_24179E1AC();
  return sub_2418AA5C0();
}

uint64_t sub_24179B58C()
{
  sub_24179E1AC();
  return sub_2418AA5CC();
}

uint64_t sub_24179B5BC()
{
  return 0x65756C6156776172;
}

void sub_24179B5D8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24179B5E4()
{
  sub_24179E168();
  return sub_2418AA5C0();
}

uint64_t sub_24179B60C()
{
  sub_24179E168();
  return sub_2418AA5CC();
}

uint64_t sub_24179B634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2418AA4DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24179B6C8()
{
  sub_24179E124();
  return sub_2418AA5C0();
}

uint64_t sub_24179B6F0()
{
  sub_24179E124();
  return sub_2418AA5CC();
}

uint64_t sub_24179B718()
{
  return 0;
}

uint64_t sub_24179B724@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24179B750()
{
  sub_24179E0E0();
  return sub_2418AA5C0();
}

uint64_t sub_24179B778()
{
  sub_24179E0E0();
  return sub_2418AA5CC();
}

uint64_t sub_24179B7A0()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2418AA56C();
  if (v1 <= 1)
    sub_2418AA578();
  sub_2418AA578();
  return sub_2418AA59C();
}

uint64_t sub_24179B810()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 8) || *(_BYTE *)(v0 + 8) == 1)
    sub_2418AA578();
  return sub_2418AA578();
}

uint64_t sub_24179B854()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2418AA56C();
  if (v1 <= 1)
    sub_2418AA578();
  sub_2418AA578();
  return sub_2418AA59C();
}

uint64_t sub_24179B8C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_24179E33C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_24179B8EC(_QWORD *a1)
{
  uint64_t v1;

  return sub_24179B198(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_24179B908(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  _BOOL4 v8;
  _BOOL4 v10;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (*((_BYTE *)a2 + 8))
    v5 = 0;
  else
    v5 = v2 == v3;
  v6 = v5;
  v8 = v4 == 1 && v2 == v3;
  v10 = v4 == 2 && v3 == 0;
  if (*((_BYTE *)a1 + 8) != 1)
    v8 = v10;
  if (*((_BYTE *)a1 + 8))
    return v8;
  else
    return v6;
}

uint64_t static StateOfMindEntryModel.Configuration.InitialReflectiveInterval.explicitFromKind(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = HKStateOfMindReflectiveIntervalFromKind();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t static StateOfMindEntryModel.Configuration.InitialReflectiveInterval.fixed(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 1;
  return result;
}

void static StateOfMindEntryModel.Configuration.InitialReflectiveInterval.inferred.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 2;
}

uint64_t StateOfMindEntryModel.Configuration.InitialReflectiveInterval.hash(into:)()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 8) || *(_BYTE *)(v0 + 8) == 1)
    sub_2418AA578();
  return sub_2418AA578();
}

BOOL static StateOfMindEntryModel.Configuration.InitialReflectiveInterval.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((_BYTE *)a1 + 8))
    return !*((_BYTE *)a2 + 8) && v2 == v3;
  if (*((_BYTE *)a1 + 8) != 1)
    return v4 == 2 && v3 == 0;
  return v4 == 1 && v2 == v3;
}

uint64_t sub_24179BA30()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

uint64_t sub_24179BA70()
{
  return sub_2418AA578();
}

uint64_t sub_24179BA94()
{
  sub_2418AA56C();
  sub_2418AA578();
  return sub_2418AA59C();
}

uint64_t sub_24179BAD0()
{
  return 0x656761726F7473;
}

uint64_t sub_24179BAE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656761726F7473 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2418AA4DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24179BB7C()
{
  sub_24179CE50();
  return sub_2418AA5C0();
}

uint64_t sub_24179BBA4()
{
  sub_24179CE50();
  return sub_2418AA5CC();
}

uint64_t StateOfMindEntryModel.Configuration.InitialReflectiveInterval.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  char v13;

  sub_24177AE40(0, &qword_25714E998, (uint64_t (*)(void))sub_24179CE50, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys, MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v12 - v7;
  v9 = *v1;
  v10 = *((_BYTE *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24179CE50();
  sub_2418AA5B4();
  v12 = v9;
  v13 = v10;
  sub_24179CE94();
  sub_2418AA488();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t StateOfMindEntryModel.Configuration.InitialReflectiveInterval.hashValue.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2418AA56C();
  if (v1 <= 1)
    sub_2418AA578();
  sub_2418AA578();
  return sub_2418AA59C();
}

uint64_t StateOfMindEntryModel.Configuration.InitialReflectiveInterval.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v15 = a2;
  sub_24177AE40(0, &qword_25714E9B0, (uint64_t (*)(void))sub_24179CE50, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys, MEMORY[0x24BEE33E0]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24179CE50();
  sub_2418AA5A8();
  if (!v2)
  {
    v10 = v15;
    sub_24179CED8();
    sub_2418AA440();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v11 = v14;
    *(_QWORD *)v10 = v13;
    *(_BYTE *)(v10 + 8) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24179BEB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StateOfMindEntryModel.Configuration.InitialReflectiveInterval.init(from:)(a1, a2);
}

uint64_t sub_24179BECC(_QWORD *a1)
{
  return StateOfMindEntryModel.Configuration.InitialReflectiveInterval.encode(to:)(a1);
}

BOOL sub_24179BEE0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((_BYTE *)a1 + 8))
    return !*((_BYTE *)a2 + 8) && v2 == v3;
  if (*((_BYTE *)a1 + 8) != 1)
    return v4 == 2 && v3 == 0;
  return v4 == 1 && v2 == v3;
}

uint64_t sub_24179BF34(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_2418A9E34();
    return sub_2418A9E64();
  }
  return result;
}

uint64_t sub_24179BFBC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000019 && a2 == 0x80000002418DCF00 || (sub_2418AA4DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_2418AA4DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002418DCF20 || (sub_2418AA4DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002418DCF40 || (sub_2418AA4DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696F507972746E65 && a2 == 0xEA0000000000746ELL || (sub_2418AA4DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E616E65766F7270 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_2418AA4DC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

id sub_24179C220(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *);
  id v41;
  uint64_t v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id result;
  void *v61;
  unsigned int v62;
  char *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  unsigned __int8 v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104[4];

  v100 = a3;
  v101 = a4;
  v99 = a1;
  v93 = *v4;
  v6 = sub_2418A8340();
  v96 = *(_QWORD *)(v6 - 8);
  v97 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v92 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v91 = (char *)&v91 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v94 = (char *)&v91 - v15;
  MEMORY[0x24BDAC7A8](v14, v16);
  v95 = (char *)&v91 - v17;
  v18 = sub_2418A8100();
  v98 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v23);
  v25 = (char *)&v91 - v24;
  sub_24172887C(0, &qword_25714E938, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v27 = v26;
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v29);
  v31 = (char *)&v91 - v30;
  v32 = (char *)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence;
  v104[0] = 0;
  sub_2418A83E8();
  v33 = v31;
  v34 = (uint64_t)v4;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v32, v33, v27);
  *((_BYTE *)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___isCompletingFirstTimeFlow) = 2;
  *((_BYTE *)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_hasInitiatedSampleSave) = 0;
  *(_QWORD *)((char *)v4
            + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___eventSubmissionManager) = 0;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_completedAnalyticsSteps) = MEMORY[0x24BEE4B08];
  v35 = v99;
  v4[2] = v99;
  sub_2417289A8(a2, (uint64_t)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration, type metadata accessor for StateOfMindEntryModel.Configuration);
  v36 = (_QWORD *)((char *)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_didSaveSample);
  v37 = v101;
  *v36 = v100;
  v36[1] = v37;
  v38 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  v39 = v98;
  v40 = *(void (**)(char *))(v98 + 16);
  v100 = a2 + *(int *)(v38 + 20);
  v40(v25);
  swift_beginAccess();
  ((void (*)(char *, char *, uint64_t))v40)(v22, v25, v18);
  v41 = v35;
  swift_retain();
  sub_2418A83E8();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v18);
  swift_endAccess();
  v42 = *(_QWORD *)a2;
  v101 = a2;
  if (!*(_BYTE *)(a2 + 8))
  {
    swift_beginAccess();
    v102 = v42;
    type metadata accessor for __HKStateOfMindReflectiveInterval(0);
    sub_2418A83E8();
    swift_endAccess();
    sub_2418A8328();
    v52 = sub_2418A8334();
    v53 = sub_2418AA05C();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v104[0] = v55;
      *(_DWORD *)v54 = 136446466;
      v56 = sub_2418AA5D8();
      v102 = sub_24176024C(v56, v57, v104);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2082;
      v102 = v42;
      v58 = sub_2418A9DF8();
      v102 = sub_24176024C(v58, v59, v104);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v52, v53, "[%{public}s] Initialized with explicit: %{public}s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v55, -1, -1);
      MEMORY[0x24269D548](v54, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v96 + 8))(v95, v97);
    goto LABEL_17;
  }
  if (*(_BYTE *)(a2 + 8) == 1)
  {
    swift_beginAccess();
    v102 = v42;
    type metadata accessor for __HKStateOfMindReflectiveInterval(0);
    sub_2418A83E8();
    swift_endAccess();
    v43 = v94;
    sub_2418A8328();
    v44 = sub_2418A8334();
    v45 = sub_2418AA05C();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v104[0] = v47;
      *(_DWORD *)v46 = 136446466;
      v48 = sub_2418AA5D8();
      v102 = sub_24176024C(v48, v49, v104);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2082;
      v102 = v42;
      v50 = sub_2418A9DF8();
      v102 = sub_24176024C(v50, v51, v104);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v44, v45, "[%{public}s] Initialized with fixed: %{public}s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v47, -1, -1);
      MEMORY[0x24269D548](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v96 + 8))(v94, v97);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v96 + 8))(v43, v97);
    }
LABEL_17:
    v86 = v101;
    swift_beginAccess();
    v102 = 0;
    sub_2418A83E8();
    swift_endAccess();
    swift_beginAccess();
    v87 = MEMORY[0x24BEE4AF8];
    v102 = MEMORY[0x24BEE4AF8];
    sub_24179A010(0);
    sub_2418A83E8();
    swift_endAccess();
    swift_beginAccess();
    v102 = v87;
    sub_241786A5C(0);
    sub_2418A83E8();
    swift_endAccess();
    swift_beginAccess();
    v102 = 0;
    v103 = 0xE000000000000000;
    sub_2418A83E8();
    swift_endAccess();
    v88 = objc_msgSend((id)objc_opt_self(), sel_hkmh_mentalHealthDefaults);
    v89 = (void *)sub_2418A9DB0();
    v90 = objc_msgSend(v88, sel_BOOLForKey_, v89);

    sub_24172588C(v86, type metadata accessor for StateOfMindEntryModel.Configuration);
    *(_BYTE *)(v34 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_useLiveVisualization) = v90 ^ 1;
    return (id)v34;
  }
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v61 = result;
    v62 = objc_msgSend(result, sel_isAppleWatch);

    if (v62)
    {
      swift_beginAccess();
      v102 = 1;
      type metadata accessor for __HKStateOfMindReflectiveInterval(0);
      sub_2418A83E8();
      swift_endAccess();
      v63 = v91;
      sub_2418A8328();
      v64 = sub_2418A8334();
      v65 = sub_2418AA05C();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc();
        v67 = swift_slowAlloc();
        v104[0] = v67;
        *(_DWORD *)v66 = 136446210;
        v68 = sub_2418AA5D8();
        v102 = sub_24176024C(v68, v69, v104);
        sub_2418AA1F4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24171C000, v64, v65, "[%{public}s] Initialized (not inferring reflective interval)", v66, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24269D548](v67, -1, -1);
        MEMORY[0x24269D548](v66, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v96 + 8))(v63, v97);
    }
    else
    {
      v70 = objc_allocWithZone(MEMORY[0x24BEA9950]);
      v71 = v41;
      v72 = (void *)sub_2418A9DB0();
      v73 = objc_msgSend(v70, sel_initWithIdentifier_healthStore_, v72, v71);

      type metadata accessor for PreferredReflectiveIntervalProvider();
      *(_QWORD *)(swift_initStackObject() + 16) = v73;
      v74 = sub_2418066B4(v100);
      swift_beginAccess();
      v102 = v74;
      type metadata accessor for __HKStateOfMindReflectiveInterval(0);
      sub_2418A83E8();
      swift_endAccess();
      v75 = v92;
      sub_2418A8328();
      v76 = sub_2418A8334();
      v77 = sub_2418AA05C();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = swift_slowAlloc();
        v79 = swift_slowAlloc();
        v100 = v34;
        v80 = v79;
        v104[0] = v79;
        *(_DWORD *)v78 = 136446466;
        v81 = sub_2418AA5D8();
        v102 = sub_24176024C(v81, v82, v104);
        sub_2418AA1F4();
        swift_bridgeObjectRelease();
        *(_WORD *)(v78 + 12) = 2082;
        v102 = v74;
        v83 = sub_2418A9DF8();
        v102 = sub_24176024C(v83, v84, v104);
        sub_2418AA1F4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24171C000, v76, v77, "[%{public}s] Initialized with inferred: %{public}s", (uint8_t *)v78, 0x16u);
        swift_arrayDestroy();
        v85 = v80;
        v34 = v100;
        MEMORY[0x24269D548](v85, -1, -1);
        MEMORY[0x24269D548](v78, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v96 + 8))(v92, v97);
      }
      else
      {

        swift_release();
        (*(void (**)(char *, uint64_t))(v96 + 8))(v75, v97);
      }
    }
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_24179CE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24179CE50()
{
  unint64_t result;

  result = qword_25714E9A0;
  if (!qword_25714E9A0)
  {
    result = MEMORY[0x24269D47C](&unk_2418D48B8, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714E9A0);
  }
  return result;
}

unint64_t sub_24179CE94()
{
  unint64_t result;

  result = qword_25714E9A8;
  if (!qword_25714E9A8)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4890, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage);
    atomic_store(result, (unint64_t *)&qword_25714E9A8);
  }
  return result;
}

unint64_t sub_24179CED8()
{
  unint64_t result;

  result = qword_25714E9B8;
  if (!qword_25714E9B8)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4868, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage);
    atomic_store(result, (unint64_t *)&qword_25714E9B8);
  }
  return result;
}

unint64_t sub_24179CF20()
{
  unint64_t result;

  result = qword_25714E9C0;
  if (!qword_25714E9C0)
  {
    result = MEMORY[0x24269D47C](&protocol conformance descriptor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval);
    atomic_store(result, (unint64_t *)&qword_25714E9C0);
  }
  return result;
}

uint64_t sub_24179CF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24179639C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date, sub_241799F7C);
}

uint64_t sub_24179CF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241796408(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_241799F98, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date, sub_241799F7C);
}

uint64_t sub_24179CFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24179639C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval, sub_241799FBC);
}

uint64_t sub_24179CFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241796408(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_241799FD8, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval, sub_241799FBC);
}

uint64_t sub_24179D004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241796804(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence, &qword_25714E938, MEMORY[0x24BEE13C8]);
}

uint64_t sub_24179D030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241796884(a1, a2, a3, a4, &qword_25714E940, MEMORY[0x24BEE13C8], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence, &qword_25714E938);
}

uint64_t sub_24179D064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24179639C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels, sub_241799FF4);
}

uint64_t sub_24179D088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241796408(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_24179A02C, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels, sub_241799FF4);
}

uint64_t sub_24179D0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24179639C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains, sub_24179A048);
}

uint64_t sub_24179D0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241796408(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_24179A064, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains, sub_24179A048);
}

uint64_t sub_24179D104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241796804(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context, &qword_25714E970, MEMORY[0x24BEE0D00]);
}

uint64_t sub_24179D130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241796884(a1, a2, a3, a4, &qword_25714E978, MEMORY[0x24BEE0D00], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context, &qword_25714E970);
}

uint64_t sub_24179D164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241796804(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence, &qword_25714E938, MEMORY[0x24BEE13C8]);
}

uint64_t sub_24179D190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241796884(a1, a2, a3, a4, &qword_25714E940, MEMORY[0x24BEE13C8], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence, &qword_25714E938);
}

uint64_t sub_24179D1C4()
{
  return type metadata accessor for StateOfMindEntryModel(0);
}

uint64_t type metadata accessor for StateOfMindEntryModel(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_25714E9F8);
}

uint64_t sub_24179D1E0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24179D214()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  type metadata accessor for StateOfMindEntryModel.Configuration(319);
  if (v0 <= 0x3F)
  {
    sub_241799F7C(319);
    if (v1 <= 0x3F)
    {
      sub_241799FBC(319);
      if (v2 <= 0x3F)
      {
        sub_24172887C(319, &qword_25714E938, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
        if (v3 <= 0x3F)
        {
          sub_241799FF4(319);
          if (v4 <= 0x3F)
          {
            sub_24179A048(319);
            if (v5 <= 0x3F)
            {
              sub_24172887C(319, &qword_25714E970, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
              if (v6 <= 0x3F)
                swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for StateOfMindEntryModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateOfMindEntryModel.__allocating_init(healthStore:configuration:onSampleSave:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

_QWORD *initializeBufferWithCopyOfBuffer for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a3[5];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_2418A8100();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2418A8130();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_241799D38(0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v18 = a3[7];
    v19 = a3[8];
    v20 = (_QWORD *)((char *)v4 + v18);
    v21 = (uint64_t *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    *((_BYTE *)v4 + v19) = *((_BYTE *)a2 + v19);
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_2418A8130();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_2418A8130();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_241799D38(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = sub_2418A8130();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_241799D38(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_2418A8130();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_241799D38(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_2418A8130();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_241799D38(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateOfMindEntryModel.Configuration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24179DAFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  int v13;

  v6 = sub_2418A8100();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_241799D38(0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  v13 = v12 - 1;
  if (v13 < 0)
    v13 = -1;
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindEntryModel.Configuration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24179DBBC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_2418A8100();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
LABEL_5:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
    return;
  }
  sub_241799D38(0);
  v9 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v12;
    v11 = a4[6];
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + a4[7] + 8) = a2;
}

void sub_24179DC60()
{
  unint64_t v0;
  unint64_t v1;

  sub_2418A8100();
  if (v0 <= 0x3F)
  {
    sub_241799D38(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval;
}

uint64_t _s14MentalHealthUI21StateOfMindEntryModelC13ConfigurationV25InitialReflectiveIntervalV7StorageOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s14MentalHealthUI21StateOfMindEntryModelC13ConfigurationV25InitialReflectiveIntervalV7StorageOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_24179DDC4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_24179DDDC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for StateOfMindEntryModel.Configuration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_24179DE68 + 4 * byte_2418D41EB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_24179DE9C + 4 * byte_2418D41E6[v4]))();
}

uint64_t sub_24179DE9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24179DEA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24179DEACLL);
  return result;
}

uint64_t sub_24179DEB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24179DEC0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_24179DEC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24179DECC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.CodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.CodingKeys;
}

unint64_t sub_24179DEEC()
{
  unint64_t result;

  result = qword_25714EAF0;
  if (!qword_25714EAF0)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4720, &type metadata for StateOfMindEntryModel.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EAF0);
  }
  return result;
}

unint64_t sub_24179DF34()
{
  unint64_t result;

  result = qword_25714EAF8;
  if (!qword_25714EAF8)
  {
    result = MEMORY[0x24269D47C](&unk_2418D47D8, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EAF8);
  }
  return result;
}

unint64_t sub_24179DF7C()
{
  unint64_t result;

  result = qword_25714EB00;
  if (!qword_25714EB00)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4800, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage);
    atomic_store(result, (unint64_t *)&qword_25714EB00);
  }
  return result;
}

unint64_t sub_24179DFC4()
{
  unint64_t result;

  result = qword_25714EB08;
  if (!qword_25714EB08)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4748, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EB08);
  }
  return result;
}

unint64_t sub_24179E00C()
{
  unint64_t result;

  result = qword_25714EB10;
  if (!qword_25714EB10)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4770, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EB10);
  }
  return result;
}

unint64_t sub_24179E054()
{
  unint64_t result;

  result = qword_25714EB18;
  if (!qword_25714EB18)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4690, &type metadata for StateOfMindEntryModel.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EB18);
  }
  return result;
}

unint64_t sub_24179E09C()
{
  unint64_t result;

  result = qword_25714EB20;
  if (!qword_25714EB20)
  {
    result = MEMORY[0x24269D47C](&unk_2418D46B8, &type metadata for StateOfMindEntryModel.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EB20);
  }
  return result;
}

unint64_t sub_24179E0E0()
{
  unint64_t result;

  result = qword_25714EB30;
  if (!qword_25714EB30)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4D3C, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.InferredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EB30);
  }
  return result;
}

unint64_t sub_24179E124()
{
  unint64_t result;

  result = qword_25714EB40;
  if (!qword_25714EB40)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4CEC, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EB40);
  }
  return result;
}

unint64_t sub_24179E168()
{
  unint64_t result;

  result = qword_25714EB50;
  if (!qword_25714EB50)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4C9C, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EB50);
  }
  return result;
}

unint64_t sub_24179E1AC()
{
  unint64_t result;

  result = qword_25714EB60;
  if (!qword_25714EB60)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4C4C, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EB60);
  }
  return result;
}

uint64_t sub_24179E1F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746963696C707865 && a2 == 0xE800000000000000;
  if (v2 || (sub_2418AA4DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465786966 && a2 == 0xE500000000000000 || (sub_2418AA4DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465727265666E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2418AA4DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_24179E33C(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0];
  sub_24177AE40(0, &qword_25714EB68, (uint64_t (*)(void))sub_24179E0E0, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.InferredCodingKeys, MEMORY[0x24BEE33E0]);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v41 = (char *)&v33 - v5;
  sub_24177AE40(0, &qword_25714EB70, (uint64_t (*)(void))sub_24179E124, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys, v2);
  v37 = v6;
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v40 = (char *)&v33 - v8;
  sub_24177AE40(0, &qword_25714EB78, (uint64_t (*)(void))sub_24179E168, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys, v2);
  v36 = v9;
  v34 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v33 - v11;
  sub_24177AE40(0, &qword_25714EB80, (uint64_t (*)(void))sub_24179E1AC, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys, v2);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v33 - v17;
  v19 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24179E1AC();
  v20 = v42;
  sub_2418AA5A8();
  if (v20)
    goto LABEL_7;
  v22 = v40;
  v21 = v41;
  v42 = v15;
  v33 = a1;
  v23 = sub_2418AA44C();
  if (*(_QWORD *)(v23 + 16) != 1)
  {
    v24 = sub_2418AA2FC();
    swift_allocError();
    v26 = v25;
    sub_24179E854();
    *v26 = &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage;
    v19 = (uint64_t)v18;
    sub_2418AA410();
    sub_2418AA2E4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v14);
    a1 = v33;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v19;
  }
  if (*(_BYTE *)(v23 + 32))
  {
    if (*(_BYTE *)(v23 + 32) == 1)
    {
      LODWORD(v41) = 1;
      v44 = 1;
      sub_24179E124();
      sub_2418AA404();
      v30 = v37;
      v31 = sub_2418AA434();
      v32 = v42;
      v19 = v31;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v14);
    }
    else
    {
      v45 = 2;
      sub_24179E0E0();
      sub_2418AA404();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v14);
      v19 = 0;
    }
  }
  else
  {
    v43 = 0;
    sub_24179E168();
    v28 = v12;
    sub_2418AA404();
    v29 = v36;
    v19 = sub_2418AA434();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v14);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return v19;
}

void sub_24179E854()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714EB88)
  {
    sub_24179E8C0();
    sub_2418AA2F0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714EB88);
  }
}

unint64_t sub_24179E8C0()
{
  unint64_t result;

  result = qword_25714EB90;
  if (!qword_25714EB90)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25714EB90);
  }
  return result;
}

uint64_t sub_24179E8FC()
{
  return swift_deallocObject();
}

uint64_t sub_24179E90C(char a1, void *a2)
{
  return sub_24179A080(a1, a2);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_24179E92C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_241762EFC(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_24179E98C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_24179E92C(255, a3, &qword_25714EBC8, 0x24BDD3ED8, a4);
    v5 = sub_2418AA4B8();
    if (!v6)
      atomic_store(v5, a2);
  }
}

char *keypath_get_selector_startDate()
{
  return sel_startDate;
}

uint64_t storeEnumTagSinglePayload for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24179EA50 + 4 * byte_2418D41F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24179EA84 + 4 * byte_2418D41F0[v4]))();
}

uint64_t sub_24179EA84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24179EA8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24179EA94);
  return result;
}

uint64_t sub_24179EAA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24179EAA8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24179EAAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24179EAB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys;
}

uint64_t _s14MentalHealthUI21StateOfMindEntryModelC13ConfigurationV25InitialReflectiveIntervalV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24179EB20 + 4 * byte_2418D41FA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24179EB40 + 4 * byte_2418D41FF[v4]))();
}

_BYTE *sub_24179EB20(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24179EB40(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24179EB48(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24179EB50(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24179EB58(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24179EB60(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.InferredCodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.InferredCodingKeys;
}

unint64_t sub_24179EB90()
{
  unint64_t result;

  result = qword_25714EBF8;
  if (!qword_25714EBF8)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4AB4, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EBF8);
  }
  return result;
}

unint64_t sub_24179EBD8()
{
  unint64_t result;

  result = qword_25714EC00;
  if (!qword_25714EC00)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4B6C, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EC00);
  }
  return result;
}

unint64_t sub_24179EC20()
{
  unint64_t result;

  result = qword_25714EC08;
  if (!qword_25714EC08)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4C24, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EC08);
  }
  return result;
}

unint64_t sub_24179EC68()
{
  unint64_t result;

  result = qword_25714EC10;
  if (!qword_25714EC10)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4B94, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EC10);
  }
  return result;
}

unint64_t sub_24179ECB0()
{
  unint64_t result;

  result = qword_25714EC18;
  if (!qword_25714EC18)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4BBC, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EC18);
  }
  return result;
}

unint64_t sub_24179ECF8()
{
  unint64_t result;

  result = qword_25714EC20;
  if (!qword_25714EC20)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4ADC, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EC20);
  }
  return result;
}

unint64_t sub_24179ED40()
{
  unint64_t result;

  result = qword_25714EC28;
  if (!qword_25714EC28)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4B04, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EC28);
  }
  return result;
}

unint64_t sub_24179ED88()
{
  unint64_t result;

  result = qword_25714EC30;
  if (!qword_25714EC30)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4A24, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EC30);
  }
  return result;
}

unint64_t sub_24179EDD0()
{
  unint64_t result;

  result = qword_25714EC38;
  if (!qword_25714EC38)
  {
    result = MEMORY[0x24269D47C](&unk_2418D4A4C, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EC38);
  }
  return result;
}

unint64_t sub_24179EE18()
{
  unint64_t result;

  result = qword_25714EC40;
  if (!qword_25714EC40)
  {
    result = MEMORY[0x24269D47C](&unk_2418D49D4, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.InferredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EC40);
  }
  return result;
}

unint64_t sub_24179EE60()
{
  unint64_t result;

  result = qword_25714EC48;
  if (!qword_25714EC48)
  {
    result = MEMORY[0x24269D47C](&unk_2418D49FC, &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.InferredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25714EC48);
  }
  return result;
}

ValueMetadata *_s21UnlimitedHeightVStackVMa()
{
  return &_s21UnlimitedHeightVStackVN;
}

double sub_24179EEC0(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_24179F150(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_24179EED8(uint64_t a1, char a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_24179F240(a1, a2 & 1, a7, a3, a4);
}

unint64_t sub_24179EEEC()
{
  unint64_t result;

  result = qword_25714EC50[0];
  if (!qword_25714EC50[0])
  {
    result = MEMORY[0x24269D47C](&unk_2418D4DB8, &_s21UnlimitedHeightVStackVN);
    atomic_store(result, qword_25714EC50);
  }
  return result;
}

uint64_t sub_24179EF30(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char v13;
  void (*v14)(_BYTE *, _QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _BYTE v27[32];
  uint64_t v28;

  v25 = a1;
  v5 = sub_2418A86C4();
  v24 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418A8724();
  sub_24172159C((unint64_t *)&qword_25714D9D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778], MEMORY[0x24BDEC7A0]);
  v9 = sub_2418A9F9C();
  v10 = MEMORY[0x24BEE4AF8];
  if (!v9)
    return v10;
  v11 = v9;
  v28 = MEMORY[0x24BEE4AF8];
  sub_24183D5C8(0, v9 & ~(v9 >> 63), 0);
  result = sub_2418A9F90();
  if ((v11 & 0x8000000000000000) == 0)
  {
    v13 = a2 & 1;
    v23 = a3;
    do
    {
      v14 = (void (*)(_BYTE *, _QWORD))sub_2418A9FC0();
      v15 = v24;
      (*(void (**)(char *))(v24 + 16))(v8);
      v14(v27, 0);
      v27[0] = v13;
      v26 = 1;
      sub_2418A86AC();
      v17 = v16;
      v19 = v18;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v5);
      v10 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24183D5C8(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v28;
      }
      v21 = *(_QWORD *)(v10 + 16);
      v20 = *(_QWORD *)(v10 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_24183D5C8(v20 > 1, v21 + 1, 1);
        v10 = v28;
      }
      *(_QWORD *)(v10 + 16) = v21 + 1;
      v22 = v10 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v19;
      sub_2418A9FB4();
      --v11;
    }
    while (v11);
    return v10;
  }
  __break(1u);
  return result;
}

double sub_24179F150(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6;
  unint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double *v13;
  uint64_t v14;
  double v15;
  double v16;
  unint64_t v17;
  double *v18;
  double v19;

  v6 = sub_24179EF30(a1, a2 & 1, a5);
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
    v8 = 0.0;
    goto LABEL_16;
  }
  v8 = 0.0;
  v9 = 32;
  v10 = *(_QWORD *)(v6 + 16);
  do
  {
    if (v8 <= *(double *)(v6 + v9))
      v8 = *(double *)(v6 + v9);
    v9 += 16;
    --v10;
  }
  while (v10);
  if ((a4 & 1) != 0)
  {
    if (v7 < 2)
    {
      v11 = 0;
      v12 = 0.0;
LABEL_14:
      v17 = v7 - v11;
      v18 = (double *)(v6 + 16 * v11 + 40);
      do
      {
        v19 = *v18;
        v18 += 2;
        v12 = v12 + v19;
        --v17;
      }
      while (v17);
      goto LABEL_16;
    }
    v11 = v7 & 0x7FFFFFFFFFFFFFFELL;
    v13 = (double *)(v6 + 56);
    v12 = 0.0;
    v14 = v7 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v15 = *(v13 - 2);
      v16 = *v13;
      v13 += 4;
      v12 = v12 + v15 + v16;
      v14 -= 2;
    }
    while (v14);
    if (v7 != v11)
      goto LABEL_14;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_24179F240(uint64_t a1, char a2, uint64_t a3, double a4, double a5)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(uint64_t *, _QWORD);
  char *v55;
  uint64_t (*v56)(char *, char *, uint64_t);
  uint64_t result;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  double v62;
  char v63;
  char v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char v83;
  uint64_t v84[5];

  v8 = a2 & 1;
  sub_241787948();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2418A86C4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v82 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241776444();
  v73 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v72 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_2418A8724();
  v80 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78, v20);
  v79 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417764A8(0, &qword_25714D9C0, MEMORY[0x24BEE2600]);
  v76 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v69 - v24;
  sub_2417764A8(0, &qword_25714D990, MEMORY[0x24BEE2610]);
  v81 = v26;
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v71 = (uint64_t)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v30);
  v70 = (uint64_t)&v69 - v31;
  v32 = sub_24179EF30(a1, v8, a3);
  v33 = *(_QWORD *)(v32 + 16);
  v75 = v14;
  v77 = v25;
  if (v33)
  {
    v74 = (void (*)(uint64_t, uint64_t, uint64_t))a3;
    v84[0] = MEMORY[0x24BEE4AF8];
    sub_24183D5E4(0, v33, 0);
    v34 = v84[0];
    v35 = *(_QWORD *)(v84[0] + 16);
    v36 = 32 * v35 + 56;
    v69 = v32;
    v37 = (uint64_t *)(v32 + 40);
    do
    {
      v38 = *(v37 - 1);
      v39 = *v37;
      v84[0] = v34;
      v40 = *(_QWORD *)(v34 + 24);
      v41 = v35 + 1;
      if (v35 >= v40 >> 1)
      {
        sub_24183D5E4(v40 > 1, v35 + 1, 1);
        v34 = v84[0];
      }
      v37 += 2;
      *(_QWORD *)(v34 + 16) = v41;
      v42 = (_BYTE *)(v34 + v36);
      *((_QWORD *)v42 - 3) = v38;
      *(v42 - 16) = 0;
      *((_QWORD *)v42 - 1) = v39;
      v36 += 32;
      v35 = v41;
      *v42 = 0;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    a3 = (uint64_t)v74;
    v14 = v75;
    v25 = v77;
  }
  else
  {
    swift_bridgeObjectRelease();
    v34 = MEMORY[0x24BEE4AF8];
  }
  v43 = v80;
  v44 = v70;
  v45 = v78;
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16);
  v74(v70, a3, v78);
  v69 = (uint64_t)&v69;
  v46 = v81;
  *(_QWORD *)(v44 + *((int *)v81 + 13)) = v34;
  v47 = v71;
  sub_241776574(v44, v71);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v79, v47, v45);
  v48 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778];
  sub_24172159C(&qword_25714D9A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778], MEMORY[0x24BDEC798]);
  sub_2418A9E70();
  v49 = v76;
  v50 = &v25[*(int *)(v76 + 52)];
  *(_QWORD *)v50 = *(_QWORD *)(v47 + *((int *)v46 + 13));
  *((_QWORD *)v50 + 1) = 0;
  v81 = v50;
  v76 = *(int *)(v49 + 56);
  v25[v76] = 0;
  sub_2417765C8();
  v52 = &v25[*(int *)(v51 + 36)];
  v71 = sub_24172159C((unint64_t *)&qword_25714D9D0, v48, MEMORY[0x24BDEC7A0]);
  while (1)
  {
    v53 = *(_QWORD *)v52;
    sub_2418A9FA8();
    if (v53 == v84[0])
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_17:
      sub_24172588C((uint64_t)v12, (uint64_t (*)(_QWORD))sub_241787948);
      goto LABEL_19;
    }
    v54 = (void (*)(uint64_t *, _QWORD))sub_2418A9FC0();
    (*(void (**)(char *))(v14 + 16))(v12);
    v54(v84, 0);
    v55 = v79;
    v74((uint64_t)v79, (uint64_t)v25, v45);
    sub_2418A9FB4();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v55, v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      goto LABEL_17;
    v56 = *(uint64_t (**)(char *, char *, uint64_t))(v14 + 32);
    result = v56(v82, v12, v13);
    v58 = *((_QWORD *)v81 + 1);
    v59 = *(_QWORD *)(*(_QWORD *)v81 + 16);
    if (v58 == v59)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v82, v13);
      v25 = v77;
LABEL_19:
      v25[v76] = 1;
LABEL_20:
      sub_241776640((uint64_t)v25, &qword_25714D9C0, MEMORY[0x24BEE2600]);
      return sub_241776640(v70, &qword_25714D990, MEMORY[0x24BEE2610]);
    }
    if (v58 >= v59)
      break;
    v60 = v12;
    v61 = *(_QWORD *)v81 + 32 * v58;
    v62 = *(double *)(v61 + 48);
    v63 = *(_BYTE *)(v61 + 56);
    v64 = *(_BYTE *)(v61 + 40);
    v65 = *(_QWORD *)(v61 + 32);
    v66 = v82;
    *((_QWORD *)v81 + 1) = v58 + 1;
    v67 = (uint64_t)v72;
    v68 = &v72[*(int *)(v73 + 48)];
    v56(v72, v66, v13);
    *(_QWORD *)v68 = v65;
    v68[8] = v64;
    *((double *)v68 + 2) = v62;
    v68[24] = v63;
    sub_2418A99F0();
    LOBYTE(v84[0]) = v64;
    v83 = v63;
    result = sub_2418A86B8();
    if ((v63 & 1) != 0)
      goto LABEL_22;
    a5 = a5 + v62;
    sub_24172588C(v67, (uint64_t (*)(_QWORD))sub_241776444);
    v25 = v77;
    v12 = v60;
    v14 = v75;
    v45 = v78;
    if ((v77[v76] & 1) != 0)
      goto LABEL_20;
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_24179F848()
{
  return swift_allocateGenericValueMetadata();
}

void sub_24179F850()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_2417768DC(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_24179F8D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  size_t __n;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v33 = sub_2418A8EB0();
  v8 = *(_QWORD *)(v33 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = sub_2418A87B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_DWORD *)(v11 + 80) | v9;
  v14 = v13 & 0xF8 | 7u;
  v15 = v7 + v14;
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  if (((v16 + v12) & (unint64_t)~v12) + *(_QWORD *)(v11 + 64) <= 8)
    v17 = 8;
  else
    v17 = ((v16 + v12) & ~v12) + *(_QWORD *)(v11 + 64);
  v18 = *(_DWORD *)(v6 + 80) & 0xF8 | v14;
  v19 = (*(_DWORD *)(v6 + 80) | v13) & 0x100000;
  if ((_DWORD)v18 != 7 || v19 != 0 || v17 + ((v7 + v14) & (unint64_t)~v14) + 1 > 0x18)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v18 + 16) & ~v18));
LABEL_27:
    swift_retain();
    return a1;
  }
  __n = v16;
  v31 = v16 + v12;
  v32 = v10;
  v23 = ~v14;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
  v24 = (_QWORD *)(((unint64_t)a1 + v15) & v23);
  v25 = (_QWORD *)(((unint64_t)a2 + v15) & v23);
  v26 = *((unsigned __int8 *)v25 + v17);
  if (v26 >= 2)
  {
    if (v17 <= 3)
      v27 = v17;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  if (v26 != 1)
  {
    *v24 = *v25;
    *((_BYTE *)v24 + v17) = 0;
    goto LABEL_27;
  }
  v28 = ~v12;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v25, 1, v33))
  {
    memcpy((void *)(((unint64_t)a1 + v15) & v23), v25, __n);
  }
  else
  {
    (*(void (**)(unint64_t, _QWORD *, uint64_t))(v8 + 16))(((unint64_t)a1 + v15) & v23, v25, v33);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v15) & v23, 0, 1, v33);
  }
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((unint64_t)v24 + v31) & v28, ((unint64_t)v25 + v31) & v28, v32);
  *((_BYTE *)v24 + v17) = 1;
  return a1;
}

uint64_t sub_24179FB28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = sub_2418A8EB0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = sub_2418A87B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = (*(_DWORD *)(v9 + 80) | v7) & 0xF8 | 7u;
  v12 = (v4 + v11) & ~v11;
  if (*(_DWORD *)(v6 + 84))
    v13 = *(_QWORD *)(v6 + 64);
  else
    v13 = *(_QWORD *)(v6 + 64) + 1;
  v14 = v13 + v10;
  v15 = ((v13 + v10) & ~v10) + *(_QWORD *)(v9 + 64);
  if (v15 <= 8)
    v15 = 8;
  v16 = *(unsigned __int8 *)(v12 + v15);
  if (v16 >= 2)
  {
    if (v15 <= 3)
      v17 = v15;
    else
      v17 = 4;
    __asm { BR              X14 }
  }
  if (v16 != 1)
    return swift_release();
  v18 = ~v10;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))((v14 + v12) & v18, v8);
}

uint64_t sub_24179FCB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  size_t v16;
  size_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2418A8EB0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = sub_2418A87B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = (*(_DWORD *)(v11 + 80) | v9) & 0xF8 | 7u;
  v14 = (_QWORD *)((v6 + v13 + a1) & ~v13);
  v15 = (_QWORD *)((v6 + v13 + a2) & ~v13);
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  v17 = v16 + v12;
  if (((v16 + v12) & ~v12) + *(_QWORD *)(v11 + 64) <= 8)
    v18 = 8;
  else
    v18 = ((v16 + v12) & ~v12) + *(_QWORD *)(v11 + 64);
  v19 = *((unsigned __int8 *)v15 + v18);
  if (v19 >= 2)
  {
    if (v18 <= 3)
      v20 = v18;
    else
      v20 = 4;
    __asm { BR              X13 }
  }
  if (v19 == 1)
  {
    v23 = v10;
    v21 = ~v12;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7))
    {
      memcpy(v14, v15, v16);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(v14, v15, v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((unint64_t)v14 + v17) & v21, ((unint64_t)v15 + v17) & v21, v23);
    *((_BYTE *)v14 + v18) = 1;
  }
  else
  {
    *v14 = *v15;
    *((_BYTE *)v14 + v18) = 0;
    swift_retain();
  }
  return a1;
}

uint64_t sub_24179FE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v25;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2418A8EB0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = sub_2418A87B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(_DWORD *)(v11 + 80) | v9) & 0xF8 | 7u;
  v13 = v6 + v12;
  v14 = (_QWORD *)((v6 + v12 + a1) & ~v12);
  v15 = (_QWORD *)((v13 + a2) & ~v12);
  if (v14 != v15)
  {
    v16 = v10;
    v17 = *(_DWORD *)(v11 + 80);
    if (*(_DWORD *)(v8 + 84))
      v18 = *(_QWORD *)(v8 + 64);
    else
      v18 = *(_QWORD *)(v8 + 64) + 1;
    if (((v18 + v17) & ~v17) + *(_QWORD *)(v11 + 64) <= 8)
      v19 = 8;
    else
      v19 = ((v18 + v17) & ~v17) + *(_QWORD *)(v11 + 64);
    v20 = *((unsigned __int8 *)v14 + v19);
    if (v20 >= 2)
    {
      if (v19 <= 3)
        v21 = v19;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    v25 = ~v17;
    if (v20 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7))
        (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v14, v7);
      (*(void (**)(unint64_t, uint64_t))(v11 + 8))(((unint64_t)v14 + v17 + v18) & v25, v16);
    }
    else
    {
      swift_release();
    }
    v22 = *((unsigned __int8 *)v15 + v19);
    if (v22 >= 2)
    {
      if (v19 <= 3)
        v23 = v19;
      else
        v23 = 4;
      __asm { BR              X12 }
    }
    if (v22 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7))
      {
        memcpy(v14, v15, v18);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(v14, v15, v7);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((unint64_t)v14 + v17 + v18) & v25, ((unint64_t)v15 + v17 + v18) & v25, v16);
      *((_BYTE *)v14 + v19) = 1;
    }
    else
    {
      *v14 = *v15;
      *((_BYTE *)v14 + v19) = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_2417A0158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v25;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2418A8EB0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = sub_2418A87B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = (*(_DWORD *)(v11 + 80) | v9) & 0xF8 | 7u;
  v14 = v6 + v13;
  v15 = (_QWORD *)((v6 + v13 + a1) & ~v13);
  v16 = (_QWORD *)((v14 + a2) & ~v13);
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  v18 = v17 + v12;
  if (((v17 + v12) & ~v12) + *(_QWORD *)(v11 + 64) <= 8)
    v19 = 8;
  else
    v19 = ((v17 + v12) & ~v12) + *(_QWORD *)(v11 + 64);
  v20 = *((unsigned __int8 *)v16 + v19);
  if (v20 >= 2)
  {
    if (v19 <= 3)
      v21 = v19;
    else
      v21 = 4;
    __asm { BR              X13 }
  }
  if (v20 == 1)
  {
    v25 = v10;
    v22 = ~v12;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v7))
    {
      memcpy(v15, v16, v17);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 32))(v15, v16, v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))(((unint64_t)v15 + v18) & v22, ((unint64_t)v16 + v18) & v22, v25);
    v23 = 1;
  }
  else
  {
    v23 = 0;
    *v15 = *v16;
  }
  *((_BYTE *)v15 + v19) = v23;
  return a1;
}

uint64_t sub_2417A0338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  char v24;
  uint64_t v26;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2418A8EB0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = sub_2418A87B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(_DWORD *)(v11 + 80) | v9) & 0xF8 | 7u;
  v13 = v6 + v12;
  v14 = (_QWORD *)((v6 + v12 + a1) & ~v12);
  v15 = (_QWORD *)((v13 + a2) & ~v12);
  if (v14 != v15)
  {
    v16 = v10;
    v17 = *(_DWORD *)(v11 + 80);
    if (*(_DWORD *)(v8 + 84))
      v18 = *(_QWORD *)(v8 + 64);
    else
      v18 = *(_QWORD *)(v8 + 64) + 1;
    if (((v18 + v17) & ~v17) + *(_QWORD *)(v11 + 64) <= 8)
      v19 = 8;
    else
      v19 = ((v18 + v17) & ~v17) + *(_QWORD *)(v11 + 64);
    v20 = *((unsigned __int8 *)v14 + v19);
    if (v20 >= 2)
    {
      if (v19 <= 3)
        v21 = v19;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    v26 = ~v17;
    if (v20 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7))
        (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v14, v7);
      (*(void (**)(unint64_t, uint64_t))(v11 + 8))(((unint64_t)v14 + v17 + v18) & v26, v16);
    }
    else
    {
      swift_release();
    }
    v22 = *((unsigned __int8 *)v15 + v19);
    if (v22 >= 2)
    {
      if (v19 <= 3)
        v23 = v19;
      else
        v23 = 4;
      __asm { BR              X12 }
    }
    if (v22 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7))
      {
        memcpy(v14, v15, v18);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 32))(v14, v15, v7);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))(((unint64_t)v14 + v17 + v18) & v26, ((unint64_t)v15 + v17 + v18) & v26, v16);
      v24 = 1;
    }
    else
    {
      v24 = 0;
      *v14 = *v15;
    }
    *((_BYTE *)v14 + v19) = v24;
  }
  return a1;
}

uint64_t sub_2417A05F8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  unsigned int v24;
  int v25;
  int v26;
  unsigned int v27;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(sub_2418A8EB0() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = sub_2418A87B4();
  if (v7 <= 0xFE)
    v12 = 254;
  else
    v12 = v7;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  if (v9)
    v16 = v10;
  else
    v16 = v10 + 1;
  v17 = ((v16 + v14) & ~(unint64_t)v14) + v15;
  if (v17 <= 8)
    v17 = 8;
  if (!a2)
    return 0;
  v18 = (*(_DWORD *)(v8 + 80) | v14) & 0xF8 | 7u;
  v19 = *(_QWORD *)(v6 + 64) + v18;
  if (a2 <= v12)
    goto LABEL_29;
  v20 = v17 + (v19 & ~v18) + 1;
  v21 = 8 * v20;
  if (v20 <= 3)
  {
    v24 = ((a2 - v12 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v24))
    {
      v22 = *(_DWORD *)(a1 + v20);
      if (!v22)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v24 > 0xFF)
    {
      v22 = *(unsigned __int16 *)(a1 + v20);
      if (!*(_WORD *)(a1 + v20))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v24 < 2)
    {
LABEL_29:
      if (v7 >= 0xFE)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
      v27 = *(unsigned __int8 *)(((v19 + a1) & ~v18) + v17);
      if (v27 >= 2)
        return (v27 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v22 = *(unsigned __int8 *)(a1 + v20);
  if (!*(_BYTE *)(a1 + v20))
    goto LABEL_29;
LABEL_20:
  v25 = (v22 - 1) << v21;
  if (v20 > 3)
    v25 = 0;
  if ((_DWORD)v20)
  {
    if (v20 <= 3)
      v26 = v20;
    else
      v26 = 4;
    __asm { BR              X12 }
  }
  return v12 + v25 + 1;
}

void sub_2417A07EC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  size_t v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_2418A8EB0() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = sub_2418A87B4();
  if (v8 <= 0xFE)
    v13 = 254;
  else
    v13 = v8;
  v14 = *(_QWORD *)(v12 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 64);
  if (v10)
    v18 = v11;
  else
    v18 = v11 + 1;
  v19 = ((v18 + v15) & ~(unint64_t)v15) + v16;
  if (v19 <= 8)
    v19 = 8;
  v17 = (*(_DWORD *)(v9 + 80) | v15) & 0xF8 | 7u;
  v20 = v19 + ((*(_QWORD *)(v7 + 64) + v17) & ~v17) + 1;
  if (a3 <= v13)
  {
    v21 = 0;
  }
  else if (v20 <= 3)
  {
    v23 = ((a3 - v13 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v23))
    {
      v21 = 4u;
    }
    else if (v23 >= 0x100)
    {
      v21 = 2;
    }
    else
    {
      v21 = v23 > 1;
    }
  }
  else
  {
    v21 = 1u;
  }
  if (v13 < a2)
  {
    v22 = ~v13 + a2;
    if (v20 < 4)
    {
      if ((_DWORD)v19 + ((*(_DWORD *)(v7 + 64) + (_DWORD)v17) & ~(_DWORD)v17) != -1)
      {
        v24 = v22 & ~(-1 << (8 * v20));
        bzero(a1, v20);
        if ((_DWORD)v20 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if ((_DWORD)v20 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v20);
      *(_DWORD *)a1 = v22;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_2417A0ABC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x2417A0AA0);
}

void sub_2417A0ACC()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x2417A0AA0);
}

void sub_2417A0AD4()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x2417A0AA0);
}

uint64_t type metadata accessor for StateOfMindEntryButtonTray(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateOfMindEntryButtonTray);
}

uint64_t sub_2417A0AEC()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_2417A0B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id result;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _QWORD v77[2];
  _QWORD v78[2];
  _QWORD v79[2];
  _QWORD v80[2];
  _QWORD v81[3];

  v68 = a2;
  v76 = type metadata accessor for AssociationSelectionPhaseSpecs();
  v4 = MEMORY[0x24BDAC7A8](v76, v3);
  v75 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v58 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v7, v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2418A87FC();
  v73 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v58 - v17;
  v19 = sub_2418A87FC();
  v20 = *(_QWORD *)(v19 - 8);
  v72 = v19;
  v74 = v20;
  MEMORY[0x24BDAC7A8](v19, v19);
  v69 = (char *)&v58 - v21;
  v22 = sub_2418A87FC();
  v59 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v22);
  v71 = (char *)&v58 - v23;
  v60 = v24;
  v25 = sub_2418A87FC();
  v63 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v25);
  v61 = (char *)&v58 - v26;
  v65 = v27;
  v28 = sub_2418A87FC();
  v66 = *(_QWORD *)(v28 - 8);
  v67 = v28;
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v62 = (char *)&v58 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30, v32);
  v64 = (uint64_t)&v58 - v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v70, v10);
  sub_2418A90E4();
  sub_241861594((uint64_t)v9);
  sub_2417A1114((uint64_t)v9);
  v34 = *(_QWORD *)(a1 + 24);
  sub_2418A9510();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  sub_2418A90F0();
  sub_241861594((uint64_t)v9);
  sub_2417A1114((uint64_t)v9);
  v35 = MEMORY[0x24BDECC60];
  v81[0] = v34;
  v81[1] = MEMORY[0x24BDECC60];
  v36 = MEMORY[0x24BDED308];
  v37 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v15, v81);
  v38 = v69;
  sub_2418A9510();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v18, v15);
  sub_241861594((uint64_t)v9);
  sub_2417A1114((uint64_t)v9);
  sub_2418A9960();
  v80[0] = v37;
  v80[1] = v35;
  v39 = v36;
  v40 = (uint64_t)v75;
  v41 = v72;
  v42 = MEMORY[0x24269D47C](v39, v72, v80);
  v43 = v71;
  sub_2418A94C8();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v38, v41);
  sub_2418A90CC();
  sub_241861594(v40);
  if ((sub_2418A879C() & 1) == 0)
    goto LABEL_4;
  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v45 = result;
    MobileGestalt_get_homeButtonType();

LABEL_4:
    v47 = v66;
    v46 = v67;
    sub_2417A1114(v40);
    v48 = MEMORY[0x24BDEDBB8];
    v79[0] = v42;
    v79[1] = MEMORY[0x24BDEDBB8];
    v49 = MEMORY[0x24BDED308];
    v50 = v60;
    v51 = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v60, v79);
    v52 = v61;
    sub_2418A9510();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v50);
    sub_2418A9960();
    v78[0] = v51;
    v78[1] = MEMORY[0x24BDECC60];
    v56 = v65;
    v57 = MEMORY[0x24269D47C](v49, v65, v78);
    v53 = (uint64_t)v62;
    sub_2418A94C8();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v52, v56);
    v77[0] = v57;
    v77[1] = v48;
    MEMORY[0x24269D47C](v49, v46, v77);
    v54 = v64;
    sub_2417DA924(v53, v46, v64);
    v55 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v55(v53, v46);
    sub_2417D8FF8(v54, v46, v68);
    return (id)((uint64_t (*)(uint64_t, uint64_t))v55)(v54, v46);
  }
  __break(1u);
  return result;
}

uint64_t sub_2417A1114(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AssociationSelectionPhaseSpecs();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417A1150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2418A87FC();
  v3 = sub_2418A87FC();
  v4 = sub_2418A87FC();
  v5 = sub_2418A87FC();
  v6 = sub_2418A87FC();
  v7 = MEMORY[0x24BDECC60];
  v16[0] = v1;
  v16[1] = MEMORY[0x24BDECC60];
  v8 = MEMORY[0x24BDED308];
  v15[0] = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v16);
  v15[1] = v7;
  v9 = MEMORY[0x24269D47C](v8, v3, v15);
  v10 = MEMORY[0x24BDEDBB8];
  v14[0] = v9;
  v14[1] = MEMORY[0x24BDEDBB8];
  v13[0] = MEMORY[0x24269D47C](v8, v4, v14);
  v13[1] = v7;
  v12[0] = MEMORY[0x24269D47C](v8, v5, v13);
  v12[1] = v10;
  return MEMORY[0x24269D47C](v8, v6, v12);
}

uint64_t *sub_2417A1278(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)((char *)a2 + v8);
    *((_WORD *)v9 + 8) = *(_WORD *)((char *)a2 + v8 + 16);
    v11 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
    __dst = &v9[v11];
    v12 = &v10[v11];
    v13 = sub_2418A7EC0();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v16 = v7;
    if (v15(v12, 1, v13))
    {
      sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
    sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    *(_QWORD *)&v9[*(int *)(v20 + 28)] = *(_QWORD *)&v10[*(int *)(v20 + 28)];
    v21 = a3[6];
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_2418A8100();
    v25 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_retain();
    v26(v22, v23, v24);
    sub_24172570C(0, qword_25714ECD8, v25, v19);
    *(_QWORD *)&v22[*(int *)(v27 + 28)] = *(_QWORD *)&v23[*(int *)(v27 + 28)];
    v28 = a3[7];
    v29 = a3[8];
    v30 = (char *)v4 + v28;
    v31 = (char *)a2 + v28;
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v30[16] = v31[16];
    v33 = (uint64_t *)((char *)v4 + v29);
    v34 = (uint64_t *)((char *)a2 + v29);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v35 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      *v33 = *v34;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_2417A1518(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;

  v4 = a1 + a2[5];
  v5 = v4 + *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v6 = sub_2418A7EC0();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  swift_release();
  v9 = a1 + a2[6];
  v10 = sub_2418A8100();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  sub_24172570C(0, qword_25714ECD8, v11, v8);
  swift_release();
  swift_release();
  swift_release();
  v12 = a1 + a2[8];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v13 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *sub_2417A16A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  v5 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  *((_WORD *)v7 + 8) = *(_WORD *)((char *)a2 + v6 + 16);
  v9 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_2418A7EC0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v5;
  if (v14(v11, 1, v12))
  {
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v7[*(int *)(v18 + 28)] = *(_QWORD *)&v8[*(int *)(v18 + 28)];
  v19 = a3[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2418A8100();
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  swift_retain();
  v24(v20, v21, v22);
  sub_24172570C(0, qword_25714ECD8, v23, v17);
  *(_QWORD *)&v20[*(int *)(v25 + 28)] = *(_QWORD *)&v21[*(int *)(v25 + 28)];
  v26 = a3[7];
  v27 = a3[8];
  v28 = (char *)a1 + v26;
  v29 = (char *)a2 + v26;
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = v30;
  v28[16] = v29[16];
  v31 = (_QWORD *)((char *)a1 + v27);
  v32 = (_QWORD *)((char *)a2 + v27);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v33 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  }
  else
  {
    *v31 = *v32;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2417A190C(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t (*v35)(uint64_t);
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  int *v39;

  *a1 = *a2;
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = v6;
  v8 = v6;

  v39 = a3;
  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)((char *)a2 + v9);
  *((_QWORD *)v10 + 1) = *(_QWORD *)((char *)a2 + v9 + 8);
  v10[16] = *((_BYTE *)a2 + v9 + 16);
  v10[17] = *((_BYTE *)a2 + v9 + 17);
  v12 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v13 = &v10[v12];
  v14 = &v11[v12];
  v15 = sub_2418A7EC0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v10[*(int *)(v22 + 28)] = *(_QWORD *)&v11[*(int *)(v22 + 28)];
  swift_retain();
  swift_release();
  v23 = v39[6];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_2418A8100();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  sub_24172570C(0, qword_25714ECD8, v27, v21);
  *(_QWORD *)&v24[*(int *)(v28 + 28)] = *(_QWORD *)&v25[*(int *)(v28 + 28)];
  swift_retain();
  swift_release();
  v29 = v39[7];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  swift_retain();
  swift_release();
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_retain();
  swift_release();
  v30[16] = v31[16];
  if (a1 != a2)
  {
    v32 = v39[8];
    v33 = (_QWORD *)((char *)a1 + v32);
    v34 = (_QWORD *)((char *)a2 + v32);
    v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v32, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v35, v36);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v37 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v33, v34, v37);
    }
    else
    {
      *v33 = *v34;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_2417A1C2C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  *((_WORD *)v7 + 8) = *(_WORD *)((char *)a2 + v6 + 16);
  v9 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_2418A7EC0();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v7[*(int *)(v16 + 28)] = *(_QWORD *)&v8[*(int *)(v16 + 28)];
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_2418A8100();
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  sub_24172570C(0, qword_25714ECD8, v21, v15);
  *(_QWORD *)&v18[*(int *)(v22 + 28)] = *(_QWORD *)&v19[*(int *)(v22 + 28)];
  v23 = a3[7];
  v24 = a3[8];
  v25 = (char *)a1 + v23;
  v26 = (char *)a2 + v23;
  v25[16] = v26[16];
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v27 = (char *)a1 + v24;
  v28 = (char *)a2 + v24;
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v30 = v29;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v27, v28, v31);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_2417A1E64(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v40;

  v6 = a2[1];
  v7 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v6;

  v40 = a3;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  *(_OWORD *)v9 = *(_OWORD *)((char *)a2 + v8);
  v9[16] = *((_BYTE *)a2 + v8 + 16);
  v9[17] = *((_BYTE *)a2 + v8 + 17);
  v11 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v12 = &v9[v11];
  v13 = &v10[v11];
  v14 = sub_2418A7EC0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v9[*(int *)(v21 + 28)] = *(_QWORD *)&v10[*(int *)(v21 + 28)];
  swift_release();
  v22 = v40[6];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_2418A8100();
  v26 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  sub_24172570C(0, qword_25714ECD8, v26, v20);
  *(_QWORD *)&v23[*(int *)(v27 + 28)] = *(_QWORD *)&v24[*(int *)(v27 + 28)];
  swift_release();
  v28 = v40[7];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);
  swift_release();
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_release();
  v29[16] = v30[16];
  if (a1 != a2)
  {
    v31 = v40[8];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v35 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1 + v31, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v34, v35);
    v37 = v36;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v38 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v32, v33, v38);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417A2154()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417A2160(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      sub_24172570C(0, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2417A226C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417A2278(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      sub_24172570C(0, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for CustomReminderView(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_25714ED38);
}

void sub_2417A2394()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24172570C(319, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
    if (v1 <= 0x3F)
    {
      sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_2417A2490()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417A24A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v56 = a2;
  v3 = sub_2418A8EF8();
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v53 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CustomReminderModel();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417A4BD8();
  v11 = v10;
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417A4B10(0);
  v44 = v15;
  v48 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417A4A08(0);
  v51 = *(_QWORD *)(v19 - 8);
  v52 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417A48DC(0);
  v49 = *(_QWORD *)(v23 - 8);
  v50 = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v47 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v14 = sub_2418A8C58();
  *((_QWORD *)v14 + 1) = 0x4034000000000000;
  v14[16] = 0;
  sub_2417A5270();
  sub_2417A294C(a1, (void (**)(char *, uint64_t))&v14[*(int *)(v26 + 44)]);
  v57 = a1;
  sub_24172570C(0, &qword_25714EE10, (uint64_t (*)(uint64_t))sub_2417A51B0, MEMORY[0x24BDEF158]);
  v28 = v27;
  v29 = sub_24172159C(&qword_25714EE20, (uint64_t (*)(uint64_t))sub_2417A4BD8, MEMORY[0x24BDF4700]);
  v30 = sub_2417A5210();
  v45 = v28;
  v46 = v11;
  sub_2418A9528();
  sub_24172588C((uint64_t)v14, (uint64_t (*)(_QWORD))sub_2417A4BD8);
  type metadata accessor for CustomReminderView(0);
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  LODWORD(v11) = v9[17];
  sub_24172588C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  if ((_DWORD)v11 == 1)
  {
    if (qword_25714B958 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  if (qword_25714B958 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  v31 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v32 = sub_2418A7EFC();
  v34 = v33;
  swift_bridgeObjectRelease();

  v62 = v32;
  v63 = v34;
  v58 = v46;
  v59 = v45;
  v60 = v29;
  v61 = v30;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v36 = sub_241721040();
  v37 = MEMORY[0x24BEE0D00];
  v38 = v44;
  sub_2418A93A8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v38);
  v39 = v53;
  sub_2418A8EEC();
  v58 = v38;
  v59 = v37;
  v60 = OpaqueTypeConformance2;
  v61 = v36;
  swift_getOpaqueTypeConformance2();
  v40 = v47;
  v41 = v52;
  sub_2418A9468();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v55);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v41);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v56, v40, v50);
}

uint64_t sub_2417A294C@<X0>(uint64_t a1@<X0>, void (**a2)(char *, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (**v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, void (**)(char *, uint64_t), uint64_t);
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t KeyPath;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  void (*v120)(void (**)(char *, uint64_t), char *, uint64_t);
  void (**v121)(char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (**v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  void (*v130)(char *, uint64_t);
  _QWORD v132[2];
  uint64_t v133;
  char *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  void (**v157)(char *, uint64_t);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (**v161)(char *, uint64_t);
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;

  v165 = a1;
  v161 = a2;
  v143 = type metadata accessor for RemoveReminderButton(0);
  v3 = MEMORY[0x24BDAC7A8](v143, v2);
  v135 = (_QWORD *)((char *)v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3, v5);
  v137 = (uint64_t)v132 - v6;
  v164 = type metadata accessor for CustomReminderView(0);
  v132[0] = *(_QWORD *)(v164 - 8);
  MEMORY[0x24BDAC7A8](v164, v7);
  v132[1] = v8;
  v133 = (uint64_t)v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDF1FA8];
  v10 = MEMORY[0x24BDF1F80];
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v138 = v11;
  v136 = *((_QWORD *)v11 - 1);
  MEMORY[0x24BDAC7A8](v11, v12);
  v134 = (char *)v132 - v13;
  sub_2417A4FF0(0);
  v142 = v14;
  v141 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v15);
  v140 = (char *)v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417A4F8C();
  v159 = v17;
  v158 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v18);
  v139 = (char *)v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CustomReminderModel();
  MEMORY[0x24BDAC7A8](v20, v21);
  v156 = (char *)v132 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, &qword_25714EDE8, (uint64_t (*)(uint64_t))sub_2417A4F8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v160 = (uint64_t)v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v27);
  v163 = (char *)v132 - v28;
  v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870];
  sub_24172570C(0, &qword_25714EE40, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v150 = v30;
  MEMORY[0x24BDAC7A8](v30, v31);
  v151 = (char *)v132 - v32;
  sub_24172835C(0, &qword_25714EDE0, v9, v10, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF46B0]);
  v155 = v33;
  v154 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33, v34);
  v153 = (char *)v132 - v35;
  sub_2417A4F10();
  v152 = v36;
  v38 = MEMORY[0x24BDAC7A8](v36, v37);
  v162 = (char *)v132 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38, v40);
  v169 = (uint64_t)v132 - v41;
  v149 = sub_2418A8DCC();
  v157 = *(void (***)(char *, uint64_t))(v149 - 8);
  MEMORY[0x24BDAC7A8](v149, v42);
  v148 = (char *)v132 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_2418A8D48();
  MEMORY[0x24BDAC7A8](v44, v45);
  v144 = (char *)v132 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v29);
  MEMORY[0x24BDAC7A8](v47, v48);
  sub_24172835C(0, &qword_25714EDC0, v9, v10, MEMORY[0x24BDEB018]);
  v50 = v49;
  v145 = *((_QWORD *)v49 - 1);
  MEMORY[0x24BDAC7A8](v49, v51);
  v53 = (char *)v132 - v52;
  sub_2417A4E18(0);
  v146 = v54;
  v147 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54, v55);
  v57 = (char *)v132 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417A4CF4(0);
  v167 = *(_QWORD *)(v58 - 8);
  v168 = v58;
  v60 = MEMORY[0x24BDAC7A8](v58, v59);
  v62 = (void (**)(char *, uint64_t))((char *)v132 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v60, v63);
  v166 = (char *)v132 - v64;
  sub_2418A8BC8();
  sub_24172570C(0, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96E4();
  sub_2418A8D3C();
  sub_2418A8490();
  v65 = v148;
  sub_2418A8DC0();
  v66 = sub_2417A50FC((unint64_t *)&qword_25714EDC8, &qword_25714EDC0, MEMORY[0x24BDEB018], MEMORY[0x24BDEB028]);
  v67 = sub_24172159C(&qword_25714EDD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF760], MEMORY[0x24BDEF750]);
  v68 = v149;
  sub_2418A9384();
  v157[1](v65, v68);
  (*(void (**)(char *, void *))(v145 + 8))(v53, v50);
  v172 = v50;
  v173 = v68;
  v174 = v66;
  v175 = v67;
  swift_getOpaqueTypeConformance2();
  v69 = v146;
  sub_2418A9348();
  (*(void (**)(char *, uint64_t))(v147 + 8))(v57, v69);
  v70 = *(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v167 + 32);
  v157 = v62;
  v70(v166, v62, v168);
  if (qword_25714B958 != -1)
    swift_once();
  v71 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v72 = sub_2418A7EFC();
  v74 = v73;
  swift_bridgeObjectRelease();

  v170 = v72;
  v171 = v74;
  v75 = v165;
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  v76 = (uint64_t)v151;
  sub_2418A96E4();
  swift_getKeyPath();
  sub_2418A981C();
  swift_release();
  sub_24173FC60(v76, &qword_25714EE40, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  sub_241721040();
  v77 = v153;
  sub_2418A97D4();
  v78 = sub_2418A90D8();
  sub_2418A84A8();
  v80 = v79;
  v82 = v81;
  v84 = v83;
  v86 = v85;
  v87 = v154;
  v88 = (uint64_t)v162;
  v89 = v155;
  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v162, v77, v155);
  v90 = v88 + *(int *)(v152 + 36);
  *(_BYTE *)v90 = v78;
  *(_QWORD *)(v90 + 8) = v80;
  *(_QWORD *)(v90 + 16) = v82;
  *(_QWORD *)(v90 + 24) = v84;
  *(_QWORD *)(v90 + 32) = v86;
  *(_BYTE *)(v90 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v87 + 8))(v77, v89);
  v91 = v169;
  sub_241731B4C(v88, v169, (uint64_t (*)(_QWORD))sub_2417A4F10);
  v92 = (uint64_t)v156;
  sub_2418A96CC();
  v93 = *(_BYTE *)(v92 + 17);
  sub_24172588C(v92, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  v94 = 1;
  v95 = (uint64_t)v163;
  v96 = v88;
  v97 = v91;
  if ((v93 & 1) == 0)
  {
    v98 = (id)qword_25715E110;
    swift_bridgeObjectRetain();
    v99 = sub_2418A7EFC();
    v101 = v100;
    swift_bridgeObjectRelease();

    v172 = (void *)v99;
    v173 = v101;
    v102 = v133;
    sub_2417289A8(v75, v133, type metadata accessor for CustomReminderView);
    v103 = (*(unsigned __int8 *)(v132[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v132[0] + 80);
    v104 = swift_allocObject();
    sub_241731B4C(v102, v104 + v103, type metadata accessor for CustomReminderView);
    v105 = MEMORY[0x24BEE0D00];
    v106 = v134;
    sub_2418A9714();
    KeyPath = swift_getKeyPath();
    v108 = (uint64_t)v135;
    *v135 = KeyPath;
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    v109 = v137;
    sub_241731B4C(v108, v137, type metadata accessor for RemoveReminderButton);
    v110 = sub_2417A50FC((unint64_t *)&qword_25714C590, (unint64_t *)&qword_25714C580, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398], MEMORY[0x24BDF43B0]);
    v111 = sub_24172159C(&qword_25714EE00, type metadata accessor for RemoveReminderButton, (uint64_t)&unk_2418D5048);
    v112 = v140;
    v113 = v138;
    v114 = v143;
    sub_2418A9318();
    sub_24172588C(v109, type metadata accessor for RemoveReminderButton);
    (*(void (**)(char *, void *))(v136 + 8))(v106, v113);
    v172 = &unk_2511AB450;
    sub_2417739BC((uint64_t)&unk_2511AC228);
    sub_24172887C(0, (unint64_t *)&qword_2543915D0, v105, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_241731AEC();
    sub_2418A9D50();
    swift_bridgeObjectRelease();
    v172 = v113;
    v173 = v114;
    v95 = (uint64_t)v163;
    v174 = v110;
    v175 = v111;
    swift_getOpaqueTypeConformance2();
    v115 = v139;
    v116 = v142;
    sub_2418A9450();
    v96 = (uint64_t)v162;
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v141 + 8))(v112, v116);
    v117 = (uint64_t)v115;
    v97 = v169;
    sub_241731B4C(v117, v95, (uint64_t (*)(_QWORD))sub_2417A4F8C);
    v94 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56))(v95, v94, 1, v159);
  v118 = v166;
  v119 = v167;
  v120 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v167 + 16);
  v121 = v157;
  v122 = v168;
  v120(v157, v166, v168);
  sub_2417289A8(v97, v96, (uint64_t (*)(_QWORD))sub_2417A4F10);
  v123 = v160;
  sub_2417A5960(v95, v160);
  LOBYTE(v172) = 1;
  v124 = v95;
  v125 = v161;
  v120(v161, (char *)v121, v122);
  sub_2417A4C50();
  v127 = v126;
  sub_2417289A8(v96, (uint64_t)v125 + *(int *)(v126 + 48), (uint64_t (*)(_QWORD))sub_2417A4F10);
  sub_2417A5960(v123, (uint64_t)v125 + *(int *)(v127 + 64));
  v128 = (uint64_t)v125 + *(int *)(v127 + 80);
  v129 = (char)v172;
  *(_QWORD *)v128 = 0;
  *(_BYTE *)(v128 + 8) = v129;
  sub_24173FC60(v124, &qword_25714EDE8, (uint64_t (*)(uint64_t))sub_2417A4F8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_24172588C(v169, (uint64_t (*)(_QWORD))sub_2417A4F10);
  v130 = *(void (**)(char *, uint64_t))(v119 + 8);
  v130(v118, v122);
  sub_24173FC60(v123, &qword_25714EDE8, (uint64_t (*)(uint64_t))sub_2417A4F8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_24172588C(v96, (uint64_t (*)(_QWORD))sub_2417A4F10);
  return ((uint64_t (*)(_QWORD, uint64_t))v130)(v121, v122);
}

uint64_t sub_2417A3728(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v2 = sub_2418A8340();
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v31 - v8;
  v10 = type metadata accessor for CustomReminderModel();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2418A7EC0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CustomReminderView(0);
  v20 = a1;
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  sub_2417A56E4((uint64_t)&v13[*(int *)(v10 + 32)], (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
  {
    v21 = v31;
    v22 = v32;
    sub_24173FC60((uint64_t)v9, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2418A8328();
    v23 = sub_2418A8334();
    v24 = sub_2418AA05C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_24171C000, v23, v24, "CustomReminderRow should have a source component always.", v25, 2u);
      MEMORY[0x24269D548](v25, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v5, v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v9, v14);
    v27 = *(id *)(a1 + 8);
    sub_24175F740((uint64_t)v18);

    v28 = (uint64_t *)(v20 + *(int *)(v19 + 28));
    v29 = *v28;
    v30 = v28[1];
    LOBYTE(v28) = *((_BYTE *)v28 + 16);
    v34 = v29;
    v35 = v30;
    v36 = (char)v28;
    v33 = 0;
    sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
    sub_2418A9810();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
}

uint64_t sub_2417A39FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, uint64_t);
  _QWORD v24[10];

  v24[1] = a2;
  sub_2417A51B0();
  v4 = v3;
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2418A8DB4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_241731234();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v24 - v18;
  sub_2418A8D84();
  v24[8] = a1;
  sub_2417312C0();
  sub_24175B500();
  sub_2418A8580();
  sub_2418A8D90();
  v24[4] = a1;
  sub_2418A8580();
  v20 = &v7[*(int *)(v4 + 48)];
  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v21(v7, v19, v11);
  v21(v20, v16, v11);
  sub_2418A8C70();
  v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v16, v11);
  return ((uint64_t (*)(char *, uint64_t))v22)(v19, v11);
}

uint64_t sub_2417A3BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  void *v21;
  uint64_t v22;

  v20[1] = a2;
  v3 = type metadata accessor for CustomReminderView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v8 = v7;
  v20[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v20 - v10;
  if (qword_25714B958 != -1)
    swift_once();
  v12 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v13 = sub_2418A7EFC();
  v15 = v14;
  swift_bridgeObjectRelease();

  v21 = (void *)v13;
  v22 = v15;
  sub_2417289A8(a1, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CustomReminderView);
  v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = swift_allocObject();
  sub_241731B4C((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for CustomReminderView);
  sub_241721040();
  v18 = MEMORY[0x24BEE0D00];
  sub_2418A9714();
  v21 = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC268);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, v18, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2417A50FC((unint64_t *)&qword_25714C590, (unint64_t *)&qword_25714C580, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398], MEMORY[0x24BDF43B0]);
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v20[0] + 8))(v11, v8);
}

uint64_t sub_2417A3E90()
{
  type metadata accessor for CustomReminderView(0);
  sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  return sub_2418A9810();
}

uint64_t sub_2417A3F08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v2 = type metadata accessor for CustomReminderView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  v6 = MEMORY[0x24BDF4398];
  sub_24172835C(0, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)v18 - v11;
  v18[0] = sub_2417A4130();
  v18[1] = v13;
  sub_2417289A8(a1, (uint64_t)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CustomReminderView);
  v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v15 = swift_allocObject();
  sub_241731B4C((uint64_t)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for CustomReminderView);
  sub_241721040();
  v16 = MEMORY[0x24BEE0D00];
  sub_2418A9714();
  v18[0] = &unk_2511AB450;
  sub_2417739BC((uint64_t)&unk_2511AC298);
  sub_24172887C(0, (unint64_t *)&qword_2543915D0, v16, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_241731AEC();
  sub_2418A9D50();
  swift_bridgeObjectRelease();
  sub_2417A50FC((unint64_t *)&qword_25714C590, (unint64_t *)&qword_25714C580, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v6, MEMORY[0x24BDF43B0]);
  sub_2418A9450();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_2417A4130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for CustomReminderModel();
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CustomReminderView(0);
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  v4 = v3[17];
  sub_24172588C((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
  if (v4 == 1)
  {
    if (qword_25714B958 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  if (qword_25714B958 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  v5 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v6 = sub_2418A7EFC();
  swift_bridgeObjectRelease();

  return v6;
}

uint64_t sub_2417A42E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(unint64_t, _QWORD, uint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  id v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;

  v57 = a1;
  sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1, v2);
  v59 = (char *)&v52 - v3;
  v60 = type metadata accessor for CustomReminderModel();
  v5 = MEMORY[0x24BDAC7A8](v60, v4);
  v61 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v58 = (char *)&v52 - v8;
  v9 = sub_2418A8100();
  v55 = *(_QWORD *)(v9 - 8);
  v56 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2418A8238();
  v53 = *(_QWORD *)(v13 - 8);
  v54 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2418A7EC0();
  v18 = *(_QWORD *)(v17 - 8);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v52 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v52 - v23;
  sub_2418A8208();
  sub_24172570C(0, &qword_25714EE38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v25 = sub_2418A8220();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 72);
  v28 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_2418D1940;
  v30 = v29 + v28;
  v31 = *(void (**)(unint64_t, _QWORD, uint64_t))(v26 + 104);
  v31(v30, *MEMORY[0x24BDCF230], v25);
  v32 = v30 + v27;
  v33 = v17;
  v31(v32, *MEMORY[0x24BDCF258], v25);
  sub_24182A8D8(v29);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v34 = type metadata accessor for CustomReminderView(0);
  v35 = v57;
  v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_24172570C(0, qword_25714ECD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  sub_2418A96CC();
  sub_2418A8190();
  v37 = v35;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v12, v56);
  v38 = v16;
  v39 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v54);
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, v36);
  v40 = v58;
  sub_2418A96CC();
  sub_2417A56E4((uint64_t)&v40[*(int *)(v60 + 32)], v39);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v39, 1, v33) == 1)
  {
    sub_24173FC60(v39, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v41 = *(id *)(v37 + 8);
    v42 = (uint64_t)v61;
    sub_2418A96CC();
    v43 = *(_BYTE *)(v42 + 16);
    sub_24172588C(v42, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
    sub_24175F510((uint64_t)v24, v43);

  }
  else
  {
    v44 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v52, v39, v33);
    v45 = *(id *)(v37 + 8);
    v46 = (uint64_t)v61;
    sub_2418A96CC();
    v47 = *(_BYTE *)(v46 + 16);
    sub_24172588C(v46, (uint64_t (*)(_QWORD))type metadata accessor for CustomReminderModel);
    sub_24175F740(v44);
    sub_24175F510((uint64_t)v24, v47);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v44, v33);
  }
  v48 = (uint64_t *)(v37 + *(int *)(v34 + 28));
  v49 = *v48;
  v50 = v48[1];
  LOBYTE(v48) = *((_BYTE *)v48 + 16);
  v63 = v49;
  v64 = v50;
  v65 = (char)v48;
  v62 = 0;
  sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  sub_2418A9810();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v24, v33);
}

uint64_t sub_2417A479C()
{
  sub_2417A48DC(0);
  sub_2417A4A08(255);
  sub_2417A4B10(255);
  sub_2417A4BD8();
  sub_24172570C(255, &qword_25714EE10, (uint64_t (*)(uint64_t))sub_2417A51B0, MEMORY[0x24BDEF158]);
  sub_24172159C(&qword_25714EE20, (uint64_t (*)(uint64_t))sub_2417A4BD8, MEMORY[0x24BDF4700]);
  sub_2417A5210();
  swift_getOpaqueTypeConformance2();
  sub_241721040();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return sub_2418A8814();
}

uint64_t sub_2417A48D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417A24A0(*(_QWORD *)(v1 + 16), a1);
}

void sub_2417A48DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_25714ED80)
  {
    sub_2417A4A08(255);
    v3 = v2;
    sub_2417A4B10(255);
    sub_2417A4BD8();
    sub_24172570C(255, &qword_25714EE10, (uint64_t (*)(uint64_t))sub_2417A51B0, MEMORY[0x24BDEF158]);
    sub_24172159C(&qword_25714EE20, (uint64_t (*)(uint64_t))sub_2417A4BD8, MEMORY[0x24BDF4700]);
    sub_2417A5210();
    v6[2] = swift_getOpaqueTypeConformance2();
    v6[3] = sub_241721040();
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF31E0], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714ED80);
  }
}

void sub_2417A4A08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_25714ED88)
  {
    sub_2417A4B10(255);
    v3 = v2;
    sub_2417A4BD8();
    sub_24172570C(255, &qword_25714EE10, (uint64_t (*)(uint64_t))sub_2417A51B0, MEMORY[0x24BDEF158]);
    sub_24172159C(&qword_25714EE20, (uint64_t (*)(uint64_t))sub_2417A4BD8, MEMORY[0x24BDF4700]);
    sub_2417A5210();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v5 = sub_241721040();
    v8[0] = v3;
    v8[1] = MEMORY[0x24BEE0D00];
    v8[2] = OpaqueTypeConformance2;
    v8[3] = v5;
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF28C0], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_25714ED88);
  }
}

void sub_2417A4B10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_25714ED90)
  {
    sub_2417A4BD8();
    v3 = v2;
    sub_24172570C(255, &qword_25714EE10, (uint64_t (*)(uint64_t))sub_2417A51B0, MEMORY[0x24BDEF158]);
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_24172159C(&qword_25714EE20, (uint64_t (*)(uint64_t))sub_2417A4BD8, MEMORY[0x24BDF4700]);
    v7[3] = sub_2417A5210();
    v5 = MEMORY[0x24269D434](a1, v7, MEMORY[0x24BDF3858], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25714ED90);
  }
}

void sub_2417A4BD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714ED98)
  {
    sub_24172570C(255, &qword_25714EDA0, (uint64_t (*)(uint64_t))sub_2417A4C50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_2417A5150();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714ED98);
  }
}

void sub_2417A4C50()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_25714EDA8)
  {
    sub_2417A4CF4(255);
    sub_2417A4F10();
    sub_24172570C(255, &qword_25714EDE8, (uint64_t (*)(uint64_t))sub_2417A4F8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_25714EDA8);
  }
}

void sub_2417A4CF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t);
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_25714EDB0)
  {
    sub_2417A4E18(255);
    v3 = v2;
    v4 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEB018];
    sub_24172835C(255, &qword_25714EDC0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDEB018]);
    sub_2418A8DCC();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF760];
    v8[2] = sub_2417A50FC((unint64_t *)&qword_25714EDC8, &qword_25714EDC0, v4, MEMORY[0x24BDEB028]);
    v8[3] = sub_24172159C(&qword_25714EDD0, v5, MEMORY[0x24BDEF750]);
    v8[0] = v3;
    v8[1] = swift_getOpaqueTypeConformance2();
    v6 = MEMORY[0x24269D434](a1, v8, MEMORY[0x24BDF2528], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_25714EDB0);
  }
}

void sub_2417A4E18(uint64_t a1)
{
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_25714EDB8)
  {
    v2 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEB018];
    sub_24172835C(255, &qword_25714EDC0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDEB018]);
    v4 = v3;
    v5 = sub_2418A8DCC();
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF760];
    v9[0] = v4;
    v9[1] = v5;
    v9[2] = sub_2417A50FC((unint64_t *)&qword_25714EDC8, &qword_25714EDC0, v2, MEMORY[0x24BDEB028]);
    v9[3] = sub_24172159C(&qword_25714EDD0, v6, MEMORY[0x24BDEF750]);
    v7 = MEMORY[0x24269D434](a1, v9, MEMORY[0x24BDF27D8], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_25714EDB8);
  }
}

void sub_2417A4F10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714EDD8)
  {
    sub_24172835C(255, &qword_25714EDE0, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF46B0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714EDD8);
  }
}

void sub_2417A4F8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714EDF0)
  {
    sub_2417A4FF0(255);
    sub_2418A909C();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714EDF0);
  }
}

void sub_2417A4FF0(uint64_t a1)
{
  uint64_t (*v2)(void);
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_25714EDF8)
  {
    v2 = MEMORY[0x24BDF4398];
    sub_24172835C(255, (unint64_t *)&qword_25714C580, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF4398]);
    v6[0] = v3;
    v6[1] = type metadata accessor for RemoveReminderButton(255);
    v6[2] = sub_2417A50FC((unint64_t *)&qword_25714C590, (unint64_t *)&qword_25714C580, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v2, MEMORY[0x24BDF43B0]);
    v6[3] = sub_24172159C(&qword_25714EE00, type metadata accessor for RemoveReminderButton, (uint64_t)&unk_2418D5048);
    v4 = MEMORY[0x24269D434](a1, v6, MEMORY[0x24BDF22E0], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25714EDF8);
  }
}

uint64_t type metadata accessor for RemoveReminderButton(uint64_t a1)
{
  return sub_24179D1E0(a1, qword_25714EEA8);
}

uint64_t sub_2417A50FC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_24172835C(255, a2, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], a3);
    result = MEMORY[0x24269D47C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2417A5150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714EE08;
  if (!qword_25714EE08)
  {
    sub_24172570C(255, &qword_25714EDA0, (uint64_t (*)(uint64_t))sub_2417A4C50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_25714EE08);
  }
  return result;
}

void sub_2417A51B0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714EE18)
  {
    sub_241731234();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714EE18);
  }
}

unint64_t sub_2417A5210()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714EE28;
  if (!qword_25714EE28)
  {
    sub_24172570C(255, &qword_25714EE10, (uint64_t (*)(uint64_t))sub_2417A51B0, MEMORY[0x24BDEF158]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDEF170], v1);
    atomic_store(result, (unint64_t *)&qword_25714EE28);
  }
  return result;
}

void sub_2417A5270()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714EE30)
  {
    sub_24172570C(255, &qword_25714EDA0, (uint64_t (*)(uint64_t))sub_2417A4C50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714EE30);
  }
}

uint64_t sub_2417A52EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417A39FC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2417A52F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  id v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v59 = a1;
  v1 = sub_2418A84E4();
  v56 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v53 - v7;
  v9 = sub_2418A8F10();
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417A6104(0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417A6120(0);
  v18 = v17;
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417A613C(0);
  v58 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417A6160(0, &qword_25714EF08, v26, (unint64_t *)&qword_25714C1F0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
  v57 = v27;
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v53 - v29;
  sub_2418A8F1C();
  v31 = sub_2418A996C();
  v33 = sub_24185E3D4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v31, v32);
  (*(void (**)(char *, uint64_t, double))(v54 + 8))(v12, v55, v33);
  v34 = sub_2418A90D8();
  sub_2418A84A8();
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  sub_2417289A8((uint64_t)v16, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_2417A6104);
  v43 = &v21[*(int *)(v18 + 36)];
  *v43 = v34;
  *((_QWORD *)v43 + 1) = v36;
  *((_QWORD *)v43 + 2) = v38;
  *((_QWORD *)v43 + 3) = v40;
  *((_QWORD *)v43 + 4) = v42;
  v43[40] = 0;
  sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))sub_2417A6104);
  sub_241861034((uint64_t)v8);
  v44 = v56;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v5, *MEMORY[0x24BDEB3F0], v1);
  LOBYTE(v18) = sub_2418A84D8();
  v45 = *(void (**)(char *, uint64_t))(v44 + 8);
  v45(v5, v1);
  v45(v8, v1);
  v46 = objc_msgSend((id)objc_opt_self(), sel_systemGray5Color);
  v47 = MEMORY[0x24269BE5C](v46);
  if ((v18 & 1) == 0)
  {
    v48 = sub_2418A9624();
    swift_release();
    v47 = v48;
  }
  v49 = sub_2418A90D8();
  sub_2417289A8((uint64_t)v21, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_2417A6120);
  v50 = &v25[*(int *)(v58 + 36)];
  *(_QWORD *)v50 = v47;
  v50[8] = v49;
  sub_24172588C((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2417A6120);
  v51 = sub_2418A95D0();
  sub_2417289A8((uint64_t)v25, (uint64_t)v30, (uint64_t (*)(_QWORD))sub_2417A613C);
  *(_QWORD *)&v30[*(int *)(v57 + 36)] = v51;
  sub_24172588C((uint64_t)v25, (uint64_t (*)(_QWORD))sub_2417A613C);
  return sub_2417A61EC((uint64_t)v30, v59);
}

uint64_t sub_2417A56C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417A3BC8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2417A56CC()
{
  uint64_t v0;

  return sub_2417A3F08(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2417A56D8()
{
  return sub_2417A5750(sub_2417A42E8);
}

uint64_t sub_2417A56E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417A5744()
{
  return sub_2417A5750((uint64_t (*)(uint64_t))sub_2417A3E90);
}

uint64_t sub_2417A5750(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CustomReminderView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for CustomReminderView(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);

  v4 = v3 + v1[5];
  v5 = v4 + *(int *)(type metadata accessor for CustomReminderModel() + 32);
  v6 = sub_2418A7EC0();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_24172570C(0, qword_25714CE78, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  swift_release();
  v9 = v3 + v1[6];
  v10 = sub_2418A8100();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  sub_24172570C(0, qword_25714ECD8, v11, v8);
  swift_release();
  swift_release();
  swift_release();
  v12 = v3 + v1[8];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2418A84E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2417A594C()
{
  return sub_2417A5750(sub_2417A3728);
}

uint64_t sub_2417A5960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_25714EDE8, (uint64_t (*)(uint64_t))sub_2417A4F8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_2417A59BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A84E4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2417A5A98(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_2417A5B10(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2417A5BC0(_QWORD *a1, _QWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  if (a1 != a2)
  {
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v4, v5);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_2417A5CA0(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v5 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A84E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  return a1;
}

void *sub_2417A5D4C(void *a1, const void *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v4, v5);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A84E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417A5E28()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417A5E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2417A5E88()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417A5E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_2417A5EEC()
{
  unint64_t v0;

  sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2417A5F6C()
{
  return sub_24172159C(&qword_25714EEE0, (uint64_t (*)(uint64_t))sub_2417A5F98, MEMORY[0x24BDED358]);
}

void sub_2417A5F98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714EEE8)
  {
    sub_2418A8754();
    sub_2417A48DC(255);
    sub_2417A4A08(255);
    sub_2417A4B10(255);
    sub_2417A4BD8();
    sub_24172570C(255, &qword_25714EE10, (uint64_t (*)(uint64_t))sub_2417A51B0, MEMORY[0x24BDEF158]);
    sub_24172159C(&qword_25714EE20, (uint64_t (*)(uint64_t))sub_2417A4BD8, MEMORY[0x24BDF4700]);
    sub_2417A5210();
    swift_getOpaqueTypeConformance2();
    sub_241721040();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    v0 = sub_2418A8820();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714EEE8);
  }
}

uint64_t sub_2417A60F4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2417A6104(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714EEF0, (void (*)(uint64_t))MEMORY[0x24BDF0440]);
}

void sub_2417A6120(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714EEF8, sub_2417A6104);
}

void sub_2417A613C(uint64_t a1)
{
  sub_2417A6160(a1, &qword_25714EF00, sub_2417A6120, &qword_25714DF38, MEMORY[0x24BDF06B8]);
}

void sub_2417A6160(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    sub_24172835C(255, a4, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], a5);
    v8 = sub_2418A87FC();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_2417A61EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2417A6160(0, &qword_25714EF08, sub_2417A613C, (unint64_t *)&qword_25714C1F0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2417A6254()
{
  unint64_t result;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25714EF10;
  if (!qword_25714EF10)
  {
    v1 = MEMORY[0x24BDF06F8];
    sub_2417A6160(255, &qword_25714EF08, sub_2417A613C, (unint64_t *)&qword_25714C1F0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDF06F8]);
    v3 = v2;
    v4[0] = sub_2417A6304();
    v4[1] = sub_2417A6474((unint64_t *)&qword_25714C220, (unint64_t *)&qword_25714C1F0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v1, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v3, v4);
    atomic_store(result, (unint64_t *)&qword_25714EF10);
  }
  return result;
}

unint64_t sub_2417A6304()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714EF18;
  if (!qword_25714EF18)
  {
    sub_2417A613C(255);
    v2 = v1;
    v3[0] = sub_2417A638C();
    v3[1] = sub_2417A6474((unint64_t *)&qword_25714DF48, &qword_25714DF38, MEMORY[0x24BDF06B8], MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714EF18);
  }
  return result;
}

unint64_t sub_2417A638C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714EF20;
  if (!qword_25714EF20)
  {
    sub_2417A6120(255);
    v2 = v1;
    v3[0] = sub_2417A63F4();
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714EF20);
  }
  return result;
}

unint64_t sub_2417A63F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714EF28;
  if (!qword_25714EF28)
  {
    sub_2417A6104(255);
    v2 = v1;
    v3[0] = sub_24172159C(qword_25714EF30, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0440], MEMORY[0x24BDF0438]);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714EF28);
  }
  return result;
}

uint64_t sub_2417A6474(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_24172835C(255, a2, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], a3);
    result = MEMORY[0x24269D47C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2417A64C8(char a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  if (*(_BYTE *)(v1 + 16) == 1 && (a1 & 1) == 0)
  {
    if (qword_25714B958 == -1)
      goto LABEL_6;
    goto LABEL_7;
  }
  if (qword_25714B958 != -1)
LABEL_7:
    swift_once();
LABEL_6:
  v2 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v3 = sub_2418A7EFC();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_2417A6608@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(unint64_t, _QWORD, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v68 = a1;
  v64 = type metadata accessor for CustomReminderModel();
  v2 = MEMORY[0x24BDAC7A8](v64, v1);
  v72 = (uint64_t)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2, v4);
  v65 = (uint64_t *)((char *)&v62 - v5);
  v6 = sub_2418A8340();
  v66 = *(_QWORD *)(v6 - 8);
  v67 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v75 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9, v10);
  v71 = (char *)&v62 - v11;
  v12 = sub_2418A7EC0();
  v73 = *(_QWORD *)(v12 - 8);
  v74 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v76 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2418A8238();
  v16 = *(_QWORD *)(v15 - 8);
  v69 = v15;
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2418A8100();
  v77 = *(_QWORD *)(v20 - 8);
  v21 = v77;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v62 - v27;
  sub_2418A8208();
  sub_2418A80D0();
  sub_2418A816C();
  v63 = *(void (**)(char *, uint64_t))(v21 + 8);
  v63(v25, v20);
  v29 = *(void (**)(char *, uint64_t))(v16 + 8);
  v29(v19, v15);
  sub_2418A8208();
  sub_24172570C(0, &qword_25714EE38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v30 = sub_2418A8220();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v31 + 72);
  v33 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_2418D5080;
  v35 = v34 + v33;
  v36 = *(void (**)(unint64_t, _QWORD, uint64_t))(v31 + 104);
  v36(v35, *MEMORY[0x24BDCF228], v30);
  v36(v35 + v32, *MEMORY[0x24BDCF240], v30);
  v36(v35 + 2 * v32, *MEMORY[0x24BDCF250], v30);
  v37 = 3 * v32;
  v38 = v70;
  v39 = (char *)v20;
  v36(v35 + v37, *MEMORY[0x24BDCF220], v30);
  sub_24182A8D8(v34);
  swift_setDeallocating();
  swift_arrayDestroy();
  v40 = v28;
  swift_deallocClassInstance();
  v41 = v76;
  sub_2418A8190();
  v42 = v41;
  swift_bridgeObjectRelease();
  v43 = v69;
  v29(v19, v69);
  sub_2418A7E84();
  sub_2418A7E9C();
  sub_2418A8208();
  v44 = v71;
  sub_2418A81E4();
  v45 = (uint64_t)v44;
  v46 = v77;
  v29(v19, v43);
  if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v46 + 48))(v45, 1, v39) == 1)
  {
    v47 = v64;
    sub_2417A7664(v45, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_2418A8328();
    v48 = v65;
    sub_2417A76A8(v38, (uint64_t)v65);
    sub_2417A76A8(v38, v72);
    v49 = sub_2418A8334();
    v50 = sub_2418AA044();
    v51 = os_log_type_enabled(v49, v50);
    v52 = v68;
    if (v51)
    {
      v53 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v78 = v47;
      v79 = v54;
      *(_DWORD *)v53 = 136446722;
      v70 = (uint64_t)v40;
      sub_2417A7728();
      v71 = v39;
      v55 = sub_2418A9DF8();
      v78 = sub_24176024C(v55, v56, &v79);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2048;
      v57 = (uint64_t)v48;
      v58 = *v48;
      sub_2417A76EC(v57);
      v78 = v58;
      sub_2418AA1F4();
      *(_WORD *)(v53 + 22) = 2048;
      v59 = *(_QWORD *)(v72 + 8);
      sub_2417A76EC(v72);
      v78 = v59;
      v39 = v71;
      sub_2418AA1F4();
      _os_log_impl(&dword_24171C000, v49, v50, "[%{public}s] Could not construct date with time components: %ld:%ld", (uint8_t *)v53, 0x20u);
      swift_arrayDestroy();
      v60 = v54;
      v46 = v77;
      MEMORY[0x24269D548](v60, -1, -1);
      MEMORY[0x24269D548](v53, -1, -1);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v75, v67);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v74);
      v45 = v70;
    }
    else
    {
      sub_2417A76EC(v72);
      sub_2417A76EC((uint64_t)v48);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v75, v67);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v42, v74);
      v45 = (uint64_t)v40;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v73 + 8))(v42, v74);
    v63(v40, (uint64_t)v39);
    v52 = v68;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v46 + 32))(v52, v45, v39);
}

uint64_t sub_2417A6C50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint32_t *p_align;
  id v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v37;

  sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v37 - v10;
  v12 = sub_2418A7EC0();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v37 - v19;
  p_align = &stru_2511B9FE8.align;
  if (a1)
  {
    v22 = objc_msgSend(a1, sel_dateComponents);
    sub_2418A7E6C();

    v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v23(v11, v17, v12);
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v24(v11, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      v23(v20, v11, v12);
      v27 = sub_2418A7E78();
      if ((v28 & 1) != 0)
        v29 = 0;
      else
        v29 = v27;
      *(_QWORD *)a2 = v29;
      v30 = sub_2418A7E90();
      v32 = v31;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
      if ((v32 & 1) != 0)
        v33 = 0;
      else
        v33 = v30;
      *(_QWORD *)(a2 + 8) = v33;
      *(_BYTE *)(a2 + 17) = 0;
      p_align = &stru_2511B9FE8.align;
      goto LABEL_14;
    }
    p_align = (_DWORD *)(&stru_2511B9FE8 + 24);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v24(v11, 1, 1, v12);
  }
  sub_2417A7664((uint64_t)v11, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 17) = 1;
  if (a1)
  {
LABEL_14:
    *(_BYTE *)(a2 + 16) = objc_msgSend(a1, sel_isEnabled);
    v34 = objc_msgSend(a1, *((SEL *)p_align + 455));
    sub_2418A7E6C();

    v25 = v8;
    v26 = 0;
    goto LABEL_15;
  }
  *(_BYTE *)(a2 + 16) = 1;
  v25 = v8;
  v26 = 1;
LABEL_15:
  v24(v25, v26, 1, v12);
  v35 = type metadata accessor for CustomReminderModel();
  return sub_2417A56E4((uint64_t)v8, a2 + *(int *)(v35 + 32));
}

uint64_t type metadata accessor for CustomReminderModel()
{
  uint64_t result;

  result = qword_25714EF90;
  if (!qword_25714EF90)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_2417A6F14(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v5 = *(int *)(a3 + 32);
    v6 = (void *)(a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = sub_2418A7EC0();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_2417A7018(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = sub_2418A7EC0();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

uint64_t sub_2417A7084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_2418A7EC0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_2417A715C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (void *)(a2 + v4);
  v7 = sub_2418A7EC0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_2417A7290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_2418A7EC0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_2417A7368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (void *)(a2 + v4);
  v7 = sub_2418A7EC0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_2417A7494()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417A74A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v10);
  }
}

uint64_t sub_2417A7534()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417A7540(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = a2 + 1;
  }
  else
  {
    sub_24172570C(0, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_2417A75C8()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714CE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2417A7664(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_24172570C(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2417A76A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CustomReminderModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417A76EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CustomReminderModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2417A7728()
{
  unint64_t result;

  result = qword_25714EFD8;
  if (!qword_25714EFD8)
  {
    type metadata accessor for CustomReminderModel();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25714EFD8);
  }
  return result;
}

uint64_t sub_2417A7760()
{
  sub_2418A8A24();
  type metadata accessor for ValenceSelectionPhaseSpecs();
  return sub_2418A89A0();
}

uint64_t type metadata accessor for ValenceSelectionPhaseSpecs()
{
  uint64_t result;

  result = qword_25714F038;
  if (!qword_25714F038)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_2417A77D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2418A8EB0();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_2417790D8();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_2417A78D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_2418A8EB0();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

char *sub_2417A7954(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_2417A7A2C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *sub_2417A7B50(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_2417A7C28(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = sub_2418A8EB0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2417790D8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2418A87B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_2417A7D4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417A7D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  sub_2417790D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_2418A87B4();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2417A7DCC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417A7DD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_2417790D8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_2418A87B4();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2417A7E54()
{
  unint64_t v0;
  unint64_t v1;

  sub_2417790D8();
  if (v0 <= 0x3F)
  {
    sub_2418A87B4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

id sub_2417A7ED8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id result;
  void *v10;
  int homeButtonType;
  unsigned int *v12;
  int v13;
  unsigned int *v14;
  uint64_t v15;

  v4 = sub_2418A87B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (id)MobileGestalt_get_current_device();
  v10 = result;
  if ((a1 & 1) != 0)
  {
    if (result)
    {
      homeButtonType = MobileGestalt_get_homeButtonType();

      if (homeButtonType == 2)
        v12 = (unsigned int *)MEMORY[0x24BDECEA0];
      else
        v12 = (unsigned int *)MEMORY[0x24BDECF38];
      return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(a2, *v12, v4);
    }
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if (!result)
    goto LABEL_12;
  v13 = MobileGestalt_get_homeButtonType();

  v14 = (unsigned int *)MEMORY[0x24BDECEC0];
  if (v13 != 2)
    v14 = (unsigned int *)MEMORY[0x24BDECEA0];
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *v14, v4);
  return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, v4);
}

id sub_2417A800C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  char *v7;
  void *v8;
  int homeButtonType;
  uint64_t v10;

  v3 = type metadata accessor for ValenceSelectionPhaseSpecs();
  result = (id)MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      v8 = result;
      homeButtonType = MobileGestalt_get_homeButtonType();

      sub_2417289A8(v1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
      if (homeButtonType == 2)
      {
        sub_2418A879C();
        return (id)sub_2417A8244((uint64_t)v7);
      }
      else
      {
        return (id)sub_2417A8244((uint64_t)v7);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_2417A80FC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  char *v7;
  void *v8;
  int homeButtonType;
  uint64_t v10;

  v3 = type metadata accessor for ValenceSelectionPhaseSpecs();
  result = (id)MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      v8 = result;
      homeButtonType = MobileGestalt_get_homeButtonType();

      sub_2417289A8(v1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
      if (homeButtonType == 2)
      {
        sub_2418A879C();
        return (id)sub_2417A8244((uint64_t)v7);
      }
      else
      {
        return (id)sub_2417A8244((uint64_t)v7);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2417A81E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2417289A8(v1, a1, (uint64_t (*)(_QWORD))sub_2417790D8);
}

uint64_t sub_2417A8204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2417A8244(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ValenceSelectionPhaseSpecs();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417A8280(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_24183D5AC(0, v1, 0);
    v2 = v13;
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      v5 = (id)HKUILocalizedStringForStateOfMindLabel();
      v6 = sub_2418A9DE0();
      v8 = v7;

      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      if (v10 >= v9 >> 1)
        sub_24183D5AC(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

BOOL sub_2417A836C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  double v37;
  double v38;
  BOOL v40;
  _BOOL8 result;
  uint64_t v42;

  v4 = (int *)_s5EntryVMa();
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v12 = (char *)&v42 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13 == *(_QWORD *)(a2 + 16))
  {
    if (!v13 || a1 == a2)
      return 1;
    v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v15 = *(_QWORD *)(v10 + 72);
    v16 = v13 - 1;
    while (1)
    {
      sub_2417289A8(a1 + v14, (uint64_t)v12, (uint64_t (*)(_QWORD))_s5EntryVMa);
      sub_2417289A8(a2 + v14, (uint64_t)v8, (uint64_t (*)(_QWORD))_s5EntryVMa);
      if ((sub_2418A8118() & 1) == 0)
        break;
      v17 = v4[5];
      v18 = *(_QWORD *)&v12[v17];
      v19 = *(_QWORD *)&v12[v17 + 8];
      v20 = &v8[v17];
      v21 = v18 == *(_QWORD *)v20 && v19 == *((_QWORD *)v20 + 1);
      if (!v21 && (sub_2418AA4DC() & 1) == 0)
        break;
      v22 = v4[6];
      v23 = *(_QWORD *)&v12[v22];
      v24 = *(_QWORD *)&v12[v22 + 8];
      v25 = &v8[v22];
      v26 = v23 == *(_QWORD *)v25 && v24 == *((_QWORD *)v25 + 1);
      if (!v26 && (sub_2418AA4DC() & 1) == 0)
        break;
      v27 = v4[7];
      v28 = *(_QWORD *)&v12[v27];
      v29 = *(_QWORD *)&v12[v27 + 8];
      v30 = &v8[v27];
      v31 = v28 == *(_QWORD *)v30 && v29 == *((_QWORD *)v30 + 1);
      if (!v31 && (sub_2418AA4DC() & 1) == 0)
        break;
      v32 = v4[8];
      v33 = *(_QWORD *)&v12[v32];
      v34 = *(_QWORD *)&v12[v32 + 8];
      v35 = &v8[v32];
      if ((v33 != *(_QWORD *)v35 || v34 != *((_QWORD *)v35 + 1)) && (sub_2418AA4DC() & 1) == 0)
        break;
      v36 = v4[9];
      v37 = *(double *)&v12[v36];
      v38 = *(double *)&v8[v36];
      sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))_s5EntryVMa);
      sub_24172588C((uint64_t)v12, (uint64_t (*)(_QWORD))_s5EntryVMa);
      v40 = v16-- != 0;
      result = v37 == v38;
      if (v37 == v38)
      {
        v14 += v15;
        if (v40)
          continue;
      }
      return result;
    }
    sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))_s5EntryVMa);
    sub_24172588C((uint64_t)v12, (uint64_t (*)(_QWORD))_s5EntryVMa);
  }
  return 0;
}

uint64_t sub_2417A8598(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_2418AA4DC(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_2418AA4DC() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t StateOfMindTimeline.DaySummary.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = _s5EntryVMa();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417AAA24();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2418AA578();
  v13 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  sub_2418A9CFC();
  sub_24172159C(&qword_257152680, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A0]);
  sub_2418A9D44();
  swift_bridgeObjectRetain();
  sub_2418A9E1C();
  swift_bridgeObjectRelease();
  sub_2417289A8(v1 + v13[7], (uint64_t)v12, (uint64_t (*)(_QWORD))sub_2417AAA24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    sub_2418AA584();
  }
  else
  {
    sub_241731B4C((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))_s5EntryVMa);
    sub_2418AA584();
    sub_241852A14();
    sub_24172588C((uint64_t)v8, (uint64_t (*)(_QWORD))_s5EntryVMa);
  }
  v14 = *(_QWORD *)(v1 + v13[8]);
  swift_bridgeObjectRetain();
  sub_2417AA490(a1, v14);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v2 + v13[9]);
  result = sub_2418AA578();
  v17 = *(_QWORD *)(v15 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    v18 = v15 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2418A9E1C();
      swift_bridgeObjectRelease();
      v18 += 16;
      --v17;
    }
    while (v17);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t StateOfMindTimeline.DaySummary.hashValue.getter()
{
  _BYTE v1[72];

  sub_2418AA56C();
  StateOfMindTimeline.DaySummary.hash(into:)((uint64_t)v1);
  return sub_2418AA59C();
}

uint64_t sub_2417A88D8()
{
  _BYTE v1[72];

  sub_2418AA56C();
  StateOfMindTimeline.DaySummary.hash(into:)((uint64_t)v1);
  return sub_2418AA59C();
}

uint64_t sub_2417A8918()
{
  _BYTE v1[72];

  sub_2418AA56C();
  StateOfMindTimeline.DaySummary.hash(into:)((uint64_t)v1);
  return sub_2418AA59C();
}

uint64_t StateOfMindTimeline.DaySummary.id.getter()
{
  type metadata accessor for StateOfMindTimeline.DaySummary();
  return sub_2418A9CCC();
}

uint64_t sub_2417A897C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2418A9CCC();
  *a1 = result;
  return result;
}

uint64_t sub_2417A89A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void);
  void (*v48)(char *, uint64_t, uint64_t);
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  unint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t result;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  int *v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162[2];
  uint64_t v163;

  v131 = a6;
  v129 = a3;
  v128 = a1;
  v11 = sub_2418A8034();
  v153 = *(_QWORD *)(v11 - 8);
  v154 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v152 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2418A7FF8();
  v150 = *(_QWORD *)(v14 - 8);
  v151 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v149 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_2418A8004();
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148, v17);
  v146 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_2418A807C();
  v144 = *(_QWORD *)(v145 - 8);
  v20 = MEMORY[0x24BDAC7A8](v145, v19);
  v143 = (char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v142 = (char *)&v118 - v24;
  MEMORY[0x24BDAC7A8](v23, v25);
  v141 = (char *)&v118 - v26;
  v140 = sub_2418A8100();
  v139 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140, v27);
  v138 = (char *)&v118 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = _s5EntryVMa();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v31);
  v155 = (char *)&v118 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417AAA24();
  MEMORY[0x24BDAC7A8](v33, v34);
  v36 = (char *)&v118 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_2418A9CFC();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v39);
  v41 = (char *)&v118 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for StateOfMindTimeline.DaySummary();
  v44 = MEMORY[0x24BDAC7A8](v42, v43);
  v124 = (uint64_t *)((char *)&v118 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  v125 = (int *)v44;
  v46 = a7 + *(int *)(v44 + 28);
  v137 = v30;
  v47 = *(void (**)(void))(v30 + 56);
  v121 = v46;
  v47();
  v122 = v38;
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  v120 = v41;
  v127 = a2;
  v123 = v37;
  v48(v41, a2, v37);
  v130 = a4;
  v126 = a5;
  if (!a5)
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v47)(v36, 1, 1, v29);
    v52 = MEMORY[0x24BEE4AF8];
LABEL_35:
    v103 = v127;
    v162[0] = sub_2418A9CCC();
    v104 = sub_2418AA4AC();
    v106 = v105;
    swift_bridgeObjectRetain();
    v107 = v131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v107 = sub_241802714(0, v107[2] + 1, 1, v107);
    v109 = v107[2];
    v108 = v107[3];
    if (v109 >= v108 >> 1)
      v107 = sub_241802714((_QWORD *)(v108 > 1), v109 + 1, 1, v107);
    v107[2] = v109 + 1;
    v110 = &v107[2 * v109];
    v110[4] = v104;
    v110[5] = v106;
    swift_bridgeObjectRelease();

    v111 = v122;
    v112 = v123;
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v103, v123);
    v113 = (uint64_t)v124;
    *v124 = v128;
    v114 = v125;
    (*(void (**)(uint64_t, char *, uint64_t))(v111 + 32))(v113 + v125[5], v120, v112);
    v115 = (_QWORD *)(v113 + v114[6]);
    v116 = v130;
    *v115 = v129;
    v115[1] = v116;
    sub_241731B4C((uint64_t)v36, v113 + v114[7], (uint64_t (*)(_QWORD))sub_2417AAA24);
    *(_QWORD *)(v113 + v114[8]) = v52;
    *(_QWORD *)(v113 + v114[9]) = v107;
    sub_24172588C(v121, (uint64_t (*)(_QWORD))sub_2417AAA24);
    return sub_241731B4C(v113, a7, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindTimeline.DaySummary);
  }
  v119 = v36;
  v49 = objc_msgSend(a5, sel_dailyStateOfMind);
  if (v49)
  {
    v50 = v49;
    v51 = (uint64_t)v119;
    sub_241852844(v50, (uint64_t)v119);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v47)(v51, 0, 1, v29);

  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v47)(v119, 1, 1, v29);
  }
  v53 = objc_msgSend(a5, sel_momentaryStatesOfMind);
  sub_2417AB850();
  v54 = sub_2418A9EB8();

  if (v54 < 0 || (v54 & 0x4000000000000000) != 0)
  {
    v102 = swift_bridgeObjectRetain();
    v55 = (uint64_t)sub_241760D28(v102);
    swift_bridgeObjectRelease();
  }
  else
  {
    v55 = v54 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v162[0] = v55;
  v56 = 0;
  sub_2417A950C(v162);
  swift_bridgeObjectRelease();
  v57 = v162[0];
  if (v162[0] < 0 || (v162[0] & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v58 = sub_2418AA398();
    swift_release();
    if (v58)
      goto LABEL_12;
    goto LABEL_33;
  }
  v58 = *(_QWORD *)(v162[0] + 16);
  if (!v58)
  {
LABEL_33:
    swift_release();
    v52 = MEMORY[0x24BEE4AF8];
LABEL_34:
    v36 = v119;
    goto LABEL_35;
  }
LABEL_12:
  v163 = MEMORY[0x24BEE4AF8];
  sub_24183D61C(0, v58 & ~(v58 >> 63), 0);
  if ((v58 & 0x8000000000000000) == 0)
  {
    v118 = a7;
    v59 = 0;
    v133 = v57 & 0xC000000000000001;
    v132 = 0x80000002418DD150;
    v135 = (int *)v29;
    v134 = v57;
    v136 = v58;
    while (1)
    {
      if (v133)
        v60 = (id)MEMORY[0x24269CAD4](v59, v57);
      else
        v60 = *(id *)(v57 + 8 * v59 + 32);
      v61 = v60;
      v62 = objc_msgSend(v60, sel_UUID, v118);
      sub_2418A8124();

      v63 = objc_msgSend(v61, sel_reflectiveInterval);
      if (v63 == (id)2)
      {
        objc_msgSend(v61, sel_valenceClassification);
        objc_msgSend(v61, sel_reflectiveInterval);
        v64 = (void *)HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
      }
      else
      {
        if (v63 != (id)1)
        {
          v159 = 0xE000000000000000;
          v160 = 0;
          goto LABEL_23;
        }
        objc_msgSend(v61, sel_valenceClassification);
        v64 = (void *)HKUILocalizedStringForValenceClassification();
      }
      v65 = v64;
      v66 = sub_2418A9DE0();
      v159 = v67;
      v160 = v66;

LABEL_23:
      v68 = sub_2418AA014();
      v69 = sub_2417A8280(v68);
      v161 = v56;
      swift_bridgeObjectRelease();
      v162[0] = v69;
      if (qword_25714B958 != -1)
        swift_once();
      v70 = (id)qword_25715E110;
      swift_bridgeObjectRetain();
      sub_2418A7EFC();
      swift_bridgeObjectRelease();

      sub_241773FD4();
      sub_24172159C((unint64_t *)&qword_2543915D8, (uint64_t (*)(uint64_t))sub_241773FD4, MEMORY[0x24BEE12B0]);
      v71 = sub_2418A9D50();
      v157 = v72;
      v158 = v71;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v73 = sub_241852D78();
      v156 = v74;
      v75 = objc_msgSend(v61, sel_startDate);
      v76 = v138;
      sub_2418A80C4();

      v77 = v143;
      MEMORY[0x24269A530]();
      v78 = v149;
      sub_2418A7FEC();
      v79 = v146;
      sub_2418A7FE0();
      (*(void (**)(char *, uint64_t))(v150 + 8))(v78, v151);
      v80 = v142;
      sub_2418A7FB0();
      (*(void (**)(char *, uint64_t))(v147 + 8))(v79, v148);
      v81 = *(void (**)(char *, uint64_t))(v144 + 8);
      v82 = v77;
      v83 = v145;
      v81(v82, v145);
      v84 = v152;
      sub_2418A8028();
      v85 = v141;
      sub_2418A8064();
      (*(void (**)(char *, uint64_t))(v153 + 8))(v84, v154);
      v81(v80, v83);
      sub_24172159C(&qword_25714F118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
      sub_2418A80E8();
      v81(v85, v83);
      (*(void (**)(char *, uint64_t))(v139 + 8))(v76, v140);
      v86 = v162[0];
      v87 = v162[1];
      objc_msgSend(v61, sel_valence);
      v89 = v88;

      v90 = v135;
      v91 = (uint64_t)v155;
      v92 = &v155[v135[5]];
      v93 = v159;
      *(_QWORD *)v92 = v160;
      *((_QWORD *)v92 + 1) = v93;
      v94 = (uint64_t *)(v91 + v90[6]);
      v95 = v157;
      *v94 = v158;
      v94[1] = v95;
      v96 = (uint64_t *)(v91 + v90[7]);
      v97 = v156;
      *v96 = v73;
      v96[1] = v97;
      v98 = (uint64_t *)(v91 + v90[8]);
      *v98 = v86;
      v98[1] = v87;
      *(_QWORD *)(v91 + v90[9]) = v89;
      v52 = v163;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24183D61C(0, *(_QWORD *)(v52 + 16) + 1, 1);
        v52 = v163;
      }
      v99 = v136;
      v101 = *(_QWORD *)(v52 + 16);
      v100 = *(_QWORD *)(v52 + 24);
      if (v101 >= v100 >> 1)
      {
        sub_24183D61C(v100 > 1, v101 + 1, 1);
        v52 = v163;
      }
      ++v59;
      *(_QWORD *)(v52 + 16) = v101 + 1;
      sub_241731B4C(v91, v52+ ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80))+ *(_QWORD *)(v137 + 72) * v101, (uint64_t (*)(_QWORD))_s5EntryVMa);
      v56 = v161;
      v57 = v134;
      if (v99 == v59)
      {
        swift_release();
        a7 = v118;
        goto LABEL_34;
      }
    }
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2417A950C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_241890438();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2417A9584(v6);
  return sub_2418AA32C();
}

void sub_2417A9584(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  id *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  void *v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v133 = sub_2418A8100();
  v131 = *(_QWORD *)(v133 - 8);
  v3 = MEMORY[0x24BDAC7A8](v133, v2);
  v132 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v119 - v6;
  v8 = a1[1];
  v9 = sub_2418AA4A0();
  if (v9 >= v8)
  {
    if (v8 < 0)
      goto LABEL_134;
    if (v8)
      sub_2417A9E60(0, v8, 1, a1);
    return;
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_142;
  v124 = v9;
  v121 = a1;
  if (v8 < 2)
  {
    v13 = (char *)MEMORY[0x24BEE4AF8];
    v135 = MEMORY[0x24BEE4AF8];
    v129 = (id *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v8 != 1)
    {
      v17 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_101:
      v111 = v130;
      if (v17 >= 2)
      {
        v112 = *v121;
        do
        {
          v113 = v17 - 2;
          if (v17 < 2)
            goto LABEL_129;
          if (!v112)
            goto LABEL_141;
          v114 = v13;
          v115 = *(_QWORD *)&v13[16 * v113 + 32];
          v116 = *(_QWORD *)&v13[16 * v17 + 24];
          sub_2417AA028((void **)(v112 + 8 * v115), (id *)(v112 + 8 * *(_QWORD *)&v13[16 * v17 + 16]), (id *)(v112 + 8 * v116), v129);
          if (v111)
            break;
          if (v116 < v115)
            goto LABEL_130;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v114 = sub_24188E1A4((uint64_t)v114);
          if (v113 >= *((_QWORD *)v114 + 2))
            goto LABEL_131;
          v117 = &v114[16 * v113 + 32];
          *(_QWORD *)v117 = v115;
          *((_QWORD *)v117 + 1) = v116;
          v118 = *((_QWORD *)v114 + 2);
          if (v17 > v118)
            goto LABEL_132;
          memmove(&v114[16 * v17 + 16], &v114[16 * v17 + 32], 16 * (v118 - v17));
          v13 = v114;
          *((_QWORD *)v114 + 2) = v118 - 1;
          v17 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v135 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_2418A9EC4();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v11 = v10 >> 1;
    sub_2417AB850();
    v12 = sub_2418A9EE8();
    *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) = v11;
    v129 = (id *)((v12 & 0xFFFFFFFFFFFFFF8) + 32);
    v135 = v12;
  }
  v14 = 0;
  v15 = *a1;
  v16 = *a1 + 16;
  v122 = *a1 - 8;
  v123 = v16;
  v13 = (char *)MEMORY[0x24BEE4AF8];
  v127 = v8;
  v134 = v15;
  while (1)
  {
    v18 = v14 + 1;
    v126 = v14;
    if (v14 + 1 < v8)
    {
      v19 = v13;
      v20 = *(void **)(v15 + 8 * v14);
      v21 = *(id *)(v15 + 8 * v18);
      v22 = v20;
      v23 = objc_msgSend(v21, sel_startDate);
      sub_2418A80C4();

      v24 = objc_msgSend(v22, sel_startDate);
      v25 = v132;
      sub_2418A80C4();

      LODWORD(v128) = sub_2418A80B8();
      v26 = *(void (**)(char *, uint64_t))(v131 + 8);
      v27 = v25;
      v28 = v133;
      v26(v27, v133);
      v26(v7, v28);

      v8 = v127;
      v18 = v14 + 2;
      if (v14 + 2 < v8)
      {
        v29 = (id *)(v123 + 8 * v14);
        while (1)
        {
          v30 = v18;
          v31 = *(v29 - 1);
          v32 = *v29;
          v33 = v31;
          v34 = objc_msgSend(v32, sel_startDate);
          sub_2418A80C4();

          v35 = objc_msgSend(v33, sel_startDate);
          v36 = v132;
          sub_2418A80C4();

          LODWORD(v35) = sub_2418A80B8();
          v37 = v36;
          v38 = v133;
          v26(v37, v133);
          v26(v7, v38);

          if (((v128 ^ v35) & 1) != 0)
            break;
          v18 = v30 + 1;
          ++v29;
          v8 = v127;
          if (v127 == v30 + 1)
          {
            v18 = v127;
            goto LABEL_22;
          }
        }
        v8 = v127;
        v18 = v30;
LABEL_22:
        v14 = v126;
      }
      v13 = v19;
      v15 = v134;
      if ((v128 & 1) != 0)
      {
        if (v18 < v14)
          goto LABEL_135;
        if (v14 < v18)
        {
          v39 = (uint64_t *)(v122 + 8 * v18);
          v40 = v18;
          v41 = v14;
          v42 = (uint64_t *)(v134 + 8 * v14);
          do
          {
            if (v41 != --v40)
            {
              if (!v15)
                goto LABEL_140;
              v43 = *v42;
              *v42 = *v39;
              *v39 = v43;
            }
            ++v41;
            --v39;
            ++v42;
          }
          while (v41 < v40);
        }
      }
    }
    if (v18 < v8)
    {
      if (__OFSUB__(v18, v14))
        goto LABEL_133;
      if (v18 - v14 < v124)
        break;
    }
LABEL_50:
    if (v18 < v14)
      goto LABEL_128;
    v58 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v13 = v58;
    else
      v13 = sub_24188E004(0, *((_QWORD *)v58 + 2) + 1, 1, v58);
    v60 = *((_QWORD *)v13 + 2);
    v59 = *((_QWORD *)v13 + 3);
    v17 = v60 + 1;
    v15 = v134;
    if (v60 >= v59 >> 1)
    {
      v110 = sub_24188E004((char *)(v59 > 1), v60 + 1, 1, v13);
      v15 = v134;
      v13 = v110;
    }
    *((_QWORD *)v13 + 2) = v17;
    v61 = v13 + 32;
    v62 = &v13[16 * v60 + 32];
    *(_QWORD *)v62 = v14;
    *((_QWORD *)v62 + 1) = v18;
    v128 = v18;
    if (v60)
    {
      while (1)
      {
        v63 = v17 - 1;
        if (v17 >= 4)
        {
          v68 = &v61[16 * v17];
          v69 = *((_QWORD *)v68 - 8);
          v70 = *((_QWORD *)v68 - 7);
          v74 = __OFSUB__(v70, v69);
          v71 = v70 - v69;
          if (v74)
            goto LABEL_117;
          v73 = *((_QWORD *)v68 - 6);
          v72 = *((_QWORD *)v68 - 5);
          v74 = __OFSUB__(v72, v73);
          v66 = v72 - v73;
          v67 = v74;
          if (v74)
            goto LABEL_118;
          v75 = v17 - 2;
          v76 = &v61[16 * v17 - 32];
          v78 = *(_QWORD *)v76;
          v77 = *((_QWORD *)v76 + 1);
          v74 = __OFSUB__(v77, v78);
          v79 = v77 - v78;
          if (v74)
            goto LABEL_120;
          v74 = __OFADD__(v66, v79);
          v80 = v66 + v79;
          if (v74)
            goto LABEL_123;
          if (v80 >= v71)
          {
            v98 = &v61[16 * v63];
            v100 = *(_QWORD *)v98;
            v99 = *((_QWORD *)v98 + 1);
            v74 = __OFSUB__(v99, v100);
            v101 = v99 - v100;
            if (v74)
              goto LABEL_127;
            v91 = v66 < v101;
            goto LABEL_87;
          }
        }
        else
        {
          if (v17 != 3)
          {
            v92 = *((_QWORD *)v13 + 4);
            v93 = *((_QWORD *)v13 + 5);
            v74 = __OFSUB__(v93, v92);
            v85 = v93 - v92;
            v86 = v74;
            goto LABEL_81;
          }
          v65 = *((_QWORD *)v13 + 4);
          v64 = *((_QWORD *)v13 + 5);
          v74 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          v67 = v74;
        }
        if ((v67 & 1) != 0)
          goto LABEL_119;
        v75 = v17 - 2;
        v81 = &v61[16 * v17 - 32];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v84 = __OFSUB__(v82, v83);
        v85 = v82 - v83;
        v86 = v84;
        if (v84)
          goto LABEL_122;
        v87 = &v61[16 * v63];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v74 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v74)
          goto LABEL_125;
        if (__OFADD__(v85, v90))
          goto LABEL_126;
        if (v85 + v90 >= v66)
        {
          v91 = v66 < v90;
LABEL_87:
          if (v91)
            v63 = v75;
          goto LABEL_89;
        }
LABEL_81:
        if ((v86 & 1) != 0)
          goto LABEL_121;
        v94 = &v61[16 * v63];
        v96 = *(_QWORD *)v94;
        v95 = *((_QWORD *)v94 + 1);
        v74 = __OFSUB__(v95, v96);
        v97 = v95 - v96;
        if (v74)
          goto LABEL_124;
        if (v97 < v85)
          goto LABEL_14;
LABEL_89:
        v102 = v63 - 1;
        if (v63 - 1 >= v17)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v15)
          goto LABEL_139;
        v103 = v13;
        v104 = &v61[16 * v102];
        v105 = *(_QWORD *)v104;
        v106 = &v61[16 * v63];
        v107 = *((_QWORD *)v106 + 1);
        v108 = v130;
        sub_2417AA028((void **)(v15 + 8 * *(_QWORD *)v104), (id *)(v15 + 8 * *(_QWORD *)v106), (id *)(v15 + 8 * v107), v129);
        v130 = v108;
        if (v108)
          goto LABEL_112;
        if (v107 < v105)
          goto LABEL_114;
        if (v63 > *((_QWORD *)v103 + 2))
          goto LABEL_115;
        *(_QWORD *)v104 = v105;
        *(_QWORD *)&v61[16 * v102 + 8] = v107;
        v109 = *((_QWORD *)v103 + 2);
        if (v63 >= v109)
          goto LABEL_116;
        v17 = v109 - 1;
        memmove(&v61[16 * v63], v106 + 16, 16 * (v109 - 1 - v63));
        v13 = v103;
        *((_QWORD *)v103 + 2) = v109 - 1;
        v15 = v134;
        if (v109 <= 2)
          goto LABEL_14;
      }
    }
    v17 = 1;
LABEL_14:
    v8 = v127;
    v14 = v128;
    if (v128 >= v127)
      goto LABEL_101;
  }
  if (__OFADD__(v14, v124))
    goto LABEL_136;
  if (v14 + v124 >= v8)
    v44 = v8;
  else
    v44 = v14 + v124;
  if (v44 >= v14)
  {
    if (v18 != v44)
    {
      v120 = v13;
      v45 = v122 + 8 * v18;
      v125 = v44;
      do
      {
        v46 = v18;
        v47 = *(void **)(v15 + 8 * v18);
        v128 = v45;
        while (1)
        {
          v48 = *(void **)v45;
          v49 = v47;
          v50 = v48;
          v51 = objc_msgSend(v49, sel_startDate);
          sub_2418A80C4();

          v52 = objc_msgSend(v50, sel_startDate);
          v53 = v132;
          sub_2418A80C4();

          LOBYTE(v52) = sub_2418A80B8();
          v54 = *(void (**)(char *, uint64_t))(v131 + 8);
          v55 = v53;
          v56 = v133;
          v54(v55, v133);
          v54(v7, v56);

          if ((v52 & 1) == 0)
            break;
          v15 = v134;
          if (!v134)
            goto LABEL_138;
          v57 = *(void **)v45;
          v47 = *(void **)(v45 + 8);
          *(_QWORD *)v45 = v47;
          *(_QWORD *)(v45 + 8) = v57;
          v45 -= 8;
          if (v46 == ++v14)
            goto LABEL_43;
        }
        v15 = v134;
LABEL_43:
        v18 = v46 + 1;
        v45 = v128 + 8;
        v14 = v126;
      }
      while (v46 + 1 != v125);
      v18 = v125;
      v13 = v120;
    }
    goto LABEL_50;
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  sub_2418AA374();
  __break(1u);
}

void sub_2417A9E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v30 = a1;
  v7 = sub_2418A8100();
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v7;
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v32 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v28 - v12;
  v29 = a2;
  if (a3 != a2)
  {
    v35 = *a4;
    v14 = v35 + 8 * a3 - 8;
LABEL_5:
    v15 = *(void **)(v35 + 8 * a3);
    v16 = v30;
    v31 = v14;
    while (1)
    {
      v17 = *(void **)v14;
      v18 = v15;
      v19 = v17;
      v20 = objc_msgSend(v18, sel_startDate);
      sub_2418A80C4();

      v21 = objc_msgSend(v19, sel_startDate);
      v22 = v32;
      sub_2418A80C4();

      LOBYTE(v21) = sub_2418A80B8();
      v23 = a3;
      v24 = *(void (**)(char *, uint64_t))(v33 + 8);
      v25 = v22;
      v26 = v34;
      v24(v25, v34);
      v24(v13, v26);
      a3 = v23;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v23 + 1;
        v14 = v31 + 8;
        if (v23 + 1 == v29)
          return;
        goto LABEL_5;
      }
      if (!v35)
        break;
      v27 = *(void **)v14;
      v15 = *(void **)(v14 + 8);
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v27;
      v14 -= 8;
      if (v23 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_2417AA028(void **a1, id *a2, id *a3, id *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  char *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  id *v30;
  id *v31;
  unint64_t v32;
  id *v33;
  id *v34;
  unint64_t v35;
  id *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  id v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  id *v47;
  uint64_t result;
  uint64_t v49;
  void **v50;
  id *v51;
  unint64_t v52;
  void **v53;
  id *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  void **v60;
  id *v61;

  v8 = sub_2418A8100();
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v56 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v54 = a3;
  v55 = (char *)&v49 - v13;
  v14 = (char *)a2 - (char *)a1;
  v15 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v15 = (char *)a2 - (char *)a1;
  v16 = v15 >> 3;
  v17 = (char *)a3 - (char *)a2;
  v18 = v17 / 8;
  v61 = a1;
  v51 = a4;
  v60 = a4;
  if (v15 >> 3 >= v17 / 8)
  {
    if (v17 < -7)
      goto LABEL_43;
    v31 = v51;
    if (v51 != a2 || &a2[v18] <= v51)
      memmove(v51, a2, 8 * v18);
    v32 = (unint64_t)&v31[v18];
    v59 = (_QWORD *)v32;
    v61 = a2;
    if (v17 < 8 || a1 >= a2)
      goto LABEL_42;
    v33 = v54 - 1;
    v34 = a2;
    v50 = a1;
    while (1)
    {
      v54 = a2;
      v52 = v32;
      v53 = v33 + 1;
      v36 = (id *)(v32 - 8);
      v37 = *--v34;
      v38 = *(id *)(v32 - 8);
      v39 = v37;
      v40 = objc_msgSend(v38, sel_startDate);
      v41 = v55;
      sub_2418A80C4();

      v42 = objc_msgSend(v39, sel_startDate);
      v43 = v56;
      sub_2418A80C4();

      LOBYTE(v42) = sub_2418A80B8();
      v44 = *(void (**)(char *, uint64_t))(v57 + 8);
      v45 = v43;
      v46 = v58;
      v44(v45, v58);
      v44(v41, v46);

      if ((v42 & 1) != 0)
        break;
      v59 = v36;
      v34 = v54;
      if ((unint64_t)v53 < v52 || (unint64_t)v33 >= v52)
      {
        *v33 = *v36;
        v32 = (unint64_t)v36;
        goto LABEL_30;
      }
      v35 = (unint64_t)v50;
      v47 = v51;
      if (v53 != (void **)v52)
        *v33 = *v36;
      v32 = (unint64_t)v36;
      if (v36 <= v47)
        goto LABEL_42;
LABEL_31:
      --v33;
      a2 = v34;
      if ((unint64_t)v34 <= v35)
        goto LABEL_42;
    }
    v32 = v52;
    if (v53 != v54 || v33 >= v54)
      *v33 = *v34;
    v61 = v34;
LABEL_30:
    v35 = (unint64_t)v50;
    if (v32 <= (unint64_t)v51)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v14 >= -7)
  {
    v19 = v51;
    if (v51 != a1 || &a1[v16] <= v51)
      memmove(v51, a1, 8 * v16);
    v53 = &v19[v16];
    v59 = v53;
    if (v14 >= 8 && a2 < v54)
    {
      v20 = v55;
      do
      {
        v21 = *v19;
        v22 = *a2;
        v23 = v21;
        v24 = objc_msgSend(v22, sel_startDate);
        sub_2418A80C4();

        v25 = objc_msgSend(v23, sel_startDate);
        v26 = v56;
        sub_2418A80C4();

        LOBYTE(v25) = sub_2418A80B8();
        v27 = *(void (**)(char *, uint64_t))(v57 + 8);
        v28 = v26;
        v29 = v58;
        v27(v28, v58);
        v27(v20, v29);

        if ((v25 & 1) != 0)
        {
          v30 = a2 + 1;
          if (a1 < a2 || a1 >= v30 || a1 != a2)
            *a1 = *a2;
        }
        else
        {
          if (a1 != v19)
            *a1 = *v19;
          v60 = ++v19;
          v30 = a2;
        }
        v61 = ++a1;
        if (v19 >= v53)
          break;
        a2 = v30;
      }
      while (v30 < v54);
    }
LABEL_42:
    sub_24188E0F8(&v61, &v60, &v59);
    return 1;
  }
LABEL_43:
  result = sub_2418AA3D4();
  __break(1u);
  return result;
}

uint64_t sub_2417AA490(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = _s5EntryVMa();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  result = sub_2418AA578();
  if (v8)
  {
    v10 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v11 = *(_QWORD *)(v4 + 72);
    v12 = MEMORY[0x24BDCEA88];
    do
    {
      sub_2417289A8(v10, (uint64_t)v7, (uint64_t (*)(_QWORD))_s5EntryVMa);
      sub_2418A8130();
      sub_24172159C(&qword_25714F120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], v12);
      sub_2418A9D44();
      swift_bridgeObjectRetain();
      sub_2418A9E1C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2418A9E1C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2418A9E1C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2418A9E1C();
      swift_bridgeObjectRelease();
      sub_2418AA590();
      result = sub_24172588C((uint64_t)v7, (uint64_t (*)(_QWORD))_s5EntryVMa);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t _s14MentalHealthUI19StateOfMindTimelineO10DaySummaryV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  _QWORD *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v4 = _s5EntryVMa();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417AB88C();
  v10 = v9;
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417AAA24();
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&v42 - v19;
  MEMORY[0x24BDAC7A8](v18, v21);
  v24 = (char *)&v42 - v23;
  if (*a1 != *a2)
    goto LABEL_3;
  v43 = v8;
  v44 = v22;
  v45 = v4;
  v46 = v13;
  v25 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  sub_2418A9CFC();
  sub_24172159C((unint64_t *)&unk_2571526A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
  sub_2418AA218();
  if (v47)
    goto LABEL_3;
  v28 = v25[6];
  v29 = *(_QWORD *)((char *)a1 + v28);
  v30 = *(_QWORD *)((char *)a1 + v28 + 8);
  v31 = (_QWORD *)((char *)a2 + v28);
  if (v29 == *v31 && v30 == v31[1] || (v32 = sub_2418AA4DC(), v26 = 0, (v32 & 1) != 0))
  {
    v33 = v25[7];
    v42 = a1;
    sub_2417289A8((uint64_t)a1 + v33, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_2417AAA24);
    sub_2417289A8((uint64_t)a2 + v25[7], (uint64_t)v20, (uint64_t (*)(_QWORD))sub_2417AAA24);
    v34 = (uint64_t)v46;
    v35 = (uint64_t)&v46[*(int *)(v10 + 48)];
    sub_2417289A8((uint64_t)v24, (uint64_t)v46, (uint64_t (*)(_QWORD))sub_2417AAA24);
    sub_2417289A8((uint64_t)v20, v35, (uint64_t (*)(_QWORD))sub_2417AAA24);
    v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v37 = v45;
    if (v36(v34, 1, v45) == 1)
    {
      sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))sub_2417AAA24);
      sub_24172588C((uint64_t)v24, (uint64_t (*)(_QWORD))sub_2417AAA24);
      if (v36(v35, 1, v37) == 1)
      {
        sub_24172588C(v34, (uint64_t (*)(_QWORD))sub_2417AAA24);
        goto LABEL_15;
      }
    }
    else
    {
      v38 = v44;
      sub_2417289A8(v34, v44, (uint64_t (*)(_QWORD))sub_2417AAA24);
      if (v36(v35, 1, v37) != 1)
      {
        v39 = (uint64_t)v43;
        sub_241731B4C(v35, (uint64_t)v43, (uint64_t (*)(_QWORD))_s5EntryVMa);
        v40 = sub_2418533AC(v38, v39);
        sub_24172588C(v39, (uint64_t (*)(_QWORD))_s5EntryVMa);
        sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))sub_2417AAA24);
        sub_24172588C((uint64_t)v24, (uint64_t (*)(_QWORD))sub_2417AAA24);
        sub_24172588C(v38, (uint64_t (*)(_QWORD))_s5EntryVMa);
        sub_24172588C(v34, (uint64_t (*)(_QWORD))sub_2417AAA24);
        if (v40)
        {
LABEL_15:
          v41 = v42;
          if (sub_2417A836C(*(_QWORD *)((char *)v42 + v25[8]), *(_QWORD *)((char *)a2 + v25[8])))
          {
            v26 = sub_2417A8598(*(_QWORD **)((char *)v41 + v25[9]), *(_QWORD **)((char *)a2 + v25[9]));
            return v26 & 1;
          }
        }
LABEL_3:
        v26 = 0;
        return v26 & 1;
      }
      sub_24172588C((uint64_t)v20, (uint64_t (*)(_QWORD))sub_2417AAA24);
      sub_24172588C((uint64_t)v24, (uint64_t (*)(_QWORD))sub_2417AAA24);
      sub_24172588C(v38, (uint64_t (*)(_QWORD))_s5EntryVMa);
    }
    sub_24172588C(v34, (uint64_t (*)(_QWORD))sub_2417AB88C);
    goto LABEL_3;
  }
  return v26 & 1;
}

void sub_2417AAA24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714CBE8)
  {
    _s5EntryVMa();
    v0 = sub_2418AA1E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714CBE8);
  }
}

uint64_t type metadata accessor for StateOfMindTimeline.DaySummary()
{
  uint64_t result;

  result = qword_25714F0D0;
  if (!qword_25714F0D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2417AAAB4()
{
  return sub_24172159C(&qword_25714F070, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t)&protocol conformance descriptor for StateOfMindTimeline.DaySummary);
}

uint64_t sub_2417AAAE0()
{
  return MEMORY[0x24BEE1778];
}

uint64_t *_s10DaySummaryVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, int *);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, int *);
  uint64_t v41;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2418A9CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = a3[7];
    v13 = (uint64_t *)((char *)v4 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (char *)v4 + v12;
    v17 = (char *)a2 + v12;
    v18 = (int *)_s5EntryVMa();
    v19 = *((_QWORD *)v18 - 1);
    v20 = *(unsigned int (**)(char *, uint64_t, int *))(v19 + 48);
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      sub_2417AAA24();
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v23 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v16, v17, v23);
      v24 = v18[5];
      v25 = &v16[v24];
      v26 = &v17[v24];
      v27 = *((_QWORD *)v26 + 1);
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *((_QWORD *)v25 + 1) = v27;
      v28 = v18[6];
      v29 = &v16[v28];
      v30 = &v17[v28];
      v31 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v31;
      v32 = v18[7];
      v33 = &v16[v32];
      v34 = &v17[v32];
      v35 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v35;
      v36 = v18[8];
      v37 = &v16[v36];
      v38 = &v17[v36];
      v39 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v39;
      *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
      v40 = *(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40(v16, 0, 1, v18);
    }
    v41 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v41) = *(uint64_t *)((char *)a2 + v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s10DaySummaryVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2418A9CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 28);
  v7 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = sub_2418A8130();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s10DaySummaryVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, int *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, int *);
  uint64_t v39;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (_QWORD *)((char *)a1 + v10);
  v13 = (_QWORD *)((char *)a2 + v10);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (char *)a1 + v11;
  v16 = (char *)a2 + v11;
  v17 = (int *)_s5EntryVMa();
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    sub_2417AAA24();
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v15, v16, v21);
    v22 = v17[5];
    v23 = &v15[v22];
    v24 = &v16[v22];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    v26 = v17[6];
    v27 = &v15[v26];
    v28 = &v16[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = v17[7];
    v31 = &v15[v30];
    v32 = &v16[v30];
    v33 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    v34 = v17[8];
    v35 = &v15[v34];
    v36 = &v16[v34];
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    *(_QWORD *)&v15[v17[9]] = *(_QWORD *)&v16[v17[9]];
    v38 = *(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(v15, 0, 1, v17);
  }
  v39 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s10DaySummaryVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, int *);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void (*v34)(char *, _QWORD, uint64_t, int *);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = (int *)_s5EntryVMa();
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(char *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      v37 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v14, v15, v37);
      v38 = v16[5];
      v39 = &v14[v38];
      v40 = &v15[v38];
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v41 = v16[6];
      v42 = &v14[v41];
      v43 = &v15[v41];
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v44 = v16[7];
      v45 = &v14[v44];
      v46 = &v15[v44];
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47 = v16[8];
      v48 = &v14[v47];
      v49 = &v15[v47];
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[v16[9]] = *(_QWORD *)&v15[v16[9]];
      goto LABEL_7;
    }
    sub_24172588C((uint64_t)v14, (uint64_t (*)(_QWORD))_s5EntryVMa);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_2417AAA24();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  v21 = sub_2418A8130();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v14, v15, v21);
  v22 = v16[5];
  v23 = &v14[v22];
  v24 = &v15[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  v25 = v16[6];
  v26 = &v14[v25];
  v27 = &v15[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  v28 = v16[7];
  v29 = &v14[v28];
  v30 = &v15[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  v31 = v16[8];
  v32 = &v14[v31];
  v33 = &v15[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
  *(_QWORD *)&v14[v16[9]] = *(_QWORD *)&v15[v16[9]];
  v34 = *(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(v14, 0, 1, v16);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s10DaySummaryVwtk(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = (int *)_s5EntryVMa();
  v14 = *((_QWORD *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    sub_2417AAA24();
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_2418A8130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    *(_OWORD *)&v11[v13[5]] = *(_OWORD *)&v12[v13[5]];
    *(_OWORD *)&v11[v13[6]] = *(_OWORD *)&v12[v13[6]];
    *(_OWORD *)&v11[v13[7]] = *(_OWORD *)&v12[v13[7]];
    *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
    *(_QWORD *)&v11[v13[9]] = *(_QWORD *)&v12[v13[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  return a1;
}

_QWORD *_s10DaySummaryVwta(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, int *);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2418A9CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = (int *)_s5EntryVMa();
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(uint64_t (**)(char *, uint64_t, int *))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      v26 = sub_2418A8130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v16, v17, v26);
      v27 = v18[5];
      v28 = &v16[v27];
      v29 = &v17[v27];
      v31 = *(_QWORD *)v29;
      v30 = *((_QWORD *)v29 + 1);
      *(_QWORD *)v28 = v31;
      *((_QWORD *)v28 + 1) = v30;
      swift_bridgeObjectRelease();
      v32 = v18[6];
      v33 = &v16[v32];
      v34 = &v17[v32];
      v36 = *(_QWORD *)v34;
      v35 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = v36;
      *((_QWORD *)v33 + 1) = v35;
      swift_bridgeObjectRelease();
      v37 = v18[7];
      v38 = &v16[v37];
      v39 = &v17[v37];
      v41 = *(_QWORD *)v39;
      v40 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v38 = v41;
      *((_QWORD *)v38 + 1) = v40;
      swift_bridgeObjectRelease();
      v42 = v18[8];
      v43 = &v16[v42];
      v44 = &v17[v42];
      v46 = *(_QWORD *)v44;
      v45 = *((_QWORD *)v44 + 1);
      *(_QWORD *)v43 = v46;
      *((_QWORD *)v43 + 1) = v45;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
      goto LABEL_7;
    }
    sub_24172588C((uint64_t)v16, (uint64_t (*)(_QWORD))_s5EntryVMa);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    sub_2417AAA24();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  v23 = sub_2418A8130();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v16, v17, v23);
  *(_OWORD *)&v16[v18[5]] = *(_OWORD *)&v17[v18[5]];
  *(_OWORD *)&v16[v18[6]] = *(_OWORD *)&v17[v18[6]];
  *(_OWORD *)&v16[v18[7]] = *(_OWORD *)&v17[v18[7]];
  *(_OWORD *)&v16[v18[8]] = *(_OWORD *)&v17[v18[8]];
  *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10DaySummaryVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417AB64C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v6 = sub_2418A9CFC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    sub_2417AAA24();
    v8 = v12;
    v7 = *(_QWORD *)(v12 - 8);
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t _s10DaySummaryVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417AB700(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_2418A9CFC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
      return result;
    }
    sub_2417AAA24();
    v10 = v12;
    v9 = *(_QWORD *)(v12 - 8);
    v11 = a4[7];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_2417AB7A4()
{
  unint64_t v0;
  unint64_t v1;

  sub_2418A9CFC();
  if (v0 <= 0x3F)
  {
    sub_2417AAA24();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_2417AB850()
{
  unint64_t result;

  result = qword_2571545F0;
  if (!qword_2571545F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2571545F0);
  }
  return result;
}

void sub_2417AB88C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714F128)
  {
    sub_2417AAA24();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714F128);
  }
}

id static CAGradientLayer.gradientLayerForValence(_:style:)(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  double v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  unint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t inited;
  char *v50;
  char *v51;
  id v52;
  char *v53;
  unint64_t v54;

  sub_24172570C(0, &qword_25714F130, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v47 - v4;
  v6 = sub_2418A84E4();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v50 = (char *)&v47 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v51 = (char *)&v47 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v47 - v20;
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (char *)&v47 - v24;
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v47 - v27;
  v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56B8]), sel_init);
  sub_2418A84F0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v28, *MEMORY[0x24BDEB400], v6);
    sub_2417AC338((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v28, v5, v6);
  }
  sub_2417AC38C();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D51D0;
  v29 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v29(v25, v28, v6);
  v29(v21, v25, v6);
  v30 = fmax(fmin(a1, 1.0), -1.0);
  v53 = v28;
  v31 = *MEMORY[0x24BDEB3F0];
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v48(v11, v31, v6);
  sub_2418A84D8();
  v32 = *(void (**)(char *, uint64_t))(v7 + 8);
  v32(v11, v6);
  swift_getKeyPath();
  sub_2417AC4F8();
  sub_241810204(v30);
  v34 = v33;
  swift_release();
  MEMORY[0x24269BD9C](v34);
  v32(v21, v6);
  v35 = (void *)sub_2418AA1D0();
  v32(v25, v6);
  v36 = objc_msgSend(v35, sel_CGColor);

  v37 = inited;
  *(_QWORD *)(inited + 32) = v36;
  v38 = v51;
  v29(v51, v53, v6);
  v39 = v50;
  v29(v50, v38, v6);
  v48(v11, v31, v6);
  sub_2418A84D8();
  v32(v11, v6);
  swift_getKeyPath();
  sub_241810204(v30);
  v41 = v40;
  swift_release();
  MEMORY[0x24269BD9C](v41);
  v32(v39, v6);
  v42 = (void *)sub_2418AA1D0();
  v32(v38, v6);
  v43 = objc_msgSend(v42, sel_CGColor);

  *(_QWORD *)(v37 + 40) = v43;
  v54 = v37;
  sub_2418A9EC4();
  sub_2417ABD58(v54);
  swift_bridgeObjectRelease();
  v44 = (void *)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  v45 = v52;
  objc_msgSend(v52, sel_setColors_, v44);

  v32(v53, v6);
  return v45;
}

uint64_t sub_2417ABD58(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2418AA398();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x24BEE4AF8];
  result = sub_24183D638(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x24269CAD4](i, a1);
        type metadata accessor for CGColor(0);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24183D638(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_24183D638(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_2417AC5F4(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      type metadata accessor for CGColor(0);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24183D638(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_24183D638(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_2417AC5F4(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2417ABF88(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_24183D638(0, v1, 0);
    v4 = (void **)(a1 + 32);
    sub_2417AC5D8(0);
    do
    {
      v5 = *v4++;
      v6 = v5;
      swift_dynamicCast();
      v2 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24183D638(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v11;
      }
      v8 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_24183D638(v7 > 1, v8 + 1, 1);
        v2 = v11;
      }
      *(_QWORD *)(v2 + 16) = v8 + 1;
      sub_2417AC5F4(&v10, (_OWORD *)(v2 + 32 * v8 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

id static CAGradientLayer.gradientLayerForValenceClassification(_:style:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t inited;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;

  sub_24172570C(0, &qword_25714F130, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v22 - v4;
  v6 = sub_2418A84E4();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v22 - v13;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56B8]), sel_init);
  sub_2418A84F0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v14, *MEMORY[0x24BDEB400], v6);
    sub_2417AC338((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v5, v6);
  }
  sub_24172570C(0, &qword_25714F140, (uint64_t (*)(uint64_t))sub_2417AC5D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2418D1940;
  LOBYTE(v23) = 1;
  v17 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v17(v11, v14, v6);
  Color.init(valenceClassification:variant:colorScheme:)(a1, (unsigned __int8 *)&v23, (uint64_t)v11);
  v18 = sub_2418A95A0();
  swift_release();
  *(_QWORD *)(inited + 32) = v18;
  LOBYTE(v23) = 0;
  v17(v11, v14, v6);
  Color.init(valenceClassification:variant:colorScheme:)(a1, (unsigned __int8 *)&v23, (uint64_t)v11);
  v19 = sub_2418A95A0();
  swift_release();
  *(_QWORD *)(inited + 40) = v19;
  v23 = inited;
  sub_2418A9EC4();
  sub_2417ABF88(v23);
  swift_bridgeObjectRelease();
  v20 = (void *)sub_2418A9EAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setColors_, v20);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  return v15;
}

uint64_t sub_2417AC338(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, &qword_25714F130, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2417AC38C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714D510)
  {
    v0 = sub_2418AA4B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714D510);
  }
}

CGColorRef sub_2417AC3E4@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result;

  result = CGColorCreateGenericRGB(0.0, 0.0, 0.0, 1.0);
  *a1 = result;
  return result;
}

CGColorRef sub_2417AC418@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result;

  result = sub_24180EA0C();
  *a1 = result;
  return result;
}

uint64_t sub_2417AC450@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24180EC14();
  *a1 = result;
  return result;
}

CGColorRef sub_2417AC488@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result;

  result = sub_24180EB00();
  *a1 = result;
  return result;
}

CGColorRef sub_2417AC4C0@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result;

  result = sub_24180EB00();
  *a1 = result;
  return result;
}

unint64_t sub_2417AC4F8()
{
  unint64_t result;

  result = qword_25714F138;
  if (!qword_25714F138)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25714F138);
  }
  return result;
}

CGColorRef sub_2417AC534@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result;

  result = sub_24180EA0C();
  *a1 = result;
  return result;
}

CGColorRef sub_2417AC56C@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result;

  result = CGColorCreateGenericRGB(0.0, 0.0, 0.0, 1.0);
  *a1 = result;
  return result;
}

uint64_t sub_2417AC5A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24180EC14();
  *a1 = result;
  return result;
}

void sub_2417AC5D8(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714F148, (uint64_t (*)(uint64_t))type metadata accessor for CGColor, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

_OWORD *sub_2417AC5F4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t *sub_2417AC604(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v38;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = a3[5];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v14 = *(int *)(v13 + 32);
    v38 = (char *)v10 + v14;
    v15 = &v11[v14];
    v16 = sub_2418A8100();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v17(v38, v15, v16);
    v18 = a3[6];
    v19 = a3[7];
    v20 = (char *)v7 + v18;
    v21 = (char *)a2 + v18;
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v20[16] = v21[16];
    *(uint64_t *)((char *)v7 + v19) = *(uint64_t *)((char *)a2 + v19);
    v23 = a3[8];
    v24 = a3[9];
    v25 = (uint64_t *)((char *)v7 + v23);
    v26 = (uint64_t *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = (uint64_t *)((char *)v7 + v24);
    v29 = (uint64_t *)((char *)a2 + v24);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = sub_2418A8EB0();
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v33 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v34 = (char *)v28 + v33;
      v35 = (char *)v29 + v33;
      v36 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
    }
    else
    {
      *v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t sub_2417AC890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v6 = v4 + *(int *)(v5 + 32);
  v7 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();
  v8 = a1 + *(int *)(a2 + 36);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v9 = sub_2418A8EB0();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v8 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
  v12 = sub_2418A87B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *sub_2417AC9FC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v36;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v12 = *(int *)(v11 + 32);
  v36 = (char *)v8 + v12;
  v13 = &v9[v12];
  v14 = sub_2418A8100();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v36, v13, v14);
  v16 = a3[6];
  v17 = a3[7];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v18[16] = v19[16];
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  v21 = a3[8];
  v22 = a3[9];
  v23 = (_QWORD *)((char *)a1 + v21);
  v24 = (_QWORD *)((char *)a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = (_QWORD *)((char *)a1 + v22);
  v27 = (_QWORD *)((char *)a2 + v22);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = sub_2418A8EB0();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v31 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v32 = (char *)v26 + v31;
    v33 = (char *)v27 + v31;
    v34 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  }
  else
  {
    *v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2417ACC58(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_retain();
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v10 = *(int *)(v9 + 32);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_2418A8100();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  swift_retain();
  swift_release();
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_retain();
  swift_release();
  v15[16] = v16[16];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v21 = a3[9];
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    sub_2417ACEFC((uint64_t)a1 + v21);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_2418A8EB0();
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      v27 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v28 = (char *)v22 + v27;
      v29 = (char *)v23 + v27;
      v30 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2417ACEFC(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417ACF50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v11 = *(int *)(v10 + 32);
  v12 = (char *)v7 + v11;
  v13 = v8 + v11;
  v14 = sub_2418A8100();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[6];
  v16 = a3[7];
  v17 = a1 + v15;
  v18 = (__int128 *)(a2 + v15);
  v19 = *v18;
  *(_BYTE *)(v17 + 16) = *((_BYTE *)v18 + 16);
  *(_OWORD *)v17 = v19;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v20 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v21 = (char *)(a1 + v20);
  v22 = (char *)(a2 + v20);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v24 = v23;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_2418A8EB0();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v22, 1, v25))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v21, v22, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v21, 0, 1, v25);
    }
    v28 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v29 = &v21[v28];
    v30 = &v22[v28];
    v31 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_2417AD150(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v10 = *(int *)(v9 + 32);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_2418A8100();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  swift_release();
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_release();
  v15[16] = v16[16];
  v17 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  swift_release();
  if (a1 != a2)
  {
    v18 = a3[9];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    sub_2417ACEFC((uint64_t)a1 + v18);
    sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v22 = v21;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_2418A8EB0();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v20, 1, v23))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v19, v20, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v19, 0, 1, v23);
      }
      v26 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      v27 = &v19[v26];
      v28 = &v20[v26];
      v29 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2417AD3B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417AD3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2417AD494()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417AD4A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_24172570C(0, qword_25714F158, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ReflectiveIntervalsSelectionPhaseContent()
{
  uint64_t result;

  result = qword_25714F1B8;
  if (!qword_25714F1B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417AD5A8()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2417AD68C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417AD69C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t (*v80)(uint64_t, uint64_t);
  uint64_t *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  double v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _BYTE *v148;
  uint64_t v149;
  int *v150;
  int *v151;
  _BYTE *v152;
  _QWORD v154[2];
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _BYTE *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  uint64_t v189;
  char v190;
  __int128 v191;
  uint64_t v192;
  uint64_t v193;
  _UNKNOWN **v194;
  __int128 v195;
  uint64_t v196;
  __int128 v197;
  uint64_t v198;
  char v199;
  uint64_t (*v200)@<X0>(uint64_t@<X8>);
  uint64_t v201;

  v184 = a2;
  v3 = type metadata accessor for ReflectiveIntervalsSelectionPhaseContent();
  v154[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v154[1] = v5;
  v155 = (uint64_t)v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174DAC0(0, v6, v7, v8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v157 = (char *)v154 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_25714E2C0, v12);
  v180 = v13;
  v179 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v156 = (uint64_t)v154 - v15;
  sub_241786A04(0);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v183 = (uint64_t)v154 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v182 = (uint64_t)v154 - v21;
  v168 = type metadata accessor for ReflectiveIntervalPicker_iOS();
  MEMORY[0x24BDAC7A8](v168, v22);
  v172 = (char *)v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417AE8B8(0);
  v169 = v24;
  MEMORY[0x24BDAC7A8](v24, v25);
  v173 = (uint64_t)v154 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_25714F238, v27);
  v171 = v28;
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v181 = (uint64_t)v154 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v170 = (uint64_t)v154 - v34;
  MEMORY[0x24BDAC7A8](v33, v35);
  v186 = (uint64_t)v154 - v36;
  v37 = (int *)type metadata accessor for ReflectiveIntervalSelectionHeaderText();
  MEMORY[0x24BDAC7A8](v37, v38);
  v40 = (_QWORD *)((char *)v154 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417AE89C(0);
  v161 = v41;
  MEMORY[0x24BDAC7A8](v41, v42);
  *(_QWORD *)&v165 = (char *)v154 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241721CBC(0, &qword_25714F228, v44);
  v163 = v45;
  v47 = MEMORY[0x24BDAC7A8](v45, v46);
  v178 = (uint64_t)v154 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x24BDAC7A8](v47, v49);
  v162 = (uint64_t)v154 - v51;
  MEMORY[0x24BDAC7A8](v50, v52);
  v187 = (uint64_t)v154 - v53;
  v54 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  v56 = MEMORY[0x24BDAC7A8](v54, v55);
  v58 = (char *)v154 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v56, v59);
  v61 = (char *)v154 - v60;
  v177 = sub_2418A90E4();
  v166 = a1 + *(int *)(v3 + 36);
  sub_241861F08((uint64_t)v61);
  v167 = v54;
  sub_2418A879C();
  v62 = 0.0;
  sub_24172588C((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_2418A84A8();
  v176 = v63;
  v175 = v64;
  v66 = v65;
  v68 = v67;
  v185 = v3;
  v69 = a1;
  v70 = a1 + *(int *)(v3 + 24);
  v71 = *(_QWORD *)(v70 + 8);
  v72 = *(_BYTE *)(v70 + 16);
  *(_QWORD *)&v195 = *(_QWORD *)v70;
  *((_QWORD *)&v195 + 1) = v71;
  LOBYTE(v196) = v72;
  sub_24172887C(0, (unint64_t *)&qword_257155000, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF4870]);
  v164 = v73;
  MEMORY[0x24269C00C](&v191);
  v174 = v191;
  if (qword_25714B958 != -1)
    swift_once();
  v74 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v75 = sub_2418A7EFC();
  v77 = v76;
  swift_bridgeObjectRelease();

  v160 = v69 + *(int *)(v185 + 20);
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v159 = v78;
  MEMORY[0x24269C00C]();
  *v40 = v75;
  v40[1] = v77;
  v79 = (uint64_t *)((char *)v40 + v37[6]);
  *v79 = swift_getKeyPath();
  v80 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_24172570C(0, &qword_25714F248, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v81 = (uint64_t *)((char *)v40 + v37[7]);
  *v81 = swift_getKeyPath();
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], v80);
  swift_storeEnumTagMultiPayload();
  v82 = (uint64_t *)((char *)v40 + v37[8]);
  *v82 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v80);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v82) = sub_2418A90E4();
  sub_241861F08((uint64_t)v58);
  sub_24172588C((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_2418A84A8();
  v84 = v83;
  v86 = v85;
  v88 = v87;
  v90 = v89;
  v91 = v165;
  sub_2417289A8((uint64_t)v40, v165, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionHeaderText);
  v92 = v91 + *(int *)(v161 + 36);
  *(_BYTE *)v92 = (_BYTE)v82;
  *(_QWORD *)(v92 + 8) = v84;
  *(_QWORD *)(v92 + 16) = v86;
  *(_QWORD *)(v92 + 24) = v88;
  *(_QWORD *)(v92 + 32) = v90;
  *(_BYTE *)(v92 + 40) = 0;
  sub_24172588C((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionHeaderText);
  v93 = *(_QWORD *)(v70 + 8);
  v94 = *(_BYTE *)(v70 + 16);
  *(_QWORD *)&v195 = *(_QWORD *)v70;
  *((_QWORD *)&v195 + 1) = v93;
  LOBYTE(v196) = v94;
  v95 = v164;
  MEMORY[0x24269C00C](&v191, v164);
  v96 = 1.0;
  if ((_BYTE)v191)
    v97 = 1.0;
  else
    v97 = 0.0;
  v98 = v162;
  sub_2417289A8(v91, v162, (uint64_t (*)(_QWORD))sub_2417AE89C);
  *(double *)(v98 + *(int *)(v163 + 36)) = v97;
  sub_24172588C(v91, (uint64_t (*)(_QWORD))sub_2417AE89C);
  sub_2417736CC(v98, v187, &qword_25714F228, sub_2417AE89C);
  v158 = v69;
  v99 = *(_QWORD *)(v69 + 16);
  v191 = *(_OWORD *)v69;
  v192 = v99;
  sub_24172570C(0, &qword_25714F250, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  sub_2418A9828();
  v165 = v195;
  v100 = v196;
  v101 = v168;
  v102 = (uint64_t)v172;
  sub_2418A9828();
  *(_OWORD *)v102 = v165;
  *(_QWORD *)(v102 + 16) = v100;
  v103 = (uint64_t *)(v102 + *(int *)(v101 + 24));
  *v103 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  LOBYTE(v103) = sub_2418A90E4();
  sub_241861F08((uint64_t)v58);
  sub_24172588C((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_2418A84A8();
  v105 = v104;
  v107 = v106;
  v109 = v108;
  v111 = v110;
  v112 = v173;
  sub_2417289A8(v102, v173, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalPicker_iOS);
  v113 = v112 + *(int *)(v169 + 36);
  *(_BYTE *)v113 = (_BYTE)v103;
  *(_QWORD *)(v113 + 8) = v105;
  *(_QWORD *)(v113 + 16) = v107;
  *(_QWORD *)(v113 + 24) = v109;
  *(_QWORD *)(v113 + 32) = v111;
  *(_BYTE *)(v113 + 40) = 0;
  sub_24172588C(v102, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalPicker_iOS);
  v114 = *(_QWORD *)(v70 + 8);
  v115 = *(_BYTE *)(v70 + 16);
  *(_QWORD *)&v195 = *(_QWORD *)v70;
  *((_QWORD *)&v195 + 1) = v114;
  LOBYTE(v196) = v115;
  MEMORY[0x24269C00C](&v191, v95);
  if ((_BYTE)v191)
    v62 = 1.0;
  v116 = v170;
  sub_2417289A8(v112, v170, (uint64_t (*)(_QWORD))sub_2417AE8B8);
  *(double *)(v116 + *(int *)(v171 + 36)) = v62;
  sub_24172588C(v112, (uint64_t (*)(_QWORD))sub_2417AE8B8);
  v117 = v186;
  sub_2417736CC(v116, v186, &qword_25714F238, sub_2417AE8B8);
  sub_241861F08((uint64_t)v58);
  sub_24172588C((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_241861F08((uint64_t)v58);
  v118 = v167;
  v119 = sub_2418A879C();
  sub_24172588C((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  v120 = v158;
  if ((v119 & 1) != 0)
  {
    v121 = v118;
    v122 = (uint64_t)v58;
    v123 = *(_QWORD *)(v158 + *(int *)(v185 + 28));
    v193 = v121;
    v194 = &off_2511B1C98;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v191);
    sub_241861F08((uint64_t)boxed_opaque_existential_1);
    v125 = v120;
    v126 = v155;
    sub_2417289A8(v125, v155, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalsSelectionPhaseContent);
    v127 = (*(unsigned __int8 *)(v154[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v154[0] + 80);
    v128 = swift_allocObject();
    sub_2417AEB24(v126, v128 + v127);
    *(_QWORD *)&v195 = v123;
    BYTE8(v195) = 0;
    sub_24172887C(0, (unint64_t *)&qword_25714D7D0, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2418A9840();
    v197 = v188;
    v198 = v189;
    v199 = v190;
    sub_24174DE50(&v191, (uint64_t)&v196);
    *(_QWORD *)&v195 = sub_2417AEB68;
    *((_QWORD *)&v195 + 1) = v128;
    v200 = sub_2417AE5A0;
    v201 = 0;
    *(_QWORD *)&v191 = &unk_2511AB450;
    sub_2417739BC((uint64_t)&unk_2511AC2C8);
    sub_24172887C(0, (unint64_t *)&qword_2543915D0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_241731AEC();
    sub_2418A9D50();
    swift_bridgeObjectRelease();
    sub_24172835C(0, (unint64_t *)&qword_25714CE48, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ActionButton);
    sub_24177E0AC();
    v129 = (uint64_t)v157;
    sub_2418A9450();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_2417AEBAC((uint64_t)&v195);
    LOBYTE(v128) = sub_2418A90F0();
    sub_241861F08(v122);
    sub_24172588C(v122, (uint64_t (*)(_QWORD))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
    sub_2418A84A8();
    v131 = v130;
    v133 = v132;
    v135 = v134;
    v137 = v136;
    v138 = v156;
    sub_2417289A8(v129, v156, (uint64_t (*)(_QWORD))sub_24174DAC0);
    v139 = v180;
    v140 = v138 + *(int *)(v180 + 36);
    *(_BYTE *)v140 = v128;
    *(_QWORD *)(v140 + 8) = v131;
    *(_QWORD *)(v140 + 16) = v133;
    *(_QWORD *)(v140 + 24) = v135;
    *(_QWORD *)(v140 + 32) = v137;
    *(_BYTE *)(v140 + 40) = 0;
    sub_24172588C(v129, (uint64_t (*)(_QWORD))sub_24174DAC0);
    v141 = v182;
    sub_2417736CC(v138, v182, &qword_25714E2C0, (void (*)(uint64_t))sub_24174DAC0);
    v142 = 0;
  }
  else
  {
    v142 = 1;
    v141 = v182;
    v139 = v180;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v179 + 56))(v141, v142, 1, v139);
  if (!v174)
    v96 = 0.0;
  v143 = v187;
  v144 = v178;
  sub_2417AE8E8(v187, v178, &qword_25714F228, sub_2417AE89C);
  v145 = v117;
  v146 = v181;
  sub_2417AE8E8(v145, v181, &qword_25714F238, sub_2417AE8B8);
  v147 = v183;
  sub_2417289A8(v141, v183, (uint64_t (*)(_QWORD))sub_241786A04);
  v148 = v184;
  *v184 = v177;
  v149 = v175;
  *((_QWORD *)v148 + 1) = v176;
  *((_QWORD *)v148 + 2) = v149;
  *((_QWORD *)v148 + 3) = v66;
  *((_QWORD *)v148 + 4) = v68;
  v148[40] = 0;
  *((double *)v148 + 6) = v96;
  sub_2417AE758();
  v151 = v150;
  sub_2417AE8E8(v144, (uint64_t)&v148[v150[12]], &qword_25714F228, sub_2417AE89C);
  sub_2417AE8E8(v146, (uint64_t)&v148[v151[16]], &qword_25714F238, sub_2417AE8B8);
  v152 = &v148[v151[20]];
  *(_QWORD *)v152 = 0x4038000000000000;
  v152[8] = 0;
  sub_2417289A8(v147, (uint64_t)&v148[v151[24]], (uint64_t (*)(_QWORD))sub_241786A04);
  sub_24172588C(v141, (uint64_t (*)(_QWORD))sub_241786A04);
  sub_2417AE940(v186, &qword_25714F238, sub_2417AE8B8);
  sub_2417AE940(v143, &qword_25714F228, sub_2417AE89C);
  sub_24172588C(v147, (uint64_t (*)(_QWORD))sub_241786A04);
  sub_2417AE940(v146, &qword_25714F238, sub_2417AE8B8);
  return sub_2417AE940(v144, &qword_25714F228, sub_2417AE89C);
}

uint64_t sub_2417AE5A0@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_25714B958 != -1)
    swift_once();
  v2 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  sub_2418A7EFC();
  swift_bridgeObjectRelease();

  sub_241721040();
  result = sub_2418A92D0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_2417AE698@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2418A8C58();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_2417AE6D8();
  return sub_2417AD69C(v1, (_BYTE *)(a1 + *(int *)(v3 + 44)));
}

void sub_2417AE6D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F200)
  {
    sub_2417AE73C(255);
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F200);
  }
}

void sub_2417AE73C(uint64_t a1)
{
  sub_24172570C(a1, &qword_25714F208, (uint64_t (*)(uint64_t))sub_2417AE758, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2417AE758()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_25714F210)
  {
    sub_2417AE820();
    sub_241721CBC(255, &qword_25714F228, sub_2417AE89C);
    sub_241721CBC(255, &qword_25714F238, sub_2417AE8B8);
    sub_241786A04(255);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_25714F210);
  }
}

void sub_2417AE820()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F218)
  {
    sub_24172835C(255, &qword_25714F220, (uint64_t)&type metadata for StateOfMindHeaderImage, MEMORY[0x24BDECC80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F218);
  }
}

void sub_2417AE89C(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714F230, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionHeaderText);
}

void sub_2417AE8B8(uint64_t a1)
{
  sub_241721CBC(a1, &qword_25714F240, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalPicker_iOS);
}

uint64_t sub_2417AE8E8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_241721CBC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2417AE940(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_241721CBC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2417AE984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for ReflectiveIntervalsSelectionPhaseContent();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 20);
  swift_release();
  swift_release();
  sub_24172570C(0, qword_25714EE48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
  v6 = v4 + *(int *)(v5 + 32);
  v7 = sub_2418A8100();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();
  v8 = v3 + *(int *)(v1 + 36);
  sub_24172570C(0, &qword_25714F150, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2418A8EB0();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = v8 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    v12 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2417AEB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReflectiveIntervalsSelectionPhaseContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417AEB68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for ReflectiveIntervalsSelectionPhaseContent();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + *(int *)(v1 + 32) + ((v2 + 16) & ~v2)))();
}

uint64_t sub_2417AEBAC(uint64_t a1)
{
  uint64_t v2;

  sub_24172835C(0, (unint64_t *)&qword_25714CE48, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ActionButton);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417AEC08()
{
  return sub_24172159C(&qword_25714F258, (uint64_t (*)(uint64_t))sub_2417AEC34, MEMORY[0x24BDF4700]);
}

void sub_2417AEC34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F260)
  {
    sub_2417AE73C(255);
    sub_24172159C(&qword_25714F268, (uint64_t (*)(uint64_t))sub_2417AE73C, MEMORY[0x24BDF5428]);
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F260);
  }
}

id StateOfMindOverlayContext.__allocating_init(accessibilityIdentifier:applicationItems:overlayChartController:overlayPredicate:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  objc_class *v5;
  objc_class *v6;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  objc_super v22;

  v6 = v5;
  v12 = (char *)objc_allocWithZone(v6);
  v13 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(_QWORD *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  v14 = &v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = a2;
  *(_QWORD *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = a4;
  sub_241762EFC(0, (unint64_t *)&qword_257152CA0);
  v15 = v12;
  v16 = a4;
  sub_241880A3C(a3, a5, 0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v17;
  *(_QWORD *)&v15[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = a5;
  v18 = *(void **)&v12[v13];
  *(_QWORD *)&v12[v13] = 0;
  v19 = a5;

  v22.receiver = v15;
  v22.super_class = v6;
  v20 = objc_msgSendSuper2(&v22, sel_init);

  return v20;
}

id StateOfMindOverlayContext.init(accessibilityIdentifier:applicationItems:overlayChartController:overlayPredicate:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  char *v5;
  char *v6;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  objc_super v19;

  v6 = v5;
  v10 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(_QWORD *)&v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  v11 = &v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = a2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = a4;
  sub_241762EFC(0, (unint64_t *)&qword_257152CA0);
  v12 = v6;
  v13 = a4;
  sub_241880A3C(a3, a5, 0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v14;
  *(_QWORD *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = a5;
  v15 = *(void **)&v6[v10];
  *(_QWORD *)&v6[v10] = 0;
  v16 = a5;

  v19.receiver = v12;
  v19.super_class = (Class)type metadata accessor for StateOfMindOverlayContext();
  v17 = objc_msgSendSuper2(&v19, sel_init);

  return v17;
}

id sub_2417AEEDC()
{
  sub_241762EFC(0, &qword_25714F2A0);
  return objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_stateOfMindType);
}

void *sub_2417AEF58()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType);
  v2 = v1;
  return v1;
}

void sub_2417AEF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, _QWORD), uint64_t a6)
{
  sub_2417B07FC(a1, a3, a5, a6);
}

uint64_t sub_2417AEFA4(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  char *v38;
  uint64_t (*v39)(uint64_t);
  char *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD aBlock[6];

  v50 = a8;
  v51 = a1;
  v52 = a7;
  v53 = a3;
  v48 = a6;
  v49 = a2;
  v10 = sub_2418A9A44();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2418A9A68();
  v55 = *(_QWORD *)(v15 - 8);
  v56 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v54 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2418A7DA0();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x24BDAC7A8](v18, v21);
  v22 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x24269D5FC](a4 + 16);
  if (result)
  {
    v24 = (void *)result;
    sub_241762EFC(0, (unint64_t *)&qword_2543915E8);
    v47 = sub_2418AA0D4();
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v18);
    v25 = (*(unsigned __int8 *)(v19 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v26 = (v20 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    v45 = v10;
    v46 = v11;
    v27 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
    v28 = (v26 + 39) & 0xFFFFFFFFFFFFFFF8;
    v44 = v14;
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v29 + v25, v22, v18);
    v30 = (_QWORD *)(v29 + v26);
    v32 = v51;
    v31 = v52;
    *v30 = v48;
    v30[1] = v31;
    v33 = v29 + v27;
    *(_QWORD *)v33 = v32;
    *(_BYTE *)(v33 + 8) = v49 & 1;
    v34 = v53;
    *(_QWORD *)(v29 + v28) = v53;
    *(_QWORD *)(v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8)) = v50;
    aBlock[4] = sub_2417B0FA4;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2417599E8;
    aBlock[3] = &block_descriptor_13;
    v35 = _Block_copy(aBlock);
    v36 = v24;
    swift_retain();
    swift_bridgeObjectRetain();
    v37 = v34;
    swift_release();
    v38 = v54;
    sub_2418A9A5C();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    v39 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
    sub_24172159C((unint64_t *)&unk_25714F340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_24172570C(0, &qword_25714D438, v39, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24175D3CC();
    v40 = v44;
    v41 = v45;
    sub_2418AA248();
    v42 = (void *)v47;
    MEMORY[0x24269C8E8](0, v38, v40, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v40, v41);
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v38, v56);
  }
  return result;
}

void sub_2417AF2F0(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t, id), uint64_t a4, unint64_t a5, int a6, void *a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  void (*v60)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  void *v65;
  _BYTE *v66;
  _BYTE *v67;
  void (*v68)(_BYTE *, uint64_t, uint64_t);
  uint64_t v69;
  _BYTE *v70;
  void (*v71)(_BYTE *, uint64_t);
  _BYTE *v72;
  id v73;
  void *v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  unsigned int v83;
  _BYTE *v84;
  char v85;
  void (*v86)(_BYTE *, uint64_t);
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  void *v90;
  _BYTE *v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  id v99;
  _BYTE *v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  _BYTE *v107;
  id v108;
  id v109;
  id v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  id v117;
  uint64_t v118;
  unint64_t v119;
  _BYTE v120[12];
  int v121;
  _BYTE *v122;
  void (*v123)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v124;
  _QWORD *v125;
  _BYTE *v126;
  _BYTE *v127;
  id v128;
  int v129;
  unint64_t v130;
  _BYTE *v131;
  _BYTE *v132;
  uint64_t v133;
  _BYTE *v134;
  _BYTE *v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t, id);
  uint64_t v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  _BYTE *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148[2];

  v133 = a8;
  v128 = a7;
  v129 = a6;
  v130 = a5;
  v139 = a4;
  v140 = a3;
  v146 = a2;
  v9 = sub_2418A8340();
  v137 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v136 = &v120[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v126 = &v120[-v15];
  MEMORY[0x24BDAC7A8](v14, v16);
  v127 = &v120[-v17];
  v18 = sub_2418A7DA0();
  v141 = *(_QWORD *)(v18 - 8);
  v142 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v145 = &v120[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = sub_2418A8100();
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v24);
  v131 = &v120[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2417B1018();
  v144 = v26;
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v132 = &v120[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v28, v30);
  v32 = &v120[-v31];
  sub_24172570C(0, (unint64_t *)&qword_25714F360, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v35 = MEMORY[0x24BDAC7A8](v33, v34);
  v37 = &v120[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39 = MEMORY[0x24BDAC7A8](v35, v38);
  v41 = &v120[-v40];
  v43 = MEMORY[0x24BDAC7A8](v39, v42);
  v135 = &v120[-v44];
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v134 = &v120[-v47];
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v51 = &v120[-v50];
  MEMORY[0x24BDAC7A8](v49, v52);
  v54 = &v120[-v53];
  v125 = a1;
  v55 = objc_msgSend(*(id *)((char *)a1 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController), sel_primaryGraphViewController);
  v56 = objc_msgSend(v55, sel_graphView);

  v57 = objc_msgSend(v56, sel_effectiveVisibleRangeActive);
  v143 = v57;
  v58 = objc_msgSend(v57, sel_startDate);
  v138 = v9;
  if (v58)
  {
    v59 = v58;
    sub_2418A80C4();

    v60 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v60(v54, 0, 1, v21);
  }
  else
  {
    v60 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v60(v54, 1, 1, v21);
  }
  sub_2418A7D94();
  v60(v51, 0, 1, v21);
  v61 = (uint64_t)&v32[*(int *)(v144 + 48)];
  sub_2417B1090((uint64_t)v54, (uint64_t)v32);
  sub_2417B1090((uint64_t)v51, v61);
  v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v62((uint64_t)v32, 1, v21) == 1)
  {
    sub_2417B10EC((uint64_t)v51);
    sub_2417B10EC((uint64_t)v54);
    if (v62(v61, 1, v21) == 1)
    {
      v124 = v41;
      v122 = v37;
      sub_2417B10EC((uint64_t)v32);
      v64 = v141;
      v63 = v142;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v141 + 16))(v145, v146, v142);
      v65 = v143;
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  v123 = v60;
  v66 = v134;
  sub_2417B1090((uint64_t)v32, (uint64_t)v134);
  if (v62(v61, 1, v21) == 1)
  {
    sub_2417B10EC((uint64_t)v51);
    sub_2417B10EC((uint64_t)v54);
    (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v66, v21);
LABEL_9:
    sub_2417B1140((uint64_t)v32);
    v64 = v141;
    v63 = v142;
    v67 = v145;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v141 + 16))(v145, v146, v142);
    v65 = v143;
LABEL_10:
    (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v67, v63);
LABEL_25:
    v91 = v136;
    sub_2418A8328();
    v92 = sub_2418A8334();
    v93 = sub_2418AA05C();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = (uint8_t *)swift_slowAlloc();
      v95 = swift_slowAlloc();
      v148[0] = v95;
      *(_DWORD *)v94 = 136446210;
      v96 = sub_2418AA5D8();
      v147 = sub_24176024C(v96, v97, v148);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v92, v93, "[%{public}s] Skipping update for irrelevant date range", v94, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v95, -1, -1);
      MEMORY[0x24269D548](v94, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v137 + 8))(v91, v138);
    goto LABEL_28;
  }
  v124 = v41;
  v122 = v37;
  v68 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v23 + 32);
  v69 = v23;
  v70 = v131;
  v68(v131, v61, v21);
  sub_24172159C(qword_25714F378, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v121 = sub_2418A9DA4();
  v71 = *(void (**)(_BYTE *, uint64_t))(v69 + 8);
  v72 = v70;
  v23 = v69;
  v71(v72, v21);
  sub_2417B10EC((uint64_t)v51);
  sub_2417B10EC((uint64_t)v54);
  v71(v66, v21);
  sub_2417B10EC((uint64_t)v32);
  v64 = v141;
  v63 = v142;
  v67 = v145;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v141 + 16))(v145, v146, v142);
  v65 = v143;
  v60 = v123;
  if ((v121 & 1) == 0)
    goto LABEL_10;
LABEL_12:
  v73 = objc_msgSend(v65, sel_endDate);
  if (v73)
  {
    v74 = v73;
    v75 = v135;
    sub_2418A80C4();

    v76 = 0;
  }
  else
  {
    v76 = 1;
    v75 = v135;
  }
  v60(v75, v76, 1, v21);
  v77 = (uint64_t)v124;
  v78 = v145;
  sub_2418A7D88();
  v60((_BYTE *)v77, 0, 1, v21);
  v79 = v132;
  v80 = (uint64_t)&v132[*(int *)(v144 + 48)];
  sub_2417B1090((uint64_t)v75, (uint64_t)v132);
  sub_2417B1090(v77, v80);
  if (v62((uint64_t)v79, 1, v21) == 1)
  {
    sub_2417B10EC(v77);
    sub_2417B10EC((uint64_t)v75);
    (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v78, v63);
    v81 = v62(v80, 1, v21);
    v65 = v143;
    if (v81 == 1)
    {
      sub_2417B10EC((uint64_t)v79);
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  v82 = (uint64_t)v122;
  sub_2417B1090((uint64_t)v79, (uint64_t)v122);
  v83 = v62(v80, 1, v21);
  v65 = v143;
  if (v83 == 1)
  {
    sub_2417B10EC(v77);
    sub_2417B10EC((uint64_t)v135);
    (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v145, v63);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v82, v21);
LABEL_20:
    sub_2417B1140((uint64_t)v79);
    goto LABEL_25;
  }
  v84 = v131;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v23 + 32))(v131, v80, v21);
  sub_24172159C(qword_25714F378, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v85 = sub_2418A9DA4();
  v86 = *(void (**)(_BYTE *, uint64_t))(v23 + 8);
  v86(v84, v21);
  sub_2417B10EC(v77);
  sub_2417B10EC((uint64_t)v135);
  (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v145, v63);
  v86((_BYTE *)v82, v21);
  sub_2417B10EC((uint64_t)v79);
  if ((v85 & 1) == 0)
    goto LABEL_25;
LABEL_22:
  v87 = sub_2417AFF00(v130);
  if (v87)
  {
    if ((v129 & 1) != 0)
    {
      v88 = v125;
      v89 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v125) + 0xC0))(v87);
      swift_bridgeObjectRelease();
      v90 = *(void **)((char *)v88 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem);
      *(_QWORD *)((char *)v88 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem) = v89;

LABEL_28:
      v98 = 1;
      v99 = 0;
      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    v107 = v126;
    sub_2418A8328();
    v108 = v128;
    v109 = v128;
    v110 = v108;
    v111 = sub_2418A8334();
    v112 = sub_2418AA044();
    if (os_log_type_enabled(v111, v112))
    {
      v113 = swift_slowAlloc();
      v114 = swift_slowAlloc();
      v148[0] = v114;
      *(_DWORD *)v113 = 136446466;
      v115 = sub_2418AA5D8();
      v147 = sub_24176024C(v115, v116, v148);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v113 + 12) = 2080;
      v147 = (uint64_t)v108;
      v117 = v108;
      sub_24172570C(0, (unint64_t *)&qword_25714F368, (uint64_t (*)(uint64_t))sub_2417609B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v118 = sub_2418A9DF8();
      v147 = sub_24176024C(v118, v119, v148);
      v108 = v128;
      sub_2418AA1F4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24171C000, v111, v112, "[%{public}s] Skipping update due to fetch error: %s", (uint8_t *)v113, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v114, -1, -1);
      MEMORY[0x24269D548](v113, -1, -1);
    }
    else
    {

    }
    (*(void (**)(_BYTE *, uint64_t))(v137 + 8))(v107, v138);
    v98 = 0;
    v99 = v108;
  }
  else
  {
    v100 = v127;
    sub_2418A8328();
    v101 = sub_2418A8334();
    v102 = sub_2418AA044();
    if (os_log_type_enabled(v101, v102))
    {
      v103 = (uint8_t *)swift_slowAlloc();
      v104 = swift_slowAlloc();
      v148[0] = v104;
      *(_DWORD *)v103 = 136446210;
      v105 = sub_2418AA5D8();
      v147 = sub_24176024C(v105, v106, v148);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v101, v102, "[%{public}s] Skipping update for incompatible chart points", v103, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v104, -1, -1);
      MEMORY[0x24269D548](v103, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v137 + 8))(v100, v138);
    v98 = 0;
    v99 = 0;
  }
LABEL_29:
  v140(v98, v99);

}

uint64_t sub_2417AFF00(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t j;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = a1;
  v9 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_2418AA338();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x24269CAD4](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        sub_2418A9B4C();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_2418AA320();
        sub_2418AA344();
        sub_2418AA350();
        sub_2418AA32C();
        if (v4 == v2)
          return v9;
      }
      __break(1u);
    }
    else
    {
      for (j = 0; ; ++j)
      {
        v6 = j + 1;
        if (__OFADD__(j, 1))
          break;
        sub_2418A9B4C();
        v7 = swift_dynamicCastClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v7;
        swift_unknownObjectRetain();
        sub_2418AA320();
        sub_2418AA344();
        sub_2418AA350();
        sub_2418AA32C();
        if (v6 == v2)
          return v9;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_2418AA398();
    swift_bridgeObjectRelease();
    sub_2418AA338();
    swift_bridgeObjectRetain();
    v2 = sub_2418AA398();
    swift_bridgeObjectRelease();
  }
  return v9;
}

void sub_2417B00E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v6)(uint64_t, uint64_t, void *);
  uint64_t v7;
  id v8;

  v6 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  sub_2417B0E8C();
  v7 = sub_2418A9EB8();
  swift_retain();
  v8 = a4;
  v6(v7, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();

}

void sub_2417B026C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_2418A7F08();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

uint64_t sub_2417B02C4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem);
  if (v1)
  {
    v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem);
  }
  else
  {
    v2 = (*(uint64_t (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))(MEMORY[0x24BEE4AF8]);
    v1 = 0;
  }
  v3 = v1;
  return v2;
}

uint64_t sub_2417B03A8()
{
  return 0;
}

void sub_2417B03B8()
{
  sub_2418AA380();
  __break(1u);
}

id sub_2417B0410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v18;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A5D0]), sel_init);
  v6 = (void *)objc_opt_self();
  v7 = (void *)sub_2418A9DB0();
  v8 = objc_msgSend(v6, sel_hk_chartOverlayAccessibilityIdentifier_, v7);

  if (v8)
  {
    v18 = 0;
    sub_2418A9DD4();

    v8 = 0;
  }
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v8, v18);

  v9 = (void *)sub_2418A9DB0();
  objc_msgSend(v5, sel_setTitle_, v9);

  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
  v12 = objc_msgSend(v10, sel_defaultContextViewColorsUsingColor_, v11);

  objc_msgSend(v5, sel_setMetricColors_, v12);
  v13 = objc_msgSend(v10, sel_mindfulnessColors);
  objc_msgSend(v5, sel_setSelectedMetricColors_, v13);

  v14 = (void *)sub_2418A9DB0();
  if (a4)
  {
    objc_msgSend(v5, sel_setValue_, v14);

    swift_bridgeObjectRetain();
    v15 = (void *)sub_2418A9DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = (id)HKUILocalizedString();

    objc_msgSend(v5, sel_setValue_, v16);
    v15 = (void *)sub_2418A9DB0();
  }
  objc_msgSend(v5, sel_setUnit_, v15);

  return v5;
}

uint64_t type metadata accessor for StateOfMindOverlayContext()
{
  return objc_opt_self();
}

id StateOfMindOverlayContext.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StateOfMindOverlayContext.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StateOfMindOverlayContext.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindOverlayContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2417B07FC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(_QWORD, _QWORD);
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t ObjectType;
  uint64_t v53;
  void (*v54)(_QWORD, _QWORD);
  uint64_t aBlock[7];

  v5 = v4;
  v53 = a4;
  v54 = a3;
  v48 = a1;
  ObjectType = swift_getObjectType();
  v7 = sub_2418A8340();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v51 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_2418A7DA0();
  v11 = *(_QWORD *)(v49 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v49, v13);
  v14 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2418A8100();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void **)((char *)v5 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType);
  v50 = a2;
  v21 = objc_msgSend(v20, sel_graphSeriesForTimeScope_, a2);
  if (v21)
  {
    v22 = v21;
    v51 = *(char **)((char *)v5 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController);
    v23 = v48;
    sub_2418A7D94();
    v47 = sub_2418A80AC();
    v24 = *(void (**)(char *, uint64_t))(v16 + 8);
    v24(v19, v15);
    sub_2418A7D88();
    v25 = (void *)sub_2418A80AC();
    v24(v19, v15);
    v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v27 = v23;
    v28 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v49);
    v29 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v30 = (v12 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v32 + v29, v14, v28);
    v33 = (_QWORD *)(v32 + v30);
    v34 = v53;
    *v33 = v54;
    v33[1] = v34;
    *(_QWORD *)(v32 + v31) = ObjectType;
    aBlock[4] = (uint64_t)sub_2417B0DF8;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2417B00E0;
    aBlock[3] = (uint64_t)&block_descriptor_3;
    v35 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    v36 = (void *)v47;
    objc_msgSend(v51, sel_cachedDataForCustomGraphSeries_timeScope_resolution_startDate_endDate_completion_, v22, v50, 0, v47, v25, v35);
    _Block_release(v35);

  }
  else
  {
    v50 = v8;
    sub_2418A8328();
    v37 = sub_2418A8334();
    v38 = sub_2418AA044();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      aBlock[0] = v40;
      *(_DWORD *)v39 = 136446210;
      v41 = sub_2418AA5D8();
      aBlock[6] = sub_24176024C(v41, v42, aBlock);
      sub_2418AA1F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24171C000, v37, v38, "[%{public}s] Cannot update context item without a graph series", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269D548](v40, -1, -1);
      MEMORY[0x24269D548](v39, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v7);
    v43 = v54;
    v44 = (*(uint64_t (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v5) + 0xC0))(MEMORY[0x24BEE4AF8]);
    v45 = *(void **)((char *)v5 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem);
    *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem) = v44;

    v43(0, 0);
  }
}

uint64_t method lookup function for StateOfMindOverlayContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.__allocating_init(accessibilityIdentifier:applicationItems:overlayChartController:overlayPredicate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.sampleTypeForDateRangeUpdates()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.overlayDisplayType(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.updateItem(for:overlayController:timeScope:resolution:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.contextItemForLastUpdate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.resolution(for:traitResolution:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.contextItem(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.stateOfMindContextItem(title:value:unit:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t sub_2417B0D0C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_2417B0D30(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_2417B026C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_2417B0D38()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2417B0D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2418A7DA0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2417B0DF8(uint64_t a1, int a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(sub_2418A7DA0() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2417AEFA4(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v8, *(_QWORD *)(v3 + v9), *(_QWORD *)(v3 + v9 + 8), *(_QWORD *)(v3 + ((v9 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_2417B0E8C()
{
  unint64_t result;

  result = qword_25714F330;
  if (!qword_25714F330)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25714F330);
  }
  return result;
}

uint64_t sub_2417B0EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_2418A7DA0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_2417B0FA4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_2418A7DA0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_2417AF2F0(*(_QWORD **)(v0 + 16), v0 + v2, *(void (**)(uint64_t, id))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

void sub_2417B1018()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714F358)
  {
    sub_24172570C(255, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714F358);
  }
}

uint64_t sub_2417B1090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24172570C(0, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2417B10EC(uint64_t a1)
{
  uint64_t v2;

  sub_24172570C(0, (unint64_t *)&qword_25714F360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2417B1140(uint64_t a1)
{
  uint64_t v2;

  sub_2417B1018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_2417B1184(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(uint64_t *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v82 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      v81 = v8;
      v80 = v6;
      if (v82(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2418A87B4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v13, v14, v15);
      *((_BYTE *)a1 + v11[6]) = *((_BYTE *)a2 + v11[6]);
      v17 = v11[7];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_2418A84E4();
      v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v79(v18, v19, v20);
      v21 = v11[8];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      if (v82((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v22, v23, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v22, 0, 1, v7);
      }
      v25 = _s6StylesV8TimelineVMa(0);
      v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      v26 = v11[9];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      if (v82((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v27, v28, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v27, 0, 1, v7);
      }
      v30 = _s6StylesV6NoDataVMa(0);
      v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      v31 = v11[10];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      if (v82((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v32, v33, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v32, 0, 1, v7);
      }
      v35 = _s6StylesV11PlaceholderVMa(0);
      v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      v36 = v11[11];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      if (v82((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v37, v38, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v37, 0, 1, v7);
      }
      v40 = _s6StylesV6SymbolVMa(0);
      v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      v41 = v11[12];
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      if (v82((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v42, v43, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v42, 0, 1, v7);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v16(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v79(&v42[v45[7]], &v43[v45[7]], v20);
      v46 = v11[13];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      if (v82((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v81;
      }
      else
      {
        v50 = v81;
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v47, v48, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v47, 0, 1, v7);
      }
      v51 = _s6StylesV5EmptyVMa(0);
      v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      v52 = v11[14];
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      if (v82((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      v56 = _s6StylesV5DailyVMa(0);
      v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      v57 = v11[15];
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      if (v82((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      v61 = _s6StylesV9MomentaryVMa(0);
      v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      v62 = v11[16];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      if (v82((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      v66 = _s6StylesV6HeaderVMa(0);
      v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      v67 = v11[17];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      if (v82((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      v71 = _s6StylesV11ChartButtonVMa(0);
      v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      v72 = v11[18];
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      if (v82((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      v76 = _s6StylesV15LogButtonFooterVMa(0);
      v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      v6 = v80;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    v77 = *(int *)(v6 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
    *(uint64_t *)((char *)a1 + v77) = *(uint64_t *)((char *)a2 + v77);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2417B1B48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v34)(uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_2418A8EB0();
    v3 = *(_QWORD *)(v2 - 8);
    v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    v5 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v6 = a1 + v5[5];
    v7 = sub_2418A87B4();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v8(v6, v7);
    v9 = a1 + v5[7];
    v10 = sub_2418A84E4();
    v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v34(v9, v10);
    v11 = a1 + v5[8];
    if (!v4(v11, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v2);
    v12 = _s6StylesV8TimelineVMa(0);
    v8(v11 + *(int *)(v12 + 20), v7);
    v13 = a1 + v5[9];
    if (!v4(v13, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v2);
    v14 = _s6StylesV6NoDataVMa(0);
    v8(v13 + *(int *)(v14 + 20), v7);
    v15 = a1 + v5[10];
    if (!v4(v15, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
    v16 = _s6StylesV11PlaceholderVMa(0);
    v8(v15 + *(int *)(v16 + 20), v7);
    v17 = a1 + v5[11];
    if (!v4(v17, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v2);
    v18 = _s6StylesV6SymbolVMa(0);
    v8(v17 + *(int *)(v18 + 20), v7);
    v19 = a1 + v5[12];
    if (!v4(v19, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    v20 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v8(v19 + *(int *)(v20 + 20), v7);
    v34(v19 + *(int *)(v20 + 28), v10);
    v21 = a1 + v5[13];
    if (!v4(v21, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v2);
    v22 = _s6StylesV5EmptyVMa(0);
    v8(v21 + *(int *)(v22 + 20), v7);
    v23 = a1 + v5[14];
    if (!v4(v23, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v23, v2);
    v24 = _s6StylesV5DailyVMa(0);
    v8(v23 + *(int *)(v24 + 20), v7);
    v25 = a1 + v5[15];
    if (!v4(v25, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v25, v2);
    v26 = _s6StylesV9MomentaryVMa(0);
    v8(v25 + *(int *)(v26 + 20), v7);
    v27 = a1 + v5[16];
    if (!v4(v27, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v2);
    v28 = _s6StylesV6HeaderVMa(0);
    v8(v27 + *(int *)(v28 + 20), v7);
    v29 = a1 + v5[17];
    if (!v4(v29, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v29, v2);
    v30 = _s6StylesV11ChartButtonVMa(0);
    v8(v29 + *(int *)(v30 + 20), v7);
    v31 = a1 + v5[18];
    if (!v4(v31, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v31, v2);
    v32 = _s6StylesV15LogButtonFooterVMa(0);
    v8(v31 + *(int *)(v32 + 20), v7);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2417B1F88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(_QWORD *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    v80 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
    v79 = v7;
    if (v80(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2418A87B4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2418A84E4();
    v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v77(v16, v17, v18);
    v19 = v9[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v80((_QWORD *)((char *)a2 + v19), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v20, 0, 1, v6);
    }
    v23 = _s6StylesV8TimelineVMa(0);
    v14(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    v24 = v9[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v78 = a3;
    if (v80((_QWORD *)((char *)a2 + v24), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v25, 0, 1, v6);
    }
    v28 = _s6StylesV6NoDataVMa(0);
    v14(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    v29 = v9[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v80((_QWORD *)((char *)a2 + v29), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v30, 0, 1, v6);
    }
    v33 = _s6StylesV11PlaceholderVMa(0);
    v14(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    v34 = v9[11];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v80((_QWORD *)((char *)a2 + v34), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v35, 0, 1, v6);
    }
    v38 = _s6StylesV6SymbolVMa(0);
    v14(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    v39 = v9[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    if (v80((_QWORD *)((char *)a2 + v39), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v40, v41, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v40, 0, 1, v6);
    }
    v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v77(&v40[v43[7]], &v41[v43[7]], v18);
    v44 = v9[13];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v80((_QWORD *)((char *)a2 + v44), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v79;
    }
    else
    {
      v48 = v79;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v45, v46, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v45, 0, 1, v6);
    }
    v49 = _s6StylesV5EmptyVMa(0);
    v14(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    v50 = v9[14];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    if (v80((_QWORD *)((char *)a2 + v50), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    v54 = _s6StylesV5DailyVMa(0);
    v14(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    v55 = v9[15];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v80((_QWORD *)((char *)a2 + v55), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v78;
    v59 = _s6StylesV9MomentaryVMa(0);
    v14(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    v60 = v9[16];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    if (v80((_QWORD *)((char *)a2 + v60), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    v64 = _s6StylesV6HeaderVMa(0);
    v14(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    v65 = v9[17];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    if (v80((_QWORD *)((char *)a2 + v65), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    v69 = _s6StylesV11ChartButtonVMa(0);
    v14(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    v70 = v9[18];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    if (v80((_QWORD *)((char *)a2 + v70), 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    v74 = _s6StylesV15LogButtonFooterVMa(0);
    v14(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v75 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v75) = *(_QWORD *)((char *)a2 + v75);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2417B2920(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(_QWORD *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      v80 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48);
      v78 = a3;
      v79 = v8;
      if (v80(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2418A87B4();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      v15(v12, v13, v14);
      *((_BYTE *)a1 + v10[6]) = *((_BYTE *)a2 + v10[6]);
      v16 = v10[7];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_2418A84E4();
      v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v77(v17, v18, v19);
      v20 = v10[8];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      if (v80((_QWORD *)((char *)a2 + v20), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v21, v22, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v21, 0, 1, v7);
      }
      v24 = _s6StylesV8TimelineVMa(0);
      v15(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      v25 = v10[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      if (v80((_QWORD *)((char *)a2 + v25), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v26, v27, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v26, 0, 1, v7);
      }
      v29 = _s6StylesV6NoDataVMa(0);
      v15(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      v30 = v10[10];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      if (v80((_QWORD *)((char *)a2 + v30), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v31, v32, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v31, 0, 1, v7);
      }
      v34 = _s6StylesV11PlaceholderVMa(0);
      v15(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v14);
      v35 = v10[11];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      if (v80((_QWORD *)((char *)a2 + v35), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v36, v37, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v36, 0, 1, v7);
      }
      v39 = _s6StylesV6SymbolVMa(0);
      v15(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v14);
      v40 = v10[12];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      if (v80((_QWORD *)((char *)a2 + v40), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v41, v42, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v41, 0, 1, v7);
      }
      v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v15(&v41[v44[5]], &v42[v44[5]], v14);
      v41[v44[6]] = v42[v44[6]];
      v77(&v41[v44[7]], &v42[v44[7]], v19);
      v45 = v10[13];
      v46 = (char *)a1 + v45;
      v47 = (char *)a2 + v45;
      if (v80((_QWORD *)((char *)a2 + v45), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        v49 = v79;
      }
      else
      {
        v49 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v46, v47, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v46, 0, 1, v7);
      }
      v50 = _s6StylesV5EmptyVMa(0);
      v15(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v14);
      v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
      v51 = v10[14];
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      if (v80((_QWORD *)((char *)a2 + v51), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v52, v53, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v7);
      }
      v55 = _s6StylesV5DailyVMa(0);
      v15(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v14);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      v56 = v10[15];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      if (v80((_QWORD *)((char *)a2 + v56), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v57, v58, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v7);
      }
      v60 = _s6StylesV9MomentaryVMa(0);
      v15(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v14);
      v61 = v10[16];
      v62 = (char *)a1 + v61;
      v63 = (char *)a2 + v61;
      if (v80((_QWORD *)((char *)a2 + v61), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v62, v63, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v7);
      }
      v65 = _s6StylesV6HeaderVMa(0);
      v15(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v14);
      v66 = v10[17];
      v67 = (char *)a1 + v66;
      v68 = (char *)a2 + v66;
      if (v80((_QWORD *)((char *)a2 + v66), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v67, v68, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v7);
      }
      v70 = _s6StylesV11ChartButtonVMa(0);
      v15(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v14);
      v71 = v10[18];
      v72 = (char *)a1 + v71;
      v73 = (char *)a2 + v71;
      if (v80((_QWORD *)((char *)a2 + v71), 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v72, v73, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v7);
      }
      v75 = _s6StylesV15LogButtonFooterVMa(0);
      v15(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v14);
      a3 = v78;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_2417B32F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);

  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    v81 = v9;
    if (v82(a2, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2418A87B4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    v17 = v11[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_2418A84E4();
    v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
    v79(v18, v19, v20);
    v21 = v11[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (v82(&a2[v21], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v22, v23, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v22, 0, 1, v8);
    }
    v25 = _s6StylesV8TimelineVMa(0);
    v16(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    v26 = v11[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v80 = a3;
    if (v82(&a2[v26], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v27, v28, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v27, 0, 1, v8);
    }
    v30 = _s6StylesV6NoDataVMa(0);
    v16(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    v31 = v11[10];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (v82(&a2[v31], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v32, v33, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v32, 0, 1, v8);
    }
    v35 = _s6StylesV11PlaceholderVMa(0);
    v16(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    v36 = v11[11];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if (v82(&a2[v36], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v37, v38, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v37, 0, 1, v8);
    }
    v40 = _s6StylesV6SymbolVMa(0);
    v16(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    v41 = v11[12];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v82(&a2[v41], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v42, v43, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v42, 0, 1, v8);
    }
    v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v16(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v79(&v42[v45[7]], &v43[v45[7]], v20);
    v46 = v11[13];
    v47 = &a1[v46];
    v48 = &a2[v46];
    if (v82(&a2[v46], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = v81;
    }
    else
    {
      v50 = v81;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v47, v48, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v47, 0, 1, v8);
    }
    v51 = _s6StylesV5EmptyVMa(0);
    v16(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    v52 = v11[14];
    v53 = &a1[v52];
    v54 = &a2[v52];
    if (v82(&a2[v52], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    v56 = _s6StylesV5DailyVMa(0);
    v16(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    v57 = v11[15];
    v58 = &a1[v57];
    v59 = &a2[v57];
    if (v82(&a2[v57], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v80;
    v61 = _s6StylesV9MomentaryVMa(0);
    v16(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    v62 = v11[16];
    v63 = &a1[v62];
    v64 = &a2[v62];
    if (v82(&a2[v62], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    v66 = _s6StylesV6HeaderVMa(0);
    v16(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    v67 = v11[17];
    v68 = &a1[v67];
    v69 = &a2[v67];
    if (v82(&a2[v67], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    v71 = _s6StylesV11ChartButtonVMa(0);
    v16(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    v72 = v11[18];
    v73 = &a1[v72];
    v74 = &a2[v72];
    if (v82(&a2[v72], 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    v76 = _s6StylesV15LogButtonFooterVMa(0);
    v16(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v77 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v77] = *(_QWORD *)&a2[v77];
  return a1;
}

char *sub_2417B3C78(char *a1, char *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_24173FC60((uint64_t)a1, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2418A8EB0();
      v10 = *(_QWORD *)(v9 - 8);
      v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      v80 = a3;
      v81 = v10;
      if (v82(a2, 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      v13 = v12[5];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_2418A87B4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v17(v14, v15, v16);
      a1[v12[6]] = a2[v12[6]];
      v18 = v12[7];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = sub_2418A84E4();
      v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
      v79(v19, v20, v21);
      v22 = v12[8];
      v23 = &a1[v22];
      v24 = &a2[v22];
      if (v82(&a2[v22], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v23, v24, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v23, 0, 1, v9);
      }
      v26 = _s6StylesV8TimelineVMa(0);
      v17(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      v27 = v12[9];
      v28 = &a1[v27];
      v29 = &a2[v27];
      if (v82(&a2[v27], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v28, v29, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v28, 0, 1, v9);
      }
      v31 = _s6StylesV6NoDataVMa(0);
      v17(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      v32 = v12[10];
      v33 = &a1[v32];
      v34 = &a2[v32];
      if (v82(&a2[v32], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v33, v34, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v33, 0, 1, v9);
      }
      v36 = _s6StylesV11PlaceholderVMa(0);
      v17(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v16);
      v37 = v12[11];
      v38 = &a1[v37];
      v39 = &a2[v37];
      if (v82(&a2[v37], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v38, v39, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v38, 0, 1, v9);
      }
      v41 = _s6StylesV6SymbolVMa(0);
      v17(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v16);
      v42 = v12[12];
      v43 = &a1[v42];
      v44 = &a2[v42];
      if (v82(&a2[v42], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v43, v44, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v43, 0, 1, v9);
      }
      v46 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v17(&v43[v46[5]], &v44[v46[5]], v16);
      v43[v46[6]] = v44[v46[6]];
      v79(&v43[v46[7]], &v44[v46[7]], v21);
      v47 = v12[13];
      v48 = &a1[v47];
      v49 = &a2[v47];
      if (v82(&a2[v47], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        v51 = v81;
      }
      else
      {
        v51 = v81;
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v48, v49, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v48, 0, 1, v9);
      }
      v52 = _s6StylesV5EmptyVMa(0);
      v17(&v48[*(int *)(v52 + 20)], &v49[*(int *)(v52 + 20)], v16);
      v48[*(int *)(v52 + 24)] = v49[*(int *)(v52 + 24)];
      v53 = v12[14];
      v54 = &a1[v53];
      v55 = &a2[v53];
      if (v82(&a2[v53], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v54, v55, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v9);
      }
      v57 = _s6StylesV5DailyVMa(0);
      v17(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      v58 = v12[15];
      v59 = &a1[v58];
      v60 = &a2[v58];
      if (v82(&a2[v58], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v59, v60, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v59, 0, 1, v9);
      }
      v62 = _s6StylesV9MomentaryVMa(0);
      v17(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v16);
      v63 = v12[16];
      v64 = &a1[v63];
      v65 = &a2[v63];
      if (v82(&a2[v63], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v64, v65, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v64, 0, 1, v9);
      }
      v67 = _s6StylesV6HeaderVMa(0);
      v17(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v16);
      v68 = v12[17];
      v69 = &a1[v68];
      v70 = &a2[v68];
      if (v82(&a2[v68], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v69, v70, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v69, 0, 1, v9);
      }
      v72 = _s6StylesV11ChartButtonVMa(0);
      v17(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v16);
      v73 = v12[18];
      v74 = &a1[v73];
      v75 = &a2[v73];
      if (v82(&a2[v73], 1, v9))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v74, v75, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v74, 0, 1, v9);
      }
      v77 = _s6StylesV15LogButtonFooterVMa(0);
      v17(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v16);
      swift_storeEnumTagMultiPayload();
      a3 = v80;
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2417B4634()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417B4640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2417B46D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2417B46E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_24172570C(0, qword_25714BFF8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
}

uint64_t _s20EntryMomentsDataViewVMa()
{
  uint64_t result;

  result = qword_25714F3D8;
  if (!qword_25714F3D8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417B47AC()
{
  unint64_t v0;

  sub_24172570C(319, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2417B483C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417B484C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  uint64_t (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  BOOL v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v97 = a3;
  v5 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v83 = (uint64_t)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = _s5EntryVMa();
  v89 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92, v8);
  v82 = (uint64_t)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2417AB88C();
  v88 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v95 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24172570C(0, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v91 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v98 = (uint64_t)&v81 - v19;
  MEMORY[0x24BDAC7A8](v18, v20);
  v90 = (uint64_t)&v81 - v21;
  sub_2417B5224();
  v23 = v22;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v27 = (uint64_t *)((char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (uint64_t *)((char *)&v81 - v29);
  v31 = _s19EntryMomentDataViewVMa();
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (uint64_t *)((char *)&v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2417B528C();
  v93 = v35;
  MEMORY[0x24BDAC7A8](v35, v36);
  v94 = (uint64_t)&v81 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(int *)(v23 + 48);
  v39 = (uint64_t)v30 + v38;
  v40 = (uint64_t)a1 + v38;
  v87 = a1;
  v41 = *a1;
  *v30 = v41;
  v84 = v40;
  sub_2417289A8(v40, (uint64_t)v30 + v38, (uint64_t (*)(_QWORD))_s5EntryVMa);
  v85 = _s20EntryMomentsDataViewVMa();
  v42 = *(int *)(v85 + 24);
  v96 = a2;
  v43 = *(_QWORD **)(a2 + v42);
  v99 = v41;
  v44 = sub_2418AA4AC();
  v46 = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v43 = sub_241802714(0, v43[2] + 1, 1, v43);
  v48 = v43[2];
  v47 = v43[3];
  if (v48 >= v47 >> 1)
    v43 = sub_241802714((_QWORD *)(v47 > 1), v48 + 1, 1, v43);
  v43[2] = v48 + 1;
  v49 = &v43[2 * v48];
  v49[4] = v44;
  v49[5] = v46;
  swift_bridgeObjectRelease();
  *v34 = swift_getKeyPath();
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  sub_241731B4C(v39, (uint64_t)v34 + *(int *)(v31 + 20), (uint64_t (*)(_QWORD))_s5EntryVMa);
  *(uint64_t *)((char *)v34 + *(int *)(v31 + 24)) = (uint64_t)v43;
  v86 = sub_2418A90F0();
  v50 = (uint64_t)v27 + *(int *)(v23 + 48);
  *v27 = *v87;
  sub_2417289A8(v84, v50, (uint64_t (*)(_QWORD))_s5EntryVMa);
  v51 = v90;
  sub_241731B4C(v50, v90, (uint64_t (*)(_QWORD))_s5EntryVMa);
  v52 = v89;
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56);
  v54 = 1;
  v55 = v92;
  v53(v51, 0, 1, v92);
  v56 = *(_QWORD *)(v96 + *(int *)(v85 + 20));
  v57 = *(_QWORD *)(v56 + 16);
  if (v57)
  {
    v58 = v98;
    sub_2417289A8(v56+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * (v57 - 1), v98, (uint64_t (*)(_QWORD))_s5EntryVMa);
    v54 = 0;
    v59 = (uint64_t)v95;
    v60 = (uint64_t)v91;
  }
  else
  {
    v59 = (uint64_t)v95;
    v60 = (uint64_t)v91;
    v58 = v98;
  }
  v53(v58, v54, 1, v55);
  v61 = v59 + *(int *)(v88 + 48);
  sub_241767C80(v51, v59);
  sub_241767C80(v58, v61);
  v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  if (v62(v59, 1, v55) != 1)
  {
    sub_241767C80(v59, v60);
    if (v62(v61, 1, v55) != 1)
    {
      v66 = v82;
      sub_241731B4C(v61, v82, (uint64_t (*)(_QWORD))_s5EntryVMa);
      v67 = sub_2418533AC(v60, v66);
      sub_24172588C(v66, (uint64_t (*)(_QWORD))_s5EntryVMa);
      v68 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
      sub_24173FC60(v98, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      sub_24173FC60(v51, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v68);
      sub_24172588C(v60, (uint64_t (*)(_QWORD))_s5EntryVMa);
      sub_24173FC60(v59, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v68);
      if (v67)
        goto LABEL_16;
LABEL_15:
      v69 = v83;
      sub_241860D60(v83);
      sub_24172588C(v69, type metadata accessor for StateOfMindTimeline.Styles);
      goto LABEL_16;
    }
    v65 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    sub_24173FC60(v98, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_24173FC60(v51, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v65);
    sub_24172588C(v60, (uint64_t (*)(_QWORD))_s5EntryVMa);
LABEL_13:
    sub_24172588C(v59, (uint64_t (*)(_QWORD))sub_2417AB88C);
    goto LABEL_15;
  }
  v63 = v58;
  v64 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_24173FC60(v63, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_24173FC60(v51, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, v64);
  if (v62(v61, 1, v55) != 1)
    goto LABEL_13;
  sub_24173FC60(v59, (unint64_t *)&qword_25714CBE8, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
LABEL_16:
  sub_2418A84A8();
  v71 = v70;
  v73 = v72;
  v75 = v74;
  v77 = v76;
  v78 = v94;
  sub_2417289A8((uint64_t)v34, v94, (uint64_t (*)(_QWORD))_s19EntryMomentDataViewVMa);
  v79 = v78 + *(int *)(v93 + 36);
  *(_BYTE *)v79 = v86;
  *(_QWORD *)(v79 + 8) = v71;
  *(_QWORD *)(v79 + 16) = v73;
  *(_QWORD *)(v79 + 24) = v75;
  *(_QWORD *)(v79 + 32) = v77;
  *(_BYTE *)(v79 + 40) = 0;
  sub_24172588C((uint64_t)v34, (uint64_t (*)(_QWORD))_s19EntryMomentDataViewVMa);
  return sub_241731B4C(v78, v97, (uint64_t (*)(_QWORD))sub_2417B528C);
}

uint64_t sub_2417B4F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  *(_QWORD *)a3 = sub_2418A8C64();
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  sub_2417B50EC();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_2418407E8(v7);
  swift_bridgeObjectRelease();
  v12[1] = v8;
  swift_getKeyPath();
  sub_2417289A8(v3, (uint64_t)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))_s20EntryMomentsDataViewVMa);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  sub_241731B4C((uint64_t)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(_QWORD))_s20EntryMomentsDataViewVMa);
  sub_24172570C(0, &qword_25714F428, (uint64_t (*)(uint64_t))sub_2417B5224, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2417B528C();
  sub_2417B52E8();
  sub_24172159C(&qword_25714F448, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t)&unk_2418D99F8);
  sub_2417B5818();
  return sub_2418A9888();
}

void sub_2417B50EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F418)
  {
    sub_2417B5150();
    v0 = sub_2418A86E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F418);
  }
}

void sub_2417B5150()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F420)
  {
    sub_24172570C(255, &qword_25714F428, (uint64_t (*)(uint64_t))sub_2417B5224, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    _s5EntryVMa();
    sub_2417B528C();
    sub_2417B52E8();
    sub_24172159C(&qword_25714F448, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t)&unk_2418D99F8);
    v0 = sub_2418A98A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F420);
  }
}

void sub_2417B5224()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25714F430)
  {
    _s5EntryVMa();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25714F430);
  }
}

void sub_2417B528C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F438)
  {
    _s19EntryMomentDataViewVMa();
    v0 = sub_2418A87FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F438);
  }
}

unint64_t sub_2417B52E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25714F440;
  if (!qword_25714F440)
  {
    sub_24172570C(255, &qword_25714F428, (uint64_t (*)(uint64_t))sub_2417B5224, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x24269D47C](MEMORY[0x24BEE12D8], v1);
    atomic_store(result, (unint64_t *)&qword_25714F440);
  }
  return result;
}

uint64_t sub_2417B5348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(_s20EntryMomentsDataViewVMa() - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_24172570C(0, &qword_25714BFE8, type metadata accessor for StateOfMindTimeline.Styles, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = sub_2418A8EB0();
    v4 = *(_QWORD *)(v3 - 8);
    v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (!v5(v2, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    v6 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    v7 = v2 + v6[5];
    v8 = sub_2418A87B4();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v7, v8);
    v10 = v2 + v6[7];
    v11 = sub_2418A84E4();
    v35 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v35(v10, v11);
    v12 = v2 + v6[8];
    if (!v5(v12, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v3);
    v13 = _s6StylesV8TimelineVMa(0);
    v9(v12 + *(int *)(v13 + 20), v8);
    v14 = v2 + v6[9];
    if (!v5(v14, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v3);
    v15 = _s6StylesV6NoDataVMa(0);
    v9(v14 + *(int *)(v15 + 20), v8);
    v16 = v2 + v6[10];
    if (!v5(v16, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v16, v3);
    v17 = _s6StylesV11PlaceholderVMa(0);
    v9(v16 + *(int *)(v17 + 20), v8);
    v18 = v2 + v6[11];
    if (!v5(v18, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v18, v3);
    v19 = _s6StylesV6SymbolVMa(0);
    v9(v18 + *(int *)(v19 + 20), v8);
    v20 = v2 + v6[12];
    if (!v5(v20, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v20, v3);
    v21 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v9(v20 + *(int *)(v21 + 20), v8);
    v35(v20 + *(int *)(v21 + 28), v11);
    v22 = v2 + v6[13];
    if (!v5(v22, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v22, v3);
    v23 = _s6StylesV5EmptyVMa(0);
    v9(v22 + *(int *)(v23 + 20), v8);
    v24 = v2 + v6[14];
    if (!v5(v24, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v24, v3);
    v25 = _s6StylesV5DailyVMa(0);
    v9(v24 + *(int *)(v25 + 20), v8);
    v26 = v2 + v6[15];
    if (!v5(v26, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v26, v3);
    v27 = _s6StylesV9MomentaryVMa(0);
    v9(v26 + *(int *)(v27 + 20), v8);
    v28 = v2 + v6[16];
    if (!v5(v28, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v28, v3);
    v29 = _s6StylesV6HeaderVMa(0);
    v9(v28 + *(int *)(v29 + 20), v8);
    v30 = v2 + v6[17];
    if (!v5(v30, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v30, v3);
    v31 = _s6StylesV11ChartButtonVMa(0);
    v9(v30 + *(int *)(v31 + 20), v8);
    v32 = v2 + v6[18];
    if (!v5(v32, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v32, v3);
    v33 = _s6StylesV15LogButtonFooterVMa(0);
    v9(v32 + *(int *)(v33 + 20), v8);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2417B57CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s20EntryMomentsDataViewVMa() - 8) + 80);
  return sub_2417B484C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_2417B5818()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25714F450;
  if (!qword_25714F450)
  {
    sub_2417B528C();
    v2 = v1;
    v3[0] = sub_24172159C(&qword_25714F458, (uint64_t (*)(uint64_t))_s19EntryMomentDataViewVMa, (uint64_t)&unk_2418D40E4);
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24269D47C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_25714F450);
  }
  return result;
}

uint64_t sub_2417B589C()
{
  return sub_24172159C(&qword_25714F460, (uint64_t (*)(uint64_t))sub_2417B58C8, MEMORY[0x24BDF4700]);
}

void sub_2417B58C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25714F468)
  {
    sub_2417B5150();
    sub_2417B5928();
    v0 = sub_2418A97EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25714F468);
  }
}

unint64_t sub_2417B5928()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_25714F470;
  if (!qword_25714F470)
  {
    sub_2417B5150();
    v2 = v1;
    v3 = sub_2417B5818();
    result = MEMORY[0x24269D47C](MEMORY[0x24BDF4A08], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_25714F470);
  }
  return result;
}

uint64_t *sub_2417B5988(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2418A8EB0();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = *(int *)(a3 + 20);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_2417B5BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2418A8EB0();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v6 = a1 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v7 = sub_2418A87B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = a1 + *(int *)(a2 + 20);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v9 = sub_2418A84E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *sub_2417B5CE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2418A8EB0();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = *(int *)(a3 + 20);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_2418A84E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_2417B5ED8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;

  if (a1 != a2)
  {
    sub_24172B778((uint64_t)a1, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2418A8EB0();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = *(int *)(a3 + 20);
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)a1 + v13, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v16, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2418A84E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_2417B6110(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2418A8EB0();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_2418A87B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  sub_24172570C(0, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_2418A84E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v16, v17, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2417B6300(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_24172B778((uint64_t)a1, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_24172570C(0, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2418A8EB0();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        sub_24172570C(0, (unint64_t *)&qword_25714BFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v11 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = sub_2418A87B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v15 = *(int *)(a3 + 20);
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418];
    sub_24172B778((uint64_t)&a1[v15], (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
    sub_24172570C(0, (unint64_t *)&unk_257154F20, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    v20 = v19;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_2418A84E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v16, v17, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_2417B6530()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2417B653C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_2417B6624()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2417B6630(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_24172570C(0, &qword_25714E508, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_5:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_24172570C(0, &qword_25714C0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
}

uint64_t type metadata accessor for ValenceSliderCaptions()
{
  uint64_t result;

  result = qword_25714F4D0;
  if (!qword_25714F4D0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2417B6740()
{
  unint64_t v0;
  unint64_t v1;

  sub_24172570C(319, &qword_25714D430, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_24172570C(319, (unint64_t *)&unk_257154F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2417B67FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2417B680C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t *v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v58[2];
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v64 = a1;
  sub_2417B82B0();
  v60 = v1;
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v65 = (uint64_t)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v62 = (uint64_t)v58 - v6;
  sub_241728250(0, &qword_25714F528, sub_2417B7C50, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v63 = (uint64_t)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v61 = (uint64_t)v58 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v66 = (uint64_t)v58 - v16;
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)v58 - v18;
  if (qword_25714B958 != -1)
    swift_once();
  v20 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v21 = sub_2418A7EFC();
  v23 = v22;
  swift_bridgeObjectRelease();

  v24 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v25 = sub_2418A7EFC();
  v27 = v26;
  swift_bridgeObjectRelease();

  sub_2417B6E00(v21, v23, v25, v27, 1, 0, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v29 = sub_2418A7EFC();
  v31 = v30;
  swift_bridgeObjectRelease();

  v32 = (id)qword_25715E110;
  v59 = v19;
  v33 = v32;
  swift_bridgeObjectRetain();
  v58[1] = 0xD000000000000026;
  v34 = sub_2418A7EFC();
  v36 = v35;
  swift_bridgeObjectRelease();

  sub_2417B6E00(v29, v31, v34, v36, 2, 0, v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v38 = sub_2418A7EFC();
  v40 = v39;
  swift_bridgeObjectRelease();

  v41 = (id)qword_25715E110;
  swift_bridgeObjectRetain();
  v42 = sub_2418A7EFC();
  v44 = v43;
  swift_bridgeObjectRelease();

  v45 = v61;
  sub_2417B6E00(v38, v40, v42, v44, 2, 1, v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v47 = v65;
  sub_2417B834C(v45, v65);
  v48 = (uint64_t *)(v47 + *(int *)(v60 + 36));
  *v48 = KeyPath;
  v48[1] = 0x3FE999999999999ALL;
  v49 = (void (*)(uint64_t))MEMORY[0x24BDF1088];
  sub_241728C0C(v45, &qword_25714F528, sub_2417B7C50, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v50 = v62;
  sub_2417B83A8(v47, v62);
  v51 = (uint64_t)v59;
  sub_2417B834C((uint64_t)v59, v45);
  v52 = v66;
  v53 = v63;
  sub_2417B834C(v66, v63);
  sub_2417289A8(v50, v47, (uint64_t (*)(_QWORD))sub_2417B82B0);
  v54 = v64;
  sub_2417B834C(v45, v64);
  sub_2417B7BC8();
  v56 = v55;
  sub_2417B834C(v53, v54 + *(int *)(v55 + 48));
  sub_2417289A8(v47, v54 + *(int *)(v56 + 64), (uint64_t (*)(_QWORD))sub_2417B82B0);
  sub_24172588C(v50, (uint64_t (*)(_QWORD))sub_2417B82B0);
  sub_241728C0C(v52, &qword_25714F528, sub_2417B7C50, v49);
  sub_241728C0C(v51, &qword_25714F528, sub_2417B7C50, v49);
  sub_24172588C(v47, (uint64_t (*)(_QWORD))sub_2417B82B0);
  sub_241728C0C(v53, &qword_25714F528, sub_2417B7C50, v49);
  return sub_241728C0C(v45, &qword_25714F528, sub_2417B7C50, v49);
}

uint64_t sub_2417B6E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  unsigned int *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  unsigned int *v67;
  char *v68;
  uint64_t KeyPath;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char v76;
  void (*v77)(char *, uint64_t);
  unsigned int *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _DWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char v89;
  uint64_t result;
  void *v91;
  int homeButtonType;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t);
  unsigned int *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  _QWORD v141[37];
  _OWORD v142[16];
  char v143;
  _QWORD v144[37];
  _OWORD v145[14];
  _OWORD v146[2];

  v123 = a6;
  v120 = a5;
  v121 = a3;
  v122 = a4;
  v119 = a2;
  v114 = a7;
  v9 = sub_2418A87B4();
  v10 = *(_QWORD *)(v9 - 8);
  v116 = v9;
  v117 = v10;
  MEMORY[0x24BDAC7A8](v9, v11);
  v115 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24174184C();
  v113 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v112 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2418A99B4();
  v135 = *(_QWORD *)(v16 - 8);
  v136 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v133 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_2418A84E4();
  v129 = *(_QWORD *)(v132 - 8);
  v20 = MEMORY[0x24BDAC7A8](v132, v19);
  v128 = (char *)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  v130 = (uint64_t)&v105 - v23;
  sub_2417B8118();
  v127 = v24;
  MEMORY[0x24BDAC7A8](v24, v25);
  v131 = (char *)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_2418A91E0();
  v27 = *(_QWORD *)(v124 - 8);
  v29 = MEMORY[0x24BDAC7A8](v124, v28);
  v107 = (char *)&v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v108 = (char *)&v105 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v106 = (char *)&v105 - v36;
  MEMORY[0x24BDAC7A8](v35, v37);
  v39 = (char *)&v105 - v38;
  v40 = type metadata accessor for ValenceSelectionPhaseSpecs();
  v42 = MEMORY[0x24BDAC7A8](v40, v41);
  v134 = (uint64_t)&v105 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v42, v44);
  v47 = (char *)&v105 - v46;
  MEMORY[0x24BDAC7A8](v45, v48);
  v50 = (char *)&v105 - v49;
  sub_2417B7D20(0);
  v125 = *(_QWORD *)(v51 - 8);
  v126 = v51;
  MEMORY[0x24BDAC7A8](v51, v52);
  v140 = (char *)&v105 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241728250(0, &qword_25714F538, v54, (void (*)(uint64_t))sub_2417B80A0);
  v138 = v55;
  MEMORY[0x24BDAC7A8](v55, v56);
  v137 = (char *)&v105 - v57;
  sub_2417B7C50(0);
  v110 = *(_QWORD *)(v58 - 8);
  v111 = v58;
  MEMORY[0x24BDAC7A8](v58, v59);
  v109 = (char *)&v105 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_2418A8B74();
  sub_2417B771C(a1, v119, v120, v121, v122, (uint64_t)v145);
  v139 = v7;
  if ((v123 & 1) != 0)
  {
    sub_241861CB8((uint64_t)v50);
    sub_2418A9204();
    v61 = sub_2418A879C();
    v62 = (unsigned int *)MEMORY[0x24BDF17C8];
    if ((v61 & 1) == 0)
      v62 = (unsigned int *)MEMORY[0x24BDF17D0];
    v63 = v106;
    v64 = v124;
    (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v106, *v62, v124);
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v39, v63, v64);
    v65 = sub_2418A91F8();
  }
  else
  {
    sub_241861CB8((uint64_t)v47);
    sub_2418A91EC();
    v66 = sub_2418A879C();
    v67 = (unsigned int *)MEMORY[0x24BDF17C8];
    if ((v66 & 1) == 0)
      v67 = (unsigned int *)MEMORY[0x24BDF17D0];
    v68 = v107;
    v64 = v124;
    (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v107, *v67, v124);
    v39 = v108;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v108, v68, v64);
    v65 = sub_2418A91F8();
    v50 = v47;
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v39, v64);
  sub_24172588C((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  *(_OWORD *)((char *)&v142[12] + 7) = v145[12];
  *(_OWORD *)((char *)&v142[13] + 7) = v145[13];
  *(_OWORD *)((char *)&v142[14] + 7) = v146[0];
  v142[15] = *(_OWORD *)((char *)v146 + 9);
  *(_OWORD *)((char *)&v142[8] + 7) = v145[8];
  *(_OWORD *)((char *)&v142[9] + 7) = v145[9];
  *(_OWORD *)((char *)&v142[10] + 7) = v145[10];
  *(_OWORD *)((char *)&v142[11] + 7) = v145[11];
  *(_OWORD *)((char *)&v142[4] + 7) = v145[4];
  *(_OWORD *)((char *)&v142[5] + 7) = v145[5];
  *(_OWORD *)((char *)&v142[6] + 7) = v145[6];
  *(_OWORD *)((char *)&v142[7] + 7) = v145[7];
  *(_OWORD *)((char *)v142 + 7) = v145[0];
  *(_OWORD *)((char *)&v142[1] + 7) = v145[1];
  *(_OWORD *)((char *)&v142[2] + 7) = v145[2];
  v143 = 0;
  *(_OWORD *)((char *)&v142[3] + 7) = v145[3];
  KeyPath = swift_getKeyPath();
  *(_OWORD *)((char *)&v144[32] + 1) = v142[15];
  *(_OWORD *)((char *)&v144[26] + 1) = v142[12];
  *(_OWORD *)((char *)&v144[28] + 1) = v142[13];
  *(_OWORD *)((char *)&v144[30] + 1) = v142[14];
  *(_OWORD *)((char *)&v144[18] + 1) = v142[8];
  *(_OWORD *)((char *)&v144[20] + 1) = v142[9];
  *(_OWORD *)((char *)&v144[22] + 1) = v142[10];
  *(_OWORD *)((char *)&v144[24] + 1) = v142[11];
  *(_OWORD *)((char *)&v144[10] + 1) = v142[4];
  *(_OWORD *)((char *)&v144[12] + 1) = v142[5];
  *(_OWORD *)((char *)&v144[14] + 1) = v142[6];
  *(_OWORD *)((char *)&v144[16] + 1) = v142[7];
  *(_OWORD *)((char *)&v144[2] + 1) = v142[0];
  *(_OWORD *)((char *)&v144[4] + 1) = v142[1];
  *(_OWORD *)((char *)&v144[6] + 1) = v142[2];
  v144[0] = v118;
  v144[1] = 0;
  LOBYTE(v144[2]) = 0;
  *(_OWORD *)((char *)&v144[8] + 1) = v142[3];
  v144[35] = KeyPath;
  v144[36] = v65;
  memcpy(v141, v144, sizeof(v141));
  sub_2418A9198();
  sub_2417B7D94();
  sub_2417B8020();
  sub_2418A9300();
  sub_2417B83F4((uint64_t)v144);
  v70 = sub_2418A8E68();
  v124 = type metadata accessor for ValenceSliderCaptions();
  v71 = v139;
  v72 = v130;
  sub_241861034(v130);
  v74 = v128;
  v73 = v129;
  v75 = v132;
  (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v128, *MEMORY[0x24BDEB3F0], v132);
  v76 = sub_2418A84D8();
  v77 = *(void (**)(char *, uint64_t))(v73 + 8);
  v77(v74, v75);
  v78 = (unsigned int *)MEMORY[0x24BDF5098];
  if ((v76 & 1) == 0)
    v78 = (unsigned int *)MEMORY[0x24BDF5080];
  v80 = v135;
  v79 = v136;
  v81 = v133;
  (*(void (**)(char *, _QWORD, uint64_t))(v135 + 104))(v133, *v78, v136);
  v82 = v131;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(&v131[*(int *)(v127 + 36)], v81, v79);
  *v82 = v70;
  v82[1] = 1053609165;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v79);
  v77((char *)v72, v75);
  v84 = (uint64_t)v137;
  v83 = v138;
  sub_2417289A8((uint64_t)v82, (uint64_t)&v137[*(int *)(v138 + 36)], (uint64_t (*)(_QWORD))sub_2417B8118);
  v86 = v125;
  v85 = v126;
  v87 = v140;
  (*(void (**)(uint64_t, char *, uint64_t))(v125 + 16))(v84, v140, v126);
  sub_24172588C((uint64_t)v82, (uint64_t (*)(_QWORD))sub_2417B8118);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v85);
  v88 = v134;
  sub_241861CB8(v134);
  v89 = *(_BYTE *)(v71 + *(int *)(v124 + 24));
  result = (uint64_t)(id)MobileGestalt_get_current_device();
  if (result)
  {
    v91 = (void *)result;
    homeButtonType = MobileGestalt_get_homeButtonType();

    if (homeButtonType == 2)
    {
      v93 = v117;
      v94 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 104);
      if ((v89 & 1) != 0)
        v95 = (unsigned int *)MEMORY[0x24BDECF38];
      else
        v95 = (unsigned int *)MEMORY[0x24BDECEA0];
      v96 = *v95;
    }
    else
    {
      v96 = *MEMORY[0x24BDECEA8];
      v93 = v117;
      v94 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 104);
    }
    v98 = v115;
    v97 = v116;
    v94(v115, v96, v116);
    sub_24172588C(v88, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_24172159C(&qword_25714CBB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF78]);
    result = sub_2418A9DA4();
    if ((result & 1) != 0)
    {
      v99 = (uint64_t)v112;
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v112, v98, v97);
      v100 = sub_2417B81EC();
      v101 = sub_24172159C((unint64_t *)&qword_25714CB40, (uint64_t (*)(uint64_t))sub_24174184C, MEMORY[0x24BEE30C8]);
      v102 = v109;
      v103 = v113;
      sub_2418A9390();
      sub_24172588C(v99, (uint64_t (*)(_QWORD))sub_24174184C);
      sub_241728C0C(v84, &qword_25714F538, sub_2417B7D20, (void (*)(uint64_t))sub_2417B80A0);
      v141[0] = v83;
      v141[1] = v103;
      v141[2] = v100;
      v141[3] = v101;
      swift_getOpaqueTypeConformance2();
      v104 = v111;
      sub_2418A9414();
      return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v102, v104);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2417B771C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;

  v63 = a3;
  v60 = type metadata accessor for ValenceSelectionPhaseSpecs();
  v12 = MEMORY[0x24BDAC7A8](v60, v11);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v55 - v16;
  v73 = a1;
  v74 = a2;
  sub_241721040();
  swift_bridgeObjectRetain();
  v18 = sub_2418A92D0();
  v20 = v19;
  v57 = v21;
  v65 = v22;
  KeyPath = swift_getKeyPath();
  v59 = sub_2418A9108();
  v23 = sub_241861CB8((uint64_t)v17);
  if ((sub_2417DB58C(v23) & 1) == 0)
    sub_2418A879C();
  sub_24172588C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_2418A84A8();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v62 = swift_getKeyPath();
  v73 = a4;
  v74 = a5;
  swift_bridgeObjectRetain();
  v32 = sub_2418A92D0();
  v34 = v33;
  v36 = v35;
  v61 = v37;
  v58 = swift_getKeyPath();
  v56 = sub_2418A90FC();
  v38 = sub_241861CB8((uint64_t)v14);
  if ((sub_2417DB58C(v38) & 1) == 0)
    sub_2418A879C();
  v39 = v36 & 1;
  v40 = v57 & 1;
  sub_24172588C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_2418A84A8();
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v49 = swift_getKeyPath();
  v66 = v40;
  LOBYTE(v73) = v40;
  v72 = 0;
  v71 = 0;
  v70 = 1;
  v69 = v39;
  v68 = 0;
  v67 = 0;
  *(_QWORD *)a6 = v18;
  *(_QWORD *)(a6 + 8) = v20;
  *(_BYTE *)(a6 + 16) = v40;
  v50 = v18;
  v55 = v18;
  v51 = KeyPath;
  *(_QWORD *)(a6 + 24) = v65;
  *(_QWORD *)(a6 + 32) = v51;
  *(_WORD *)(a6 + 40) = 0;
  *(_BYTE *)(a6 + 42) = 1;
  *(_BYTE *)(a6 + 48) = v59;
  *(_QWORD *)(a6 + 56) = v25;
  *(_QWORD *)(a6 + 64) = v27;
  *(_QWORD *)(a6 + 72) = v29;
  *(_QWORD *)(a6 + 80) = v31;
  *(_BYTE *)(a6 + 88) = 0;
  v52 = v63;
  *(_QWORD *)(a6 + 96) = v62;
  *(_QWORD *)(a6 + 104) = v52;
  *(_BYTE *)(a6 + 112) = 0;
  *(_QWORD *)(a6 + 120) = 0;
  *(_BYTE *)(a6 + 128) = 1;
  *(_QWORD *)(a6 + 136) = v32;
  *(_QWORD *)(a6 + 144) = v34;
  *(_BYTE *)(a6 + 152) = v39;
  v53 = v58;
  *(_QWORD *)(a6 + 160) = v61;
  *(_QWORD *)(a6 + 168) = v53;
  *(_WORD *)(a6 + 176) = 2;
  *(_BYTE *)(a6 + 178) = 1;
  *(_BYTE *)(a6 + 184) = v56;
  *(_QWORD *)(a6 + 192) = v42;
  *(_QWORD *)(a6 + 200) = v44;
  *(_QWORD *)(a6 + 208) = v46;
  *(_QWORD *)(a6 + 216) = v48;
  *(_BYTE *)(a6 + 224) = 0;
  *(_QWORD *)(a6 + 232) = v49;
  *(_QWORD *)(a6 + 240) = v52;
  *(_BYTE *)(a6 + 248) = 0;
  sub_241728A50(v50, v20, v40);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_241728A50(v32, v34, v39);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_2417289EC(v32, v34, v39);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2417289EC(v55, v20, v66);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

