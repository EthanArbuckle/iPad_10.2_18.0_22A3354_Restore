uint64_t sub_19A82737C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_19A8273A8()
{
  uint64_t v0;

  sub_19A8273B0(*(_QWORD *)(v0 + 16));
}

void sub_19A8273B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x19AECCEAC](v1);
  if (v2)
  {
    v3 = (void *)v2;
    swift_beginAccess();
    sub_19A827430();
    swift_endAccess();

  }
}

uint64_t sub_19A827430()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[8];

  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  sub_19A8274B4((uint64_t)&v4, (uint64_t)v5);
  sub_19A82750C();
  v1 = *(_QWORD *)(*v0 + 16);
  sub_19A827500(v1);
  v2 = *v0;
  *(_QWORD *)(v2 + 16) = v1 + 1;
  result = sub_19A8274B4((uint64_t)v5, v2 + 8 * v1 + 32);
  *v0 = v2;
  return result;
}

uint64_t sub_19A8274B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEAB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19A827500(uint64_t a1)
{
  return sub_19A86721C(a1, (uint64_t (*)(BOOL))sub_19A841A7C);
}

uint64_t sub_19A82750C()
{
  return sub_19A86719C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_19A841A7C);
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

void sub_19A82755C(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = OUTLINED_FUNCTION_43_1(a1, a2);
  if (v2)
  {
    v3 = v2;
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_86_0();

  }
  OUTLINED_FUNCTION_37();
}

void sub_19A8275AC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  OUTLINED_FUNCTION_40();
}

uint64_t type metadata accessor for WeakBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakBox);
}

void sub_19A827678()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_23_1(OBJC_IVAR___PARSessionSwiftInternal_lock);
  v1 = *(id *)(v0 + OBJC_IVAR___PARSessionSwiftInternal__bag);
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_40();
}

uint64_t sub_19A8276B0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_19A827730()
{
  return swift_allocateGenericValueMetadata();
}

void PARSessionSwiftInternal.report(_:queryId:)(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  _QWORD *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char **v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  char *v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  char *v71;
  id v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  id v76;
  BOOL v77;
  unint64_t v78;
  unint64_t v79;
  id v80;
  char *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  id v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  id v97;
  char *v98;
  id v99;
  uint64_t v100;
  void *v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  void *v106;
  id v107;
  void *v108;
  void *v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  void *v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD v129[3];

  v4 = v2;
  v129[1] = *MEMORY[0x1E0C80C00];
  v7 = sub_19A8C3EC4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_69_0();
  sub_19A8C3EA0();
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_18();
  v12 = v11 - v10;
  if (a2 < 0)
    goto LABEL_196;
  v121 = v12;
  v123 = v9;
  v126 = a2;
  if (qword_1ECFFE6A8 != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_15_2();
  v14 = (char *)__swift_project_value_buffer(v13, (uint64_t)qword_1ECFFE6B0);
  v15 = a1;
  v16 = (void *)sub_19A8C4878();
  v17 = sub_19A8C4BD8();
  v117 = v8;
  v118 = v7;
  if (OUTLINED_FUNCTION_65(v17))
  {
    v18 = OUTLINED_FUNCTION_2();
    v19 = (_QWORD *)OUTLINED_FUNCTION_2();
    *(_DWORD *)v18 = 138412546;
    v20 = v15;
    v21 = v15;
    sub_19A8C4CC8();
    *v19 = v20;

    *(_WORD *)(v18 + 12) = 2048;
    OUTLINED_FUNCTION_28_1();
    v127 = a2;
    sub_19A8C4CC8();
    OUTLINED_FUNCTION_47_0(&dword_19A825000, v22, v23, "reportFeedback(%@, %llu)");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE620);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0_0();
  }

  v24 = (_QWORD *)0x1E0D8C000;
  objc_opt_self();
  v25 = OUTLINED_FUNCTION_20_0();
  v26 = (uint64_t)&selRef_prefetchRequestForUrl_;
  if (v25)
  {
    objc_msgSend(v4, sel_sendCustomFeedback_, v25);
    return;
  }
  objc_opt_self();
  v27 = OUTLINED_FUNCTION_20_0();
  v115 = v15;
  if (!v27)
  {
    objc_opt_self();
    if (!OUTLINED_FUNCTION_20_0())
    {
      objc_opt_self();
      v48 = OUTLINED_FUNCTION_20_0();
      if (!v48)
      {
LABEL_27:
        v28 = *(_QWORD *)&v4[OBJC_IVAR___PARSessionSwiftInternal__mapsListener];
        v14 = (char *)0x1E0D8C000;
        v26 = 0x1E0D8C000uLL;
        if (v28)
        {
          objc_opt_self();
          if (OUTLINED_FUNCTION_62_0())
          {
            OUTLINED_FUNCTION_36_1();
            v54 = &selRef_didRankSections_;
          }
          else
          {
            objc_opt_self();
            if (OUTLINED_FUNCTION_2_6())
            {
              OUTLINED_FUNCTION_36_1();
              v54 = &selRef_didEngageResult_;
            }
            else
            {
              objc_opt_self();
              if (OUTLINED_FUNCTION_2_6())
              {
                OUTLINED_FUNCTION_36_1();
                v54 = &selRef_resultsDidBecomeVisible_;
              }
              else
              {
                objc_opt_self();
                if (OUTLINED_FUNCTION_2_6())
                {
                  OUTLINED_FUNCTION_36_1();
                  v54 = &selRef_didEngageSection_;
                }
                else
                {
                  objc_opt_self();
                  if (OUTLINED_FUNCTION_2_6())
                  {
                    OUTLINED_FUNCTION_36_1();
                    v54 = &selRef_didPerformCommand_;
                  }
                  else
                  {
                    objc_opt_self();
                    if (OUTLINED_FUNCTION_2_6())
                    {
                      OUTLINED_FUNCTION_36_1();
                      v54 = &selRef_searchViewDidDisappear_;
                    }
                    else
                    {
                      objc_opt_self();
                      if (!OUTLINED_FUNCTION_2_6())
                        goto LABEL_143;
                      OUTLINED_FUNCTION_36_1();
                      v54 = &selRef_cardViewDidAppear_;
                    }
                  }
                }
              }
            }
          }
          v7 = (uint64_t)*v54;
          v55 = v53;
          if ((OUTLINED_FUNCTION_119((id)v28) & 1) != 0)
            goto LABEL_45;
LABEL_46:

        }
LABEL_47:
        swift_beginAccess();
        if (v126)
          goto LABEL_161;
        objc_opt_self();
        if (OUTLINED_FUNCTION_62_0())
        {
          v28 = (uint64_t)OUTLINED_FUNCTION_51_0();
          v56 = OUTLINED_FUNCTION_30_1(v28, sel_section);
          if (v56)
          {
            sub_19A85BC4C(v56, (SEL *)&selRef_results);
            if (v57)
            {
              OUTLINED_FUNCTION_37_1();
              if (!v58)
              {
                v59 = *(_QWORD *)(v36 + 16);
                OUTLINED_FUNCTION_21();
                if (v59)
                  goto LABEL_53;
                goto LABEL_160;
              }
LABEL_156:
              if ((uint64_t)v24 >= 0)
                v7 = v36;
              else
                v7 = (uint64_t)v24;
              OUTLINED_FUNCTION_21();
              v59 = OUTLINED_FUNCTION_103_0();
              if (v59)
              {
LABEL_53:
                OUTLINED_FUNCTION_75_0();
                while (1)
                {
                  if (v26)
                    OUTLINED_FUNCTION_44_1();
                  v60 = OUTLINED_FUNCTION_113();
                  v61 = v60;
                  v62 = v14 - 3;
                  if (__OFADD__(v14 - 4, 1))
                    goto LABEL_115;
                  if (OUTLINED_FUNCTION_17_2((uint64_t)v60, (const char *)(v7 + 3109)))
                    break;

                  ++v14;
                  if (v62 == (char *)v59)
                    goto LABEL_160;
                }
LABEL_110:
                v89 = OUTLINED_FUNCTION_19_0();
                OUTLINED_FUNCTION_17_2(v89, (const char *)(v7 + 3109));

                goto LABEL_111;
              }
              goto LABEL_160;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
LABEL_189:
          __break(1u);
          goto LABEL_190;
        }
        objc_opt_self();
        if (OUTLINED_FUNCTION_2_6())
        {
          v28 = (uint64_t)OUTLINED_FUNCTION_51_0();
          v63 = OUTLINED_FUNCTION_30_1(v28, sel_result);
          if (!v63)
          {
LABEL_190:
            __break(1u);
            goto LABEL_191;
          }
LABEL_62:
          v64 = v63;
          objc_msgSend(v63, sel_queryId);

LABEL_111:
          goto LABEL_161;
        }
        objc_opt_self();
        if (OUTLINED_FUNCTION_2_6())
        {
          v28 = (uint64_t)OUTLINED_FUNCTION_51_0();
          v65 = OUTLINED_FUNCTION_30_1(v28, sel_section);
          if (!v65)
          {
LABEL_191:
            __break(1u);
            goto LABEL_192;
          }
          sub_19A85BC4C(v65, (SEL *)&selRef_results);
          if (!v66)
          {
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
            goto LABEL_195;
          }
          OUTLINED_FUNCTION_37_1();
          if (!v68)
          {
            v69 = *(_QWORD *)(v67 + 16);
            OUTLINED_FUNCTION_21();
            if (v69)
              goto LABEL_68;
            goto LABEL_160;
          }
LABEL_170:
          if ((uint64_t)v24 >= 0)
            v7 = v67;
          else
            v7 = (uint64_t)v24;
          OUTLINED_FUNCTION_21();
          v69 = OUTLINED_FUNCTION_103_0();
          if (v69)
          {
LABEL_68:
            OUTLINED_FUNCTION_75_0();
            while (1)
            {
              if (v26)
                OUTLINED_FUNCTION_44_1();
              v70 = OUTLINED_FUNCTION_113();
              v61 = v70;
              v71 = v14 - 3;
              if (__OFADD__(v14 - 4, 1))
                break;
              if (OUTLINED_FUNCTION_17_2((uint64_t)v70, (const char *)(v7 + 3109)))
                goto LABEL_110;

              ++v14;
              if (v71 == (char *)v69)
                goto LABEL_160;
            }
            __break(1u);
LABEL_150:
            objc_opt_self();
            if (OUTLINED_FUNCTION_88_0())
            {
              v102 = OUTLINED_FUNCTION_124();
              v103 = OUTLINED_FUNCTION_30_1((uint64_t)v102, sel_card);
              if (v103)
              {
                v104 = v103;
                objc_msgSend(v103, sel_queryId);

                goto LABEL_161;
              }
LABEL_198:
              __break(1u);
              return;
            }
LABEL_165:
            objc_opt_self();
            v101 = (void *)OUTLINED_FUNCTION_88_0();
            if (!v101)
            {
LABEL_161:
              v105 = objc_msgSend(objc_allocWithZone((Class)_CPFeedbackPayload), sel_initWithFeedback_, v115);
              if (v105)
              {
                v106 = v105;
                v107 = objc_msgSend(v105, sel_codable);

                if (v107)
                {
                  sub_19A837418();
                  v109 = v108;
                  swift_getObjectType();
                  sub_19A832E38();

                }
              }
              return;
            }
LABEL_147:
            objc_msgSend(v101, sel_queryId);
            goto LABEL_161;
          }
LABEL_160:

          OUTLINED_FUNCTION_19_0();
          goto LABEL_161;
        }
        objc_opt_self();
        if (OUTLINED_FUNCTION_2_6())
        {
          v72 = OUTLINED_FUNCTION_76();
          sub_19A82755C((void *)v28, (SEL *)&selRef_sections);
          if (!v73)
            goto LABEL_193;
          v28 = v73;
          v24 = (_QWORD *)(v73 & 0xFFFFFFFFFFFFFF8);
          if (v73 >> 62)
          {
            v74 = sub_19A8C4DF4();
            if (v74)
            {
LABEL_79:
              v119 = v24;
              v75 = 0;
              v124 = v28 & 0xC000000000000001;
              v26 = 0x1F2FC6000;
              while (1)
              {
                if (v124)
                  OUTLINED_FUNCTION_79_0();
                v67 = v119[2];
                if (v75 >= v67)
                  break;
                v76 = OUTLINED_FUNCTION_101_0();
                v28 = (uint64_t)v76;
                v77 = __OFADD__(v75++, 1);
                if (v77)
                {
                  __break(1u);
                  goto LABEL_165;
                }
                sub_19A82755C(v76, (SEL *)&selRef_results);
                if (!v78)
                  goto LABEL_189;
                v79 = v78;
                if (v78 >> 62)
                {
                  OUTLINED_FUNCTION_10_3();
                  v14 = (char *)sub_19A8C4DF4();
                  if (!v14)
                  {
LABEL_93:

                    OUTLINED_FUNCTION_19_0();
                    v126 = 0;
                    goto LABEL_95;
                  }
                }
                else
                {
                  v14 = *(char **)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  OUTLINED_FUNCTION_10_3();
                  if (!v14)
                    goto LABEL_93;
                }
                v24 = (_QWORD *)(v79 & 0xC000000000000001);
                v7 = 4;
                while (1)
                {
                  if (v24)
                    OUTLINED_FUNCTION_59_0();
                  v80 = *(id *)(v79 + 8 * v7);
                  v81 = (char *)(v7 - 3);
                  if (__OFADD__(v7 - 4, 1))
                  {
                    __break(1u);
LABEL_143:
                    objc_opt_self();
                    v100 = OUTLINED_FUNCTION_2_6();
                    if (v100)
                    {
                      v24 = (_QWORD *)v100;
                      v54 = &selRef_didEngageCardSection_;
                      v7 = (uint64_t)sel_didEngageCardSection_;
                      OUTLINED_FUNCTION_124();
                      if (!OUTLINED_FUNCTION_119((id)v28))
                        goto LABEL_46;
LABEL_45:
                      objc_msgSend((id)v28, *v54, v24);
                      goto LABEL_46;
                    }
                    goto LABEL_47;
                  }
                  if (OUTLINED_FUNCTION_31_1())
                    break;

                  ++v7;
                  if (v81 == v14)
                    goto LABEL_93;
                }
                OUTLINED_FUNCTION_19_0();
                v82 = OUTLINED_FUNCTION_31_1();

                v126 = (uint64_t)v82;
                if (v82)
                {
LABEL_141:
                  OUTLINED_FUNCTION_78();
                  swift_bridgeObjectRelease();
                  goto LABEL_161;
                }
LABEL_95:
                if (v75 == v74)
                  goto LABEL_148;
              }
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
              goto LABEL_170;
            }
          }
          else
          {
            v74 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v74)
              goto LABEL_79;
          }

LABEL_177:
          swift_bridgeObjectRelease();
          goto LABEL_161;
        }
        objc_opt_self();
        if (OUTLINED_FUNCTION_2_6())
        {
          v28 = (uint64_t)OUTLINED_FUNCTION_51_0();
          sub_19A82755C(v24, (SEL *)&selRef_results);
          if (!v83)
          {
LABEL_195:
            __break(1u);
LABEL_196:
            sub_19A8C4DDC();
            __break(1u);
            goto LABEL_197;
          }
          OUTLINED_FUNCTION_37_1();
          if (v85)
          {
LABEL_179:
            if ((uint64_t)v24 >= 0)
              v7 = v84;
            else
              v7 = (uint64_t)v24;
            OUTLINED_FUNCTION_21();
            v86 = OUTLINED_FUNCTION_103_0();
            if (!v86)
              goto LABEL_160;
          }
          else
          {
            v86 = *(_QWORD *)(v84 + 16);
            OUTLINED_FUNCTION_21();
            if (!v86)
              goto LABEL_160;
          }
          OUTLINED_FUNCTION_75_0();
          while (1)
          {
            if (v26)
              OUTLINED_FUNCTION_44_1();
            v87 = OUTLINED_FUNCTION_113();
            v61 = v87;
            v88 = v14 - 3;
            if (__OFADD__(v14 - 4, 1))
              goto LABEL_169;
            if (OUTLINED_FUNCTION_17_2((uint64_t)v87, (const char *)(v7 + 3109)))
              goto LABEL_110;

            ++v14;
            if (v88 == (char *)v86)
              goto LABEL_160;
          }
        }
        objc_opt_self();
        if (OUTLINED_FUNCTION_2_6())
        {
          v28 = (uint64_t)OUTLINED_FUNCTION_51_0();
          v63 = OUTLINED_FUNCTION_30_1(v28, sel_result);
          if (v63)
            goto LABEL_62;
          __break(1u);
LABEL_115:
          __break(1u);
        }
        objc_opt_self();
        if (!OUTLINED_FUNCTION_2_6())
        {
          objc_opt_self();
          v101 = (void *)OUTLINED_FUNCTION_2_6();
          if (v101)
            goto LABEL_147;
          goto LABEL_150;
        }
        OUTLINED_FUNCTION_76();
        sub_19A82755C((void *)v28, (SEL *)&selRef_sections);
        if (!v90)
        {
LABEL_197:
          __break(1u);
          goto LABEL_198;
        }
        v28 = v90;
        v26 = v90 & 0xFFFFFFFFFFFFFF8;
        if (v90 >> 62)
          goto LABEL_186;
        v91 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_120:
        v120 = v26;
        if (!v91)
        {
LABEL_148:
          OUTLINED_FUNCTION_78();
          goto LABEL_177;
        }
        v92 = 0;
        v125 = v28 & 0xC000000000000001;
        v26 = 0x1F2FC6000;
        while (1)
        {
          if (v125)
            OUTLINED_FUNCTION_79_0();
          if (v92 >= *(_QWORD *)(v120 + 16))
          {
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            v91 = sub_19A8C4DF4();
            goto LABEL_120;
          }
          v93 = OUTLINED_FUNCTION_101_0();
          v28 = (uint64_t)v93;
          v77 = __OFADD__(v92++, 1);
          if (v77)
          {
            __break(1u);
            goto LABEL_179;
          }
          sub_19A82755C(v93, (SEL *)&selRef_results);
          if (!v94)
            goto LABEL_194;
          v95 = v94;
          if (v94 >> 62)
          {
            OUTLINED_FUNCTION_10_3();
            v14 = (char *)sub_19A8C4DF4();
            if (v14)
            {
LABEL_129:
              v24 = (_QWORD *)(v95 & 0xC000000000000001);
              v96 = 4;
              while (1)
              {
                if (v24)
                  OUTLINED_FUNCTION_59_0();
                v97 = *(id *)(v95 + 8 * v96);
                v98 = (char *)(v96 - 3);
                if (__OFADD__(v96 - 4, 1))
                {
                  __break(1u);
                  goto LABEL_168;
                }
                if (OUTLINED_FUNCTION_31_1())
                  break;

                ++v96;
                if (v98 == v14)
                  goto LABEL_135;
              }
              OUTLINED_FUNCTION_19_0();
              v99 = OUTLINED_FUNCTION_31_1();

              if (v99)
                goto LABEL_141;
              goto LABEL_137;
            }
          }
          else
          {
            v14 = *(char **)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10);
            OUTLINED_FUNCTION_10_3();
            if (v14)
              goto LABEL_129;
          }
LABEL_135:

          OUTLINED_FUNCTION_19_0();
LABEL_137:
          if (v92 == v91)
            goto LABEL_148;
        }
      }
      v49 = (void *)v48;
      v24 = OUTLINED_FUNCTION_124();
      sub_19A85BD04(v49, (SEL *)&selRef_input);
      if (v51)
      {
        v127 = v50;
        v128 = v51;
        if (qword_1ECFFDFD8 != -1)
          swift_once();
        v52 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECFFE5A0);
        __swift_project_value_buffer(v52, (uint64_t)qword_1ECFFEBC8);
        sub_19A841D04();
        sub_19A841D40();
        v7 = sub_19A8C4920();
        OUTLINED_FUNCTION_12_0();
        if ((v7 & 1) != 0)
          sub_19A85BD60(0, 0xE000000000000000, v49, (SEL *)&selRef_setInput_);
      }
LABEL_26:

      goto LABEL_27;
    }
    v31 = objc_allocWithZone((Class)_CPUserReportFeedback);
    v14 = (char *)v15;
    v32 = OUTLINED_FUNCTION_2_0(v31, sel_initWithFacade_);
    if (!v32)
    {

      return;
    }
    v33 = v32;
    v28 = v121;
    sub_19A8C3E94();
    sub_19A8C3E7C();
    v35 = v34;
    OUTLINED_FUNCTION_111(*(uint64_t (**)(uint64_t, uint64_t))(v123 + 8));
    v36 = *(_QWORD *)&v35;
    if ((~*(_QWORD *)&v35 & 0x7FF0000000000000) != 0)
    {
      if (v35 > -1.0)
      {
        v36 = 0x43F0000000000000;
        if (v35 < 1.84467441e19)
        {
          objc_msgSend(v33, sel_setTimestamp_, (unint64_t)v35);
          sub_19A8C3EB8();
          v37 = sub_19A8C3EAC();
          v39 = v38;
          v110 = v38 >> 8;
          v111 = v38 >> 16;
          v112 = v38 >> 24;
          v113 = HIDWORD(v38);
          v114 = v38 >> 40;
          v116 = HIWORD(v38);
          v122 = HIBYTE(v38);
          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v3, v118);
          v127 = v37;
          LOBYTE(v128) = v39;
          BYTE1(v128) = v110;
          BYTE2(v128) = v111;
          BYTE3(v128) = v112;
          BYTE4(v128) = v113;
          BYTE5(v128) = v114;
          BYTE6(v128) = v116;
          HIBYTE(v128) = v122;
          v40 = sub_19A859D78((uint64_t)&v127, (uint64_t)v129);
          sub_19A85BDAC(v40, v41, v33);
          v42 = v33;
          sub_19A85BA84(v42);
          v7 = v43;
          v45 = v44;
          v46 = objc_allocWithZone(MEMORY[0x1E0D8C318]);
          v47 = sub_19A85AFAC(10, v7, v45);
          if (!v47)
          {

            return;
          }
          v24 = v47;
          objc_msgSend(v4, sel_sendCustomFeedback_, v47);

          goto LABEL_26;
        }
LABEL_155:
        __break(1u);
        goto LABEL_156;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_155;
  }
  v28 = v27;
  v24 = v15;
  sub_19A841C5C((void *)v28, (SEL *)&selRef_eventName);
  if (!v30)
    goto LABEL_185;
  v7 = sub_19A854ED0(v29, v30);
  OUTLINED_FUNCTION_8_6();

  if ((v7 & 1) != 0)
    goto LABEL_27;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x19AECCD20]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_24_0()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_24_1(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_24_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_3(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1;
  return sub_19A853474((id *)(v2 - 96), v1);
}

uint64_t OUTLINED_FUNCTION_10()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_12(id a1)
{

}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_12_0()
{
  return swift_bridgeObjectRelease();
}

double OUTLINED_FUNCTION_3_2()
{
  double v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_3_3@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 24) = 5;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_33()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_62@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void OUTLINED_FUNCTION_3_4(id a1)
{

}

uint64_t OUTLINED_FUNCTION_3_6()
{
  return swift_unknownObjectRetain();
}

void OUTLINED_FUNCTION_0_0()
{
  JUMPOUT(0x19AECCDECLL);
}

uint64_t OUTLINED_FUNCTION_0_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_6(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_0_5()
{
  unint64_t v0;
  uint64_t v1;

  return sub_19A833360(v1, v0);
}

uint64_t OUTLINED_FUNCTION_0_6()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  return sub_19A8C447C();
}

uint64_t OUTLINED_FUNCTION_0_8(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  return sub_19A865E80(v2 + 32, (uint64_t)&a1[2]);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_2()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  return sub_19A8C4DF4();
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  return sub_19A8C4A10();
}

uint64_t OUTLINED_FUNCTION_26()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_26_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

void OUTLINED_FUNCTION_26_1(id a1)
{

}

void OUTLINED_FUNCTION_33_0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 2u);
}

id OUTLINED_FUNCTION_26_2(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

void OUTLINED_FUNCTION_1()
{
  sub_19A844344();
}

uint64_t OUTLINED_FUNCTION_45(uint64_t a1, unint64_t *a2)
{
  return sub_19A8444E0(0, a2);
}

uint64_t OUTLINED_FUNCTION_1_0()
{
  return sub_19A8C4CC8();
}

uint64_t OUTLINED_FUNCTION_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_1()
{
  return sub_19A8C47AC();
}

unint64_t OUTLINED_FUNCTION_1_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19A86725C(a2, a3);
}

uint64_t OUTLINED_FUNCTION_1_3(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_19A833360(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_5(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = result;
  strcpy((char *)(v1 + 32), "casting_failed");
  *(_BYTE *)(v1 + 47) = -18;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  return sub_19A8C4CC8();
}

uint64_t OUTLINED_FUNCTION_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_9()
{
  return swift_arrayDestroy();
}

id OUTLINED_FUNCTION_43_1(void *a1, SEL *a2)
{
  return objc_msgSend(a1, *a2);
}

uint64_t OUTLINED_FUNCTION_7_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  return sub_19A8C47AC();
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_14()
{
  return swift_deallocPartialClassInstance();
}

uint64_t OUTLINED_FUNCTION_7_3@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_7_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_7_5(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_7_6()
{
  return swift_bridgeObjectRetain();
}

void *OUTLINED_FUNCTION_7_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = a1;
  *(_QWORD *)(v2 - 128) = v1;
  return _Block_copy((const void *)(v2 - 152));
}

uint64_t OUTLINED_FUNCTION_41()
{
  return sub_19A8C3DF8();
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_18_0(id a1)
{

}

uint64_t OUTLINED_FUNCTION_41_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_38()
{
  return sub_19A8C4DF4();
}

uint64_t OUTLINED_FUNCTION_38_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x19AECCCCC](a1, v6, a5);
}

uint64_t OUTLINED_FUNCTION_42(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19A864E18(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_42_1(uint64_t a1, unint64_t *a2)
{
  sub_19A8275AC(0, a2);
}

uint64_t OUTLINED_FUNCTION_42_2()
{
  return swift_unknownObjectRelease();
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_63(v0);
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_96_1();
  return OUTLINED_FUNCTION_66_1();
}

void OUTLINED_FUNCTION_11()
{
  JUMPOUT(0x19AECC324);
}

uint64_t OUTLINED_FUNCTION_11_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  return swift_task_dealloc();
}

unint64_t OUTLINED_FUNCTION_11_4(uint64_t a1, uint64_t a2)
{
  return sub_19A86725C(a1, a2);
}

uint64_t OUTLINED_FUNCTION_11_5()
{
  return sub_19A8C4290();
}

id OUTLINED_FUNCTION_15()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1 + 32);
}

uint64_t OUTLINED_FUNCTION_15_0@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  return sub_19A8C489C();
}

uint64_t OUTLINED_FUNCTION_15_3()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_95@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void OUTLINED_FUNCTION_95_0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

}

id OUTLINED_FUNCTION_2_0(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_2()
{
  return sub_19A8C4A40();
}

uint64_t OUTLINED_FUNCTION_12_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_2_3()
{
  return sub_19A8C4DC4();
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  return sub_19A8C4C8C();
}

uint64_t OUTLINED_FUNCTION_2_5(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  return swift_dynamicCastObjCClass();
}

uint64_t OUTLINED_FUNCTION_18_1()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_2_7(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v4;

  sub_19A86889C(a1, a2, v4, a4);
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  return swift_defaultActor_destroy();
}

uint64_t OUTLINED_FUNCTION_2_9(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19A864E18(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_73(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_19A85163C(a1, a2, v2);
}

id OUTLINED_FUNCTION_73_0(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id OUTLINED_FUNCTION_73_1(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return objc_msgSend(v2, a2, v5, v4, v3, v6);
}

uint64_t OUTLINED_FUNCTION_30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_30_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  return swift_task_dealloc();
}

id OUTLINED_FUNCTION_30_1(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_4_0()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_4_1()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_4_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_21()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return sub_19A8C42CC();
}

uint64_t OUTLINED_FUNCTION_4_6(uint64_t *a1)
{
  return __swift_instantiateConcreteTypeFromMangledName(a1);
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_10_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_22(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return sub_19A8C4878();
}

uint64_t OUTLINED_FUNCTION_10_4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = v0;
  return sub_19A8C4140();
}

uint64_t OUTLINED_FUNCTION_10_6()
{
  unint64_t v0;
  uint64_t v1;

  return sub_19A833360(v1, v0);
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  unint64_t v0;
  uint64_t v1;

  return sub_19A833360(v1, v0);
}

uint64_t OUTLINED_FUNCTION_9_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  sub_19A8496FC(v8, v7, v6, v5, a5);
  return v6;
}

uint64_t OUTLINED_FUNCTION_9_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_52()
{
  return sub_19A8C480C();
}

uint64_t OUTLINED_FUNCTION_126()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_62_0()
{
  return swift_dynamicCastObjCClass();
}

void OUTLINED_FUNCTION_62_1()
{
  void *v0;

}

id OUTLINED_FUNCTION_31(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  SEL *v10;
  void *v11;

  return objc_msgSend(v11, *v10, a10);
}

uint64_t OUTLINED_FUNCTION_31_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

id OUTLINED_FUNCTION_31_1()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 3109));
}

unint64_t OUTLINED_FUNCTION_31_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 56) = a2;
  return sub_19A8333A4();
}

uint64_t OUTLINED_FUNCTION_49()
{
  return swift_task_dealloc();
}

BOOL OUTLINED_FUNCTION_49_0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_6_0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_82()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_82_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_17_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_17_1()
{
  return swift_task_dealloc();
}

id OUTLINED_FUNCTION_17_2(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_17_4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 112))(a1, *(_QWORD *)(v1 - 104));
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return sub_19A8C3DF8();
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_28_2()
{
  return swift_release();
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x19AECCD2C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t OUTLINED_FUNCTION_70()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_68()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  return sub_19A8C4A58();
}

void OUTLINED_FUNCTION_68_1()
{
  void *v0;

}

char *PARSearchClient.init(connection:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  _QWORD *v21;
  void *v23;
  _QWORD v24[6];
  objc_super v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_34_2();
  v26 = v1;
  v27 = v2;
  v23 = v3;
  v4 = sub_19A8C4C14();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_18();
  v8 = v7 - v6;
  sub_19A8C4C08();
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_18();
  sub_19A8C48CC();
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_18();
  *(_QWORD *)&v0[OBJC_IVAR____TtC10CoreParsec15PARSearchClient_sessions] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10CoreParsec15PARSearchClient_imageLoader] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10CoreParsec15PARSearchClient_receivingStreamDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v9 = OBJC_IVAR____TtC10CoreParsec15PARSearchClient_queue;
  sub_19A8275AC(0, &qword_1ECFFEAD0);
  v10 = v0;
  sub_19A8C48C0();
  v24[0] = 0;
  sub_19A831424(&qword_1ECFFEAC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF830]);
  sub_19A8C4ECC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF8D8], v4);
  *(_QWORD *)&v0[v9] = sub_19A8C4C2C();
  *(_QWORD *)&v10[OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection] = v23;
  v11 = v23;

  v25.receiver = v10;
  v25.super_class = (Class)type metadata accessor for PARSearchClient();
  v12 = objc_msgSendSuper2(&v25, sel_init);
  v13 = (void *)objc_opt_self();
  v14 = v12;
  v15 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_1EE3B5FF8);
  OUTLINED_FUNCTION_179(v11, sel_setExportedInterface_);

  v16 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_1EE3DDC50);
  OUTLINED_FUNCTION_179(v11, sel_setRemoteObjectInterface_);

  OUTLINED_FUNCTION_184(v17, sel_setExportedObject_);
  v18 = qword_1ECFFE730;
  v19 = (char *)v14;
  if (v18 != -1)
    swift_once();
  v20 = (void *)qword_1ECFFEBE0;
  type metadata accessor for PARImageLoader();
  memset(v24, 0, 40);
  v21 = (_QWORD *)OUTLINED_FUNCTION_3_0();
  *(_QWORD *)&v19[OBJC_IVAR____TtC10CoreParsec15PARSearchClient_imageLoader] = sub_19A865684(v19, v19, v20, (uint64_t)v24, v21);
  swift_release();
  objc_msgSend(v11, sel_resume);

  return v19;
}

uint64_t type metadata accessor for PARImageLoader()
{
  return objc_opt_self();
}

id fixQueryComponentEncoding(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  objc_msgSend(v1, "percentEncodedQuery");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringByReplacingOccurrencesOfString:withString:", CFSTR("+"), CFSTR("%20"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "setPercentEncodedQuery:", v3);

  return v1;
}

uint64_t _CPVisibleResultsFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPSearchResultForFeedback *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_53;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_56;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_56:
        objc_msgSend(a1, "setTimestamp:", v25, v44, v45);
        goto LABEL_67;
      case 2u:
        v27 = objc_alloc_init(_CPSearchResultForFeedback);
        v44 = 0;
        v45 = 0;
        if (!PBReaderPlaceMark() || !_CPSearchResultForFeedbackReadFrom(v27, a2))
          goto LABEL_69;
        PBReaderRecallMark();
        if (v27)
          objc_msgSend(a1, "addResults:", v27, 0, 0);
        goto LABEL_51;
      case 3u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v4;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v35 = 0;
        else
          v35 = v30;
LABEL_61:
        objc_msgSend(a1, "setTriggerEvent:", v35, v44, v45);
        goto LABEL_67;
      case 4u:
        v27 = objc_alloc_init(_CPSearchResultForFeedback);
        v44 = 0;
        v45 = 0;
        if (PBReaderPlaceMark() && (_CPSearchResultForFeedbackReadFrom(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setGoTakeoverResult:", v27);
LABEL_51:

LABEL_67:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_69:

        return 0;
      case 5u:
        v36 = 0;
        v37 = 0;
        v38 = 0;
        while (2)
        {
          v39 = *v4;
          v40 = *(_QWORD *)(a2 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v15 = v37++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v43 = 0;
        else
          v43 = v38;
LABEL_66:
        objc_msgSend(a1, "addUniqueIdsOfVisibleButtons:", v43, v44, v45);
        goto LABEL_67;
      case 6u:
        PBReaderReadString();
        v27 = (_CPSearchResultForFeedback *)objc_claimAutoreleasedReturnValue();
        if (v27)
          objc_msgSend(a1, "addUniqueIdentifiersOfVisibleCardSections:", v27);
        goto LABEL_51;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_67;
    }
  }
}

uint64_t sub_19A830A98(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void (*v6)(void *, uint64_t, void *);
  uint64_t v7;
  id v8;
  id v9;

  v6 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  if (a3)
    v7 = sub_19A8C48F0();
  else
    v7 = 0;
  swift_retain();
  v8 = a2;
  v9 = a4;
  v6(a2, v7, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_19A830B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_96_1();
  return sub_19A830BAC(v0, v1, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return sub_19A8C3DEC();
}

uint64_t OUTLINED_FUNCTION_40_1()
{
  return sub_19A8C47C4();
}

uint64_t sub_19A830BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_19A8C4C38();
  if (qword_1ECFFE730 != -1)
    swift_once();
  sub_19A8C47D0();
  return a5(a1, a2, a3);
}

void sub_19A830C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_19A830C68(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_19A830C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  void *v9;

  if (!a2)
  {
    v7 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v7 = (void *)sub_19A8C48E4();
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v8 = sub_19A8C3D98();
LABEL_6:
  v9 = (void *)v8;
  (*(void (**)(uint64_t, uint64_t, void *))(a4 + 16))(a4, a1, v7);

  OUTLINED_FUNCTION_12(v9);
}

uint64_t OUTLINED_FUNCTION_44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_44_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void OUTLINED_FUNCTION_44_1()
{
  JUMPOUT(0x19AECC324);
}

void OUTLINED_FUNCTION_44_2()
{
  const void *v0;

  _Block_release(v0);
}

char *PARSessionSwiftInternal.init(session:configuration:connection:delegate:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  char *v31;
  id v32;
  char *v33;
  void *v34;
  char *v35;
  id v36;
  objc_super v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v9 = OBJC_IVAR___PARSessionSwiftInternal_lock;
  v10 = v4;
  v11 = (_DWORD *)OUTLINED_FUNCTION_2();
  *(_QWORD *)&v4[v9] = v11;
  v12 = OBJC_IVAR___PARSessionSwiftInternal__mapsListener;
  *(_QWORD *)&v10[OBJC_IVAR___PARSessionSwiftInternal__mapsListener] = 0;
  *(_QWORD *)&v10[OBJC_IVAR___PARSessionSwiftInternal__bag] = 0;
  v10[OBJC_IVAR___PARSessionSwiftInternal__sampled] = 0;
  *(_QWORD *)&v10[OBJC_IVAR___PARSessionSwiftInternal__sampleClientTimingEventAllowlist] = 0;
  v13 = OBJC_IVAR___PARSessionSwiftInternal_activityMonitor;
  type metadata accessor for ActivityMonitor();
  OUTLINED_FUNCTION_3_0();
  *(_QWORD *)&v10[v13] = sub_19A8314A4(0, 0);
  v14 = (uint64_t *)&v10[OBJC_IVAR___PARSessionSwiftInternal__deviceContext];
  type metadata accessor for DeviceContext();
  OUTLINED_FUNCTION_3_0();
  *v14 = sub_19A847EE8();
  v14[1] = (uint64_t)&off_1E391F920;
  *(_DWORD *)&v10[OBJC_IVAR___PARSessionSwiftInternal_skappToken] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *v11 = 0;
  *(_QWORD *)&v10[OBJC_IVAR___PARSessionSwiftInternal__configuration] = a2;
  swift_unknownObjectWeakAssign();
  v15 = (uint64_t *)objc_opt_self();
  v16 = a2;
  v17 = objc_msgSend(v15, sel_defaultManager);
  *(_QWORD *)&v10[OBJC_IVAR___PARSessionSwiftInternal_fileManager] = v17;
  if (a3)
  {
    v18 = objc_allocWithZone((Class)type metadata accessor for PARSearchClient());
    OUTLINED_FUNCTION_76();
    *(_QWORD *)&v10[OBJC_IVAR___PARSessionSwiftInternal_client] = PARSearchClient.init(connection:)();
  }
  else
  {
    if (qword_1ECFFEA28 != -1)
      swift_once();
    v15 = &qword_1ECFFE9E8;
    OUTLINED_FUNCTION_28_1();
    v19 = (void *)qword_1ECFFE9E8;
    *(_QWORD *)&v10[OBJC_IVAR___PARSessionSwiftInternal_client] = qword_1ECFFE9E8;
    v20 = v19;
  }
  v21 = swift_unknownObjectWeakAssign();
  v22 = OUTLINED_FUNCTION_17_2(v21, sel_userAgent);
  v23 = OUTLINED_FUNCTION_123();
  v25 = v24;

  v41 = v23;
  v42 = v25;
  v39 = 0x6867696C746F7073;
  v40 = 0xE900000000000074;
  sub_19A831E10();
  v26 = OUTLINED_FUNCTION_13_2();
  v27 = swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
  {
    v32 = OUTLINED_FUNCTION_2_0(objc_allocWithZone(MEMORY[0x1E0D274F8]), sel_initWithClientType_);
    v31 = *(char **)&v10[v12];
    *(_QWORD *)&v10[v12] = v32;

  }
  else
  {
    v28 = OUTLINED_FUNCTION_17_2(v27, sel_userAgent);
    OUTLINED_FUNCTION_123();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_116();
    OUTLINED_FUNCTION_13_2();
    v29 = OUTLINED_FUNCTION_120();
    v30 = OUTLINED_FUNCTION_17_2(v29, sel_userAgent);
    OUTLINED_FUNCTION_123();
    OUTLINED_FUNCTION_81_0();
    v41 = v25;
    v42 = a4;
    v39 = 1769105779;
    v40 = 0xE400000000000000;
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_120();
    v31 = v10;
  }

  v38.receiver = v10;
  v38.super_class = (Class)type metadata accessor for PARSessionSwiftInternal();
  v33 = (char *)objc_msgSendSuper2(&v38, sel_init);
  v34 = *(void **)&v33[OBJC_IVAR___PARSessionSwiftInternal_client];
  v35 = v33;
  v36 = v34;
  sub_19A831188();

  swift_unknownObjectRelease();
  return v35;
}

uint64_t type metadata accessor for PARSessionSwiftInternal()
{
  return objc_opt_self();
}

void sub_19A831188()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  OUTLINED_FUNCTION_34_2();
  v2 = OUTLINED_FUNCTION_172();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = *(_QWORD *)(OUTLINED_FUNCTION_23_2() - 8);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_45_1();
  v6 = OUTLINED_FUNCTION_3_0();
  swift_unknownObjectWeakInit();
  v7 = OUTLINED_FUNCTION_3_0();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v0;
  OUTLINED_FUNCTION_80_0((uint64_t)sub_19A82737C);
  swift_retain();
  v8 = v0;
  OUTLINED_FUNCTION_156();
  sub_19A831424((unint64_t *)&unk_1ECFFE710, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE708);
  OUTLINED_FUNCTION_185();
  sub_19A8C4D1C();
  v9 = OUTLINED_FUNCTION_173();
  MEMORY[0x19AECC1E0](v9);
  OUTLINED_FUNCTION_152();
  OUTLINED_FUNCTION_62(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_52_0(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_33_1();
  swift_release();
  OUTLINED_FUNCTION_0_2();
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_47()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return sub_19A8C4CF8();
}

void OUTLINED_FUNCTION_13_3()
{
  JUMPOUT(0x19AECBFC4);
}

uint64_t OUTLINED_FUNCTION_13_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_89()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_89_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_89_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_64()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t OUTLINED_FUNCTION_64_0()
{
  return sub_19A8C4DF4();
}

void OUTLINED_FUNCTION_47_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

id OUTLINED_FUNCTION_47_1()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 3109));
}

uint64_t OUTLINED_FUNCTION_16_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 136));
}

uint64_t OUTLINED_FUNCTION_16_1()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_16_2(id a1)
{

}

uint64_t OUTLINED_FUNCTION_16_3()
{
  return sub_19A8C4A10();
}

void sub_19A831424(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x19AECCD38](a3, v5), a1);
  }
  OUTLINED_FUNCTION_40();
}

unint64_t sub_19A831460()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECFFE720;
  if (!qword_1ECFFE720)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECFFE708);
    result = MEMORY[0x19AECCD38](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ECFFE720);
  }
  return result;
}

_QWORD *sub_19A8314A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;

  v2[3] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for Locker();
  v4 = swift_allocObject();
  v5 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = 0;
  v6 = MEMORY[0x1E0DEE9E0];
  v2[4] = v4;
  v2[5] = v6;
  v2[3] = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v2;
}

uint64_t type metadata accessor for Locker()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ActivityMonitor()
{
  return objc_opt_self();
}

uint64_t static ClientName.extractClientNameFromUserAgent(_:allowAbbreviation:)(uint64_t a1, unint64_t a2, char a3)
{
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v40[2];

  if (!a2)
    return a1;
  sub_19A8C495C();
  v6 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
  v7 = sub_19A831BC8(0xD000000000000016, 0x800000019A8CFF00, 0);
  if (!v7)
  {
    OUTLINED_FUNCTION_5_0();
    return 0;
  }
  v8 = v7;
  v9 = (void *)sub_19A8C4938();
  v10 = objc_msgSend(v8, sel_matchesInString_options_range_, v9, 0, 0, sub_19A8C498C());

  sub_19A831B8C();
  v11 = sub_19A8C4A1C();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_19A8C4DF4();
    OUTLINED_FUNCTION_10();
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v12 > 0)
  {
    if ((v11 & 0xC000000000000001) != 0)
    {
      v13 = (id)MEMORY[0x19AECC324](0, v11);
      goto LABEL_9;
    }
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v13 = *(id *)(v11 + 32);
LABEL_9:
      v14 = v13;
      OUTLINED_FUNCTION_10();
      objc_msgSend(v14, sel_rangeAtIndex_, 3);

      sub_19A8C4BA8();
      if ((v15 & 1) == 0)
      {
        v16 = sub_19A8C49D4();
        v18 = v17;
        v20 = v19;
        v22 = v21;
        OUTLINED_FUNCTION_5_0();
        v23 = MEMORY[0x19AECBF28](v16, v18, v20, v22);
        v25 = v24;
        OUTLINED_FUNCTION_7();
        v26 = static ClientName.extractClientNameFromString(_:)(v23, v25);
        v28 = v27;
        OUTLINED_FUNCTION_10();

        if (v28)
          return v26;
        else
          return 0x64636573726170;
      }
      OUTLINED_FUNCTION_5_0();
      goto LABEL_27;
    }
    __break(1u);
    goto LABEL_34;
  }
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_5_0();
  if (qword_1ECFFDE70 != -1)
LABEL_34:
    swift_once();
  v29 = sub_19A8C489C();
  __swift_project_value_buffer(v29, (uint64_t)qword_1ECFFEBB0);
  swift_bridgeObjectRetain_n();
  v30 = sub_19A8C4878();
  v31 = sub_19A8C4BE4();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)OUTLINED_FUNCTION_2();
    v40[0] = OUTLINED_FUNCTION_2();
    *(_DWORD *)v32 = 136315138;
    swift_bridgeObjectRetain();
    sub_19A844794(a1, a2, v40);
    OUTLINED_FUNCTION_8_1();
    sub_19A8C4CC8();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_6_0(&dword_19A825000, v30, v31, "Couldn't find a match for regex in userAgent: %s", v32);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0_0();
  }

  swift_bridgeObjectRelease_n();
  if ((a3 & 1) == 0)
  {
LABEL_27:

    return 0;
  }
  v33 = static ClientName.extractClientNameFromString(_:)(a1, a2);
  if (v34)
    a1 = v33;
  else
    a1 = 0x64636573726170;
  if (v34)
    v35 = v34;
  else
    v35 = 0xE700000000000000;
  swift_bridgeObjectRetain_n();
  v36 = sub_19A8C4878();
  v37 = sub_19A8C4BFC();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)OUTLINED_FUNCTION_2();
    v40[0] = OUTLINED_FUNCTION_2();
    *(_DWORD *)v38 = 136315138;
    swift_bridgeObjectRetain();
    sub_19A844794(a1, v35, v40);
    OUTLINED_FUNCTION_1_0();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_6_0(&dword_19A825000, v36, v37, "Allows matching abbreviated user agent. ClientName: %s", v38);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0_0();
  }

  swift_bridgeObjectRelease_n();
  return a1;
}

unint64_t sub_19A831B8C()
{
  unint64_t result;

  result = qword_1ECFFE8E8;
  if (!qword_1ECFFE8E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECFFE8E8);
  }
  return result;
}

id sub_19A831BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_19A8C3DA4();

    swift_willThrow();
  }
  return v6;
}

uint64_t static ClientName.extractClientNameFromString(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (a2)
  {
    sub_19A8C495C();
    if (qword_1ECFFE8F8 != -1)
      swift_once();
    v3 = qword_1ECFFEBE8;
    v4 = *(_QWORD *)(qword_1ECFFEBE8 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      sub_19A831E10();
      v5 = v3 + 40;
      while (1)
      {
        a1 = *(_QWORD *)(v5 - 8);
        swift_bridgeObjectRetain();
        if ((sub_19A8C4D04() & 1) != 0)
          break;
        v5 += 16;
        swift_bridgeObjectRelease();
        if (!--v4)
        {
          OUTLINED_FUNCTION_7();
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7();
    }
    else
    {
LABEL_9:
      sub_19A831E10();
      v6 = sub_19A8C4D04();
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0)
        return 0x64636573726170;
      else
        return 0;
    }
  }
  return a1;
}

unint64_t sub_19A831E10()
{
  unint64_t result;

  result = qword_1ECFFEB20;
  if (!qword_1ECFFEB20)
  {
    result = MEMORY[0x19AECCD38](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ECFFEB20);
  }
  return result;
}

void sub_19A831F5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19A8320B0(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(uint64_t);
  id v6;
  uint64_t v7;
  id v8;

  v5 = *(void (**)(uint64_t))(a1 + 32);
  OUTLINED_FUNCTION_30_2();
  v8 = a2;
  v6 = a3;
  v7 = OUTLINED_FUNCTION_187();
  v5(v7);
  OUTLINED_FUNCTION_28_2();

}

void *OUTLINED_FUNCTION_100@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char aBlock, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  a8 = a1;
  a9 = v9;
  return _Block_copy(&aBlock);
}

uint64_t OUTLINED_FUNCTION_100_0()
{
  return sub_19A8C47E8();
}

uint64_t sub_19A832130(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_11_3();
  return a3(a1, a2, v3 + v6, *(_QWORD *)(v3 + v7), *(_QWORD *)(v3 + v7 + 8));
}

uint64_t sub_19A832184(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *))
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  sub_19A8C4C38();
  if (qword_1ECFFE730 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19A8CE8E0;
  v8 = sub_19A8333A4();
  v9 = v8;
  v10 = 0x67616220746F47;
  if (!a1)
    v10 = 0x676162206F4ELL;
  v11 = 0xE700000000000000;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = v8;
  if (!a1)
    v11 = 0xE600000000000000;
  *(_QWORD *)(v7 + 32) = v10;
  *(_QWORD *)(v7 + 40) = v11;
  v13 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6F8);
  v14 = sub_19A8C4950();
  *(_QWORD *)(v7 + 96) = v12;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 72) = v14;
  *(_QWORD *)(v7 + 80) = v15;
  sub_19A8C47C4();
  swift_bridgeObjectRelease();
  return a4(a1, a2);
}

void sub_19A832304(void *a1, id a2)
{
  sub_19A83230C(a1, a2);
}

void sub_19A83230C(void *a1, id a2)
{
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  id v12;
  NSObject *oslog;
  uint64_t v14;

  if (a2)
  {
    v3 = a2;
    if (qword_1ECFFE6A8 != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_15_2();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ECFFE6B0);
    v5 = a2;
    v6 = a2;
    oslog = sub_19A8C4878();
    v7 = sub_19A8C4BE4();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)OUTLINED_FUNCTION_2();
      v14 = OUTLINED_FUNCTION_2();
      *(_DWORD *)v8 = 136315138;
      swift_getErrorValue();
      v9 = sub_19A8C4E6C();
      sub_19A844794(v9, v10, &v14);
      OUTLINED_FUNCTION_94_0();
      sub_19A8C4CC8();
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_32_1();
      OUTLINED_FUNCTION_32_1();
      _os_log_impl(&dword_19A825000, oslog, v7, "bag load %s", v8, 0xCu);
      OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_0_0();
    }
    OUTLINED_FUNCTION_32_1();
    OUTLINED_FUNCTION_32_1();
    OUTLINED_FUNCTION_32_1();

  }
  else if (a1)
  {
    v12 = a1;
    sub_19A8324D0(a1);
  }
}

void sub_19A8324D0(void *a1)
{
  uint64_t v1;
  unsigned int v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  OUTLINED_FUNCTION_23_1(OBJC_IVAR___PARSessionSwiftInternal_lock);
  v7 = a1;
  sub_19A832A54((uint64_t)a1);
  if (a1)
  {
    v3 = objc_msgSend(v7, sel_sampleClientTiming);
    *(_BYTE *)(v1 + OBJC_IVAR___PARSessionSwiftInternal__sampled) = v3;
    if (v3)
    {
      v4 = objc_msgSend(v7, sel_sampleClientTimingEventWhitelist);
      v5 = sub_19A8C4A1C();

      v6 = sub_19A832660(v5);
    }
    else
    {
      v6 = 0;
    }
  }
  else
  {
    v6 = 0;
    *(_BYTE *)(v1 + OBJC_IVAR___PARSessionSwiftInternal__sampled) = 0;
  }
  sub_19A832A60(v6);
  OUTLINED_FUNCTION_67_0();
}

void sub_19A83258C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  OUTLINED_FUNCTION_53_0();
  if (a1)
    OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_12(a10);
}

uint64_t sub_19A832660(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_19A8C4B0C();
  v10 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_19A832710(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_19A832710(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_19A8C4EA8();
  swift_bridgeObjectRetain();
  sub_19A8C4980();
  v8 = sub_19A8C4EC0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_19A8C4E30() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_19A8C4E30() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_19A8328BC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_19A8328BC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_19A85B338();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_19A85B610();
      goto LABEL_22;
    }
    sub_19A85B7C0();
  }
  v11 = *v4;
  sub_19A8C4EA8();
  sub_19A8C4980();
  result = sub_19A8C4EC0();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_19A8C4E30(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_19A8C4E54();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_19A8C4E30();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_19A832A54(uint64_t a1)
{
  OUTLINED_FUNCTION_39_1(a1, OBJC_IVAR___PARSessionSwiftInternal__bag);
}

uint64_t sub_19A832A60(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___PARSessionSwiftInternal__sampleClientTimingEventAllowlist) = a1;
  return swift_bridgeObjectRelease();
}

void sub_19A832B10()
{
  sub_19A832B34();
  OUTLINED_FUNCTION_40();
}

void sub_19A832B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void (*v16)(void);
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_34_2();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_52();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_86_1();
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_117_0();
  v13 = sub_19A83327C();
  if (v13)
  {
    v21 = (void *)v13;
    v22 = v5;
    v23 = v3;
    if (qword_1ECFFE730 != -1)
      swift_once();
    (id)qword_1ECFFEBE0;
    OUTLINED_FUNCTION_175();
    sub_19A8C4C44();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v14 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v14 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v14 + 64) = OUTLINED_FUNCTION_31_2(v14, MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v14 + 32) = v9;
    *(_QWORD *)(v14 + 40) = v7;
    swift_bridgeObjectRetain();
    sub_19A8C47C4();
    swift_bridgeObjectRelease();
    v15 = (void *)sub_19A8C4938();
    OUTLINED_FUNCTION_96_1();
    v16();
    v17 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v18 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v18 + v17, v1, v10);
    v19 = (_QWORD *)(v18 + ((v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v19 = v22;
    v19[1] = v23;
    v20 = OUTLINED_FUNCTION_80_0((uint64_t)sub_19A830A98);
    swift_retain();
    OUTLINED_FUNCTION_88();
    objc_msgSend(v21, sel_fileHandleAndAttributesForResource_completion_, v15, v20);
    OUTLINED_FUNCTION_99_1();
    OUTLINED_FUNCTION_18_1();

    OUTLINED_FUNCTION_62(v0, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  }
  OUTLINED_FUNCTION_0_2();
}

void OUTLINED_FUNCTION_58()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
}

uint64_t OUTLINED_FUNCTION_50()
{
  return sub_19A8C4AC4();
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  return sub_19A8C47C4();
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return swift_task_dealloc();
}

id OUTLINED_FUNCTION_27_2(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 0);
}

uint64_t OUTLINED_FUNCTION_25@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

void OUTLINED_FUNCTION_25_0(uint64_t a1)
{
  uint64_t *v1;

  sub_19A841E78(a1, v1);
}

uint64_t OUTLINED_FUNCTION_25_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return sub_19A8C42CC();
}

void sub_19A832E38()
{
  void *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[5];
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_34_2();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_52();
  v9 = *(NSObject **)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone((Class)_CPFeedbackPayload), sel_initWithCodable_, v5);
  if (v12)
  {
    v13 = v12;
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v14 = OUTLINED_FUNCTION_15_2();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ECFFE9F0);
    v15 = v13;
    OUTLINED_FUNCTION_168();
    v16 = OUTLINED_FUNCTION_105_1();
    v17 = OUTLINED_FUNCTION_65(v16);
    v46 = v9;
    if (v17)
    {
      v18 = OUTLINED_FUNCTION_2();
      v19 = OUTLINED_FUNCTION_2();
      v45[4] = v7;
      v45[2] = v19;
      v48 = v19;
      *(_DWORD *)v18 = 136315394;
      v45[1] = v18 + 4;
      v20 = OUTLINED_FUNCTION_17_2(v19, sel_debugDescription);
      v21 = sub_19A8C4944();
      v45[3] = v11;
      v22 = v3;
      v24 = v23;

      v47 = sub_19A844794(v21, v24, &v48);
      sub_19A8C4CC8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2048;
      v47 = v22;
      sub_19A8C4CC8();
      _os_log_impl(&dword_19A825000, v13, v1, "reportFeedback(%s, %llu)", (uint8_t *)v18, 0x16u);
      OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_0_0();
    }

    v28 = sub_19A83327C();
    if (!v28)
    {

      goto LABEL_17;
    }
    v29 = (void *)v28;
    sub_19A8C4C50();
    if (qword_1ECFFE730 != -1)
      swift_once();
    sub_19A8C4800();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v30 = v11;
    v31 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v31 + 16) = xmmword_19A8CE8E0;
    v32 = objc_msgSend(v0, sel_type);
    v33 = MEMORY[0x1E0DEDC38];
    *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEDBC8];
    *(_QWORD *)(v31 + 64) = v33;
    v34 = MEMORY[0x1E0DEE190];
    *(_DWORD *)(v31 + 32) = v32;
    v35 = MEMORY[0x1E0DEE1F0];
    *(_QWORD *)(v31 + 96) = v34;
    *(_QWORD *)(v31 + 104) = v35;
    *(_QWORD *)(v31 + 72) = v3;
    v44 = v31;
    LOBYTE(v43) = 2;
    sub_19A8C47C4();
    OUTLINED_FUNCTION_37_2();
    ((void (*)(char *, uint64_t))v46[1].isa)(v30, v8);
    v36 = v3;
    v37 = v0;
    sub_19A85BA84(v37);
    if (v39 >> 60 != 15)
    {
      v40 = v38;
      v41 = v39;
      v42 = (void *)sub_19A8C3E28();
      sub_19A83334C(v40, v41);
      objc_msgSend(v29, sel_reportFeedback_payloadData_queryId_, v7, v42, v36, 98, v43, v44);

      OUTLINED_FUNCTION_18_1();
LABEL_17:
      OUTLINED_FUNCTION_0_2();
      return;
    }
    __break(1u);
  }
  else
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v25 = OUTLINED_FUNCTION_15_2();
    v46 = OUTLINED_FUNCTION_22(v25, (uint64_t)qword_1ECFFE9F0);
    v26 = sub_19A8C4BE4();
    if (os_log_type_enabled(v46, v26))
    {
      v27 = (uint8_t *)OUTLINED_FUNCTION_2();
      *(_WORD *)v27 = 0;
      OUTLINED_FUNCTION_33_0(&dword_19A825000, v46, v26, "nil feedback payload", v27);
      OUTLINED_FUNCTION_0_0();
    }
    OUTLINED_FUNCTION_18_0(v46);
  }
}

uint64_t sub_19A83327C()
{
  uint64_t v0;
  id v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection), sel_remoteObjectProxyWithErrorHandler_, OUTLINED_FUNCTION_22_2((uint64_t)sub_19A8591A4, v3, v4, MEMORY[0x1E0C809B0], 1107296256, v6, v7));
  OUTLINED_FUNCTION_74_0();
  sub_19A8C4D10();
  OUTLINED_FUNCTION_71();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (OUTLINED_FUNCTION_21_2())
    return v5;
  else
    return 0;
}

uint64_t sub_19A83334C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_19A833360(a1, a2);
  return a1;
}

uint64_t sub_19A833360(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_19A8333A4()
{
  unint64_t result;

  result = qword_1ECFFE8D0;
  if (!qword_1ECFFE8D0)
  {
    result = MEMORY[0x19AECCD38](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ECFFE8D0);
  }
  return result;
}

uint64_t _CPResultSectionForFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  _CPSearchResultForFeedback *v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  double v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *v5;
        v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *v5;
    v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(_BYTE *)(a2 + v16))
      v10 = 0;
LABEL_14:
    if (v17 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v19 = objc_alloc_init(_CPSearchResultForFeedback);
        v47 = 0;
        v48 = 0;
        if (!PBReaderPlaceMark() || !_CPSearchResultForFeedbackReadFrom(v19, a2))
          goto LABEL_75;
        PBReaderRecallMark();
        if (v19)
          objc_msgSend(a1, "addResults:", v19, 0, 0);
        goto LABEL_55;
      case 2u:
        PBReaderReadString();
        v19 = (_CPSearchResultForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setIdentifier:", v19);
        goto LABEL_55;
      case 4u:
        v21 = *v3;
        v22 = *(_QWORD *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(double *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v23 = 0.0;
        }
        objc_msgSend(a1, "setRankingScore:", v23, v47, v48);
        goto LABEL_56;
      case 5u:
        PBReaderReadData();
        v19 = (_CPSearchResultForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setFallbackResultSection:", v19);
        goto LABEL_55;
      case 6u:
        PBReaderReadString();
        v19 = (_CPSearchResultForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setBundleIdentifier:", v19);
        goto LABEL_55;
      case 7u:
        v24 = 0;
        v25 = 0;
        v26 = 0;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          v29 = v28 + 1;
          if (v28 == -1 || v29 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v29;
            v26 |= (unint64_t)(v30 & 0x7F) << v24;
            if (v30 < 0)
            {
              v24 += 7;
              v15 = v25++ >= 9;
              if (v15)
              {
                v31 = 0;
                goto LABEL_62;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
        else
          v31 = v26;
LABEL_62:
        objc_msgSend(a1, "setKnownBundleIdentifier:", v31, v47, v48);
        goto LABEL_56;
      case 8u:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v37;
            v34 |= (unint64_t)(v38 & 0x7F) << v32;
            if (v38 < 0)
            {
              v32 += 7;
              v15 = v33++ >= 9;
              if (v15)
              {
                v34 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v34 = 0;
LABEL_66:
        objc_msgSend(a1, "setIsInitiallyHidden:", v34 != 0);
        goto LABEL_56;
      case 9u:
        v39 = 0;
        v40 = 0;
        v41 = 0;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v15 = v40++ >= 9;
              if (v15)
              {
                v46 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v46 = 0;
        else
          v46 = v41;
LABEL_71:
        objc_msgSend(a1, "setTotalAvailableResults:", v46, v47, v48);
        goto LABEL_56;
      case 0xAu:
        v19 = objc_alloc_init(_CPButtonForFeedback);
        if (PBReaderPlaceMark() && (_CPButtonForFeedbackReadFrom(v19, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTitleButtonItem:", v19, 0, 0);
LABEL_55:

LABEL_56:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_75:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_56;
    }
  }
}

uint64_t _CPSearchResultForFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  _CPActionItemForFeedback *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  unint64_t v38;
  double v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  uint64_t v122;
  char v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  char v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  char v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  char v151;
  unsigned int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  char v158;
  unsigned int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  char v165;
  unsigned int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  char v172;
  unsigned int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  char v178;
  char v179;
  unsigned int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  char v186;
  unsigned int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  char v192;
  char v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  char v199;
  uint64_t v200;
  char v201;
  unsigned int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  uint64_t v208;
  double v209;
  double v210;
  double v211;
  char v212;
  unsigned int v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  char v218;
  char v219;
  unsigned int v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  char v225;
  char v226;
  unsigned int v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  char v232;
  uint64_t v233;
  char v234;
  unsigned int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  char v240;
  uint64_t v241;
  char v242;
  unsigned int v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  char v248;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *v5;
        v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *v5;
    v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(_BYTE *)(a2 + v16))
      v10 = 0;
LABEL_14:
    if (v17 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v19 = (_CPActionItemForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setIdentifier:", v19);
        goto LABEL_281;
      case 2u:
        v20 = 0;
        v21 = 0;
        v22 = 0;
        while (2)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          v25 = v24 + 1;
          if (v24 == -1 || v25 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
            *(_QWORD *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              v15 = v21++ >= 9;
              if (v15)
              {
                v27 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v27 = 0;
        else
          v27 = v22;
LABEL_288:
        objc_msgSend(a1, "setTopHit:", v27);
        goto LABEL_282;
      case 3u:
        v19 = objc_alloc_init(_CPActionItemForFeedback);
        if (!PBReaderPlaceMark() || (_CPActionItemForFeedbackReadFrom(v19, a2) & 1) == 0)
          goto LABEL_419;
        PBReaderRecallMark();
        objc_msgSend(a1, "setAction:", v19, 0, 0);
        goto LABEL_281;
      case 4u:
        v19 = objc_alloc_init(_CPPunchoutForFeedback);
        if (!PBReaderPlaceMark() || (_CPPunchoutForFeedbackReadFrom(v19, a2) & 1) == 0)
          goto LABEL_419;
        PBReaderRecallMark();
        objc_msgSend(a1, "setPunchout:", v19, 0, 0);
        goto LABEL_281;
      case 5u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_293;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v35 = 0;
        else
          v35 = v30;
LABEL_293:
        objc_msgSend(a1, "setType:", v35);
        goto LABEL_282;
      case 7u:
        v19 = objc_alloc_init(_CPStruct);
        if (!PBReaderPlaceMark() || (_CPStructReadFrom(v19, a2) & 1) == 0)
          goto LABEL_419;
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocalFeatures:", v19, 0, 0);
        goto LABEL_281;
      case 0xBu:
        PBReaderReadString();
        v19 = (_CPActionItemForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setResultType:", v19);
        goto LABEL_281;
      case 0xCu:
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v39 = *(double *)(*(_QWORD *)(a2 + *v7) + v38);
          *(_QWORD *)(a2 + v37) = v38 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v39 = 0.0;
        }
        objc_msgSend(a1, "setRankingScore:", v39);
        goto LABEL_282;
      case 0xDu:
        v40 = 0;
        v41 = 0;
        v42 = 0;
        while (2)
        {
          v43 = *v3;
          v44 = *(_QWORD *)(a2 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v15 = v41++ >= 9;
              if (v15)
              {
                v42 = 0;
                goto LABEL_297;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v42 = 0;
LABEL_297:
        objc_msgSend(a1, "setIsStaticCorrection:", v42 != 0);
        goto LABEL_282;
      case 0xEu:
        v47 = 0;
        v48 = 0;
        v49 = 0;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v15 = v48++ >= 9;
              if (v15)
              {
                v54 = 0;
                goto LABEL_302;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v54 = 0;
        else
          v54 = v49;
LABEL_302:
        objc_msgSend(a1, "setQueryId:", v54);
        goto LABEL_282;
      case 0xFu:
        PBReaderReadString();
        v19 = (_CPActionItemForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setIntendedQuery:", v19);
        goto LABEL_281;
      case 0x10u:
        PBReaderReadString();
        v19 = (_CPActionItemForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCorrectedQuery:", v19);
        goto LABEL_281;
      case 0x11u:
        PBReaderReadString();
        v19 = (_CPActionItemForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCompletedQuery:", v19);
        goto LABEL_281;
      case 0x12u:
        v55 = 0;
        v56 = 0;
        v57 = 0;
        while (2)
        {
          v58 = *v3;
          v59 = *(_QWORD *)(a2 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
            *(_QWORD *)(a2 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v15 = v56++ >= 9;
              if (v15)
              {
                v57 = 0;
                goto LABEL_306;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v57 = 0;
LABEL_306:
        objc_msgSend(a1, "setIsLocalApplicationResult:", v57 != 0);
        goto LABEL_282;
      case 0x13u:
        v62 = 0;
        v63 = 0;
        v64 = 0;
        while (2)
        {
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
            *(_QWORD *)(a2 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v15 = v63++ >= 9;
              if (v15)
              {
                v64 = 0;
                goto LABEL_310;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v64 = 0;
LABEL_310:
        objc_msgSend(a1, "setPubliclyIndexable:", v64 != 0);
        goto LABEL_282;
      case 0x14u:
        PBReaderReadString();
        v19 = (_CPActionItemForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setFbr:", v19);
        goto LABEL_281;
      case 0x15u:
        PBReaderReadString();
        v19 = (_CPActionItemForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setUserInput:", v19);
        goto LABEL_281;
      case 0x16u:
        v69 = 0;
        v70 = 0;
        v71 = 0;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              v15 = v70++ >= 9;
              if (v15)
              {
                v71 = 0;
                goto LABEL_314;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v71 = 0;
LABEL_314:
        objc_msgSend(a1, "setIsFuzzyMatch:", v71 != 0);
        goto LABEL_282;
      case 0x17u:
        v76 = 0;
        v77 = 0;
        v78 = 0;
        while (2)
        {
          v79 = *v3;
          v80 = *(_QWORD *)(a2 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v80);
            *(_QWORD *)(a2 + v79) = v81;
            v78 |= (unint64_t)(v82 & 0x7F) << v76;
            if (v82 < 0)
            {
              v76 += 7;
              v15 = v77++ >= 9;
              if (v15)
              {
                v78 = 0;
                goto LABEL_318;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v78 = 0;
LABEL_318:
        objc_msgSend(a1, "setDoNotFold:", v78 != 0);
        goto LABEL_282;
      case 0x18u:
        v83 = 0;
        v84 = 0;
        v85 = 0;
        while (2)
        {
          v86 = *v3;
          v87 = *(_QWORD *)(a2 + v86);
          v88 = v87 + 1;
          if (v87 == -1 || v88 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
            *(_QWORD *)(a2 + v86) = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if (v89 < 0)
            {
              v83 += 7;
              v15 = v84++ >= 9;
              if (v15)
              {
                v90 = 0;
                goto LABEL_323;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v90 = 0;
        else
          v90 = v85;
LABEL_323:
        objc_msgSend(a1, "setBlockId:", v90);
        goto LABEL_282;
      case 0x19u:
        v91 = 0;
        v92 = 0;
        v93 = 0;
        while (2)
        {
          v94 = *v3;
          v95 = *(_QWORD *)(a2 + v94);
          v96 = v95 + 1;
          if (v95 == -1 || v96 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
            *(_QWORD *)(a2 + v94) = v96;
            v93 |= (unint64_t)(v97 & 0x7F) << v91;
            if (v97 < 0)
            {
              v91 += 7;
              v15 = v92++ >= 9;
              if (v15)
              {
                v98 = 0;
                goto LABEL_328;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v98 = 0;
        else
          v98 = v93;
LABEL_328:
        objc_msgSend(a1, "setHashedIdentifier:", v98);
        goto LABEL_282;
      case 0x1Au:
        PBReaderReadString();
        v19 = (_CPActionItemForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setResultBundleId:", v19);
        goto LABEL_281;
      case 0x1Bu:
        v99 = 0;
        v100 = 0;
        v101 = 0;
        while (2)
        {
          v102 = *v3;
          v103 = *(_QWORD *)(a2 + v102);
          v104 = v103 + 1;
          if (v103 == -1 || v104 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
            *(_QWORD *)(a2 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              v15 = v100++ >= 9;
              if (v15)
              {
                v106 = 0;
                goto LABEL_333;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v106 = 0;
        else
          v106 = v101;
LABEL_333:
        objc_msgSend(a1, "setKnownResultBundleId:", v106);
        goto LABEL_282;
      case 0x1Cu:
        PBReaderReadString();
        v19 = (_CPActionItemForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setSectionBundleIdentifier:", v19);
        goto LABEL_281;
      case 0x1Du:
        v107 = 0;
        v108 = 0;
        v109 = 0;
        while (2)
        {
          v110 = *v3;
          v111 = *(_QWORD *)(a2 + v110);
          v112 = v111 + 1;
          if (v111 == -1 || v112 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v111);
            *(_QWORD *)(a2 + v110) = v112;
            v109 |= (unint64_t)(v113 & 0x7F) << v107;
            if (v113 < 0)
            {
              v107 += 7;
              v15 = v108++ >= 9;
              if (v15)
              {
                v114 = 0;
                goto LABEL_338;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v114 = 0;
        else
          v114 = v109;
LABEL_338:
        objc_msgSend(a1, "setKnownSectionBundleIdentifier:", v114);
        goto LABEL_282;
      case 0x1Eu:
        PBReaderReadString();
        v19 = (_CPActionItemForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setApplicationBundleIdentifier:", v19);
        goto LABEL_281;
      case 0x1Fu:
        v115 = 0;
        v116 = 0;
        v117 = 0;
        while (2)
        {
          v118 = *v3;
          v119 = *(_QWORD *)(a2 + v118);
          v120 = v119 + 1;
          if (v119 == -1 || v120 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v120;
            v117 |= (unint64_t)(v121 & 0x7F) << v115;
            if (v121 < 0)
            {
              v115 += 7;
              v15 = v116++ >= 9;
              if (v15)
              {
                v122 = 0;
                goto LABEL_343;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v122 = 0;
        else
          v122 = v117;
LABEL_343:
        objc_msgSend(a1, "setKnownApplicationBundleIdentifier:", v122);
        goto LABEL_282;
      case 0x20u:
        PBReaderReadData();
        v19 = (_CPActionItemForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setEntityData:", v19);
        goto LABEL_281;
      case 0x21u:
        v123 = 0;
        v124 = 0;
        v125 = 0;
        while (2)
        {
          v126 = *v3;
          v127 = *(_QWORD *)(a2 + v126);
          v128 = v127 + 1;
          if (v127 == -1 || v128 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v127);
            *(_QWORD *)(a2 + v126) = v128;
            v125 |= (unint64_t)(v129 & 0x7F) << v123;
            if (v129 < 0)
            {
              v123 += 7;
              v15 = v124++ >= 9;
              if (v15)
              {
                v125 = 0;
                goto LABEL_347;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v125 = 0;
LABEL_347:
        objc_msgSend(a1, "setShouldUseCompactDisplay:", v125 != 0);
        goto LABEL_282;
      case 0x22u:
        v130 = 0;
        v131 = 0;
        v132 = 0;
        while (2)
        {
          v133 = *v3;
          v134 = *(_QWORD *)(a2 + v133);
          v135 = v134 + 1;
          if (v134 == -1 || v135 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v136 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
            *(_QWORD *)(a2 + v133) = v135;
            v132 |= (unint64_t)(v136 & 0x7F) << v130;
            if (v136 < 0)
            {
              v130 += 7;
              v15 = v131++ >= 9;
              if (v15)
              {
                v132 = 0;
                goto LABEL_351;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v132 = 0;
LABEL_351:
        objc_msgSend(a1, "setNoGoTakeover:", v132 != 0);
        goto LABEL_282;
      case 0x23u:
        v137 = 0;
        v138 = 0;
        v139 = 0;
        while (2)
        {
          v140 = *v3;
          v141 = *(_QWORD *)(a2 + v140);
          v142 = v141 + 1;
          if (v141 == -1 || v142 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v141);
            *(_QWORD *)(a2 + v140) = v142;
            v139 |= (unint64_t)(v143 & 0x7F) << v137;
            if (v143 < 0)
            {
              v137 += 7;
              v15 = v138++ >= 9;
              if (v15)
              {
                v139 = 0;
                goto LABEL_355;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v139 = 0;
LABEL_355:
        objc_msgSend(a1, "setPreferTopPlatter:", v139 != 0);
        goto LABEL_282;
      case 0x24u:
        v144 = 0;
        v145 = 0;
        v146 = 0;
        while (2)
        {
          v147 = *v3;
          v148 = *(_QWORD *)(a2 + v147);
          v149 = v148 + 1;
          if (v148 == -1 || v149 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v148);
            *(_QWORD *)(a2 + v147) = v149;
            v146 |= (unint64_t)(v150 & 0x7F) << v144;
            if (v150 < 0)
            {
              v144 += 7;
              v15 = v145++ >= 9;
              if (v15)
              {
                v146 = 0;
                goto LABEL_359;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v146 = 0;
LABEL_359:
        objc_msgSend(a1, "setWasCompact:", v146 != 0);
        goto LABEL_282;
      case 0x25u:
        v151 = 0;
        v152 = 0;
        v153 = 0;
        while (2)
        {
          v154 = *v3;
          v155 = *(_QWORD *)(a2 + v154);
          v156 = v155 + 1;
          if (v155 == -1 || v156 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v157 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v155);
            *(_QWORD *)(a2 + v154) = v156;
            v153 |= (unint64_t)(v157 & 0x7F) << v151;
            if (v157 < 0)
            {
              v151 += 7;
              v15 = v152++ >= 9;
              if (v15)
              {
                v153 = 0;
                goto LABEL_363;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v153 = 0;
LABEL_363:
        objc_msgSend(a1, "setDidTakeoverGo:", v153 != 0);
        goto LABEL_282;
      case 0x26u:
        v158 = 0;
        v159 = 0;
        v160 = 0;
        while (2)
        {
          v161 = *v3;
          v162 = *(_QWORD *)(a2 + v161);
          v163 = v162 + 1;
          if (v162 == -1 || v163 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v164 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v162);
            *(_QWORD *)(a2 + v161) = v163;
            v160 |= (unint64_t)(v164 & 0x7F) << v158;
            if (v164 < 0)
            {
              v158 += 7;
              v15 = v159++ >= 9;
              if (v15)
              {
                v160 = 0;
                goto LABEL_367;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v160 = 0;
LABEL_367:
        objc_msgSend(a1, "setUsesCompactDisplay:", v160 != 0);
        goto LABEL_282;
      case 0x27u:
        v165 = 0;
        v166 = 0;
        v167 = 0;
        while (2)
        {
          v168 = *v3;
          v169 = *(_QWORD *)(a2 + v168);
          v170 = v169 + 1;
          if (v169 == -1 || v170 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v171 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v169);
            *(_QWORD *)(a2 + v168) = v170;
            v167 |= (unint64_t)(v171 & 0x7F) << v165;
            if (v171 < 0)
            {
              v165 += 7;
              v15 = v166++ >= 9;
              if (v15)
              {
                v167 = 0;
                goto LABEL_371;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v167 = 0;
LABEL_371:
        objc_msgSend(a1, "setIsInstantAnswer:", v167 != 0);
        goto LABEL_282;
      case 0x28u:
        v172 = 0;
        v173 = 0;
        v174 = 0;
        while (2)
        {
          v175 = *v3;
          v176 = *(_QWORD *)(a2 + v175);
          v177 = v176 + 1;
          if (v176 == -1 || v177 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v178 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v176);
            *(_QWORD *)(a2 + v175) = v177;
            v174 |= (unint64_t)(v178 & 0x7F) << v172;
            if (v178 < 0)
            {
              v172 += 7;
              v15 = v173++ >= 9;
              if (v15)
              {
                v174 = 0;
                goto LABEL_375;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v174 = 0;
LABEL_375:
        objc_msgSend(a1, "setShouldAutoNavigate:", v174 != 0);
        goto LABEL_282;
      case 0x29u:
        v19 = objc_alloc_init(_CPCardForFeedback);
        if (!PBReaderPlaceMark() || !_CPCardForFeedbackReadFrom(v19, a2))
          goto LABEL_419;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCard:", v19, 0, 0);
        goto LABEL_281;
      case 0x2Au:
        v19 = objc_alloc_init(_CPCardForFeedback);
        if (!PBReaderPlaceMark() || !_CPCardForFeedbackReadFrom(v19, a2))
          goto LABEL_419;
        PBReaderRecallMark();
        objc_msgSend(a1, "setInlineCard:", v19, 0, 0);
        goto LABEL_281;
      case 0x2Bu:
        v19 = objc_alloc_init(_CPCardForFeedback);
        if (!PBReaderPlaceMark() || !_CPCardForFeedbackReadFrom(v19, a2))
          goto LABEL_419;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCompactCard:", v19, 0, 0);
        goto LABEL_281;
      case 0x2Cu:
        v179 = 0;
        v180 = 0;
        v181 = 0;
        while (2)
        {
          v182 = *v3;
          v183 = *(_QWORD *)(a2 + v182);
          v184 = v183 + 1;
          if (v183 == -1 || v184 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v185 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v183);
            *(_QWORD *)(a2 + v182) = v184;
            v181 |= (unint64_t)(v185 & 0x7F) << v179;
            if (v185 < 0)
            {
              v179 += 7;
              v15 = v180++ >= 9;
              if (v15)
              {
                v181 = 0;
                goto LABEL_379;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v181 = 0;
LABEL_379:
        objc_msgSend(a1, "setContainsPersonalResult:", v181 != 0);
        goto LABEL_282;
      case 0x2Du:
        v186 = 0;
        v187 = 0;
        v188 = 0;
        while (2)
        {
          v189 = *v3;
          v190 = *(_QWORD *)(a2 + v189);
          v191 = v190 + 1;
          if (v190 == -1 || v191 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v192 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v190);
            *(_QWORD *)(a2 + v189) = v191;
            v188 |= (unint64_t)(v192 & 0x7F) << v186;
            if (v192 < 0)
            {
              v186 += 7;
              v15 = v187++ >= 9;
              if (v15)
              {
                v188 = 0;
                goto LABEL_383;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v188 = 0;
LABEL_383:
        objc_msgSend(a1, "setDidRerankPersonalResult:", v188 != 0);
        goto LABEL_282;
      case 0x2Eu:
        v193 = 0;
        v194 = 0;
        v195 = 0;
        while (2)
        {
          v196 = *v3;
          v197 = *(_QWORD *)(a2 + v196);
          v198 = v197 + 1;
          if (v197 == -1 || v198 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v199 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v197);
            *(_QWORD *)(a2 + v196) = v198;
            v195 |= (unint64_t)(v199 & 0x7F) << v193;
            if (v199 < 0)
            {
              v193 += 7;
              v15 = v194++ >= 9;
              if (v15)
              {
                v200 = 0;
                goto LABEL_388;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v200 = 0;
        else
          v200 = v195;
LABEL_388:
        objc_msgSend(a1, "setCoreSpotlightIndexUsed:", v200);
        goto LABEL_282;
      case 0x2Fu:
        v201 = 0;
        v202 = 0;
        v203 = 0;
        while (2)
        {
          v204 = *v3;
          v205 = *(_QWORD *)(a2 + v204);
          v206 = v205 + 1;
          if (v205 == -1 || v206 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v207 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v205);
            *(_QWORD *)(a2 + v204) = v206;
            v203 |= (unint64_t)(v207 & 0x7F) << v201;
            if (v207 < 0)
            {
              v201 += 7;
              v15 = v202++ >= 9;
              if (v15)
              {
                v208 = 0;
                goto LABEL_393;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v208 = 0;
        else
          v208 = v203;
LABEL_393:
        objc_msgSend(a1, "setCoreSpotlightIndexUsedReason:", v208);
        goto LABEL_282;
      case 0x30u:
        v19 = objc_alloc_init(_CPCoreSpotlightRankingSignalsForFeedback);
        if (!PBReaderPlaceMark()
          || (_CPCoreSpotlightRankingSignalsForFeedbackReadFrom(v19, a2, v209) & 1) == 0)
        {
          goto LABEL_419;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCoreSpotlightRankingSignals:", v19, 0, 0);
        goto LABEL_281;
      case 0x31u:
        v19 = objc_alloc_init(_CPMailRankingSignalsForFeedback);
        if (!PBReaderPlaceMark() || (_CPMailRankingSignalsForFeedbackReadFrom(v19, a2, v210) & 1) == 0)
          goto LABEL_419;
        PBReaderRecallMark();
        objc_msgSend(a1, "setMailRankingSignals:", v19, 0, 0);
        goto LABEL_281;
      case 0x32u:
        v19 = objc_alloc_init(_CPMailResultDetailsForFeedback);
        if (!PBReaderPlaceMark() || (_CPMailResultDetailsForFeedbackReadFrom(v19, a2, v211) & 1) == 0)
          goto LABEL_419;
        PBReaderRecallMark();
        objc_msgSend(a1, "setMailResultDetails:", v19, 0, 0);
        goto LABEL_281;
      case 0x33u:
        v212 = 0;
        v213 = 0;
        v214 = 0;
        while (2)
        {
          v215 = *v3;
          v216 = *(_QWORD *)(a2 + v215);
          v217 = v216 + 1;
          if (v216 == -1 || v217 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v218 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v216);
            *(_QWORD *)(a2 + v215) = v217;
            v214 |= (unint64_t)(v218 & 0x7F) << v212;
            if (v218 < 0)
            {
              v212 += 7;
              v15 = v213++ >= 9;
              if (v15)
              {
                v214 = 0;
                goto LABEL_397;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v214 = 0;
LABEL_397:
        objc_msgSend(a1, "setIsVideoAssetFromPhotos:", v214 != 0);
        goto LABEL_282;
      case 0x34u:
        v219 = 0;
        v220 = 0;
        v221 = 0;
        while (2)
        {
          v222 = *v3;
          v223 = *(_QWORD *)(a2 + v222);
          v224 = v223 + 1;
          if (v223 == -1 || v224 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v225 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v223);
            *(_QWORD *)(a2 + v222) = v224;
            v221 |= (unint64_t)(v225 & 0x7F) << v219;
            if (v225 < 0)
            {
              v219 += 7;
              v15 = v220++ >= 9;
              if (v15)
              {
                v221 = 0;
                goto LABEL_401;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v221 = 0;
LABEL_401:
        objc_msgSend(a1, "setIsMailInstantAnswerUpdated:", v221 != 0);
        goto LABEL_282;
      case 0x35u:
        v226 = 0;
        v227 = 0;
        v228 = 0;
        while (2)
        {
          v229 = *v3;
          v230 = *(_QWORD *)(a2 + v229);
          v231 = v230 + 1;
          if (v230 == -1 || v231 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v232 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v230);
            *(_QWORD *)(a2 + v229) = v231;
            v228 |= (unint64_t)(v232 & 0x7F) << v226;
            if (v232 < 0)
            {
              v226 += 7;
              v15 = v227++ >= 9;
              if (v15)
              {
                v233 = 0;
                goto LABEL_406;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v233 = 0;
        else
          v233 = v228;
LABEL_406:
        objc_msgSend(a1, "setIndexOfSectionWhenRanked:", v233);
        goto LABEL_282;
      case 0x36u:
        v234 = 0;
        v235 = 0;
        v236 = 0;
        while (2)
        {
          v237 = *v3;
          v238 = *(_QWORD *)(a2 + v237);
          v239 = v238 + 1;
          if (v238 == -1 || v239 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v240 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v238);
            *(_QWORD *)(a2 + v237) = v239;
            v236 |= (unint64_t)(v240 & 0x7F) << v234;
            if (v240 < 0)
            {
              v234 += 7;
              v15 = v235++ >= 9;
              if (v15)
              {
                v241 = 0;
                goto LABEL_411;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v241 = 0;
        else
          v241 = v236;
LABEL_411:
        objc_msgSend(a1, "setIndexOfResultInSectionWhenRanked:", v241);
        goto LABEL_282;
      case 0x37u:
        v19 = objc_alloc_init(_CPSafariAttributes);
        if (!PBReaderPlaceMark() || (_CPSafariAttributesReadFrom(v19, a2) & 1) == 0)
          goto LABEL_419;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSafariAttributes:", v19, 0, 0);
        goto LABEL_281;
      case 0x38u:
        v242 = 0;
        v243 = 0;
        v244 = 0;
        while (2)
        {
          v245 = *v3;
          v246 = *(_QWORD *)(a2 + v245);
          v247 = v246 + 1;
          if (v246 == -1 || v247 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v248 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v246);
            *(_QWORD *)(a2 + v245) = v247;
            v244 |= (unint64_t)(v248 & 0x7F) << v242;
            if (v248 < 0)
            {
              v242 += 7;
              v15 = v243++ >= 9;
              if (v15)
              {
                v244 = 0;
                goto LABEL_415;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v244 = 0;
LABEL_415:
        objc_msgSend(a1, "setHasAppTopHitShortcut:", v244 != 0);
        goto LABEL_282;
      case 0x39u:
        v19 = objc_alloc_init(_CPPhotosAttributes);
        if (!PBReaderPlaceMark() || (_CPPhotosAttributesReadFrom(v19, a2) & 1) == 0)
          goto LABEL_419;
        PBReaderRecallMark();
        objc_msgSend(a1, "setPhotosAttributes:", v19, 0, 0);
        goto LABEL_281;
      case 0x3Au:
        v19 = objc_alloc_init(_CPPhotosAggregatedInfo);
        if (PBReaderPlaceMark() && (_CPPhotosAggregatedInfoReadFrom(v19, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPhotosAggregatedInfo:", v19, 0, 0);
LABEL_281:

LABEL_282:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_419:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_282;
    }
  }
}

void sub_19A8373D4()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;

  sub_19A837418();
  v3 = v1;
  v2 = v0;
  sub_19A837454();
  OUTLINED_FUNCTION_3_4(v3);
}

void sub_19A837418()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_23_1(OBJC_IVAR___PARSessionSwiftInternal_lock);
  v1 = *(id *)(v0 + OBJC_IVAR___PARSessionSwiftInternal__configuration);
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_40();
}

void sub_19A837454()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  void *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (**v37)(void *, id);
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  char *v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;

  OUTLINED_FUNCTION_8_7();
  v3 = v2;
  v5 = v4;
  v40[2] = v6;
  v7 = OUTLINED_FUNCTION_52();
  v44 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v44 + 64);
  MEMORY[0x1E0C80A78](v7, v9, v10, v11, v12);
  OUTLINED_FUNCTION_85_1();
  MEMORY[0x1E0C80A78](v13, v14, v15, v16, v17);
  v19 = (char *)v40 - v18;
  v20 = OUTLINED_FUNCTION_3_0();
  *(_QWORD *)(v20 + 16) = v3;
  v21 = qword_1ECFFEA20;
  v43 = v3;
  if (v21 != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_15_2();
  OUTLINED_FUNCTION_22(v22, (uint64_t)qword_1ECFFE9F0);
  v23 = OUTLINED_FUNCTION_139();
  if (OUTLINED_FUNCTION_49_0(v23))
  {
    v24 = (uint8_t *)OUTLINED_FUNCTION_2();
    *(_WORD *)v24 = 0;
    OUTLINED_FUNCTION_33_0(&dword_19A825000, v3, v1, "requesting bag", v24);
    OUTLINED_FUNCTION_0_0();
  }

  if (qword_1ECFFE730 != -1)
    swift_once();
  v25 = (id)qword_1ECFFEBE0;
  sub_19A8C47E8();
  sub_19A8C4C44();
  OUTLINED_FUNCTION_155();
  sub_19A8C47D0();
  v26 = *(void **)(v5 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
  v27 = v44;
  v28 = v19;
  v29 = *(void (**)(uint64_t))(v44 + 16);
  v42 = v28;
  v29(v0);
  v30 = v7;
  v31 = *(unsigned __int8 *)(v27 + 80);
  v32 = swift_allocObject();
  v40[1] = v8;
  v33 = v32;
  *(_QWORD *)(v32 + 16) = sub_19A832304;
  *(_QWORD *)(v32 + 24) = v20;
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
  v41 = v30;
  v34(v32 + ((v31 + 32) & ~v31), v0, v30);
  v47 = sub_19A8658B4;
  v48 = v33;
  v45 = MEMORY[0x1E0C809B0];
  v46 = 1107296256;
  OUTLINED_FUNCTION_29_2((uint64_t)sub_19A8591A4);
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_63_1(v26, sel_remoteObjectProxyWithErrorHandler_);
  OUTLINED_FUNCTION_55_1();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_42_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (OUTLINED_FUNCTION_21_2())
  {
    v35 = v41;
    ((void (*)(uint64_t, char *, uint64_t))v29)(v0, v42, v41);
    OUTLINED_FUNCTION_148();
    v36 = swift_allocObject();
    v34(v36 + ((v31 + 16) & ~v31), v0, v35);
    v37 = (void (**)(void *, id))((char *)v29 + v36);
    *v37 = sub_19A832304;
    v37[1] = (void (*)(void *, id))v20;
    v47 = sub_19A8658C4;
    v48 = v36;
    v45 = MEMORY[0x1E0C809B0];
    v46 = 1107296256;
    OUTLINED_FUNCTION_29_2((uint64_t)sub_19A82D054);
    OUTLINED_FUNCTION_30_2();
    v38 = OUTLINED_FUNCTION_33_1();
    OUTLINED_FUNCTION_110_0(v38, sel_bag_reply_);
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_42_2();
  }
  else
  {
    sub_19A8C4C38();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v39 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v39 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v39 + 64) = OUTLINED_FUNCTION_31_2(v39, MEMORY[0x1E0DEA968]);
    strcpy((char *)(v39 + 32), "casting_failed");
    *(_BYTE *)(v39 + 47) = -18;
    OUTLINED_FUNCTION_6_6();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_165();
  }
  OUTLINED_FUNCTION_63(v44);

  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_3_5();
}

uint64_t OUTLINED_FUNCTION_14_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_14_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  return sub_19A8C44B8();
}

uint64_t OUTLINED_FUNCTION_97()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_97_0()
{
  return sub_19A83327C();
}

uint64_t OUTLINED_FUNCTION_63@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t OUTLINED_FUNCTION_81()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

void OUTLINED_FUNCTION_81_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_79()
{
  return type metadata accessor for PARImageLoader.ImageLocation();
}

void OUTLINED_FUNCTION_79_0()
{
  JUMPOUT(0x19AECC324);
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_75()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_117()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_6_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

unint64_t OUTLINED_FUNCTION_6_4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_19A86725C(v1, v0);
}

id OUTLINED_FUNCTION_6_5(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_6_8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_19A865E80(v0 + 72, v1 + 72);
}

void OUTLINED_FUNCTION_54_0()
{
  void *v0;

}

BOOL OUTLINED_FUNCTION_65(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_21_1(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_21_2()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  return sub_19A8C4938();
}

uint64_t OUTLINED_FUNCTION_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  return swift_dynamicCastObjCClass();
}

uint64_t OUTLINED_FUNCTION_20_2()
{
  return sub_19A8C4308();
}

uint64_t _CPFeedbackPayloadReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  _CPFeedback *v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = objc_alloc_init(_CPFeedback);
        if (!PBReaderPlaceMark() || (_CPFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 2u:
        v18 = objc_alloc_init(_CPSearchViewAppearFeedback);
        if (!PBReaderPlaceMark() || (_CPSearchViewAppearFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSearchViewAppearFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 3u:
        v18 = objc_alloc_init(_CPSearchViewDisappearFeedback);
        if (!PBReaderPlaceMark() || (_CPSearchViewDisappearFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSearchViewDisappearFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 4u:
        v18 = objc_alloc_init(_CPRankingFeedback);
        if (!PBReaderPlaceMark() || (_CPRankingFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setRankingFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 5u:
        v18 = objc_alloc_init(_CPSectionRankingFeedback);
        if (!PBReaderPlaceMark() || (_CPSectionRankingFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSectionRankingFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 6u:
        v18 = objc_alloc_init(_CPResultRankingFeedback);
        if (!PBReaderPlaceMark() || (_CPResultRankingFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResultRankingFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 7u:
        v18 = objc_alloc_init(_CPResultFeedback);
        if (!PBReaderPlaceMark() || (_CPResultFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResultFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 8u:
        v18 = objc_alloc_init(_CPResultEngagementFeedback);
        if (!PBReaderPlaceMark() || (_CPResultEngagementFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResultEngagementFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 9u:
        v18 = objc_alloc_init(_CPVisibleResultsFeedback);
        if (!PBReaderPlaceMark() || (_CPVisibleResultsFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setVisibleResultsFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0xAu:
        v18 = objc_alloc_init(_CPCardSectionFeedback);
        if (!PBReaderPlaceMark() || (_CPCardSectionFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCardSectionFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0xBu:
        v18 = objc_alloc_init(_CPMapsCardSectionEngagementFeedback);
        if (!PBReaderPlaceMark() || (_CPMapsCardSectionEngagementFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setMapsCardSectionEngagementFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0xCu:
        v18 = objc_alloc_init(_CPStoreCardSectionEngagementFeedback);
        if (!PBReaderPlaceMark() || (_CPStoreCardSectionEngagementFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStoreCardSectionEngagementFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0xDu:
        v18 = objc_alloc_init(_CPStartSearchFeedback);
        if (!PBReaderPlaceMark() || (_CPStartSearchFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartSearchFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0xEu:
        v18 = objc_alloc_init(_CPEndSearchFeedback);
        if (!PBReaderPlaceMark() || (_CPEndSearchFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndSearchFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0xFu:
        v18 = objc_alloc_init(_CPStartNetworkSearchFeedback);
        if (!PBReaderPlaceMark() || !_CPStartNetworkSearchFeedbackReadFrom(v18, a2))
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartNetworkSearchFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x10u:
        v18 = objc_alloc_init(_CPEndNetworkSearchFeedback);
        if (!PBReaderPlaceMark() || (_CPEndNetworkSearchFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndNetworkSearchFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x11u:
        v18 = objc_alloc_init(_CPStartLocalSearchFeedback);
        if (!PBReaderPlaceMark() || (_CPStartLocalSearchFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartLocalSearchFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x12u:
        v18 = objc_alloc_init(_CPEndLocalSearchFeedback);
        if (!PBReaderPlaceMark() || (_CPEndLocalSearchFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndLocalSearchFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x13u:
        v18 = objc_alloc_init(_CPErrorFeedback);
        if (!PBReaderPlaceMark() || (_CPErrorFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setErrorFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x14u:
        v18 = objc_alloc_init(_CPCustomFeedback);
        if (!PBReaderPlaceMark() || (_CPCustomFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCustomFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x15u:
        v18 = objc_alloc_init(_CPSuggestionEngagementFeedback);
        if (!PBReaderPlaceMark() || (_CPSuggestionEngagementFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSuggestionEngagementFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x16u:
        v18 = objc_alloc_init(_CPCardViewDisappearFeedback);
        if (!PBReaderPlaceMark() || (_CPCardViewDisappearFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCardViewDisappearFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x17u:
        v18 = objc_alloc_init(_CPVisibleSuggestionsFeedback);
        if (!PBReaderPlaceMark() || (_CPVisibleSuggestionsFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setVisibleSuggestionsFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x18u:
        v18 = objc_alloc_init(_CPResultsReceivedAfterTimeoutFeedback);
        if (!PBReaderPlaceMark() || (_CPResultsReceivedAfterTimeoutFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResultsReceivedAfterTimeoutFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x19u:
        v18 = objc_alloc_init(_CPLateSectionsAppendedFeedback);
        if (!PBReaderPlaceMark() || (_CPLateSectionsAppendedFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setLateSectionsAppendedFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x1Au:
        v18 = objc_alloc_init(_CPClearInputFeedback);
        if (!PBReaderPlaceMark() || (_CPClearInputFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setClearInputFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x1Bu:
        v18 = objc_alloc_init(_CPSectionEngagementFeedback);
        if (!PBReaderPlaceMark() || (_CPSectionEngagementFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSectionEngagementFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x1Cu:
        v18 = objc_alloc_init(_CPVisibleSectionHeaderFeedback);
        if (!PBReaderPlaceMark() || (_CPVisibleSectionHeaderFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setVisibleSectionHeaderFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x1Du:
        v18 = objc_alloc_init(_CPDidGoToSiteFeedback);
        if (!PBReaderPlaceMark() || (_CPDidGoToSiteFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setDidGoToSiteFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x1Eu:
        v18 = objc_alloc_init(_CPDidGoToSearchFeedback);
        if (!PBReaderPlaceMark() || (_CPDidGoToSearchFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setDidGoToSearchFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x1Fu:
        v18 = objc_alloc_init(_CPSessionMissingResultsFeedback);
        if (!PBReaderPlaceMark() || (_CPSessionMissingResultsFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSessionMissingResultsFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x20u:
        v18 = objc_alloc_init(_CPSessionMissingSuggestionsFeedback);
        if (!PBReaderPlaceMark() || (_CPSessionMissingSuggestionsFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSessionMissingSuggestionsFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x21u:
        v18 = objc_alloc_init(_CPResultGradingFeedback);
        if (!PBReaderPlaceMark() || (_CPResultGradingFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResultGradingFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x22u:
        v18 = objc_alloc_init(_CPLookupHintRelevancyFeedback);
        if (!PBReaderPlaceMark() || (_CPLookupHintRelevancyFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setLookupHintRelevancyFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x23u:
        v18 = objc_alloc_init(_CPConnectionInvalidatedFeedback);
        if (!PBReaderPlaceMark() || (_CPConnectionInvalidatedFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setConnectionInvalidatedFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x24u:
        v18 = objc_alloc_init(_CPCardSectionEngagementFeedback);
        if (!PBReaderPlaceMark() || (_CPCardSectionEngagementFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCardSectionEngagementFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x25u:
        v18 = objc_alloc_init(_CPSessionEndFeedback);
        if (!PBReaderPlaceMark() || (_CPSessionEndFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSessionEndFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x26u:
        v18 = objc_alloc_init(_CPCardViewAppearFeedback);
        if (!PBReaderPlaceMark() || (_CPCardViewAppearFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCardViewAppearFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x27u:
        v18 = objc_alloc_init(_CPSkipSearchFeedback);
        if (!PBReaderPlaceMark() || (_CPSkipSearchFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSkipSearchFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x28u:
        v18 = objc_alloc_init(_CPCacheHitFeedback);
        if (!PBReaderPlaceMark() || (_CPCacheHitFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCacheHitFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x29u:
        v18 = objc_alloc_init(_CPCBAEngagementFeedback);
        if (!PBReaderPlaceMark() || (_CPCBAEngagementFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCbaEngagementFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x2Au:
        v18 = objc_alloc_init(_CPClientTimingFeedback);
        if (!PBReaderPlaceMark() || (_CPClientTimingFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setClientTimingFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x2Bu:
        v18 = objc_alloc_init(_CPCommandEngagementFeedback);
        if (!PBReaderPlaceMark() || (_CPCommandEngagementFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCommandEngagementFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x2Cu:
        v18 = objc_alloc_init(_CPDynamicButtonVisibilityFeedback);
        if (!PBReaderPlaceMark() || (_CPDynamicButtonVisibilityFeedbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_172;
        PBReaderRecallMark();
        objc_msgSend(a1, "setDynamicButtonVisibilityFeedback:", v18, 0, 0);
        goto LABEL_154;
      case 0x2Du:
        v18 = objc_alloc_init(_CPExperimentTriggeredFeedback);
        if (PBReaderPlaceMark() && (_CPExperimentTriggeredFeedbackReadFrom(v18, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setExperimentTriggeredFeedback:", v18, 0, 0);
LABEL_154:

LABEL_155:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_172:

        return 0;
      case 0x64u:
        v20 = 0;
        v21 = 0;
        v22 = 0;
        while (2)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          v25 = v24 + 1;
          if (v24 == -1 || v25 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
            *(_QWORD *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              v15 = v21++ >= 9;
              if (v15)
              {
                v27 = 0;
                goto LABEL_170;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v27 = 0;
        else
          v27 = v22;
LABEL_170:
        objc_msgSend(a1, "setQueryId:", v27);
        goto LABEL_155;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_155;
    }
  }
}

uint64_t _CPEndLocalSearchFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPQueryUnderstandingParse *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_51;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_54;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_51:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_54:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_65;
      case 2u:
        PBReaderReadString();
        v27 = (_CPQueryUnderstandingParse *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setUuid:", v27);
        goto LABEL_49;
      case 3u:
        v27 = objc_alloc_init(_CPQueryUnderstandingParse);
        if (!PBReaderPlaceMark() || (_CPQueryUnderstandingParseReadFrom(v27, a2) & 1) == 0)
          goto LABEL_67;
        PBReaderRecallMark();
        objc_msgSend(a1, "setQuParse:", v27, 0, 0);
        goto LABEL_49;
      case 4u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v4;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v35 = 0;
        else
          v35 = v30;
LABEL_59:
        objc_msgSend(a1, "setL1ToL2ResultCount:", v35);
        goto LABEL_65;
      case 5u:
        v36 = 0;
        v37 = 0;
        v38 = 0;
        while (2)
        {
          v39 = *v4;
          v40 = *(_QWORD *)(a2 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v15 = v37++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v43 = 0;
        else
          v43 = v38;
LABEL_64:
        objc_msgSend(a1, "setCoreSpotlightIndexCount:", v43);
        goto LABEL_65;
      case 6u:
        v27 = objc_alloc_init(_CPPhotosRankingInfo);
        if (PBReaderPlaceMark() && (_CPPhotosRankingInfoReadFrom(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPhotosRankingInfo:", v27, 0, 0);
LABEL_49:

LABEL_65:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_67:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_65;
    }
  }
}

uint64_t _CPStartLocalSearchFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPPerformEntityQueryCommandForFeedback *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_83;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_86;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_83:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_86:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_66;
      case 2u:
        PBReaderReadString();
        v27 = (_CPPerformEntityQueryCommandForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setInput:", v27);
        goto LABEL_65;
      case 3u:
        PBReaderReadString();
        v27 = (_CPPerformEntityQueryCommandForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setUuid:", v27);
        goto LABEL_65;
      case 4u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v4;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v35 = 0;
        else
          v35 = v30;
LABEL_91:
        objc_msgSend(a1, "setTriggerEvent:", v35);
        goto LABEL_66;
      case 5u:
        v36 = 0;
        v37 = 0;
        v38 = 0;
        while (2)
        {
          v39 = *v4;
          v40 = *(_QWORD *)(a2 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v15 = v37++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v43 = 0;
        else
          v43 = v38;
LABEL_96:
        objc_msgSend(a1, "setQueryId:", v43);
        goto LABEL_66;
      case 6u:
        v44 = 0;
        v45 = 0;
        v46 = 0;
        while (2)
        {
          v47 = *v4;
          v48 = *(_QWORD *)(a2 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v15 = v45++ >= 9;
              if (v15)
              {
                v51 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v51 = 0;
        else
          v51 = v46;
LABEL_101:
        objc_msgSend(a1, "setIndexType:", v51);
        goto LABEL_66;
      case 7u:
        v52 = 0;
        v53 = 0;
        v54 = 0;
        while (2)
        {
          v55 = *v4;
          v56 = *(_QWORD *)(a2 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              v15 = v53++ >= 9;
              if (v15)
              {
                v59 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v59 = 0;
        else
          v59 = v54;
LABEL_106:
        objc_msgSend(a1, "setSearchType:", v59);
        goto LABEL_66;
      case 8u:
        PBReaderReadString();
        v27 = (_CPPerformEntityQueryCommandForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setOriginatingApp:", v27);
        goto LABEL_65;
      case 9u:
        v27 = objc_alloc_init(_CPPerformEntityQueryCommandForFeedback);
        if (!PBReaderPlaceMark() || (_CPPerformEntityQueryCommandForFeedbackReadFrom(v27, a2) & 1) == 0)
          goto LABEL_117;
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityQueryCommand:", v27, 0, 0);
        goto LABEL_65;
      case 0xAu:
        v27 = objc_alloc_init(_CPIndexStateForFeedback);
        if (PBReaderPlaceMark() && (_CPIndexStateForFeedbackReadFrom(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setIndexState:", v27, 0, 0);
LABEL_65:

LABEL_66:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_117:

        return 0;
      case 0xBu:
        v60 = 0;
        v61 = 0;
        v62 = 0;
        while (2)
        {
          v63 = *v4;
          v64 = *(_QWORD *)(a2 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              v15 = v61++ >= 9;
              if (v15)
              {
                v67 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v67 = 0;
        else
          v67 = v62;
LABEL_111:
        objc_msgSend(a1, "setCoreSpotlightIndexTypeUsed:", v67);
        goto LABEL_66;
      case 0xCu:
        v68 = 0;
        v69 = 0;
        v70 = 0;
        while (2)
        {
          v71 = *v4;
          v72 = *(_QWORD *)(a2 + v71);
          v73 = v72 + 1;
          if (v72 == -1 || v73 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
            *(_QWORD *)(a2 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              v15 = v69++ >= 9;
              if (v15)
              {
                v70 = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v70 = 0;
LABEL_115:
        objc_msgSend(a1, "setIsPhotosScopedSearch:", v70 != 0);
        goto LABEL_66;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_66;
    }
  }
}

uint64_t _CPVisibleSectionHeaderFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  void *v35;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (1)
        {
          v30 = *v4;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v5))
            break;
          v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
          *(_QWORD *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0)
            goto LABEL_44;
          v27 += 7;
          v15 = v28++ >= 9;
          if (v15)
          {
            v34 = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_44:
        v34 = *(_BYTE *)(a2 + *v6) ? 0 : v29;
LABEL_47:
        objc_msgSend(a1, "setTimestamp:", v34);
      }
      else if ((_DWORD)v18 == 4)
      {
        PBReaderReadString();
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setSectionId:", v35);

      }
      else if ((_DWORD)v18 == 3)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v4;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v5))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_39;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_42;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_39:
        v26 = *(_BYTE *)(a2 + *v6) ? 0 : v21;
LABEL_42:
        objc_msgSend(a1, "setHeaderType:", v26);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPSectionRankingFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t result;
  _CPResultRankingFeedback *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *v6;
        v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *v6;
    v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(_BYTE *)(a2 + v16))
      v10 = 0;
LABEL_14:
    if (v17 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v4;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v5))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_47;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_50;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_47:
        if (*(_BYTE *)(a2 + *v6))
          v26 = 0;
        else
          v26 = v21;
LABEL_50:
        objc_msgSend(a1, "setTimestamp:", v26, v40, v41);
        goto LABEL_58;
      case 2u:
        v28 = objc_alloc_init(_CPResultRankingFeedback);
        v40 = 0;
        v41 = 0;
        if (!PBReaderPlaceMark() || !_CPResultRankingFeedbackReadFrom(v28, a2))
          goto LABEL_60;
        PBReaderRecallMark();
        if (v28)
          objc_msgSend(a1, "addResults:", v28, 0, 0);
        goto LABEL_35;
      case 3u:
        v28 = objc_alloc_init(_CPResultSectionForFeedback);
        v40 = 0;
        v41 = 0;
        if (PBReaderPlaceMark() && (_CPResultSectionForFeedbackReadFrom(v28, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSection:", v28);
LABEL_35:

LABEL_58:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_60:

        return 0;
      case 4u:
        v29 = 0;
        v30 = 0;
        v31 = 0;
        while (2)
        {
          v32 = *v4;
          v33 = *(_QWORD *)(a2 + v32);
          v34 = v33 + 1;
          if (v33 == -1 || v34 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              v15 = v30++ >= 9;
              if (v15)
              {
                v36 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v36 = 0;
        else
          v36 = v31;
LABEL_55:
        objc_msgSend(a1, "setLocalSectionPosition:", v36, v40, v41);
        goto LABEL_58;
      case 5u:
        v37 = *v4;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(_QWORD *)(a2 + *v5))
        {
          v39 = *(double *)(*(_QWORD *)(a2 + *v7) + v38);
          *(_QWORD *)(a2 + v37) = v38 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v39 = 0.0;
        }
        objc_msgSend(a1, "setPersonalizationScore:", v39, v40, v41);
        goto LABEL_58;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_58;
    }
  }
}

uint64_t _CPResultRankingFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t result;
  _CPSearchResultForFeedback *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *v6;
        v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *v6;
    v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(_BYTE *)(a2 + v16))
      v10 = 0;
LABEL_14:
    if (v17 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v4;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v5))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_51;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_54;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_51:
        if (*(_BYTE *)(a2 + *v6))
          v26 = 0;
        else
          v26 = v21;
LABEL_54:
        objc_msgSend(a1, "setTimestamp:", v26, v40, v41);
        goto LABEL_62;
      case 2u:
        v28 = objc_alloc_init(_CPSearchResultForFeedback);
        if (!PBReaderPlaceMark() || (_CPSearchResultForFeedbackReadFrom(v28, a2) & 1) == 0)
          goto LABEL_64;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResult:", v28, 0, 0);
        goto LABEL_39;
      case 3u:
        v28 = objc_alloc_init(_CPSearchResultForFeedback);
        v40 = 0;
        v41 = 0;
        if (!PBReaderPlaceMark() || !_CPSearchResultForFeedbackReadFrom(v28, a2))
          goto LABEL_64;
        PBReaderRecallMark();
        if (v28)
          objc_msgSend(a1, "addHiddenResults:", v28, 0, 0);
        goto LABEL_39;
      case 4u:
        v28 = objc_alloc_init(_CPSearchResultForFeedback);
        v40 = 0;
        v41 = 0;
        if (PBReaderPlaceMark() && _CPSearchResultForFeedbackReadFrom(v28, a2))
        {
          PBReaderRecallMark();
          if (v28)
            objc_msgSend(a1, "addDuplicateResults:", v28, 0, 0);
LABEL_39:

LABEL_62:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_64:

        return 0;
      case 5u:
        v29 = 0;
        v30 = 0;
        v31 = 0;
        while (2)
        {
          v32 = *v4;
          v33 = *(_QWORD *)(a2 + v32);
          v34 = v33 + 1;
          if (v33 == -1 || v34 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              v15 = v30++ >= 9;
              if (v15)
              {
                v36 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v36 = 0;
        else
          v36 = v31;
LABEL_59:
        objc_msgSend(a1, "setLocalResultPosition:", v36, v40, v41);
        goto LABEL_62;
      case 6u:
        v37 = *v4;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(_QWORD *)(a2 + *v5))
        {
          v39 = *(double *)(*(_QWORD *)(a2 + *v7) + v38);
          *(_QWORD *)(a2 + v37) = v38 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v39 = 0.0;
        }
        objc_msgSend(a1, "setPersonalizationScore:", v39, v40, v41);
        goto LABEL_62;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_62;
    }
  }
}

uint64_t _CPRankingFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  double v30;
  _CPSectionRankingFeedback *v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *v6;
        v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *v6;
    v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(_BYTE *)(a2 + v16))
      v10 = 0;
LABEL_14:
    if (v17 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v4;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v5))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_48;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_48:
        if (*(_BYTE *)(a2 + *v6))
          v26 = 0;
        else
          v26 = v21;
LABEL_51:
        objc_msgSend(a1, "setTimestamp:", v26, v40, v41);
        goto LABEL_59;
      case 2u:
        v28 = *v4;
        v29 = *(_QWORD *)(a2 + v28);
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(_QWORD *)(a2 + *v5))
        {
          v30 = *(double *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v30 = 0.0;
        }
        objc_msgSend(a1, "setBlendingDuration:", v30, v40, v41);
        goto LABEL_59;
      case 3u:
        v31 = objc_alloc_init(_CPSectionRankingFeedback);
        v40 = 0;
        v41 = 0;
        if (!PBReaderPlaceMark() || !_CPSectionRankingFeedbackReadFrom(v31, a2))
          goto LABEL_61;
        PBReaderRecallMark();
        if (v31)
          objc_msgSend(a1, "addSections:", v31, 0, 0);
        goto LABEL_39;
      case 4u:
        v31 = objc_alloc_init(_CPSearchResultForFeedback);
        v40 = 0;
        v41 = 0;
        if (PBReaderPlaceMark() && _CPSearchResultForFeedbackReadFrom(v31, a2))
        {
          PBReaderRecallMark();
          if (v31)
            objc_msgSend(a1, "addHiddenResults:", v31, 0, 0);
LABEL_39:

LABEL_59:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_61:

        return 0;
      case 5u:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        while (2)
        {
          v35 = *v4;
          v36 = *(_QWORD *)(a2 + v35);
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v37;
            v34 |= (unint64_t)(v38 & 0x7F) << v32;
            if (v38 < 0)
            {
              v32 += 7;
              v15 = v33++ >= 9;
              if (v15)
              {
                v39 = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v39 = 0;
        else
          v39 = v34;
LABEL_56:
        objc_msgSend(a1, "setSpotlightQueryIntent:", v39, v40, v41);
        goto LABEL_59;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_59;
    }
  }
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_52() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_62(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_66()
{
  return swift_release();
}

void *OUTLINED_FUNCTION_66_0()
{
  void *v0;

  return sub_19A84A6BC(v0);
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  return swift_deallocObject();
}

uint64_t _CPSearchViewAppearFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  void *v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_67;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_70;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_67:
          if (*(_BYTE *)(a2 + *v6))
            v25 = 0;
          else
            v25 = v20;
LABEL_70:
          objc_msgSend(a1, "setTimestamp:", v25);
          continue;
        case 2u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          while (2)
          {
            v30 = *v4;
            v31 = *(_QWORD *)(a2 + v30);
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                v15 = v28++ >= 9;
                if (v15)
                {
                  v34 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v34 = 0;
          else
            v34 = v29;
LABEL_75:
          objc_msgSend(a1, "setViewAppearEvent:", v34);
          continue;
        case 3u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          while (2)
          {
            v38 = *v4;
            v39 = *(_QWORD *)(a2 + v38);
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                v15 = v36++ >= 9;
                if (v15)
                {
                  v37 = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v37 = 0;
LABEL_79:
          objc_msgSend(a1, "setIsOnLockScreen:", v37 != 0);
          continue;
        case 4u:
          v42 = 0;
          v43 = 0;
          v44 = 0;
          while (2)
          {
            v45 = *v4;
            v46 = *(_QWORD *)(a2 + v45);
            v47 = v46 + 1;
            if (v46 == -1 || v47 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v47;
              v44 |= (unint64_t)(v48 & 0x7F) << v42;
              if (v48 < 0)
              {
                v42 += 7;
                v15 = v43++ >= 9;
                if (v15)
                {
                  v44 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v44 = 0;
LABEL_83:
          objc_msgSend(a1, "setIsOverApp:", v44 != 0);
          continue;
        case 5u:
          v49 = 0;
          v50 = 0;
          v51 = 0;
          while (2)
          {
            v52 = *v4;
            v53 = *(_QWORD *)(a2 + v52);
            v54 = v53 + 1;
            if (v53 == -1 || v54 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v54;
              v51 |= (unint64_t)(v55 & 0x7F) << v49;
              if (v55 < 0)
              {
                v49 += 7;
                v15 = v50++ >= 9;
                if (v15)
                {
                  v51 = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v51 = 0;
LABEL_87:
          objc_msgSend(a1, "setReaderTextAvailable:", v51 != 0);
          continue;
        case 6u:
          PBReaderReadString();
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setPreexistingInput:", v56);
          goto LABEL_58;
        case 7u:
          PBReaderReadString();
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setOriginatingApp:", v56);
LABEL_58:

          continue;
        case 8u:
          v57 = 0;
          v58 = 0;
          v59 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v60 = *v4;
        v61 = *(_QWORD *)(a2 + v60);
        v62 = v61 + 1;
        if (v61 == -1 || v62 > *(_QWORD *)(a2 + *v5))
          break;
        v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
        *(_QWORD *)(a2 + v60) = v62;
        v59 |= (unint64_t)(v63 & 0x7F) << v57;
        if ((v63 & 0x80) == 0)
          goto LABEL_89;
        v57 += 7;
        v15 = v58++ >= 9;
        if (v15)
        {
          v59 = 0;
          goto LABEL_91;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_89:
      if (*(_BYTE *)(a2 + *v6))
        v59 = 0;
LABEL_91:
      objc_msgSend(a1, "setIsUsingLoweredSearchBar:", v59 != 0);
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t OUTLINED_FUNCTION_91()
{
  return sub_19A8C4E18();
}

id OUTLINED_FUNCTION_101_0()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v1 - 208) + 8 * v0);
}

uint64_t OUTLINED_FUNCTION_101_1()
{
  return sub_19A8C4D10();
}

void sub_19A841A7C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_125();
    if (v7 != v8)
    {
      if (v6 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_124_0();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFEAE8);
    v11 = (_QWORD *)OUTLINED_FUNCTION_3_0();
    v12 = _swift_stdlib_malloc_size(v11);
    v11[2] = v9;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 8);
  }
  else
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v11 + 4);
  if ((a1 & 1) != 0)
  {
    sub_19A86552C(a4 + 32, v9, v13);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_7_2();
  }
  else
  {
    sub_19A841B48(0, v9, v13, a4);
  }
  OUTLINED_FUNCTION_37();
}

uint64_t sub_19A841B48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEAB0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_19A8C4E0C();
  __break(1u);
  return result;
}

void sub_19A841C5C(void *a1, SEL *a2)
{
  if (OUTLINED_FUNCTION_43_1(a1, a2))
  {
    sub_19A8C4944();
    OUTLINED_FUNCTION_54_0();
  }
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_37();
}

void sub_19A841CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v5;
  void *v6;

  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v6 = (void *)OUTLINED_FUNCTION_140();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_initWithMachServiceName_options_, v6, a3);

  OUTLINED_FUNCTION_37();
}

unint64_t sub_19A841D04()
{
  unint64_t result;

  result = qword_1ECFFDFE8;
  if (!qword_1ECFFDFE8)
  {
    result = MEMORY[0x19AECCD38](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ECFFDFE8);
  }
  return result;
}

unint64_t sub_19A841D40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECFFE000[0];
  if (!qword_1ECFFE000[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ECFFE5A0);
    result = MEMORY[0x19AECCD38](MEMORY[0x1E0DF1F60], v1);
    atomic_store(result, qword_1ECFFE000);
  }
  return result;
}

uint64_t sub_19A841D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for FetchOnceState(319, *(_QWORD *)(a1 + 80), a3, a4);
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for FetchOnce(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchOnce);
}

uint64_t sub_19A841E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_defaultActor_initialize();
  *(_QWORD *)(v3 + 112) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_BYTE *)(v3 + 128) = 3;
  *(_QWORD *)(v3 + 136) = a1;
  *(_QWORD *)(v3 + 144) = a2;
  *(_QWORD *)(v3 + 152) = a3;
  return v3;
}

void sub_19A841E78(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_40();
}

void sub_19A841EB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_40();
}

uint64_t sub_19A841EF0()
{
  uint64_t v0;

  v0 = sub_19A8C489C();
  __swift_allocate_value_buffer(v0, qword_1ECFFE6B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECFFE6B0);
  return sub_19A8C4890();
}

void sub_19A841F38()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_15_2();
  __swift_allocate_value_buffer(v0, qword_1ECFFE9F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECFFE9F0);
  sub_19A8C4890();
  OUTLINED_FUNCTION_40();
}

uint64_t sub_19A841FC4()
{
  os_unfair_lock_s *v0;

  OUTLINED_FUNCTION_99_0(OBJC_IVAR___PARSessionSwiftInternal_lock);
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock(v0);
  return swift_unknownObjectRelease();
}

void sub_19A842044()
{
  void *v0;
  void *v1;

  sub_19A827678();
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v0, sel_isEnabled);

  }
  OUTLINED_FUNCTION_40();
}

void sub_19A842084(uint64_t a1)
{
  OUTLINED_FUNCTION_42_1(a1, (unint64_t *)&unk_1ECFFEAD8);
  qword_1ECFFEBE0 = sub_19A8C4C98();
  OUTLINED_FUNCTION_40();
}

void sub_19A8420EC()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  objc_msgSend(v0, sel_setHTTPCookieStorage_, 0);
  objc_msgSend(v0, sel_setURLCredentialStorage_, 0);
  objc_msgSend(v0, sel_set_expiredDNSBehavior_, 1);
  objc_msgSend(v0, sel_set_usesNWLoader_, 1);
  OUTLINED_FUNCTION_40();
}

uint64_t type metadata accessor for FeedbackReporter()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PARSearchClient()
{
  return objc_opt_self();
}

void PARSearchClient.init()()
{
  id v0;

  sub_19A8275AC(0, &qword_1ECFFEAC0);
  sub_19A841CA0(0xD000000000000011, 0x800000019A8D0E60, 0);
  v0 = objc_allocWithZone((Class)type metadata accessor for PARSearchClient());
  PARSearchClient.init(connection:)();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  OUTLINED_FUNCTION_40();
}

id sub_19A842268()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PARSearchClient()), sel_init);
  qword_1ECFFE9E8 = (uint64_t)result;
  return result;
}

uint64_t sub_19A842294()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for FetchOncePerKey()
{
  JUMPOUT(0x19AECCCCCLL);
}

uint64_t type metadata accessor for FetchOnceState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchOnceState);
}

uint64_t type metadata accessor for URLValidator()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ImageIDToURL()
{
  return objc_opt_self();
}

uint64_t sub_19A842360(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 24) = &off_1E391FDE0;
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE8C0);
  swift_allocObject();
  v5 = sub_19A841E2C(-1, (uint64_t)&unk_1EE3B0E88, v4);

  *(_QWORD *)(a2 + 16) = v5;
  return a2;
}

void sub_19A8423FC()
{
  qword_1ECFFEBE8 = (uint64_t)&unk_1E391F810;
}

void type metadata accessor for os_unfair_lock_s()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_1ECFFE628)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1ECFFE628);
  }
}

id sub_19A842458(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  id v172;
  uint64_t v173;
  SEL *v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  id v178;
  void *v179;
  void (*v180)(char *, _QWORD *);
  _QWORD *v181;
  id v182;
  id v183;
  void *v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  id v188;
  void *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  char **v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  uint64_t v201;
  uint64_t (*v202)(uint64_t, _QWORD);
  uint64_t v203;
  uint64_t v204;
  id v205;
  uint64_t v206;
  char v207;
  id result;
  void *v209;
  void *v210;
  void *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  void (*v223)(uint64_t, unint64_t, uint64_t);
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void *v232;
  unsigned int v233;
  uint64_t v234;
  void *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  int v240;
  void (*v241)(uint64_t, uint64_t);
  char v242;
  char v243;
  unsigned int v244;
  char v245;
  void (*v246)(uint64_t);
  uint64_t v247;
  void *v248;
  void *v249;
  id v250;
  void *v251;
  uint64_t v252;
  void (*v253)(uint64_t, uint64_t, uint64_t);
  uint64_t v254;
  uint64_t v255;
  id v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  unint64_t v263;
  unint64_t v264;
  uint64_t v265;
  void *v266;
  uint64_t v267;
  unint64_t v268;
  uint64_t v269;
  unint64_t v270;
  id v271;
  void *v272;
  id v273;
  uint64_t v274;
  unint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  unint64_t v281;
  id v282;
  void *v283;
  id v284;
  id v285;
  id v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  id v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  id v295;
  id v296;
  uint64_t v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  id v301;
  id v302;
  id v303;
  uint64_t v304;
  uint64_t *v305;
  uint64_t v306;
  uint64_t v307;
  id v308;
  id v309;
  id v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  id v315;
  char v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char v320;
  char v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v328;
  unint64_t v329;
  id v330;
  id v331;
  uint64_t v332;
  uint64_t (*v333)(uint64_t, _QWORD);
  uint64_t v334;
  unint64_t v335;
  unint64_t v336;
  void *v337;
  void *v338;
  uint64_t v339;
  uint64_t (*v340)(uint64_t, _QWORD);
  id v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  void *v364;
  unint64_t v365;
  uint64_t v366;
  void *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  _QWORD *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  char v378[8];
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;

  v364 = a1;
  v2 = sub_19A8C4398();
  OUTLINED_FUNCTION_25(v2, (uint64_t)&v379);
  v353 = v3;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_6_2(v9);
  v10 = sub_19A8C4590();
  OUTLINED_FUNCTION_25(v10, (uint64_t)v378);
  v352 = v11;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_6_2(v17);
  v18 = sub_19A8C3DF8();
  v377 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v19, v20, v21, v22, v23);
  OUTLINED_FUNCTION_19();
  v376 = v24;
  OUTLINED_FUNCTION_9_0();
  MEMORY[0x1E0C80A78](v25, v26, v27, v28, v29);
  OUTLINED_FUNCTION_24();
  v375 = v30;
  OUTLINED_FUNCTION_9_0();
  MEMORY[0x1E0C80A78](v31, v32, v33, v34, v35);
  OUTLINED_FUNCTION_24();
  v345 = v36;
  OUTLINED_FUNCTION_9_0();
  MEMORY[0x1E0C80A78](v37, v38, v39, v40, v41);
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_6_2(v42);
  v43 = sub_19A8C45D8();
  v362 = *(_QWORD *)(v43 - 8);
  v363 = v43;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v44, v45, v46, v47, v48);
  OUTLINED_FUNCTION_0();
  v366 = v49;
  v50 = sub_19A8C45E4();
  v360 = *(_QWORD *)(v50 - 8);
  v361 = v50;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v51, v52, v53, v54, v55);
  OUTLINED_FUNCTION_19();
  v359 = v56;
  OUTLINED_FUNCTION_9_0();
  MEMORY[0x1E0C80A78](v57, v58, v59, v60, v61);
  OUTLINED_FUNCTION_34();
  v373 = v62;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE610);
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v63, v64, v65, v66, v67);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_6_2(v68);
  v69 = sub_19A8C3D68();
  v370 = *(_QWORD *)(v69 - 8);
  v371 = v69;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v70, v71, v72, v73, v74);
  OUTLINED_FUNCTION_19();
  v369 = v75;
  OUTLINED_FUNCTION_9_0();
  MEMORY[0x1E0C80A78](v76, v77, v78, v79, v80);
  OUTLINED_FUNCTION_34();
  v342 = v81;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE608);
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v82, v83, v84, v85, v86);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_6_2(v87);
  v88 = sub_19A8C3D8C();
  OUTLINED_FUNCTION_25(v88, (uint64_t)&v375);
  v347 = v89;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v90, v91, v92, v93, v94);
  OUTLINED_FUNCTION_0();
  v367 = v95;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  OUTLINED_FUNCTION_5();
  v101 = MEMORY[0x1E0C80A78](v96, v97, v98, v99, v100);
  v103 = (char *)&v341 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v101, v104, v105, v106, v107);
  OUTLINED_FUNCTION_24();
  v346 = v108;
  OUTLINED_FUNCTION_9_0();
  MEMORY[0x1E0C80A78](v109, v110, v111, v112, v113);
  OUTLINED_FUNCTION_24();
  v368 = v114;
  OUTLINED_FUNCTION_9_0();
  MEMORY[0x1E0C80A78](v115, v116, v117, v118, v119);
  OUTLINED_FUNCTION_24();
  v350 = v120;
  OUTLINED_FUNCTION_9_0();
  MEMORY[0x1E0C80A78](v121, v122, v123, v124, v125);
  OUTLINED_FUNCTION_24();
  v358 = v126;
  OUTLINED_FUNCTION_9_0();
  MEMORY[0x1E0C80A78](v127, v128, v129, v130, v131);
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_6_2(v132);
  v133 = sub_19A8C4314();
  OUTLINED_FUNCTION_25(v133, (uint64_t)&v382);
  v357 = v134;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v135, v136, v137, v138, v139);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_6_2(v140);
  v141 = sub_19A8C4344();
  OUTLINED_FUNCTION_25(v141, (uint64_t)&v381);
  v356 = v142;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v143, v144, v145, v146, v147);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_6_2(v148);
  v149 = sub_19A8C41B8();
  OUTLINED_FUNCTION_25(v149, (uint64_t)&v380);
  v354 = v150;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v151, v152, v153, v154, v155);
  OUTLINED_FUNCTION_0();
  v365 = v156;
  v372 = (_QWORD *)sub_19A8C432C();
  v157 = *(v372 - 1);
  v162 = MEMORY[0x1E0C80A78](v372, v158, v159, v160, v161);
  v164 = (char *)&v341 - ((v163 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = MEMORY[0x1E0C80A78](v162, v165, v166, v167, v168);
  v171 = (char *)&v341 - v170;
  v172 = OUTLINED_FUNCTION_22_0(v169, sel_createResultObject);
  objc_opt_self();
  v173 = swift_dynamicCastObjCClass();
  if (!v173)
  {
    swift_unknownObjectRelease();
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C6A8]), sel_init);
  }
  v174 = (SEL *)v173;
  v341 = v172;
  sub_19A8C3F6C();
  OUTLINED_FUNCTION_1();
  -[SEL setType:](v174, sel_setType_, sub_19A8C3F78());
  sub_19A8C40BC();
  OUTLINED_FUNCTION_1();
  v374 = v1;
  v175 = sub_19A8C4134();
  OUTLINED_FUNCTION_45(v175, &qword_1ECFFDF88);
  v176 = sub_19A8C4320();
  v178 = sub_19A844134(v176, v177);
  if (!v178)
    goto LABEL_138;
  v179 = v178;
  v180 = *(void (**)(char *, _QWORD *))(v157 + 8);
  v181 = v372;
  v180(v171, v372);
  OUTLINED_FUNCTION_2_0(v174, sel_setThumbnail_);

  -[SEL setPreventThumbnailImageScaling:](v174, sel_setPreventThumbnailImageScaling_, 1);
  v182 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C7A8]), sel_init);
  OUTLINED_FUNCTION_2_0(v174, sel_setTitle_);

  v183 = -[SEL title](v174, sel_title);
  if (!v183)
  {
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  v184 = v183;
  v185 = v374;
  sub_19A8C40A4();
  sub_19A844344();

  sub_19A8C3F54();
  OUTLINED_FUNCTION_1();
  sub_19A8C3FC0();
  v186 = sub_19A8C4320();
  v188 = sub_19A844134(v186, v187);
  if (!v188)
  {
LABEL_140:
    __break(1u);
LABEL_141:
    result = (id)sub_19A8C4DDC();
    __break(1u);
    return result;
  }
  v189 = v188;
  v180(v164, v181);
  OUTLINED_FUNCTION_2_0(v174, sel_setCompletionImage_);

  sub_19A8C40B0();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17();
  v190 = v185;
  v191 = v365;
  if (v192)
  {
    sub_19A8C40B0();
    OUTLINED_FUNCTION_1();
  }
  sub_19A8C4014();
  OUTLINED_FUNCTION_1();
  sub_19A8C40EC();
  OUTLINED_FUNCTION_1();
  sub_19A8C3F3C();
  OUTLINED_FUNCTION_1();
  v193 = sub_19A8C4104();
  sub_19A844224(v193, v194, v174);
  sub_19A8C4020();
  OUTLINED_FUNCTION_1();
  sub_19A8C3FA8();
  OUTLINED_FUNCTION_1();
  sub_19A8C4008();
  OUTLINED_FUNCTION_1();
  sub_19A8C40C8();
  v195 = sub_19A8C41AC();
  v196 = &selRef_avgRTT;
  v197 = v367;
  if (v195 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_74;
  }
  v198 = v195;
  if (v195 > 0x7FFFFFFF)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  OUTLINED_FUNCTION_14_0(v191, *(uint64_t (**)(uint64_t, _QWORD))(v354 + 8));
  -[SEL setTopHit:](v174, sel_setTopHit_, v198);
  sub_19A8C4098();
  -[SEL setRankingScore:](v174, sel_setRankingScore_);
  v199 = v355;
  sub_19A8C4110();
  sub_19A8C4338();
  v200 = sub_19A86F01C();
  v201 = OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_14_0(v201, v202);
  OUTLINED_FUNCTION_14_0(v199, *(uint64_t (**)(uint64_t, _QWORD))(v356 + 8));
  OUTLINED_FUNCTION_2_0(v174, sel_setNormalizedTopic_);

  sub_19A8C40E0();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17();
  if (v204)
  {
    v205 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C210]), sel_init);
    objc_msgSend(v205, sel_setType_, 2);
    objc_msgSend(v205, sel_setSource_, 1);
    sub_19A8C411C();
    sub_19A844344();
    sub_19A8C40E0();
    v206 = v348;
    OUTLINED_FUNCTION_40_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_7_0(v206);
    if (v207)
    {
      v209 = 0;
    }
    else
    {
      v209 = (void *)v206;
      sub_19A8C3DC8();
      OUTLINED_FUNCTION_20();
    }
    OUTLINED_FUNCTION_2_0(v205, sel_setUrlValue_);

    -[SEL setCard:](v174, sel_setCard_, v205);
  }
  OUTLINED_FUNCTION_45(v203, &qword_1EE3B04F0);
  sub_19A8C3FCC();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_10();
  sub_19A843B08();
  v211 = v210;
  OUTLINED_FUNCTION_2_0(v174, sel_setMoreResultsPunchout_);

  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17();
  v372 = v174;
  v212 = v366;
  v213 = v368;
  if (v214)
  {
    OUTLINED_FUNCTION_35();
    v215 = v349;
    sub_19A8C3D80();
    OUTLINED_FUNCTION_10();
    v216 = v351;
    if (__swift_getEnumTagSinglePayload(v215, 1, v351) == 1)
    {
      sub_19A844520(v215, &qword_1ECFFE608);
    }
    else
    {
      v217 = v347;
      (*(void (**)(id, uint64_t, uint64_t))(v347 + 32))(v197, v215, v216);
      v218 = sub_19A8C3D74();
      if (v218)
      {
        v219 = *(_QWORD *)(v218 + 16);
        v358 = v218;
        if (v219)
        {
          v220 = v370;
          v221 = v218 + ((*(unsigned __int8 *)(v370 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v370 + 80));
          v222 = *(_QWORD *)(v370 + 72);
          v223 = *(void (**)(uint64_t, unint64_t, uint64_t))(v370 + 16);
          swift_bridgeObjectRetain();
          v365 = 0x800000019A8CFEE0;
          v224 = v371;
          v225 = v369;
          while (1)
          {
            v223(v225, v221, v224);
            if (sub_19A8C3D50() == 0xD000000000000014 && v226 == v365)
            {
              OUTLINED_FUNCTION_26();
              v224 = v371;
              v174 = (SEL *)v372;
              goto LABEL_31;
            }
            v227 = sub_19A8C4E30();
            OUTLINED_FUNCTION_10();
            if ((v227 & 1) != 0)
              break;
            v225 = v369;
            v220 = v370;
            v224 = v371;
            (*(void (**)(uint64_t, uint64_t))(v370 + 8))(v369, v371);
            v221 += v222;
            if (!--v219)
            {
              OUTLINED_FUNCTION_26();
              v228 = 1;
              v190 = v374;
              v174 = (SEL *)v372;
              v212 = v366;
              v229 = (uint64_t)v367;
              goto LABEL_28;
            }
          }
          v224 = v371;
          v174 = (SEL *)v372;
          v220 = v370;
LABEL_31:
          v229 = (uint64_t)v367;
          swift_bridgeObjectRelease();
          v230 = v344;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v220 + 32))(v344, v369, v224);
          v228 = 0;
          v190 = v374;
          v212 = v366;
        }
        else
        {
          v228 = 1;
          v224 = v371;
          v174 = (SEL *)v372;
          v229 = (uint64_t)v367;
LABEL_28:
          v230 = v344;
        }
        __swift_storeEnumTagSinglePayload(v230, v228, 1, v224);
        OUTLINED_FUNCTION_26();
        if (__swift_getEnumTagSinglePayload(v230, 1, v224) != 1)
        {
          v292 = v370;
          v293 = v342;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v370 + 32))(v342, v230, v224);
          sub_19A8C3D5C();
          if (v294)
            OUTLINED_FUNCTION_1();
          (*(void (**)(uint64_t, uint64_t))(v292 + 8))(v293, v224);
          OUTLINED_FUNCTION_14_0(v229, *(uint64_t (**)(uint64_t, _QWORD))(v347 + 8));
          v231 = v350;
          v213 = v368;
          goto LABEL_36;
        }
        OUTLINED_FUNCTION_14_0(v229, *(uint64_t (**)(uint64_t, _QWORD))(v347 + 8));
        sub_19A844520(v230, (uint64_t *)&unk_1ECFFE610);
      }
      else
      {
        (*(void (**)(id, uint64_t))(v217 + 8))(v197, v216);
      }
      v213 = v368;
    }
    v231 = v350;
LABEL_36:
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_40_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_7_0(v231);
    if (v207)
    {
      v232 = 0;
    }
    else
    {
      v232 = (void *)v231;
      sub_19A8C3DC8();
      OUTLINED_FUNCTION_20();
    }
    OUTLINED_FUNCTION_2_0(v174, sel_setUrl_);

  }
  sub_19A8C40EC();
  OUTLINED_FUNCTION_1();
  v233 = sub_19A8C40F8();
  if ((v233 & 0x80000000) != 0)
    goto LABEL_141;
  -[SEL setMinimumRankOfTopHitToSuppressResult:](v174, sel_setMinimumRankOfTopHitToSuppressResult_, v233);
  sub_19A8C3FB4();
  OUTLINED_FUNCTION_1();
  sub_19A8C4044();
  OUTLINED_FUNCTION_1();
  sub_19A8C405C();
  sub_19A8C3DEC();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7_0(v213);
  v234 = v363;
  if (v207)
  {
    v235 = 0;
  }
  else
  {
    v235 = (void *)sub_19A8C3DC8();
    OUTLINED_FUNCTION_21_0(v213, *(uint64_t (**)(uint64_t, uint64_t))(v377 + 8));
  }
  OUTLINED_FUNCTION_2_0(v174, sel_setSectionHeaderMoreURL_);

  sub_19A8C40BC();
  OUTLINED_FUNCTION_1();
  v236 = v373;
  sub_19A8C3F9C();
  v238 = v359;
  v237 = v360;
  v239 = v361;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v360 + 16))(v359, v236, v361);
  v240 = (*(uint64_t (**)(uint64_t, uint64_t))(v237 + 88))(v238, v239);
  v241 = *(void (**)(uint64_t, uint64_t))(v237 + 8);
  if (v240 != *MEMORY[0x1E0D6EBA0])
    v241(v238, v239);
  v241(v373, v239);
  OUTLINED_FUNCTION_1();
  v242 = sub_19A8C4050();
  OUTLINED_FUNCTION_39(v242, sel_setRenderHorizontallyWithOtherResultsInCategory_);
  v243 = sub_19A8C4128();
  OUTLINED_FUNCTION_39(v243, sel_setDoNotFold_);
  v244 = sub_19A8C40D4();
  if ((v244 & 0x80000000) != 0)
    goto LABEL_141;
  -[SEL setBlockId:](v174, sel_setBlockId_, v244);
  sub_19A8C3F84();
  sub_19A84455C(&qword_1EE3B04F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6E908], MEMORY[0x1E0D6E8E8]);
  v245 = sub_19A8C4788();
  v246 = *(void (**)(uint64_t))(v362 + 8);
  v247 = OUTLINED_FUNCTION_46();
  v246(v247);
  if ((v245 & 1) != 0)
  {
    sub_19A8C3F84();
    sub_19A86E5AC();
    v249 = v248;
    ((void (*)(uint64_t, uint64_t))v246)(v212, v234);
    OUTLINED_FUNCTION_2_0(v174, sel_setPunchout_);

    v196 = (char **)v174;
    goto LABEL_54;
  }
  v250 = -[SEL url](v174, "url");
  if (v250)
  {
    v251 = v250;
    v252 = v345;
    sub_19A8C3DD4();

    v253 = *(void (**)(uint64_t, uint64_t, uint64_t))(v377 + 32);
    v254 = v346;
    v253(v346, v252, v18);
    OUTLINED_FUNCTION_43(v254, 0);
    OUTLINED_FUNCTION_7_0(v254);
    if (!v207)
    {
      v255 = v343;
      v253(v343, v254, v18);
      v256 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C5E0]), sel_init);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE3B0508);
      v257 = v377;
      v258 = (*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80);
      v259 = swift_allocObject();
      *(_OWORD *)(v259 + 16) = xmmword_19A8CE860;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v257 + 16))(v259 + v258, v255, v18);
      sub_19A844304();
      v196 = (char **)v372;
      OUTLINED_FUNCTION_2_0(v372, sel_setPunchout_);

      OUTLINED_FUNCTION_21_0(v255, *(uint64_t (**)(uint64_t, uint64_t))(v257 + 8));
      goto LABEL_54;
    }
  }
  else
  {
    v254 = v346;
    OUTLINED_FUNCTION_43(v346, 1);
  }
  sub_19A844520(v254, &qword_1ECFFDF70);
  v196 = (char **)v372;
LABEL_54:
  sub_19A8C408C();
  sub_19A844344();
  v260 = sub_19A8C3FFC();
  v262 = v261;
  sub_19A843B94(v260, v261);
  v264 = v263;
  v265 = sub_19A833360(v260, v262);
  v266 = v364;
  if (v264 >> 60 != 15)
  {
    OUTLINED_FUNCTION_45(v265, &qword_1EE3B0500);
    v267 = OUTLINED_FUNCTION_46();
    sub_19A84449C(v267, v268);
    v269 = OUTLINED_FUNCTION_46();
    v271 = sub_19A843E20(v269, v270);
    if (v271)
    {
      v272 = v271;
      v273 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C210]), sel_initWithProtobuf_, v271);
      objc_msgSend(v196, sel_setCompactCard_, v273);

    }
    v274 = OUTLINED_FUNCTION_46();
    sub_19A83334C(v274, v275);
  }
  v276 = sub_19A8C4074();
  v191 = v277;
  sub_19A843B94(v276, v277);
  v279 = v278;
  v281 = v280;
  sub_19A833360(v276, v191);
  if (v281 >> 60 != 15)
  {
    swift_unknownObjectRetain();
    sub_19A844394(v266, v196, v279, v281);
    swift_unknownObjectRelease();
    sub_19A83334C(v279, v281);
  }
  v282 = objc_msgSend(v266, sel_task);
  if (!v282)
    goto LABEL_122;
  v283 = v282;
  v284 = objc_msgSend(v282, sel_request);

  objc_msgSend(v284, sel_queryId);
  v174 = (SEL *)&selRef_setLabelForLocalMedia_;
  v285 = OUTLINED_FUNCTION_2_0(v196, sel_setQueryId_);
  v286 = OUTLINED_FUNCTION_22_0((uint64_t)v285, sel_card);
  if (v286)
  {
    v197 = v286;
    OUTLINED_FUNCTION_2_0(v197, sel_setQueryId_);
    OUTLINED_FUNCTION_29();
    if (!v287)
    {

      goto LABEL_77;
    }
    OUTLINED_FUNCTION_16();
    if (!v289)
    {
      v290 = *(_QWORD *)(v288 + 16);
      OUTLINED_FUNCTION_8_0();
      if (v290)
      {
LABEL_65:
        if (v290 >= 1)
        {
          while ((v191 & 0xC000000000000001) == 0)
          {
            v291 = OUTLINED_FUNCTION_15();
            OUTLINED_FUNCTION_3((uint64_t)v291);

          }
          OUTLINED_FUNCTION_11();
        }
        __break(1u);
        goto LABEL_135;
      }
      goto LABEL_76;
    }
LABEL_75:
    OUTLINED_FUNCTION_8_0();
    v290 = sub_19A8C4DF4();
    if (v290)
      goto LABEL_65;
LABEL_76:

    v286 = (id)OUTLINED_FUNCTION_4_0();
  }
LABEL_77:
  v295 = OUTLINED_FUNCTION_22_0((uint64_t)v286, sel_inlineCard);
  if (!v295)
    goto LABEL_93;
  v296 = v295;
  OUTLINED_FUNCTION_2_0(v296, v174[138]);
  OUTLINED_FUNCTION_29();
  if (!v297)
  {

    goto LABEL_93;
  }
  OUTLINED_FUNCTION_16();
  if (v299)
  {
    if (v191 >= 0)
      v296 = v298;
    else
      v296 = (id)v191;
    OUTLINED_FUNCTION_8_0();
    v300 = OUTLINED_FUNCTION_38();
    if (v300)
      goto LABEL_81;
LABEL_92:

    v295 = (id)OUTLINED_FUNCTION_4_0();
    goto LABEL_93;
  }
  v300 = v298[2];
  OUTLINED_FUNCTION_8_0();
  if (!v300)
    goto LABEL_92;
LABEL_81:
  if (v300 < 1)
  {
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }
  OUTLINED_FUNCTION_28();
  do
  {
    if (v174)
      OUTLINED_FUNCTION_11();
    v301 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_3((uint64_t)v301);

  }
  while (v300 != v190);

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_27();
LABEL_93:
  v302 = OUTLINED_FUNCTION_22_0((uint64_t)v295, sel_compactCard);
  if (!v302)
    goto LABEL_109;
  v303 = v302;
  OUTLINED_FUNCTION_2_0(v303, v174[138]);
  OUTLINED_FUNCTION_29();
  if (!v304)
  {

    goto LABEL_109;
  }
  OUTLINED_FUNCTION_16();
  if (v306)
  {
    if (v191 >= 0)
      v303 = v305;
    else
      v303 = (id)v191;
    OUTLINED_FUNCTION_8_0();
    v307 = OUTLINED_FUNCTION_38();
    if (v307)
      goto LABEL_97;
LABEL_108:

    v302 = (id)OUTLINED_FUNCTION_4_0();
    goto LABEL_109;
  }
  v307 = v305[2];
  OUTLINED_FUNCTION_8_0();
  if (!v307)
    goto LABEL_108;
LABEL_97:
  if (v307 < 1)
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  OUTLINED_FUNCTION_28();
  do
  {
    if (v174)
      OUTLINED_FUNCTION_11();
    v308 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_3((uint64_t)v308);

  }
  while (v307 != v190);

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_27();
LABEL_109:
  v309 = OUTLINED_FUNCTION_22_0((uint64_t)v302, sel_tophitCard);
  if (!v309)
    goto LABEL_122;
  v310 = v309;
  OUTLINED_FUNCTION_2_0(v310, v174[138]);
  OUTLINED_FUNCTION_29();
  if (!v311)
  {

    goto LABEL_122;
  }
  OUTLINED_FUNCTION_16();
  if (v313)
  {
    v174 = (SEL *)v310;
    OUTLINED_FUNCTION_8_0();
    v314 = sub_19A8C4DF4();
    if (v314)
      goto LABEL_113;
LABEL_121:

    OUTLINED_FUNCTION_4_0();
    goto LABEL_122;
  }
  v314 = *(_QWORD *)(v312 + 16);
  OUTLINED_FUNCTION_8_0();
  if (!v314)
    goto LABEL_121;
LABEL_113:
  if (v314 < 1)
  {
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
  OUTLINED_FUNCTION_28();
  do
  {
    if (v174)
      OUTLINED_FUNCTION_11();
    v315 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_3((uint64_t)v315);

  }
  while (v314 != v190);

  OUTLINED_FUNCTION_4_0();
  v196 = (char **)v372;
LABEL_122:
  v316 = sub_19A8C3FF0();
  OUTLINED_FUNCTION_23(v316, sel_setIsInstantAnswer_);
  v317 = sub_19A8C3FD8();
  sub_19A843E94(v317);
  v319 = v318;
  OUTLINED_FUNCTION_10();
  sub_19A844284(v319, v196);
  v320 = sub_19A8C4068();
  OUTLINED_FUNCTION_23(v320, sel_setShouldUseCompactDisplay_);
  v321 = sub_19A8C402C();
  OUTLINED_FUNCTION_23(v321, sel_setPreferTopPlatter_);
  v322 = sub_19A8C3FE4();
  v323 = *(_QWORD *)(v322 + 16);
  if (v323)
  {
    v324 = v322 + 40;
    v325 = MEMORY[0x1E0DEE9D8];
    do
    {
      swift_bridgeObjectRetain();
      sub_19A8C3DEC();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_0((uint64_t)v103);
      if (v207)
      {
        sub_19A844520((uint64_t)v103, &qword_1ECFFDF70);
      }
      else
      {
        v326 = v375;
        OUTLINED_FUNCTION_36(v375, (uint64_t)v103);
        OUTLINED_FUNCTION_36(v376, v326);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v325 = OUTLINED_FUNCTION_42(0, *(_QWORD *)(v325 + 16) + 1);
        v329 = *(_QWORD *)(v325 + 16);
        v328 = *(_QWORD *)(v325 + 24);
        if (v329 >= v328 >> 1)
          v325 = OUTLINED_FUNCTION_42(v328 > 1, v329 + 1);
        *(_QWORD *)(v325 + 16) = v329 + 1;
        OUTLINED_FUNCTION_36(v325+ ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80))+ *(_QWORD *)(v377 + 72) * v329, v376);
      }
      v324 += 16;
      --v323;
    }
    while (v323);
  }
  OUTLINED_FUNCTION_10();
  v330 = v372;
  sub_19A844304();
  objc_msgSend(v330, sel_processVisualCATResultSynchronously);
  sub_19A8C3F90();
  v331 = sub_19A86E9A4();
  v332 = OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_14_0(v332, v333);
  OUTLINED_FUNCTION_2_0(v330, sel_setResultEntity_);

  sub_19A8C408C();
  OUTLINED_FUNCTION_1();
  v334 = sub_19A8C3F48();
  v336 = v335;
  sub_19A8C3E34();
  sub_19A833360(v334, v336);
  OUTLINED_FUNCTION_1();
  sub_19A8C3F60();
  OUTLINED_FUNCTION_1();
  sub_19A8C4038();
  sub_19A86EAB8();
  v338 = v337;
  v339 = OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_14_0(v339, v340);
  OUTLINED_FUNCTION_2_0(v330, sel_setMoreResultsButton_);

  return v330;
}

void sub_19A843B08()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = OUTLINED_FUNCTION_41();
  v2 = 0;
  if (__swift_getEnumTagSinglePayload(v0, 1, v1) != 1)
  {
    v2 = (void *)sub_19A8C3DC8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  }
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_punchoutWithURL_, v2);

  OUTLINED_FUNCTION_37();
}

void sub_19A843B94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_19A8C4194();
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_18();
  sub_19A8C4770();
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0520);
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v13, v14, v15, v16, v17);
  OUTLINED_FUNCTION_18();
  v18 = sub_19A8C462C();
  MEMORY[0x1E0C80A78](v18, v19, v20, v21, v22);
  OUTLINED_FUNCTION_18();
  __asm { BR              X10 }
}

uint64_t sub_19A843C90()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  if ((v1 & 0xFF000000000000) == 0)
    return 0;
  *(_QWORD *)(v8 - 96) = 0;
  *(_OWORD *)(v8 - 128) = 0u;
  *(_OWORD *)(v8 - 112) = 0u;
  sub_19A84449C(v2, v1);
  sub_19A8C4764();
  sub_19A84455C(&qword_1EE3B0528, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6F6A8], MEMORY[0x1E0D6F690]);
  sub_19A8C4794();
  if (v4)
  {

    OUTLINED_FUNCTION_44(v7, 1);
    sub_19A844520(v7, &qword_1EE3B0520);
    return 0;
  }
  OUTLINED_FUNCTION_44(v7, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v6, v7, v5);
  if ((sub_19A8C4620() & 1) == 0)
  {
    OUTLINED_FUNCTION_30();
    return 0;
  }
  sub_19A8C4614();
  sub_19A84455C(&qword_1EE3B0530, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6D7A8], MEMORY[0x1E0D6D7A0]);
  v10 = sub_19A8C47A0();
  OUTLINED_FUNCTION_21_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 152) + 8));
  OUTLINED_FUNCTION_30();
  return v10;
}

id sub_19A843E20(uint64_t a1, unint64_t a2)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_19A8C3E28();
  v6 = objc_msgSend(v4, sel_initWithJSON_, v5);
  sub_19A833360(a1, a2);

  return v6;
}

void sub_19A843E94(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0518);
    v2 = (_QWORD *)sub_19A8C4E00();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v7 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        v8 = v7 | (v6 << 6);
      }
      else
      {
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_34;
        if (v9 >= v26)
        {
LABEL_31:
          sub_19A844518();
          return;
        }
        v10 = *(_QWORD *)(v27 + 8 * v9);
        v11 = v6 + 1;
        if (!v10)
        {
          v11 = v6 + 2;
          if (v6 + 2 >= v26)
            goto LABEL_31;
          v10 = *(_QWORD *)(v27 + 8 * v11);
          if (!v10)
          {
            v11 = v6 + 3;
            if (v6 + 3 >= v26)
              goto LABEL_31;
            v10 = *(_QWORD *)(v27 + 8 * v11);
            if (!v10)
            {
              v11 = v6 + 4;
              if (v6 + 4 >= v26)
                goto LABEL_31;
              v10 = *(_QWORD *)(v27 + 8 * v11);
              if (!v10)
              {
                v12 = v6 + 5;
                if (v6 + 5 >= v26)
                  goto LABEL_31;
                v10 = *(_QWORD *)(v27 + 8 * v12);
                if (!v10)
                {
                  while (1)
                  {
                    v11 = v12 + 1;
                    if (__OFADD__(v12, 1))
                      goto LABEL_35;
                    if (v11 >= v26)
                      goto LABEL_31;
                    v10 = *(_QWORD *)(v27 + 8 * v11);
                    ++v12;
                    if (v10)
                      goto LABEL_25;
                  }
                }
                v11 = v6 + 5;
              }
            }
          }
        }
LABEL_25:
        v5 = (v10 - 1) & v10;
        v8 = __clz(__rbit64(v10)) + (v11 << 6);
        v6 = v11;
      }
      v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v8);
      v15 = *v13;
      v14 = v13[1];
      swift_bridgeObjectRetain();
      v16 = sub_19A8C4B00();
      v17 = sub_19A86725C(v15, v14);
      v18 = v17;
      if ((v19 & 1) == 0)
        break;
      v20 = (uint64_t *)(v2[6] + 16 * v17);
      swift_bridgeObjectRelease();
      *v20 = v15;
      v20[1] = v14;
      v21 = v2[7];

      *(_QWORD *)(v21 + 8 * v18) = v16;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v17;
    v22 = (uint64_t *)(v2[6] + 16 * v17);
    *v22 = v15;
    v22[1] = v14;
    *(_QWORD *)(v2[7] + 8 * v17) = v16;
    v23 = v2[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_33;
    v2[2] = v25;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

id sub_19A844134(uint64_t a1, unint64_t a2)
{
  void *v2;
  id v5;

  if (a2 >> 60 == 15)
  {
    v2 = 0;
  }
  else
  {
    v2 = (void *)sub_19A8C3E28();
    sub_19A83334C(a1, a2);
  }
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_imageWithData_, v2);

  return v5;
}

void sub_19A8441B0(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;

  if (a2 >> 60 == 15)
  {
    v3 = 0;
  }
  else
  {
    v3 = (void *)sub_19A8C3E28();
    sub_19A83334C(a1, a2);
  }
  objc_msgSend(v2, sel_initWithData_, v3);

  OUTLINED_FUNCTION_37();
}

void sub_19A844218()
{
  sub_19A844304();
}

void sub_19A844224(uint64_t a1, unint64_t a2, void *a3)
{
  id v6;

  v6 = (id)sub_19A8C3E28();
  sub_19A833360(a1, a2);
  objc_msgSend(a3, sel_setMapsData_, v6);

}

void sub_19A844284(uint64_t a1, void *a2)
{
  id v3;

  sub_19A8444E0(0, (unint64_t *)&qword_1ECFFE140);
  v3 = (id)sub_19A8C48E4();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setServerFeatures_, v3);

}

void sub_19A844304()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  OUTLINED_FUNCTION_41();
  sub_19A8C4A10();
  v0 = OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_31(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_12(v10);
}

void sub_19A844344()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  sub_19A8C4938();
  v0 = OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_31(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_12(v10);
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

void sub_19A844394(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  void *v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  id v12;
  char **v13;
  id v14;

  type metadata accessor for ProtobufHelper();
  objc_allocWithZone(MEMORY[0x1E0D8C880]);
  sub_19A84449C(a3, a4);
  sub_19A8441B0(a3, a4);
  if (v8)
  {
    v14 = v8;
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C210]), sel_initWithProtobuf_, v8);
    if (v9)
    {
      v10 = v9;
      v11 = sub_19A85312C(a1);
      v12 = v10;
      v13 = &selRef_setInlineCard_;
      if ((v11 & 1) == 0)
        v13 = &selRef_setCard_;
      objc_msgSend(a2, *v13, v12);

    }
  }
}

uint64_t sub_19A84449C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_19A8444E0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_19A844518()
{
  return swift_release();
}

uint64_t sub_19A844520(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_19A84455C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x19AECCD38](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_22_0(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

id OUTLINED_FUNCTION_23(char a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, a1 & 1);
}

void OUTLINED_FUNCTION_29()
{
  void *v0;

  sub_19A85BA68(v0);
}

uint64_t OUTLINED_FUNCTION_32()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_35()
{
  return sub_19A8C4080();
}

uint64_t OUTLINED_FUNCTION_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

id OUTLINED_FUNCTION_39(char a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, a1 & 1);
}

uint64_t OUTLINED_FUNCTION_46()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_19A844604()
{
  uint64_t v0;

  v0 = sub_19A8C489C();
  __swift_allocate_value_buffer(v0, qword_1ECFFEBB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECFFEBB0);
  return sub_19A8C4884();
}

id ClientName.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ClientName.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClientName();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ClientName.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClientName();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19A844794(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_19A844864(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_19A844F44((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_19A844F44((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_19A844864(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_19A8449B8((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_19A8C4CD4();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_19A844A7C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_19A8C4D7C();
    if (!v8)
    {
      result = sub_19A8C4DDC();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_19A8449B8(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_19A8C4E0C();
  __break(1u);
  return result;
}

uint64_t sub_19A844A7C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_19A844B10(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_19A844CE4(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_19A844CE4((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_19A844B10(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_19A8C49BC();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x1E0DEE9D8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_6:
  v3 = sub_19A844C80(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_19A8C4D4C();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_19A8C4E0C();
  __break(1u);
LABEL_14:
  result = sub_19A8C4DDC();
  __break(1u);
  return result;
}

_QWORD *sub_19A844C80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF38);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_19A844CE4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF38);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_19A844E7C(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_19A844DB8(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_19A844DB8(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_19A8C4E0C();
  __break(1u);
  return result;
}

char *sub_19A844E7C(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_19A8C4E0C();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

unint64_t sub_19A844EFC(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ClientName()
{
  return objc_opt_self();
}

uint64_t sub_19A844F44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_19A844F94()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_19A845F90();
    if (v1 <= 0x3F)
    {
      sub_19A8C3EA0();
      if (v2 <= 0x3F)
        swift_initClassMetadata2();
    }
  }
}

uint64_t sub_19A845070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_19A8C4C38();
  (*(void (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  return sub_19A8C47D0();
}

void sub_19A8450E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v16 = sub_19A8C4C38();
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 40))(a7, a8);
  LOBYTE(v20) = a5;
  sub_19A86F7BC(v16, a2, v17, v18, v19, a1, a3, a4, v20, a6);
}

uint64_t sub_19A845190()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 24))();
}

uint64_t sub_19A8451BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 32))();
}

uint64_t sub_19A8451E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 40))(*(_QWORD *)(*(_QWORD *)v0 + 80));
}

uint64_t sub_19A845218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12[2];
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x1E0C80A78](a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_15_0(v5 + *(_QWORD *)(v6 + 112), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B07C8);
  if (swift_dynamicCast())
  {
    sub_19A8465C0(v12, (uint64_t)v14);
    v8 = v15;
    v9 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  }
  else
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_19A8465FC((uint64_t)v12, (uint64_t *)&unk_1EE3B07D0);
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_19A845300()
{
  return 1;
}

uint64_t sub_19A845308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_19A8C3EA0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7);
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_15_0(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_19A8C3E64();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
}

uint64_t sub_19A8453C0()
{
  return sub_19A8C4950();
}

uint64_t *sub_19A8453EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  if ((*((_BYTE *)v0 + *(_QWORD *)(*v0 + 120)) & 1) == 0)
    (*(void (**)(void))(v1 + 400))();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));

  sub_19A8465FC((uint64_t)v0 + *(_QWORD *)(*v0 + 136), (uint64_t *)&unk_1ECFFDFB0);
  v2 = sub_19A8C3EA0();
  OUTLINED_FUNCTION_6(v2);
  swift_release();
  return v0;
}

uint64_t sub_19A8454C4()
{
  sub_19A8453EC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivitySpan(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivitySpan);
}

uint64_t sub_19A8454F4()
{
  return sub_19A845508((void (*)(void))nullsub_1);
}

uint64_t sub_19A845508(void (*a1)(void))
{
  uint64_t v1;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152)) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_19A845574(v1, a1);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

uint64_t sub_19A845574(uint64_t result, void (*a2)(void))
{
  if ((*(_BYTE *)(result + *(_QWORD *)(*(_QWORD *)result + 120)) & 1) == 0)
  {
    a2();
    return sub_19A8455B0();
  }
  return result;
}

uint64_t sub_19A8455B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, _QWORD);
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t Strong;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _BYTE v55[12];
  int v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[22];
  char v66;

  v1 = (uint64_t)v0;
  v2 = *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDFB0);
  v8 = MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7);
  v10 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x1E0C80A78](v8, v11, v12, v13, v14);
  v17 = &v55[-v16];
  v60 = v2;
  v64 = *(_QWORD *)(v2 + 80);
  v18 = *(_QWORD *)(v64 - 8);
  v23 = MEMORY[0x1E0C80A78](v15, v19, v20, v21, v22);
  v25 = &v55[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v23, v26, v27, v28, v29);
  v31 = &v55[-v30];
  v58 = *(_QWORD *)(v1 + 24);
  v59 = (_QWORD *)(v1 + 24);
  v57 = *(_QWORD *)(v1 + 32);
  v56 = *(unsigned __int8 *)(v1 + 40);
  v32 = *(unsigned __int8 *)(v1 + 41);
  v33 = *(_QWORD *)(v1 + 48);
  v34 = *(_QWORD *)(v1 + 56);
  v35 = *(_QWORD *)(v1 + 64);
  v61 = *(_QWORD *)(v1 + 72);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_14_1();
  v62 = v35;
  swift_bridgeObjectRetain();
  v63 = v33;
  sub_19A845964(v33, v36, v37, v38, v39);
  v40 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 112);
  v41 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v18 + 16);
  if ((v32 & 1) == 0 && v34)
  {
    OUTLINED_FUNCTION_16_0((uint64_t)v31, v40, v41);
    OUTLINED_FUNCTION_2_1();
    sub_19A846508(v1, (uint64_t)v17);
    v42 = sub_19A8C480C();
    result = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v42);
    if ((_DWORD)result != 1)
    {
      OUTLINED_FUNCTION_5_1();
      swift_bridgeObjectRetain();
      sub_19A8450E0((uint64_t)v17, v32, v58, v57, v56, v34, v18, v34);
      OUTLINED_FUNCTION_4_2();
      (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v31, v18);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v17, v42);
      goto LABEL_7;
    }
LABEL_14:
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_16_0((uint64_t)v25, v40, v41);
  OUTLINED_FUNCTION_2_1();
  sub_19A846508(v1, (uint64_t)v10);
  v44 = sub_19A8C480C();
  result = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v44);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_14;
  }
  v45 = OUTLINED_FUNCTION_5_1();
  sub_19A845070(v45, v32, v18, v34);
  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v25, v18);
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v10, v44);
LABEL_7:
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v51 = Strong;
    v52 = type metadata accessor for ActivitySpan(0, v18, v34, v49);
    sub_19A8678BC(v1, v51, v52, (uint64_t)&off_1E391FAF0);
    v66 = 1;
    *(_QWORD *)&v65[14] = 0;
    *(_QWORD *)&v65[6] = 0;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_4_2();
    OUTLINED_FUNCTION_7();
    swift_release();
    v53 = v59;
    *v59 = 0;
    v53[1] = 0;
    *((_BYTE *)v53 + 16) = 0;
    *(_BYTE *)(v1 + 41) = v66;
    *(_OWORD *)(v1 + 42) = *(_OWORD *)v65;
    v54 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 56) = *(_QWORD *)&v65[14];
    *(_QWORD *)(v1 + 64) = v54;
    *(_QWORD *)(v1 + 72) = 0;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_7();
    swift_unknownObjectRelease();
    *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120)) = 1;
    return swift_weakAssign();
  }
  else
  {
    if ((sub_19A845218(0, v47, v48, v49, v50) & 1) != 0)
    {
      sub_19A8C4BF0();
      sub_19A8C47AC();
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_4_2();
    return OUTLINED_FUNCTION_7();
  }
}

void sub_19A845964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  if (sub_19A846304(a1, a2, a3, a4, a5))
  {
    sub_19A8C4BD8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v5 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v5 + 16) = xmmword_19A8CE8E0;
    v6 = sub_19A8451BC();
    v8 = v7;
    v9 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
    v10 = sub_19A8333A4();
    *(_QWORD *)(v5 + 64) = v10;
    *(_QWORD *)(v5 + 32) = v6;
    *(_QWORD *)(v5 + 40) = v8;
    sub_19A846550();
    OUTLINED_FUNCTION_11_0();
    v11 = sub_19A8C48FC();
    *(_QWORD *)(v5 + 96) = v9;
    *(_QWORD *)(v5 + 104) = v10;
    *(_QWORD *)(v5 + 72) = v11;
    *(_QWORD *)(v5 + 80) = v12;
    sub_19A8C47AC();
    swift_bridgeObjectRelease();
    sub_19A845190();
    sub_19A8451BC();
    swift_bridgeObjectRetain();
    sub_19A8C4998();
    swift_bridgeObjectRetain();
    sub_19A8C4998();
    OUTLINED_FUNCTION_4_2();
    v13 = (void *)sub_19A8C4938();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_11_0();
    v14 = (id)sub_19A8C48E4();
    AnalyticsSendEvent();
    OUTLINED_FUNCTION_4_2();
    OUTLINED_FUNCTION_12_0();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_19A845B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  type metadata accessor for ActivitySpan.ActivityData(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  swift_retain();
  sub_19A86F76C((void (*)(void))sub_19A8462FC);
  swift_release();
  sub_19A8C4BE4();
  OUTLINED_FUNCTION_7_1();
  sub_19A8C4BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
  v5 = OUTLINED_FUNCTION_3_0();
  *(_OWORD *)(v5 + 16) = xmmword_19A8CE8F0;
  sub_19A8451E8();
  v6 = sub_19A8C4D58();
  v8 = v7;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_19A8333A4();
  *(_QWORD *)(v5 + 64) = v10;
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  v11 = v9;
  v12 = v10;
  v13 = sub_19A8451BC();
  *(_QWORD *)(v5 + 96) = v11;
  *(_QWORD *)(v5 + 104) = v12;
  *(_QWORD *)(v5 + 72) = v13;
  *(_QWORD *)(v5 + 80) = v14;
  v15 = sub_19A845190();
  *(_QWORD *)(v5 + 136) = v11;
  *(_QWORD *)(v5 + 144) = v12;
  *(_QWORD *)(v5 + 112) = v15;
  *(_QWORD *)(v5 + 120) = v16;
  sub_19A8C47AC();
  OUTLINED_FUNCTION_7();
  if ((v34 & 1) == 0)
  {
    sub_19A8C4BE4();
    v17 = OUTLINED_FUNCTION_0_1();
    *(_OWORD *)(v17 + 16) = xmmword_19A8CE860;
    v18 = sub_19A8C4D58();
    *(_QWORD *)(v17 + 56) = v11;
    *(_QWORD *)(v17 + 64) = v12;
    *(_QWORD *)(v17 + 32) = v18;
    *(_QWORD *)(v17 + 40) = v19;
    OUTLINED_FUNCTION_1_1();
    OUTLINED_FUNCTION_10();
    if (v36)
    {
      OUTLINED_FUNCTION_14_1();
      sub_19A8C4BE4();
      v20 = OUTLINED_FUNCTION_0_1();
      *(_OWORD *)(v20 + 16) = xmmword_19A8CE860;
      *(_QWORD *)(v20 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B07B8);
      *(_QWORD *)(v20 + 64) = sub_19A8464C8(&qword_1EE3B07C0, &qword_1EE3B07B8, MEMORY[0x1E0CB1B18]);
      *(_QWORD *)(v20 + 32) = v36;
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_10();
    }
  }
  if (v35)
  {
    swift_bridgeObjectRetain();
    sub_19A8C4BE4();
    v21 = OUTLINED_FUNCTION_0_1();
    *(_OWORD *)(v21 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v21 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B07A8);
    *(_QWORD *)(v21 + 64) = sub_19A8464C8(&qword_1EE3B07B0, &qword_1EE3B07A8, MEMORY[0x1E0CB1828]);
    *(_QWORD *)(v21 + 32) = v35;
    OUTLINED_FUNCTION_1_1();
    OUTLINED_FUNCTION_10();
  }
  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_19A8C4DF4();
    v22 = result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v22 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v22)
      goto LABEL_13;
  }
  if (v22 < 1)
  {
    __break(1u);
    return result;
  }
  v24 = 0;
  v25 = MEMORY[0x1E0DEA968];
  do
  {
    ++v24;
    swift_unknownObjectRetain();
    sub_19A8C4BE4();
    v26 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v26 + 16) = xmmword_19A8CE860;
    swift_unknownObjectRetain();
    v27 = sub_19A8C4950();
    *(_QWORD *)(v26 + 56) = v25;
    *(_QWORD *)(v26 + 64) = v12;
    *(_QWORD *)(v26 + 32) = v27;
    *(_QWORD *)(v26 + 40) = v28;
    sub_19A8C47AC();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_12_0();
  }
  while (v22 != v24);
LABEL_13:
  OUTLINED_FUNCTION_17_0();
  sub_19A8C4BE4();
  v29 = OUTLINED_FUNCTION_7_1();
  if ((sub_19A845218(v29, v30, v31, v32, v33) & 1) != 0)
  {
    sub_19A8C4BF0();
    OUTLINED_FUNCTION_7_1();
  }
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_13();
  return swift_unknownObjectRelease();
}

void sub_19A845F90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECFFDFC0)
  {
    sub_19A8C480C();
    v0 = sub_19A8C4CA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECFFDFC0);
  }
}

uint64_t sub_19A845FE4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t initializeBufferWithCopyOfBuffer for PARImageLoader.Error(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_19A84601C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_19A846054(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_19A8460B8(uint64_t a1, __int128 *a2)
{
  __int128 v4;

  v4 = *a2;
  *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  *(_OWORD *)a1 = v4;
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_19A846170(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_19A8461D4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_19A846214(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ActivitySpan.ActivityData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivitySpan.ActivityData);
}

uint64_t sub_19A84626C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_BYTE *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 41);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 24);
  *(_BYTE *)(a2 + 16) = v2;
  *(_BYTE *)(a2 + 17) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v6;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id sub_19A8462D4()
{
  uint64_t v0;

  return *(id *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
}

uint64_t sub_19A8462F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t sub_19A8462FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19A84626C(v1, a1);
}

uint64_t sub_19A846304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t DynamicType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v6 = v5;
  v8 = *v5;
  v9 = *(_QWORD *)(*v5 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](a1, a2, a3, a4, a5);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, (uint64_t)v6 + *(_QWORD *)(v8 + 112), v9);
  DynamicType = swift_getDynamicType();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v14 = dynamic_cast_existential_1_conditional(DynamicType);
  v16 = 0;
  if (v14 && a1)
  {
    v17 = v14;
    v18 = v15;
    v19 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 16);
    OUTLINED_FUNCTION_14_1();
    v20 = v19(v17, v18);
    v22 = v21;
    sub_19A8C49F8();
    v23 = sub_19A8C4CBC();
    swift_isUniquelyReferenced_nonNull_native();
    v30 = a1;
    sub_19A8492A4(v23, v20, v22);
    v24 = v30;
    OUTLINED_FUNCTION_4_2();
    swift_bridgeObjectRelease();
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
    v27 = v26;
    sub_19A845308();
    v28 = sub_19A8C4B00();
    swift_isUniquelyReferenced_nonNull_native();
    v31 = v24;
    sub_19A8492A4(v28, v25, v27);
    v16 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v16;
}

uint64_t sub_19A8464C8(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x19AECCD38](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19A846508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDFB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_19A846550()
{
  unint64_t result;

  result = qword_1ECFFE910;
  if (!qword_1ECFFE910)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECFFE910);
  }
  return result;
}

uint64_t dynamic_cast_existential_1_conditional(uint64_t a1)
{
  if (swift_conformsToProtocol2())
    return a1;
  else
    return 0;
}

uint64_t sub_19A8465C0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_19A8465FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_6(v3);
  return a1;
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_19A846644(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v42[2];
  char *v43;
  char *v44;
  _OWORD v45[2];
  __int128 v46;
  uint64_t v47;
  char *v48;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF08);
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19A8C423C();
  v11 = *(_QWORD *)(v10 - 8);
  v16 = MEMORY[0x1E0C80A78](v10, v12, v13, v14, v15);
  v48 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v18, v19, v20, v21);
  v44 = (char *)v42 - v22;
  v23 = sub_19A8C3DB0();
  v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58];
  v25 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23, v26, v27, v28, v29);
  v31 = (char *)v42 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  sub_19A8C4C5C();

  v33 = v31;
  v34 = sub_19A84455C(&qword_1ECFFDEF8, v24, MEMORY[0x1E0CAFB80]);
  sub_19A8C4CB0();
  v42[0] = v25;
  v35 = MEMORY[0x1E0DEE9D8];
  if (v47)
  {
    v42[1] = v34;
    v43 = v33;
    while (1)
    {
      sub_19A8470D0(&v46, v45);
      sub_19A846A84((uint64_t)v45, (uint64_t)v9);
      if (v1)
        break;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
      {
        sub_19A844520((uint64_t)v9, &qword_1ECFFDF08);
      }
      else
      {
        v36 = v23;
        v37 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
        v38 = v44;
        v37(v44, v9, v10);
        v37(v48, v38, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v35 = sub_19A864E2C(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
        v40 = *(_QWORD *)(v35 + 16);
        v39 = *(_QWORD *)(v35 + 24);
        if (v40 >= v39 >> 1)
          v35 = sub_19A864E2C(v39 > 1, v40 + 1, 1, v35);
        *(_QWORD *)(v35 + 16) = v40 + 1;
        v37((char *)(v35+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v40), v48, v10);
        v23 = v36;
        v33 = v43;
      }
      sub_19A8C4CB0();
      if (!v47)
        goto LABEL_12;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
    (*(void (**)(char *, uint64_t))(v42[0] + 8))(v33, v23);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v42[0] + 8))(v33, v23);
  }
  return v35;
}

id CoreParsec_fakeEntityData(void *a1)
{
  id v2;
  void *v3;

  v2 = a1;
  v3 = (void *)sub_19A846960(a1);

  return v3;
}

uint64_t sub_19A846960(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = sub_19A8C426C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19A8C4260();
  if (a1)
  {
    v10 = a1;
    sub_19A846644(v10);

  }
  sub_19A8C4254();
  v11 = *(_QWORD *)(sub_19A8C4248() + 16);
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_19A84455C(&qword_1ECFFDF10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6DA50], MEMORY[0x1E0D6DA30]);
    v12 = sub_19A8C47A0();
    v14 = v13;
    v15 = sub_19A8C3E28();
    sub_19A833360(v12, v14);
  }
  else
  {
    v15 = 0;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  return v15;
}

uint64_t sub_19A846A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char *v55;
  id v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  char *v80;

  v70 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF00);
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19A8C4218();
  v11 = *(_QWORD *)(v10 - 8);
  v16 = MEMORY[0x1E0C80A78](v10, v12, v13, v14, v15);
  v72 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v16, v18, v19, v20, v21);
  v24 = (char *)&v66 - v23;
  MEMORY[0x1E0C80A78](v22, v25, v26, v27, v28);
  v30 = (char *)&v66 - v29;
  v31 = sub_19A8C423C();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31, v33, v34, v35, v36);
  v38 = (char *)&v66 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19A844F44(a1, (uint64_t)&v78);
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDF18);
  if ((swift_dynamicCast() & 1) == 0)
    return __swift_storeEnumTagSinglePayload(v70, 1, 1, v31);
  v67 = v32;
  v68 = v31;
  v71 = v30;
  v80 = v24;
  v40 = v76;
  v69 = v38;
  sub_19A8C4230();
  sub_19A86AF30(1701667182, 0xE400000000000000, v40, &v78);
  if (v79)
  {
    v41 = MEMORY[0x1E0DEE9B8];
    swift_dynamicCast();
  }
  else
  {
    sub_19A844520((uint64_t)&v78, &qword_1ECFFDF48);
    v41 = MEMORY[0x1E0DEE9B8];
  }
  v42 = v72;
  sub_19A8C41E8();
  sub_19A86AF30(0xD000000000000010, 0x800000019A8D04E0, v40, &v78);
  if (v79)
    swift_dynamicCast();
  else
    sub_19A844520((uint64_t)&v78, &qword_1ECFFDF48);
  sub_19A8C41DC();
  sub_19A86AF30(0x736369706F74, 0xE600000000000000, v40, &v78);
  swift_bridgeObjectRelease();
  if (v79)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE138);
    if (swift_dynamicCast())
      v44 = v76;
    else
      v44 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_19A844520((uint64_t)&v78, &qword_1ECFFDF48);
    v44 = MEMORY[0x1E0DEE9D8];
  }
  v45 = *(_QWORD *)(v44 + 16);
  if (v45)
  {
    v46 = v41;
    v47 = v44 + 32;
    v66 = v44;
    swift_bridgeObjectRetain();
    v48 = MEMORY[0x1E0DEE9D8];
    v73 = v39;
    v74 = v46 + 8;
    do
    {
      sub_19A844F44(v47, (uint64_t)&v78);
      sub_19A844F44((uint64_t)&v78, (uint64_t)&v76);
      if (swift_dynamicCast())
      {
        v49 = v75;
        sub_19A8C420C();
        if (v49[2])
        {
          v50 = sub_19A86725C(0x696669746E656469, 0xEA00000000007265);
          if ((v51 & 1) != 0)
          {
            sub_19A844F44(v49[7] + 32 * v50, (uint64_t)&v76);
            swift_dynamicCast();
          }
        }
        sub_19A8C41F4();
        if (v49[2] && (v53 = sub_19A86725C(0x65726F6373, 0xE500000000000000), (v54 & 1) != 0))
        {
          sub_19A844F44(v49[7] + 32 * v53, (uint64_t)&v76);
        }
        else
        {
          v76 = 0u;
          v77 = 0u;
        }
        v55 = v80;
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v77 + 1))
        {
          sub_19A8470E0();
          if ((swift_dynamicCast() & 1) != 0)
          {
            v56 = v75;
            objc_msgSend(v75, sel_floatValue);
            sub_19A8C4200();
            v55 = v80;

          }
        }
        else
        {
          sub_19A844520((uint64_t)&v76, &qword_1ECFFDF48);
        }
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v55, v10);
        v52 = 0;
      }
      else
      {
        v52 = 1;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v9, v52, 1, v10);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v78);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
      {
        sub_19A844520((uint64_t)v9, &qword_1ECFFDF00);
      }
      else
      {
        v57 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
        v58 = v71;
        v57(v71, v9, v10);
        v57(v42, v58, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v48 = sub_19A864FD8(0, *(_QWORD *)(v48 + 16) + 1, 1, v48);
        v60 = *(_QWORD *)(v48 + 16);
        v59 = *(_QWORD *)(v48 + 24);
        if (v60 >= v59 >> 1)
          v48 = sub_19A864FD8(v59 > 1, v60 + 1, 1, v48);
        *(_QWORD *)(v48 + 16) = v60 + 1;
        v61 = v48
            + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
            + *(_QWORD *)(v11 + 72) * v60;
        v42 = v72;
        v57((char *)v61, v72, v10);
      }
      v47 += 32;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v62 = v69;
  sub_19A8C4224();
  v63 = v70;
  v64 = v62;
  v65 = v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v70, v64, v68);
  return __swift_storeEnumTagSinglePayload(v63, 0, 1, v65);
}

_OWORD *sub_19A8470D0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_19A8470E0()
{
  unint64_t result;

  result = qword_1ECFFE140;
  if (!qword_1ECFFE140)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECFFE140);
  }
  return result;
}

uint64_t sub_19A84711C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = MEMORY[0x1E0DEE9D8];
  v19 = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    sub_19A8C4650();
    swift_bridgeObjectRetain();
    v4 = 0;
    v16 = a2;
    do
    {
      v5 = objc_msgSend(objc_allocWithZone((Class)PARSafariSummarizationSummaryCandidate), sel_initWithReply_, a2);
      sub_19A8C4638();
      sub_19A844344();
      v6 = v5;
      v7 = sub_19A8C4644();
      v18 = v3;
      v8 = *(_QWORD *)(v7 + 16);
      if (v8)
      {
        v9 = *(_QWORD *)(sub_19A8C4140() - 8);
        v10 = v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
        v11 = *(_QWORD *)(v9 + 72);
        v12 = a2;
        swift_unknownObjectRetain();
        do
        {
          sub_19A842458(v12);
          MEMORY[0x19AECBFC4]();
          if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_19A8C4A40();
          sub_19A8C4A58();
          sub_19A8C4A34();
          v10 += v11;
          --v8;
        }
        while (v8);
        v13 = v18;
        a2 = v16;
        v3 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v14 = a2;
        swift_unknownObjectRetain();
        v13 = v3;
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      sub_19A85302C(v13, v6);
      MEMORY[0x19AECBFC4]();
      if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_19A8C4A40();
      ++v4;
      sub_19A8C4A58();
      sub_19A8C4A34();
    }
    while (v4 != v17);
    swift_bridgeObjectRelease();
    v3 = v19;
  }

  swift_unknownObjectRelease();
  return v3;
}

void PARSafariSummarizationPrefetchResponse.init(reply:factory:data:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v35 = a1;
  v36 = a2;
  sub_19A8C4770();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B07E0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v13, v14, v15, v16, v17);
  OUTLINED_FUNCTION_6_3();
  v18 = sub_19A8C46C8();
  v19 = *(_QWORD *)(v18 - 8);
  v24 = MEMORY[0x1E0C80A78](v18, v20, v21, v22, v23);
  v26 = (char *)&v34 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24, v27, v28, v29, v30);
  v32 = (char *)&v34 - v31;
  v39 = 0;
  v37 = 0u;
  v38 = 0u;
  v33 = v4;
  sub_19A84449C(a3, a4);
  sub_19A8C4764();
  sub_19A84455C(&qword_1EE3B07E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6FF58], MEMORY[0x1E0D6FF50]);
  sub_19A8C4794();
  OUTLINED_FUNCTION_43(v5, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v32, v5, v18);
  swift_getObjectType();

  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v26, v32, v18);
  sub_19A8475B0(v35, v36, (uint64_t)v26);
  OUTLINED_FUNCTION_8_2(a3);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v32, v18);
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_0_2();
}

void sub_19A8475B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  void (*v49)(uint64_t, unint64_t, uint64_t);
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, unint64_t, uint64_t);
  uint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v5 = sub_19A8C43C8();
  v67 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_18();
  v12 = v11 - v10;
  v13 = sub_19A8C43F8();
  v63 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v14, v15, v16, v17);
  OUTLINED_FUNCTION_18();
  v20 = v19 - v18;
  v56 = sub_19A8C441C();
  v21 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56, v22, v23, v24, v25);
  OUTLINED_FUNCTION_18();
  v55 = v27 - v26;
  v47 = a1;
  v46 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithReply_, a1);
  v48 = a3;
  v28 = sub_19A8C46BC();
  v29 = MEMORY[0x1E0DEE9D8];
  v70 = MEMORY[0x1E0DEE9D8];
  v53 = *(_QWORD *)(v28 + 16);
  if (v53)
  {
    v51 = v28 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v50 = *(_QWORD *)(v21 + 72);
    v52 = v21;
    v49 = *(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16);
    swift_bridgeObjectRetain();
    v30 = 0;
    v57 = v20;
    v58 = v13;
    do
    {
      v54 = v30;
      v49(v55, v51 + v50 * v30, v56);
      v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C3E8]), sel_init);
      sub_19A8C43A4();
      sub_19A844344();
      v32 = sub_19A8C4410();
      v69 = v29;
      v64 = *(_QWORD *)(v32 + 16);
      if (v64)
      {
        v61 = v32 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
        swift_bridgeObjectRetain();
        v59 = *(void (**)(uint64_t, unint64_t, uint64_t))(v63 + 16);
        v60 = *(_QWORD *)(v63 + 72);
        v33 = 0;
        v62 = v31;
        do
        {
          v66 = v33;
          v59(v20, v61 + v60 * v33, v13);
          v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C3F0]), sel_init);
          sub_19A8C43A4();
          sub_19A844344();
          objc_msgSend(v34, sel_setHas_summary_, sub_19A8C43B0() & 1);
          v65 = (uint64_t)v34;
          objc_msgSend(v34, sel_setHas_table_of_contents_, sub_19A8C43EC() & 1);
          v35 = sub_19A8C43D4();
          v68 = v29;
          v36 = *(_QWORD *)(v35 + 16);
          if (v36)
          {
            sub_19A8444E0(0, (unint64_t *)&qword_1ECFFE140);
            v37 = v35 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
            v38 = *(_QWORD *)(v67 + 72);
            v39 = *(void (**)(uint64_t, unint64_t, uint64_t))(v67 + 16);
            do
            {
              v39(v12, v37, v5);
              sub_19A8C43BC();
              sub_19A8C4C74();
              v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8))(v12, v5);
              MEMORY[0x19AECBFC4](v40);
              if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                OUTLINED_FUNCTION_2_2();
              sub_19A8C4A58();
              sub_19A8C4A34();
              v37 += v38;
              --v36;
            }
            while (v36);
            v41 = v68;
            v20 = v57;
            v13 = v58;
            v29 = MEMORY[0x1E0DEE9D8];
          }
          else
          {
            v41 = v29;
          }
          OUTLINED_FUNCTION_10();
          sub_19A847E90(v41, v65, (unint64_t *)&qword_1ECFFE140);
          sub_19A8C43E0();
          sub_19A844344();
          v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v20, v13);
          MEMORY[0x19AECBFC4](v42);
          v31 = v62;
          if (*(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            OUTLINED_FUNCTION_2_2();
          v33 = v66 + 1;
          sub_19A8C4A58();
          sub_19A8C4A34();
        }
        while (v66 + 1 != v64);
        OUTLINED_FUNCTION_10();
        v43 = v69;
      }
      else
      {
        v43 = v29;
      }
      OUTLINED_FUNCTION_10();
      sub_19A847E90(v43, (uint64_t)v31, &qword_1EE3B0810);
      v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8))(v55, v56);
      MEMORY[0x19AECBFC4](v44);
      if (*(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        OUTLINED_FUNCTION_2_2();
      v30 = v54 + 1;
      sub_19A8C4A58();
      sub_19A8C4A34();
    }
    while (v54 + 1 != v53);
    OUTLINED_FUNCTION_7_2();
    v29 = v70;
  }
  OUTLINED_FUNCTION_7_2();
  sub_19A847E90(v29, (uint64_t)v46, &qword_1EE3B0808);

  swift_unknownObjectRelease();
  v45 = sub_19A8C46C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v48, v45);
  OUTLINED_FUNCTION_0_2();
}

id _sSo38PARSafariSummarizationPrefetchResponseC10CoreParsecE5reply7factory4dataABSgSo8PARReplyC_So16PARResultFactory_p10Foundation4DataVtcfC_0(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  id v8;

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = (void *)sub_19A8C3E28();
  v8 = objc_msgSend(v6, sel_initWithReply_factory_data_, a1, a2, v7);
  OUTLINED_FUNCTION_8_2(a3);

  swift_unknownObjectRelease();
  return v8;
}

void PARSafariSummarizationSummarizeResponse.init(reply:factory:data:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;

  sub_19A8C4770();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B07F0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v14, v15, v16, v17, v18);
  OUTLINED_FUNCTION_18();
  v21 = v20 - v19;
  v22 = sub_19A8C46E0();
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D70468];
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v25, v26, v27, v28);
  OUTLINED_FUNCTION_6_3();
  v33 = a1;
  v29 = objc_msgSend(v4, sel_initWithReply_, a1);
  sub_19A84449C(a3, a4);
  sub_19A8C4764();
  sub_19A84455C(&qword_1EE3B07F8, v23, MEMORY[0x1E0D70460]);
  sub_19A8C4794();
  OUTLINED_FUNCTION_12_1(v21, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v5, v21, v22);
  v30 = sub_19A8C46BC();
  v31 = v33;
  swift_unknownObjectRetain();
  v32 = sub_19A84711C(v30, v31);
  OUTLINED_FUNCTION_7_2();
  sub_19A847E90(v32, (uint64_t)v29, &qword_1EE3B0800);
  OUTLINED_FUNCTION_9_1();

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v5, v22);
  OUTLINED_FUNCTION_0_2();
}

uint64_t sub_19A847E0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t (*a6)(id, uint64_t, uint64_t, uint64_t))
{
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = a3;
  swift_unknownObjectRetain();
  v10 = a5;
  v11 = sub_19A8C3E40();
  v13 = v12;

  return a6(v9, a4, v11, v13);
}

void sub_19A847E90(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  sub_19A8444E0(0, a3);
  sub_19A8C4A10();
  v3 = OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_31(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_12(v13);
}

uint64_t OUTLINED_FUNCTION_8_2(uint64_t a1)
{
  unint64_t v1;

  return sub_19A833360(a1, v1);
}

uint64_t sub_19A847EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  v2 = sub_19A8C3EE8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  v6 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_19A8C3EDC();

  v7 = sub_19A8C3ED0();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)(v1 + 16) = v7;
  *(_QWORD *)(v1 + 24) = v9;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedConfiguration);
  if (v10)
    v10 = (id)sub_19A848088(v10);
  else
    v11 = 0;
  *(_QWORD *)(v1 + 32) = v10;
  *(_QWORD *)(v1 + 40) = v11;
  OUTLINED_FUNCTION_0_3();
  *(_QWORD *)(v1 + 48) = sub_19A8C46F8();
  *(_QWORD *)(v1 + 56) = v12;
  OUTLINED_FUNCTION_0_3();
  *(_QWORD *)(v1 + 64) = sub_19A8C4704();
  *(_QWORD *)(v1 + 72) = v13;
  OUTLINED_FUNCTION_0_3();
  return v1;
}

uint64_t sub_19A848014()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19A848048()
{
  sub_19A848014();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeviceContext()
{
  return objc_opt_self();
}

uint64_t sub_19A848088(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_countryCode);

  if (!v2)
    return 0;
  v3 = sub_19A8C4944();

  return v3;
}

uint64_t sub_19A8480F4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_19A848170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = sub_19A8C3EA0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3, v4, v5, v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v8, v0 + *(_QWORD *)(*(_QWORD *)v0 + 144), v1);
  sub_19A8C3E64();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v8, v1);
}

uint64_t sub_19A848240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + 81) & 1) == 0)
    (*(void (**)(void))(*(_QWORD *)v0 + 400))();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  sub_19A849608(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 144);
  v2 = sub_19A8C3EA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_19A8482F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  uint64_t ObjectType;
  void (*v41)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDFB0);
  v7 = MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7, v10, v11, v12, v13);
  v15 = (char *)&v44 - v14;
  v17 = v0 + 24;
  v16 = *(_QWORD *)(v0 + 24);
  v45 = *(_QWORD *)(v0 + 32);
  v46 = v16;
  v18 = *(_BYTE *)(v0 + 40);
  v19 = *(_BYTE *)(v0 + 41);
  v21 = (_QWORD *)(v0 + 48);
  v20 = *(_QWORD *)(v0 + 48);
  v22 = *(_QWORD *)(v1 + 56);
  v23 = *(_QWORD *)(v1 + 64);
  v47 = *(_QWORD *)(v1 + 72);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48 = v23;
  swift_bridgeObjectRetain();
  v49 = v20;
  sub_19A8486B4(v20);
  v24 = *(_BYTE *)(v1 + 80);
  v25 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 136);
  if ((v19 & 1) == 0 && v22)
  {
    swift_beginAccess();
    sub_19A846508(v25, (uint64_t)v15);
    v26 = sub_19A8C480C();
    result = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v26);
    if ((_DWORD)result != 1)
    {
      v28 = *(_QWORD *)(v1 + 88);
      swift_bridgeObjectRetain();
      v29 = sub_19A8C4C38();
      v30 = sub_19A848BBC(v24);
      LOBYTE(v43) = v18;
      sub_19A86F7BC(v29, v28, v30, v31, 2, (uint64_t)v15, v46, v45, v43, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v15, v26);
      goto LABEL_7;
    }
LABEL_15:
    __break(1u);
    return result;
  }
  swift_beginAccess();
  sub_19A846508(v25, (uint64_t)v9);
  v32 = sub_19A8C480C();
  result = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v32);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_15;
  }
  sub_19A8C4C38();
  sub_19A848BBC(v24);
  sub_19A8C47D0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v9, v32);
LABEL_7:
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v34 = Strong;
    v50 = v1;
    swift_retain();
    v35 = sub_19A8C4950();
    v37 = v36;
    v38 = *(os_unfair_lock_s **)(*(_QWORD *)(v34 + 32) + 16);
    os_unfair_lock_lock(v38);
    sub_19A867000(v34, v35, v37, v1, (uint64_t)&off_1E391FAF0);
    os_unfair_lock_unlock(v38);
    swift_bridgeObjectRelease();
    if (MEMORY[0x19AECCEAC](v34 + 16))
    {
      v39 = *(_QWORD *)(v34 + 24);
      ObjectType = swift_getObjectType();
      v41 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v39 + 16);
      v42 = swift_retain();
      v41(v42, &off_1E391FAF0, ObjectType, v39);
      swift_release_n();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *(_QWORD *)v17 = 0;
    *(_QWORD *)(v17 + 8) = 0;
    *(_BYTE *)(v17 + 16) = 0;
    *(_BYTE *)(v1 + 41) = 1;
    *v21 = 0;
    v21[1] = 0;
    *(_QWORD *)(v1 + 64) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 72) = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    *(_BYTE *)(v1 + 81) = 1;
    return swift_weakAssign();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

void sub_19A8486B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  if (sub_19A848928(a1))
  {
    sub_19A8C4BD8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_19A8CE8E0;
    v2 = aDiskwrite[0];
    v3 = aDiskwrite[1];
    v4 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
    v5 = sub_19A8333A4();
    *(_QWORD *)(v1 + 64) = v5;
    *(_QWORD *)(v1 + 32) = v2;
    *(_QWORD *)(v1 + 40) = v3;
    sub_19A846550();
    swift_bridgeObjectRetain();
    v6 = sub_19A8C48FC();
    *(_QWORD *)(v1 + 96) = v4;
    *(_QWORD *)(v1 + 104) = v5;
    *(_QWORD *)(v1 + 72) = v6;
    *(_QWORD *)(v1 + 80) = v7;
    sub_19A8C47AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_19A8C4998();
    swift_bridgeObjectRetain();
    sub_19A8C4998();
    swift_bridgeObjectRelease();
    v8 = (void *)sub_19A8C4938();
    swift_bridgeObjectRelease();
    v9 = (id)sub_19A8C48E4();
    AnalyticsSendEvent();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_19A848898(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v9;

  v9 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 152)) + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 32) = a2;
  *(_BYTE *)(v4 + 40) = a3;
  *(_BYTE *)(v4 + 41) = 0;
  *(_QWORD *)(v4 + 56) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v9);
  return swift_release();
}

uint64_t sub_19A848928(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = dynamic_cast_existential_1_unconditional((uint64_t)&unk_1E391FEC8);
  if (!a1)
    return 0;
  v4 = v2;
  v5 = v3;
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  v7 = v6(v4, v5);
  v9 = v8;
  v10 = sub_19A8C4CBC();
  swift_isUniquelyReferenced_nonNull_native();
  sub_19A8492A4(v10, v7, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v13 = v12;
  sub_19A848170();
  v14 = sub_19A8C4B00();
  swift_isUniquelyReferenced_nonNull_native();
  sub_19A8492A4(v14, v11, v13);
  v15 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_19A848A68(uint64_t a1)
{
  _QWORD *v1;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 152)) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  v1[6] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v3);
  return swift_release();
}

BOOL sub_19A848AD8(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_19A848AE8()
{
  return sub_19A8C4EB4();
}

uint64_t sub_19A848B0C()
{
  sub_19A8C4EA8();
  sub_19A8C4EB4();
  return sub_19A8C4EC0();
}

BOOL sub_19A848B50(char *a1, char *a2)
{
  return sub_19A848AD8(*a1, *a2);
}

uint64_t sub_19A848B5C()
{
  return sub_19A848B0C();
}

uint64_t sub_19A848B64()
{
  return sub_19A848AE8();
}

uint64_t sub_19A848B6C()
{
  sub_19A8C4EA8();
  sub_19A8C4EB4();
  return sub_19A8C4EC0();
}

uint64_t sub_19A848BBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_19A848BE8 + 4 * byte_19A8CEA50[a1]))("unknown", 7);
}

const char *sub_19A848BE8()
{
  return "parsecSession";
}

unint64_t sub_19A848C68(unint64_t result)
{
  if (result >= 9)
    return 9;
  return result;
}

uint64_t sub_19A848C78(uint64_t result)
{
  return result;
}

uint64_t sub_19A848C80()
{
  return sub_19A848C88();
}

uint64_t sub_19A848C88()
{
  sub_19A8C4EA8();
  sub_19A8C4EB4();
  return sub_19A8C4EC0();
}

unint64_t sub_19A848CC8@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_19A848C68(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_19A848CF0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = sub_19A848C78(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_19A848D18()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_1();
  return v0;
}

uint64_t sub_19A848D44()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_1();
  return v0;
}

uint64_t sub_19A848D70()
{
  unsigned __int8 *v0;

  return sub_19A848BBC(*v0);
}

uint64_t sub_19A848D8C()
{
  return 0x6E6F697461727564;
}

uint64_t sub_19A848DA4()
{
  return 0x656372756F736572;
}

uint64_t sub_19A848DC8(uint64_t a1, uint64_t a2)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE148);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19A8CE8E0;
  *(_QWORD *)(inited + 32) = 0x7365747962;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  strcpy((char *)(inited + 56), "feedbackType");
  *(_BYTE *)(inited + 69) = 0;
  *(_WORD *)(inited + 70) = -5120;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, a2);
  sub_19A846550();
  return sub_19A8C4908();
}

uint64_t sub_19A848EB0()
{
  uint64_t v0;

  return sub_19A848DC8(*(_QWORD *)v0, *(unsigned int *)(v0 + 8));
}

uint64_t sub_19A848EBC()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_19A848EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;

  v6 = v5;
  v7 = *v5;
  MEMORY[0x1E0C80A78](a1, a2, a3, a4, a5);
  if ((v6[81] & 1) == 0)
  {
    OUTLINED_FUNCTION_8_3();
    v8 = *(_QWORD *)(v7 + 456);
    v9 = OUTLINED_FUNCTION_7_3(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    OUTLINED_FUNCTION_12_2();
    sub_19A848A68(v9);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_19A8CE860;
    OUTLINED_FUNCTION_8_3();
    v11 = OUTLINED_FUNCTION_7_3(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16));
    OUTLINED_FUNCTION_12_2();
    v12 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 32) = v11;
    sub_19A848898((uint64_t)"bytesWritten=%{signpost.description:attribute,public}llu", 56, 2, v10);
    swift_bridgeObjectRelease();
    v13 = *(os_unfair_lock_s **)(*(_QWORD *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 152)] + 16);
    swift_retain();
    os_unfair_lock_lock(v13);
    if ((v6[81] & 1) == 0)
      sub_19A8482F4();
    os_unfair_lock_unlock(v13);
    swift_release();
  }
  OUTLINED_FUNCTION_0_2();
}

uint64_t sub_19A849020()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 448) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 472));
}

uint64_t sub_19A849064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *v5;
  if ((*((_BYTE *)v5 + 81) & 1) == 0)
    sub_19A848EC4(a1, a2, a3, a4, a5);
  v7 = sub_19A848240();

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 448) - 8) + 8))(v7 + *(_QWORD *)(*(_QWORD *)v7 + 472));
  return v7;
}

uint64_t sub_19A8490CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_19A849064(a1, a2, a3, a4, a5);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DiskWriteSpan(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DiskWriteSpan);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

void type metadata accessor for DiskWriteActivity()
{
  OUTLINED_FUNCTION_10_0();
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_19A849130(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 12))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_19A849150(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 12) = v3;
  return result;
}

void type metadata accessor for FeedbackDiskWriteMetrics()
{
  OUTLINED_FUNCTION_10_0();
}

unint64_t sub_19A849188(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_19A8491B4();
  result = sub_19A8491F0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_19A8491B4()
{
  unint64_t result;

  result = qword_1ECFFDF90;
  if (!qword_1ECFFDF90)
  {
    result = MEMORY[0x19AECCD38](&unk_19A8CEBA0, &unk_1E391FEC8);
    atomic_store(result, (unint64_t *)&qword_1ECFFDF90);
  }
  return result;
}

unint64_t sub_19A8491F0()
{
  unint64_t result;

  result = qword_1ECFFDFA0;
  if (!qword_1ECFFDFA0)
  {
    result = MEMORY[0x19AECCD38](&unk_19A8CEB68, &unk_1E391FEC8);
    atomic_store(result, (unint64_t *)&qword_1ECFFDFA0);
  }
  return result;
}

unint64_t sub_19A849230()
{
  unint64_t result;

  result = qword_1ECFFDF98;
  if (!qword_1ECFFDF98)
  {
    result = MEMORY[0x19AECCD38](&unk_19A8CEBE0, &unk_1E391FEC8);
    atomic_store(result, (unint64_t *)&qword_1ECFFDF98);
  }
  return result;
}

uint64_t dynamic_cast_existential_1_unconditional(uint64_t a1)
{
  uint64_t result;

  result = swift_conformsToProtocol2();
  if (result)
    return a1;
  __break(1u);
  return result;
}

void sub_19A8492A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD **v3;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;

  sub_19A86725C(a2, a3);
  OUTLINED_FUNCTION_3_1();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDFD0);
  if ((OUTLINED_FUNCTION_2_3() & 1) == 0)
    goto LABEL_5;
  v12 = sub_19A86725C(a2, a3);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_9:
    sub_19A8C4E60();
    __break(1u);
    return;
  }
  v10 = v12;
LABEL_5:
  v14 = *v3;
  if ((v11 & 1) != 0)
  {
    v15 = v14[7];
    v16 = *(void **)(v15 + 8 * v10);
    *(_QWORD *)(v15 + 8 * v10) = a1;

  }
  else
  {
    sub_19A8496FC(v10, a2, a3, a1, v14);
    OUTLINED_FUNCTION_0_4();
  }
}

void sub_19A849388(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  char v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = sub_19A8C3DF8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19A8672C0(a2);
  OUTLINED_FUNCTION_3_1();
  if (v15)
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = v13;
  v17 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE3B02A8);
  if ((sub_19A8C4DC4() & 1) == 0)
    goto LABEL_5;
  v18 = sub_19A8672C0(a2);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    sub_19A8C4E60();
    __break(1u);
    return;
  }
  v16 = v18;
LABEL_5:
  v20 = *v2;
  if ((v17 & 1) != 0)
  {
    v21 = v20[7];
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
    sub_19A849744(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, a2, v5);
    sub_19A849648(v16, (uint64_t)v12, a1, v20);
    OUTLINED_FUNCTION_0_2();
  }
}

void sub_19A8494D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD **v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_1_2(a1, a2, a3);
  OUTLINED_FUNCTION_3_1();
  if (v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = v5;
  v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0290);
  v10 = OUTLINED_FUNCTION_2_3();
  if ((v10 & 1) == 0)
    goto LABEL_5;
  v10 = OUTLINED_FUNCTION_6_4();
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_9:
    sub_19A8C4E60();
    __break(1u);
    return;
  }
  v8 = v10;
LABEL_5:
  v14 = *v4;
  if ((v9 & 1) != 0)
  {
    v15 = v14[7];

    *(_QWORD *)(v15 + 8 * v8) = v3;
    OUTLINED_FUNCTION_5_2();
  }
  else
  {
    OUTLINED_FUNCTION_9_2(v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_0_4();
  }
}

void sub_19A849570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD **v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_1_2(a1, a2, a3);
  OUTLINED_FUNCTION_3_1();
  if (v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = v5;
  v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDFC8);
  v10 = OUTLINED_FUNCTION_2_3();
  if ((v10 & 1) == 0)
    goto LABEL_5;
  v10 = OUTLINED_FUNCTION_6_4();
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_9:
    sub_19A8C4E60();
    __break(1u);
    return;
  }
  v8 = v10;
LABEL_5:
  v14 = *v4;
  if ((v9 & 1) != 0)
  {
    v15 = v14[7];
    swift_release();
    *(_QWORD *)(v15 + 8 * v8) = v3;
    OUTLINED_FUNCTION_5_2();
  }
  else
  {
    OUTLINED_FUNCTION_9_2(v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_0_4();
  }
}

uint64_t sub_19A849608(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDFB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19A849648(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_19A8C3DF8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
  result = sub_19A84978C(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

unint64_t sub_19A8496FC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_19A849744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_19A84978C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19A8497D4(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_19A84985C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_19A8498A8 + 4 * byte_19A8CEA5E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_19A8498DC + 4 * byte_19A8CEA59[v4]))();
}

uint64_t sub_19A8498DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19A8498E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19A8498ECLL);
  return result;
}

uint64_t sub_19A8498F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19A849900);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_19A849904(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19A84990C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19A849918(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_19A849920(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void type metadata accessor for DiskWriteError()
{
  OUTLINED_FUNCTION_10_0();
}

unint64_t sub_19A849938()
{
  unint64_t result;

  result = qword_1EE3B0818;
  if (!qword_1EE3B0818)
  {
    result = MEMORY[0x19AECCD38](&unk_19A8CEC58, &unk_1E391FB50);
    atomic_store(result, &qword_1EE3B0818);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t static PAREngagedResult.maxSearchStringSize.getter()
{
  return 64;
}

uint64_t static PAREngagedResult.maxSuggestionSize.getter()
{
  return 128;
}

uint64_t static PAREngagedResult.maxEncodedNormalizedTopicSize.getter()
{
  return 4096;
}

void *PAREngagedResult.init(_:)(void *a1)
{
  swift_getObjectType();
  return sub_19A84A6BC(a1);
}

id PAREngagedResult.init(_:searchString:type:engagemementTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  void *v13;
  uint64_t v14;

  v12 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_19A849F60(a3, a4, v12, (SEL *)&selRef_setSearchString_);
  sub_19A849F60(a1, a2, v12, (SEL *)&selRef_setTitle_);
  v13 = (void *)sub_19A8C3E58();
  objc_msgSend(v12, sel_setEngagementTime_, v13);

  objc_msgSend(v12, sel_setType_, a5);
  objc_msgSend(v12, sel_setScore_, 1.0);

  v14 = sub_19A8C3EA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a6, v14);
  return v12;
}

id PAREngagedResult.init(encoded:)(uint64_t a1, unint64_t a2)
{
  id v4;
  id v5;
  id v6;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v4 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  sub_19A84449C(a1, a2);
  v5 = sub_19A849DD0(a1, a2);
  v8 = v5;
  if (!v5)
  {
    OUTLINED_FUNCTION_0_5();
    return 0;
  }
  OUTLINED_FUNCTION_45((uint64_t)v5, (unint64_t *)&unk_1ECFFDFF0);
  v9 = (void *)sub_19A8C4C68();
  if (!v9)
  {
    objc_msgSend(v8, sel_finishDecoding);
    OUTLINED_FUNCTION_0_5();

    return 0;
  }
  v10 = v9;
  v6 = sub_19A84A008(v10);
  v11 = v6;

  if (v6)
  objc_msgSend(v8, sel_finishDecoding);
  OUTLINED_FUNCTION_0_5();

  return v6;
}

void PAREngagedResult.encoded()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36F8]), sel_initRequiringSecureCoding_, 1);
  v2 = (void *)sub_19A8C4938();
  objc_msgSend(v1, sel_encodeObject_forKey_, v0, v2);

  objc_msgSend(v1, sel_finishEncoding);
  v3 = objc_msgSend(v1, sel_encodedData);
  sub_19A8C3E40();

  OUTLINED_FUNCTION_37();
}

void __swiftcall PAREngagedResult.toOnDeviceResult()(PAREngagedResult *__return_ptr retstr)
{
  void *v1;
  id v2;

  v2 = v1;
}

id PAREngagedResult.toServerSuggestion()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v1 = _CPResultTypeToPQCType((int)objc_msgSend(v0, sel_type));
  if (v1 == 2)
  {
    OUTLINED_FUNCTION_5_3(2, (SEL *)&selRef_title);
    OUTLINED_FUNCTION_5_3(v10, (SEL *)&selRef_searchString);
    objc_msgSend(v0, sel_freshnessScore);
    v11 = objc_allocWithZone(MEMORY[0x1E0D8C6B0]);
    v8 = OUTLINED_FUNCTION_3_2();
    v9 = 8;
    return sub_19A849EAC(v8, v4, v5, v6, v7, v9);
  }
  if (v1 == 1)
  {
    OUTLINED_FUNCTION_5_3(1, (SEL *)&selRef_title);
    OUTLINED_FUNCTION_5_3(v2, (SEL *)&selRef_searchString);
    objc_msgSend(v0, sel_freshnessScore);
    v3 = objc_allocWithZone(MEMORY[0x1E0D8C6B0]);
    v8 = OUTLINED_FUNCTION_3_2();
    v9 = 1;
    return sub_19A849EAC(v8, v4, v5, v6, v7, v9);
  }
  return 0;
}

id sub_19A849DD0(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v11[2];

  v3 = v2;
  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = (void *)sub_19A8C3E28();
  v11[0] = 0;
  v7 = objc_msgSend(v3, sel_initForReadingFromData_error_, v6, v11);

  if (v7)
  {
    v8 = v11[0];
  }
  else
  {
    v9 = v11[0];
    sub_19A8C3DA4();

    swift_willThrow();
  }
  sub_19A833360(a1, a2);
  return v7;
}

id sub_19A849EAC(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v10;
  void *v11;
  id v12;

  if (!a3)
  {
    v10 = 0;
    if (a5)
      goto LABEL_3;
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  v10 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  if (!a5)
    goto LABEL_5;
LABEL_3:
  v11 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
LABEL_6:
  v12 = objc_msgSend(v6, sel_initWithSuggestion_query_score_type_, v10, v11, a6, a1);

  return v12;
}

void sub_19A849F60(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6;

  v6 = (id)sub_19A8C4938();
  OUTLINED_FUNCTION_13();
  objc_msgSend(a3, *a4, v6);

}

void sub_19A849FB4(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(a1, *a2);
  if (v2)
  {
    v3 = v2;
    sub_19A8C4944();

  }
  OUTLINED_FUNCTION_37();
}

id sub_19A84A008(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  unsigned __int8 v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  void *v48;
  void *v49;
  void *v50;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  id v69;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE130);
  MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19A8C3EA0();
  v10 = *(_QWORD *)(v9 - 8);
  v15 = MEMORY[0x1E0C80A78](v9, v11, v12, v13, v14);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v18, v19, v20, v21);
  v23 = (char *)&v68 - v22;
  v24 = objc_msgSend(a1, sel_searchString);
  if (!v24)
  {
    sub_19A8C4BE4();
    sub_19A8444E0(0, (unint64_t *)&unk_1ECFFEAD8);
    v49 = (void *)sub_19A8C4C8C();
LABEL_13:
    sub_19A8C47B8();

    return 0;
  }
  v25 = v24;
  v26 = sub_19A8C4944();
  v28 = v27;

  v29 = objc_msgSend(a1, sel_title);
  if (!v29)
  {
    swift_bridgeObjectRelease();
    sub_19A8C4BE4();
    sub_19A8444E0(0, (unint64_t *)&unk_1ECFFEAD8);
    v49 = (void *)sub_19A8C4C8C();
    goto LABEL_13;
  }
  v30 = v29;
  v68 = v10;
  v69 = a1;
  v31 = sub_19A8C4944();
  v33 = v32;

  if (sub_19A8C498C() >= 64 || sub_19A8C498C() >= 128)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19A8C4BE4();
    sub_19A8444E0(0, (unint64_t *)&unk_1ECFFEAD8);
    v50 = (void *)sub_19A8C4C8C();
    sub_19A8C47B8();

    return 0;
  }
  sub_19A8C3E94();
  v34 = PAREngagedResult.init(_:searchString:type:engagemementTime:)(v31, v33, v26, v28, 1, (uint64_t)v23);
  v35 = v69;
  v36 = objc_msgSend(v69, sel_respondsToSelector_, sel_encodedNormalizedTopic);
  v37 = v34;
  if ((v36 & 1) != 0)
  {
    v38 = objc_msgSend(v35, sel_encodedNormalizedTopic);
    if (v38)
    {
      v39 = v38;
      v40 = sub_19A8C3E40();
      v42 = v41;

      v43 = sub_19A8C3E4C();
      sub_19A833360(v40, v42);
      if (v43 >= 4096)
      {

        sub_19A8C4BE4();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
        v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_19A8CE860;
        if ((objc_msgSend(v35, (SEL)&selRef_codable, sel_encodedNormalizedTopic) & 1) != 0
          && (v60 = objc_msgSend(v35, sel_encodedNormalizedTopic)) != 0)
        {
          v61 = v60;
          v62 = sub_19A8C3E40();
          v64 = v63;

          v65 = sub_19A8C3E4C();
          sub_19A833360(v62, v64);
        }
        else
        {
          v65 = 0;
        }
        v66 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v59 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v59 + 64) = v66;
        *(_QWORD *)(v59 + 32) = v65;
        sub_19A8444E0(0, (unint64_t *)&unk_1ECFFEAD8);
        v67 = (void *)sub_19A8C4C8C();
        sub_19A8C47B8();

        swift_bridgeObjectRelease();
        return 0;
      }
    }
  }
  v44 = objc_msgSend(v35, sel_engagementTime);
  if (v44)
  {
    v45 = v44;
    sub_19A8C3E88();

    v46 = v68;
    v47 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
    v47(v8, v23, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v9);
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) != 1)
    {
      v47(v17, v8, v9);
      v48 = (void *)sub_19A8C3E58();
      objc_msgSend(v37, sel_setEngagementTime_, v48);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v9);
      goto LABEL_19;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
  }
  sub_19A84ACF8((uint64_t)v8);
LABEL_19:
  v52 = v69;
  objc_msgSend(v37, sel_setType_, objc_msgSend(v69, sel_type));
  objc_msgSend(v52, sel_freshnessScore);
  objc_msgSend(v37, sel_setFreshnessScore_);
  objc_msgSend(v52, sel_score);
  objc_msgSend(v37, sel_setScore_);
  if ((objc_msgSend(v52, sel_respondsToSelector_, sel_encodedNormalizedTopic) & 1) != 0)
  {
    v53 = objc_msgSend(v52, sel_encodedNormalizedTopic);
    if (v53)
    {
      v54 = v53;
      v55 = sub_19A8C3E40();
      v57 = v56;

      sub_19A84449C(v55, v57);
      v58 = (void *)sub_19A8C3E28();
      sub_19A833360(v55, v57);
    }
    else
    {
      v58 = 0;
      v55 = 0;
      v57 = 0xF000000000000000;
    }
    objc_msgSend(v37, sel_setEncodedNormalizedTopic_, v58);

    sub_19A83334C(v55, v57);
  }
  else
  {

  }
  return v37;
}

void *sub_19A84A6BC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  unsigned __int8 v36;
  id v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  id v70;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE130);
  MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19A8C3EA0();
  v10 = *(_QWORD *)(v9 - 8);
  v15 = MEMORY[0x1E0C80A78](v9, v11, v12, v13, v14);
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v18, v19, v20, v21);
  v23 = (char *)&v69 - v22;
  v24 = objc_msgSend(a1, sel_searchString);
  if (!v24)
  {
    v48 = sub_19A8C4BE4();
    OUTLINED_FUNCTION_45(v48, (unint64_t *)&unk_1ECFFEAD8);
    v49 = (void *)OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_10_1();
LABEL_14:
    sub_19A8C47B8();

LABEL_15:
    swift_unknownObjectRelease();
    return 0;
  }
  v25 = v24;
  v26 = sub_19A8C4944();
  v28 = v27;

  v29 = objc_msgSend(a1, sel_title);
  if (!v29)
  {
    OUTLINED_FUNCTION_13();
    v50 = sub_19A8C4BE4();
    OUTLINED_FUNCTION_45(v50, (unint64_t *)&unk_1ECFFEAD8);
    v49 = (void *)OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_10_1();
    goto LABEL_14;
  }
  v30 = v29;
  v69 = v10;
  v70 = a1;
  v31 = sub_19A8C4944();
  v33 = v32;

  if (sub_19A8C498C() >= 64 || sub_19A8C498C() >= 128)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13();
    v51 = sub_19A8C4BE4();
    OUTLINED_FUNCTION_45(v51, (unint64_t *)&unk_1ECFFEAD8);
    v49 = (void *)OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_10_1();
    goto LABEL_14;
  }
  sub_19A8C3E94();
  v34 = PAREngagedResult.init(_:searchString:type:engagemementTime:)(v31, v33, v26, v28, 1, (uint64_t)v23);
  v35 = v70;
  v36 = objc_msgSend(v70, sel_respondsToSelector_, sel_encodedNormalizedTopic);
  v37 = v34;
  v38 = v37;
  if ((v36 & 1) != 0)
  {
    v37 = OUTLINED_FUNCTION_6_5((uint64_t)v37, sel_encodedNormalizedTopic);
    if (v37)
    {
      v39 = OUTLINED_FUNCTION_8_4();
      v41 = v40;

      v42 = sub_19A8C3E4C();
      v37 = (id)sub_19A833360(v39, v41);
      if (v42 >= 4096)
      {

        sub_19A8C4BE4();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
        v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_19A8CE860;
        v60 = (uint64_t)objc_msgSend(v35, sel_respondsToSelector_, sel_encodedNormalizedTopic);
        if ((v60 & 1) != 0
          && (v60 = (uint64_t)OUTLINED_FUNCTION_6_5(v60, sel_encodedNormalizedTopic)) != 0)
        {
          v61 = OUTLINED_FUNCTION_8_4();
          v63 = v62;

          v64 = sub_19A8C3E4C();
          v60 = sub_19A833360(v61, v63);
        }
        else
        {
          v64 = 0;
        }
        v67 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v59 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v59 + 64) = v67;
        *(_QWORD *)(v59 + 32) = v64;
        OUTLINED_FUNCTION_45(v60, (unint64_t *)&unk_1ECFFEAD8);
        v68 = (void *)OUTLINED_FUNCTION_2_4();
        sub_19A8C47B8();

        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
  }
  v43 = OUTLINED_FUNCTION_6_5((uint64_t)v37, sel_engagementTime);
  if (v43)
  {
    v44 = v43;
    sub_19A8C3E88();

    v45 = v69;
    v46 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
    v46(v8, v23, v9);
    OUTLINED_FUNCTION_7_4((uint64_t)v8, 0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) != 1)
    {
      v46(v17, v8, v9);
      v47 = (void *)sub_19A8C3E58();
      objc_msgSend(v38, sel_setEngagementTime_, v47);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v9);
      goto LABEL_19;
    }
  }
  else
  {
    OUTLINED_FUNCTION_7_4((uint64_t)v8, 1);
  }
  sub_19A84ACF8((uint64_t)v8);
LABEL_19:
  v53 = v70;
  objc_msgSend(v38, sel_setType_, objc_msgSend(v70, sel_type));
  objc_msgSend(v53, sel_freshnessScore);
  objc_msgSend(v38, sel_setFreshnessScore_);
  objc_msgSend(v53, sel_score);
  objc_msgSend(v38, sel_setScore_);
  if ((objc_msgSend(v53, sel_respondsToSelector_, sel_encodedNormalizedTopic) & 1) != 0)
  {
    if (objc_msgSend(v53, sel_encodedNormalizedTopic))
    {
      OUTLINED_FUNCTION_8_4();

      v54 = OUTLINED_FUNCTION_9_3();
      sub_19A84449C(v54, v55);
      OUTLINED_FUNCTION_9_3();
      v56 = (void *)sub_19A8C3E28();
      v57 = OUTLINED_FUNCTION_9_3();
      sub_19A833360(v57, v58);
    }
    else
    {
      v56 = 0;
    }
    objc_msgSend(v38, sel_setEncodedNormalizedTopic_, v56);

    swift_unknownObjectRelease();
    v65 = OUTLINED_FUNCTION_9_3();
    sub_19A83334C(v65, v66);
  }
  else
  {

    swift_unknownObjectRelease();
  }
  return v38;
}

uint64_t sub_19A84ACF8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE130);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void OUTLINED_FUNCTION_5_3(uint64_t a1, SEL *a2)
{
  void *v2;

  sub_19A849FB4(v2, a2);
}

uint64_t OUTLINED_FUNCTION_8_4()
{
  return sub_19A8C3E40();
}

void sub_19A84AD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B02A0);
  MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
  MEMORY[0x1E0C80A78](v11, v12, v11, v13, v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__swift_getEnumTagSinglePayload(a1, 1, v17) == 1)
  {
    sub_19A841E78(a1, &qword_1EE3B02A0);
    sub_19A86753C(a2, (uint64_t)v10);
    v18 = sub_19A8C3DF8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a2, v18);
    sub_19A841E78((uint64_t)v10, &qword_1EE3B02A0);
  }
  else
  {
    sub_19A851708(a1, (uint64_t)v16, (uint64_t *)&unk_1ECFFE6E8);
    sub_19A86DDB8((uint64_t)v16, a2);
    v19 = sub_19A8C3DF8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a2, v19);
  }
}

uint64_t sub_19A84AE8C()
{
  return 0;
}

uint64_t sub_19A84AE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return OUTLINED_FUNCTION_46_0();
}

uint64_t sub_19A84AEA8()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 32), *(_QWORD *)(*(_QWORD *)(v0 + 32) + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_19A84AF2C;
  return sub_19A8C4710();
}

uint64_t sub_19A84AF2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_12_3();
  v1 = *v0;
  OUTLINED_FUNCTION_57(&v3);
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_19A84AF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 48) = a4;
  *(_QWORD *)(v6 + 56) = v5;
  *(_QWORD *)(v6 + 40) = a3;
  *(double *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDED0);
  *(_QWORD *)(v6 + 64) = OUTLINED_FUNCTION_10_2();
  *(_QWORD *)(v6 + 72) = OUTLINED_FUNCTION_79();
  *(_QWORD *)(v6 + 80) = OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A84AFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v5 = v3;
  sub_19A84B194(v4, v3, v1);
  OUTLINED_FUNCTION_94(v1, 1, v2);
  if (v6)
  {
    sub_19A841E78(*(_QWORD *)(v0 + 64), &qword_1ECFFDED0);
    sub_19A84F1C8();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_3_3(v7, 3);
    OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_15_1();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_19A84F2D8(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 80));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v8;
    *v8 = v0;
    v8[1] = sub_19A84B0B4;
    return sub_19A84B4C8(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(double *)(v0 + 32));
  }
}

uint64_t sub_19A84B0B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_59(v4);
  v3[12] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[13] = v0;
    v3[14] = v2;
  }
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_4_3();
}

uint64_t sub_19A84B110()
{
  uint64_t v0;

  sub_19A84F31C(*(_QWORD *)(v0 + 80));
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_15_1();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104));
}

uint64_t sub_19A84B158()
{
  uint64_t v0;

  sub_19A84F31C(*(_QWORD *)(v0 + 80));
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_15_1();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_19A84B194(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;

  v76 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDED0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16);
  OUTLINED_FUNCTION_43_0();
  v75 = v17 - v18;
  v24 = MEMORY[0x1E0C80A78](v19, v20, v21, v22, v23);
  v26 = (char *)&v71 - v25;
  v31 = MEMORY[0x1E0C80A78](v24, v27, v28, v29, v30);
  v33 = (char *)&v71 - v32;
  v38 = MEMORY[0x1E0C80A78](v31, v34, v35, v36, v37);
  v40 = (char *)&v71 - v39;
  v45 = MEMORY[0x1E0C80A78](v38, v41, v42, v43, v44);
  v47 = (char *)&v71 - v46;
  MEMORY[0x1E0C80A78](v45, v48, v49, v50, v51);
  v53 = (char *)&v71 - v52;
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_35_0((uint64_t)v53, 1);
  OUTLINED_FUNCTION_35_0((uint64_t)v47, 1);
  objc_opt_self();
  v54 = swift_dynamicCastObjCClass();
  if (v54)
  {
    v55 = (void *)v54;
    v74 = a3;
    v71 = a1;
    v56 = objc_msgSend(v55, sel_darkUrlValue);
    v72 = a1;
    v73 = v11;
    if (v56)
    {
      v57 = v56;
      sub_19A8C3DD4();

      v58 = 0;
    }
    else
    {
      v58 = 1;
    }
    sub_19A841E78((uint64_t)v53, &qword_1ECFFDF70);
    v59 = 1;
    OUTLINED_FUNCTION_35_0((uint64_t)v40, v58);
    sub_19A851708((uint64_t)v40, (uint64_t)v53, &qword_1ECFFDF70);
    v60 = objc_msgSend(v55, sel_urlValue);
    if (v60)
    {
      v61 = v60;
      sub_19A8C3DD4();

      v59 = 0;
    }
    a3 = v74;
    a1 = v72;

    OUTLINED_FUNCTION_25_0((uint64_t)v47);
    OUTLINED_FUNCTION_35_0((uint64_t)v33, v59);
    OUTLINED_FUNCTION_107((uint64_t)v33, (uint64_t)v47);
    v11 = v73;
  }
  v62 = a1;
  v63 = sub_19A851244(a1, (SEL *)&selRef_identifier);
  v65 = v64;
  OUTLINED_FUNCTION_73((uint64_t)v47, (uint64_t)v26);
  v66 = v75;
  OUTLINED_FUNCTION_73((uint64_t)v53, v75);
  v67 = v76;
  if (v76)
    v68 = objc_msgSend(v76, sel_hasDarkAppearance);
  else
    v68 = 0;
  sub_19A84EF38(v63, v65, (uint64_t)v26, v66, v68, (uint64_t)v11);

  OUTLINED_FUNCTION_25_0((uint64_t)v47);
  OUTLINED_FUNCTION_25_0((uint64_t)v53);
  v69 = OUTLINED_FUNCTION_79();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v69))
  {
    sub_19A841E78((uint64_t)v11, &qword_1ECFFDED0);
    v70 = 1;
  }
  else
  {
    sub_19A84F2D8((uint64_t)v11, a3);
    v70 = 0;
  }
  __swift_storeEnumTagSinglePayload(a3, v70, 1, v69);
  OUTLINED_FUNCTION_0_2();
}

uint64_t sub_19A84B4C8(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v5 + 88) = a3;
  *(_QWORD *)(v5 + 96) = v4;
  *(_QWORD *)(v5 + 80) = a2;
  *(double *)(v5 + 72) = a4;
  *(_QWORD *)(v5 + 64) = a1;
  v6 = OUTLINED_FUNCTION_51();
  *(_QWORD *)(v5 + 104) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 112) = v7;
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v5 + 128) = OUTLINED_FUNCTION_16_1();
  v8 = OUTLINED_FUNCTION_52();
  *(_QWORD *)(v5 + 136) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 144) = v9;
  *(_QWORD *)(v5 + 152) = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v5 + 160) = OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDEF0);
  *(_QWORD *)(v5 + 168) = OUTLINED_FUNCTION_10_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  *(_QWORD *)(v5 + 176) = OUTLINED_FUNCTION_10_2();
  v10 = OUTLINED_FUNCTION_28_0();
  *(_QWORD *)(v5 + 184) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v5 + 192) = v11;
  *(_QWORD *)(v5 + 200) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v5 + 208) = swift_task_alloc();
  *(_QWORD *)(v5 + 216) = swift_task_alloc();
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A84B5A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t (*v48)(void);
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v2 = v0[22];
  v1 = v0[23];
  sub_19A84BE50(v2);
  OUTLINED_FUNCTION_94(v2, 1, v1);
  if (v3)
  {
    v4 = v0[8];
    sub_19A841E78(v0[22], &qword_1ECFFDF70);
    v5 = *(_QWORD *)(v4 + 8);
    if (!v5)
      goto LABEL_13;
    v26 = 0;
  }
  else
  {
    v6 = v0[26];
    v7 = v0[27];
    v52 = v6;
    v59 = v0[25];
    v70 = v0[24];
    v8 = v0[23];
    v10 = v0[20];
    v9 = v0[21];
    v66 = v9;
    v11 = v0[17];
    v12 = v0[16];
    v54 = v0[18];
    v55 = v12;
    v63 = v0[19];
    v13 = v0[13];
    v53 = v13;
    v56 = v0[14];
    v57 = v0[11];
    v51 = v0[10];
    v14 = v0[9];
    v68 = v0[8];
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32);
    v61 = v7;
    v64(v7, v0[22], v8);
    v15 = OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_14_2(v9, v16, v17, v15);
    v18 = OUTLINED_FUNCTION_3_0();
    swift_weakInit();
    v19 = v6;
    v20 = v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v19, v7, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v10, v51, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v12, v57, v13);
    v21 = (*(unsigned __int8 *)(v70 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    v22 = (v59 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = (*(unsigned __int8 *)(v54 + 80) + v22 + 8) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    v24 = (v63 + *(unsigned __int8 *)(v56 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    v25 = (char *)swift_allocObject();
    *((_QWORD *)v25 + 2) = 0;
    *((_QWORD *)v25 + 3) = 0;
    *((_QWORD *)v25 + 4) = v18;
    v64((uint64_t)&v25[v21], v52, v20);
    *(_QWORD *)&v25[v22] = v14;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(&v25[v23], v10, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(&v25[v24], v55, v53);
    v26 = sub_19A84CE80(v66, (uint64_t)&unk_1EE3B0860, (uint64_t)v25);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v61, v20);
    v5 = *(_QWORD *)(v68 + 8);
    if (!v5)
    {
      if (v26)
      {
        v45 = 0;
        v42 = v26;
        goto LABEL_15;
      }
LABEL_13:
      sub_19A84F1C8();
      v46 = (void *)OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_3_3(v47, 3);
      sub_19A84D4F0(v46, v0[8]);
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_18_2();
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_9_4();
      OUTLINED_FUNCTION_11_2();
      OUTLINED_FUNCTION_34_0();
      OUTLINED_FUNCTION_48();
      v48 = (uint64_t (*)(void))OUTLINED_FUNCTION_104();
      return v48();
    }
  }
  v0[28] = v26;
  v28 = v0[20];
  v27 = v0[21];
  v69 = v27;
  v71 = v26;
  v29 = v0[18];
  v30 = v0[16];
  v58 = v0[17];
  v60 = v28;
  v31 = v0[14];
  v65 = v0[19];
  v32 = v0[10];
  v62 = v0[11];
  v33 = v0[9];
  v67 = *(_QWORD *)v0[8];
  v34 = OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_2(v27, v35, v36, v34);
  v37 = OUTLINED_FUNCTION_3_0();
  swift_weakInit();
  OUTLINED_FUNCTION_60(v28, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16));
  OUTLINED_FUNCTION_60(v30, v62, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
  v38 = (*(unsigned __int8 *)(v29 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v39 = (v65 + *(unsigned __int8 *)(v31 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v40 = (char *)swift_allocObject();
  *((_QWORD *)v40 + 2) = 0;
  *((_QWORD *)v40 + 3) = 0;
  *((_QWORD *)v40 + 4) = v37;
  *((_QWORD *)v40 + 5) = v67;
  *((_QWORD *)v40 + 6) = v5;
  *((_QWORD *)v40 + 7) = v33;
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
  v42 = v71;
  v41(&v40[v38], v60, v58);
  OUTLINED_FUNCTION_60((uint64_t)&v40[v39], v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 32));
  swift_bridgeObjectRetain();
  v43 = sub_19A84CE80(v69, (uint64_t)&unk_1EE3B0850, (uint64_t)v40);
  v26 = v43;
  v0[29] = v43;
  if (!v71)
  {
    if (v43)
    {
      v42 = 0;
      v45 = v43;
LABEL_15:
      v0[36] = v45;
      v0[37] = v26;
      v0[35] = v42;
      OUTLINED_FUNCTION_39_0();
      swift_retain();
      v50 = (_QWORD *)swift_task_alloc();
      v0[38] = (uint64_t)v50;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE150);
      *v50 = v0;
      v50[1] = sub_19A84BC90;
      return sub_19A8C4AD0();
    }
    goto LABEL_13;
  }
  if (!v43)
  {
    v45 = 0;
    v26 = v71;
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_39_0();
  swift_retain();
  v44 = (_QWORD *)swift_task_alloc();
  v0[30] = (uint64_t)v44;
  v0[31] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE150);
  *v44 = v0;
  v44[1] = sub_19A84BAC4;
  return sub_19A8C4AD0();
}

uint64_t sub_19A84BAC4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_58();
  *(_QWORD *)(v1 + 256) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A84BB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_11_2();
  v0 = OUTLINED_FUNCTION_45_0();
  return OUTLINED_FUNCTION_7_5(v0, v1, v2);
}

uint64_t sub_19A84BB60()
{
  uint64_t *v0;
  void *v1;
  _QWORD *v2;

  v1 = (void *)v0[32];
  sub_19A84D4F0(v1, v0[8]);

  v2 = (_QWORD *)swift_task_alloc();
  v0[33] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_19A84BBF4;
  return sub_19A8C4AD0();
}

uint64_t sub_19A84BBF4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_58();
  *(_QWORD *)(v1 + 272) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A84BC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_11_2();
  v0 = OUTLINED_FUNCTION_45_0();
  return OUTLINED_FUNCTION_7_5(v0, v1, v2);
}

uint64_t sub_19A84BC90()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_58();
  *(_QWORD *)(v1 + 312) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A84BCDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_84();
  swift_release();
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_11_2();
  v0 = OUTLINED_FUNCTION_45_0();
  return OUTLINED_FUNCTION_7_5(v0, v1, v2);
}

uint64_t sub_19A84BD30()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_85();
  swift_release();
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_88();
  swift_release();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_48();
  swift_task_dealloc();
  OUTLINED_FUNCTION_106();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_104();
  return OUTLINED_FUNCTION_21_1(v0);
}

uint64_t sub_19A84BD98()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_85();
  swift_release();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_74();
  swift_release();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_48();
  swift_task_dealloc();
  OUTLINED_FUNCTION_106();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_104();
  return OUTLINED_FUNCTION_21_1(v0);
}

uint64_t sub_19A84BDFC()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_102();
  swift_release();
  return v0;
}

uint64_t sub_19A84BE30()
{
  sub_19A84BDFC();
  return swift_deallocClassInstance();
}

void sub_19A84BE50(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v1;
  v4 = (int *)OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_43_0();
  v12 = v10 - v11;
  MEMORY[0x1E0C80A78](v13, v14, v15, v16, v17);
  v19 = (char *)&v41 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v20, v21, v22, v23, v24);
  OUTLINED_FUNCTION_43_0();
  v27 = v25 - v26;
  MEMORY[0x1E0C80A78](v28, v29, v30, v31, v32);
  v34 = (char *)&v41 - v33;
  if (*(_BYTE *)(v2 + v4[7]) != 1)
  {
    sub_19A85163C(v2 + v4[5], v27, &qword_1ECFFDF70);
    sub_19A851668(v2, v12);
    v38 = OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_94(v27, 1, v38);
    if (!v36)
    {
      sub_19A84F31C(v12);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(a1, v27, v38);
      v39 = a1;
      v40 = v38;
      goto LABEL_9;
    }
    OUTLINED_FUNCTION_73(v12 + v4[6], a1);
    sub_19A84F31C(v12);
    v37 = v27;
LABEL_8:
    sub_19A841E78(v37, &qword_1ECFFDF70);
    return;
  }
  sub_19A85163C(v2 + v4[6], (uint64_t)&v41 - v33, &qword_1ECFFDF70);
  sub_19A851668(v2, (uint64_t)v19);
  v35 = OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_94((uint64_t)v34, 1, v35);
  if (v36)
  {
    OUTLINED_FUNCTION_73((uint64_t)&v19[v4[5]], a1);
    sub_19A84F31C((uint64_t)v19);
    v37 = (uint64_t)v34;
    goto LABEL_8;
  }
  sub_19A84F31C((uint64_t)v19);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(a1, v34, v35);
  v39 = a1;
  v40 = v35;
LABEL_9:
  __swift_storeEnumTagSinglePayload(v39, 0, 1, v40);
}

uint64_t sub_19A84C060(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(double *)(v8 + 64) = a2;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_19A84C084()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_23_0();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 88) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v2;
    *v2 = v0;
    v2[1] = sub_19A84C134;
    return sub_19A84C1F8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(double *)(v0 + 64));
  }
  else
  {
    sub_19A84F1C8();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_3_3(v4, 4);
    return OUTLINED_FUNCTION_2_5(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_19A84C134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_59(v4);
  v3[13] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[14] = v0;
    v3[15] = v2;
  }
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_4_3();
}

uint64_t sub_19A84C190()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(void);

  v1 = v0[14];
  v2 = v0[15];
  v3 = (_QWORD *)v0[5];
  swift_release();
  *v3 = v2;
  v3[1] = v1;
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_56();
  return OUTLINED_FUNCTION_2_5(v4);
}

uint64_t sub_19A84C1CC()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_19A84C1F8(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v5 + 112) = a3;
  *(_QWORD *)(v5 + 120) = v4;
  *(_QWORD *)(v5 + 104) = a2;
  *(double *)(v5 + 96) = a4;
  *(_QWORD *)(v5 + 88) = a1;
  v6 = sub_19A8C483C();
  *(_QWORD *)(v5 + 128) = v6;
  *(_QWORD *)(v5 + 136) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 144) = swift_task_alloc();
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  v7 = sub_19A8C4740();
  *(_QWORD *)(v5 + 160) = v7;
  *(_QWORD *)(v5 + 168) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 176) = swift_task_alloc();
  *(_QWORD *)(v5 + 184) = swift_task_alloc();
  v8 = sub_19A8C480C();
  *(_QWORD *)(v5 + 192) = v8;
  *(_QWORD *)(v5 + 200) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 208) = swift_task_alloc();
  *(_QWORD *)(v5 + 216) = swift_task_alloc();
  *(_QWORD *)(v5 + 224) = swift_task_alloc();
  v9 = sub_19A8C3DF8();
  *(_QWORD *)(v5 + 232) = v9;
  *(_QWORD *)(v5 + 240) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 248) = swift_task_alloc();
  *(_QWORD *)(v5 + 256) = swift_task_alloc();
  *(_QWORD *)(v5 + 264) = swift_task_alloc();
  *(_QWORD *)(v5 + 272) = swift_task_alloc();
  v10 = sub_19A8C3D44();
  *(_QWORD *)(v5 + 280) = v10;
  *(_QWORD *)(v5 + 288) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v5 + 296) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19A84C368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  NSObject *v19;
  os_signpost_type_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  os_signpost_id_t v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD, _QWORD);
  _QWORD *v30;
  uint64_t v31[2];

  OUTLINED_FUNCTION_105();
  if (v0)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_9_4();
    OUTLINED_FUNCTION_11_2();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_109();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    sub_19A84DA84();
    v3 = *(_QWORD *)(v1 + 272);
    v5 = *(_QWORD *)(v1 + 232);
    v4 = *(_QWORD *)(v1 + 240);
    v6 = *(_QWORD *)(v1 + 88);
    *(_QWORD *)(v1 + 304) = os_transaction_create();
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    *(_QWORD *)(v1 + 312) = v7;
    v7(v3, v6, v5);
    sub_19A8C3D38();
    sub_19A8C3D20();
    if (qword_1ECFFDEA0 != -1)
      swift_once();
    v8 = *(_QWORD *)(v1 + 264);
    v9 = *(_QWORD *)(v1 + 232);
    v10 = *(_QWORD *)(v1 + 88);
    v11 = sub_19A8C489C();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ECFFDEA8);
    v7(v8, v10, v9);
    v12 = sub_19A8C4878();
    v13 = sub_19A8C4BFC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = *(_QWORD *)(v1 + 96);
      v15 = OUTLINED_FUNCTION_2();
      v31[0] = OUTLINED_FUNCTION_2();
      *(_DWORD *)v15 = 136315394;
      sub_19A851210(&qword_1ECFFDF80, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v16 = OUTLINED_FUNCTION_91();
      *(_QWORD *)(v1 + 72) = sub_19A844794(v16, v17, v31);
      sub_19A8C4CC8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_64();
      *(_WORD *)(v15 + 12) = 2048;
      *(_QWORD *)(v1 + 80) = v14;
      sub_19A8C4CC8();
      _os_log_impl(&dword_19A825000, v12, v13, "fetching image %s with timeout %f", (uint8_t *)v15, 0x16u);
      OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_0_0();
    }
    v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 240) + 8);
    OUTLINED_FUNCTION_64();

    *(_QWORD *)(v1 + 320) = v18;
    v7(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 232));
    v19 = sub_19A8C4824();
    v20 = sub_19A8C4C44();
    v21 = sub_19A8C4C80();
    v22 = *(_QWORD *)(v1 + 256);
    v23 = *(_QWORD *)(v1 + 232);
    if ((v21 & 1) != 0)
    {
      (*(void (**)(void))(*(_QWORD *)(v1 + 200) + 16))();
      v24 = (uint8_t *)OUTLINED_FUNCTION_2();
      v31[0] = OUTLINED_FUNCTION_2();
      *(_DWORD *)v24 = 136446210;
      v25 = sub_19A8C3DBC();
      *(_QWORD *)(v1 + 64) = sub_19A844794(v25, v26, v31);
      sub_19A8C4CC8();
      OUTLINED_FUNCTION_5_0();
      v18(v22, v23);
      v27 = sub_19A8C47F4();
      OUTLINED_FUNCTION_108(&dword_19A825000, v19, v20, v27, "image_fetch", "url=%{public}s", v24);
      OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_0_0();
    }
    v28 = *(_QWORD *)(v1 + 200);

    OUTLINED_FUNCTION_64();
    v29 = *(void (**)(_QWORD, _QWORD, _QWORD))(v28 + 16);
    *(_QWORD *)(v1 + 328) = v29;
    v29(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 192));
    sub_19A8C4860();
    swift_allocObject();
    *(_QWORD *)(v1 + 336) = sub_19A8C4854();
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 344) = v30;
    *v30 = v1;
    v30[1] = sub_19A84C82C;
    return sub_19A84DEEC(*(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 88));
  }
}

uint64_t sub_19A84C82C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_58();
  *(_QWORD *)(v1 + 352) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A84C878()
{
  uint64_t v0;
  uint64_t v1;
  os_signpost_type_t v2;
  uint64_t *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, NSObject *);
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  os_signpost_id_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(uint64_t, uint64_t);
  const char *v32;
  uint64_t v33;
  os_signpost_type_t v34;
  uint64_t v35;

  v1 = v0;
  v4 = *(_QWORD *)(v0 + 216);
  v3 = (uint64_t *)(v0 + 216);
  v2 = v4;
  v5 = (void (*)(uint64_t, uint64_t, NSObject *))v3[12];
  v6 = v3[4];
  v7 = v3[2];
  v8 = *(v3 - 16);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(v3 - 6) + 32))(*(v3 - 4), *(v3 - 5), *(v3 - 7));
  v5(v6, v8, v7);
  sub_19A8C4824();
  OUTLINED_FUNCTION_72();
  sub_19A8C4C38();
  if ((OUTLINED_FUNCTION_99() & 1) != 0)
  {
    v34 = v2;
    v9 = *(_QWORD *)(v1 + 152);
    v11 = *(_QWORD *)(v1 + 128);
    v10 = *(_QWORD *)(v1 + 136);
    OUTLINED_FUNCTION_39_0();
    sub_19A8C486C();
    OUTLINED_FUNCTION_66();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v9, v11) == *MEMORY[0x1E0DF2190])
    {
      v12 = 0;
      v13 = 0;
      v14 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_63(*(_QWORD *)(v1 + 136));
      v14 = "url=%{public}s";
      v13 = 2;
      v12 = 1;
    }
    v32 = v14;
    v31 = *(void (**)(uint64_t, uint64_t))(v1 + 320);
    v16 = *(_QWORD *)(v1 + 248);
    v17 = *(_QWORD *)(v1 + 232);
    (*(void (**)(_QWORD))(v1 + 328))(*(_QWORD *)(v1 + 224));
    v18 = OUTLINED_FUNCTION_2();
    v35 = OUTLINED_FUNCTION_2();
    *(_BYTE *)v18 = v13;
    *(_BYTE *)(v18 + 1) = v12;
    *(_WORD *)(v18 + 2) = 2082;
    v19 = sub_19A8C3DBC();
    *(_QWORD *)(v1 + 56) = sub_19A844794(v19, v20, &v35);
    sub_19A8C4CC8();
    swift_bridgeObjectRelease();
    v31(v16, v17);
    v21 = sub_19A8C47F4();
    OUTLINED_FUNCTION_108(&dword_19A825000, v7, v34, v21, "image_fetch", v32, (uint8_t *)v18);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0_0();
  }
  v15 = *(_QWORD *)(v1 + 200);
  (*(void (**)(_QWORD, _QWORD))(v1 + 320))(*(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 232));

  v22 = *v3;
  v23 = *(_QWORD *)(v1 + 296);
  v25 = *(_QWORD *)(v1 + 280);
  v24 = *(_QWORD *)(v1 + 288);
  v26 = *(_QWORD *)(v1 + 184);
  v27 = *(_QWORD *)(v1 + 168);
  (*(void (**)(uint64_t, _QWORD))(v15 + 8))(v22, *(_QWORD *)(v1 + 192));
  v28 = sub_19A8C4728();
  v33 = v29;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  OUTLINED_FUNCTION_62(v26, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_106();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_109();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v28, v33);
}

uint64_t sub_19A84CBB0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  NSObject *v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  os_signpost_id_t v16;
  const char *v18;
  os_signpost_type_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(NSObject **)(v0 + 352);
  v3 = v2;
  v4 = v2;
  sub_19A8C4824();
  OUTLINED_FUNCTION_72();
  sub_19A8C4C38();
  if ((OUTLINED_FUNCTION_99() & 1) != 0)
  {
    v19 = v1;
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 128);
    OUTLINED_FUNCTION_68();
    sub_19A8C486C();
    OUTLINED_FUNCTION_88();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v6, v7) == *MEMORY[0x1E0DF2190])
    {
      v8 = 0;
      v9 = 0;
      v10 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_63(*(_QWORD *)(v0 + 136));
      v10 = "error=%{public}s";
      v9 = 2;
      v8 = 1;
    }
    v18 = v10;
    v12 = *(void **)(v0 + 352);
    (*(void (**)(_QWORD))(v0 + 328))(*(_QWORD *)(v0 + 224));
    v13 = OUTLINED_FUNCTION_2();
    v20 = OUTLINED_FUNCTION_2();
    *(_BYTE *)v13 = v9;
    *(_BYTE *)(v13 + 1) = v8;
    *(_WORD *)(v13 + 2) = 2082;
    swift_getErrorValue();
    v14 = sub_19A8C4E6C();
    *(_QWORD *)(v0 + 48) = sub_19A844794(v14, v15, &v20);
    sub_19A8C4CC8();
    OUTLINED_FUNCTION_10();

    v16 = sub_19A8C47F4();
    OUTLINED_FUNCTION_108(&dword_19A825000, v2, v19, v16, "image_fetch", v18, (uint8_t *)v13);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0_0();
  }
  v11 = *(_QWORD *)(v0 + 200);
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_65_0();

  (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
  swift_willThrow();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_86();
  swift_task_dealloc();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_17_1();
  swift_task_dealloc();
  OUTLINED_FUNCTION_109();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19A84CE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = sub_19A8C4AC4();
  if (__swift_getEnumTagSinglePayload(a1, 1, v5) == 1)
  {
    sub_19A841E78(a1, &qword_1ECFFDEF0);
  }
  else
  {
    sub_19A8C4AB8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19A8C4A88();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_19A84CFA4(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 80) = a8;
  *(_QWORD *)(v9 + 88) = a9;
  *(double *)(v9 + 72) = a2;
  *(_QWORD *)(v9 + 56) = a6;
  *(_QWORD *)(v9 + 64) = a7;
  *(_QWORD *)(v9 + 40) = a1;
  *(_QWORD *)(v9 + 48) = a5;
  v10 = sub_19A8C3DF8();
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19A84D010()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_23_0();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 120) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(Strong + 40);
    OUTLINED_FUNCTION_39_0();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v2;
    *v2 = v0;
    v2[1] = sub_19A84D0CC;
    return sub_19A84D290(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
  else
  {
    sub_19A84F1C8();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_3_3(v4, 4);
    OUTLINED_FUNCTION_110();
    return OUTLINED_FUNCTION_2_5(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_19A84D0CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_59(v3);
  *(_QWORD *)(v0 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_8_5();
    return OUTLINED_FUNCTION_4_3();
  }
  else
  {
    swift_release();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v5;
    *v5 = v2;
    v5[1] = sub_19A84D158;
    return sub_19A84C1F8(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(double *)(v0 + 72));
  }
}

uint64_t sub_19A84D158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_59(v4);
  v3[20] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[21] = v0;
    v3[22] = v2;
  }
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_4_3();
}

uint64_t sub_19A84D1B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(void);

  v2 = v0[21];
  v1 = v0[22];
  v3 = v0[14];
  v4 = v0[13];
  v5 = (_QWORD *)v0[5];
  swift_release();
  OUTLINED_FUNCTION_62(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  *v5 = v1;
  v5[1] = v2;
  OUTLINED_FUNCTION_17_1();
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_56();
  return v6();
}

uint64_t sub_19A84D214()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_110();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_19A84D248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 104);
  swift_release();
  OUTLINED_FUNCTION_62(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_110();
  return OUTLINED_FUNCTION_2_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_19A84D290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  v4[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19A84D2F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_55();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_19A84D338;
  return OUTLINED_FUNCTION_1_3(v3);
}

uint64_t sub_19A84D338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_93();
  v4 = *v3;
  OUTLINED_FUNCTION_57(v5);
  if (v1)
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_2_5(*(uint64_t (**)(void))(v4 + 8));
  }
  else
  {
    *(_QWORD *)(v2 + 64) = v0;
    OUTLINED_FUNCTION_8_5();
    return swift_task_switch();
  }
}

uint64_t sub_19A84D3A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v1 = v0[8];
  v2 = v0[3];
  v3 = v0[4];
  swift_bridgeObjectRetain();
  v4 = sub_19A86B010(v2, v3, v1);
  v6 = v5;
  OUTLINED_FUNCTION_10();
  swift_bridgeObjectRelease();
  if (!v6)
  {
    v12 = v0[3];
    v11 = v0[4];
    sub_19A84F1C8();
    OUTLINED_FUNCTION_6_1();
    *(_QWORD *)v13 = v12;
    *(_QWORD *)(v13 + 8) = v11;
    *(_QWORD *)(v13 + 16) = 0;
    *(_BYTE *)(v13 + 24) = 1;
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v7 = v0[6];
  sub_19A8C3DEC();
  v8 = OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_94(v7, 1, v8);
  if (v9)
  {
    sub_19A841E78(v0[6], &qword_1ECFFDF70);
    sub_19A84F1C8();
    OUTLINED_FUNCTION_6_1();
    *(_QWORD *)v10 = v4;
    *(_QWORD *)(v10 + 8) = v6;
    *(_QWORD *)(v10 + 16) = 0;
    *(_BYTE *)(v10 + 24) = 2;
LABEL_6:
    swift_willThrow();
    swift_task_dealloc();
    v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  v14 = v0[6];
  v15 = v0[2];
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v15, v14, v8);
  OUTLINED_FUNCTION_15_1();
  v16 = (uint64_t (*)(void))OUTLINED_FUNCTION_56();
  return v16();
}

void sub_19A84D4F0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int EnumTagSinglePayload;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void *v71;
  id v72;
  uint64_t v73;
  char v74;

  v68 = a2;
  v67 = type metadata accessor for PARImageLoader.ImageLocation();
  MEMORY[0x1E0C80A78](v67, v4, v5, v6, v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  v15 = MEMORY[0x1E0C80A78](v10, v11, v12, v13, v14);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v15, v18, v19, v20, v21);
  v24 = (char *)&v61 - v23;
  v29 = MEMORY[0x1E0C80A78](v22, v25, v26, v27, v28);
  v31 = (char *)&v61 - v30;
  MEMORY[0x1E0C80A78](v29, v32, v33, v34, v35);
  v37 = (char *)&v61 - v36;
  v69 = (uint64_t)a1;
  v38 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE150);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v39 = v73;
    if (v74 == 4)
    {
      v66 = v72;
      a1 = v71;
      goto LABEL_6;
    }
    sub_19A8516AC(v71, v72, v73, v74);
  }
  v40 = a1;
  v66 = 0;
  v39 = 0;
LABEL_6:
  v41 = (*(uint64_t (**)(void))(v2 + 16))();
  if (!v41)
  {
    swift_bridgeObjectRelease();

    return;
  }
  v42 = v41;
  if ((sub_19A84EDFC(a1) & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    return;
  }
  v63 = v17;
  v71 = 0;
  v72 = (id)0xE000000000000000;
  sub_19A8C4D40();
  swift_bridgeObjectRelease();
  v71 = (void *)0xD000000000000012;
  v72 = (id)0x800000019A8D0930;
  v43 = v68;
  v64 = v42;
  v65 = v39;
  swift_bridgeObjectRetain();
  sub_19A8C4998();
  swift_bridgeObjectRelease();
  v44 = v67;
  v62 = v43 + *(int *)(v67 + 20);
  sub_19A85163C(v62, (uint64_t)v37, &qword_1ECFFDF70);
  v45 = sub_19A8C3DF8();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v45);
  sub_19A841E78((uint64_t)v37, &qword_1ECFFDF70);
  sub_19A851668(v43, (uint64_t)v9);
  if (EnumTagSinglePayload != 1)
  {
    sub_19A84F31C((uint64_t)v9);
    v48 = v64;
    v49 = v44;
    goto LABEL_15;
  }
  sub_19A85163C((uint64_t)&v9[*(int *)(v44 + 24)], (uint64_t)v31, &qword_1ECFFDF70);
  sub_19A84F31C((uint64_t)v9);
  v47 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v45);
  sub_19A841E78((uint64_t)v31, &qword_1ECFFDF70);
  v48 = v64;
  v49 = v44;
  if (v47 != 1)
  {
LABEL_15:
    v69 = 32;
    v70 = 0xE100000000000000;
    sub_19A85163C(v62, (uint64_t)v24, &qword_1ECFFDF70);
    v50 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v45);
    v51 = (uint64_t)v63;
    if (v50 == 1)
    {
      sub_19A841E78((uint64_t)v24, &qword_1ECFFDF70);
    }
    else
    {
      sub_19A8C3DBC();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v24, v45);
    }
    sub_19A8C4998();
    swift_bridgeObjectRelease();
    sub_19A8C4998();
    sub_19A85163C(v68 + *(int *)(v49 + 24), v51, &qword_1ECFFDF70);
    if (__swift_getEnumTagSinglePayload(v51, 1, v45) == 1)
    {
      sub_19A841E78(v51, &qword_1ECFFDF70);
    }
    else
    {
      sub_19A8C3DBC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v51, v45);
    }
    sub_19A8C4998();
    swift_bridgeObjectRelease();
    sub_19A8C4998();
    swift_bridgeObjectRelease();
  }
  v52 = objc_allocWithZone((Class)_CPErrorFeedback);
  v53 = a1;
  v54 = sub_19A8511B0(a1);
  v55 = objc_msgSend(v54, sel_error);
  if (v55)
  {
    v56 = v55;
    sub_19A849F60((uint64_t)v71, (uint64_t)v72, v55, (SEL *)&selRef_setReason_);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (v65)
  {
    v57 = (void *)sub_19A8C4938();
    swift_bridgeObjectRelease();
  }
  else
  {
    v57 = 0;
  }
  objc_msgSend(v54, sel_setRelatedStartNetworkSearchFeedbackId_, v57);

  v58 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v59 = objc_msgSend(v58, sel_configuration);

  v60 = v54;
  sub_19A85BEF0(v59, v60, 0, v48);

  swift_unknownObjectRelease();
}

uint64_t sub_19A84DA84()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;

  v0 = sub_19A8C3DE0();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    v4 = v0 == 1886680168 && v1 == 0xE400000000000000;
    if (v4 || (sub_19A8C4E30() & 1) != 0)
      return swift_bridgeObjectRelease();
    v5 = v2 == 0x7370747468 && v3 == 0xE500000000000000;
    if (v5 || (sub_19A8C4E30() & 1) != 0)
      return swift_bridgeObjectRelease();
    if (qword_1ECFFDEA0 != -1)
      swift_once();
    v18 = sub_19A8C489C();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ECFFDEA8);
    swift_bridgeObjectRetain_n();
    v19 = sub_19A8C4878();
    v20 = sub_19A8C4BE4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v26 = v22;
      *(_DWORD *)v21 = 136315138;
      swift_bridgeObjectRetain();
      sub_19A844794(v2, v3, &v26);
      sub_19A8C4CC8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_19A825000, v19, v20, "Unsupported URL scheme: %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19AECCDEC](v22, -1, -1);
      MEMORY[0x19AECCDEC](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (v2 == 1701603686 && v3 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      v25 = 5;
    }
    else
    {
      v24 = sub_19A8C4E30();
      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        v25 = 5;
      else
        v25 = 0;
    }
    sub_19A84F1C8();
    swift_allocError();
    *(_QWORD *)(v16 + 8) = 0;
    *(_QWORD *)(v16 + 16) = 0;
    *(_QWORD *)v16 = v25;
    v17 = 5;
  }
  else
  {
    v7 = sub_19A8C3DBC();
    v9 = v8;
    v10 = qword_1ECFFDEA0;
    swift_bridgeObjectRetain();
    if (v10 != -1)
      swift_once();
    v11 = sub_19A8C489C();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ECFFDEA8);
    swift_bridgeObjectRetain();
    v12 = sub_19A8C4878();
    v13 = sub_19A8C4BE4();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v26 = v15;
      *(_DWORD *)v14 = 136315138;
      swift_bridgeObjectRetain();
      sub_19A844794(v7, v9, &v26);
      sub_19A8C4CC8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_19A825000, v12, v13, "invalid SFImage url %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19AECCDEC](v15, -1, -1);
      MEMORY[0x19AECCDEC](v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_19A84F1C8();
    swift_allocError();
    *(_QWORD *)v16 = v7;
    *(_QWORD *)(v16 + 8) = v9;
    *(_QWORD *)(v16 + 16) = 0;
    v17 = 2;
  }
  *(_BYTE *)(v16 + 24) = v17;
  return swift_willThrow();
}

uint64_t sub_19A84DEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v5 = sub_19A8C3DF8();
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v6 = sub_19A8C4740();
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19A84DF78()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD, _QWORD, _QWORD);

  v0[18] = *(_QWORD *)(v0[11] + 24);
  v0[19] = sub_19A84E4B0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_55();
  v0[20] = v1;
  *v1 = v0;
  v1[1] = sub_19A84E018;
  return v3(v0[17], v0[10], v0[9]);
}

uint64_t sub_19A84E018()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_58();
  *(_QWORD *)(v1 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A84E064()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v20;
  void *v21;
  uint64_t v22;

  OUTLINED_FUNCTION_85();
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[16] + 32))(v0[8], v0[17], v0[15]);
  v1 = sub_19A8C4734();
  if (!v1)
    goto LABEL_6;
  v2 = (void *)v1;
  objc_opt_self();
  v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3)
  {

LABEL_6:
    v13 = (void *)v0[19];
    v14 = v0[15];
    v15 = v0[16];
    v16 = v0[8];
    sub_19A84F1C8();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_3_3(v17, 2);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
    goto LABEL_7;
  }
  v4 = v3;
  v22 = v0[21];
  v5 = (void *)v0[19];
  v6 = objc_msgSend(v3, sel_statusCode);
  v7 = sub_19A8C4728();
  v9 = v8;
  v10 = sub_19A8C3E4C();
  sub_19A833360(v7, v9);
  v11 = sub_19A8C471C();
  sub_19A84E660((uint64_t)v6, v10, v11, v5);
  if (!v22)
  {
    v20 = v0[10];
    OUTLINED_FUNCTION_5_0();
    sub_19A84E7BC(v4, v20);
    v21 = (void *)v0[19];

    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_27_0();
    v18 = (uint64_t (*)(void))OUTLINED_FUNCTION_56();
    return v18();
  }
  v12 = (void *)v0[19];
  OUTLINED_FUNCTION_63(v0[16]);
  OUTLINED_FUNCTION_5_0();

LABEL_7:
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_17_1();
  v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_19A84E220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[2];

  if (qword_1ECFFDEA0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = sub_19A8C489C();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ECFFDEA8);
  OUTLINED_FUNCTION_98(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_83();
  v4 = sub_19A8C4878();
  v5 = sub_19A8C4BE4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = OUTLINED_FUNCTION_2();
    v18[0] = OUTLINED_FUNCTION_2();
    *(_DWORD *)v6 = 136315394;
    sub_19A851210(&qword_1ECFFDF80, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v7 = OUTLINED_FUNCTION_91();
    *(_QWORD *)(v0 + 40) = sub_19A844794(v7, v8, v18);
    sub_19A8C4CC8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_81();
    *(_WORD *)(v6 + 12) = 2080;
    swift_getErrorValue();
    v9 = sub_19A8C4E6C();
    *(_QWORD *)(v0 + 56) = sub_19A844794(v9, v10, v18);
    sub_19A8C4CC8();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_69();
    _os_log_impl(&dword_19A825000, v4, v5, "error fetching image %s: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_0();
  }
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_69();

  v11 = *(_QWORD *)(v0 + 168);
  v12 = *(void **)(v0 + 152);
  v13 = sub_19A851244(v12, (SEL *)&selRef_uuid);
  v15 = v14;
  sub_19A84F1C8();
  OUTLINED_FUNCTION_6_1();
  *(_QWORD *)v16 = v11;
  *(_QWORD *)(v16 + 8) = v13;
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = 4;
  OUTLINED_FUNCTION_83();
  swift_willThrow();

  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_17_1();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_19A84E4B0()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  v2 = *(id *)(v0 + 24);
  v3 = v1();
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(), sel_startSearchFeedbackWithUUID);
    v6 = sub_19A8C3DBC();
    sub_19A849F60(v6, v7, v5, (SEL *)&selRef_setUrl_);
    objc_msgSend(v5, sel_setTriggerEvent_, 15);
    objc_msgSend(v5, sel_setEndpoint_, 7);
    if (sub_19A8C3D2C())
    {
      v8 = (void *)sub_19A8C48E4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v5, sel_setHeaders_, v8);

    v10 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
    v11 = objc_msgSend(v10, sel_configuration);

    v2 = v5;
    sub_19A85BEF0(v11, v2, 0, v4);
    swift_unknownObjectRelease();

  }
  else
  {
    sub_19A84F1C8();
    swift_allocError();
    *(_QWORD *)(v9 + 8) = 0;
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)v9 = 4;
    *(_BYTE *)(v9 + 24) = 5;
    swift_willThrow();
  }
  return v2;
}

void sub_19A84E660(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;

  v9 = (*(uint64_t (**)(void))(v4 + 16))();
  if (v9)
  {
    v10 = v9;
    v11 = objc_allocWithZone((Class)_CPEndNetworkSearchFeedback);
    swift_bridgeObjectRetain();
    v12 = a4;
    v13 = sub_19A851048((uint64_t)a4, a2, a1, 0.0, 0, 0, 0, 0, 0, 0, a3);
    v14 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
    v15 = objc_msgSend(v14, sel_configuration);

    v16 = v13;
    sub_19A85BEF0(v15, v16, 0, v10);
    swift_unknownObjectRelease();

  }
  else
  {
    sub_19A84F1C8();
    swift_allocError();
    *(_QWORD *)(v17 + 8) = 0;
    *(_QWORD *)(v17 + 16) = 0;
    *(_QWORD *)v17 = 4;
    *(_BYTE *)(v17 + 24) = 5;
    swift_willThrow();
  }
}

id sub_19A84E7BC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char **v12;
  id result;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  id v26;
  uint64_t v27;

  v4 = sub_19A8C3DF8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &selRef_setLabelForLocalMedia_;
  result = objc_msgSend(a1, sel_statusCode);
  if (result != (id)200)
  {
    if (qword_1ECFFDEA0 != -1)
      swift_once();
    v14 = sub_19A8C489C();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ECFFDEA8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v11, a2, v4);
    v15 = a1;
    v16 = sub_19A8C4878();
    v17 = sub_19A8C4BE4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v27 = v25;
      *(_DWORD *)v18 = 134218242;
      v26 = objc_msgSend(v15, sel_statusCode);
      sub_19A8C4CC8();

      *(_WORD *)(v18 + 12) = 2080;
      v24[1] = v18 + 14;
      sub_19A851210(&qword_1ECFFDF80, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v19 = sub_19A8C4E18();
      v26 = (id)sub_19A844794(v19, v20, &v27);
      v12 = &selRef_setLabelForLocalMedia_;
      sub_19A8C4CC8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      _os_log_impl(&dword_19A825000, v16, v17, "bad status code %ld for %s", (uint8_t *)v18, 0x16u);
      v21 = v25;
      swift_arrayDestroy();
      MEMORY[0x19AECCDEC](v21, -1, -1);
      MEMORY[0x19AECCDEC](v18, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    }

    v22 = objc_msgSend(v15, v12[471]);
    sub_19A84F1C8();
    swift_allocError();
    *(_QWORD *)(v23 + 8) = 0;
    *(_QWORD *)(v23 + 16) = 0;
    *(_QWORD *)v23 = v22;
    *(_BYTE *)(v23 + 24) = 3;
    return (id)swift_willThrow();
  }
  return result;
}

uint64_t sub_19A84EA80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return OUTLINED_FUNCTION_46_0();
}

uint64_t sub_19A84EA90()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDE98);
  *v1 = v0;
  v1[1] = sub_19A84EB14;
  OUTLINED_FUNCTION_8_5();
  return sub_19A8C4E48();
}

uint64_t sub_19A84EB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_58();
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A84EB60()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19A84EB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDEE0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4, v7, v8, v9, v10);
  swift_beginAccess();
  if (MEMORY[0x19AECCEAC](a2 + 16))
  {
    if ((sub_19A8C4AE8() & 1) != 0)
    {
      sub_19A8C4AAC();
      sub_19A851210(&qword_1EE3B0830, (void (*)(uint64_t))MEMORY[0x1E0DF05E0]);
      v11 = swift_allocError();
      sub_19A8C48D8();
      v17 = v11;
      sub_19A8C4A94();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
      v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v16 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16 + v15, (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      sub_19A8623CC();
      swift_release();
    }
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_19A84F1C8();
    v12 = swift_allocError();
    *(_QWORD *)(v13 + 8) = 0;
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)v13 = 4;
    *(_BYTE *)(v13 + 24) = 5;
    v17 = v12;
    return sub_19A8C4A94();
  }
}

uint64_t sub_19A84ED20(uint64_t a1)
{
  if (!a1)
    sub_19A8C4908();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDEE0);
  return sub_19A8C4AA0();
}

uint64_t sub_19A84ED9C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19A84EDC0(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 16;
  OUTLINED_FUNCTION_23_0();
  return MEMORY[0x19AECCEAC](v1);
}

uint64_t sub_19A84EDFC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  char v17;
  void *v18;

  v2 = sub_19A8C4AAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (unint64_t)a1;
  v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE150);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    return 0;
  }
  v18 = a1;
  v12 = a1;
  if (swift_dynamicCast())
  {
    v13 = v17 == 5 && (v15 & 0xFFFFFFFFFFFFFFFELL) == 4;
    if (v13 && v16 == 0)
      return 0;
    sub_19A8516AC((void *)v15, (id)v16, *((uint64_t *)&v16 + 1), v17);
  }
  return 1;
}

uint64_t sub_19A84EF14()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_19A84EF38(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  int EnumTagSinglePayload;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v11, v12, v13, v14, v15);
  OUTLINED_FUNCTION_43_0();
  v18 = v16 - v17;
  MEMORY[0x1E0C80A78](v19, v20, v21, v22, v23);
  v25 = (char *)&v38 - v24;
  v26 = (int *)OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v27, v28, v29, v30, v31);
  v33 = (uint64_t *)((char *)&v38 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_19A85163C(a4, (uint64_t)v25, &qword_1ECFFDF70);
  v41 = a4;
  if (a2)
  {
    OUTLINED_FUNCTION_25_0((uint64_t)v25);
    OUTLINED_FUNCTION_67();
LABEL_8:
    OUTLINED_FUNCTION_25_0(v18);
    *v33 = v40;
    v33[1] = a2;
    OUTLINED_FUNCTION_107(a3, (uint64_t)v33 + v26[5]);
    OUTLINED_FUNCTION_107(v41, (uint64_t)v33 + v26[6]);
    *((_BYTE *)v33 + v26[7]) = a5 & 1;
    sub_19A84F2D8((uint64_t)v33, a6);
    v37 = 0;
    goto LABEL_9;
  }
  v39 = OUTLINED_FUNCTION_28_0();
  v34 = a6;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v39);
  OUTLINED_FUNCTION_25_0((uint64_t)v25);
  OUTLINED_FUNCTION_67();
  v36 = EnumTagSinglePayload == 1;
  a6 = v34;
  if (!v36)
    goto LABEL_8;
  OUTLINED_FUNCTION_94(v18, 1, v39);
  if (!v36)
    goto LABEL_8;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_25_0(v18);
  OUTLINED_FUNCTION_25_0(v41);
  OUTLINED_FUNCTION_25_0(a3);
  v37 = 1;
LABEL_9:
  OUTLINED_FUNCTION_53(a6, v37);
  OUTLINED_FUNCTION_0_2();
}

uint64_t sub_19A84F0F4()
{
  uint64_t v0;

  v0 = sub_19A8C489C();
  __swift_allocate_value_buffer(v0, qword_1ECFFDEA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECFFDEA8);
  return sub_19A8C4884();
}

uint64_t sub_19A84F174(void *a1)
{
  objc_msgSend(a1, sel_set_nw_activity_, nw_activity_create());
  return swift_unknownObjectRelease();
}

uint64_t sub_19A84F1C0(uint64_t a1)
{
  uint64_t v1;

  return sub_19A84EB6C(a1, v1);
}

unint64_t sub_19A84F1C8()
{
  unint64_t result;

  result = qword_1EE3B0298;
  if (!qword_1EE3B0298)
  {
    result = MEMORY[0x19AECCD38](&unk_19A8CEE18, &type metadata for PARImageLoader.Error);
    atomic_store(result, (unint64_t *)&qword_1EE3B0298);
  }
  return result;
}

uint64_t sub_19A84F204()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDEE0);
  OUTLINED_FUNCTION_101();
  OUTLINED_FUNCTION_63(v0);
  return swift_deallocObject();
}

uint64_t sub_19A84F260(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDEE0);
  return sub_19A84ED20(a1);
}

uint64_t type metadata accessor for PARImageLoader.ImageLocation()
{
  uint64_t result;

  result = qword_1ECFFDEC0;
  if (!qword_1ECFFDEC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_19A84F2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PARImageLoader.ImageLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19A84F31C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PARImageLoader.ImageLocation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19A84F358()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_19A84F37C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_52() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = OUTLINED_FUNCTION_51();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_103();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_62(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  return swift_deallocObject();
}

uint64_t sub_19A84F434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_101();
  v2 = (v1 + 64) & ~v1;
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_54();
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(double *)(v0 + 56);
  v5 = v0 + v2;
  v7 = v0 + v6;
  v8 = swift_task_alloc();
  v9 = (_QWORD *)OUTLINED_FUNCTION_61(v8);
  v10 = OUTLINED_FUNCTION_44_0(v9);
  return sub_19A84CFA4(v10, v4, v11, v12, v13, v14, v3, v5, v7);
}

uint64_t sub_19A84F4D8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_29_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_19A84F4FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v12 = OUTLINED_FUNCTION_28_0();
  v1 = *(_QWORD *)(v12 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = OUTLINED_FUNCTION_52();
  v4 = *(_QWORD *)(v11 - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = OUTLINED_FUNCTION_51();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_103();
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v12);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v11);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  return swift_deallocObject();
}

uint64_t sub_19A84F5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_101();
  v3 = (*(_QWORD *)(v2 + 64) + ((v1 + 40) & ~v1) + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_101();
  v5 = (v3 + v4 + 8) & ~v4;
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_54();
  v6 = *(double *)(v0 + v3);
  v7 = v0 + v5;
  v9 = v0 + v8;
  v10 = swift_task_alloc();
  v11 = (_QWORD *)OUTLINED_FUNCTION_61(v10);
  v12 = OUTLINED_FUNCTION_44_0(v11);
  return sub_19A84C060(v12, v6, v13, v14, v15, v16, v7, v9);
}

uint64_t sub_19A84F6C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDEF0);
  *(_QWORD *)(v1 + 56) = swift_task_alloc();
  return swift_task_switch();
}

void sub_19A84F71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_105();
  if (v0)
  {
    OUTLINED_FUNCTION_112();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_36_0();
    __asm { BR              X0 }
  }
  v3 = *(_QWORD *)(v1 + 48);
  OUTLINED_FUNCTION_33();
  __asm { BR              X10 }
}

uint64_t sub_19A84F79C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_39_0();
  v1[8] = 1;
  v1[9] = v0;
  v2 = (_QWORD *)swift_task_alloc();
  v1[10] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDE98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE150);
  *v2 = v1;
  v2[1] = sub_19A84F9E4;
  OUTLINED_FUNCTION_36_0();
  return sub_19A8C4AD0();
}

uint64_t sub_19A84F9E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_59(v2);
  *(_QWORD *)(v0 + 88) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_4_3();
}

uint64_t sub_19A84FA38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_19A84FF30(*(_QWORD *)(v0 + 40));
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_112();
  return OUTLINED_FUNCTION_37_0(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_19A84FA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  sub_19A84FFC0();
  v2 = v1;
  v3 = *(void **)(v0 + 88);
  swift_release();

  OUTLINED_FUNCTION_112();
  return OUTLINED_FUNCTION_37_0(v2, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_19A84FAEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v4;
  *v4 = v3;
  v4[1] = sub_19A84FB50;
  return v6(v3 + 16);
}

uint64_t sub_19A84FB50()
{
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A84FB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDEF0);
  MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19A85163C(a1, (uint64_t)v11, &qword_1ECFFDEF0);
  v12 = sub_19A8C4AC4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
  {
    sub_19A841E78((uint64_t)v11, &qword_1ECFFDEF0);
  }
  else
  {
    sub_19A8C4AB8();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v13 = sub_19A8C4A88();
    v15 = v14;
    swift_unknownObjectRelease();
  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  sub_19A8C4740();
  if (v15 | v13)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v13;
    v17[3] = v15;
  }
  return swift_task_create();
}

uint64_t sub_19A84FD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDEF0);
  MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19A85163C(a1, (uint64_t)v11, &qword_1ECFFDEF0);
  v12 = sub_19A8C4AC4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
  {
    sub_19A841E78((uint64_t)v11, &qword_1ECFFDEF0);
  }
  else
  {
    sub_19A8C4AB8();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v13 = sub_19A8C4A88();
    v15 = v14;
    swift_unknownObjectRelease();
  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDE98);
  if (v15 | v13)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v13;
    v17[3] = v15;
  }
  return swift_task_create();
}

uint64_t sub_19A84FE78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v4;
  *v4 = v3;
  v4[1] = sub_19A84FEDC;
  return v6(v3 + 16);
}

uint64_t sub_19A84FEDC()
{
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_8_5();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A84FF18()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_19A84FF24()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19A84FF30(uint64_t a1)
{
  uint64_t v1;
  int v3;
  void *v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = *(unsigned __int8 *)(v1 + 128);
  if (v3 != 2)
  {
    v4 = *(void **)(v1 + 112);
    v5 = *(_QWORD *)(v1 + 120);
    *(_QWORD *)(v1 + 112) = a1;
    *(_QWORD *)(v1 + 120) = 0;
    *(_BYTE *)(v1 + 128) = 2;
    swift_bridgeObjectRetain();
    sub_19A851568(v4, v5, v3);
  }
  return swift_bridgeObjectRetain();
}

void sub_19A84FFC0()
{
  swift_beginAccess();
  __asm { BR              X9 }
}

void *sub_19A850018(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  id v27;

  v25 = *(_QWORD *)(v21 + 120);
  *(_QWORD *)(v21 + 112) = v20;
  *(_QWORD *)(v21 + 120) = v23;
  *(_BYTE *)(v21 + 128) = 1;
  v26 = v20;
  sub_19A851568(v22, v25, v24);
  swift_willThrow();
  v27 = v20;
  return v22;
}

uint64_t sub_19A8500C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  v5 = sub_19A8C4740();
  v4[15] = v5;
  v4[16] = *(_QWORD *)(v5 - 8);
  v4[17] = swift_task_alloc();
  v6 = sub_19A8C3DF8();
  v4[18] = v6;
  v4[19] = *(_QWORD *)(v6 - 8);
  v4[20] = swift_task_alloc();
  v7 = sub_19A8C3D44();
  v4[21] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[22] = v8;
  v4[23] = *(_QWORD *)(v8 + 64);
  v4[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDEF0);
  v4[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B02A0);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19A850210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  OUTLINED_FUNCTION_105();
  if (!v0)
  {
    v4 = *(_QWORD *)(v1 + 216);
    v3 = *(_QWORD *)(v1 + 224);
    v5 = *(_QWORD *)(v1 + 112);
    v6 = *(_QWORD *)(v1 + 96);
    OUTLINED_FUNCTION_23_0();
    v7 = *(_QWORD *)(v5 + 112);
    swift_bridgeObjectRetain();
    sub_19A86AF7C(v6, v7, v4);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload(v4, 1, v3) == 1)
    {
      v8 = *(_QWORD *)(v1 + 216);
      swift_storeEnumTagMultiPayload();
      sub_19A841E78(v8, &qword_1EE3B02A0);
    }
    else
    {
      sub_19A851708(*(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 240), (uint64_t *)&unk_1ECFFE6E8);
    }
    sub_19A85163C(*(_QWORD *)(v1 + 240), *(_QWORD *)(v1 + 232), (uint64_t *)&unk_1ECFFE6E8);
    v9 = (char *)&loc_19A850354 + *((int *)qword_19A850770 + swift_getEnumCaseMultiPayload());
    __asm { BR              X10 }
  }
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_34_0();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_19A850364(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  _QWORD *v31;

  *(_QWORD *)(v30 + 248) = **(_QWORD **)(v30 + 232);
  *(_QWORD *)(v30 + 256) = 1;
  v31 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v30 + 264) = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE150);
  *v31 = v30;
  v31[1] = sub_19A850780;
  return sub_19A8C4AD0();
}

uint64_t sub_19A850780()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_59(v2);
  *(_QWORD *)(v0 + 272) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_4_3();
}

uint64_t sub_19A8507D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_84();
  v1 = v0[30];
  sub_19A8509EC(v0[17], v0[12], v0[11]);
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_86();
  sub_19A841E78(v1, (uint64_t *)&unk_1ECFFE6E8);
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_11_2();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_56();
  return v2();
}

void sub_19A85085C()
{
  uint64_t *v0;

  sub_19A850CF0(v0[12], v0[32], v0[11]);
  sub_19A841E78(v0[30], (uint64_t *)&unk_1ECFFE6E8);
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_36_0();
  __asm { BR              X0 }
}

uint64_t sub_19A850904(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_19A8523DC;
  return v11(a1, a6);
}

uint64_t sub_19A850978(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_19A84F4D8;
  return v11(a1, a6);
}

uint64_t sub_19A8509EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unsigned int EnumCaseMultiPayload;
  uint64_t v41;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a1;
  v53 = a3;
  v5 = sub_19A8C3DF8();
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9);
  v51 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B02A0);
  v16 = MEMORY[0x1E0C80A78](v11, v12, v13, v14, v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v19, v20, v21, v22);
  v24 = (char *)&v48 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
  v30 = MEMORY[0x1E0C80A78](v25, v26, v27, v28, v29);
  v32 = (char *)&v48 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30, v33, v34, v35, v36);
  v38 = (char *)&v48 - v37;
  swift_beginAccess();
  v39 = *(_QWORD *)(v3 + 112);
  swift_bridgeObjectRetain();
  sub_19A86AF7C(a2, v39, (uint64_t)v24);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_19A841E78((uint64_t)v24, &qword_1EE3B02A0);
  }
  else
  {
    sub_19A851708((uint64_t)v24, (uint64_t)v38, (uint64_t *)&unk_1ECFFE6E8);
  }
  sub_19A85163C((uint64_t)v38, (uint64_t)v32, (uint64_t *)&unk_1ECFFE6E8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload == 2)
    {
      sub_19A841E78((uint64_t)v38, (uint64_t *)&unk_1ECFFE6E8);
      v41 = sub_19A8C4740();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v53, v32, v41);
    }
  }
  else
  {
    sub_19A841E78((uint64_t)v32, (uint64_t *)&unk_1ECFFE6E8);
  }
  v43 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v51, a2, v50);
  v44 = *(uint64_t (**)(uint64_t))(v3 + 128);
  v45 = v52;
  if (!v44 || (v44(v52) & 1) != 0)
  {
    v46 = sub_19A8C4740();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v18, v45, v46);
  }
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v25);
  swift_beginAccess();
  sub_19A84AD48((uint64_t)v18, v43);
  swift_endAccess();
  sub_19A841E78((uint64_t)v38, (uint64_t *)&unk_1ECFFE6E8);
  v47 = sub_19A8C4740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v53, v45, v47);
}

void sub_19A850CF0(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[14];

  v39[0] = a3;
  v39[5] = a2;
  v5 = sub_19A8C3DF8();
  v39[2] = *(_QWORD *)(v5 - 8);
  v39[3] = v5;
  MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9);
  v39[13] = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B02A0);
  v16 = MEMORY[0x1E0C80A78](v11, v12, v13, v14, v15);
  MEMORY[0x1E0C80A78](v16, v17, v18, v19, v20);
  v22 = (char *)v39 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
  v28 = MEMORY[0x1E0C80A78](v23, v24, v25, v26, v27);
  v30 = (char *)v39 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28, v31, v32, v33, v34);
  v36 = (char *)v39 - v35;
  swift_beginAccess();
  v37 = *(_QWORD *)(v3 + 112);
  swift_bridgeObjectRetain();
  v39[4] = a1;
  sub_19A86AF7C(a1, v37, (uint64_t)v22);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_19A841E78((uint64_t)v22, &qword_1EE3B02A0);
  }
  else
  {
    sub_19A851708((uint64_t)v22, (uint64_t)v36, (uint64_t *)&unk_1ECFFE6E8);
  }
  sub_19A85163C((uint64_t)v36, (uint64_t)v30, (uint64_t *)&unk_1ECFFE6E8);
  v38 = (char *)sub_19A850ED4 + 4 * byte_19A8CECE4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

id sub_19A850ED4()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  swift_release();
  v5 = *(_QWORD *)(v4 - 72);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v4 - 160) + 16))(v5, *(_QWORD *)(v4 - 144), *(_QWORD *)(v4 - 152));
  v6 = *(_QWORD *)(v4 - 136);
  *v1 = v0;
  v1[1] = v6;
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v1, 0, 1, v3);
  swift_beginAccess();
  v7 = v0;
  sub_19A84AD48((uint64_t)v1, v5);
  swift_endAccess();
  swift_willThrow();
  sub_19A841E78(v2, (uint64_t *)&unk_1ECFFE6E8);
  return v0;
}

id sub_19A851048(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void *v11;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  if (a6)
  {
    v17 = (void *)sub_19A8C4938();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  if (a8)
  {
    v18 = (void *)sub_19A8C4938();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  if (!a10)
  {
    v19 = 0;
    if (a11)
      goto LABEL_9;
LABEL_11:
    v20 = 0;
    goto LABEL_12;
  }
  v19 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  if (!a11)
    goto LABEL_11;
LABEL_9:
  v20 = (void *)sub_19A8C48E4();
  swift_bridgeObjectRelease();
LABEL_12:
  v21 = objc_msgSend(v11, sel_initWithStartSearch_responseSize_statusCode_parsecStatus_parsecDuration_fbq_partialClientIp_networkTimingData_, a1, a2, a3, v17, v18, v19, a4, v20);

  swift_unknownObjectRelease();
  return v21;
}

id sub_19A8511B0(void *a1)
{
  void *v1;
  void *v3;
  id v4;

  if (a1)
  {
    v3 = (void *)sub_19A8C3D98();

  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v1, sel_initWithError_, v3);

  return v4;
}

void sub_19A851210(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_90();
  }
  OUTLINED_FUNCTION_40();
}

uint64_t sub_19A851244(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_19A8C4944();

  return v4;
}

uint64_t sub_19A8512A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_42_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61(v0);
  v2 = OUTLINED_FUNCTION_38_0(v1);
  return sub_19A850978(v2, v3, v4, v5, v6, v7);
}

uint64_t objectdestroy_32Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_19A8C3D44() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_62(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return swift_deallocObject();
}

uint64_t sub_19A851370()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_42_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61(v0);
  v2 = OUTLINED_FUNCTION_38_0(v1);
  return sub_19A850904(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_19A8513C8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v8;

  *(_QWORD *)(v4 + 16) = a1;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_19A8523E0;
  return sub_19A84FAEC(a2, a3, a4);
}

uint64_t sub_19A851438(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v8;

  *(_QWORD *)(v4 + 16) = a1;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_19A8514A8;
  return sub_19A84FE78(a2, a3, a4);
}

uint64_t sub_19A8514A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_93();
  v4 = *v3;
  OUTLINED_FUNCTION_57(v5);
  if (!v1)
    **(_QWORD **)(v2 + 16) = v0;
  return OUTLINED_FUNCTION_2_5(*(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_19A8514F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61(v0);
  v2 = OUTLINED_FUNCTION_31_0(v1);
  return OUTLINED_FUNCTION_26_0(v2, v3, v4, v5, v6, v7);
}

id sub_19A851540(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 2:
      return (id)swift_bridgeObjectRetain();
    case 1:
      return result;
    case 0:
      return (id)swift_retain();
  }
  return result;
}

void sub_19A851568(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 2:
      swift_bridgeObjectRelease();
      break;
    case 1:

      break;
    case 0:
      swift_release();
      break;
  }
}

void sub_19A851590(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_90();
  }
  OUTLINED_FUNCTION_40();
}

uint64_t objectdestroy_51Tm()
{
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_102();
  return swift_deallocObject();
}

uint64_t sub_19A8515EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61(v0);
  v2 = OUTLINED_FUNCTION_31_0(v1);
  return OUTLINED_FUNCTION_26_0(v2, v3, v4, v5, v6, v7);
}

void sub_19A85163C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_87(a1, a2, a3);
  OUTLINED_FUNCTION_95(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_40();
}

uint64_t sub_19A851668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PARImageLoader.ImageLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_19A8516AC(void *a1, id a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:

      break;
    case 1:
    case 2:
      goto LABEL_2;
    case 4:

LABEL_2:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

void sub_19A851708(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_87(a1, a2, a3);
  OUTLINED_FUNCTION_95(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_40();
}

_QWORD *sub_19A851734(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_19A8C3DF8();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[6];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v14, 1, v11))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v15, v16, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v11);
    }
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return v4;
}

uint64_t sub_19A8518A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_19A8C3DF8();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  result = __swift_getEnumTagSinglePayload(v6, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v6, v5);
  return result;
}

_QWORD *sub_19A851950(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_19A8C3DF8();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v12, 1, v10))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v13, v14, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v10);
  }
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_19A851A98(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19A8C3DF8();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v14, 1, v9);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (!v17)
  {
    v19 = *(_QWORD *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v15, v16, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v15, v16, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
LABEL_13:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_OWORD *sub_19A851C80(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19A8C3DF8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v11, 1, v9))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_19A851DB8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_19A8C3DF8();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v15, 1, v10);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v10);
  if (!v18)
  {
    v20 = *(_QWORD *)(v10 - 8);
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v16, v17, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v10);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v16, v17, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v10);
LABEL_13:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

uint64_t sub_19A851F90()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19A851F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t sub_19A852020()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19A85202C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_19A85209C()
{
  unint64_t v0;

  sub_19A85211C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_19A85211C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECFFDED8)
  {
    sub_19A8C3DF8();
    v0 = sub_19A8C4CA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECFFDED8);
  }
}

id sub_19A852170(id result, id a2, uint64_t a3, char a4)
{
  id v4;

  switch(a4)
  {
    case 0:
      result = result;
      break;
    case 1:
    case 2:
      goto LABEL_2;
    case 4:
      v4 = result;
LABEL_2:
      result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for PARImageLoader.Error(uint64_t a1)
{
  sub_19A8516AC(*(void **)a1, *(id *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for PARImageLoader.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_19A852170(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for PARImageLoader.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_19A852170(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_19A8516AC(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PARImageLoader.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_19A8516AC(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PARImageLoader.Error(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFB && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 5)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PARImageLoader.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_19A852390(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 4u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_19A8523A8(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 5;
  if (a2 >= 5)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 5;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PARImageLoader.Error()
{
  return &type metadata for PARImageLoader.Error;
}

void OUTLINED_FUNCTION_12_3()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_22_1()
{
  void *v0;
  uint64_t v1;

  sub_19A84D4F0(v0, *(_QWORD *)(v1 + 64));
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_29_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_32_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_35_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_37_0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_39_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_48()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_51()
{
  return sub_19A8C4830();
}

uint64_t OUTLINED_FUNCTION_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_55()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_56()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_57@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_59(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t OUTLINED_FUNCTION_60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_61(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

void OUTLINED_FUNCTION_65_0()
{
  void *v0;

}

void OUTLINED_FUNCTION_67()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_19A85163C(v1, v2, v0);
}

void OUTLINED_FUNCTION_69()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_72()
{
  return sub_19A8C4848();
}

uint64_t OUTLINED_FUNCTION_74()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_77()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_80()
{
  return swift_task_dealloc();
}

id OUTLINED_FUNCTION_83()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_86()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_87(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_88()
{
  return swift_release();
}

void OUTLINED_FUNCTION_90()
{
  JUMPOUT(0x19AECCD38);
}

uint64_t OUTLINED_FUNCTION_92()
{
  return sub_19A8C3D44();
}

void OUTLINED_FUNCTION_93()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

void OUTLINED_FUNCTION_96(void *a1)
{
  uint64_t v1;
  char v2;

  sub_19A851568(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_98@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_99()
{
  return sub_19A8C4C80();
}

uint64_t OUTLINED_FUNCTION_102()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_103()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_104()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_105()
{
  return sub_19A8C4AF4();
}

uint64_t OUTLINED_FUNCTION_106()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_107(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_19A851708(a1, a2, v2);
}

void OUTLINED_FUNCTION_108(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6, uint8_t *a7)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, a7, 0xCu);
}

uint64_t OUTLINED_FUNCTION_109()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_110()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_112()
{
  return swift_task_dealloc();
}

id PARLookupSearchResponse.init(reply:factory:data:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v8;
  void *v9;
  id v10;

  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v9 = (void *)sub_19A8C3E28();
  v10 = objc_msgSend(v8, sel_initWithReply_factory_data_, a1, a2, v9);
  sub_19A833360(a3, a4);

  swift_unknownObjectRelease();
  return v10;
}

{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;

  v8 = sub_19A8C4770();
  MEMORY[0x1E0C80A78](v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_18();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0908);
  MEMORY[0x1E0C80A78](v13, v14, v15, v16, v17);
  OUTLINED_FUNCTION_18();
  v20 = v19 - v18;
  v21 = sub_19A8C3F30();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21, v23, v24, v25, v26);
  OUTLINED_FUNCTION_18();
  v29 = v28 - v27;
  v30 = objc_msgSend(v4, sel_initWithReply_, a1);
  sub_19A84449C(a3, a4);
  sub_19A8C4764();
  sub_19A852978();
  sub_19A8C4794();
  OUTLINED_FUNCTION_12_1(v20, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v29, v20, v21);
  v31 = v30;
  v32 = sub_19A8529F8(v29, a1);
  sub_19A853064(v32, v31, &qword_1ECFFDE58, 0x1E0D8C6A8, (SEL *)&selRef_setResults_);

  v33 = v31;
  v34 = sub_19A852B90();
  sub_19A853064(v34, v33, &qword_1ECFFDD50, 0x1E0D8C650, (SEL *)&selRef_setSections_);

  OUTLINED_FUNCTION_1_4();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v29, v21);
  return v33;
}

unint64_t sub_19A852978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE3B0910;
  if (!qword_1EE3B0910)
  {
    v1 = sub_19A8C3F30();
    result = MEMORY[0x19AECCD38](MEMORY[0x1E0D6D2D8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE3B0910);
  }
  return result;
}

uint64_t sub_19A8529B8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0908);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19A8529F8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  uint64_t v21;

  v3 = sub_19A8C3F18();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5, v6, v7, v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19A8C3F24();
  v11 = sub_19A8C3F0C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  v21 = MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = *(_QWORD *)(sub_19A8C4140() - 8);
    v14 = v11 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v15 = *(_QWORD *)(v13 + 72);
    v16 = a2;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    do
    {
      sub_19A842458(v16);
      MEMORY[0x19AECBFC4]();
      if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_19A8C4A40();
      sub_19A8C4A58();
      sub_19A8C4A34();
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v17 = v21;
  }
  else
  {
    v18 = a2;
    swift_unknownObjectRetain();
    v17 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return v17;
}

uint64_t sub_19A852B90()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_19A86DE9C(v0);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    v4 = MEMORY[0x1E0DEE9E0];
    sub_19A852F1C(v1, &v4, &v5);
    swift_bridgeObjectRelease();
    v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

void sub_19A852C7C(void **a1, uint64_t *a2, _QWORD *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;

  v5 = *a1;
  v6 = sub_19A868840(*a1);
  if (v7)
  {
    v8 = v6;
    v9 = v7;
    v10 = sub_19A86B060(v6, v7, *a2);
    if (v10)
    {
      v11 = v10;
      swift_bridgeObjectRelease();
      v12 = v11;
    }
    else
    {
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C650]), sel_init);
      if (!v13)
      {
        v18 = (void *)sub_19A8676A8(v8, v9);
        swift_bridgeObjectRelease();

        return;
      }
      v14 = v13;
      sub_19A868858(v8, v9, v13);
      v15 = v14;
      sub_19A86884C(v5);
      if (v16)
      {
        v17 = (void *)sub_19A8C4938();
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = 0;
      }
      objc_msgSend(v15, sel_setBundleIdentifier_, v17);

      sub_19A86DEB8(MEMORY[0x1E0DEE9D8], v15);
      v19 = v15;
      sub_19A86DE14((uint64_t)v19, v8, v9);
      swift_bridgeObjectRelease();
      v20 = v19;
      v21 = objc_msgSend(v5, sel_moreResultsButton);
      objc_msgSend(v20, sel_setButton_, v21);

      v22 = v20;
      MEMORY[0x19AECBFC4]();
      sub_19A8671F0(*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFF8) + 0x10));
      sub_19A8C4A58();
      sub_19A8C4A34();

      v12 = v22;
      v11 = 0;
    }
    v23 = v5;
    v24 = v11;
    sub_19A85BADC(v12);
    v27 = v25;
    if (v25)
    {
      MEMORY[0x19AECBFC4]();
      if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_19A8C4A40();
      sub_19A8C4A58();
      sub_19A8C4A34();
      if (v27)
      {
        sub_19A8444E0(0, &qword_1ECFFDE58);
        v26 = (void *)sub_19A8C4A10();
        swift_bridgeObjectRelease();
      }
      else
      {
        v26 = 0;
      }
      objc_msgSend(v12, sel_setResults_, v26);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_19A852F1C(unint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;

  if (a1 >> 62)
    goto LABEL_13;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_19A8C4DF4())
  {
    v8 = 4;
    while (1)
    {
      v9 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x19AECC324](v8 - 4, a1) : *(id *)(a1 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v12 = v9;
      sub_19A852C7C(&v12, a2, a3);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return;
      }

      ++v8;
      if (v11 == v7)
        goto LABEL_10;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
}

void sub_19A85302C(uint64_t a1, void *a2)
{
  sub_19A853064(a1, a2, &qword_1ECFFDE58, 0x1E0D8C6A8, (SEL *)&selRef_setResults_);
}

void sub_19A853048(uint64_t a1, void *a2)
{
  sub_19A853064(a1, a2, &qword_1ECFFDD50, 0x1E0D8C650, (SEL *)&selRef_setSections_);
}

void sub_19A853064(uint64_t a1, void *a2, unint64_t *a3, uint64_t a4, SEL *a5)
{
  id v7;

  sub_19A8444E0(0, a3);
  v7 = (id)sub_19A8C4A10();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, *a5, v7);

}

void static ProtobufHelper.processProtobuf(_:result:data:)(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  swift_getObjectType();
  sub_19A853318(a1, a2, a3, a4);
}

id sub_19A85312C(id result)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t ObjectType;

  if (result)
  {
    v1 = result;
    if (objc_msgSend(result, sel_replyType) == 2)
      return 0;
    result = objc_msgSend(v1, sel_task);
    if (result)
    {
      v2 = result;
      v3 = objc_msgSend(result, sel_request);

      if (!v3)
        return 0;
      ObjectType = swift_getObjectType();

      return (id)(ObjectType != sub_19A853438());
    }
  }
  return result;
}

id ProtobufHelper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ProtobufHelper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProtobufHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ProtobufHelper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProtobufHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_19A853318(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  void *v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  id v12;
  char **v13;
  id v14;

  objc_allocWithZone(MEMORY[0x1E0D8C880]);
  sub_19A84449C(a3, a4);
  sub_19A8441B0(a3, a4);
  if (v8)
  {
    v14 = v8;
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C210]), sel_initWithProtobuf_, v8);
    if (v9)
    {
      v10 = v9;
      v11 = sub_19A85312C(a1);
      v12 = v10;
      v13 = &selRef_setInlineCard_;
      if ((v11 & 1) == 0)
        v13 = &selRef_setCard_;
      objc_msgSend(a2, *v13, v12);

    }
  }
}

uint64_t type metadata accessor for ProtobufHelper()
{
  return objc_opt_self();
}

unint64_t sub_19A853438()
{
  unint64_t result;

  result = qword_1ECFFDF40;
  if (!qword_1ECFFDF40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECFFDF40);
  }
  return result;
}

uint64_t sub_19A853474(id *a1, uint64_t a2)
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;

  v3 = objc_msgSend(*a1, sel_embeddedCards);
  sub_19A85369C();
  v4 = sub_19A8C4A1C();

  if (v4 >> 62)
    goto LABEL_27;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    v6 = 0;
    v20 = v4;
    v21 = v4 & 0xC000000000000001;
    v17 = v4 + 32;
    v18 = v4 & 0xFFFFFFFFFFFFFF8;
    v19 = v5;
    while (1)
    {
      if (v21)
      {
        v7 = (id)MEMORY[0x19AECC324](v6, v4);
      }
      else
      {
        if (v6 >= *(_QWORD *)(v18 + 16))
          goto LABEL_26;
        v7 = *(id *)(v17 + 8 * v6);
      }
      if (__OFADD__(v6++, 1))
        break;
      v9 = v7;
      objc_msgSend(v9, sel_setQueryId_, a2);
      sub_19A85BA68(v9);
      if (!v10)
      {

        goto LABEL_20;
      }
      v11 = v10;
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        v12 = sub_19A8C4DF4();
        if (v12)
        {
LABEL_12:
          if (v12 < 1)
            goto LABEL_25;
          v13 = 0;
          do
          {
            if ((v11 & 0xC000000000000001) != 0)
              v14 = (id)MEMORY[0x19AECC324](v13, v11);
            else
              v14 = *(id *)(v11 + 8 * v13 + 32);
            v15 = v14;
            ++v13;
            v22 = v14;
            sub_19A853474(&v22, a2);

          }
          while (v12 != v13);
        }
      }
      else
      {
        v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v12)
          goto LABEL_12;
      }

      swift_bridgeObjectRelease_n();
      v5 = v19;
      v4 = v20;
LABEL_20:

      if (v6 == v5)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    v5 = sub_19A8C4DF4();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_19A85369C()
{
  unint64_t result;

  result = qword_1EE3B0280;
  if (!qword_1EE3B0280)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE3B0280);
  }
  return result;
}

uint64_t sub_19A8536D8(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)sub_19A8536FC + 4 * byte_19A8CEE80[a2 >> 62]))();
}

BOOL sub_19A8536FC(uint64_t a1, uint64_t a2)
{
  return BYTE6(a2) == 0;
}

uint64_t sub_19A853724(_QWORD *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;

  v3 = v2;
  v54 = a2;
  v52 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDFB0);
  v9 = MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8);
  v51 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v11, v12, v13, v14);
  v16 = (char *)&v49 - v15;
  v53 = sub_19A8C3EA0();
  v17 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53, v18, v19, v20, v21);
  v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_weakInit();
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_WORD *)(v2 + 40) = 256;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 72) = 0;
  *(_BYTE *)(v2 + 81) = 0;
  sub_19A8275AC(0, (unint64_t *)&unk_1ECFFEAD8);
  v57 = qword_1ECFFDE88;
  v58 = unk_1ECFFDE90;
  v55 = 45;
  v56 = 0xE100000000000000;
  v59 = 95;
  v60 = 0xE100000000000000;
  sub_19A831E10();
  sub_19A8C4CEC();
  swift_bridgeObjectRetain();
  v24 = v52;
  *(_QWORD *)(v2 + 88) = sub_19A8C4C98();
  v25 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 136);
  v26 = sub_19A8C480C();
  __swift_storeEnumTagSinglePayload(v25, 1, 1, v26);
  v27 = *(_QWORD *)(*(_QWORD *)v3 + 152);
  type metadata accessor for Locker();
  v28 = swift_allocObject();
  v29 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v28 + 16) = v29;
  *v29 = 0;
  *(_QWORD *)(v3 + v27) = v28;
  sub_19A8C3E94();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 144), v23, v53);
  swift_weakAssign();
  *(_BYTE *)(v3 + 80) = v54;
  v30 = *(id *)(v3 + 88);
  swift_retain();
  sub_19A8C47DC();
  v53 = v26;
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v26);
  v31 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 136);
  swift_beginAccess();
  sub_19A85CC14((uint64_t)v16, v31);
  swift_endAccess();
  v57 = v3;
  swift_retain();
  v32 = sub_19A8C4950();
  v34 = v33;
  v35 = *(os_unfair_lock_s **)(v24[4] + 16);
  os_unfair_lock_lock(v35);
  v36 = v24 + 2;
  if (MEMORY[0x19AECCEAC](v24 + 2))
  {
    v50 = v31;
    v37 = v24[3];
    swift_beginAccess();
    v38 = v24;
    v39 = v24[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = sub_19A86B0A0(v32, v34, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v40)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v37 + 32))(v3, &off_1E391FAF0, ObjectType, v37);
    }
    swift_unknownObjectRelease();
    v24 = v38;
    v31 = v50;
  }
  type metadata accessor for ActivityMonitor.WeakReference();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v42 + 24) = &off_1E391FAF0;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19A86DE20(v42, v32, v34);
  swift_endAccess();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v35);
  swift_bridgeObjectRelease();
  if (MEMORY[0x19AECCEAC](v36))
  {
    v43 = v24[3];
    v44 = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v43 + 8))(v3, &off_1E391FAF0, v44, v43);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  v45 = v51;
  v46 = v53;
  sub_19A85CCA4(v31, v51, (uint64_t *)&unk_1ECFFDFB0);
  result = __swift_getEnumTagSinglePayload(v45, 1, v46);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v48 = *(id *)(v3 + 88);
    sub_19A8C4C44();
    sub_19A848BBC(v54);
    sub_19A8C47D0();

    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
    swift_release();
    return v3;
  }
  return result;
}

uint64_t sub_19A853C5C(_QWORD *a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + qword_1ECFFE090) = 0;
  v5 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 472);
  *(_QWORD *)v5 = a3;
  *(_DWORD *)(v5 + 8) = a4;
  return sub_19A853724(a1, a2);
}

uint64_t sub_19A853C80(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 472);
  v3 = *(_QWORD *)(v1 + v2);
  v4 = __OFADD__(v3, result);
  v5 = v3 + result;
  if (v4)
    __break(1u);
  else
    *(_QWORD *)(v1 + v2) = v5;
  return result;
}

void sub_19A853CA0(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + qword_1ECFFE090);
  *(_QWORD *)(v1 + qword_1ECFFE090) = a1;
  v3 = a1;

}

Swift::Void __swiftcall PARRequest.beginNWActivity()()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_55_0(v0, sel_nwActivityLabel);
  OUTLINED_FUNCTION_108_0();
  nw_activity_activate();
  OUTLINED_FUNCTION_73_0(v1, sel_setNwActivity_);
  OUTLINED_FUNCTION_56_0();
}

void sub_19A853D50(uint64_t a1)
{
  void *v1;

  OUTLINED_FUNCTION_55_0(a1, sel_nwActivityLabel);
  OUTLINED_FUNCTION_108_0();
  nw_activity_activate();
  OUTLINED_FUNCTION_73_0(v1, sel_setNwActivity_);
  OUTLINED_FUNCTION_40();
}

uint64_t sub_19A853D9C()
{
  return nw_activity_complete_with_reason();
}

id PARSessionSwiftInternal.client.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___PARSessionSwiftInternal_client);
}

void sub_19A853DE0(uint64_t a1)
{
  OUTLINED_FUNCTION_39_1(a1, OBJC_IVAR___PARSessionSwiftInternal__configuration);
}

id sub_19A853E04(void *a1)
{
  void *v1;

  return a1;
}

void sub_19A853E1C()
{
  OUTLINED_FUNCTION_23_1(OBJC_IVAR___PARSessionSwiftInternal_lock);
  OUTLINED_FUNCTION_67_0();
}

void sub_19A853E40()
{
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_40();
}

uint64_t sub_19A853E54()
{
  swift_unknownObjectRetain();
  return sub_19A841FC4();
}

void sub_19A853E7C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  sub_19A853E1C();
}

void sub_19A853E94(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  OUTLINED_FUNCTION_40();
}

void sub_19A853EAC(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRetain();
    sub_19A841FC4();
    OUTLINED_FUNCTION_56_0();
  }
  else
  {
    sub_19A841FC4();
    OUTLINED_FUNCTION_40();
  }
}

void sub_19A853F60(void *a1)
{
  os_unfair_lock_s *v1;
  id v3;

  OUTLINED_FUNCTION_99_0(OBJC_IVAR___PARSessionSwiftInternal_lock);
  v3 = a1;
  sub_19A853DE0((uint64_t)v3);
  os_unfair_lock_unlock(v1);
  OUTLINED_FUNCTION_12(v3);
}

void sub_19A853FA4(id *a1)
{
  sub_19A853F60(*a1);
}

void sub_19A853FCC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  sub_19A837418();
  *a1 = v3;
  OUTLINED_FUNCTION_40();
}

void sub_19A853FFC(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    sub_19A853F60(v3);
    OUTLINED_FUNCTION_3_4(v3);
  }
  else
  {
    sub_19A853F60(v2);
    OUTLINED_FUNCTION_96_0();
  }
}

void sub_19A854074()
{
  void *v0;

}

void sub_19A854088(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_19A8324D0(v1);
}

void sub_19A8540B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  sub_19A827678();
  *a1 = v3;
  OUTLINED_FUNCTION_40();
}

void sub_19A8540E4(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v2;
    sub_19A8324D0(v2);
  }
  sub_19A8324D0(*a1);
}

void sub_19A854120()
{
  OUTLINED_FUNCTION_96_0();
}

id sub_19A854148()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR___PARSessionSwiftInternal_client)
                           + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection));
}

void PARSessionSwiftInternal.__deallocating_deinit()
{
  uint64_t v0;

  CoreParsec_notify_cancel(*(_DWORD *)(v0 + OBJC_IVAR___PARSessionSwiftInternal_skappToken));
  OUTLINED_FUNCTION_0_0();
}

id sub_19A854194()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PARSessionSwiftInternal();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *PARSessionSwiftInternal.__allocating_init(session:configuration:connection:delegate:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return PARSessionSwiftInternal.init(session:configuration:connection:delegate:)(a1, a2, a3, a4);
}

void sub_19A8542DC()
{
  objc_msgSend(objc_allocWithZone((Class)PARTask), sel_init);
  OUTLINED_FUNCTION_67_0();
}

void *sub_19A854330(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t aBlock, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, void *, void *, void *);
  void *v55;
  uint64_t v56;
  uint64_t v57;

  OUTLINED_FUNCTION_2_0(v28, sel_setSession_);

  objc_msgSend(v28, sel_setRequest_, v31);
  objc_opt_self();
  v33 = swift_dynamicCastObjCClass();
  if (v33)
  {
    v34 = (void *)v33;
    objc_opt_self();
    v35 = v31;
    v36 = OUTLINED_FUNCTION_46_1((uint64_t)v35, sel_mainBundle);
    v37 = objc_msgSend(v36, sel_preferredLocalizations);

    v38 = sub_19A8C4A1C();
    if (*(_QWORD *)(v38 + 16))
    {
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_12_0();
      v39 = (void *)sub_19A8C4938();
      swift_bridgeObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_12_0();
      v39 = 0;
    }
    objc_msgSend(v34, sel_setPreferredLanguage_, v39);

    if (qword_1ECFFE6A8 != -1)
      swift_once();
    v40 = OUTLINED_FUNCTION_15_2();
    __swift_project_value_buffer(v40, (uint64_t)qword_1ECFFE6B0);
    v41 = v35;
    v42 = sub_19A8C4878();
    v43 = sub_19A8C4BCC();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)OUTLINED_FUNCTION_2();
      v51 = OUTLINED_FUNCTION_2();
      *(_DWORD *)v44 = 136315138;
      sub_19A841C5C(v34, (SEL *)&selRef_preferredLanguage);
      v52 = v45;
      v53 = v46;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0988);
      v47 = sub_19A8C4950();
      sub_19A844794(v47, v48, &v51);
      OUTLINED_FUNCTION_94_0();
      sub_19A8C4CC8();

      OUTLINED_FUNCTION_8_6();
      _os_log_impl(&dword_19A825000, v42, v43, "Setting preferred language for lookup: %s", v44, 0xCu);
      OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_0_0();
    }

  }
  v56 = v30;
  v57 = v29;
  v52 = MEMORY[0x1E0C809B0];
  v53 = 1107296256;
  v54 = sub_19A854620;
  v55 = &block_descriptor;
  v49 = _Block_copy(&v52);
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_2_0(v28, sel_setCompletionBlock_);
  _Block_release(v49);
  return v28;
}

void sub_19A854620(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(id, void *, void *);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(v10, a3, a4);
  swift_release();

}

id sub_19A85470C(void *a1)
{
  void *v1;
  void *v2;

  swift_release();
  return a1;
}

void sub_19A854734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;

  if (a3)
    v7 = sub_19A8C3D98();
  else
    v7 = 0;
  v8 = (id)v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a4, a1, a2);

}

void sub_19A85479C(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(a1, sel_request);
  sub_19A837418();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_106_0();
  OUTLINED_FUNCTION_87_0();
  sub_19A85F4A0();

  OUTLINED_FUNCTION_104_0(v3, sel_setQueryId_);
  OUTLINED_FUNCTION_12(v4);
}

void sub_19A854814(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *ObjCClassFromMetadata;
  void (**v12)(id, _QWORD, id, void *);
  id v13;

  if (a2)
  {
    v6 = a2;
    v7 = OUTLINED_FUNCTION_73_0(v6, sel_setTask_);
    v8 = OUTLINED_FUNCTION_22_0((uint64_t)v7, sel_request);
    objc_msgSend(v6, sel_scale);
    objc_msgSend(v8, sel_setScale_);

    sub_19A85497C(v9);
    if ((v10 & 1) != 0)
    {
      ObjCClassFromMetadata = (void *)objc_opt_self();
    }
    else
    {
      OUTLINED_FUNCTION_30_1(v10, sel_responseClass);
      swift_getObjCClassMetadata();
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    }
    v13 = OUTLINED_FUNCTION_2_0(ObjCClassFromMetadata, sel_responseFromReply_);
    v12 = (void (**)(id, _QWORD, id, void *))OUTLINED_FUNCTION_22_0((uint64_t)v13, sel_completionBlock);
    if (a3)
      a3 = (void *)sub_19A8C3D98();
    v12[2](v12, a4, v13, a3);

  }
  else
  {
    v12 = (void (**)(id, _QWORD, id, void *))OUTLINED_FUNCTION_22_0(a1, sel_completionBlock);
    if (a3)
      v6 = (id)sub_19A8C3D98();
    else
      v6 = 0;
    v12[2](v12, a4, 0, v6);
  }

  _Block_release(v12);
}

void sub_19A85497C(uint64_t a1)
{
  id v1;

  v1 = OUTLINED_FUNCTION_55_0(a1, sel_replyType);
  if ((_DWORD)v1 != 2)
    OUTLINED_FUNCTION_55_0((uint64_t)v1, sel_replyType);
  OUTLINED_FUNCTION_40();
}

uint64_t sub_19A854A74()
{
  return sub_19A854AB0(0, 0);
}

uint64_t sub_19A854AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  sub_19A837418();
  v7 = v6;
  v8 = objc_msgSend(v6, sel_userAgent);

  v9 = sub_19A8C4944();
  v11 = v10;

  v36 = v9;
  OUTLINED_FUNCTION_116();
  v34 = v12;
  v35 = v13;
  sub_19A831E10();
  LOBYTE(v9) = sub_19A8C4CF8();
  OUTLINED_FUNCTION_12_0();
  if ((v9 & 1) == 0)
    return 0;
  sub_19A827678();
  if (!v14)
    return 2;
  v15 = v14;
  v16 = objc_msgSend(v14, sel_safariAssistantForceEnabledState, v34, v35, v36, v11);
  if (v16 != (id)2)
  {
    if (v16 == (id)1)
    {
LABEL_5:

      return 1;
    }
    if (OUTLINED_FUNCTION_55_0((uint64_t)v16, sel_isEnabled))
    {
      v18 = OBJC_IVAR___PARSessionSwiftInternal__deviceContext;
      v19 = *(_QWORD *)(v3 + OBJC_IVAR___PARSessionSwiftInternal__deviceContext);
      v20 = *(_QWORD *)(v19 + 40);
      if (v20)
      {
        v21 = *(_QWORD *)(v19 + 32);
        v22 = OUTLINED_FUNCTION_10_3();
        OUTLINED_FUNCTION_109_0(v22, (SEL *)&selRef_safariAssistantSupportedCountries);
        if (v23)
        {
          v24 = sub_19A854CA4(v21, v20, v23);
          OUTLINED_FUNCTION_5_0();
          OUTLINED_FUNCTION_8_6();
          if ((v24 & 1) == 0)
            goto LABEL_20;
          v25 = *(_QWORD *)(v3 + v18);
          v26 = *(_QWORD *)(v25 + 24);
          if (!v26)
            goto LABEL_20;
          v27 = *(_QWORD *)(v25 + 16);
          v28 = OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_109_0(v28, (SEL *)&selRef_safariAssistantSupportedSystemLocales);
          if (v29)
          {
            v30 = sub_19A854CA4(v27, v26, v29);
            OUTLINED_FUNCTION_12_0();
            v31 = OUTLINED_FUNCTION_7();
            if ((v30 & 1) != 0)
            {
              if (!a2)
                goto LABEL_5;
              OUTLINED_FUNCTION_109_0(v31, (SEL *)&selRef_safariAssistantSupportedPageLanguages);
              if (v32)
              {
                v33 = sub_19A854CA4(a1, a2, v32);
                OUTLINED_FUNCTION_7();

                return (v33 & 1) != 0;
              }
            }
            goto LABEL_20;
          }
        }
        swift_bridgeObjectRelease();
      }
    }
  }
LABEL_20:

  return 0;
}

uint64_t sub_19A854CA4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_19A8C4E30();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_19A8C4E30() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

void sub_19A854D68(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  id v18;
  id v19;

  v3 = objc_msgSend(objc_allocWithZone((Class)_CPCBAEngagementFeedback), sel_init);
  if (v3)
  {
    v4 = v3;
    OUTLINED_FUNCTION_73_0(v3, sel_setQueryId_);
    v5 = sub_19A8C3DBC();
    sub_19A85BD60(v5, v6, v4, (SEL *)&selRef_setUrl_);
    sub_19A837418();
    v8 = v7;
    v18 = v4;
    sub_19A85BFEC((uint64_t)v8, (uint64_t)v18, a2);

    OUTLINED_FUNCTION_95_0(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
    OUTLINED_FUNCTION_26_1(v19);
  }
}

uint64_t sub_19A854ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_23_1(OBJC_IVAR___PARSessionSwiftInternal_lock);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR___PARSessionSwiftInternal__sampleClientTimingEventAllowlist);
  if (v5 && *(_BYTE *)(v2 + OBJC_IVAR___PARSessionSwiftInternal__sampled) == 1)
  {
    OUTLINED_FUNCTION_21();
    v6 = sub_19A854F5C(a1, a2, v5);
    OUTLINED_FUNCTION_7();
  }
  else
  {
    v6 = 0;
  }
  OUTLINED_FUNCTION_53_0();
  return v6 & 1;
}

uint64_t sub_19A854F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_19A8C4EA8();
    sub_19A8C4980();
    v6 = sub_19A8C4EC0();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_19A8C4E30() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_19A8C4E30() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

id PARSessionSwiftInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PARSessionSwiftInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_19A8550E8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  void *v69;
  uint64_t v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  NSObject *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  NSObject *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v4 = sub_19A8C3DF8();
  v97 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  v16 = MEMORY[0x1E0C80A78](v11, v12, v13, v14, v15);
  v96 = (uint64_t)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v16, v18, v19, v20, v21);
  v98 = (uint64_t)&v95 - v23;
  v28 = MEMORY[0x1E0C80A78](v22, v24, v25, v26, v27);
  v30 = (char *)&v95 - v29;
  v35 = MEMORY[0x1E0C80A78](v28, v31, v32, v33, v34);
  v37 = (char *)&v95 - v36;
  v42 = MEMORY[0x1E0C80A78](v35, v38, v39, v40, v41);
  v44 = (char *)&v95 - v43;
  v49 = MEMORY[0x1E0C80A78](v42, v45, v46, v47, v48);
  v51 = (char *)&v95 - v50;
  MEMORY[0x1E0C80A78](v49, v52, v53, v54, v55);
  v57 = (char *)&v95 - v56;
  objc_opt_self();
  v58 = swift_dynamicCastObjCClass();
  if (v58)
  {
    v59 = (void *)v58;
    if (a2)
    {
      v60 = a1;
      if (objc_msgSend(a2, sel_hasDarkAppearance))
      {
        v61 = objc_msgSend(v59, sel_darkUrlValue);
        if (v61)
        {
          v62 = v61;
          sub_19A8C3DD4();

          (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v51, v10, v4);
          __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v4);
          if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v4) != 1)
          {
            sub_19A841E78((uint64_t)v51, &qword_1ECFFDF70);
            v63 = objc_msgSend(v59, sel_darkUrlValue);
            if (v63)
            {
              v64 = v63;
              sub_19A8C3DD4();

              v65 = 0;
            }
            else
            {
              v65 = 1;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v44, v65, 1, v4);
            goto LABEL_16;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)v51, 1, 1, v4);
        }
        sub_19A841E78((uint64_t)v51, &qword_1ECFFDF70);
      }
    }
    else
    {
      v67 = a1;
    }
    v68 = objc_msgSend(v59, sel_urlValue);
    if (v68)
    {
      v69 = v68;
      sub_19A8C3DD4();

      v70 = 0;
    }
    else
    {
      v70 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v37, v70, 1, v4);
    v44 = v37;
LABEL_16:
    sub_19A85CC5C((uint64_t)v44, (uint64_t)v57);
    v71 = a1;
    sub_19A85BD04(v59, (SEL *)&selRef_identifier);
    v73 = v72;
    if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v4) == 1 && !v73)
    {
      if (qword_1ECFFE6A8 != -1)
        swift_once();
      v74 = sub_19A8C489C();
      __swift_project_value_buffer(v74, (uint64_t)qword_1ECFFE6B0);
      v75 = sub_19A8C4878();
      v76 = sub_19A8C4BE4();
      if (os_log_type_enabled(v75, v76))
      {
        v77 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v77 = 0;
        _os_log_impl(&dword_19A825000, v75, v76, "could not load image, no image identifier nor url", v77, 2u);
        MEMORY[0x19AECCDEC](v77, -1, -1);
        v78 = v71;
      }
      else
      {
        v78 = v75;
        v75 = v71;
      }

LABEL_39:
      v66 = 0;
      goto LABEL_40;
    }
    sub_19A85CCA4((uint64_t)v57, (uint64_t)v30, &qword_1ECFFDF70);
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v4) == 1)
    {
      sub_19A841E78((uint64_t)v30, &qword_1ECFFDF70);
    }
    else
    {
      sub_19A8C3DE0();
      v80 = v79;
      (*(void (**)(char *, uint64_t))(v97 + 8))(v30, v4);
      if (v80)
      {
        v81 = sub_19A8C49C8();
        swift_bridgeObjectRelease();
        if ((v81 & 1) != 0)
        {

          goto LABEL_38;
        }
      }
    }
    if (qword_1ECFFE6A8 != -1)
      swift_once();
    v82 = sub_19A8C489C();
    __swift_project_value_buffer(v82, (uint64_t)qword_1ECFFE6B0);
    v83 = v98;
    sub_19A85CCA4((uint64_t)v57, v98, &qword_1ECFFDF70);
    v84 = sub_19A8C4878();
    v85 = sub_19A8C4BCC();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)swift_slowAlloc();
      v87 = swift_slowAlloc();
      v100 = v87;
      *(_DWORD *)v86 = 136315138;
      v88 = v96;
      sub_19A85CCA4(v83, v96, &qword_1ECFFDF70);
      if (__swift_getEnumTagSinglePayload(v88, 1, v4) == 1)
      {
        sub_19A841E78(v88, &qword_1ECFFDF70);
        v89 = 0xE500000000000000;
        v90 = 0x296C696E28;
      }
      else
      {
        v95 = v71;
        v91 = v88;
        v90 = sub_19A8C3DBC();
        v89 = v92;
        v93 = v91;
        v71 = v95;
        (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v93, v4);
      }
      v99 = sub_19A844794(v90, v89, &v100);
      sub_19A8C4CC8();
      swift_bridgeObjectRelease();
      sub_19A841E78(v98, &qword_1ECFFDF70);
      _os_log_impl(&dword_19A825000, v84, v85, "could not load image, image url has invalid scheme: %s", v86, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19AECCDEC](v87, -1, -1);
      MEMORY[0x19AECCDEC](v86, -1, -1);

    }
    else
    {

      sub_19A841E78(v83, &qword_1ECFFDF70);
    }

    if (!v73)
      goto LABEL_39;
LABEL_38:
    swift_bridgeObjectRelease();
    v66 = 1;
LABEL_40:
    sub_19A841E78((uint64_t)v57, &qword_1ECFFDF70);
    return v66;
  }
  return 1;
}

BOOL PARSessionSwiftInternal.canLoad(_:context:)(void *a1, void *a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (objc_msgSend(a1, sel_source) > 1)
    return 0;
  sub_19A85BCA4(a1, (SEL *)&selRef_imageData);
  v6 = v5;
  sub_19A83334C(v7, v5);
  if (v6 >> 60 == 15)
  {
    if ((sub_19A8550E8(a1, a2) & 1) != 0)
      return *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR___PARSessionSwiftInternal_client)
                       + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_imageLoader) != 0;
    return 0;
  }
  return 1;
}

BOOL static PARSessionSwiftInternal.ImageLoadError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void PARSessionSwiftInternal.ImageLoadError.hash(into:)()
{
  sub_19A8C4EB4();
  OUTLINED_FUNCTION_40();
}

uint64_t PARSessionSwiftInternal.ImageLoadError.hashValue.getter()
{
  sub_19A8C4EA8();
  sub_19A8C4EB4();
  return sub_19A8C4EC0();
}

uint64_t PARSessionSwiftInternal.load(_:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_19A8C4830();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v5 = sub_19A8C480C();
  v3[9] = v5;
  v3[10] = *(_QWORD *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A8559B0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  _BYTE *v12;
  id v13;
  char *v15;
  char v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v21;
  NSObject *v22;
  os_signpost_type_t v23;
  void *v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27;
  os_signpost_id_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  os_signpost_type_t v38;

  if (objc_msgSend(*(id *)(v0 + 24), sel_source) >= 2)
  {
    sub_19A85BEF4();
    OUTLINED_FUNCTION_6_1();
    *v12 = 0;
    goto LABEL_20;
  }
  sub_19A85BCA4(*(void **)(v0 + 24), (SEL *)&selRef_imageData);
  v2 = v1;
  sub_19A83334C(v3, v1);
  if (v2 >> 60 != 15)
  {
    v4 = *(void **)(v0 + 32);
    if (!v4 || !objc_msgSend(v4, sel_ignoreImageDataCache))
    {
      v13 = *(id *)(v0 + 24);
      swift_task_dealloc();
      OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_27_0();
      OUTLINED_FUNCTION_35_1();
      __asm { BR              X1 }
    }
  }
  if ((sub_19A8550E8(*(void **)(v0 + 24), *(void **)(v0 + 32)) & 1) == 0)
  {
    sub_19A85BEF4();
    OUTLINED_FUNCTION_6_1();
    v16 = 1;
LABEL_19:
    *v15 = v16;
LABEL_20:
    swift_willThrow();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_35_1();
    __asm { BR              X0 }
  }
  v5 = *(NSObject **)(v0 + 40);
  v6 = *(_QWORD *)(*(char **)((char *)&v5->isa + OBJC_IVAR___PARSessionSwiftInternal_client)
                 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_imageLoader);
  *(_QWORD *)(v0 + 104) = v6;
  if (!v6)
  {
    if (qword_1ECFFE6A8 != -1)
      swift_once();
    v17 = OUTLINED_FUNCTION_15_2();
    OUTLINED_FUNCTION_22(v17, (uint64_t)qword_1ECFFE6B0);
    v18 = OUTLINED_FUNCTION_122();
    if (OUTLINED_FUNCTION_90_0(v5))
    {
      v19 = (uint8_t *)OUTLINED_FUNCTION_2();
      *(_WORD *)v19 = 0;
      OUTLINED_FUNCTION_33_0(&dword_19A825000, v5, v18, "could not load image, image loader is nil", v19);
      OUTLINED_FUNCTION_0_0();
    }

    sub_19A85BEF4();
    OUTLINED_FUNCTION_6_1();
    v16 = 2;
    goto LABEL_19;
  }
  v7 = qword_1ECFFE730;
  swift_retain();
  if (v7 != -1)
    swift_once();
  v8 = (id)qword_1ECFFEBE0;
  sub_19A8C47E8();
  v9 = v8;
  sub_19A8C4818();
  sub_19A827678();
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_timeoutIntervalForRequest);

  }
  v21 = *(id *)(v0 + 24);
  v22 = sub_19A8C4824();
  v23 = sub_19A8C4C44();
  if ((sub_19A8C4C80() & 1) != 0)
  {
    v24 = *(void **)(v0 + 24);
    (*(void (**)(void))(*(_QWORD *)(v0 + 80) + 16))();
    v38 = v23;
    v25 = (uint8_t *)OUTLINED_FUNCTION_2();
    v26 = (_QWORD *)OUTLINED_FUNCTION_2();
    *(_DWORD *)v25 = 138543362;
    *(_QWORD *)(v0 + 16) = v24;
    v27 = v24;
    sub_19A8C4CC8();
    *v26 = v24;

    v28 = sub_19A8C47F4();
    _os_signpost_emit_with_name_impl(&dword_19A825000, v22, v38, v28, "image_load", "image=%{public}@", v25, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE620);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0_0();
  }
  v29 = *(_QWORD *)(v0 + 80);
  v30 = *(void **)(v0 + 24);

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v29 + 16))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  sub_19A8C4860();
  OUTLINED_FUNCTION_82_0();
  *(_QWORD *)(v0 + 112) = sub_19A8C4854();
  v31 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v31;
  *v31 = v0;
  v31[1] = sub_19A855E10;
  OUTLINED_FUNCTION_35_1();
  return sub_19A84AF60(v32, v33, v34, v35, v36);
}

uint64_t sub_19A855E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[16] = a1;
  v4[17] = a2;
  v4[18] = v2;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A855E78()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((sub_19A8536D8(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136)) & 1) != 0)
    v1 = 0;
  else
    v1 = (void *)sub_19A8C3E28();
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v8 = *(void **)(v0 + 24);
  OUTLINED_FUNCTION_2_0(v8, sel_setImageData_);

  v9 = v8;
  sub_19A833360(v3, v2);
  sub_19A85602C(v5, v4, v9);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_15_1();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_19A855F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  sub_19A85602C(v4, *(_QWORD *)(v0 + 112), *(void **)(v0 + 24));
  OUTLINED_FUNCTION_66();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_27_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19A85602C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  id v25;
  NSObject *v26;
  int v27;
  uint64_t v28;
  char v29;
  char v30;
  const char *v31;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  id v36;
  os_signpost_id_t v37;
  os_log_t v38;
  void (*v39)(uint64_t, uint64_t);
  _BYTE v40[4];
  int v41;
  os_log_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;

  v44 = sub_19A8C483C();
  v4 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44, v5, v6, v7, v8);
  v10 = &v40[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_19A8C480C();
  v45 = *(_QWORD *)(v11 - 8);
  v16 = MEMORY[0x1E0C80A78](v11, v12, v13, v14, v15);
  v18 = &v40[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16, v19, v20, v21, v22);
  v24 = &v40[-v23];
  v25 = a3;
  v26 = sub_19A8C4824();
  sub_19A8C4848();
  v27 = sub_19A8C4C38();
  if ((sub_19A8C4C80() & 1) != 0)
  {
    v42 = v26;
    v43 = v25;
    v41 = v27;
    swift_retain();
    sub_19A8C486C();
    swift_release();
    v28 = v44;
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v4 + 88))(v10, v44) == *MEMORY[0x1E0DF2190])
    {
      v29 = 0;
      v30 = 0;
      v31 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v10, v28);
      v31 = "image=%{public}@";
      v30 = 2;
      v29 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v45 + 16))(v18, v24, v11);
    v33 = swift_slowAlloc();
    v34 = (_QWORD *)swift_slowAlloc();
    *(_BYTE *)v33 = v30;
    *(_BYTE *)(v33 + 1) = v29;
    *(_WORD *)(v33 + 2) = 2114;
    v44 = (uint64_t)v24;
    v35 = v43;
    v46 = v43;
    v36 = v43;
    sub_19A8C4CC8();
    *v34 = v35;

    v37 = sub_19A8C47F4();
    v38 = v42;
    _os_signpost_emit_with_name_impl(&dword_19A825000, v42, (os_signpost_type_t)v41, v37, "image_load", v31, (uint8_t *)v33, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE620);
    swift_arrayDestroy();
    MEMORY[0x19AECCDEC](v34, -1, -1);
    MEMORY[0x19AECCDEC](v33, -1, -1);

    v39 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v39(v44, v11);
    return ((uint64_t (*)(_BYTE *, uint64_t))v39)(v18, v11);
  }
  else
  {

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v45 + 8))(v24, v11);
  }
}

uint64_t sub_19A856384(void *a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  _QWORD *v10;

  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  v8 = a1;
  v9 = a2;
  a4;
  v10 = (_QWORD *)swift_task_alloc();
  v4[6] = v10;
  *v10 = v4;
  v10[1] = sub_19A856410;
  return PARSessionSwiftInternal.load(_:context:)((uint64_t)v8, (uint64_t)a2);
}

uint64_t sub_19A856410(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);
  void *v10;

  v3 = v1;
  v6 = *(void **)(*v2 + 24);
  v5 = *(void **)(*v2 + 32);
  v7 = *(void **)(*v2 + 16);
  v8 = *v2;
  swift_task_dealloc();

  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v8 + 40);
  if (v3)
  {
    v10 = (void *)sub_19A8C3D98();
    OUTLINED_FUNCTION_32_1();
    ((void (**)(_QWORD, _QWORD, void *))v9)[2](v9, 0, v10);

    _Block_release(v9);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v9)[2](v9, a1, 0);
    _Block_release(v9);

  }
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t sub_19A8564DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDEF0);
  MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19A8C4AC4();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a1;
  v12[5] = a2;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = &unk_1EE3B0BC0;
  v13[5] = v12;
  sub_19A85B14C((uint64_t)v10, (uint64_t)&unk_1EE3B0BD0, (uint64_t)v13);
  return swift_release();
}

Swift::Bool __swiftcall PARSessionSwiftInternal.canLoad(_:)(SFCard *a1)
{
  Swift::Bool result;

  if (-[SFCard source](a1, sel_source) == 1)
    -[SFCard type](a1, sel_type);
  OUTLINED_FUNCTION_40();
  return result;
}

void sub_19A856650(void *a1, char *a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id *v32;
  uint64_t v33;
  uint64_t i;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  id v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  void *v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  void *v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  uint64_t v76;
  void *v77;
  id v78;
  uint64_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  id v83;
  id v84;
  uint64_t v85;
  id v86;
  void *v87;
  void (*v88)(char *, char *, uint64_t);
  void *v89;
  void *v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  os_log_type_t v96;
  uint8_t *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  char *v105;
  id v106;
  uint64_t aBlock;
  uint64_t v108;
  uint64_t (*v109)(uint64_t, uint64_t, void *);
  void *v110;
  uint64_t (*v111)();
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  MEMORY[0x1E0C80A78](v6, v7, v8, v9, v10);
  v12 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19A8C3DF8();
  v14 = *(_QWORD *)(v13 - 8);
  v19 = MEMORY[0x1E0C80A78](v13, v15, v16, v17, v18);
  v21 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v22, v23, v24, v25);
  v27 = (char *)&v101 - v26;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a3;
  _Block_copy(a3);
  _Block_copy(a3);
  v106 = a1;
  sub_19A82755C(a1, (SEL *)&selRef_cardSections);
  if (!v29)
  {
LABEL_37:
    objc_opt_self();
    v63 = v106;
    v64 = swift_dynamicCastObjCClass();
    if (v64)
    {
      (*((void (**)(char *, uint64_t, _QWORD))a3 + 2))(a3, v64, 0);
      swift_release();
LABEL_66:
      _Block_release(a3);
      _Block_release(a3);
      return;
    }
    v105 = a2;
    v65 = objc_msgSend(v63, sel_drilldownMetadata);

    if (v65)
    {
      v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C710]), sel_init);
      objc_msgSend(v66, sel_setCard_, v63);
      v67 = objc_msgSend(v63, sel_drilldownMetadata);
      if (!v67
        || (v68 = v67,
            v69 = objc_msgSend(v67, sel_cardSearchMetadata),
            v68,
            !v69)
        || (sub_19A85BD04(v69, (SEL *)&selRef_searchQuery), !v70))
      {
        swift_bridgeObjectRelease();
      }
      v71 = (void *)objc_opt_self();
      v72 = objc_msgSend(v63, sel_queryId);
      v73 = (void *)sub_19A8C4938();
      swift_bridgeObjectRelease();
      v74 = objc_msgSend(v71, sel_searchRequestWithCommand_triggerEvent_queryId_queryString_, v66, 14, v72, v73);

      if (v74)
      {

LABEL_46:
        objc_opt_self();
        v75 = v106;
        v76 = swift_dynamicCastObjCClass();
        if (v76)
        {
          v77 = (void *)v76;
          v78 = v75;
          objc_msgSend(v77, sel_scale);
          objc_msgSend(v74, sel_setScale_);

        }
        v79 = *(_QWORD *)&v105[OBJC_IVAR___PARSessionSwiftInternal_client];
        sub_19A837418();
        v81 = v80;
        v82 = swift_allocObject();
        swift_unknownObjectWeakInit();
        _Block_copy(a3);
        v83 = v75;
        swift_retain();
        swift_retain();
        v84 = v74;
        sub_19A85F9A4((uint64_t)v81, (uint64_t)v84, v79, (uint64_t)v83, v82, (uint64_t)v84, (uint64_t)a3, v85, v101, v102, (uint64_t)v103, v104, (uint64_t)v105, (uint64_t)v106, aBlock, v108, (uint64_t)v109, (uint64_t)v110, (uint64_t)v111,
          (uint64_t)v112,
          v113,
          v114);
        swift_release();

        swift_release_n();
        goto LABEL_66;
      }
      if (qword_1ECFFE6A8 != -1)
        swift_once();
      v91 = sub_19A8C489C();
      __swift_project_value_buffer(v91, (uint64_t)qword_1ECFFE6B0);
      v92 = sub_19A8C4878();
      v93 = sub_19A8C4BE4();
      if (!os_log_type_enabled(v92, v93))
      {
        swift_release();

        goto LABEL_66;
      }
      v94 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v94 = 0;
      _os_log_impl(&dword_19A825000, v92, v93, "could not create search request for card", v94, 2u);
      MEMORY[0x19AECCDEC](v94, -1, -1);
      swift_release();

LABEL_64:
      goto LABEL_66;
    }
    v86 = objc_msgSend(v63, sel_urlValue);
    if (v86)
    {
      v87 = v86;
      sub_19A8C3DD4();

      v88 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v88(v12, v21, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v13);
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) != 1)
      {
        v88(v27, v12, v13);
        v89 = (void *)objc_opt_self();
        v90 = (void *)sub_19A8C3DC8();
        v74 = objc_msgSend(v89, sel_cardRequestWithURL_queryId_, v90, objc_msgSend(v63, sel_queryId));

        (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v13);
        if (v74)
          goto LABEL_46;
        goto LABEL_59;
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v13);
    }
    sub_19A841E78((uint64_t)v12, &qword_1ECFFDF70);
LABEL_59:
    if (qword_1ECFFE6A8 != -1)
      swift_once();
    v95 = sub_19A8C489C();
    __swift_project_value_buffer(v95, (uint64_t)qword_1ECFFE6B0);
    v92 = sub_19A8C4878();
    v96 = sub_19A8C4BE4();
    if (os_log_type_enabled(v92, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v97 = 0;
      _os_log_impl(&dword_19A825000, v92, v96, "could not create card request", v97, 2u);
      MEMORY[0x19AECCDEC](v97, -1, -1);
    }
    swift_release();
    goto LABEL_64;
  }
  v30 = v29;
  v105 = a3;
  if (!(v29 >> 62))
  {
    v31 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v31)
      goto LABEL_4;
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  v31 = sub_19A8C4DF4();
  if (!v31)
  {
LABEL_36:
    swift_bridgeObjectRelease_n();
    a3 = v105;
    goto LABEL_37;
  }
LABEL_4:
  v104 = v28;
  sub_19A844EFC(0, (v30 & 0xC000000000000001) == 0, v30);
  if ((v30 & 0xC000000000000001) != 0)
    v32 = (id *)MEMORY[0x19AECC324](0, v30);
  else
    v32 = (id *)*(id *)(v30 + 32);
  v33 = (uint64_t)v32;
  swift_bridgeObjectRelease();
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    swift_bridgeObjectRelease();

    a3 = v105;
    goto LABEL_37;
  }

  objc_msgSend(v106, sel_copy);
  sub_19A8C4D10();
  swift_unknownObjectRelease();
  sub_19A8275AC(0, (unint64_t *)&qword_1EE3B0280);
  swift_dynamicCast();
  v103 = (void *)v114;
  v114 = MEMORY[0x1E0DEE9D8];
  if (v31 < 1)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v31; ++i)
    {
      if ((v30 & 0xC000000000000001) != 0)
        v35 = (id)MEMORY[0x19AECC324](i, v30);
      else
        v35 = *(id *)(v30 + 8 * i + 32);
      v36 = v35;
      objc_msgSend(v35, sel_copy);
      sub_19A8C4D10();
      swift_unknownObjectRelease();
      sub_19A8275AC(0, &qword_1EE3B0268);
      if ((swift_dynamicCast() & 1) == 0)
        v113 = 0;

      if (v113)
      {
        MEMORY[0x19AECBFC4]();
        if (*(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_19A8C4A40();
        sub_19A8C4A58();
        sub_19A8C4A34();
      }
    }
    swift_bridgeObjectRelease();
    v37 = v114;
    swift_bridgeObjectRelease();
    v38 = v103;
    sub_19A85BB40(v37, v103);
    sub_19A82755C(v38, (SEL *)&selRef_cardSections);
    if (!v39)
    {
      v99 = v105;
      _Block_release(v105);
      _Block_release(v99);
      __break(1u);
      goto LABEL_73;
    }
    v33 = v39;
    if (!(v39 >> 62))
    {
      if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_22;
LABEL_70:
      v98 = v105;
      _Block_release(v105);
      _Block_release(v98);
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_71;
    }
  }
  if (!sub_19A8C4DF4())
    goto LABEL_70;
LABEL_22:
  sub_19A844EFC(0, (v33 & 0xC000000000000001) == 0, v33);
  if ((v33 & 0xC000000000000001) == 0)
  {
    v40 = *(id *)(v33 + 32);
    goto LABEL_24;
  }
LABEL_71:
  v40 = (id)MEMORY[0x19AECC324](0, v33);
LABEL_24:
  v41 = v40;
  swift_bridgeObjectRelease();
  objc_opt_self();
  v42 = (void *)swift_dynamicCastObjCClassUnconditional();
  sub_19A85BCA4(v42, (SEL *)&selRef_mapsData);
  v44 = v43;
  v46 = v45;
  v47 = 0;
  if (v45 >> 60 != 15)
    v47 = (void *)sub_19A8C3E28();
  v48 = (id)GEOCompletionItemFromSerializedAutocompleteEntry();

  if (v48)
  {
    v49 = (void *)objc_opt_self();
    v50 = objc_msgSend(v49, sel_sharedService);
    v51 = objc_msgSend(v50, sel_defaultTraits);

    if (v51)
      objc_msgSend(v51, sel_setWantsBrandIcon_, 1);
    v52 = objc_msgSend(v49, sel_sharedService);
    if (v52
      && (v53 = v52,
          v54 = sub_19A85BBB0(0, 0xE000000000000000, (uint64_t)v48, 1, (uint64_t)v51, v52),
          v53,
          v54))
    {
      v55 = (_QWORD *)swift_allocObject();
      v57 = v103;
      v56 = v104;
      v55[2] = sub_19A85CCE0;
      v55[3] = v56;
      v102 = v44;
      v58 = v106;
      v55[4] = v106;
      v55[5] = v42;
      v55[6] = v57;
      v111 = sub_19A85BF50;
      v112 = v55;
      aBlock = MEMORY[0x1E0C809B0];
      v108 = 1107296256;
      v109 = sub_19A857F90;
      v110 = &block_descriptor_60;
      v59 = _Block_copy(&aBlock);
      v60 = v58;
      swift_retain();
      swift_unknownObjectRetain();
      v61 = v41;
      v62 = v57;
      swift_release();
      objc_msgSend(v54, sel_submitWithHandler_networkActivity_, v59, 0);
      sub_19A83334C(v102, v46);

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease();

      _Block_release(v59);
      swift_release();
    }
    else
    {
      sub_19A83334C(v44, v46);
      swift_release();

      swift_unknownObjectRelease();
    }
    a3 = v105;
    goto LABEL_66;
  }
LABEL_73:
  v100 = v105;
  _Block_release(v105);
  _Block_release(v100);
  __break(1u);
}

void PARSessionSwiftInternal.load(_:completionHandler:)(id a1, void (*a2)(uint64_t, _QWORD), uint64_t a3)
{
  NSObject *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  unint64_t v50;
  unint64_t v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  _QWORD *v60;
  NSObject *v61;
  uint64_t v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  NSObject *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  uint64_t v76;
  void *v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  uint64_t v82;
  void *v83;
  void *v84;
  uint64_t v85;
  id v86;
  id v87;
  id v88;
  void *v89;
  void (*v90)(uint64_t, char *, uint64_t);
  uint64_t v91;
  void *v92;
  uint64_t v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  id v103;
  NSObject *v104;
  id v105;
  uint64_t aBlock;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, uint64_t, void *);
  void *v109;
  uint64_t (*v110)();
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  MEMORY[0x1E0C80A78](v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_18();
  v14 = v13 - v12;
  v15 = sub_19A8C3DF8();
  v16 = *(_QWORD *)(v15 - 8);
  v21 = MEMORY[0x1E0C80A78](v15, v17, v18, v19, v20);
  v23 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21, v24, v25, v26, v27);
  v29 = (char *)&v100 - v28;
  sub_19A82755C(a1, (SEL *)&selRef_cardSections);
  if (!v30)
  {
LABEL_37:
    v102 = v29;
    v68 = v16;
    v104 = v3;
    objc_opt_self();
    if (OUTLINED_FUNCTION_85_0())
    {
      v105 = OUTLINED_FUNCTION_106_0();
      a2(v16, 0);
LABEL_39:
      OUTLINED_FUNCTION_18_0(v105);
      return;
    }
    v69 = OUTLINED_FUNCTION_46_1(0, sel_drilldownMetadata);

    if (v69)
    {
      v71 = (uint64_t)a2;
      v72 = a3;
      v105 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C710]), sel_init);
      v73 = OUTLINED_FUNCTION_46_1((uint64_t)objc_msgSend(v105, sel_setCard_, a1), sel_drilldownMetadata);
      if (!v73
        || (v74 = v73,
            v75 = objc_msgSend(v73, sel_cardSearchMetadata),
            v74,
            !v75)
        || (sub_19A85BD04(v75, (SEL *)&selRef_searchQuery), !v76))
      {
        swift_bridgeObjectRelease();
      }
      v77 = (void *)objc_opt_self();
      v78 = objc_msgSend(a1, sel_queryId);
      v79 = (void *)sub_19A8C4938();
      OUTLINED_FUNCTION_10();
      v80 = objc_msgSend(v77, sel_searchRequestWithCommand_triggerEvent_queryId_queryString_, v105, 14, v78, v79);

      if (!v80)
      {
        if (qword_1ECFFE6A8 != -1)
          swift_once();
        v93 = OUTLINED_FUNCTION_15_2();
        v104 = OUTLINED_FUNCTION_22(v93, (uint64_t)qword_1ECFFE6B0);
        v94 = sub_19A8C4BE4();
        if (OUTLINED_FUNCTION_90_0(v104))
        {
          v95 = (uint8_t *)OUTLINED_FUNCTION_2();
          *(_WORD *)v95 = 0;
          OUTLINED_FUNCTION_33_0(&dword_19A825000, v104, v94, "could not create search request for card", v95);
          OUTLINED_FUNCTION_0_0();
        }

        goto LABEL_39;
      }

LABEL_47:
      objc_opt_self();
      if (OUTLINED_FUNCTION_85_0())
      {
        v81 = OUTLINED_FUNCTION_106_0();
        objc_msgSend(v77, sel_scale);
        objc_msgSend(v80, sel_setScale_);

      }
      v82 = *(uint64_t *)((char *)&v104->isa + OBJC_IVAR___PARSessionSwiftInternal_client);
      sub_19A837418();
      v84 = v83;
      v85 = OUTLINED_FUNCTION_3_0();
      swift_unknownObjectWeakInit();
      swift_retain();
      v86 = a1;
      swift_retain();
      v87 = v80;
      sub_19A85FED8((uint64_t)v84, (uint64_t)v87, v82, v71, v72, (uint64_t)v86, v85, (uint64_t)v87, v100, v101, (uint64_t)v102, (uint64_t)v103, (uint64_t)v104, (uint64_t)v105, aBlock, v107, (uint64_t)v108, (uint64_t)v109, (uint64_t)v110,
        (uint64_t)v111,
        v112,
        v113);
      swift_release();

      goto LABEL_65;
    }
    v88 = OUTLINED_FUNCTION_46_1(v70, sel_urlValue);
    if (v88)
    {
      v89 = v88;
      sub_19A8C3DD4();

      v90 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 32);
      v90(v14, v23, v15);
      OUTLINED_FUNCTION_44(v14, 0);
      if (__swift_getEnumTagSinglePayload(v14, 1, v15) != 1)
      {
        v71 = (uint64_t)a2;
        v72 = a3;
        v91 = (uint64_t)v102;
        v90((uint64_t)v102, (char *)v14, v15);
        v77 = (void *)objc_opt_self();
        v92 = (void *)sub_19A8C3DC8();
        v80 = objc_msgSend(v77, sel_cardRequestWithURL_queryId_, v92, objc_msgSend(a1, sel_queryId));

        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v91, v15);
        if (v80)
          goto LABEL_47;
LABEL_60:
        if (qword_1ECFFE6A8 != -1)
          swift_once();
        v96 = OUTLINED_FUNCTION_15_2();
        v97 = OUTLINED_FUNCTION_22(v96, (uint64_t)qword_1ECFFE6B0);
        v98 = sub_19A8C4BE4();
        if (os_log_type_enabled(v97, v98))
        {
          v99 = (uint8_t *)OUTLINED_FUNCTION_2();
          *(_WORD *)v99 = 0;
          OUTLINED_FUNCTION_33_0(&dword_19A825000, v97, v98, "could not create card request", v99);
          OUTLINED_FUNCTION_0_0();
        }

        goto LABEL_65;
      }
    }
    else
    {
      OUTLINED_FUNCTION_44(v14, 1);
    }
    sub_19A841E78(v14, &qword_1ECFFDF70);
    goto LABEL_60;
  }
  v31 = v30;
  v105 = a2;
  if (!(v30 >> 62))
  {
    v32 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_8_0();
    if (v32)
      goto LABEL_4;
LABEL_35:
    OUTLINED_FUNCTION_19_0();
    goto LABEL_36;
  }
  OUTLINED_FUNCTION_8_0();
  v32 = sub_19A8C4DF4();
  if (!v32)
    goto LABEL_35;
LABEL_4:
  v103 = a1;
  v101 = a3;
  sub_19A844EFC(0, (v31 & 0xC000000000000001) == 0, v31);
  if ((v31 & 0xC000000000000001) != 0)
    v33 = (id)MEMORY[0x19AECC324](0, v31);
  else
    v33 = *(id *)(v31 + 32);
  v34 = (uint64_t)v33;
  OUTLINED_FUNCTION_5_0();
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    OUTLINED_FUNCTION_5_0();

    a3 = v101;
    a1 = v103;
LABEL_36:
    a2 = (void (*)(uint64_t, _QWORD))v105;
    goto LABEL_37;
  }

  objc_msgSend(v103, sel_copy);
  OUTLINED_FUNCTION_107_0();
  v35 = OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_42_1(v35, (unint64_t *)&qword_1EE3B0280);
  swift_dynamicCast();
  v104 = v113;
  v113 = MEMORY[0x1E0DEE9D8];
  if (v32 < 1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_8_0();
    v36 = 0;
    v34 = 0x1E0D8C218uLL;
    do
    {
      if ((v31 & 0xC000000000000001) != 0)
        v37 = (id)MEMORY[0x19AECC324](v36, v31);
      else
        v37 = *(id *)(v31 + 8 * v36 + 32);
      v38 = v37;
      objc_msgSend(v37, sel_copy);
      OUTLINED_FUNCTION_107_0();
      OUTLINED_FUNCTION_71();
      sub_19A8275AC(0, &qword_1EE3B0268);
      if ((swift_dynamicCast() & 1) == 0)
        v112 = 0;

      if (v112)
      {
        MEMORY[0x19AECBFC4]();
        if (*(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_19A8C4A40();
        sub_19A8C4A58();
        sub_19A8C4A34();
      }
      ++v36;
    }
    while (v32 != v36);
    OUTLINED_FUNCTION_5_0();
    v39 = v113;
    OUTLINED_FUNCTION_5_0();
    v40 = v39;
    v41 = v104;
    sub_19A85BB40(v40, v104);
    sub_19A82755C(v41, (SEL *)&selRef_cardSections);
    if (!v42)
    {
      __break(1u);
      goto LABEL_73;
    }
    OUTLINED_FUNCTION_37_1();
    if (!v44)
    {
      if (*(_QWORD *)(v43 + 16))
        goto LABEL_22;
LABEL_70:
      OUTLINED_FUNCTION_7();
      __break(1u);
      goto LABEL_71;
    }
  }
  if (!sub_19A8C4DF4())
    goto LABEL_70;
LABEL_22:
  sub_19A844EFC(0, (v34 & 0xC000000000000001) == 0, v34);
  if ((v34 & 0xC000000000000001) == 0)
  {
    v45 = *(id *)(v34 + 32);
    goto LABEL_24;
  }
LABEL_71:
  v45 = (id)MEMORY[0x19AECC324](0, v34);
LABEL_24:
  v46 = v45;
  OUTLINED_FUNCTION_7();
  objc_opt_self();
  v47 = (void *)swift_dynamicCastObjCClassUnconditional();
  sub_19A85BCA4(v47, (SEL *)&selRef_mapsData);
  v49 = v48;
  v51 = v50;
  v52 = 0;
  if (v50 >> 60 != 15)
    v52 = (void *)sub_19A8C3E28();
  v53 = (id)GEOCompletionItemFromSerializedAutocompleteEntry();

  if (v53)
  {
    v54 = objc_msgSend((id)objc_opt_self(), sel_sharedService);
    v55 = objc_msgSend(v54, sel_defaultTraits);

    if (v55)
      v56 = objc_msgSend(v55, sel_setWantsBrandIcon_, 1);
    v57 = OUTLINED_FUNCTION_30_1((uint64_t)v56, sel_sharedService);
    if (v57
      && (v58 = v57,
          v59 = sub_19A85BBB0(0, 0xE000000000000000, (uint64_t)v53, 1, (uint64_t)v55, v57),
          v58,
          v59))
    {
      v60 = (_QWORD *)OUTLINED_FUNCTION_3_0();
      v61 = v104;
      v62 = v101;
      v60[2] = v105;
      v60[3] = v62;
      v105 = v49;
      v63 = v103;
      v60[4] = v103;
      v60[5] = v47;
      v60[6] = v61;
      v110 = sub_19A85BF50;
      v111 = v60;
      aBlock = MEMORY[0x1E0C809B0];
      v107 = 1107296256;
      v108 = sub_19A857F90;
      v109 = &block_descriptor_8;
      v64 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_retain();
      v65 = v63;
      v66 = v46;
      v67 = v61;
      swift_release();
      objc_msgSend(v59, sel_submitWithHandler_networkActivity_, v64, 0);
      sub_19A83334C((uint64_t)v105, v51);

      OUTLINED_FUNCTION_84_0();
      swift_unknownObjectRelease();

      _Block_release(v64);
    }
    else
    {
      sub_19A83334C((uint64_t)v49, v51);

      swift_unknownObjectRelease();
    }
LABEL_65:
    OUTLINED_FUNCTION_0_2();
    return;
  }
LABEL_73:
  __break(1u);
}

uint64_t sub_19A857C7C(unint64_t a1, void *a2, uint64_t (*a3)(uint64_t, void *), uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;

  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      if (sub_19A8C4DF4())
        goto LABEL_4;
    }
    else
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_4:
        sub_19A844F40(0, (a1 & 0xC000000000000001) == 0, a1);
        if ((a1 & 0xC000000000000001) != 0)
          MEMORY[0x19AECC324](0, a1);
        else
          swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        v14 = objc_msgSend((id)swift_unknownObjectRetain(), sel_encodedData);
        if (v14)
        {
          v15 = sub_19A8C3E40();
          v17 = v16;

          v14 = (id)sub_19A8C3E28();
          sub_19A833360(v15, v17);
        }
        objc_msgSend(a6, sel_setMapsData_, v14);

        a3(a7, 0);
        return swift_unknownObjectRelease_n();
      }
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ECFFE6A8 != -1)
    swift_once();
  v19 = sub_19A8C489C();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ECFFE6B0);
  v20 = a2;
  v21 = a2;
  v22 = sub_19A8C4878();
  v23 = sub_19A8C4BE4();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v29 = v25;
    *(_DWORD *)v24 = 136315138;
    if (a2)
    {
      swift_getErrorValue();
      v26 = sub_19A8C4E6C();
      v28 = v27;
    }
    else
    {
      v28 = 0xE800000000000000;
      v26 = 0x726F727265206F6ELL;
    }
    sub_19A844794(v26, v28, &v29);
    sub_19A8C4CC8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_19A825000, v22, v23, "loadCard failed: did not get back a GEOMapItem %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19AECCDEC](v25, -1, -1);
    MEMORY[0x19AECCDEC](v24, -1, -1);
  }
  else
  {

  }
  return a3(a5, a2);
}

uint64_t sub_19A857F90(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE3B0270);
    v4 = sub_19A8C4A1C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_19A858010(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t), uint64_t a5, void *a6, uint64_t a7, void *a8)
{
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;

  v13 = a7 + 16;
  OUTLINED_FUNCTION_28_1();
  v14 = MEMORY[0x19AECCEAC](v13);
  if (v14)
  {
    v15 = (void *)v14;
    if (a2)
    {
      v16 = objc_allocWithZone((Class)PARTask);
      v17 = a2;
      v18 = OUTLINED_FUNCTION_118((uint64_t)v17, sel_init);
      sub_19A8580DC(v18, (uint64_t)v15, a8, v17, a6);

    }
  }
  return a4(a6, a3);
}

void sub_19A8580DC(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  void *v9;
  char v10;
  id v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;

  v9 = (void *)MEMORY[0x19AECCEAC](a2 + OBJC_IVAR___PARSessionSwiftInternal_session);
  objc_msgSend(a1, sel_setSession_, v9);

  objc_msgSend(a4, sel_scale);
  objc_msgSend(a3, sel_setScale_);
  objc_msgSend(a1, sel_setRequest_, a3);
  sub_19A85497C((uint64_t)objc_msgSend(a4, sel_setTask_, a1));
  if ((v10 & 1) != 0)
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_responseFromReply_, a4);
  }
  else
  {
    objc_msgSend(a3, sel_responseClass);
    swift_getObjCClassMetadata();
    v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_responseFromReply_, a4);
  }
  v12 = v11;
  v13 = v12;
  if (!v12)
    goto LABEL_13;
  sub_19A85BC4C(v12, (SEL *)&selRef_results);
  if (!v14)
    goto LABEL_13;
  v15 = v14;
  if (!(v14 >> 62))
  {
    if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
LABEL_15:
    v20 = 0;
    goto LABEL_16;
  }
  if (!sub_19A8C4DF4())
    goto LABEL_15;
LABEL_8:
  sub_19A844F40(0, (v15 & 0xC000000000000001) == 0, v15);
  if ((v15 & 0xC000000000000001) != 0)
    v16 = (id)MEMORY[0x19AECC324](0, v15);
  else
    v16 = *(id *)(v15 + 32);
  v17 = v16;
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v17, sel_card);

  if (v18)
  {
    sub_19A85BC4C(v18, (SEL *)&selRef_cardSections);
    if (v19)
    {
      sub_19A8275AC(0, &qword_1EE3B0268);
      v20 = (void *)sub_19A8C4A10();
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
LABEL_13:
  v20 = 0;
LABEL_17:
  objc_msgSend(a5, sel_setCardSections_, v20);

  if (!v13)
    goto LABEL_25;
  sub_19A85BC4C(v13, (SEL *)&selRef_results);
  if (!v21)
    goto LABEL_25;
  v22 = v21;
  if (!(v21 >> 62))
  {
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_21;
LABEL_27:
    v26 = 0;
    goto LABEL_28;
  }
  if (!sub_19A8C4DF4())
    goto LABEL_27;
LABEL_21:
  sub_19A844F40(0, (v22 & 0xC000000000000001) == 0, v22);
  if ((v22 & 0xC000000000000001) != 0)
    v23 = (id)MEMORY[0x19AECC324](0, v22);
  else
    v23 = *(id *)(v22 + 32);
  v24 = v23;
  swift_bridgeObjectRelease();
  sub_19A85BD04(v24, (SEL *)&selRef_fbr);
  if (v25)
  {
    v26 = (void *)sub_19A8C4938();
LABEL_28:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
LABEL_25:
  v26 = 0;
LABEL_29:
  objc_msgSend(a5, sel_setFbr_, v26);

}

Swift::Bool __swiftcall PARSessionSwiftInternal.canLoad(_:)(SFMoreResults a1)
{
  Swift::Bool result;

  objc_opt_self();
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_40();
  return result;
}

#error "19A85862C: call analysis failed (funcsize=149)"

#error "19A858858: call analysis failed (funcsize=119)"

uint64_t sub_19A858894(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v11 = a6 + 16;
  v19 = 0;
  OUTLINED_FUNCTION_28_1();
  v12 = (void *)MEMORY[0x19AECCEAC](v11);
  if (v12)
  {
    v13 = v12;
    if (a2)
    {
      v14 = objc_allocWithZone((Class)PARTask);
      v15 = a2;
      v16 = OUTLINED_FUNCTION_46_1((uint64_t)v15, sel_init);
      sub_19A858984(v16, (uint64_t)v13, a7, v15, &v19);

      v17 = swift_bridgeObjectRetain();
      a4((void *)v17, a3);
      return OUTLINED_FUNCTION_19_0();
    }

    v12 = 0;
  }
  return a4(v12, a3);
}

uint64_t sub_19A858984(void *a1, uint64_t a2, void *a3, void *a4, uint64_t *a5)
{
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;

  v9 = (void *)MEMORY[0x19AECCEAC](a2 + OBJC_IVAR___PARSessionSwiftInternal_session);
  objc_msgSend(a1, sel_setSession_, v9);

  objc_msgSend(a4, sel_scale);
  objc_msgSend(a3, sel_setScale_);
  objc_msgSend(a1, sel_setRequest_, a3);
  objc_msgSend(a4, sel_setTask_, a1);
  v10 = objc_msgSend((id)objc_opt_self(), sel_responseFromReply_, a4);
  if (!v10)
    goto LABEL_5;
  v11 = v10;
  v12 = objc_msgSend(v10, sel_results);
  if (!v12)
  {

LABEL_5:
    v14 = 0;
    goto LABEL_6;
  }
  v13 = v12;
  sub_19A8275AC(0, &qword_1ECFFDE58);
  v14 = sub_19A8C4A1C();

LABEL_6:
  *a5 = v14;
  return swift_bridgeObjectRelease();
}

void sub_19A858AD4(void *a1, int a2, void *a3, void *aBlock, void (*a5)(uint64_t))
{
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;

  v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  v9 = a3;
  v10 = a1;
  v11 = OUTLINED_FUNCTION_87_0();
  a5(v11);
  _Block_release(v8);

  OUTLINED_FUNCTION_12(v12);
}

void sub_19A858B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  void *v7;

  v5 = (void *)a1;
  if (a1)
  {
    OUTLINED_FUNCTION_42_1(a1, &qword_1ECFFDE58);
    v5 = (void *)sub_19A8C4A10();
  }
  if (a2)
    v6 = sub_19A8C3D98();
  else
    v6 = 0;
  v7 = (void *)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

  OUTLINED_FUNCTION_12(v7);
}

void PARSessionSwiftInternal.send(_:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  NSObject *v3;
  NSObject *v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  id v29;
  NSObject *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = v3;
  sub_19A85BCA4(a1, (SEL *)&selRef_data);
  if (v9 >> 60 == 15)
  {
    if (qword_1ECFFE6A8 != -1)
      swift_once();
    v10 = OUTLINED_FUNCTION_15_2();
    OUTLINED_FUNCTION_22(v10, (uint64_t)qword_1ECFFE6B0);
    v11 = OUTLINED_FUNCTION_122();
    if (os_log_type_enabled(v3, v11))
    {
      v12 = (uint8_t *)OUTLINED_FUNCTION_2();
      *(_WORD *)v12 = 0;
      OUTLINED_FUNCTION_33_0(&dword_19A825000, v3, v11, "SFCustomFeedback contained no payload", v12);
      OUTLINED_FUNCTION_0_0();
    }

    if (a2)
      OUTLINED_FUNCTION_121();
    return;
  }
  v13 = v8;
  v14 = v9;
  if (sub_19A8C3E4C() < 1)
  {
    if (qword_1ECFFE6A8 == -1)
    {
LABEL_14:
      v31 = OUTLINED_FUNCTION_15_2();
      OUTLINED_FUNCTION_22(v31, (uint64_t)qword_1ECFFE6B0);
      v32 = OUTLINED_FUNCTION_122();
      if (os_log_type_enabled(v3, v32))
      {
        v33 = (uint8_t *)OUTLINED_FUNCTION_2();
        *(_WORD *)v33 = 0;
        OUTLINED_FUNCTION_33_0(&dword_19A825000, v3, v32, "SFCustomFeedback contained no data", v33);
        OUTLINED_FUNCTION_0_0();
      }

      if (a2)
        OUTLINED_FUNCTION_121();
      sub_19A83334C(v13, v14);
      return;
    }
LABEL_25:
    swift_once();
    goto LABEL_14;
  }
  v15 = os_transaction_create();
  v16 = (uint64_t)OUTLINED_FUNCTION_118(v15, sel_feedbackType);
  if (v16 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  v38 = v16;
  v17 = *(void **)(*(char **)((char *)&v3->isa + OBJC_IVAR___PARSessionSwiftInternal_client)
                 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
  v18 = OUTLINED_FUNCTION_3_0();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  v19 = OUTLINED_FUNCTION_100((uint64_t)sub_19A8591A4, v34, v36, v38, v41, MEMORY[0x1E0C809B0], 1107296256, v43, v45);
  v20 = v17;
  OUTLINED_FUNCTION_105_0();
  swift_release();
  v21 = OUTLINED_FUNCTION_2_0(v20, sel_synchronousRemoteObjectProxyWithErrorHandler_);
  _Block_release(v19);

  sub_19A8C4D10();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  v22 = swift_dynamicCast();
  if ((_DWORD)v22)
  {
    v23 = (unint64_t)OUTLINED_FUNCTION_118(v22, sel_feedbackType);
    if (v23 >> 31)
    {
      __break(1u);
      return;
    }
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE118);
    OUTLINED_FUNCTION_82_0();
    v25 = (_QWORD *)swift_retain();
    v26 = sub_19A853C5C(v25, 3, 0, v24);
    v27 = (_QWORD *)OUTLINED_FUNCTION_3_0();
    v27[2] = v15;
    v27[3] = a2;
    v27[4] = a3;
    v27[5] = v26;
    v27[6] = a1;
    v27[7] = v4;
    v28 = OUTLINED_FUNCTION_100((uint64_t)sub_19A859B18, v35, v42, v39, v42, MEMORY[0x1E0C809B0], 1107296256, v44, v46);
    OUTLINED_FUNCTION_105_0();
    swift_unknownObjectRetain();
    swift_retain();
    v29 = a1;
    v30 = v4;
    swift_release();
    objc_msgSend(v37, sel_fileHandleForWritingFeedbackType_reply_, v40, v28);
    _Block_release(v28);
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_71();
    OUTLINED_FUNCTION_66();
  }
  else
  {
    if (a2)
      OUTLINED_FUNCTION_121();
    swift_unknownObjectRelease();
  }
  sub_19A83334C(v13, v14);
}

void sub_19A858FD0(void *a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_1ECFFE6A8 != -1)
    swift_once();
  v4 = sub_19A8C489C();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ECFFE6B0);
  v5 = a1;
  v6 = a1;
  v7 = sub_19A8C4878();
  v8 = sub_19A8C4BE4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue();
    v11 = sub_19A8C4E6C();
    sub_19A844794(v11, v12, &v14);
    sub_19A8C4CC8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_19A825000, v7, v8, "sendCustomFeedback failed: no remote proxy %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19AECCDEC](v10, -1, -1);
    MEMORY[0x19AECCDEC](v9, -1, -1);
  }
  else
  {

  }
  if (a2)
    a2(v13);
}

void sub_19A8591A4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_12(v4);
}

void sub_19A8591E4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v11;
  void *v12;
  __CFString *v13;
  id v14;
  id v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  _BYTE *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  id aBlock;
  uint64_t v31;
  id (*v32)(uint64_t);
  void *v33;
  uint64_t (*v34)();
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  if (!a1)
  {
    sub_19A85CB60();
    v20 = (void *)swift_allocError();
    *v21 = 5;
    sub_19A853CA0(v20);

    if (!a4)
      return;
    goto LABEL_14;
  }
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a7;
  v34 = sub_19A85CBB8;
  v35 = v11;
  aBlock = (id)MEMORY[0x1E0C809B0];
  v31 = 1107296256;
  v32 = sub_19A8597A8;
  v33 = &block_descriptor_92;
  v12 = _Block_copy(&aBlock);
  v13 = CFSTR("com.apple.parsecd.session");
  v14 = a7;
  v15 = a1;
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v12);

  sub_19A85BCA4(v14, (SEL *)&selRef_data);
  if (v17 >> 60 == 15)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  v18 = (uint64_t)v16;
  v19 = v17;
  aBlock = v16;
  v31 = v17;
  sub_19A85CBC0();
  sub_19A8C4BB4();
  sub_19A83334C(v18, v19);
  sub_19A85BCA4(v14, (SEL *)&selRef_data);
  if (v23 >> 60 == 15)
    goto LABEL_17;
  v24 = v22;
  v25 = v23;
  v26 = sub_19A8C3E4C();
  sub_19A83334C(v24, v25);
  sub_19A853C80(v26);
  aBlock = 0;
  if (objc_msgSend(v15, sel_closeAndReturnError_, &aBlock))
  {
    v27 = aBlock;
  }
  else
  {
    v28 = aBlock;
    v29 = (void *)sub_19A8C3DA4();

    swift_willThrow();
  }
  if (objc_msgSend(v14, sel_feedbackType) == (id)10 || objc_msgSend(v14, sel_feedbackType) == (id)19)
  {
    sub_19A8C4944();
    sub_19A85982C(a3);
    swift_bridgeObjectRelease();
  }

  if (a4)
LABEL_14:
    a4();
}

uint64_t sub_19A859704(void *a1)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE148);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19A8CE860;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  objc_msgSend(a1, sel_feedbackType);
  *(_QWORD *)(inited + 48) = sub_19A8C4CBC();
  sub_19A8275AC(0, (unint64_t *)&qword_1ECFFE910);
  return sub_19A8C4908();
}

id sub_19A8597A8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_19A8275AC(0, (unint64_t *)&qword_1ECFFE910);
    v4 = (void *)sub_19A8C48E4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

void sub_19A85982C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t aBlock;
  uint64_t v17;
  void *v18;
  void *v19;
  void (*v20)();
  uint64_t v21;

  sub_19A8275AC(0, &qword_1ECFFEAC0);
  sub_19A841CA0(0xD000000000000014, 0x800000019A8D0E40, 0);
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EE3DDDF8);
  objc_msgSend(v3, sel_setRemoteObjectInterface_, v4);

  objc_msgSend(v3, sel_resume);
  v20 = sub_19A859C3C;
  v21 = 0;
  v5 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v17 = 1107296256;
  v18 = sub_19A8591A4;
  v19 = &block_descriptor_95;
  v6 = _Block_copy(&aBlock);
  v7 = objc_msgSend(v3, sel_remoteObjectProxyWithErrorHandler_, v6);
  _Block_release(v6);
  sub_19A8C4D10();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0BF8);
  if (swift_dynamicCast())
  {
    v8 = sub_19A8C4938();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a1;
    v20 = (void (*)())nullsub_1;
    v21 = v9;
    aBlock = v5;
    v17 = 1107296256;
    v18 = sub_19A82737C;
    v19 = &block_descriptor_101;
    v10 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v15, sel_flushCustomFeedbackType_completion_, v8, v10);
    _Block_release(v10);

    swift_unknownObjectRelease();
    v3 = (void *)v8;
  }
  else
  {
    if (qword_1ECFFE6A8 != -1)
      swift_once();
    v11 = sub_19A8C489C();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ECFFE6B0);
    v12 = sub_19A8C4878();
    v13 = sub_19A8C4BE4();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_19A825000, v12, v13, "scheduling eager flush failed: couldn't get FBFDaemonXPC", v14, 2u);
      MEMORY[0x19AECCDEC](v14, -1, -1);
    }

  }
}

void sub_19A859B18(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_19A859C3C()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_1ECFFE6A8 != -1)
    swift_once();
  v0 = sub_19A8C489C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECFFE6B0);
  oslog = sub_19A8C4878();
  v1 = sub_19A8C4BE4();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_19A825000, oslog, v1, "scheduling eager flush failed: couldn't get remote proxy", v2, 2u);
    MEMORY[0x19AECCDEC](v2, -1, -1);
  }

}

uint64_t sub_19A859D08()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECFFE5A0);
  __swift_allocate_value_buffer(v0, qword_1ECFFEBC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECFFEBC8);
  return sub_19A8C46EC();
}

uint64_t sub_19A859D78(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = MEMORY[0x1E0DEAC20];
  v8[4] = MEMORY[0x1E0CB1AA8];
  v8[0] = a1;
  v8[1] = a2;
  v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x1E0DEAC20]);
  v3 = *v2;
  if (*v2 && (v4 = v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      v6 = sub_19A8C3E04();
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      v6 = MEMORY[0x19AECB3D0]();
    }
    else
    {
      v6 = MEMORY[0x19AECB3DC]();
    }
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  return v6;
}

id PARSessionSwiftInternal.send(_:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_send_completion_, a1, 0);
}

unint64_t _s10CoreParsec23PARSessionSwiftInternalC19searchViewDidAppearyySo08SFSearchgI8FeedbackCF_0(void *a1)
{
  void *v1;
  unint64_t result;

  result = (unint64_t)objc_msgSend(a1, sel_queryId);
  if ((result & 0x8000000000000000) == 0)
    return (unint64_t)objc_msgSend(v1, sel_reportFeedback_queryId_, a1, result);
  __break(1u);
  return result;
}

void PARSessionSwiftInternal.didSkipSearch(_:input:queryId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  void *v9;
  void *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  id v20;
  id v21;

  objc_allocWithZone((Class)_CPSkipSearchFeedback);
  swift_bridgeObjectRetain();
  v8 = sub_19A85B034(a1, a2, a3);
  sub_19A837418();
  v10 = v9;
  v20 = v8;
  sub_19A85BFEC((uint64_t)v10, (uint64_t)v20, a4);

  OUTLINED_FUNCTION_95_0(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  OUTLINED_FUNCTION_26_1(v21);
}

Swift::Void __swiftcall PARSessionSwiftInternal.addCompletion(_:forInput:)(Swift::String _, Swift::String forInput)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  object = forInput._object;
  countAndFlagsBits = forInput._countAndFlagsBits;
  v5 = _._object;
  v6 = _._countAndFlagsBits;
  v7 = sub_19A8C3EA0();
  MEMORY[0x1E0C80A78](v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_69_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDF60);
  v12 = OUTLINED_FUNCTION_3_0();
  *(_OWORD *)(v12 + 16) = xmmword_19A8CEFE0;
  OUTLINED_FUNCTION_42_1(v12, (unint64_t *)&unk_1ECFFDFF0);
  OUTLINED_FUNCTION_21();
  swift_bridgeObjectRetain();
  sub_19A8C3E94();
  *(_QWORD *)(v12 + 32) = PAREngagedResult.init(_:searchString:type:engagemementTime:)(v6, (uint64_t)v5, countAndFlagsBits, (uint64_t)object, 1, v2);
  sub_19A8C4A34();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDF50);
  v13 = (void *)sub_19A8C4A10();
  v14 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_104_0(v14, sel_addEngagedResults_);

}

void PARSessionSwiftInternal.clearEngagements(from:to:)()
{
  sub_19A86360C();
  OUTLINED_FUNCTION_40();
}

Swift::Void __swiftcall PARSessionSwiftInternal.clearEngagements(withTitle:type:)(Swift::String withTitle, NSNumber_optional type)
{
  sub_19A863758(withTitle._countAndFlagsBits, (uint64_t)withTitle._object, (uint64_t)type.value.super.super.isa);
  OUTLINED_FUNCTION_40();
}

Swift::Void __swiftcall PARSessionSwiftInternal.updateParameters(forSmartSearchV1:smartSearchV2:)(PARSmartSearchV1Parameters *forSmartSearchV1, PARSmartSearchV2Parameters *smartSearchV2)
{
  sub_19A863B74((uint64_t)forSmartSearchV1, (uint64_t)smartSearchV2);
  OUTLINED_FUNCTION_40();
}

Swift::Void __swiftcall PARSessionSwiftInternal.addEngagedResults(_:)(Swift::OpaquePointer a1)
{
  void *v1;
  void *v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDF50);
  v2 = (void *)sub_19A8C4A10();
  objc_msgSend(v1, sel_addEngagedResults_completion_, v2, 0);
  OUTLINED_FUNCTION_3_4(v2);
}

void PARSessionSwiftInternal.addEngagedResults(_:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;

  OUTLINED_FUNCTION_60_0();
  v13 = MEMORY[0x1E0DEE9D8];
  if (v3 >> 62)
  {
    OUTLINED_FUNCTION_7_6();
    v5 = OUTLINED_FUNCTION_64_0();
    v4 = v5;
    if (v5)
      goto LABEL_3;
LABEL_12:
    OUTLINED_FUNCTION_8_6();
    v6 = MEMORY[0x1E0DEE9D8];
    goto LABEL_13;
  }
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = OUTLINED_FUNCTION_10_3();
  if (!v4)
    goto LABEL_12;
LABEL_3:
  OUTLINED_FUNCTION_42_1(v5, (unint64_t *)&unk_1ECFFDFF0);
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_57_0();
  do
  {
    if (v0)
      OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_63_0();
    swift_getObjectType();
    if (OUTLINED_FUNCTION_66_0())
      OUTLINED_FUNCTION_83_0();
    ++v2;
  }
  while (v4 != v2);
  OUTLINED_FUNCTION_8_6();
  v6 = v13;
LABEL_13:
  if (v6 >> 62)
  {
    OUTLINED_FUNCTION_7_6();
    v11 = OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_8_6();
    if (v11)
      goto LABEL_15;
  }
  else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_15:
    sub_19A837418();
    v7 = OUTLINED_FUNCTION_48_0();
    sub_19A8627AC(v7, v8, v9, v10);
    OUTLINED_FUNCTION_8_6();
    OUTLINED_FUNCTION_16_2(v12);
    return;
  }
  swift_bridgeObjectRelease();
}

void PARSessionSwiftInternal.topEngagedResults(for:maxCount:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_19A85A7E0(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))sub_19A862B94);
}

void sub_19A85A74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *aBlock, void (*a6)(uint64_t, uint64_t, uint64_t, void *, uint64_t, void *))
{
  uint64_t v11;
  void *v12;
  void *v13;

  v11 = *(_QWORD *)(a4 + OBJC_IVAR___PARSessionSwiftInternal_client);
  _Block_copy(aBlock);
  sub_19A837418();
  v13 = v12;
  a6(a1, a2, a3, v12, v11, aBlock);

  _Block_release(aBlock);
}

void PARSessionSwiftInternal.allEngagedResults(for:maxCount:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_19A85A7E0(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))sub_19A8631F4);
}

void sub_19A85A7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))
{
  void *v12;
  id v13;

  sub_19A837418();
  v13 = v12;
  a6(a1, a2, a3, v12, a4, a5);

}

uint64_t sub_19A85A874(void *a1, int a2, int a3, uint64_t a4, void *aBlock, void (*a6)(uint64_t, uint64_t, uint64_t, void *, uint64_t, void *))
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v9 = _Block_copy(aBlock);
  v10 = sub_19A8C4944();
  v12 = v11;
  _Block_copy(v9);
  v13 = a1;
  sub_19A85A74C(v10, v12, a4, (uint64_t)v13, v9, a6);
  _Block_release(v9);

  return swift_bridgeObjectRelease();
}

void PARSessionSwiftInternal.clearEngagedResults(_:completion:)()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  void (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;

  OUTLINED_FUNCTION_60_0();
  v15 = MEMORY[0x1E0DEE9D8];
  if (v5 >> 62)
  {
    OUTLINED_FUNCTION_7_6();
    v7 = OUTLINED_FUNCTION_64_0();
    v6 = v7;
    if (v7)
      goto LABEL_3;
LABEL_12:
    OUTLINED_FUNCTION_8_6();
    v8 = MEMORY[0x1E0DEE9D8];
    goto LABEL_13;
  }
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = OUTLINED_FUNCTION_10_3();
  if (!v6)
    goto LABEL_12;
LABEL_3:
  OUTLINED_FUNCTION_42_1(v7, (unint64_t *)&unk_1ECFFDFF0);
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_57_0();
  do
  {
    if (v0)
      OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_63_0();
    swift_getObjectType();
    if (OUTLINED_FUNCTION_66_0())
      OUTLINED_FUNCTION_83_0();
    ++v4;
  }
  while (v6 != v4);
  OUTLINED_FUNCTION_8_6();
  v8 = v15;
  v1 = v2;
LABEL_13:
  if (v8 >> 62)
  {
    OUTLINED_FUNCTION_7_6();
    v13 = OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_8_6();
    if (v13)
      goto LABEL_15;
  }
  else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_15:
    sub_19A837418();
    v9 = OUTLINED_FUNCTION_48_0();
    sub_19A86381C(v9, v10, v11, v12);
    OUTLINED_FUNCTION_8_6();
    OUTLINED_FUNCTION_16_2(v14);
    return;
  }
  OUTLINED_FUNCTION_8_6();
  if (v1)
    v1(0);
}

#error "19A85AB40: call analysis failed (funcsize=9)"

void sub_19A85AB68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void (*v4)(uint64_t);
  void *v5;

  if (a2)
    sub_19A8C3D98();
  v2 = OUTLINED_FUNCTION_72_0();
  v5 = v3;
  v4(v2);
  OUTLINED_FUNCTION_3_4(v5);
}

#error "19A85ABCC: call analysis failed (funcsize=9)"

#error "19A85AC0C: call analysis failed (funcsize=9)"

uint64_t sub_19A85AC34(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(id, uint64_t, uint64_t))
{
  void *v11;
  uint64_t v12;
  id v13;
  id v14;

  v11 = _Block_copy(aBlock);
  v12 = OUTLINED_FUNCTION_3_0();
  *(_QWORD *)(v12 + 16) = v11;
  v13 = a3;
  v14 = a1;
  a7(v13, a6, v12);

  return swift_release();
}

uint64_t PARSession.load(_:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return swift_task_switch();
}

uint64_t sub_19A85ACDC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _BYTE *v9;

  v1 = objc_msgSend(*(id *)(v0 + 144), sel_imageLoader);
  *(_QWORD *)(v0 + 152) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 136);
    if (objc_msgSend(v1, sel_canLoadImage_context_, *(_QWORD *)(v0 + 128), v2))
    {
      type metadata accessor for PARSessionSwiftInternal();
      v3 = swift_dynamicCastClass();
      if (v3)
      {
        v4 = (void *)v3;
        v5 = *(_QWORD *)(v0 + 128);
        *(_QWORD *)(v0 + 56) = v0 + 120;
        *(_QWORD *)(v0 + 16) = v0;
        *(_QWORD *)(v0 + 24) = sub_19A85AE2C;
        v6 = swift_continuation_init();
        *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
        v7 = (_QWORD *)(v0 + 80);
        v7[1] = 0x40000000;
        v7[2] = sub_19A85AF00;
        v7[3] = &block_descriptor_22;
        v7[4] = v6;
        swift_unknownObjectRetain();
        objc_msgSend(v4, sel_loadImage_context_completionHandler_, v5, v2, v7);
        return swift_continuation_await();
      }
    }
    OUTLINED_FUNCTION_71();
  }
  sub_19A85BEF4();
  OUTLINED_FUNCTION_6_1();
  *v9 = 1;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19A85AE2C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_19A85AE84()
{
  uint64_t v0;

  OUTLINED_FUNCTION_84_0();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_19A85AEBC()
{
  uint64_t v0;

  swift_willThrow();
  OUTLINED_FUNCTION_84_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19A85AF00(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
    return sub_19A85AF4C(v3, (uint64_t)a3);
  if (a2)
    return sub_19A85AF9C(v3, (uint64_t)a2);
  __break(1u);
  return result;
}

uint64_t sub_19A85AF4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE150);
  swift_allocError();
  *v3 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_19A85AF9C(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

id sub_19A85AFAC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  void *v5;
  id v8;

  if (a3 >> 60 == 15)
  {
    v5 = 0;
  }
  else
  {
    v5 = (void *)sub_19A8C3E28();
    sub_19A83334C(a2, a3);
  }
  v8 = objc_msgSend(v3, sel_initWithType_data_, a1, v5);

  return v8;
}

id sub_19A85B034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;

  if (a3)
  {
    v5 = (void *)sub_19A8C4938();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(v3, sel_initWithTriggerEvent_input_, a1, v5);

  return v6;
}

uint64_t sub_19A85B0A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_19A85CCE8;
  return v6();
}

uint64_t sub_19A85B0F8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_19A85CCE8;
  return v7();
}

uint64_t sub_19A85B14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_19A8C4AC4();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_19A841E78(a1, &qword_1ECFFDEF0);
  }
  else
  {
    sub_19A8C4AB8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19A8C4A88();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_19A85B290(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19A85B2F4;
  return v6(a1);
}

uint64_t sub_19A85B2F4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_29_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_19A85B31C(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_19A85B338()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0C68);
  v3 = sub_19A8C4D34();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_19A8C4EA8();
      sub_19A8C4980();
      result = sub_19A8C4EC0();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_19A85B31C(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void *sub_19A85B610()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0C68);
  v2 = *v0;
  v3 = sub_19A8C4D28();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_19A85B7C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0C68);
  v3 = sub_19A8C4D34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_19A8C4EA8();
    swift_bridgeObjectRetain();
    sub_19A8C4980();
    result = sub_19A8C4EC0();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_19A85BA68(void *a1)
{
  sub_19A82755C(a1, (SEL *)&selRef_cardSections);
}

void sub_19A85BA84(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_data);

  if (v2)
  {
    sub_19A8C3E40();
    OUTLINED_FUNCTION_54_0();
  }
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_37();
}

void sub_19A85BADC(void *a1)
{
  sub_19A82755C(a1, (SEL *)&selRef_results);
}

void sub_19A85BAF8(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = OUTLINED_FUNCTION_43_1(a1, a2);
  if (v2)
  {
    v3 = v2;
    sub_19A8C4A1C();

  }
  OUTLINED_FUNCTION_40();
}

void sub_19A85BB40(uint64_t a1, void *a2)
{
  id v3;

  sub_19A8275AC(0, &qword_1EE3B0268);
  v3 = (id)sub_19A8C4A10();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setCardSections_, v3);

}

id sub_19A85BBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v10;
  id v11;

  v10 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a6, sel_ticketForSearchQuery_completionItem_maxResults_traits_, v10, a3, a4, a5);

  return v11;
}

void sub_19A85BC30(void *a1)
{
  sub_19A85BC4C(a1, (SEL *)&selRef_cardSections);
}

void sub_19A85BC4C(void *a1, SEL *a2)
{
  id v3;

  v3 = OUTLINED_FUNCTION_43_1(a1, a2);

  if (v3)
  {
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_86_0();

  }
  OUTLINED_FUNCTION_37();
}

void sub_19A85BCA4(void *a1, SEL *a2)
{
  if (OUTLINED_FUNCTION_43_1(a1, a2))
  {
    sub_19A8C3E40();
    OUTLINED_FUNCTION_54_0();
  }
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_37();
}

void sub_19A85BCE8(void *a1)
{
  sub_19A85BC4C(a1, (SEL *)&selRef_results);
}

void sub_19A85BD04(void *a1, SEL *a2)
{
  id v3;

  v3 = OUTLINED_FUNCTION_43_1(a1, a2);

  if (v3)
  {
    sub_19A8C4944();

  }
  OUTLINED_FUNCTION_37();
}

void sub_19A85BD60(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  void *v6;

  v6 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);
  OUTLINED_FUNCTION_12(v6);
}

void sub_19A85BDAC(uint64_t a1, unint64_t a2, void *a3)
{
  id v6;

  v6 = (id)sub_19A8C3E28();
  sub_19A833360(a1, a2);
  objc_msgSend(a3, sel_setUuidBytes_, v6);

}

void sub_19A85BE0C(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  sub_19A85BE84(v6, a2, a3);
  v6[4] = v7;
  OUTLINED_FUNCTION_37();
}

void sub_19A85BE58(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_19A85BE84(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  id v7;

  v6 = a3 & 0xC000000000000001;
  sub_19A844F40(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6)
    v7 = (id)MEMORY[0x19AECC324](a2, a3);
  else
    v7 = *(id *)(a3 + 8 * a2 + 32);
  *a1 = v7;
  OUTLINED_FUNCTION_37();
}

void sub_19A85BEE8(id *a1)
{

}

unint64_t sub_19A85BEF4()
{
  unint64_t result;

  result = qword_1EE3B0998;
  if (!qword_1EE3B0998)
  {
    result = MEMORY[0x19AECCD38](&protocol conformance descriptor for PARSessionSwiftInternal.ImageLoadError, &type metadata for PARSessionSwiftInternal.ImageLoadError);
    atomic_store(result, (unint64_t *)&qword_1EE3B0998);
  }
  return result;
}

uint64_t sub_19A85BF30()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_41_1();
  return swift_deallocObject();
}

uint64_t sub_19A85BF54()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    OUTLINED_FUNCTION_117();
  return swift_deallocObject();
}

void sub_19A85BF7C(void *a1)
{
  uint64_t v1;

  sub_19A858FD0(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_19A85BF84(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_19A85BF94()
{
  uint64_t v0;

  OUTLINED_FUNCTION_77();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_19A85BFDC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_19A8591E4(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48));
}

void sub_19A85BFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  os_log_type_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;

  v5 = sub_19A8C480C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10);
  OUTLINED_FUNCTION_18();
  v13 = v12 - v11;
  v14 = OUTLINED_FUNCTION_2_0(objc_allocWithZone((Class)_CPFeedbackPayload), sel_initWithCodable_);
  if (v14)
  {
    v15 = v14;
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v16 = OUTLINED_FUNCTION_15_2();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ECFFE9F0);
    v17 = v15;
    v18 = (void *)sub_19A8C4878();
    v19 = sub_19A8C4BD8();
    if (OUTLINED_FUNCTION_65(v19))
    {
      v20 = OUTLINED_FUNCTION_2();
      v45 = OUTLINED_FUNCTION_2();
      v47 = v45;
      *(_DWORD *)v20 = 136315394;
      v21 = OUTLINED_FUNCTION_17_2(v45, sel_debugDescription);
      v22 = sub_19A8C4944();
      v24 = v23;

      sub_19A844794(v22, v24, &v47);
      sub_19A8C4CC8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2048;
      sub_19A8C4CC8();
      OUTLINED_FUNCTION_47_0(&dword_19A825000, v25, v26, "reportFeedback(%s, %llu)");
      OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_0_0();
    }

    v30 = sub_19A83327C();
    if (!v30)
    {

      goto LABEL_17;
    }
    v31 = (void *)v30;
    sub_19A8C4C50();
    if (qword_1ECFFE730 != -1)
      swift_once();
    sub_19A8C4800();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v32 = v13;
    v33 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v33 + 16) = xmmword_19A8CE8E0;
    v34 = objc_msgSend(v17, sel_type);
    v35 = MEMORY[0x1E0DEDC38];
    *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEDBC8];
    *(_QWORD *)(v33 + 64) = v35;
    v36 = MEMORY[0x1E0DEE190];
    *(_DWORD *)(v33 + 32) = v34;
    v37 = MEMORY[0x1E0DEE1F0];
    *(_QWORD *)(v33 + 96) = v36;
    *(_QWORD *)(v33 + 104) = v37;
    *(_QWORD *)(v33 + 72) = a3;
    sub_19A8C47C4();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v32, v5);
    v38 = a3;
    v39 = v17;
    sub_19A85BA84(v39);
    if (v41 >> 60 != 15)
    {
      v42 = v40;
      v43 = v41;
      v44 = (void *)sub_19A8C3E28();
      sub_19A83334C(v42, v43);
      objc_msgSend(v31, sel_reportFeedback_payloadData_queryId_, a1, v44, v38);

      swift_unknownObjectRelease();
LABEL_17:
      OUTLINED_FUNCTION_0_2();
      return;
    }
    __break(1u);
  }
  else
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v27 = OUTLINED_FUNCTION_15_2();
    v46 = OUTLINED_FUNCTION_22(v27, (uint64_t)qword_1ECFFE9F0);
    v28 = sub_19A8C4BE4();
    if (OUTLINED_FUNCTION_90_0(v46))
    {
      v29 = (uint8_t *)OUTLINED_FUNCTION_2();
      *(_WORD *)v29 = 0;
      OUTLINED_FUNCTION_33_0(&dword_19A825000, v46, v28, "nil feedback payload", v29);
      OUTLINED_FUNCTION_0_0();
    }
    OUTLINED_FUNCTION_18_0(v46);
  }
}

unint64_t sub_19A85C438()
{
  unint64_t result;

  result = qword_1EE3B0A08;
  if (!qword_1EE3B0A08)
  {
    result = MEMORY[0x19AECCD38](&protocol conformance descriptor for PARSessionSwiftInternal.ImageLoadError, &type metadata for PARSessionSwiftInternal.ImageLoadError);
    atomic_store(result, (unint64_t *)&qword_1EE3B0A08);
  }
  return result;
}

void sub_19A85C474()
{
  sub_19A853E1C();
}

void sub_19A85C48C(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  OUTLINED_FUNCTION_40();
}

void sub_19A85C49C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_19A837418();
  *a1 = v2;
  OUTLINED_FUNCTION_40();
}

void sub_19A85C4C4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_19A827678();
  *a1 = v2;
  OUTLINED_FUNCTION_40();
}

uint64_t method lookup function for PARSessionSwiftInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.configuration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.configuration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.configuration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.bag.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.bag.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.bag.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.connection.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.__allocating_init(session:configuration:connection:delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.start()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.task(with:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.load(task:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.fileHandleAndAttributes(forResource:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.enabledStatus.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.safariAssistantEnabledStatus(forPageLanguage:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.safariAssistantEnabledStatus()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of PARSessionSwiftInternal.sendCBAEngagementFeedback(_:query:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x228))();
}

uint64_t getEnumTagSinglePayload for PARSessionSwiftInternal.ImageLoadError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PARSessionSwiftInternal.ImageLoadError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19A85C7CC + 4 * byte_19A8CEE89[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19A85C800 + 4 * byte_19A8CEE84[v4]))();
}

uint64_t sub_19A85C800(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19A85C808(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19A85C810);
  return result;
}

uint64_t sub_19A85C81C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19A85C824);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19A85C828(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19A85C830(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PARSessionSwiftInternal.ImageLoadError()
{
  return &type metadata for PARSessionSwiftInternal.ImageLoadError;
}

uint64_t sub_19A85C84C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_41_1();
  return swift_deallocObject();
}

void sub_19A85C868(uint64_t a1, uint64_t a2)
{
  sub_19A85AB68(a1, a2);
}

void sub_19A85C880(uint64_t a1)
{
  uint64_t v1;

  sub_19A85D084(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_19A85C888(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_19A85C898()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t objectdestroy_4Tm()
{
  id *v0;

  OUTLINED_FUNCTION_117();

  return swift_deallocObject();
}

uint64_t sub_19A85C8E0(unint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_19A857C7C(a1, a2, *(uint64_t (**)(uint64_t, void *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_19A85C8F0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_19A85C92C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_29_1(v1, (uint64_t)sub_19A85C978);
  return OUTLINED_FUNCTION_25_1(v2, v3, v4, v5, v6);
}

uint64_t sub_19A85C978()
{
  uint64_t v0;

  OUTLINED_FUNCTION_29_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19A85C9A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_29_1(v1, (uint64_t)sub_19A85CCE8);
  return OUTLINED_FUNCTION_25_1(v2, v3, v4, v5, v6);
}

uint64_t objectdestroy_66Tm()
{
  OUTLINED_FUNCTION_77();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19A85CA20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_19A85CCE8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE3B0BC8 + dword_1EE3B0BC8))(a1, v4, v5, v6);
}

uint64_t sub_19A85CAA4()
{
  OUTLINED_FUNCTION_117();
  return swift_deallocObject();
}

uint64_t sub_19A85CAC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19A84F4D8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE3B0BD8 + dword_1EE3B0BD8))(a1, v4);
}

void sub_19A85CB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_19A854734(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_19A85CB3C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

unint64_t sub_19A85CB60()
{
  unint64_t result;

  result = qword_1EE3B0BF0;
  if (!qword_1EE3B0BF0)
  {
    result = MEMORY[0x19AECCD38](&unk_19A8CEC80, &unk_1E391FB50);
    atomic_store(result, (unint64_t *)&qword_1EE3B0BF0);
  }
  return result;
}

uint64_t sub_19A85CB9C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_41_1();
  return swift_deallocObject();
}

uint64_t sub_19A85CBB8()
{
  uint64_t v0;

  return sub_19A859704(*(void **)(v0 + 16));
}

unint64_t sub_19A85CBC0()
{
  unint64_t result;

  result = qword_1ECFFE128;
  if (!qword_1ECFFE128)
  {
    result = MEMORY[0x19AECCD38](MEMORY[0x1E0CB0310], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ECFFE128);
  }
  return result;
}

uint64_t sub_19A85CBFC()
{
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_41_1();
  return swift_deallocObject();
}

uint64_t sub_19A85CC14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDFB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_19A85CC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_19A85CCA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(a3);
  v3 = OUTLINED_FUNCTION_72_0();
  v4(v3);
  OUTLINED_FUNCTION_40();
}

uint64_t OUTLINED_FUNCTION_8_6()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_23_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + a1));
}

uint64_t OUTLINED_FUNCTION_29_1@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void OUTLINED_FUNCTION_32_1()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_34_1()
{
  return sub_19A8C4A40();
}

void OUTLINED_FUNCTION_39_1(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;

  v3 = *(void **)(v2 + a2);
  *(_QWORD *)(v2 + a2) = a1;

}

id OUTLINED_FUNCTION_46_1(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_51_0()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_53_0()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

id OUTLINED_FUNCTION_55_0(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_59_0()
{
  JUMPOUT(0x19AECC324);
}

void OUTLINED_FUNCTION_61_0(uint64_t a1@<X8>)
{
  uint64_t v1;

}

uint64_t OUTLINED_FUNCTION_63_0()
{
  return swift_unknownObjectRetain();
}

void OUTLINED_FUNCTION_67_0()
{
  JUMPOUT(0x19AECCEACLL);
}

uint64_t OUTLINED_FUNCTION_71()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_76()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_77_0()
{
  unint64_t *v0;

  sub_19A8275AC(0, v0);
}

void OUTLINED_FUNCTION_78()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_83_0()
{
  JUMPOUT(0x19AECBFC4);
}

uint64_t OUTLINED_FUNCTION_84_0()
{
  return swift_unknownObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_85_0()
{
  return swift_dynamicCastObjCClass();
}

uint64_t OUTLINED_FUNCTION_86_0()
{
  return sub_19A8C4A1C();
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_88_0()
{
  return swift_dynamicCastObjCClass();
}

BOOL OUTLINED_FUNCTION_90_0(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

void OUTLINED_FUNCTION_99_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + a1));
}

uint64_t OUTLINED_FUNCTION_103_0()
{
  return sub_19A8C4DF4();
}

id OUTLINED_FUNCTION_104_0(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_105_0()
{
  uint64_t v0;

  return sub_19A85BF84(v0);
}

id OUTLINED_FUNCTION_106_0()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_107_0()
{
  return sub_19A8C4D10();
}

uint64_t OUTLINED_FUNCTION_108_0()
{
  return nw_activity_create();
}

void OUTLINED_FUNCTION_109_0(uint64_t a1, SEL *a2)
{
  void *v2;

  sub_19A85BAF8(v2, a2);
}

uint64_t OUTLINED_FUNCTION_111@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

id OUTLINED_FUNCTION_113()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1);
}

id OUTLINED_FUNCTION_118(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

id OUTLINED_FUNCTION_119(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(a1, (SEL)(v2 + 3912), v1);
}

uint64_t OUTLINED_FUNCTION_120()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_121()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_122()
{
  return sub_19A8C4BE4();
}

uint64_t OUTLINED_FUNCTION_123()
{
  return sub_19A8C4944();
}

id OUTLINED_FUNCTION_124()
{
  uint64_t v0;

  return *(id *)(v0 - 224);
}

void PARSearchClient.__allocating_init(connection:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  PARSearchClient.init(connection:)();
  OUTLINED_FUNCTION_40();
}

void sub_19A85D084(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_19A8C3D98();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_19A85D0D0(uint64_t a1, uint64_t a2)
{
  id v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDF50);
  v3 = (id)sub_19A8C4A10();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);

}

#error "19A85D1E8: call analysis failed (funcsize=89)"

#error "19A85D380: call analysis failed (funcsize=89)"

#error "19A85D518: call analysis failed (funcsize=89)"

uint64_t sub_19A85D5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for WeakBox(0, a2, a3, a4);
  return sub_19A8C4A28();
}

void sub_19A85D61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for WeakBox(0, a2, a3, a4);
  JUMPOUT(0x19AECC030);
}

uint64_t sub_19A85D648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[8];

  v4 = OUTLINED_FUNCTION_94_1(a1, a2, a3, a4);
  OUTLINED_FUNCTION_187();
  sub_19A8C4A7C();
  v5 = MEMORY[0x19AECCEAC](v7);
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v7, v4);
  return v5;
}

uint64_t sub_19A85D6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_94_1(a1, a2, a3, a4);
  OUTLINED_FUNCTION_187();
  return sub_19A8C4A64();
}

uint64_t sub_19A85D6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t result;

  result = sub_19A85D5F0(*v4, *(_QWORD *)(a1 + 16), a2, a3);
  *a4 = result;
  return result;
}

void sub_19A85D700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_19A85D61C(*v4, *(_QWORD *)(a1 + 16), a3, a4);
}

uint64_t sub_19A85D720(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

void (*sub_19A85D730(uint64_t **a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v3;
  uint64_t *v7;
  uint64_t (*v8)();
  uint64_t v9;

  v7 = (uint64_t *)malloc(0x30uLL);
  *a1 = v7;
  v8 = sub_19A85D7C0(v7, *a2, *v3, *(_QWORD *)(a3 + 16));
  v7[4] = v9;
  v7[5] = (uint64_t)v8;
  return sub_19A85D794;
}

void sub_19A85D794(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 40))(*a1);
  free(v1);
}

uint64_t (*sub_19A85D7C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  *a1 = sub_19A85D648(a2, a3, a4, a4);
  return sub_19A85D7FC;
}

uint64_t sub_19A85D7FC()
{
  return swift_unknownObjectRelease();
}

void sub_19A85D814(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_19A85D83C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t result;

  result = sub_19A85D6AC(*a1, *v4, *(_QWORD *)(a2 + 16), a3);
  *a4 = result;
  return result;
}

uint64_t sub_19A85D870(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t result;

  result = sub_19A85D6AC(*a1, *v4, *(_QWORD *)(a2 + 16), a4);
  *a1 = result;
  return result;
}

uint64_t sub_19A85D8A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = *v2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = swift_bridgeObjectRetain();
  v9 = sub_19A85D5F0(v6, v5, v7, v8);
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v9;
  return result;
}

uint64_t sub_19A85D8F0(uint64_t a1)
{
  MEMORY[0x19AECCD38](&unk_19A8CF1B4, a1);
  return sub_19A8C4B18();
}

uint64_t sub_19A85D924()
{
  return 2;
}

uint64_t sub_19A85D92C(uint64_t a1)
{
  MEMORY[0x19AECCD38](&unk_19A8CF1B4, a1);
  return sub_19A8C4B48();
}

uint64_t sub_19A85D964()
{
  return sub_19A8C49EC();
}

void sub_19A85D984()
{
  sub_19A8C4EB4();
  OUTLINED_FUNCTION_40();
}

uint64_t sub_19A85D9A4()
{
  sub_19A8C4EA8();
  sub_19A8C4EB4();
  return sub_19A8C4EC0();
}

uint64_t sub_19A85D9EC()
{
  sub_19A8C4EA8();
  sub_19A8C4EB4();
  return sub_19A8C4EC0();
}

id PARSearchClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static PARSearchClient.shared.getter()
{
  if (qword_1ECFFEA28 != -1)
    swift_once();
  OUTLINED_FUNCTION_15_3();
  return (id)qword_1ECFFE9E8;
}

void static PARSearchClient.shared.setter(uint64_t a1)
{
  void *v2;

  if (qword_1ECFFEA28 != -1)
    swift_once();
  OUTLINED_FUNCTION_33();
  v2 = (void *)qword_1ECFFE9E8;
  qword_1ECFFE9E8 = a1;

}

void static PARSearchClient.shared.modify()
{
  if (qword_1ECFFEA28 != -1)
    swift_once();
  OUTLINED_FUNCTION_187();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_40();
}

void sub_19A85DB78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = swift_unknownObjectRetain();
  sub_19A85DBEC(v2, v1);
}

void sub_19A85DBB0()
{
  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_71_0();
}

void sub_19A85DBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_receivingStreamDelegate;
  OUTLINED_FUNCTION_33();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_107_1();
}

void sub_19A85DC40(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC10CoreParsec15PARSearchClient_receivingStreamDelegate;
  v3[5] = v1;
  v3[6] = v4;
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_71_0();
}

void (*sub_19A85DC88(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  return sub_19A85DCAC;
}

void sub_19A85DCAC(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    OUTLINED_FUNCTION_18_1();
  }
  free(v3);
}

id PARSearchClient.connection.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
}

void PARSearchClient.__deallocating_deinit()
{
  char *v0;
  objc_super v1;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection], sel_invalidate);
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for PARSearchClient();
  objc_msgSendSuper2(&v1, sel_dealloc);
  OUTLINED_FUNCTION_163();
}

void sub_19A85DE20(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint8_t *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, char *, uint64_t);
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  const void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  const void *v56;
  uint64_t v57;
  void *v58;
  uint64_t aBlock;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t v64;

  v53 = a1;
  v5 = sub_19A8C480C();
  v57 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v57 + 64);
  v11 = MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10);
  v12 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v13, v14, v15, v16);
  v18 = (char *)&v51 - v17;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a3;
  _Block_copy(a3);
  if (qword_1ECFFEA20 != -1)
    swift_once();
  v20 = sub_19A8C489C();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ECFFE9F0);
  v21 = sub_19A8C4878();
  v22 = sub_19A8C4BFC();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = v6;
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_19A825000, v21, v22, "requesting bag", v24, 2u);
    v25 = v24;
    v6 = v23;
    MEMORY[0x19AECCDEC](v25, -1, -1);
  }
  v56 = a3;

  if (qword_1ECFFE730 != -1)
    swift_once();
  v26 = (id)qword_1ECFFEBE0;
  sub_19A8C47E8();
  sub_19A8C4C44();
  sub_19A8C47D0();
  v27 = *(void **)(a2 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
  v28 = v57;
  v29 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  v29(v12, v18, v5);
  v55 = v18;
  v30 = *(unsigned __int8 *)(v28 + 80);
  v31 = v12;
  v32 = v5;
  v33 = swift_allocObject();
  v52 = v6;
  v34 = v33;
  *(_QWORD *)(v33 + 16) = sub_19A86639C;
  *(_QWORD *)(v33 + 24) = v19;
  v35 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
  v54 = v32;
  v35(v33 + ((v30 + 32) & ~v30), v31, v32);
  v63 = sub_19A8658B4;
  v64 = v34;
  aBlock = MEMORY[0x1E0C809B0];
  v60 = 1107296256;
  v61 = sub_19A8591A4;
  v62 = &block_descriptor_133;
  v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v37 = objc_msgSend(v27, sel_remoteObjectProxyWithErrorHandler_, v36);
  _Block_release(v36);
  sub_19A8C4D10();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (swift_dynamicCast())
  {
    v38 = v58;
    v39 = v54;
    v40 = v55;
    v29(v31, v55, v54);
    v41 = (v30 + 16) & ~v30;
    v42 = (v52 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    v43 = swift_allocObject();
    v35(v43 + v41, v31, v39);
    v44 = (_QWORD *)(v43 + v42);
    *v44 = sub_19A86639C;
    v44[1] = v19;
    v63 = sub_19A8658C4;
    v64 = v43;
    aBlock = MEMORY[0x1E0C809B0];
    v60 = 1107296256;
    v61 = sub_19A82D054;
    v62 = &block_descriptor_140;
    v45 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v38, sel_bag_reply_, v53, v45);
    _Block_release(v45);
    swift_unknownObjectRelease();
    v46 = v56;
    v47 = v40;
    v48 = v39;
  }
  else
  {
    sub_19A8C4C38();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v49 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v49 + 64) = sub_19A8333A4();
    strcpy((char *)(v49 + 32), "casting_failed");
    *(_BYTE *)(v49 + 47) = -18;
    v50 = v55;
    sub_19A8C47C4();
    swift_bridgeObjectRelease();
    v46 = v56;
    (*((void (**)(const void *, _QWORD, _QWORD))v56 + 2))(v56, 0, 0);
    v47 = v50;
    v48 = v54;
  }
  (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v48);
  swift_release();
  _Block_release(v46);
}

void sub_19A85E34C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD, _QWORD);
  void (*v7)(_QWORD, _QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;

  OUTLINED_FUNCTION_8_7();
  v5 = v4;
  v7 = v6;
  v42 = v8;
  v9 = OUTLINED_FUNCTION_52();
  v10 = OUTLINED_FUNCTION_143(v9);
  v15 = MEMORY[0x1E0C80A78](v10, v11, v12, v13, v14);
  v46 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v16, v17, v18, v19);
  v21 = (char *)&v39 - v20;
  if (qword_1ECFFEA20 != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_15_2();
  OUTLINED_FUNCTION_22(v22, (uint64_t)qword_1ECFFE9F0);
  v23 = OUTLINED_FUNCTION_139();
  if (OUTLINED_FUNCTION_49_0(v23))
  {
    v24 = (uint8_t *)OUTLINED_FUNCTION_2();
    *(_WORD *)v24 = 0;
    OUTLINED_FUNCTION_33_0(&dword_19A825000, v1, v3, "requesting bag", v24);
    OUTLINED_FUNCTION_0_0();
  }

  if (qword_1ECFFE730 != -1)
    swift_once();
  v25 = (id)qword_1ECFFEBE0;
  sub_19A8C47E8();
  sub_19A8C4C44();
  OUTLINED_FUNCTION_155();
  sub_19A8C47D0();
  v26 = *(Class *)((char *)&v1->isa + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
  v27 = v46;
  v28 = v47;
  v40 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v40(v46, v21, v0);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v44 = v21;
  v41 = v29 | 7;
  v30 = swift_allocObject();
  v43 = v7;
  *(_QWORD *)(v30 + 16) = v7;
  *(_QWORD *)(v30 + 24) = v5;
  v31 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
  v45 = v0;
  v31(v30 + ((v29 + 32) & ~v29), v27, v0);
  v51 = sub_19A8658B4;
  v52 = v30;
  v49 = MEMORY[0x1E0C809B0];
  v50 = 1107296256;
  OUTLINED_FUNCTION_29_2((uint64_t)sub_19A8591A4);
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_63_1(v26, sel_remoteObjectProxyWithErrorHandler_);
  OUTLINED_FUNCTION_55_1();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_42_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (OUTLINED_FUNCTION_21_2())
  {
    v32 = v48;
    v33 = v45;
    v40(v27, v44, v45);
    v34 = (v29 + 16) & ~v29;
    OUTLINED_FUNCTION_148();
    v35 = swift_allocObject();
    v31(v35 + v34, v27, v33);
    v36 = &v27[v35];
    *(_QWORD *)v36 = v43;
    *((_QWORD *)v36 + 1) = v5;
    v51 = sub_19A8658C4;
    v52 = v35;
    v49 = MEMORY[0x1E0C809B0];
    v50 = 1107296256;
    v37 = OUTLINED_FUNCTION_29_2((uint64_t)sub_19A82D054);
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_88();
    objc_msgSend(v32, sel_bag_reply_, v42, v37);
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_42_2();
  }
  else
  {
    sub_19A8C4C38();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v38 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v38 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v38 + 64) = OUTLINED_FUNCTION_31_2(v38, MEMORY[0x1E0DEA968]);
    strcpy((char *)(v38 + 32), "casting_failed");
    *(_BYTE *)(v38 + 47) = -18;
    OUTLINED_FUNCTION_6_6();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_165();
    v43(0, 0);
  }
  OUTLINED_FUNCTION_63(v47);
  OUTLINED_FUNCTION_3_5();
}

void sub_19A85E764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_19A8C3D98();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void sub_19A85E7BC(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint8_t *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, char *, uint64_t);
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (**v44)(uint64_t, uint64_t);
  void *v45;
  const void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  const void *v56;
  uint64_t v57;
  void *v58;
  uint64_t aBlock;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t v64;

  v53 = a1;
  v5 = sub_19A8C480C();
  v57 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v57 + 64);
  v11 = MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10);
  v12 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v13, v14, v15, v16);
  v18 = (char *)&v51 - v17;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a3;
  _Block_copy(a3);
  if (qword_1ECFFEA20 != -1)
    swift_once();
  v20 = sub_19A8C489C();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ECFFE9F0);
  v21 = sub_19A8C4878();
  v22 = sub_19A8C4BFC();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = v6;
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_19A825000, v21, v22, "force fetch bag", v24, 2u);
    v25 = v24;
    v6 = v23;
    MEMORY[0x19AECCDEC](v25, -1, -1);
  }
  v56 = a3;

  if (qword_1ECFFE730 != -1)
    swift_once();
  v26 = (id)qword_1ECFFEBE0;
  sub_19A8C47E8();
  sub_19A8C4C44();
  sub_19A8C47D0();
  v27 = *(void **)(a2 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
  v28 = v57;
  v29 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  v29(v12, v18, v5);
  v55 = v18;
  v30 = *(unsigned __int8 *)(v28 + 80);
  v31 = v12;
  v32 = v5;
  v33 = swift_allocObject();
  v52 = v6;
  v34 = v33;
  *(_QWORD *)(v33 + 16) = sub_19A865DDC;
  *(_QWORD *)(v33 + 24) = v19;
  v35 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
  v54 = v32;
  v35(v33 + ((v30 + 32) & ~v30), v31, v32);
  v63 = sub_19A8658D4;
  v64 = v34;
  aBlock = MEMORY[0x1E0C809B0];
  v60 = 1107296256;
  v61 = sub_19A8591A4;
  v62 = &block_descriptor_115;
  v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v37 = objc_msgSend(v27, sel_remoteObjectProxyWithErrorHandler_, v36);
  _Block_release(v36);
  sub_19A8C4D10();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (swift_dynamicCast())
  {
    v38 = v58;
    v39 = v54;
    v40 = v55;
    v29(v31, v55, v54);
    v41 = (v30 + 16) & ~v30;
    v42 = (v52 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    v43 = swift_allocObject();
    v35(v43 + v41, v31, v39);
    v44 = (void (**)(uint64_t, uint64_t))(v43 + v42);
    *v44 = sub_19A865DDC;
    v44[1] = (void (*)(uint64_t, uint64_t))v19;
    v63 = sub_19A865928;
    v64 = v43;
    aBlock = MEMORY[0x1E0C809B0];
    v60 = 1107296256;
    v61 = sub_19A82D054;
    v62 = &block_descriptor_122;
    v45 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v38, sel_forceFetchBag_reply_, v53, v45);
    _Block_release(v45);
    swift_unknownObjectRelease();
    v46 = v56;
    v47 = v40;
    v48 = v39;
  }
  else
  {
    v46 = v56;
    (*((void (**)(const void *, _QWORD, _QWORD))v56 + 2))(v56, 0, 0);
    sub_19A8C4C38();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v49 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v49 + 64) = sub_19A8333A4();
    strcpy((char *)(v49 + 32), "casting_failed");
    *(_BYTE *)(v49 + 47) = -18;
    v50 = v55;
    sub_19A8C47C4();
    swift_bridgeObjectRelease();
    v47 = v50;
    v48 = v54;
  }
  (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v48);
  swift_release();
  _Block_release(v46);
}

void sub_19A85ECE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  void (*v8)(_QWORD, _QWORD);
  void (*v9)(_QWORD, _QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  void *v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD, _QWORD);
  NSObject *v32;
  void (*v33)(uint64_t, char *, uint64_t);
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;

  OUTLINED_FUNCTION_8_7();
  v5 = v1;
  v7 = v6;
  v9 = v8;
  v41[2] = v10;
  v11 = OUTLINED_FUNCTION_52();
  v12 = OUTLINED_FUNCTION_143(v11);
  v17 = MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16);
  MEMORY[0x1E0C80A78](v17, v18, v19, v20, v21);
  OUTLINED_FUNCTION_117_0();
  if (qword_1ECFFEA20 != -1)
    swift_once();
  v43 = v7;
  v22 = OUTLINED_FUNCTION_15_2();
  OUTLINED_FUNCTION_22(v22, (uint64_t)qword_1ECFFE9F0);
  v23 = OUTLINED_FUNCTION_139();
  if (OUTLINED_FUNCTION_49_0(v23))
  {
    v24 = (uint8_t *)OUTLINED_FUNCTION_2();
    *(_WORD *)v24 = 0;
    OUTLINED_FUNCTION_33_0(&dword_19A825000, v7, v4, "force fetch bag", v24);
    OUTLINED_FUNCTION_0_0();
  }

  if (qword_1ECFFE730 != -1)
    swift_once();
  v25 = (id)qword_1ECFFEBE0;
  OUTLINED_FUNCTION_175();
  sub_19A8C4C44();
  sub_19A8C47D0();
  v26 = *(void **)(v5 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
  v27 = v45;
  OUTLINED_FUNCTION_96_1();
  v41[0] = v28;
  v28();
  v29 = *(unsigned __int8 *)(v27 + 80);
  v41[1] = v29 | 7;
  v30 = swift_allocObject();
  v44 = v2;
  v31 = v9;
  *(_QWORD *)(v30 + 16) = v9;
  v32 = v43;
  *(_QWORD *)(v30 + 24) = v43;
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
  v42 = v0;
  v33(v30 + ((v29 + 32) & ~v29), (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v0);
  v48 = sub_19A8658D4;
  v49 = v30;
  v46 = MEMORY[0x1E0C809B0];
  v47 = 1107296256;
  v34 = OUTLINED_FUNCTION_29_2((uint64_t)sub_19A8591A4);
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_79_1();
  objc_msgSend(v26, sel_remoteObjectProxyWithErrorHandler_, v34);
  OUTLINED_FUNCTION_99_1();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_42_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (OUTLINED_FUNCTION_21_2())
  {
    v35 = v42;
    ((void (*)(char *, uint64_t, uint64_t))v41[0])((char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v44, v42);
    v36 = (v29 + 16) & ~v29;
    v37 = swift_allocObject();
    v33(v37 + v36, (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v35);
    v38 = (_QWORD *)(v37 + ((v3 + v36 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v38 = v31;
    v38[1] = v32;
    v48 = sub_19A865928;
    v49 = v37;
    v46 = MEMORY[0x1E0C809B0];
    v47 = 1107296256;
    OUTLINED_FUNCTION_29_2((uint64_t)sub_19A82D054);
    OUTLINED_FUNCTION_92_0();
    v39 = swift_release();
    OUTLINED_FUNCTION_110_0(v39, sel_forceFetchBag_reply_);
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_42_2();
  }
  else
  {
    v31(0, 0);
    sub_19A8C4C38();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v40 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v40 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v40 + 64) = OUTLINED_FUNCTION_31_2(v40, MEMORY[0x1E0DEA968]);
    strcpy((char *)(v40 + 32), "casting_failed");
    *(_BYTE *)(v40 + 47) = -18;
    OUTLINED_FUNCTION_6_6();
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_164();
  }
  OUTLINED_FUNCTION_63(v45);
  OUTLINED_FUNCTION_3_5();
}

uint64_t sub_19A85F0E8(uint64_t a1, void (*a2)(_QWORD, uint64_t))
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  if (qword_1ECFFEA20 != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_15_2();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ECFFE9F0);
  OUTLINED_FUNCTION_157();
  OUTLINED_FUNCTION_157();
  v5 = sub_19A8C4878();
  v6 = sub_19A8C4BE4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_2();
    v16 = OUTLINED_FUNCTION_2();
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v8 = sub_19A8C4E6C();
    sub_19A844794(v8, v9, &v16);
    sub_19A8C4CC8();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_6_0(&dword_19A825000, v5, v6, "%s", v7);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0_0();
  }
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_69();

  a2(0, a1);
  sub_19A8C4C38();
  if (qword_1ECFFE730 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
  v10 = OUTLINED_FUNCTION_3_0();
  *(_OWORD *)(v10 + 16) = xmmword_19A8CE8E0;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_19A8333A4();
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 32) = 0xD000000000000011;
  *(_QWORD *)(v10 + 40) = 0x800000019A8D1270;
  OUTLINED_FUNCTION_157();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE150);
  v13 = sub_19A8C4950();
  *(_QWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 104) = v12;
  *(_QWORD *)(v10 + 72) = v13;
  *(_QWORD *)(v10 + 80) = v14;
  OUTLINED_FUNCTION_154();
  return OUTLINED_FUNCTION_12_0();
}

uint64_t sub_19A85F38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_19A8C4C38();
  if (qword_1ECFFE730 != -1)
    swift_once();
  sub_19A8C47D0();
  return a4(a1, a2);
}

void sub_19A85F43C(void *a1, int a2, void *a3, void *aBlock, void (*a5)(id, id, void *))
{
  void *v8;
  id v9;
  id v10;

  v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  v9 = a3;
  v10 = a1;
  a5(v9, v10, v8);
  OUTLINED_FUNCTION_99_1();

  OUTLINED_FUNCTION_12(v10);
}

void sub_19A85F4A0()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  void (**v41)(uint64_t, void *, void *);
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, void *, void *);
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (**v54)(uint64_t, void *, void *);
  void *v55;
  char *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  _QWORD v61[2];
  void (*v62)(uint64_t, char *, uint64_t);
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)();
  uint64_t v78;

  OUTLINED_FUNCTION_8_7();
  v1 = v0;
  v3 = v2;
  v71 = v4;
  v6 = v5;
  v65 = v7;
  v8 = OUTLINED_FUNCTION_52();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8, v11, v12, v13, v14);
  OUTLINED_FUNCTION_159((uint64_t)v61);
  MEMORY[0x1E0C80A78](v15, v16, v17, v18, v19);
  v21 = (char *)v61 - v20;
  v22 = OUTLINED_FUNCTION_3_0();
  *(_QWORD *)(v22 + 16) = v3;
  *(_QWORD *)(v22 + 24) = v1;
  v23 = v3;
  v24 = v6;
  v69 = v23;
  v68 = v1;
  v73 = OUTLINED_FUNCTION_47_1();
  if (qword_1ECFFE730 != -1)
    swift_once();
  v25 = (id)qword_1ECFFEBE0;
  sub_19A8C47E8();
  sub_19A8C4C44();
  v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
  v26 = OUTLINED_FUNCTION_3_0();
  *(_OWORD *)(v26 + 16) = xmmword_19A8CE8E0;
  v27 = objc_msgSend(v6, sel_triggerEvent);
  v28 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v26 + 64) = v28;
  *(_QWORD *)(v26 + 32) = v27;
  v29 = OUTLINED_FUNCTION_47_1();
  v30 = MEMORY[0x1E0DEE1F0];
  *(_QWORD *)(v26 + 96) = MEMORY[0x1E0DEE190];
  *(_QWORD *)(v26 + 104) = v30;
  *(_QWORD *)(v26 + 72) = v29;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_154();
  v31 = OUTLINED_FUNCTION_164();
  sub_19A853D50(v31);
  v67 = v32;
  v33 = v72;
  v34 = *(void **)&v71[OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection];
  v62 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 16);
  v62(v72, v21, v8);
  v35 = *(unsigned __int8 *)(v9 + 80);
  v36 = (v35 + 16) & ~v35;
  v71 = v21;
  v61[0] = v10 + 7;
  v63 = v24;
  v37 = (v10 + 7 + v36) & 0xFFFFFFFFFFFFFFF8;
  v61[1] = v35 | 7;
  v38 = swift_allocObject();
  v39 = v38 + v36;
  v70 = v9;
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  v66 = v8;
  v40(v39, v33, v8);
  v41 = (void (**)(uint64_t, void *, void *))(v38 + v37);
  *v41 = sub_19A866160;
  v41[1] = (void (*)(uint64_t, void *, void *))v22;
  *(_QWORD *)(v38 + ((v37 + 23) & 0xFFFFFFFFFFFFFFF8)) = v73;
  v77 = sub_19A865938;
  v78 = v38;
  v42 = MEMORY[0x1E0C809B0];
  v75 = MEMORY[0x1E0C809B0];
  v76 = 1107296256;
  v43 = OUTLINED_FUNCTION_7_7((uint64_t)sub_19A8591A4);
  OUTLINED_FUNCTION_72_1();
  OUTLINED_FUNCTION_153();
  v44 = objc_msgSend(v34, sel_remoteObjectProxyWithErrorHandler_, v43);
  OUTLINED_FUNCTION_121_0();
  sub_19A8C4D10();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  v45 = v22;
  if (OUTLINED_FUNCTION_12_4())
  {
    v46 = v74;
    v47 = v72;
    v48 = v66;
    v62(v72, v71, v66);
    v49 = (v35 + 24) & ~v35;
    v50 = (void (*)(uint64_t, void *, void *))v45;
    v51 = (v61[0] + v49) & 0xFFFFFFFFFFFFFFF8;
    v52 = v42;
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = v67;
    v40(v53 + v49, v47, v48);
    v54 = (void (**)(uint64_t, void *, void *))(v53 + v51);
    *v54 = sub_19A866160;
    v54[1] = v50;
    v77 = sub_19A865940;
    v78 = v53;
    v75 = v52;
    v76 = 1107296256;
    v55 = OUTLINED_FUNCTION_7_7((uint64_t)sub_19A861CD8);
    swift_retain();
    OUTLINED_FUNCTION_113_0();
    OUTLINED_FUNCTION_33_1();
    objc_msgSend(v46, sel_request_request_reply_, v65, v63, v55);
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_111_0();
    v56 = v71;
    v57 = v69;
  }
  else
  {
    sub_19A8C4C38();
    v58 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v58 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v58 + 64) = OUTLINED_FUNCTION_31_2(v58, MEMORY[0x1E0DEA968]);
    strcpy((char *)(v58 + 32), "casting_failed");
    *(_BYTE *)(v58 + 47) = -18;
    OUTLINED_FUNCTION_6_6();
    OUTLINED_FUNCTION_60_1();
    v56 = v71;
    sub_19A8C47C4();
    v59 = OUTLINED_FUNCTION_12_0();
    v57 = v69;
    v60 = OUTLINED_FUNCTION_30_1(v59, sel_completionBlock);
    (*((void (**)(id, void *, _QWORD, _QWORD))v60 + 2))(v60, v57, 0, 0);
    OUTLINED_FUNCTION_74_0();
    v48 = v66;
  }
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v56, v48);

  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_3_5();
}

void sub_19A85F9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  _QWORD *v68;
  void *v69;
  id v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD v81[3];
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)();
  uint64_t v101;

  OUTLINED_FUNCTION_8_7();
  a21 = v23;
  a22 = v24;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v91 = v33;
  v35 = v34;
  v85 = v36;
  v96 = OUTLINED_FUNCTION_52();
  v37 = *(_QWORD *)(v96 - 8);
  v38 = *(_QWORD *)(v37 + 64);
  MEMORY[0x1E0C80A78](v96, v39, v40, v41, v42);
  OUTLINED_FUNCTION_159((uint64_t)v81);
  MEMORY[0x1E0C80A78](v43, v44, v45, v46, v47);
  OUTLINED_FUNCTION_116_0();
  v48 = OUTLINED_FUNCTION_3_0();
  *(_QWORD *)(v48 + 16) = v26;
  v49 = (_QWORD *)OUTLINED_FUNCTION_3_0();
  v49[2] = sub_19A865E44;
  v49[3] = v48;
  v49[4] = v32;
  v49[5] = v30;
  v49[6] = v28;
  v89 = v26;
  OUTLINED_FUNCTION_127();
  v87 = v48;
  swift_retain();
  v86 = v32;
  v93 = v30;
  swift_retain();
  v92 = v28;
  v94 = OUTLINED_FUNCTION_30_1((uint64_t)v92, sel_queryId);
  if (qword_1ECFFE730 != -1)
    swift_once();
  v50 = (id)qword_1ECFFEBE0;
  OUTLINED_FUNCTION_100_0();
  sub_19A8C4C44();
  v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
  v51 = OUTLINED_FUNCTION_3_0();
  *(_OWORD *)(v51 + 16) = xmmword_19A8CE8E0;
  v52 = OUTLINED_FUNCTION_30_1(v51, sel_triggerEvent);
  v53 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v51 + 56) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v51 + 64) = v53;
  *(_QWORD *)(v51 + 32) = v52;
  v54 = OUTLINED_FUNCTION_30_1((uint64_t)v52, sel_queryId);
  v55 = MEMORY[0x1E0DEE1F0];
  *(_QWORD *)(v51 + 96) = MEMORY[0x1E0DEE190];
  *(_QWORD *)(v51 + 104) = v55;
  *(_QWORD *)(v51 + 72) = v54;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_40_1();
  v56 = OUTLINED_FUNCTION_112_0();
  v83 = v35;
  sub_19A853D50(v56);
  v90 = v57;
  v58 = *(void **)(v91 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
  v60 = v95;
  v59 = v96;
  v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
  v82(v95, v22, v96);
  v61 = *(unsigned __int8 *)(v37 + 80);
  v62 = (v61 + 16) & ~v61;
  v63 = v37;
  v81[1] = v38 + 7;
  v91 = v22;
  v64 = (v38 + 7 + v62) & 0xFFFFFFFFFFFFFFF8;
  v65 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  v81[2] = v61 | 7;
  v66 = swift_allocObject();
  v88 = v63;
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32);
  v67(v66 + v62, v60, v59);
  v68 = (_QWORD *)(v66 + v64);
  *v68 = sub_19A865E50;
  v68[1] = v49;
  *(_QWORD *)(v66 + v65) = v94;
  v100 = sub_19A865938;
  v101 = v66;
  v98 = MEMORY[0x1E0C809B0];
  v99 = 1107296256;
  v69 = OUTLINED_FUNCTION_7_7((uint64_t)sub_19A8591A4);
  OUTLINED_FUNCTION_92_0();
  swift_release();
  v70 = objc_msgSend(v58, sel_remoteObjectProxyWithErrorHandler_, v69);
  OUTLINED_FUNCTION_152();
  sub_19A8C4D10();
  OUTLINED_FUNCTION_71();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (!OUTLINED_FUNCTION_12_4())
  {
    sub_19A8C4C38();
    v79 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v79 + 16) = xmmword_19A8CE860;
    v80 = OUTLINED_FUNCTION_31_2(v79, MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_1_5(v80);
    OUTLINED_FUNCTION_60_1();
    sub_19A8C47C4();
    OUTLINED_FUNCTION_37_2();
    OUTLINED_FUNCTION_15_3();
    OUTLINED_FUNCTION_71_0();
  }
  v71 = v96;
  v72 = v97;
  v73 = v95;
  v74 = v91;
  OUTLINED_FUNCTION_98_0((uint64_t)&a18);
  OUTLINED_FUNCTION_148();
  v75 = swift_allocObject();
  *(_QWORD *)(v75 + 16) = v90;
  v67(v75 + ((v61 + 24) & ~v61), v73, v71);
  v76 = (_QWORD *)(v75 + v65);
  *v76 = sub_19A865E50;
  v76[1] = v49;
  v100 = sub_19A865940;
  v101 = v75;
  OUTLINED_FUNCTION_119_0(MEMORY[0x1E0C809B0]);
  OUTLINED_FUNCTION_7_7((uint64_t)sub_19A861CD8);
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_113_0();
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_160(v72, sel_request_request_reply_, v85, (uint64_t)&a19);
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_111_0();
  v77 = v88;
  v78 = v86;
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_62(v74, *(uint64_t (**)(uint64_t, uint64_t))(v77 + 8));
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_44_2();

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_3_5();
}

void sub_19A85FED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  void *v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  _QWORD *v72;
  void *v73;
  id v74;
  uint64_t v75;
  void *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD v88[7];
  uint64_t v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)();
  uint64_t v103;

  OUTLINED_FUNCTION_8_7();
  a21 = v22;
  a22 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v96 = v34;
  v36 = v35;
  v89 = v37;
  v94 = OUTLINED_FUNCTION_52();
  v38 = *(_QWORD *)(v94 - 8);
  v39 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v94, v40, v41, v42, v43);
  OUTLINED_FUNCTION_158((uint64_t)v88);
  MEMORY[0x1E0C80A78](v44, v45, v46, v47, v48);
  v50 = (char *)v88 - v49;
  v51 = (_QWORD *)OUTLINED_FUNCTION_3_0();
  v88[1] = v33;
  v51[2] = v33;
  v51[3] = v31;
  v52 = v36;
  v51[4] = v29;
  v51[5] = v27;
  v51[6] = v25;
  v93 = v31;
  OUTLINED_FUNCTION_72_1();
  v91 = v29;
  OUTLINED_FUNCTION_93_0();
  v90 = v25;
  v98 = objc_msgSend(v36, sel_queryId);
  if (qword_1ECFFE730 != -1)
    swift_once();
  v53 = (id)qword_1ECFFEBE0;
  sub_19A8C47E8();
  sub_19A8C4C44();
  v88[6] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
  v54 = OUTLINED_FUNCTION_3_0();
  *(_OWORD *)(v54 + 16) = xmmword_19A8CE8E0;
  v55 = objc_msgSend(v36, sel_triggerEvent);
  v56 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v54 + 56) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v54 + 64) = v56;
  *(_QWORD *)(v54 + 32) = v55;
  v57 = objc_msgSend(v36, sel_queryId);
  v58 = MEMORY[0x1E0DEE1F0];
  *(_QWORD *)(v54 + 96) = MEMORY[0x1E0DEE190];
  *(_QWORD *)(v54 + 104) = v58;
  *(_QWORD *)(v54 + 72) = v57;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_60_1();
  sub_19A8C47C4();
  v59 = OUTLINED_FUNCTION_7_2();
  sub_19A853D50(v59);
  v95 = v60;
  v61 = v97;
  v62 = *(void **)&v96[OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection];
  v63 = v94;
  OUTLINED_FUNCTION_53_1(v97, (uint64_t)v50, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 16));
  v64 = *(unsigned __int8 *)(v38 + 80);
  OUTLINED_FUNCTION_109_1(v39 + 7);
  v96 = v50;
  v88[5] = v52;
  v66 = v65 & 0xFFFFFFFFFFFFFFF8;
  v67 = v63;
  v68 = ((v65 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = OUTLINED_FUNCTION_88_1((uint64_t)&unk_1E39219E0, v68 + 8, v69);
  v92 = v38;
  v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32);
  v71(v70 + ((v64 + 16) & ~v64), v61, v67);
  v72 = (_QWORD *)(v70 + v66);
  *v72 = sub_19A865E50;
  v72[1] = v51;
  *(_QWORD *)(v70 + v68) = v98;
  v102 = sub_19A865938;
  v103 = v70;
  v100 = MEMORY[0x1E0C809B0];
  v101 = 1107296256;
  v73 = OUTLINED_FUNCTION_7_7((uint64_t)sub_19A8591A4);
  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_79_1();
  v74 = objc_msgSend(v62, sel_remoteObjectProxyWithErrorHandler_, v73);
  _Block_release(v73);
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_126();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (!OUTLINED_FUNCTION_12_4())
  {
    sub_19A8C4C38();
    v86 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v86 + 16) = xmmword_19A8CE860;
    v87 = OUTLINED_FUNCTION_31_2(v86, MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_1_5(v87);
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_37_2();
    OUTLINED_FUNCTION_15_3();
    OUTLINED_FUNCTION_71_0();
  }
  v75 = ~v64;
  v76 = v99;
  v77 = v96;
  OUTLINED_FUNCTION_98_0((uint64_t)&a19);
  OUTLINED_FUNCTION_147();
  v78 = v61;
  v80 = v79 & 0xFFFFFFFFFFFFFFF8;
  v81 = OUTLINED_FUNCTION_89_1();
  *(_QWORD *)(v81 + 16) = v95;
  v71(v81 + v75, v78, v67);
  v82 = (_QWORD *)(v81 + v80);
  *v82 = sub_19A865E50;
  v82[1] = v51;
  v102 = sub_19A865940;
  v103 = v81;
  OUTLINED_FUNCTION_119_0(MEMORY[0x1E0C809B0]);
  OUTLINED_FUNCTION_7_7((uint64_t)sub_19A861CD8);
  OUTLINED_FUNCTION_68();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_144(v76, sel_request_request_reply_, v89);
  OUTLINED_FUNCTION_69_1();
  swift_unknownObjectRelease();
  v83 = v92;
  v85 = v90;
  v84 = v91;
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v77, v67);

  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_3_5();
}

void sub_19A8603BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, void *, uint64_t);
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (**v67)(uint64_t, void *, uint64_t);
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (**v73)(uint64_t, void *, uint64_t);
  uint64_t v74;
  void *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)();
  uint64_t v94;

  OUTLINED_FUNCTION_8_7();
  a21 = v23;
  a22 = v24;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v87 = v31;
  v33 = v32;
  v80 = v34;
  v35 = OUTLINED_FUNCTION_52();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(_QWORD *)(v36 + 64);
  MEMORY[0x1E0C80A78](v35, v38, v39, v40, v41);
  OUTLINED_FUNCTION_158((uint64_t)&v78);
  MEMORY[0x1E0C80A78](v42, v43, v44, v45, v46);
  OUTLINED_FUNCTION_116_0();
  v47 = OUTLINED_FUNCTION_3_0();
  *(_QWORD *)(v47 + 16) = v26;
  v48 = (uint64_t (*)(uint64_t, void *, uint64_t))OUTLINED_FUNCTION_3_0();
  *((_QWORD *)v48 + 2) = sub_19A865E24;
  *((_QWORD *)v48 + 3) = v47;
  *((_QWORD *)v48 + 4) = v30;
  *((_QWORD *)v48 + 5) = v28;
  v84 = v26;
  OUTLINED_FUNCTION_127();
  v82 = v47;
  v49 = v33;
  swift_retain();
  OUTLINED_FUNCTION_93_0();
  v81 = v28;
  v89 = OUTLINED_FUNCTION_47_1();
  if (qword_1ECFFE730 != -1)
    swift_once();
  v50 = (id)qword_1ECFFEBE0;
  OUTLINED_FUNCTION_100_0();
  sub_19A8C4C44();
  v79 = (id)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
  v51 = OUTLINED_FUNCTION_3_0();
  *(_OWORD *)(v51 + 16) = xmmword_19A8CE8E0;
  v52 = objc_msgSend(v49, sel_triggerEvent);
  v53 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v51 + 56) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v51 + 64) = v53;
  *(_QWORD *)(v51 + 32) = v52;
  v54 = objc_msgSend(v49, sel_queryId);
  v55 = MEMORY[0x1E0DEE1F0];
  *(_QWORD *)(v51 + 96) = MEMORY[0x1E0DEE190];
  *(_QWORD *)(v51 + 104) = v55;
  *(_QWORD *)(v51 + 72) = v54;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_40_1();
  v56 = OUTLINED_FUNCTION_112_0();
  v57 = v49;
  sub_19A853D50(v56);
  v86 = v58;
  v59 = v88;
  v60 = *(void **)(v87 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
  OUTLINED_FUNCTION_53_1(v88, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16));
  OUTLINED_FUNCTION_133();
  *(_QWORD *)(v61 - 256) = v49;
  OUTLINED_FUNCTION_109_1(v37 + 7);
  v63 = v62 & 0xFFFFFFFFFFFFFFF8;
  v87 = v22;
  v64 = ((v62 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v66 = OUTLINED_FUNCTION_88_1((uint64_t)&unk_1E3921508, v64 + 8, v65);
  v83 = v36;
  v85 = v35;
  OUTLINED_FUNCTION_162((uint64_t)v57 + v66, v59);
  v67 = (uint64_t (**)(uint64_t, void *, uint64_t))(v66 + v63);
  *v67 = sub_19A865E30;
  v67[1] = v48;
  *(_QWORD *)(v66 + v64) = v89;
  v93 = sub_19A865938;
  v94 = v66;
  v91 = MEMORY[0x1E0C809B0];
  v92 = 1107296256;
  v68 = OUTLINED_FUNCTION_7_7((uint64_t)sub_19A8591A4);
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_150();
  v69 = objc_msgSend(v60, sel_remoteObjectProxyWithErrorHandler_, v68);
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_126();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (!OUTLINED_FUNCTION_12_4())
  {
    sub_19A8C4C38();
    v76 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v76 + 16) = xmmword_19A8CE860;
    v77 = OUTLINED_FUNCTION_31_2(v76, MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_1_5(v77);
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_37_2();
    OUTLINED_FUNCTION_15_3();
    OUTLINED_FUNCTION_71_0();
  }
  v79 = v90;
  v70 = v87;
  v71 = v85;
  OUTLINED_FUNCTION_98_0((uint64_t)&a19);
  OUTLINED_FUNCTION_148();
  v72 = OUTLINED_FUNCTION_89_1();
  *(_QWORD *)(v72 + 16) = v86;
  OUTLINED_FUNCTION_162(v72 + ((v51 + 24) & ~v51), v59);
  v73 = (uint64_t (**)(uint64_t, void *, uint64_t))((char *)sub_19A865E30 + v72);
  *v73 = sub_19A865E30;
  v73[1] = v48;
  v93 = sub_19A865940;
  v94 = v72;
  OUTLINED_FUNCTION_119_0(MEMORY[0x1E0C809B0]);
  OUTLINED_FUNCTION_7_7((uint64_t)sub_19A861CD8);
  OUTLINED_FUNCTION_72_1();
  OUTLINED_FUNCTION_113_0();
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_160(v79, sel_request_request_reply_, v80, (uint64_t)&a20);
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_111_0();
  v74 = v83;
  v75 = v81;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v70, v71);
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_150();
  OUTLINED_FUNCTION_44_2();

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_3_5();
}

void sub_19A860884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  _QWORD *v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD v83[5];
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)();
  uint64_t v98;

  OUTLINED_FUNCTION_8_7();
  a21 = v23;
  a22 = v24;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v92 = v33;
  v35 = v34;
  v84 = v36;
  v37 = OUTLINED_FUNCTION_52();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(_QWORD *)(v38 + 64);
  v44 = MEMORY[0x1E0C80A78](v37, v40, v41, v42, v43);
  v89 = (uint64_t)v83 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v44, v45, v46, v47, v48);
  OUTLINED_FUNCTION_116_0();
  v49 = (_QWORD *)OUTLINED_FUNCTION_3_0();
  v85 = v32;
  v49[2] = v32;
  v49[3] = v30;
  v50 = v35;
  v49[4] = v28;
  v49[5] = v26;
  v93 = v30;
  OUTLINED_FUNCTION_72_1();
  OUTLINED_FUNCTION_93_0();
  v91 = v26;
  v86 = OUTLINED_FUNCTION_47_1();
  if (qword_1ECFFE730 != -1)
    swift_once();
  v51 = (id)qword_1ECFFEBE0;
  OUTLINED_FUNCTION_100_0();
  v52 = sub_19A8C4C44();
  v83[4] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
  v53 = OUTLINED_FUNCTION_3_0();
  *(_OWORD *)(v53 + 16) = xmmword_19A8CE8E0;
  v54 = OUTLINED_FUNCTION_17_2(v53, sel_triggerEvent);
  v55 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v53 + 56) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v53 + 64) = v55;
  *(_QWORD *)(v53 + 32) = v54;
  v56 = OUTLINED_FUNCTION_17_2((uint64_t)v54, sel_queryId);
  v57 = MEMORY[0x1E0DEE1F0];
  *(_QWORD *)(v53 + 96) = MEMORY[0x1E0DEE190];
  *(_QWORD *)(v53 + 104) = v57;
  *(_QWORD *)(v53 + 72) = v56;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_40_1();
  v58 = OUTLINED_FUNCTION_7_2();
  v59 = v50;
  sub_19A853D50(v58);
  v90 = v60;
  v61 = *(void **)(v92 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
  v62 = v89;
  OUTLINED_FUNCTION_53_1(v89, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 16));
  OUTLINED_FUNCTION_133();
  *(_QWORD *)(v63 - 256) = v50;
  OUTLINED_FUNCTION_109_1(v39 + 7);
  v65 = v64 & 0xFFFFFFFFFFFFFFF8;
  v87 = v22;
  v66 = ((v64 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v68 = OUTLINED_FUNCTION_88_1((uint64_t)&unk_1E3921940, v66 + 8, v67);
  v69 = v68 + v59;
  v92 = v38;
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32);
  v88 = v37;
  OUTLINED_FUNCTION_162(v69, v62);
  v71 = (_QWORD *)(v68 + v65);
  *v71 = sub_19A8663A0;
  v71[1] = v49;
  *(_QWORD *)(v68 + v66) = v86;
  v97 = sub_19A865938;
  v98 = v68;
  v95 = MEMORY[0x1E0C809B0];
  v96 = 1107296256;
  v72 = OUTLINED_FUNCTION_7_7((uint64_t)sub_19A8591A4);
  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_150();
  v73 = objc_msgSend(v61, sel_remoteObjectProxyWithErrorHandler_, v72);
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_126();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (!OUTLINED_FUNCTION_12_4())
  {
    sub_19A8C4C38();
    v81 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v81 + 16) = xmmword_19A8CE860;
    v82 = OUTLINED_FUNCTION_31_2(v81, MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_1_5(v82);
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_37_2();
    OUTLINED_FUNCTION_15_3();
    OUTLINED_FUNCTION_71_0();
  }
  v85 = v94;
  v74 = v87;
  v75 = v88;
  OUTLINED_FUNCTION_98_0((uint64_t)&a19);
  OUTLINED_FUNCTION_147();
  v76 = v62;
  v78 = v77 & 0xFFFFFFFFFFFFFFF8;
  v79 = OUTLINED_FUNCTION_89_1();
  *(_QWORD *)(v79 + 16) = v90;
  v70(v79 + ~v52, v76, v75);
  v80 = (_QWORD *)(v79 + v78);
  *v80 = sub_19A8663A0;
  v80[1] = v49;
  v97 = sub_19A865940;
  v98 = v79;
  OUTLINED_FUNCTION_119_0(MEMORY[0x1E0C809B0]);
  OUTLINED_FUNCTION_7_7((uint64_t)sub_19A861CD8);
  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_113_0();
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_144(v85, sel_request_request_reply_, v84);
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_111_0();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v74, v75);

  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_3_5();
}

id sub_19A860D08(uint64_t a1, void *a2, uint64_t a3, const void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, char *, uint64_t);
  void (**v37)(uint64_t, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (**v51)(uint64_t, uint64_t, uint64_t);
  void *v52;
  uint64_t v53;
  const void *v54;
  id v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  const void *v70;
  id v71;
  void *v72;
  uint64_t aBlock;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t (*v77)();
  uint64_t v78;

  v69 = a3;
  v64 = a1;
  v6 = sub_19A8C480C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v13 = MEMORY[0x1E0C80A78](v6, v9, v10, v11, v12);
  v67 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v14, v15, v16, v17);
  v19 = (char *)&v58 - v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a4;
  v70 = a4;
  _Block_copy(a4);
  v71 = objc_msgSend(a2, sel_queryId);
  if (qword_1ECFFE730 != -1)
    swift_once();
  v21 = (id)qword_1ECFFEBE0;
  sub_19A8C47E8();
  sub_19A8C4C44();
  v63 = (id)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_19A8CE8E0;
  v23 = objc_msgSend(a2, sel_triggerEvent);
  v24 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v22 + 64) = v24;
  *(_QWORD *)(v22 + 32) = v23;
  v25 = objc_msgSend(a2, sel_queryId);
  v26 = MEMORY[0x1E0DEE1F0];
  *(_QWORD *)(v22 + 96) = MEMORY[0x1E0DEE190];
  *(_QWORD *)(v22 + 104) = v26;
  *(_QWORD *)(v22 + 72) = v25;
  sub_19A8C47C4();
  v27 = swift_bridgeObjectRelease();
  sub_19A853D50(v27);
  v68 = v28;
  v29 = *(void **)(v69 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
  v30 = v67;
  v61 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v61(v67, v19, v6);
  v31 = *(unsigned __int8 *)(v7 + 80);
  v62 = a2;
  v32 = (v31 + 16) & ~v31;
  v59 = v8 + 7;
  v66 = v19;
  v33 = (v8 + 7 + v32) & 0xFFFFFFFFFFFFFFF8;
  v60 = v31 | 7;
  v34 = swift_allocObject();
  v35 = v34 + v32;
  v69 = v7;
  v36 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v65 = v6;
  v36(v35, v30, v6);
  v37 = (void (**)(uint64_t, uint64_t, uint64_t))(v34 + v33);
  *v37 = sub_19A85CB34;
  v37[1] = (void (*)(uint64_t, uint64_t, uint64_t))v20;
  v38 = v71;
  *(_QWORD *)(v34 + ((v33 + 23) & 0xFFFFFFFFFFFFFFF8)) = v71;
  v77 = sub_19A865938;
  v78 = v34;
  v39 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v74 = 1107296256;
  v75 = sub_19A8591A4;
  v76 = &block_descriptor_98;
  v40 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v41 = objc_msgSend(v29, sel_remoteObjectProxyWithErrorHandler_, v40);
  _Block_release(v40);
  sub_19A8C4D10();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (swift_dynamicCast())
  {
    v42 = ~v31;
    v63 = v72;
    v43 = v65;
    v44 = v66;
    v61(v30, v66, v65);
    v45 = v31 + 24;
    v46 = v30;
    v47 = v45 & v42;
    v48 = v39;
    v49 = (v59 + (v45 & v42)) & 0xFFFFFFFFFFFFFFF8;
    v50 = swift_allocObject();
    *(_QWORD *)(v50 + 16) = v68;
    v36(v50 + v47, v46, v43);
    v51 = (void (**)(uint64_t, uint64_t, uint64_t))(v50 + v49);
    *v51 = sub_19A85CB34;
    v51[1] = (void (*)(uint64_t, uint64_t, uint64_t))v20;
    v77 = sub_19A865940;
    v78 = v50;
    aBlock = v48;
    v74 = 1107296256;
    v75 = sub_19A861CD8;
    v76 = &block_descriptor_105;
    v52 = _Block_copy(&aBlock);
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v63, sel_request_request_reply_, v64, v62, v52);
    _Block_release(v52);
    swift_unknownObjectRelease();
    v53 = v43;
    v54 = v70;
    v55 = v71;
  }
  else
  {
    v55 = v38;
    sub_19A8C4C38();
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v56 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v56 + 64) = sub_19A8333A4();
    strcpy((char *)(v56 + 32), "casting_failed");
    *(_BYTE *)(v56 + 47) = -18;
    v44 = v66;
    sub_19A8C47C4();
    swift_bridgeObjectRelease();
    v54 = v70;
    (*((void (**)(const void *, id, _QWORD, _QWORD))v70 + 2))(v70, v38, 0, 0);
    v53 = v65;
  }
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v53);
  swift_release();
  _Block_release(v54);
  return v55;
}

void sub_19A8612A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(id, _QWORD, _QWORD);
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  void *v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  void *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  void (*v72)(id, _QWORD, _QWORD);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;

  OUTLINED_FUNCTION_8_7();
  a21 = v25;
  a22 = v26;
  v75 = v22;
  v72 = v27;
  v73 = v28;
  v30 = v29;
  v69 = v31;
  v32 = OUTLINED_FUNCTION_52();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(_QWORD *)(v33 + 64);
  MEMORY[0x1E0C80A78](v32, v35, v36, v37, v38);
  OUTLINED_FUNCTION_85_1();
  MEMORY[0x1E0C80A78](v39, v40, v41, v42, v43);
  OUTLINED_FUNCTION_117_0();
  v70 = OUTLINED_FUNCTION_174();
  if (qword_1ECFFE730 != -1)
    swift_once();
  v44 = (id)qword_1ECFFEBE0;
  OUTLINED_FUNCTION_175();
  sub_19A8C4C44();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
  v45 = OUTLINED_FUNCTION_3_0();
  *(_OWORD *)(v45 + 16) = xmmword_19A8CE8E0;
  v46 = objc_msgSend(v30, sel_triggerEvent);
  v47 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v45 + 64) = v47;
  *(_QWORD *)(v45 + 32) = v46;
  v48 = OUTLINED_FUNCTION_174();
  v49 = MEMORY[0x1E0DEE1F0];
  *(_QWORD *)(v45 + 96) = MEMORY[0x1E0DEE190];
  *(_QWORD *)(v45 + 104) = v49;
  *(_QWORD *)(v45 + 72) = v48;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_60_1();
  sub_19A8C47C4();
  v50 = swift_bridgeObjectRelease();
  v68 = v30;
  sub_19A853D50(v50);
  v74 = v51;
  v52 = *(void **)(v75 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_connection);
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  v67(v24, v23, v32);
  v53 = *(unsigned __int8 *)(v33 + 80);
  v54 = v32;
  v55 = (v53 + 16) & ~v53;
  v71 = v23;
  v56 = v24;
  v57 = v34 + 7;
  v58 = (v34 + 7 + v55) & 0xFFFFFFFFFFFFFFF8;
  v59 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v59 + v55, v56, v54);
  v60 = (_QWORD *)(v59 + v58);
  *v60 = v72;
  v60[1] = v73;
  *(_QWORD *)(v59 + ((v58 + 23) & 0xFFFFFFFFFFFFFFF8)) = v70;
  OUTLINED_FUNCTION_7_7((uint64_t)sub_19A8591A4);
  swift_retain();
  OUTLINED_FUNCTION_79_1();
  v61 = OUTLINED_FUNCTION_63_1(v52, sel_remoteObjectProxyWithErrorHandler_);
  OUTLINED_FUNCTION_55_1();
  sub_19A8C4D10();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEA10);
  if (OUTLINED_FUNCTION_12_4())
  {
    v62 = v71;
    v67(v56, v71, v54);
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = v74;
    OUTLINED_FUNCTION_98_0((uint64_t)&a20);
    v64 = (_QWORD *)(v63 + ((v57 + ((v53 + 24) & ~v53)) & 0xFFFFFFFFFFFFFFF8));
    *v64 = v72;
    v64[1] = v73;
    OUTLINED_FUNCTION_119_0(MEMORY[0x1E0C809B0]);
    v65 = OUTLINED_FUNCTION_7_7((uint64_t)sub_19A861CD8);
    swift_retain();
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_170();
    objc_msgSend(v76, sel_request_request_reply_, v69, v68, v65);
    OUTLINED_FUNCTION_99_1();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_19A8C4C38();
    v66 = OUTLINED_FUNCTION_3_0();
    *(_OWORD *)(v66 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v66 + 64) = OUTLINED_FUNCTION_31_2(v66, MEMORY[0x1E0DEA968]);
    strcpy((char *)(v66 + 32), "casting_failed");
    *(_BYTE *)(v66 + 47) = -18;
    OUTLINED_FUNCTION_6_6();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_12_0();
    v72(v70, 0, 0);
    v62 = v71;
  }
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v62, v54);
  OUTLINED_FUNCTION_3_5();
}

uint64_t sub_19A861730(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t (*v14)(_QWORD, _QWORD, _QWORD);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  if (qword_1ECFFEA20 != -1)
    swift_once();
  v8 = sub_19A8C489C();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ECFFE9F0);
  v9 = a1;
  v10 = a1;
  v11 = sub_19A8C4878();
  v12 = sub_19A8C4BE4();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = a3;
    v15 = swift_slowAlloc();
    v26 = v15;
    *(_DWORD *)v13 = 136315138;
    swift_getErrorValue();
    v16 = sub_19A8C4E6C();
    sub_19A844794(v16, v17, &v26);
    sub_19A8C4CC8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_19A825000, v11, v12, "%s", v13, 0xCu);
    swift_arrayDestroy();
    v18 = v15;
    a3 = v14;
    MEMORY[0x19AECCDEC](v18, -1, -1);
    MEMORY[0x19AECCDEC](v13, -1, -1);
  }
  else
  {

  }
  sub_19A8C4C38();
  if (qword_1ECFFE730 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_19A8CE8E0;
  v20 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  v21 = sub_19A8333A4();
  *(_QWORD *)(v19 + 64) = v21;
  *(_QWORD *)(v19 + 32) = 0xD000000000000011;
  *(_QWORD *)(v19 + 40) = 0x800000019A8D1270;
  v26 = (uint64_t)a1;
  v22 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE150);
  v23 = sub_19A8C4950();
  *(_QWORD *)(v19 + 96) = v20;
  *(_QWORD *)(v19 + 104) = v21;
  *(_QWORD *)(v19 + 72) = v23;
  *(_QWORD *)(v19 + 80) = v24;
  sub_19A8C47C4();
  swift_bridgeObjectRelease();
  return a3(a5, 0, a1);
}

uint64_t sub_19A861A38(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, void *))
{
  uint64_t (*v10)(uint64_t, uint64_t, void *);
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  swift_getObjectType();
  sub_19A853D9C();
  if (a3)
  {
    v10 = a6;
    v11 = a3;
    sub_19A8C4C38();
    if (qword_1ECFFE730 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19A8CE8E0;
    v13 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    v14 = sub_19A8333A4();
    *(_QWORD *)(v12 + 64) = v14;
    *(_QWORD *)(v12 + 32) = 0x6572756C696166;
    *(_QWORD *)(v12 + 40) = 0xE700000000000000;
    v15 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE150);
    v16 = sub_19A8C4950();
    *(_QWORD *)(v12 + 96) = v13;
    *(_QWORD *)(v12 + 104) = v14;
    *(_QWORD *)(v12 + 72) = v16;
    *(_QWORD *)(v12 + 80) = v17;
    sub_19A8C47C4();
    swift_bridgeObjectRelease();

    return v10(a1, a2, a3);
  }
  else
  {
    sub_19A8C4C38();
    if (qword_1ECFFE730 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v19 + 64) = sub_19A8333A4();
    *(_QWORD *)(v19 + 32) = 0x73736563637573;
    *(_QWORD *)(v19 + 40) = 0xE700000000000000;
    sub_19A8C47C4();
    swift_bridgeObjectRelease();
    return a6(a1, a2, 0);
  }
}

void sub_19A861CD8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void (*v7)(uint64_t, void *, void *);
  id v8;
  id v9;

  v7 = *(void (**)(uint64_t, void *, void *))(a1 + 32);
  swift_retain();
  v9 = a3;
  v8 = a4;
  v7(a2, a3, a4);
  swift_release();

}

void sub_19A861DE0()
{
  sub_19A832E38();
}

uint64_t sub_19A861E54()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = OUTLINED_FUNCTION_97_0();
  if (result)
  {
    OUTLINED_FUNCTION_83_1((uint64_t)sub_19A861EE0, MEMORY[0x1E0C809B0], 1107296256, v2, v3);
    OUTLINED_FUNCTION_30_2();
    v1 = swift_release();
    OUTLINED_FUNCTION_184(v1, sel_listSessions_);
    OUTLINED_FUNCTION_74_0();
    return OUTLINED_FUNCTION_71();
  }
  return result;
}

uint64_t sub_19A861EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = a2;
  v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDE98);
    v2 = sub_19A8C4A1C();
  }
  swift_retain();
  v3(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_19A861FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDE98);
    v3 = sub_19A8C4A10();
  }
  else
  {
    v3 = 0;
  }
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_19A8620AC(uint64_t a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (**v25)(uint64_t);
  void *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD aBlock[6];

  v3 = sub_19A8C480C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v10 = MEMORY[0x1E0C80A78](v3, v6, v7, v8, v9);
  v11 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v12, v13, v14, v15);
  v17 = (char *)aBlock - v16;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  _Block_copy(a2);
  v19 = sub_19A83327C();
  if (v19)
  {
    v20 = (void *)v19;
    if (qword_1ECFFE730 != -1)
      swift_once();
    v21 = (id)qword_1ECFFEBE0;
    sub_19A8C47E8();
    sub_19A8C4C44();
    sub_19A8C47D0();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v11, v17, v3);
    v22 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v23 = (v5 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v24 + v22, v11, v3);
    v25 = (void (**)(uint64_t))(v24 + v23);
    *v25 = sub_19A865D70;
    v25[1] = (void (*)(uint64_t))v18;
    aBlock[4] = sub_19A86594C;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_19A862690;
    aBlock[3] = &block_descriptor_82;
    v26 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_getImageMap_, v26);
    _Block_release(v26);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v3);
    swift_release();
    _Block_release(a2);
  }
  else
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v27 = sub_19A8C489C();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ECFFE9F0);
    v28 = sub_19A8C4878();
    v29 = sub_19A8C4BF0();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_19A825000, v28, v29, "at getImageMap: remoteObjectProxyWithErrorHandler does not implement PARDaemonXPC", v30, 2u);
      MEMORY[0x19AECCDEC](v30, -1, -1);
    }

    a2[2](a2, 0);
    swift_release();
    _Block_release(a2);
  }
}

void sub_19A8623CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD);
  void (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  os_log_type_t v28;
  _WORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[6];

  OUTLINED_FUNCTION_34_2();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_52();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5, v8, v9, v10, v11);
  OUTLINED_FUNCTION_86_1();
  MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16);
  v18 = (char *)v32 - v17;
  v19 = sub_19A83327C();
  if (v19)
  {
    v20 = (void *)v19;
    if (qword_1ECFFE730 != -1)
      swift_once();
    v21 = (id)qword_1ECFFEBE0;
    sub_19A8C47E8();
    sub_19A8C4C44();
    sub_19A8C47D0();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v0, v18, v5);
    v22 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v23 = (v7 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v24 + v22, v0, v5);
    v25 = (_QWORD *)(v24 + v23);
    *v25 = v4;
    v25[1] = v2;
    v32[4] = sub_19A86594C;
    v32[5] = v24;
    v32[0] = MEMORY[0x1E0C809B0];
    v32[1] = 1107296256;
    OUTLINED_FUNCTION_80_0((uint64_t)sub_19A862690);
    OUTLINED_FUNCTION_72_1();
    OUTLINED_FUNCTION_33_1();
    OUTLINED_FUNCTION_179(v20, sel_getImageMap_);
    OUTLINED_FUNCTION_44_2();
    OUTLINED_FUNCTION_18_1();
    OUTLINED_FUNCTION_52_0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  }
  else
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v26 = OUTLINED_FUNCTION_15_2();
    v27 = (void *)OUTLINED_FUNCTION_22(v26, (uint64_t)qword_1ECFFE9F0);
    v28 = sub_19A8C4BF0();
    if (OUTLINED_FUNCTION_32_2(v28))
    {
      v29 = (_WORD *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_161(v29);
      OUTLINED_FUNCTION_24_1(&dword_19A825000, v30, v31, "at getImageMap: remoteObjectProxyWithErrorHandler does not implement PARDaemonXPC");
      OUTLINED_FUNCTION_0_0();
    }

    v4(0);
  }
  OUTLINED_FUNCTION_0_2();
}

uint64_t sub_19A8625F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_19A8C4C38();
  if (qword_1ECFFE730 != -1)
    swift_once();
  sub_19A8C47D0();
  return a3(a1);
}

uint64_t sub_19A862690(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_19A8C48F0();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_19A86274C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_19A8C48E4();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_19A8627AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v10 = sub_19A83327C();
  if (!v10)
  {
    if (a3)
    {
      sub_19A865950();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_188();
      OUTLINED_FUNCTION_35_2(v4);
      return;
    }
    goto LABEL_21;
  }
  v11 = (void *)v10;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_19A8C4DF4();
  }
  else
  {
    OUTLINED_FUNCTION_108_1();
  }
  v31 = a4;
  v32 = a2;
  if (!v5)
  {
LABEL_17:
    OUTLINED_FUNCTION_12_0();
    v28 = (void *)sub_19A8C4A10();
    OUTLINED_FUNCTION_112_0();
    if (a3)
    {
      v29 = OUTLINED_FUNCTION_100((uint64_t)sub_19A8629CC, v30, v31, a3, a2, MEMORY[0x1E0C809B0], 1107296256, v33, v34);
      OUTLINED_FUNCTION_68();
      OUTLINED_FUNCTION_28_2();
    }
    else
    {
      v29 = 0;
    }
    objc_msgSend(v11, sel_addEncodedEngagedResults_withConfiguration_completion_, v28, v32, v29);
    OUTLINED_FUNCTION_99_1();
    OUTLINED_FUNCTION_71();

LABEL_21:
    OUTLINED_FUNCTION_58_0();
    return;
  }
  if (v5 >= 1)
  {
    v12 = 0;
    v13 = MEMORY[0x1E0DEE9D8];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_151();
      v14 = OUTLINED_FUNCTION_146();
      PAREngagedResult.encoded()();
      v16 = v15;
      v18 = v17;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v22 = OUTLINED_FUNCTION_106_1();
        sub_19A865008(v22, v23, v24, v25, qword_1EE3B02B8, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_19A8651DC, (void (*)(uint64_t, uint64_t, _QWORD *))sub_19A8654A8);
        v13 = v26;
      }
      v20 = *(_QWORD *)(v13 + 16);
      v19 = *(_QWORD *)(v13 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_19A865008(v19 > 1, v20 + 1, 1, v13, qword_1EE3B02B8, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_19A8651DC, (void (*)(uint64_t, uint64_t, _QWORD *))sub_19A8654A8);
        v13 = v27;
      }
      ++v12;
      *(_QWORD *)(v13 + 16) = v20 + 1;
      v21 = v13 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v18;
    }
    while (v5 != v12);
    goto LABEL_17;
  }
  __break(1u);
}

void sub_19A8629CC(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_19A862A20()
{
  const void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_95_1();
  v3 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_132(v3);
  if (sub_19A83327C())
  {
    v4 = (void *)OUTLINED_FUNCTION_137();
    v5 = OUTLINED_FUNCTION_3_0();
    *(_QWORD *)(v5 + 16) = sub_19A8663A4;
    *(_QWORD *)(v5 + 24) = v2;
    OUTLINED_FUNCTION_83_1((uint64_t)sub_19A86301C, MEMORY[0x1E0C809B0], 1107296256, v13, v14);
    OUTLINED_FUNCTION_30_2();
    v6 = OUTLINED_FUNCTION_153();
    OUTLINED_FUNCTION_73_1(v6, sel_topEncodedEngagedResultsForInput_maxCount_withConfiguration_completion_);
    OUTLINED_FUNCTION_121_0();
    OUTLINED_FUNCTION_28_2();
    OUTLINED_FUNCTION_18_1();

    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_67_1();
  }
  else
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_15_2();
    OUTLINED_FUNCTION_22(v7, (uint64_t)qword_1ECFFE9F0);
    v8 = OUTLINED_FUNCTION_122();
    if (OUTLINED_FUNCTION_32_2(v8))
    {
      v9 = (_WORD *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_161(v9);
      OUTLINED_FUNCTION_24_1(&dword_19A825000, v10, v11, "Invalid XPC remote instance");
      OUTLINED_FUNCTION_0_0();
    }

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDF50);
    v12 = sub_19A8C4A10();
    OUTLINED_FUNCTION_104_1(v12);
    OUTLINED_FUNCTION_28_2();

    OUTLINED_FUNCTION_39_2(v0);
  }
}

void sub_19A862B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6)
{
  sub_19A863230(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E39218C8, (uint64_t)sub_19A86653C, (uint64_t)&block_descriptor_254, (SEL *)&selRef_topEncodedEngagedResultsForInput_maxCount_withConfiguration_completion_);
  OUTLINED_FUNCTION_163();
}

uint64_t sub_19A862BD0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  unint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;

  if (a1)
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v4 = sub_19A8C489C();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ECFFE9F0);
    swift_bridgeObjectRetain();
    v5 = sub_19A8C4878();
    v6 = sub_19A8C4BD8();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v7 = 134217984;
      sub_19A8C4CC8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_19A825000, v5, v6, "Received %ld recent results", v7, 0xCu);
      MEMORY[0x19AECCDEC](v7, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    v13 = MEMORY[0x1E0DEE9D8];
    v23 = MEMORY[0x1E0DEE9D8];
    v14 = *(_QWORD *)(a1 + 16);
    if (v14)
    {
      sub_19A8275AC(0, (unint64_t *)&unk_1ECFFDFF0);
      swift_bridgeObjectRetain();
      v15 = (unint64_t *)(a1 + 40);
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        sub_19A84449C(v16, *v15);
        if (PAREngagedResult.init(encoded:)(v16, v17))
        {
          MEMORY[0x19AECBFC4]();
          if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_19A8C4A40();
          sub_19A8C4A58();
          sub_19A8C4A34();
        }
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      v13 = v23;
    }
    swift_bridgeObjectRetain_n();
    v18 = sub_19A8C4878();
    v19 = sub_19A8C4BD8();
    v20 = v13 >> 62;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v21 = 134217984;
      if (v20)
      {
        swift_bridgeObjectRetain();
        sub_19A8C4DF4();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_19A8C4CC8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_19A825000, v18, v19, "%ld recent results deserialized", v21, 0xCu);
      MEMORY[0x19AECCDEC](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    if (v20)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDF50);
      v22 = sub_19A8C4DE8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19A8C4E3C();
      v22 = v13;
    }
    swift_bridgeObjectRelease();
    a2(v22);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v8 = sub_19A8C489C();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ECFFE9F0);
    v9 = sub_19A8C4878();
    v10 = sub_19A8C4BE4();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_19A825000, v9, v10, "Received nil for topEngagedResults", v11, 2u);
      MEMORY[0x19AECCDEC](v11, -1, -1);
    }

    return ((uint64_t (*)(_QWORD))a2)(MEMORY[0x1E0DEE9D8]);
  }
}

uint64_t sub_19A86301C(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_19A8C4A1C();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_19A863080()
{
  const void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_95_1();
  v3 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_132(v3);
  if (sub_19A83327C())
  {
    v4 = (void *)OUTLINED_FUNCTION_137();
    v5 = OUTLINED_FUNCTION_3_0();
    *(_QWORD *)(v5 + 16) = sub_19A865DF4;
    *(_QWORD *)(v5 + 24) = v2;
    OUTLINED_FUNCTION_83_1((uint64_t)sub_19A86301C, MEMORY[0x1E0C809B0], 1107296256, v13, v14);
    OUTLINED_FUNCTION_30_2();
    v6 = OUTLINED_FUNCTION_153();
    OUTLINED_FUNCTION_73_1(v6, sel_allEngagedResults_maxCount_withConfiguration_completion_);
    OUTLINED_FUNCTION_121_0();
    OUTLINED_FUNCTION_28_2();
    OUTLINED_FUNCTION_18_1();

    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_67_1();
  }
  else
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_15_2();
    OUTLINED_FUNCTION_22(v7, (uint64_t)qword_1ECFFE9F0);
    v8 = OUTLINED_FUNCTION_122();
    if (OUTLINED_FUNCTION_32_2(v8))
    {
      v9 = (_WORD *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_161(v9);
      OUTLINED_FUNCTION_24_1(&dword_19A825000, v10, v11, "Invalid XPC remote instance");
      OUTLINED_FUNCTION_0_0();
    }

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDF50);
    v12 = sub_19A8C4A10();
    OUTLINED_FUNCTION_104_1(v12);
    OUTLINED_FUNCTION_28_2();

    OUTLINED_FUNCTION_39_2(v0);
  }
}

void sub_19A8631F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6)
{
  sub_19A863230(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E3921878, (uint64_t)sub_19A866538, (uint64_t)&block_descriptor_247, (SEL *)&selRef_allEngagedResults_maxCount_withConfiguration_completion_);
  OUTLINED_FUNCTION_163();
}

void sub_19A863230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, SEL *a10)
{
  void *v10;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  os_log_type_t v22;
  _WORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v16 = sub_19A83327C();
  if (v16)
  {
    v17 = (void *)v16;
    v18 = (void *)sub_19A8C4938();
    v19 = OUTLINED_FUNCTION_3_0();
    *(_QWORD *)(v19 + 16) = a5;
    *(_QWORD *)(v19 + 24) = a6;
    aBlock[4] = a8;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_19A86301C;
    aBlock[3] = a9;
    v20 = _Block_copy(aBlock);
    OUTLINED_FUNCTION_72_1();
    OUTLINED_FUNCTION_170();
    objc_msgSend(v17, *a10, v18, a3, a4, v20);
    OUTLINED_FUNCTION_44_2();
    OUTLINED_FUNCTION_18_1();

  }
  else
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v21 = OUTLINED_FUNCTION_15_2();
    OUTLINED_FUNCTION_22(v21, (uint64_t)qword_1ECFFE9F0);
    v22 = OUTLINED_FUNCTION_122();
    if (OUTLINED_FUNCTION_32_2(v22))
    {
      v23 = (_WORD *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_161(v23);
      OUTLINED_FUNCTION_24_1(&dword_19A825000, v24, v25, "Invalid XPC remote instance");
      OUTLINED_FUNCTION_0_0();
    }

    a5(MEMORY[0x1E0DEE9D8]);
  }
  OUTLINED_FUNCTION_51_1();
}

uint64_t sub_19A8633A0(uint64_t a1, void (*a2)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  unint64_t v15;

  if (a1)
  {
    v4 = MEMORY[0x1E0DEE9D8];
    v15 = MEMORY[0x1E0DEE9D8];
    v5 = *(_QWORD *)(a1 + 16);
    if (v5)
    {
      sub_19A8275AC(0, (unint64_t *)&unk_1ECFFDFF0);
      swift_bridgeObjectRetain();
      v6 = (unint64_t *)(a1 + 40);
      do
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        sub_19A84449C(v7, *v6);
        if (PAREngagedResult.init(encoded:)(v7, v8))
        {
          MEMORY[0x19AECBFC4]();
          if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_19A8C4A40();
          sub_19A8C4A58();
          sub_19A8C4A34();
        }
        v6 += 2;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      v4 = v15;
    }
    swift_bridgeObjectRetain();
    if (v4 >> 62)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDF50);
      v9 = sub_19A8C4DE8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19A8C4E3C();
      v9 = v4;
    }
    swift_bridgeObjectRelease();
    a2(v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v11 = sub_19A8C489C();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ECFFE9F0);
    v12 = sub_19A8C4878();
    v13 = sub_19A8C4BE4();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_19A825000, v12, v13, "Received nil for allEngagedResults", v14, 2u);
      MEMORY[0x19AECCDEC](v14, -1, -1);
    }

    return ((uint64_t (*)(_QWORD))a2)(MEMORY[0x1E0DEE9D8]);
  }
}

void sub_19A86360C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = OUTLINED_FUNCTION_97_0();
  if (v0)
  {
    v1 = (void *)v0;
    v2 = (void *)sub_19A8C3E58();
    v3 = (void *)sub_19A8C3E58();
    objc_msgSend(v1, sel_clearEngagementsFromDate_toDate_, v2, v3);
    OUTLINED_FUNCTION_71();

    OUTLINED_FUNCTION_12(v3);
  }
  else
  {
    OUTLINED_FUNCTION_129();
  }
}

void sub_19A863758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;

  if (OUTLINED_FUNCTION_97_0())
  {
    v5 = (void *)OUTLINED_FUNCTION_140();
    objc_msgSend(v3, sel_clearEngagementsWithTitle_type_, v5, a3);
    OUTLINED_FUNCTION_18_1();
    OUTLINED_FUNCTION_12(v5);
  }
  else
  {
    OUTLINED_FUNCTION_129();
  }
}

void sub_19A86381C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v10 = sub_19A83327C();
  if (!v10)
  {
    if (a3)
    {
      sub_19A865950();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_188();
      OUTLINED_FUNCTION_35_2(v4);
      return;
    }
    goto LABEL_18;
  }
  v11 = (void *)v10;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_19A8C4DF4();
  }
  else
  {
    OUTLINED_FUNCTION_108_1();
  }
  v32 = a2;
  if (!v5)
  {
LABEL_17:
    OUTLINED_FUNCTION_12_0();
    v28 = (void *)sub_19A8C4A10();
    OUTLINED_FUNCTION_112_0();
    v29 = OUTLINED_FUNCTION_3_0();
    *(_QWORD *)(v29 + 16) = a3;
    *(_QWORD *)(v29 + 24) = a4;
    v30 = OUTLINED_FUNCTION_100((uint64_t)sub_19A8629CC, v31, v32, a3, a4, MEMORY[0x1E0C809B0], 1107296256, v34, v35);
    sub_19A85BF84(a3);
    OUTLINED_FUNCTION_88();
    objc_msgSend(v11, sel_clearEncodedEngagedResults_withConfiguration_completion_, v28, v33, v30);
    OUTLINED_FUNCTION_69_1();
    swift_unknownObjectRelease();

LABEL_18:
    OUTLINED_FUNCTION_58_0();
    return;
  }
  if (v5 >= 1)
  {
    v12 = 0;
    v13 = MEMORY[0x1E0DEE9D8];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_151();
      v14 = OUTLINED_FUNCTION_146();
      PAREngagedResult.encoded()();
      v16 = v15;
      v18 = v17;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v22 = OUTLINED_FUNCTION_106_1();
        sub_19A865008(v22, v23, v24, v25, qword_1EE3B02B8, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_19A8651DC, (void (*)(uint64_t, uint64_t, _QWORD *))sub_19A8654A8);
        v13 = v26;
      }
      v20 = *(_QWORD *)(v13 + 16);
      v19 = *(_QWORD *)(v13 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_19A865008(v19 > 1, v20 + 1, 1, v13, qword_1EE3B02B8, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_19A8651DC, (void (*)(uint64_t, uint64_t, _QWORD *))sub_19A8654A8);
        v13 = v27;
      }
      ++v12;
      *(_QWORD *)(v13 + 16) = v20 + 1;
      v21 = v13 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v18;
    }
    while (v5 != v12);
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_19A863A54(uint64_t result, void (*a2)(uint64_t))
{
  uint64_t v3;

  if (a2)
  {
    v3 = result;
    swift_retain();
    a2(v3);
    return sub_19A85C888((uint64_t)a2);
  }
  return result;
}

void sub_19A863B74(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = (void *)sub_19A83327C();
  if (v4)
  {
    objc_msgSend(v4, sel_updateParametersForSmartSearchV1_smartSearchV2_, a1, a2);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_37();
  }
}

void PARSearchClient.bagDidLoad(_:error:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  id v29;
  id v30;
  id v31;
  os_log_type_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47[7];

  OUTLINED_FUNCTION_34_2();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_172();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10);
  v11 = OUTLINED_FUNCTION_23_2();
  MEMORY[0x1E0C80A78](v11, v12, v13, v14, v15);
  OUTLINED_FUNCTION_45_1();
  if (v2)
  {
    OUTLINED_FUNCTION_167();
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v17 = OUTLINED_FUNCTION_15_2();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ECFFE9F0);
    OUTLINED_FUNCTION_167();
    OUTLINED_FUNCTION_167();
    v45 = sub_19A8C4878();
    v18 = sub_19A8C4BE4();
    if (os_log_type_enabled(v45, v18))
    {
      v19 = (uint8_t *)OUTLINED_FUNCTION_2();
      v47[0] = OUTLINED_FUNCTION_2();
      *(_DWORD *)v19 = 136315138;
      swift_getErrorValue();
      v20 = sub_19A8C4E6C();
      sub_19A844794(v20, v21, v47);
      sub_19A8C4CC8();
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_62_1();
      OUTLINED_FUNCTION_62_1();
      OUTLINED_FUNCTION_6_0(&dword_19A825000, v45, v18, "error loading bag %s", v19);
      OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_0_0();
    }
    OUTLINED_FUNCTION_62_1();
    OUTLINED_FUNCTION_62_1();
    OUTLINED_FUNCTION_62_1();
LABEL_17:
    OUTLINED_FUNCTION_18_0(v45);
    return;
  }
  if (!v4)
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v36 = OUTLINED_FUNCTION_15_2();
    v45 = OUTLINED_FUNCTION_22(v36, (uint64_t)qword_1ECFFE9F0);
    v37 = sub_19A8C4BE4();
    if (os_log_type_enabled(v45, v37))
    {
      v38 = (uint8_t *)OUTLINED_FUNCTION_2();
      *(_WORD *)v38 = 0;
      OUTLINED_FUNCTION_33_0(&dword_19A825000, v45, v37, "nil bag", v38);
      OUTLINED_FUNCTION_0_0();
    }
    goto LABEL_17;
  }
  v46 = v16;
  v22 = v4;
  v23 = sub_19A865624(v22);
  v25 = 0x69737265766F6E5BLL;
  if (v24)
    v25 = v23;
  v44 = v25;
  if (v24)
    v26 = v24;
  else
    v26 = 0xEB000000005D6E6FLL;
  if (qword_1ECFFEA20 != -1)
    swift_once();
  v27 = OUTLINED_FUNCTION_15_2();
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ECFFE9F0);
  v29 = v22;
  OUTLINED_FUNCTION_120_0();
  v30 = v22;
  v31 = OUTLINED_FUNCTION_120_0();
  swift_bridgeObjectRetain();
  sub_19A8C4878();
  v32 = OUTLINED_FUNCTION_139();
  if (OUTLINED_FUNCTION_65(v32))
  {
    v33 = OUTLINED_FUNCTION_2();
    v43 = (_QWORD *)OUTLINED_FUNCTION_2();
    v47[0] = OUTLINED_FUNCTION_2();
    *(_DWORD *)v33 = 138412802;
    v34 = v26;
    v35 = v31;
    sub_19A8C4CC8();
    *v43 = v31;

    *(_WORD *)(v33 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_19A844794(v44, v34, v47);
    sub_19A8C4CC8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 22) = 1024;
    objc_msgSend(v22, sel_isEnabled);

    sub_19A8C4CC8();
    _os_log_impl(&dword_19A825000, v28, (os_log_type_t)v28, "%@ got bag %s enabled %{BOOL}d", (uint8_t *)v33, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE620);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0_0();
  }

  swift_bridgeObjectRelease_n();
  v39 = OUTLINED_FUNCTION_3_0();
  *(_QWORD *)(v39 + 16) = v31;
  *(_QWORD *)(v39 + 24) = v22;
  v47[4] = (uint64_t)sub_19A8659B4;
  v47[5] = v39;
  v47[0] = MEMORY[0x1E0C809B0];
  v47[1] = 1107296256;
  v47[2] = (uint64_t)sub_19A82737C;
  v47[3] = (uint64_t)&block_descriptor_57;
  _Block_copy(v47);
  v40 = v22;
  v41 = v31;
  OUTLINED_FUNCTION_156();
  sub_19A831424((unint64_t *)&unk_1ECFFE710, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE708);
  OUTLINED_FUNCTION_185();
  OUTLINED_FUNCTION_65_1();
  v42 = OUTLINED_FUNCTION_173();
  MEMORY[0x19AECC1E0](v42);
  OUTLINED_FUNCTION_152();

  OUTLINED_FUNCTION_62(v0, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_52_0(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
  swift_release();
  OUTLINED_FUNCTION_0_2();
}

uint64_t sub_19A8641E8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;

  v3 = a1 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_sessions;
  result = swift_beginAccess();
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)v3 + 32;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_19A841EB0(v6, (uint64_t)&v10, (uint64_t *)&unk_1ECFFEAB0);
      v7 = (void *)MEMORY[0x19AECCEAC](&v10);
      sub_19A841E78((uint64_t)&v10, (uint64_t *)&unk_1ECFFEAB0);
      if (v7)
      {
        v8 = v7;
        v9 = a2;
        sub_19A8324D0(a2);
      }
      v6 += 8;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

Swift::Void __swiftcall PARSearchClient.didDownloadResource(_:)(Swift::String a1)
{
  sub_19A86436C();
}

Swift::Void __swiftcall PARSearchClient.didDeleteResource(_:)(Swift::String a1)
{
  sub_19A86436C();
}

void sub_19A86436C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[6];

  OUTLINED_FUNCTION_34_2();
  v22 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_172();
  v23 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v11, v12, v13, v14);
  v15 = OUTLINED_FUNCTION_23_2();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17, v18, v19, v20);
  OUTLINED_FUNCTION_45_1();
  v21 = (_QWORD *)OUTLINED_FUNCTION_3_0();
  v21[2] = v0;
  v21[3] = v9;
  v21[4] = v7;
  v24[4] = v5;
  v24[5] = v21;
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 1107296256;
  v24[2] = sub_19A82737C;
  v24[3] = v22;
  _Block_copy(v24);
  OUTLINED_FUNCTION_120_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_156();
  sub_19A831424((unint64_t *)&unk_1ECFFE710, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE708);
  OUTLINED_FUNCTION_185();
  OUTLINED_FUNCTION_65_1();
  MEMORY[0x19AECC1E0](0, v2, v1, v9);
  OUTLINED_FUNCTION_55_1();
  OUTLINED_FUNCTION_62(v1, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  OUTLINED_FUNCTION_52_0(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  swift_release();
  OUTLINED_FUNCTION_0_2();
}

void sub_19A8644D8(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char **v8;
  char **v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  char **v15;
  char **v16;
  void *v17;
  _BYTE v18[8];

  v5 = a1 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_sessions;
  OUTLINED_FUNCTION_28_1();
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)v5 + 32;
    swift_bridgeObjectRetain_n();
    v8 = &selRef_avgRTT;
    v9 = &selRef_timeoutIntervalForRequest;
    while (1)
    {
      sub_19A841EB0(v7, (uint64_t)v18, (uint64_t *)&unk_1ECFFEAB0);
      v10 = (char *)MEMORY[0x19AECCEAC](v18);
      sub_19A841E78((uint64_t)v18, (uint64_t *)&unk_1ECFFEAB0);
      if (v10)
      {
        v11 = (void *)MEMORY[0x19AECCEAC](&v10[OBJC_IVAR___PARSessionSwiftInternal_session]);
        if (v11)
        {
          v12 = v11;
          v13 = objc_msgSend(v11, v8[184]);
          if (v13)
          {
            v14 = v13;
            if ((objc_msgSend(v13, v9[451], *a4) & 1) != 0)
            {
              if ((objc_msgSend(v14, v9[451], *a4) & 1) != 0)
              {
                swift_unknownObjectRetain();
                v15 = v8;
                v16 = v9;
                v17 = (void *)sub_19A8C4938();
                objc_msgSend(v14, *a4, v12, v17);

                swift_unknownObjectRelease_n();
                v9 = v16;
                v8 = v15;
              }
              else
              {

                OUTLINED_FUNCTION_42_2();
              }
              goto LABEL_13;
            }

            OUTLINED_FUNCTION_42_2();
          }
          else
          {

          }
        }
        else
        {

        }
      }
LABEL_13:
      v7 += 8;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n();
        break;
      }
    }
  }
  OUTLINED_FUNCTION_51_1();
}

uint64_t sub_19A864680(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = sub_19A8C4944();
  v8 = v7;
  v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease();
}

uint64_t PARSearchClient.didReceiveFeedbackData(_:agent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t ObjectType;

  v9 = v4 + OBJC_IVAR____TtC10CoreParsec15PARSearchClient_receivingStreamDelegate;
  OUTLINED_FUNCTION_28_1();
  result = MEMORY[0x19AECCEAC](v9);
  if (result)
  {
    v11 = *(_QWORD *)(v9 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, a2, a3, a4, ObjectType, v11);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_19A86484C(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    objc_msgSend(v1, sel_isSubscribed);

    OUTLINED_FUNCTION_40();
  }
}

void sub_19A8648B4(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  NSObject *oslog;
  uint64_t v10;

  if (qword_1ECFFEA20 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_15_2();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ECFFE9F0);
  v3 = a1;
  v4 = a1;
  oslog = sub_19A8C4878();
  v5 = sub_19A8C4BE4();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)OUTLINED_FUNCTION_2();
    v10 = OUTLINED_FUNCTION_2();
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v7 = sub_19A8C4E6C();
    sub_19A844794(v7, v8, &v10);
    sub_19A8C4CC8();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_32_1();
    OUTLINED_FUNCTION_32_1();
    OUTLINED_FUNCTION_6_0(&dword_19A825000, oslog, v5, "%s", v6);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_0_0();
  }
  OUTLINED_FUNCTION_32_1();
  OUTLINED_FUNCTION_32_1();

}

uint64_t sub_19A864A54(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t), uint64_t a5, const char *a6)
{
  void *v6;
  os_log_type_t v7;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;

  if (a2)
  {
    OUTLINED_FUNCTION_131();
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v12 = OUTLINED_FUNCTION_15_2();
    v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ECFFE9F0);
    OUTLINED_FUNCTION_131();
    OUTLINED_FUNCTION_131();
    sub_19A8C4878();
    v14 = OUTLINED_FUNCTION_122();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)OUTLINED_FUNCTION_2();
      v28 = OUTLINED_FUNCTION_2();
      *(_DWORD *)v15 = 136315138;
      OUTLINED_FUNCTION_131();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE150);
      v16 = sub_19A8C4950();
      sub_19A844794(v16, v17, &v28);
      OUTLINED_FUNCTION_180();
      sub_19A8C4CC8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_68_1();
      OUTLINED_FUNCTION_68_1();
      OUTLINED_FUNCTION_6_0(&dword_19A825000, v13, v14, a6, v15);
      OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_0_0();
    }
    OUTLINED_FUNCTION_68_1();
    OUTLINED_FUNCTION_68_1();
    OUTLINED_FUNCTION_68_1();

  }
  else
  {
    if (qword_1ECFFEA20 != -1)
      swift_once();
    v18 = OUTLINED_FUNCTION_15_2();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ECFFE9F0);
    v19 = a1;
    v20 = OUTLINED_FUNCTION_120_0();
    v21 = v6;
    v22 = v20;
    OUTLINED_FUNCTION_168();
    v23 = OUTLINED_FUNCTION_105_1();
    if (OUTLINED_FUNCTION_65(v23))
    {
      v24 = (uint8_t *)OUTLINED_FUNCTION_2();
      v28 = OUTLINED_FUNCTION_2();
      *(_DWORD *)v24 = 136315138;
      sub_19A86484C(a1);
      sub_19A844794(v25, v26, &v28);
      OUTLINED_FUNCTION_180();
      sub_19A8C4CC8();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_0(&dword_19A825000, v20, v7, "subscription status: %s", v24);
      OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_0_0();
    }

  }
  return a4(a1, a2);
}

_QWORD *sub_19A864D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t (*v11)(uint64_t);

  swift_defaultActor_initialize();
  sub_19A8C3DF8();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
  sub_19A831424(&qword_1ECFFE8E0, v11, MEMORY[0x1E0CB0018]);
  v5[14] = sub_19A8C4908();
  v5[15] = a1;
  v5[16] = a2;
  v5[17] = a3;
  v5[18] = a4;
  v5[19] = a5;
  return v5;
}

uint64_t sub_19A864E18(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_19A864E40(a1, a2, a3, a4, (uint64_t *)&unk_1EE3B0508, (void (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_19A864E2C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_19A864E40(a1, a2, a3, a4, &qword_1ECFFDF30, (void (*)(_QWORD))MEMORY[0x1E0D6DA20]);
}

uint64_t sub_19A864E40(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(_QWORD))
{
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  size_t v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_125();
    if (v10 != v11)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_124_0();
    }
  }
  else
  {
    v9 = a2;
  }
  v12 = *(_QWORD *)(a4 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(a4 + 16);
  else
    v13 = v9;
  if (!v13)
  {
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v14 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = (_QWORD *)swift_allocObject();
  v18 = _swift_stdlib_malloc_size(v17);
  if (!v15 || (v18 - v16 == 0x8000000000000000 ? (v19 = v15 == -1) : (v19 = 0), v19))
  {
LABEL_23:
    OUTLINED_FUNCTION_27_1();
    OUTLINED_FUNCTION_122_0();
    result = sub_19A8C4DDC();
    __break(1u);
    return result;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_18:
  a6(0);
  OUTLINED_FUNCTION_178();
  v21 = (unint64_t)v17 + v20;
  if ((a1 & 1) != 0)
  {
    sub_19A8653E4(a4 + v20, v12, v21, a6);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_7_2();
  }
  else
  {
    sub_19A8650E8(0, v12, v21, a4, (uint64_t (*)(_QWORD))a6);
  }
  return (uint64_t)v17;
}

uint64_t sub_19A864FD8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_19A864E40(a1, a2, a3, a4, &qword_1ECFFDF28, (void (*)(_QWORD))MEMORY[0x1E0D6DA00]);
}

void sub_19A864FEC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_19A865008(a1, a2, a3, a4, &qword_1EE3B0E00, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_19A8652D0, (void (*)(uint64_t, uint64_t, _QWORD *))sub_19A8654A8);
}

void sub_19A865008(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(_QWORD, uint64_t, _QWORD *, uint64_t), void (*a7)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  size_t v17;
  _QWORD *v18;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_125();
    if (v12 != v13)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_124_0();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v16 = (_QWORD *)OUTLINED_FUNCTION_3_0();
    v17 = _swift_stdlib_malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 16);
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v18 = v16 + 4;
  if ((a1 & 1) != 0)
  {
    a7(a4 + 32, v14, v18);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_7_2();
  }
  else
  {
    a6(0, v14, v18, a4);
  }
}

uint64_t sub_19A8650E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      OUTLINED_FUNCTION_7_2();
      return v14;
    }
  }
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_122_0();
  result = OUTLINED_FUNCTION_171();
  __break(1u);
  return result;
}

uint64_t sub_19A8651DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_19A8C4E0C();
  __break(1u);
  return result;
}

uint64_t sub_19A8652D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0E08);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_19A8C4E0C();
  __break(1u);
  return result;
}

void sub_19A8653E4(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD))
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_27_1();
    OUTLINED_FUNCTION_122_0();
    OUTLINED_FUNCTION_171();
    __break(1u);
  }
  else if (a3 < a1 || a1 + *(_QWORD *)(*(_QWORD *)(((uint64_t (*)(_QWORD))a4)(0) - 8) + 72) * a2 <= a3)
  {
    a4(0);
    OUTLINED_FUNCTION_181();
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 == a1)
  {
    OUTLINED_FUNCTION_107_1();
  }
  else
  {
    OUTLINED_FUNCTION_181();
    swift_arrayInitWithTakeBackToFront();
  }
}

char *sub_19A8654A8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_19A8C4E0C();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

unint64_t sub_19A86552C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    result = sub_19A8C4E0C();
    __break(1u);
  }
  else if (a3 >= result && result + 8 * a2 > a3)
  {
    if (a3 != result)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEAB0);
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFEAB0);
    return swift_arrayInitWithTakeFrontToBack();
  }
  return result;
}

uint64_t sub_19A865624(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_version);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_19A8C4944();

  return v3;
}

_QWORD *sub_19A865684(void *a1, void *a2, void *a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  __int128 v22;
  uint64_t v23;
  _BYTE v24[40];

  a5[2] = a3;
  type metadata accessor for FeedbackReporter();
  v10 = swift_allocObject();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 24) = &off_1E391FDD0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v10 + 16) = sub_19A865E78;
  *(_QWORD *)(v10 + 24) = v11;
  a5[3] = v10;
  type metadata accessor for URLValidator();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  a5[4] = v12;
  type metadata accessor for ImageIDToURL();
  v13 = swift_allocObject();
  v14 = a3;
  swift_retain();
  v15 = a2;
  a5[5] = sub_19A842360(v15, v13);
  sub_19A841EB0(a4, (uint64_t)&v22, (uint64_t *)&unk_1ECFFE6D0);
  if (v23)
  {
    sub_19A8465C0(&v22, (uint64_t)v24);
  }
  else
  {
    sub_19A8420EC();
    v17 = v16;
    v18 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_, v16);

    sub_19A8C4BC0();
    sub_19A841E78((uint64_t)&v22, (uint64_t *)&unk_1ECFFE6D0);
  }
  sub_19A865E80((uint64_t)v24, (uint64_t)&v22);
  v19 = swift_allocObject();
  sub_19A8465C0(&v22, v19 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFE6E0);
  swift_allocObject();
  v20 = sub_19A864D60(-1, (uint64_t)sub_19A84AE8C, 0, (uint64_t)&unk_1EE3B0E78, v19);

  sub_19A841E78(a4, (uint64_t *)&unk_1ECFFE6D0);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  a5[6] = v20;
  return a5;
}

void sub_19A8658B4(uint64_t a1)
{
  OUTLINED_FUNCTION_36_2(a1);
}

uint64_t sub_19A8658C4(uint64_t a1, uint64_t a2)
{
  return sub_19A832130(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))sub_19A832184);
}

void sub_19A8658D4(uint64_t a1)
{
  OUTLINED_FUNCTION_77_1(a1);
}

void sub_19A8658E0(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_178();
  sub_19A85F0E8(a1, *(void (**)(_QWORD, uint64_t))(v1 + 16));
  OUTLINED_FUNCTION_37();
}

uint64_t sub_19A865928(uint64_t a1, uint64_t a2)
{
  return sub_19A832130(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))sub_19A85F38C);
}

unint64_t sub_19A865950()
{
  unint64_t result;

  result = qword_1EE3B0D68[0];
  if (!qword_1EE3B0D68[0])
  {
    result = MEMORY[0x19AECCD38](&unk_19A8CF294, &type metadata for PARSearchClient.SearchClientError);
    atomic_store(result, qword_1EE3B0D68);
  }
  return result;
}

uint64_t sub_19A86598C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_46_2();
  return swift_deallocObject();
}

uint64_t sub_19A8659AC(uint64_t a1)
{
  uint64_t v1;

  return sub_19A863A54(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_19A8659B4()
{
  uint64_t v0;

  return sub_19A8641E8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_19A8659BC()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_19A8659C8()
{
  uint64_t *v0;

  sub_19A8644D8(v0[2], v0[3], v0[4], (SEL *)&selRef_session_didDownloadResource_);
}

uint64_t sub_19A8659EC()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_19A8659F8()
{
  uint64_t *v0;

  sub_19A8644D8(v0[2], v0[3], v0[4], (SEL *)&selRef_session_didDeleteResource_);
}

void sub_19A865A1C()
{
  sub_19A85DBB0();
}

void sub_19A865A34(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_40();
}

uint64_t dispatch thunk of PARFeedbackReceivingStreamDelegate.didReceiveFeedbackData(_:agent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t method lookup function for PARSearchClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PARSearchClient.receivingStreamDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of PARSearchClient.receivingStreamDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of PARSearchClient.receivingStreamDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of PARSearchClient.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of PARSearchClient.bag(_:reply:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of PARSearchClient.forceFetchBag(_:reply:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of PARSearchClient.request(_:request:reply:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of PARSearchClient.reportFeedback(_:feedback:queryId:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of PARSearchClient.listSessions(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of PARSearchClient.fileHandleAndAttributes(forResource:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of PARSearchClient.getImageMap(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of PARSearchClient.clearEngagements(from:to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of PARSearchClient.clearEngagements(with:type:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of PARSearchClient.clearEngagedResults(_:with:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of PARSearchClient.updateParameters(forSmartSearchV1:smartSearchV2:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t type metadata accessor for WeakArray(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakArray);
}

uint64_t getEnumTagSinglePayload for PARSearchClient.SearchClientError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for PARSearchClient.SearchClientError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19A865C88 + 4 * byte_19A8CF000[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19A865CA8 + 4 * byte_19A8CF005[v4]))();
}

_BYTE *sub_19A865C88(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19A865CA8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19A865CB0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19A865CB8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19A865CC0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19A865CC8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PARSearchClient.SearchClientError()
{
  return &type metadata for PARSearchClient.SearchClientError;
}

unint64_t sub_19A865CE8()
{
  unint64_t result;

  result = qword_1EE3B0DF8;
  if (!qword_1EE3B0DF8)
  {
    result = MEMORY[0x19AECCD38](&unk_19A8CF124, &type metadata for PARSearchClient.SearchClientError);
    atomic_store(result, (unint64_t *)&qword_1EE3B0DF8);
  }
  return result;
}

void sub_19A865D24()
{
  JUMPOUT(0x19AECCD38);
}

void sub_19A865D34()
{
  JUMPOUT(0x19AECCD38);
}

uint64_t sub_19A865D44()
{
  return MEMORY[0x1E0DEB430];
}

void sub_19A865D50()
{
  JUMPOUT(0x19AECCD38);
}

void sub_19A865D60()
{
  JUMPOUT(0x19AECCD38);
}

void sub_19A865D70(uint64_t a1)
{
  uint64_t v1;

  sub_19A86274C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_19A865D7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_11_3();
  return sub_19A8625F4(a1, v1 + v3, *(uint64_t (**)(uint64_t))(v1 + v4));
}

void sub_19A865DB0(uint64_t a1)
{
  uint64_t v1;

  sub_19A861FB0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_19A865DC0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_41_1();
  return swift_deallocObject();
}

void sub_19A865DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_19A85E764(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_19A865DF4(uint64_t a1)
{
  uint64_t v1;

  sub_19A85D0D0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_19A865DFC()
{
  OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_46_2();
  return swift_deallocObject();
}

uint64_t sub_19A865E14(uint64_t a1)
{
  uint64_t v1;

  return sub_19A8633A0(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_19A865E1C(uint64_t a1)
{
  uint64_t v1;

  return sub_19A862BD0(a1, *(void (**)(uint64_t))(v1 + 16));
}

void sub_19A865E24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_19A858B30(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_19A865E30(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_19A858894(a1, a2, a3, *(uint64_t (**)(void *, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_19A865E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19A85840C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_19A865E5C()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_46_2();
  return swift_deallocObject();
}

uint64_t sub_19A865E78()
{
  uint64_t v0;

  return sub_19A84EDC0(v0);
}

uint64_t sub_19A865E80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_19A865EC4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19A865EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_19A8663A8;
  return sub_19A84AE94(a1, a2, v2 + 16);
}

uint64_t sub_19A865F50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19A865FA4;
  return sub_19A84EA80(a1, v1);
}

uint64_t sub_19A865FA4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19A865FEC()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19A865FF8(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19A864A54(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(void *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), "failed to get subscription status: %s");
}

uint64_t sub_19A86601C()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19A866028(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19A864A54(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(void *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), "failed to unsubscribe: %s");
}

uint64_t sub_19A86604C()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_59Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_145();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t sub_19A86608C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19A864A54(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(void *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), "failed to subscribe: %s");
}

uint64_t objectdestroy_164Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_117();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_184Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_117();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19A866128(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_19A858010(a1, a2, a3, *(uint64_t (**)(void *, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), *(_QWORD *)(v3 + 40), *(void **)(v3 + 48));
}

uint64_t sub_19A866140()
{
  uint64_t v0;

  OUTLINED_FUNCTION_145();

  OUTLINED_FUNCTION_46_2();
  return swift_deallocObject();
}

void sub_19A866160(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_19A854814(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_63(v0);
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_96_1();
  return OUTLINED_FUNCTION_66_1();
}

uint64_t sub_19A8661B0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_11_3();
  return sub_19A861730(a1, v1 + v3, *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v1 + v4), *(_QWORD *)(v1 + v4 + 8), *(_QWORD *)(v1 + ((v4 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_52() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_62(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_169();
  return swift_deallocObject();
}

uint64_t sub_19A86627C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, void *);

  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_96_1();
  return sub_19A861A38(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_19A8662E4()
{
  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_41_1();
  return swift_deallocObject();
}

uint64_t sub_19A866304()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_41_1();
  return swift_deallocObject();
}

uint64_t sub_19A866320()
{
  uint64_t v0;

  swift_release();

  OUTLINED_FUNCTION_46_2();
  return swift_deallocObject();
}

uint64_t sub_19A866354(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_19A866374(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_4()
{
  return swift_dynamicCast();
}

void *OUTLINED_FUNCTION_22_2@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, char aBlock, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  a6 = a1;
  a7 = v7;
  return _Block_copy(&aBlock);
}

uint64_t OUTLINED_FUNCTION_23_2()
{
  return sub_19A8C48CC();
}

void *OUTLINED_FUNCTION_29_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = a1;
  *(_QWORD *)(v2 - 120) = v1;
  return _Block_copy((const void *)(v2 - 144));
}

BOOL OUTLINED_FUNCTION_32_2(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_35_2(id a1)
{

}

void OUTLINED_FUNCTION_36_2(uint64_t a1)
{
  sub_19A8658E0(a1);
}

uint64_t OUTLINED_FUNCTION_37_2()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_39_2(const void *aBlock)
{
  _Block_release(aBlock);
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_52_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_53_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 272) = a3;
  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_55_1()
{
  const void *v0;

  _Block_release(v0);
}

BOOL OUTLINED_FUNCTION_56_1(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id OUTLINED_FUNCTION_57_1(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, v2, v4);
}

uint64_t OUTLINED_FUNCTION_59_1()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v0 + 16))(v0, *(_QWORD *)(v1 - 248), 0);
}

id OUTLINED_FUNCTION_63_1(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_65_1()
{
  return sub_19A8C4D1C();
}

void OUTLINED_FUNCTION_69_1()
{
  const void *v0;

  _Block_release(v0);
}

void OUTLINED_FUNCTION_71_0()
{
  JUMPOUT(0x19AECCEACLL);
}

uint64_t OUTLINED_FUNCTION_72_1()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_74_0()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_76_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v0 + 16))(v0, 0, 0);
}

void OUTLINED_FUNCTION_77_1(uint64_t a1)
{
  sub_19A8658E0(a1);
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return sub_19A8C4D10();
}

void *OUTLINED_FUNCTION_80_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1;
  return _Block_copy((const void *)(v2 - 128));
}

void *OUTLINED_FUNCTION_83_1@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  a4 = a1;
  a5 = v5;
  return _Block_copy(&a2);
}

id OUTLINED_FUNCTION_87_1()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_88_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 280) = a3;
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_90_1()
{
  return sub_19A8C4D10();
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_93_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = v0;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_94_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for WeakBox(0, a3, a3, a4);
}

uint64_t OUTLINED_FUNCTION_98_0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 - 256))();
}

void OUTLINED_FUNCTION_99_1()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_104_1(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_105_1()
{
  return sub_19A8C4BD8();
}

uint64_t OUTLINED_FUNCTION_106_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_108_1()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_109_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 288) = a1;
}

id OUTLINED_FUNCTION_110_0(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, *(_QWORD *)(v4 - 192), v2);
}

uint64_t OUTLINED_FUNCTION_111_0()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_112_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_113_0()
{
  return swift_unknownObjectRetain();
}

void OUTLINED_FUNCTION_115()
{
  const void *v0;

  _Block_release(v0);
}

void OUTLINED_FUNCTION_119_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 152) = a1;
  *(_QWORD *)(v1 - 144) = v2;
}

id OUTLINED_FUNCTION_120_0()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_121_0()
{
  const void *v0;

  _Block_release(v0);
}

void *OUTLINED_FUNCTION_127()
{
  const void *v0;

  return _Block_copy(v0);
}

id OUTLINED_FUNCTION_131()
{
  void *v0;

  return v0;
}

void *OUTLINED_FUNCTION_132(uint64_t a1)
{
  const void *v1;

  *(_QWORD *)(a1 + 16) = v1;
  return _Block_copy(v1);
}

uint64_t OUTLINED_FUNCTION_136()
{
  return sub_19A8C47C4();
}

uint64_t OUTLINED_FUNCTION_137()
{
  return sub_19A8C4938();
}

uint64_t OUTLINED_FUNCTION_139()
{
  return sub_19A8C4BFC();
}

uint64_t OUTLINED_FUNCTION_140()
{
  return sub_19A8C4938();
}

uint64_t OUTLINED_FUNCTION_143(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = *(_QWORD *)(result - 8);
  return result;
}

id OUTLINED_FUNCTION_144(id a1, SEL a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(a1, a2, a3, *(_QWORD *)(v4 - 264), v3);
}

void OUTLINED_FUNCTION_145()
{
  uint64_t v0;

}

id OUTLINED_FUNCTION_146()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1 + 32);
}

uint64_t OUTLINED_FUNCTION_150()
{
  return swift_release();
}

void OUTLINED_FUNCTION_151()
{
  JUMPOUT(0x19AECC324);
}

void OUTLINED_FUNCTION_152()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_153()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_154()
{
  return sub_19A8C47C4();
}

uint64_t OUTLINED_FUNCTION_156()
{
  return sub_19A8C48B4();
}

id OUTLINED_FUNCTION_157()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_158(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = a1 - (v1 & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_159(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = a1 - (v1 & 0xFFFFFFFFFFFFFFF0);
}

id OUTLINED_FUNCTION_160@<X0>(id a1@<X0>, SEL a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return objc_msgSend(a1, a2, a3, *(_QWORD *)(a4 - 256), v4);
}

_WORD *OUTLINED_FUNCTION_161(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_162(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_164()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_165()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_167()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_168()
{
  return sub_19A8C4878();
}

uint64_t OUTLINED_FUNCTION_169()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_170()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_171()
{
  return sub_19A8C4E0C();
}

uint64_t OUTLINED_FUNCTION_172()
{
  return sub_19A8C48A8();
}

uint64_t OUTLINED_FUNCTION_173()
{
  return 0;
}

id OUTLINED_FUNCTION_174()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 3109));
}

uint64_t OUTLINED_FUNCTION_175()
{
  return sub_19A8C47E8();
}

id OUTLINED_FUNCTION_179(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_181()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_184(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

unint64_t OUTLINED_FUNCTION_185()
{
  return sub_19A831460();
}

uint64_t OUTLINED_FUNCTION_187()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_188()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_19A866B60(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];

  sub_19A8679D8(a1, v19);
  v3 = v19[0];
  v4 = v19[1];
  v5 = v19[3];
  v6 = v19[4];
  v7 = (unint64_t)(v19[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v10 = v9 | (v5 << 6);
  while (1)
  {
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_retain();
    a2(v16, v17, v18);
    swift_release();
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_2;
LABEL_3:
    v11 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v4 + 8 * v11);
    v13 = v5 + 1;
    if (!v12)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (!v12)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v4 + 8 * v13);
        if (!v12)
        {
          v13 = v5 + 4;
          if (v5 + 4 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v4 + 8 * v13);
          if (!v12)
          {
            v13 = v5 + 5;
            if (v5 + 5 >= v7)
              return swift_release();
            v12 = *(_QWORD *)(v4 + 8 * v13);
            if (!v12)
            {
              v14 = v5 + 6;
              while (v14 < v7)
              {
                v12 = *(_QWORD *)(v4 + 8 * v14++);
                if (v12)
                {
                  v13 = v14 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v5 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_19A866CE0()
{
  uint64_t v0;

  sub_19A85CB3C(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_19A866D04()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v14;

  v1 = v0;
  v14 = MEMORY[0x1E0DEE9D8];
  v2 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 32) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  v3 = OUTLINED_FUNCTION_21();
  sub_19A866B60(v3, (void (*)(uint64_t, uint64_t, uint64_t))sub_19A866FF8);
  OUTLINED_FUNCTION_7();
  os_unfair_lock_unlock(v2);
  if (MEMORY[0x19AECCEAC](v1 + 16))
  {
    v4 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24);
    v7 = swift_bridgeObjectRetain();
    v6(v7, ObjectType, v4);
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_18_1();
  }
  v8 = *(_QWORD *)(v14 + 16);
  if (v8)
  {
    OUTLINED_FUNCTION_21();
    v9 = (uint64_t *)(v14 + 40);
    do
    {
      v10 = *v9;
      v11 = swift_getObjectType();
      v12 = *(void (**)(uint64_t, uint64_t))(v10 + 72);
      swift_unknownObjectRetain();
      v12(v11, v10);
      OUTLINED_FUNCTION_18_1();
      v9 += 2;
      --v8;
    }
    while (v8);
    OUTLINED_FUNCTION_7();
  }
  OUTLINED_FUNCTION_7();
  sub_19A85CB3C(v1 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_19A866E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v16;
  uint64_t v17;

  v8 = MEMORY[0x19AECCEAC](a3 + 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v10 + 64))(ObjectType, v10);
    swift_unknownObjectRetain();
    sub_19A86719C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_19A864FEC);
    v12 = *(_QWORD *)(*a4 + 16);
    sub_19A86721C(v12, (uint64_t (*)(BOOL))sub_19A864FEC);
    v13 = *a4;
    *(_QWORD *)(v13 + 16) = v12 + 1;
    v14 = v13 + 16 * v12;
    *(_QWORD *)(v14 + 32) = v9;
    *(_QWORD *)(v14 + 40) = v10;
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_19A8444E0(0, (unint64_t *)&unk_1ECFFEAD8);
    v16 = (void *)sub_19A8C4C8C();
    sub_19A8C4BE4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_19A8CE860;
    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 64) = sub_19A8333A4();
    *(_QWORD *)(v17 + 32) = a1;
    *(_QWORD *)(v17 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_19A8C47AC();

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19A866FB8()
{
  sub_19A866D04();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityMonitor.WeakReference()
{
  return objc_opt_self();
}

uint64_t sub_19A866FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_19A866E5C(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

uint64_t sub_19A867000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  swift_beginAccess();
  v10 = sub_19A8677B8(a2, a3);
  swift_endAccess();
  result = swift_release();
  if (!v10)
  {
    if (MEMORY[0x19AECCEAC](a1 + 16))
    {
      v12 = *(_QWORD *)(a1 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 40))(a4, a5, ObjectType, v12);
      OUTLINED_FUNCTION_18_1();
    }
    v14 = swift_getObjectType();
    v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(v14, a5);
    sub_19A8C4BE4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE900);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_19A8CE8E0;
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(v14, a5);
    v19 = v18;
    v20 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
    v21 = sub_19A8333A4();
    *(_QWORD *)(v16 + 64) = v21;
    *(_QWORD *)(v16 + 32) = v17;
    *(_QWORD *)(v16 + 40) = v19;
    (*(void (**)(uint64_t, uint64_t))(a5 + 40))(v14, a5);
    v22 = sub_19A8C4D58();
    *(_QWORD *)(v16 + 96) = v20;
    *(_QWORD *)(v16 + 104) = v21;
    *(_QWORD *)(v16 + 72) = v22;
    *(_QWORD *)(v16 + 80) = v23;
    sub_19A8C47AC();

    return OUTLINED_FUNCTION_12_0();
  }
  return result;
}

uint64_t sub_19A86719C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_19A8671F0(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_19A8C4A40();
  return result;
}

uint64_t sub_19A86721C(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

unint64_t sub_19A86725C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_19A8C4EA8();
  sub_19A8C4980();
  v4 = sub_19A8C4EC0();
  return sub_19A867324(a1, a2, v4);
}

unint64_t sub_19A8672C0(uint64_t a1)
{
  uint64_t v2;

  sub_19A8C3DF8();
  sub_19A867A10(&qword_1ECFFE8E0, MEMORY[0x1E0CB0018]);
  v2 = sub_19A8C4914();
  return sub_19A867404(a1, v2);
}

unint64_t sub_19A867324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_19A8C4E30() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_19A8C4E30() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_19A867404(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  _QWORD v20[2];

  v3 = v2;
  v20[1] = a1;
  v5 = sub_19A8C3DF8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = -1 << *(_BYTE *)(v3 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v3 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v6 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v17(v12, *(_QWORD *)(v3 + 48) + v16 * v14, v5);
      sub_19A867A10(&qword_1ECFFDF78, MEMORY[0x1E0CB0028]);
      v18 = sub_19A8C492C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      if ((v18 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

uint64_t sub_19A86753C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_19A8672C0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE3B02A8);
    sub_19A8C4DC4();
    v8 = *(_QWORD *)(v14 + 48);
    v9 = sub_19A8C3DF8();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v6, v9);
    v10 = *(_QWORD *)(v14 + 56);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
    sub_19A84978C(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, a2);
    sub_19A867A10(&qword_1ECFFE8E0, MEMORY[0x1E0CB0018]);
    sub_19A8C4DD0();
    *v3 = v14;
    swift_bridgeObjectRelease();
    return __swift_storeEnumTagSinglePayload(a2, 0, 1, v11);
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v13);
  }
}

uint64_t sub_19A8676A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;

  v3 = v2;
  OUTLINED_FUNCTION_21();
  v6 = sub_19A86725C(a1, a2);
  LOBYTE(a2) = v7;
  OUTLINED_FUNCTION_7();
  if ((a2 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  v10 = *v3;
  *v3 = 0x8000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0290);
  sub_19A8C4DC4();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v6);
  sub_19A8444E0(0, &qword_1ECFFDD50);
  sub_19A8C4DD0();
  *v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_19A8677B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_19A86725C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  v10 = *v3;
  *v3 = 0x8000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDFC8);
  sub_19A8C4DC4();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v6);
  type metadata accessor for ActivityMonitor.WeakReference();
  sub_19A8C4DD0();
  *v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_19A8678BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;

  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
  v10 = v9;
  v11 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 32) + 16);
  os_unfair_lock_lock(v11);
  sub_19A867000(a2, v8, v10, a1, a4);
  os_unfair_lock_unlock(v11);
  OUTLINED_FUNCTION_12_0();
  swift_unknownObjectRetain();
  sub_19A867968(a2, a1, a3, a4);
  return swift_unknownObjectRelease();
}

uint64_t sub_19A867968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;

  result = MEMORY[0x19AECCEAC](a1 + 16);
  if (result)
  {
    v8 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a4, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_19A8679D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_19A867A10(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_19A8C3DF8();
    result = MEMORY[0x19AECCD38](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19A867A50(unint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  char v26;
  char v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t result;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;

  v5 = a1;
  if (a1 >> 62)
  {
LABEL_45:
    swift_bridgeObjectRetain();
    v6 = sub_19A8C4DF4();
    if (v6)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
    return swift_bridgeObjectRelease();
LABEL_3:
  v7 = v5 & 0xC000000000000001;
  v8 = 4;
  v50 = (_QWORD *)a3;
  v51 = v5;
  v52 = v5 & 0xC000000000000001;
  v53 = a2;
  v49 = v6;
  while (1)
  {
    a3 = v8 - 4;
    if (v7)
      v9 = (id)MEMORY[0x19AECC324](v8 - 4, v5);
    else
      v9 = *(id *)(v5 + 8 * v8);
    v10 = v9;
    v11 = v8 - 3;
    if (__OFADD__(a3, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v12 = sub_19A851244(v9, (SEL *)&selRef_sectionHeader);
    if (!v13)
    {

      goto LABEL_40;
    }
    v14 = v12;
    a3 = v13;
    v54 = v8 - 3;
    v55 = v8;
    v15 = *a2;
    if (*(_QWORD *)(*a2 + 16))
    {
      v16 = sub_19A86725C(v12, v13);
      if ((v17 & 1) != 0)
      {
        v18 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v16);
        swift_bridgeObjectRelease();
        v19 = v18;
        goto LABEL_30;
      }
    }
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C650]), sel_init);
    if (!v20)
    {
      swift_bridgeObjectRetain();
      v25 = sub_19A86725C(v14, a3);
      v27 = v26;
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v56 = *a2;
        *a2 = 0x8000000000000000;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0290);
        sub_19A8C4DC4();
        swift_bridgeObjectRelease();
        v28 = *(void **)(*(_QWORD *)(v56 + 56) + 8 * v25);
        sub_19A8444E0(0, &qword_1ECFFDD50);
        sub_19A8C4DD0();
        *v53 = v56;

        a2 = v53;
        swift_bridgeObjectRelease();
      }
      else
      {

      }
      swift_bridgeObjectRelease();
      v7 = v52;
      v11 = v54;
      v8 = v55;
LABEL_40:
      if (v11 == v6)
        return swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    v21 = v20;
    sub_19A868858(v14, a3, v20);
    v22 = v21;
    sub_19A851244(v10, (SEL *)&selRef_sectionBundleIdentifier);
    if (v23)
    {
      v24 = (void *)sub_19A8C4938();
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = 0;
    }
    objc_msgSend(v22, sel_setBundleIdentifier_, v24);

    sub_19A86DEB8(MEMORY[0x1E0DEE9D8], v22);
    v29 = v22;
    swift_isUniquelyReferenced_nonNull_native();
    v30 = *a2;
    v57 = (_QWORD *)*a2;
    *a2 = 0x8000000000000000;
    v31 = sub_19A86725C(v14, a3);
    v33 = *(_QWORD *)(v30 + 16);
    v34 = (v32 & 1) == 0;
    a2 = (_QWORD *)(v33 + v34);
    if (__OFADD__(v33, v34))
      goto LABEL_43;
    v35 = v31;
    v5 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0290);
    a2 = v53;
    if ((sub_19A8C4DC4() & 1) != 0)
    {
      v36 = sub_19A86725C(v14, a3);
      if ((v5 & 1) != (v37 & 1))
        goto LABEL_48;
      v35 = v36;
    }
    if ((v5 & 1) != 0)
    {
      v38 = v57[7];

      *(_QWORD *)(v38 + 8 * v35) = v29;
    }
    else
    {
      v57[(v35 >> 6) + 8] |= 1 << v35;
      v39 = (uint64_t *)(v57[6] + 16 * v35);
      *v39 = v14;
      v39[1] = a3;
      *(_QWORD *)(v57[7] + 8 * v35) = v29;
      v40 = v57[2];
      v41 = __OFADD__(v40, 1);
      v42 = v40 + 1;
      if (v41)
        goto LABEL_44;
      v57[2] = v42;
      swift_bridgeObjectRetain();
    }
    *v53 = v57;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 = v29;
    MEMORY[0x19AECBFC4]();
    v5 = v51;
    v7 = v52;
    if (*(_QWORD *)((*v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_19A8C4A40();
    sub_19A8C4A58();
    sub_19A8C4A34();

    v18 = v43;
    v19 = 0;
    v6 = v49;
LABEL_30:
    v44 = v10;
    v45 = v19;
    sub_19A85BADC(v18);
    v58 = v46;
    if (!v46)
      break;
    MEMORY[0x19AECBFC4]();
    if (*(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_19A8C4A40();
    sub_19A8C4A58();
    sub_19A8C4A34();
    if (v58)
    {
      sub_19A8444E0(0, &qword_1ECFFDE58);
      v47 = (void *)sub_19A8C4A10();
      swift_bridgeObjectRelease();
    }
    else
    {
      v47 = 0;
    }
    v8 = v55;
    objc_msgSend(v18, sel_setResults_, v47);

    if (v54 == v6)
      return swift_bridgeObjectRelease();
LABEL_41:
    ++v8;
  }
  __break(1u);
LABEL_48:
  result = sub_19A8C4E60();
  __break(1u);
  return result;
}

id PARResponse.init(reply:factory:responseData:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v8;
  void *v9;
  id v10;

  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v9 = (void *)sub_19A8C3E28();
  v10 = objc_msgSend(v8, sel_initWithReply_factory_responseData_, a1, a2, v9);
  sub_19A833360(a3, a4);

  swift_unknownObjectRelease();
  return v10;
}

void PARResponse.init(reply:factory:responseData:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v36 = a1;
  v37 = a2;
  sub_19A8C4770();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v7, v8, v9, v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0E90);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_19A8C4188();
  v20 = *(_QWORD *)(v19 - 8);
  v25 = MEMORY[0x1E0C80A78](v19, v21, v22, v23, v24);
  v27 = (char *)&v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25, v28, v29, v30, v31);
  v33 = (char *)&v35 - v32;
  v40 = 0;
  v38 = 0u;
  v39 = 0u;
  v34 = v4;
  sub_19A84449C(a3, a4);
  sub_19A8C4764();
  sub_19A868264();
  sub_19A8C4794();
  OUTLINED_FUNCTION_43((uint64_t)v18, 0);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v33, v18, v19);
  swift_getObjectType();

  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v27, v33, v19);
  sub_19A8682A4(v36, v37, (uint64_t)v27);
  OUTLINED_FUNCTION_8_8();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v33, v19);
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_0_2();
}

unint64_t sub_19A868264()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE3B0E98;
  if (!qword_1EE3B0E98)
  {
    v1 = sub_19A8C4188();
    result = MEMORY[0x19AECCD38](MEMORY[0x1E0D6D678], v1);
    atomic_store(result, (unint64_t *)&qword_1EE3B0E98);
  }
  return result;
}

void sub_19A8682A4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v5 = sub_19A8C3F18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10);
  OUTLINED_FUNCTION_0();
  v62 = v11;
  v12 = sub_19A8C4164();
  v64 = *(_QWORD *)(v12 - 8);
  v65 = v12;
  MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16);
  OUTLINED_FUNCTION_0();
  v63 = v17;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE3B0EA0);
  OUTLINED_FUNCTION_4();
  v23 = MEMORY[0x1E0C80A78](v18, v19, v20, v21, v22);
  v25 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23, v26, v27, v28, v29);
  v31 = (char *)&v60 - v30;
  v32 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithReply_, a1);
  v33 = objc_msgSend(a1, sel_task);
  if (v33)
  {
    v34 = v33;
    v35 = objc_msgSend(v33, sel_request);

    objc_msgSend(v35, sel_queryId);
  }
  sub_19A8C4170();
  v36 = sub_19A8C417C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v36) != 1)
  {
    v61 = v6;
    sub_19A8687F8((uint64_t)v31, (uint64_t)v25);
    v37 = *(_QWORD *)(v36 - 8);
    v38 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v25, v36);
    if (v38 == *MEMORY[0x1E0D6D688])
    {
      OUTLINED_FUNCTION_5_4();
      (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v63, v25, v65);
      v39 = sub_19A8C414C();
      OUTLINED_FUNCTION_2_7(v39, v40, v41, (SEL *)&selRef_setQuery_);
      v42 = sub_19A8C414C();
      OUTLINED_FUNCTION_2_7(v42, v43, v44, (SEL *)&selRef_setPrefix_);
      v45 = sub_19A8C4158();
      v66 = MEMORY[0x1E0DEE9D8];
      if (*(_QWORD *)(v45 + 16))
      {
        OUTLINED_FUNCTION_10_4();
        OUTLINED_FUNCTION_6_7();
        v62 = v45;
        v60 = a1;
        v46 = a1;
        OUTLINED_FUNCTION_3_6();
        sub_19A842458(v46);
        OUTLINED_FUNCTION_13_3();
      }
      v55 = a1;
      OUTLINED_FUNCTION_3_6();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_126();

      OUTLINED_FUNCTION_12_5();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    }
    else if (v38 == *MEMORY[0x1E0D6D680])
    {
      OUTLINED_FUNCTION_5_4();
      (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v62, v25, v5);
      v47 = sub_19A8C3EF4();
      OUTLINED_FUNCTION_2_7(v47, v48, v49, (SEL *)&selRef_setQuery_);
      v50 = sub_19A8C3F00();
      OUTLINED_FUNCTION_2_7(v50, v51, v52, (SEL *)&selRef_setPrefix_);
      v53 = sub_19A8C3F0C();
      v66 = MEMORY[0x1E0DEE9D8];
      if (*(_QWORD *)(v53 + 16))
      {
        v65 = v5;
        OUTLINED_FUNCTION_10_4();
        OUTLINED_FUNCTION_6_7();
        v64 = v53;
        v60 = a1;
        v54 = a1;
        OUTLINED_FUNCTION_3_6();
        sub_19A842458(v54);
        OUTLINED_FUNCTION_13_3();
      }
      v56 = a1;
      OUTLINED_FUNCTION_3_6();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_126();

      OUTLINED_FUNCTION_12_5();
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v36);
    }
  }
  sub_19A844520((uint64_t)v31, qword_1EE3B0EA0);
  v57 = sub_19A86DE9C(v32);
  v58 = sub_19A868798(v57);
  swift_bridgeObjectRelease();
  sub_19A853048(v58, v32);

  OUTLINED_FUNCTION_126();
  v59 = sub_19A8C4188();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(a3, v59);
  OUTLINED_FUNCTION_0_2();
}

uint64_t sub_19A868798(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v1 = MEMORY[0x1E0DEE9D8];
  if (a1)
  {
    v4 = MEMORY[0x1E0DEE9D8];
    v3 = MEMORY[0x1E0DEE9E0];
    sub_19A867A50(a1, &v3, (uint64_t)&v4);
    v1 = v4;
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_19A8687F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE3B0EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19A868840(void *a1)
{
  return sub_19A851244(a1, (SEL *)&selRef_sectionHeader);
}

uint64_t sub_19A86884C(void *a1)
{
  return sub_19A851244(a1, (SEL *)&selRef_sectionBundleIdentifier);
}

void sub_19A868858(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_19A8C4938();
  objc_msgSend(a3, sel_setTitle_, v4);

}

void sub_19A86889C(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6;

  v6 = (id)sub_19A8C4938();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);

}

uint64_t OUTLINED_FUNCTION_5_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_8_8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_19A833360(v1, v0);
}

void OUTLINED_FUNCTION_12_5()
{
  uint64_t v0;
  void *v1;

  sub_19A85302C(v0, v1);
}

void sub_19A86891C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t OnceState;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v5 = *v4;
  OnceState = type metadata accessor for FetchOnceState(0, *(_QWORD *)(*v4 + 80), a3, a4);
  v7 = *(_QWORD *)(OnceState - 8);
  v12 = MEMORY[0x1E0C80A78](OnceState, v8, v9, v10, v11);
  MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16);
  v18 = (char *)&v21 - v17;
  v19 = (uint64_t)v4 + *(_QWORD *)(v5 + 96);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_1_6((uint64_t)v18, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  v20 = (char *)sub_19A8689E8 + 4 * byte_19A8CF3C0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_19A8689E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v0);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_1_6(v1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40));
  return swift_endAccess();
}

uint64_t *sub_19A868A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OnceState;

  v5 = *v4;
  sub_19A86891C(a1, a2, a3, a4);
  OnceState = type metadata accessor for FetchOnceState(0, *(_QWORD *)(v5 + 80), v6, v7);
  OUTLINED_FUNCTION_6(OnceState);
  swift_release();
  OUTLINED_FUNCTION_2_8();
  return v4;
}

uint64_t sub_19A868AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_19A868A80(a1, a2, a3, a4);
  return swift_defaultActor_deallocate();
}

uint64_t sub_19A868AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t OnceState;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v5 = *v4;
  v45 = *(_QWORD *)(*v4 + 96);
  OnceState = type metadata accessor for FetchOnceState(0, v45, a3, a4);
  v51 = *(_QWORD *)(OnceState - 8);
  MEMORY[0x1E0C80A78](OnceState, v7, v8, v9, v10);
  v12 = (char *)v42 - v11;
  v44 = v5;
  v13 = *(_QWORD *)(v5 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v15 = sub_19A8C4CA4();
  v49 = *(_QWORD *)(v15 - 8);
  v50 = v15;
  v20 = MEMORY[0x1E0C80A78](v15, v16, v17, v18, v19);
  v22 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v23, v24, v25, v26);
  v28 = (char *)v42 - v27;
  v43 = v4 + 14;
  OUTLINED_FUNCTION_33();
  v29 = v4[14];
  v30 = *(_QWORD *)(v29 + 64);
  v46 = (_QWORD *)(v29 + 64);
  v31 = 1 << *(_BYTE *)(v29 + 32);
  v32 = -1;
  if (v31 < 64)
    v32 = ~(-1 << v31);
  v33 = v32 & v30;
  v47 = (unint64_t)(v31 + 63) >> 6;
  v48 = v29;
  v42[1] = v47 - 1;
  swift_bridgeObjectRetain();
  if (v33)
  {
    v34 = __clz(__rbit64(v33));
LABEL_5:
    v35 = v48;
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v22, *(_QWORD *)(v48 + 48) + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v34, v13);
    OUTLINED_FUNCTION_1_6((uint64_t)&v22[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v35 + 56) + *(_QWORD *)(v51 + 72) * v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 16));
    v36 = 0;
    goto LABEL_6;
  }
  v38 = 1;
  if (v47 <= 1)
    goto LABEL_18;
  v39 = v46[1];
  if (v39)
  {
LABEL_10:
    v34 = __clz(__rbit64(v39)) + (v38 << 6);
    goto LABEL_5;
  }
  if (v47 <= 2)
  {
    v36 = 1;
    goto LABEL_6;
  }
  v39 = v46[2];
  if (v39)
  {
    v38 = 2;
    goto LABEL_10;
  }
  v40 = 3;
  if (v47 <= 3)
  {
LABEL_18:
    v36 = 1;
  }
  else
  {
    v39 = v46[3];
    if (v39)
    {
      v38 = 3;
      goto LABEL_10;
    }
    while (1)
    {
      v38 = v40 + 1;
      if (__OFADD__(v40, 1))
      {
        __break(1u);
        JUMPOUT(0x19A868EDCLL);
      }
      if (v38 >= v47)
        break;
      v39 = v46[v38];
      ++v40;
      if (v39)
        goto LABEL_10;
    }
    v36 = 1;
  }
LABEL_6:
  __swift_storeEnumTagSinglePayload((uint64_t)v22, v36, 1, TupleTypeMetadata2);
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v28, v22, v50);
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, TupleTypeMetadata2) != 1)
  {
    OUTLINED_FUNCTION_1_6((uint64_t)v12, (uint64_t)&v28[*(int *)(TupleTypeMetadata2 + 48)], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 32));
    v37 = (char *)&loc_19A868D10 + dword_19A868EDC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  swift_release();
  swift_getTupleTypeMetadata2();
  sub_19A8C4A4C();
  *v43 = sub_19A8C4908();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19A868EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (!*(_QWORD *)(v4 + 128))
    sub_19A868AF8(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  sub_19A85C888(*(_QWORD *)(v4 + 128));
  swift_release();
  OUTLINED_FUNCTION_2_8();
  return v4;
}

uint64_t sub_19A868F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_19A868EEC(a1, a2, a3, a4);
  return swift_defaultActor_deallocate();
}

uint64_t sub_19A868F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for AtomicAsyncValue.State(319, *(_QWORD *)(a1 + 80), a3, a4);
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_19A868FBC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_19A868FC8()
{
  return sub_19A868FBC();
}

uint64_t sub_19A868FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = type metadata accessor for AtomicAsyncValue.State(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  OUTLINED_FUNCTION_6(v5);
  OUTLINED_FUNCTION_2_8();
  return v4;
}

uint64_t sub_19A86901C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_19A868FE0(a1, a2, a3, a4);
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for AtomicAsyncValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AtomicAsyncValue);
}

uint64_t type metadata accessor for AtomicAsyncValue.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AtomicAsyncValue.State);
}

uint64_t sub_19A86904C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_19A869054()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_19A8690AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL8 v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  _BOOL8 v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = v8;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      v12 = (~(-1 << v9) - v7 + 2) >> v9;
      if (v12 > 0xFFFE)
      {
        v11 = 4;
      }
      else
      {
        v13 = v12 != 0;
        v14 = v12 >= 0xFF;
        v11 = 2;
        if (!v14)
          v11 = v13;
      }
    }
    else
    {
      v11 = 1;
    }
    v10 = v11 + v8;
  }
  v15 = *(_DWORD *)(v6 + 80);
  if (v15 <= 7 && v10 <= 0x18 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0)
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, *(_QWORD *)(a3 + 16)))
    {
      if (v7 <= 1)
      {
        if (v8 <= 3)
        {
          v20 = (~(-1 << v9) - v7 + 2) >> v9;
          if (v20 > 0xFFFE)
          {
            v19 = 4;
          }
          else
          {
            v21 = v20 != 0;
            v14 = v20 >= 0xFF;
            v19 = 2;
            if (!v14)
              v19 = v21;
          }
        }
        else
        {
          v19 = 1;
        }
        v8 += v19;
      }
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v5);
    }
  }
  else
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  return a1;
}

uint64_t sub_19A869240(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  result = __swift_getEnumTagSinglePayload(a1, 2, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return result;
}

void *sub_19A86928C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  unsigned int v8;
  size_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  BOOL v13;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8 <= 1)
    {
      if (v9 <= 3)
      {
        v11 = (~(-1 << (8 * v9)) - v8 + 2) >> (8 * v9);
        if (v11 > 0xFFFE)
        {
          v10 = 4;
        }
        else
        {
          v12 = v11 != 0;
          v13 = v11 >= 0xFF;
          v10 = 2;
          if (!v13)
            v10 = v12;
        }
      }
      else
      {
        v10 = 1;
      }
      v9 += v10;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v5);
  }
  return a1;
}

void *sub_19A869374(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  unsigned int v9;
  size_t v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL8 v13;
  BOOL v14;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v8 + 64);
  if (v9 <= 1)
  {
    if (v10 <= 3)
    {
      v12 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
      if (v12 > 0xFFFE)
      {
        v11 = 4;
      }
      else
      {
        v13 = v12 != 0;
        v14 = v12 >= 0xFF;
        v11 = 2;
        if (!v14)
          v11 = v13;
      }
    }
    else
    {
      v11 = 1;
    }
    v10 += v11;
  }
  memcpy(a1, a2, v10);
  return a1;
}

void *sub_19A8694A4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  unsigned int v8;
  size_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  BOOL v13;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8 <= 1)
    {
      if (v9 <= 3)
      {
        v11 = (~(-1 << (8 * v9)) - v8 + 2) >> (8 * v9);
        if (v11 > 0xFFFE)
        {
          v10 = 4;
        }
        else
        {
          v12 = v11 != 0;
          v13 = v11 >= 0xFF;
          v10 = 2;
          if (!v13)
            v10 = v12;
        }
      }
      else
      {
        v10 = 1;
      }
      v9 += v10;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v5);
  }
  return a1;
}

void *sub_19A86958C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  unsigned int v9;
  size_t v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL8 v13;
  BOOL v14;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v8 + 64);
  if (v9 <= 1)
  {
    if (v10 <= 3)
    {
      v12 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
      if (v12 > 0xFFFE)
      {
        v11 = 4;
      }
      else
      {
        v13 = v12 != 0;
        v14 = v12 >= 0xFF;
        v11 = 2;
        if (!v14)
          v11 = v13;
      }
    }
    else
    {
      v11 = 1;
    }
    v10 += v11;
  }
  memcpy(a1, a2, v10);
  return a1;
}

uint64_t sub_19A8696BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL8 v11;
  BOOL v12;
  unsigned int v13;
  char v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 <= 1)
    v8 = 0;
  else
    v8 = v6 - 2;
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      v10 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v10 > 0xFFFE)
      {
        v9 = 4;
      }
      else
      {
        v11 = v10 != 0;
        v12 = v10 >= 0xFF;
        v9 = 2;
        if (!v12)
          v9 = v11;
      }
    }
    else
    {
      v9 = 1;
    }
    v7 += v9;
  }
  if (!a2)
    return 0;
  v13 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_30;
  v14 = 8 * v7;
  if (v7 <= 3)
  {
    v16 = ((v13 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      v15 = *(_DWORD *)(a1 + v7);
      if (!v15)
        goto LABEL_30;
      goto LABEL_23;
    }
    if (v16 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_30;
      goto LABEL_23;
    }
    if (v16 < 2)
    {
LABEL_30:
      if (v8)
      {
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v6, v4);
        if (EnumTagSinglePayload >= 3)
          return EnumTagSinglePayload - 2;
        else
          return 0;
      }
      return 0;
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_30;
LABEL_23:
  v17 = (v15 - 1) << v14;
  if (v7 > 3)
    v17 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X12 }
  }
  return v8 + v17 + 1;
}

void sub_19A86983C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  BOOL v13;
  char v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7 <= 1)
    v9 = 0;
  else
    v9 = v7 - 2;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v11 > 0xFFFE)
      {
        v10 = 4;
      }
      else
      {
        v12 = v11 != 0;
        v13 = v11 >= 0xFF;
        v10 = 2;
        if (!v13)
          v10 = v12;
      }
    }
    else
    {
      v10 = 1;
    }
    v8 += v10;
  }
  v14 = 8 * v8;
  v13 = a3 >= v9;
  v15 = a3 - v9;
  if (v15 != 0 && v13)
  {
    if (v8 <= 3)
    {
      v18 = ((v15 + ~(-1 << v14)) >> v14) + 1;
      if (HIWORD(v18))
      {
        v16 = 4u;
      }
      else if (v18 >= 0x100)
      {
        v16 = 2;
      }
      else
      {
        v16 = v18 > 1;
      }
    }
    else
    {
      v16 = 1u;
    }
  }
  else
  {
    v16 = 0u;
  }
  if (v9 < a2)
  {
    v17 = ~v9 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v19 = v17 & ~(-1 << v14);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v19;
          *((_BYTE *)a1 + 2) = BYTE2(v19);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v19;
        }
        else
        {
          *(_BYTE *)a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_19A869A50(uint64_t a1, uint64_t a2)
{
  return __swift_getEnumTagSinglePayload(a1, 2, *(_QWORD *)(a2 + 16));
}

uint64_t sub_19A869A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, *(_QWORD *)(a3 + 16));
}

id *sub_19A869A68(id *__dst, id *__src, uint64_t a3)
{
  id *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char *v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  id v13;
  id v14;
  id v15;

  v4 = __dst;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v5 + 64) <= 0x10uLL)
    v6 = 16;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) == 0 && (unint64_t)(v6 + 1) <= 0x18)
  {
    v10 = *((unsigned __int8 *)__src + v6);
    if (v10 >= 3)
    {
      if (v6 <= 3)
        v11 = v6;
      else
        v11 = 4;
      __asm { BR              X14 }
    }
    if (v10 == 2)
    {
      (*(void (**)(id *, id *))(v5 + 16))(__dst, __src);
      v12 = 2;
    }
    else
    {
      if (v10 != 1)
      {
        *__dst = *__src;
        *((_BYTE *)__dst + v6) = 0;
        goto LABEL_10;
      }
      v13 = *__src;
      v14 = *__src;
      v15 = __src[1];
      *v4 = v13;
      v4[1] = v15;
      v12 = 1;
    }
    *((_BYTE *)v4 + v6) = v12;
    return v4;
  }
  v9 = (char *)*__src;
  *v4 = *__src;
  v4 = (id *)&v9[(unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8];
LABEL_10:
  swift_retain();
  return v4;
}

void sub_19A869BC8(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x10)
    v3 = 16;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 3)
  {
    if (v4 == 2)
    {
      (*(void (**)(void))(v2 + 8))();
    }
    else if (v4 == 1)
    {

    }
    else
    {
      swift_release();
    }
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_19A869C10 + 4 * byte_19A8CF3D7[v5]))();
  }
}

_BYTE *sub_19A869C80(_BYTE *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  id v10;
  id v11;
  id v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v5 + 64) <= 0x10uLL)
    v6 = 16;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *((unsigned __int8 *)__src + v6);
  if (v7 >= 3)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 2)
  {
    (*(void (**)(_BYTE *, id *))(v5 + 16))(__dst, __src);
    v9 = 2;
LABEL_14:
    __dst[v6] = v9;
    return __dst;
  }
  if (v7 == 1)
  {
    v10 = *__src;
    v11 = *__src;
    v12 = __src[1];
    *(_QWORD *)__dst = v10;
    *((_QWORD *)__dst + 1) = v12;
    v9 = 1;
    goto LABEL_14;
  }
  *(_QWORD *)__dst = *__src;
  __dst[v6] = 0;
  swift_retain();
  return __dst;
}

id *sub_19A869DA4(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  id v13;
  id v14;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
    {
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    }
    else if (v8 == 1)
    {

    }
    else
    {
      swift_release();
    }
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      v12 = 2;
    }
    else
    {
      if (v10 != 1)
      {
        *__dst = *__src;
        *((_BYTE *)__dst + v7) = 0;
        swift_retain();
        return __dst;
      }
      v13 = *__src;
      v14 = *__src;
      *__dst = v13;
      __dst[1] = __src[1];
      v12 = 1;
    }
    *((_BYTE *)__dst + v7) = v12;
  }
  return __dst;
}

_BYTE *sub_19A869F88(_BYTE *__dst, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    v8 = 2;
LABEL_14:
    __dst[v5] = v8;
    return __dst;
  }
  if (v6 == 1)
  {
    *(_OWORD *)__dst = *a2;
    v8 = 1;
    goto LABEL_14;
  }
  *(_QWORD *)__dst = *(_QWORD *)a2;
  __dst[v5] = 0;
  return __dst;
}

id *sub_19A86A088(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
    {
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    }
    else if (v8 == 1)
    {

    }
    else
    {
      swift_release();
    }
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      v12 = 2;
    }
    else
    {
      if (v10 != 1)
      {
        *__dst = *__src;
        *((_BYTE *)__dst + v7) = 0;
        return __dst;
      }
      *(_OWORD *)__dst = *(_OWORD *)__src;
      v12 = 1;
    }
    *((_BYTE *)__dst + v7) = v12;
  }
  return __dst;
}

uint64_t sub_19A86A258(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x10uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 252) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 4)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 253);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19A86A31C + 4 * byte_19A8CF3FA[(v4 - 1)]))();
}

void sub_19A86A368(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10)
    v5 = 16;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFD)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 252) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFC)
    __asm { BR              X11 }
  v9 = a2 - 253;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_19A86A50C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x10uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 3u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_19A86A554 + 4 * byte_19A8CF408[v3]))();
}

void sub_19A86A59C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x10uLL)
    v4 = 16;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 2)
  {
    v5 = a2 - 3;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

_QWORD *sub_19A86A664(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void sub_19A86A694(id *a1)
{

}

void **sub_19A86A69C(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **sub_19A86A6E0(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_19A86A710(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_19A86A750(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for FetchOnce.Error(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchOnce.Error);
}

uint64_t sub_19A86A798()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_19A86A7A0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  int v4;

  result = swift_checkMetadataState();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t *sub_19A86A81C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  void *v10;
  id v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = *(void **)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = v10;
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = v10;
  }
  return v4;
}

void sub_19A86A8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();

}

uint64_t sub_19A86A914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFF8);
  v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v9 = v8;
  *v7 = v8;
  return a1;
}

uint64_t sub_19A86A978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  id v9;
  void *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v9 = v8;
  v10 = *v7;
  *v7 = v8;

  return a1;
}

uint64_t sub_19A86A9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19A86AA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = *v7;
  *v7 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_19A86AAA4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_19A86AB20 + 4 * byte_19A8CF40D[v11]))();
  }
}

void sub_19A86ABA0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_19A86AC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
        v9 = a2 ^ 0x80000000;
      else
        v9 = (a2 - 1);
      *v8 = v9;
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
    }
  }
  return result;
}

void type metadata accessor for FetchOncePerKey.Error()
{
  JUMPOUT(0x19AECCCCCLL);
}

NSString_optional __swiftcall NSString.parsec_getHighLevelDomainFromHost()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_19A8C4944();
  sub_19A86E28C(v0, v1);
  v3 = v2;
  swift_bridgeObjectRelease();
  if (!v3)
    return 0;
  v4 = sub_19A8C4938();
  swift_bridgeObjectRelease();
  return (NSString_optional)v4;
}

id sub_19A86AD94(void *a1)
{
  id v1;
  NSString value;

  v1 = a1;
  value = NSString.parsec_getHighLevelDomainFromHost()().value;

  return value;
}

uint64_t sub_19A86ADC4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  v17 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v10 = *(_QWORD *)(sub_19A8C4560() - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v13 = sub_19A86C498(a2, a3, a4, &v16);
      if (v4)
        break;
      if (v16)
      {
        MEMORY[0x19AECBFC4](v13);
        if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_19A8C4A40();
        sub_19A8C4A58();
        sub_19A8C4A34();
      }
      v11 += v12;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        v7 = v17;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    v7 = v17;

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    swift_unknownObjectRelease();

  }
  return v7;
}

double sub_19A86AF30@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v4;
  unint64_t v6;
  char v7;
  double result;

  if (*(_QWORD *)(a3 + 16) && (v6 = OUTLINED_FUNCTION_11_4(a1, a2), (v7 & 1) != 0))
  {
    sub_19A844F44(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)a4);
  }
  else
  {
    result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_19A86AF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_19A8672C0(a1), (v6 & 1) != 0))
  {
    v7 = v5;
    v8 = *(_QWORD *)(a2 + 56);
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
    sub_19A86E21C(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v7, a3);
    v10 = a3;
    v11 = 0;
    v12 = v9;
  }
  else
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
    v10 = a3;
    v11 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v10, v11, 1, v12);
}

uint64_t sub_19A86B010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = OUTLINED_FUNCTION_11_4(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

void *sub_19A86B060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  void *v6;
  id v7;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = OUTLINED_FUNCTION_11_4(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v4);
  v7 = v6;
  return v6;
}

uint64_t sub_19A86B0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16) && (OUTLINED_FUNCTION_11_4(a1, a2), (v3 & 1) != 0))
    return swift_retain();
  else
    return 0;
}

uint64_t sub_19A86B0DC()
{
  uint64_t v0;

  v0 = sub_19A8C489C();
  __swift_allocate_value_buffer(v0, qword_1ECFFDD00);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECFFDD00);
  return sub_19A8C4884();
}

void PARTopicResponse.init(reply:factory:dataZKW:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = (void *)sub_19A8C3E28();
  objc_msgSend(v6, sel_initWithReply_factory_dataZKW_, a1, a2, v7);
  OUTLINED_FUNCTION_8_2(a3);

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_10_5();
}

id PARTopicResponse.init(reply:factory:dataZKW:)(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  id v34;
  uint64_t v36;
  void *v37;
  void *v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v37 = a1;
  v38 = a2;
  sub_19A8C4770();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDD38);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v13, v14, v15, v16, v17);
  OUTLINED_FUNCTION_4_4();
  v18 = sub_19A8C46B0();
  v19 = *(_QWORD *)(v18 - 8);
  v24 = MEMORY[0x1E0C80A78](v18, v20, v21, v22, v23);
  v26 = (char *)&v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24, v27, v28, v29, v30);
  v32 = (char *)&v36 - v31;
  v41 = 0;
  v39 = 0u;
  v40 = 0u;
  v33 = v4;
  sub_19A84449C(a3, a4);
  sub_19A8C4764();
  sub_19A86B3E4();
  sub_19A8C4794();
  OUTLINED_FUNCTION_43(v5, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v32, v5, v18);
  swift_getObjectType();

  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v26, v32, v18);
  v34 = sub_19A86B464(v37, v38, (uint64_t)v26);
  OUTLINED_FUNCTION_8_2(a3);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v32, v18);
  OUTLINED_FUNCTION_14();
  return v34;
}

unint64_t sub_19A86B3E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECFFDD30;
  if (!qword_1ECFFDD30)
  {
    v1 = sub_19A8C46B0();
    result = MEMORY[0x19AECCD38](MEMORY[0x1E0D6FE40], v1);
    atomic_store(result, (unint64_t *)&qword_1ECFFDD30);
  }
  return result;
}

uint64_t sub_19A86B424(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDD38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_19A86B464(void *a1, void *a2, uint64_t a3)
{
  id v3;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t i;
  id v23;
  void *v24;
  id v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  _DWORD *v35;
  void *v36;
  id v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  unint64_t v47;

  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithReply_, a1);
  v8 = objc_msgSend(a1, sel_task);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_request);

    if (v10)
    {
      objc_opt_self();
      v11 = swift_dynamicCastObjCClass();
      if (v11)
      {
        v12 = (void *)v11;
        v46 = v7;
        v13 = v7;
        v14 = objc_msgSend(v12, sel_queryId);
        v15 = sub_19A8C4674();
        v16 = v13;
        swift_unknownObjectRetain();
        v17 = sub_19A86ADC4((uint64_t)v15, a2, (uint64_t)v14, v16);
        OUTLINED_FUNCTION_10();
        sub_19A85302C(v17, v16);

        v18 = v16;
        if (!sub_19A86DF18(v18, (SEL *)&selRef_results, &qword_1ECFFDE58))
        {
          objc_msgSend(v18, sel_setResults_, 0);
          v27 = v18;
          goto LABEL_24;
        }
        v45 = v12;
        v19 = objc_msgSend(v12, sel_localTopics);
        OUTLINED_FUNCTION_45((uint64_t)v19, &qword_1ECFFDD48);
        v20 = sub_19A8C4A1C();

        v47 = MEMORY[0x1E0DEE9D8];
        if (v20 >> 62)
        {
          swift_bridgeObjectRetain();
          v21 = sub_19A8C4DF4();
          if (v21)
            goto LABEL_7;
        }
        else
        {
          v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v21)
          {
LABEL_7:
            v43 = v10;
            v44 = a3;
            if (v21 < 1)
            {
              __break(1u);
              goto LABEL_44;
            }
            for (i = 0; i != v21; ++i)
            {
              if ((v20 & 0xC000000000000001) != 0)
                v23 = (id)MEMORY[0x19AECC324](i, v20);
              else
                v23 = *(id *)(v20 + 8 * i + 32);
              v24 = v23;
              v25 = objc_msgSend(v23, sel_result, v43, v44);

              if (v25)
              {
                MEMORY[0x19AECBFC4]();
                if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_19A8C4A40();
                sub_19A8C4A58();
                sub_19A8C4A34();
              }
            }
            OUTLINED_FUNCTION_4_2();
            v26 = v47;
            v10 = v43;
            a3 = v44;
            goto LABEL_23;
          }
        }
        OUTLINED_FUNCTION_4_2();
        v26 = MEMORY[0x1E0DEE9D8];
LABEL_23:
        OUTLINED_FUNCTION_4_2();
        v28 = sub_19A86BB30(v26);
        v12 = v45;
        OUTLINED_FUNCTION_45(v28, &qword_1ECFFDE58);
        v27 = (void *)OUTLINED_FUNCTION_16_3();
        OUTLINED_FUNCTION_10();
        objc_msgSend(v18, sel_setResults_, v27);

LABEL_24:
        v29 = sub_19A86BCE4();
        v30 = v18;
        v31 = sub_19A86BD98(v12, v29);
        OUTLINED_FUNCTION_7_2();
        sub_19A853048(v31, v30);

        if (qword_1ECFFDD20 != -1)
          swift_once();
        v32 = sub_19A8C489C();
        __swift_project_value_buffer(v32, (uint64_t)qword_1ECFFDD00);
        v33 = v30;
        v34 = v10;
        v18 = v33;
        v3 = v34;
        v15 = sub_19A8C4878();
        LOBYTE(v20) = sub_19A8C4BCC();
        if (!os_log_type_enabled(v15, (os_log_type_t)v20))
        {

          OUTLINED_FUNCTION_18_3();
LABEL_40:

          v7 = v46;
          goto LABEL_41;
        }
        v35 = (_DWORD *)swift_slowAlloc();
        v36 = v12;
        v21 = (uint64_t)v35;
        *v35 = 134218496;
        v37 = objc_msgSend(v36, sel_topics);
        __swift_instantiateConcreteTypeFromMangledName(qword_1ECFFDD60);
        v38 = sub_19A8C4A1C();

        if (v38 >> 62)
        {
          swift_bridgeObjectRetain();
          sub_19A8C4DF4();

          OUTLINED_FUNCTION_7_2();
        }
        else
        {

        }
        OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_1_7();

        *(_WORD *)(v21 + 12) = 2048;
        v39 = sub_19A86DF18(v18, (SEL *)&selRef_sections, &qword_1ECFFDD50);
        if (!v39)
        {

          goto LABEL_34;
        }
        if (!(v39 >> 62))
        {
LABEL_31:

          OUTLINED_FUNCTION_7_2();
LABEL_34:
          OUTLINED_FUNCTION_1_7();

          *(_WORD *)(v21 + 22) = 2048;
          v40 = sub_19A86DF18(v18, (SEL *)&selRef_results, &qword_1ECFFDE58);
          if (v40)
          {
            if (v40 >> 62)
              OUTLINED_FUNCTION_19_1();

            OUTLINED_FUNCTION_7_2();
          }
          else
          {

          }
          OUTLINED_FUNCTION_1_7();

          _os_log_impl(&dword_19A825000, v15, (os_log_type_t)v20, "ZKW: Sections and results successfully created. Given %ld topics in request. Response has %ld sections and %ld results", (uint8_t *)v21, 0x20u);
          MEMORY[0x19AECCDEC](v21, -1, -1);

          OUTLINED_FUNCTION_18_3();
          goto LABEL_40;
        }
LABEL_44:
        OUTLINED_FUNCTION_19_1();
        goto LABEL_31;
      }

    }
  }

  OUTLINED_FUNCTION_18_3();
LABEL_41:
  v41 = sub_19A8C46B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(a3, v41);
  return v7;
}

uint64_t sub_19A86BB30(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_19A8C4DF4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_19A8C4DF4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x19AECC330](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    result = sub_19A86E054(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_19A8C4DF4();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_20;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_20:
    swift_bridgeObjectRelease();
    return sub_19A8C4A34();
  }
  __break(1u);
  return result;
}

uint64_t sub_19A86BCE4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = v0;
  v8 = MEMORY[0x1E0DEE9E0];
  v2 = sub_19A8C46A4();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(sub_19A8C468C() - 8);
    v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_19A86D430(v5, v1, (uint64_t)&v8);
      v5 += v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
}

uint64_t sub_19A86BD98(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t i;
  id v45;
  void *v46;
  id v47;
  id v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;

  v3 = objc_msgSend(a1, sel_queryTopicContexts);
  sub_19A8444E0(0, &qword_1ECFFDD58);
  v4 = sub_19A8C4A1C();

  v55 = a1;
  v5 = objc_msgSend(a1, sel_topics);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECFFDD60);
  v6 = sub_19A8C4A1C();

  v57 = MEMORY[0x1E0DEE9D8];
  if (v6 >> 62)
    goto LABEL_63;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  do
  {
    if (!v7)
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    v8 = 0;
    v9 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v4 < 0)
      v9 = v4;
    v50 = v9;
    v54 = v7;
    while (v8 != (char *)v7)
    {
      v10 = objc_msgSend(v55, sel_topics);
      v11 = sub_19A8C4A1C();

      if ((v11 & 0xC000000000000001) != 0)
      {
        MEMORY[0x19AECC324](v8, v11);
      }
      else
      {
        if ((unint64_t)v8 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_61;
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      objc_opt_self();
      v12 = swift_dynamicCastObjCClass();
      if (v12)
      {
        v13 = (void *)v12;
        v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C650]), sel_init);
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          v21 = v14;
          goto LABEL_29;
        }
        if ((unint64_t)v4 >> 62)
        {
          v48 = v14;
          swift_bridgeObjectRetain();
          v15 = sub_19A8C4DF4();
          if (v15)
            goto LABEL_15;
        }
        else
        {
          v15 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v16 = v14;
          swift_bridgeObjectRetain();
          if (v15)
          {
LABEL_15:
            v17 = 4;
            while (1)
            {
              if ((v4 & 0xC000000000000001) != 0)
                v18 = (id)MEMORY[0x19AECC324](v17 - 4, v4);
              else
                v18 = *(id *)(v4 + 8 * v17);
              v19 = v18;
              v20 = v17 - 3;
              if (__OFADD__(v17 - 4, 1))
              {
                __break(1u);
                goto LABEL_60;
              }
              if (objc_msgSend(v18, sel_index) == v8)
                break;

              ++v17;
              if (v20 == v15)
                goto LABEL_22;
            }
            swift_bridgeObjectRelease();
            v22 = objc_msgSend(v19, sel_contextId);
            v23 = sub_19A8C4944();
            v25 = v24;

            if (*(_QWORD *)(a2 + 16))
            {
              v26 = sub_19A86725C(v23, v25);
              if ((v27 & 1) != 0)
              {
                v28 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v26);

                swift_bridgeObjectRelease();
                v14 = v28;
                v7 = v54;
                goto LABEL_38;
              }
            }
            swift_bridgeObjectRelease();

            v7 = v54;
LABEL_29:
            objc_opt_self();
            v29 = swift_dynamicCastObjCClass();
            if (v29)
            {
              v30 = (void *)v29;
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFDF60);
              v31 = swift_allocObject();
              *(_OWORD *)(v31 + 16) = xmmword_19A8CEFE0;
              swift_unknownObjectRetain();
              v32 = objc_msgSend(v30, sel_result);
              if (!v32)
                v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C6A8]), sel_init);
              *(_QWORD *)(v31 + 32) = v32;
              v56 = v31;
              sub_19A8C4A34();
              sub_19A86DEB8(v56, v14);
              swift_unknownObjectRelease();

            }
            else
            {

              if (qword_1ECFFDD20 != -1)
                swift_once();
              v33 = sub_19A8C489C();
              __swift_project_value_buffer(v33, (uint64_t)qword_1ECFFDD00);
              swift_unknownObjectRetain_n();
              v34 = sub_19A8C4878();
              v35 = sub_19A8C4BE4();
              if (os_log_type_enabled(v34, v35))
              {
                v52 = swift_slowAlloc();
                v53 = swift_slowAlloc();
                v56 = v53;
                *(_DWORD *)v52 = 136315138;
                v36 = objc_msgSend(v13, sel_identifier);
                v37 = sub_19A8C4944();
                v39 = v38;

                v7 = v54;
                *(_QWORD *)(v52 + 4) = sub_19A844794(v37, v39, &v56);
                swift_unknownObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_19A825000, v34, v35, "ZKW: Failed to find or construct section for topic %s", (uint8_t *)v52, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x19AECCDEC](v53, -1, -1);
                MEMORY[0x19AECCDEC](v52, -1, -1);

              }
              else
              {

                swift_unknownObjectRelease_n();
              }
            }
LABEL_38:
            v40 = v14;
            sub_19A85BCE8(v40);
            if (v41)
            {
              v42 = v41;
              if (v41 >> 62)
              {
                swift_bridgeObjectRetain();
                v43 = sub_19A8C4DF4();
                if (v43)
                {
LABEL_41:
                  if (v43 < 1)
                    goto LABEL_62;
                  for (i = 0; i != v43; ++i)
                  {
                    if ((v42 & 0xC000000000000001) != 0)
                      v45 = (id)MEMORY[0x19AECC324](i, v42);
                    else
                      v45 = *(id *)(v42 + 8 * i + 32);
                    v46 = v45;
                    objc_msgSend(v45, sel_setRequestedTopic_, v13, v50);

                  }
                }
              }
              else
              {
                v43 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain();
                if (v43)
                  goto LABEL_41;
              }
              swift_bridgeObjectRelease_n();
              v7 = v54;
            }
            v47 = v40;
            MEMORY[0x19AECBFC4]();
            if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_19A8C4A40();
            sub_19A8C4A58();
            sub_19A8C4A34();
            swift_unknownObjectRelease();

            goto LABEL_51;
          }
        }
LABEL_22:
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      swift_unknownObjectRelease();
LABEL_51:
      if (++v8 == (char *)v7)
      {
        swift_bridgeObjectRelease();
        return v57;
      }
    }
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    swift_bridgeObjectRetain();
    v7 = sub_19A8C4DF4();
    result = swift_bridgeObjectRelease_n();
  }
  while ((v7 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_19A86C498@<X0>(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  id v31;
  char v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char **v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  unint64_t v53;
  int64_t v54;
  id i;
  void *v56;
  id v57;
  void *v58;
  id v59;
  unint64_t v60;
  uint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  id v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  id v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  _QWORD v88[2];
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  char *v94;
  uint64_t v95;
  void *v96;
  id v97;

  v8 = sub_19A8C4530();
  v95 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v9, v10, v11, v12);
  v94 = (char *)v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19A8C44C4();
  v91 = *(_QWORD *)(v14 - 8);
  v92 = v14;
  MEMORY[0x1E0C80A78](v14, v15, v16, v17, v18);
  v20 = (char *)v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_19A8C44DC();
  if ((result & 1) == 0)
  {
    *a4 = 0;
    return result;
  }
  v89 = v8;
  v90 = a3;
  v93 = a4;
  v22 = objc_msgSend(a1, sel_createResultObject);
  v88[1] = swift_getObjectType();
  objc_msgSend(v22, sel_setQueryId_, a2);
  sub_19A8C447C();
  v23 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setUserInput_, v23);

  objc_msgSend(v22, sel_setType_, 1);
  sub_19A8C4440();
  v24 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setResultType_, v24);

  sub_19A8C44D0();
  v25 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setIdentifier_, v25);

  sub_19A8C453C();
  v26 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setResultBundleId_, v26);

  v27 = sub_19A8C4548();
  v29 = v28;
  sub_19A8C3E34();
  sub_19A833360(v27, v29);
  v30 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setFbr_, v30);

  if ((int)sub_19A8C44E8() >= 1)
  {
    v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, sub_19A8C44E8());
    objc_msgSend(v22, sel_setMaxAge_, v31);

  }
  v32 = sub_19A8C4500();
  v96 = v22;
  if ((v32 & 1) != 0)
  {
    sub_19A8C44F4();
    Apple_Parsec_Spotlight_V1alpha_Topic.queryTopic.getter();
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v20, v92);
    objc_msgSend(v22, sel_setNormalizedTopic_, v34);
    v35 = objc_msgSend(v34, sel_query);
    if (!v35)
    {
      sub_19A8C4944();
      v35 = (id)sub_19A8C4938();
      v22 = v96;
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v22, sel_setCompletion_, v35);

    v36 = objc_msgSend(v34, sel_query);
    if (!v36)
    {
      sub_19A8C4944();
      v36 = (id)sub_19A8C4938();
      v22 = v96;
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v22, sel_setIntendedQuery_, v36);

  }
  type metadata accessor for ProtobufHelper();
  v37 = v90;
  v38 = objc_msgSend(v90, sel_reply);
  v39 = v94;
  sub_19A8C4554();
  v40 = sub_19A8C4524();
  v42 = v41;
  (*(void (**)(char *, uint64_t))(v95 + 8))(v39, v89);
  sub_19A853318(v38, v96, v40, v42);

  v43 = v96;
  sub_19A833360(v40, v42);
  sub_19A8444E0(0, &qword_1EE3B0288);
  v44 = sub_19A86DFFC(v37, (SEL *)&selRef_query);
  v46 = sub_19A86D3C4(v44, v45);
  objc_msgSend(v43, sel_setTitle_, v46);

  v47 = &selRef_avgRTT;
  v48 = objc_msgSend(v43, sel_inlineCard);
  if (!v48)
    goto LABEL_29;
  sub_19A85BC30(v48);
  if (!v49)
    goto LABEL_29;
  v50 = v49;
  if (v49 >> 62)
  {
    if (!sub_19A8C4DF4())
      goto LABEL_28;
  }
  else if (!*(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_28;
  }
  sub_19A844EFC(0, (v50 & 0xC000000000000001) == 0, v50);
  if ((v50 & 0xC000000000000001) != 0)
    v51 = (id)MEMORY[0x19AECC324](0, v50);
  else
    v51 = *(id *)(v50 + 32);
  v52 = v51;
  swift_bridgeObjectRelease();
  v53 = sub_19A86DF88(v52);
  if (!v53)
    goto LABEL_29;
  v54 = v53;
  if (v53 >> 62)
  {
    if (sub_19A8C4DF4())
      goto LABEL_19;
LABEL_28:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (!*(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
LABEL_19:
  sub_19A844F40(0, (v54 & 0xC000000000000001) == 0, v54);
  if ((v54 & 0xC000000000000001) != 0)
    goto LABEL_94;
  for (i = *(id *)(v54 + 32); ; i = (id)MEMORY[0x19AECC324](0, v54))
  {
    v56 = i;
    swift_bridgeObjectRelease();
    v57 = objc_msgSend(v56, sel_bundleIdentifier);

    if (v57)
    {
      sub_19A8C4944();

      v58 = (void *)sub_19A8C4938();
      v43 = v96;
      swift_bridgeObjectRelease();
      objc_msgSend(v43, sel_setApplicationBundleIdentifier_, v58);

    }
LABEL_29:
    v59 = objc_msgSend(v43, sel_card);
    if (!v59)
    {
      v61 = v93;
      goto LABEL_44;
    }
    v54 = (int64_t)v59;
    objc_msgSend((id)v54, sel_setQueryId_, a2);
    sub_19A85BA68((void *)v54);
    v61 = v93;
    if (!v60)
    {

      goto LABEL_44;
    }
    v62 = v60;
    if (v60 >> 62)
    {
      swift_bridgeObjectRetain();
      v63 = sub_19A8C4DF4();
      if (!v63)
      {
LABEL_43:

        swift_bridgeObjectRelease_n();
        goto LABEL_44;
      }
    }
    else
    {
      v63 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v63)
        goto LABEL_43;
    }
    if (v63 < 1)
    {
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    v64 = 0;
    do
    {
      if ((v62 & 0xC000000000000001) != 0)
        v65 = (id)MEMORY[0x19AECC324](v64, v62);
      else
        v65 = *(id *)(v62 + 8 * v64 + 32);
      v66 = v65;
      ++v64;
      v97 = v65;
      sub_19A853474(&v97, a2);

    }
    while (v63 != v64);

    swift_bridgeObjectRelease_n();
    v61 = v93;
    v43 = v96;
LABEL_44:
    v67 = objc_msgSend(v43, v47[341]);
    if (!v67)
    {
      v47 = &selRef_setLabelForLocalMedia_;
      goto LABEL_59;
    }
    v54 = (int64_t)v67;
    v47 = &selRef_setLabelForLocalMedia_;
    objc_msgSend((id)v54, sel_setQueryId_, a2);
    sub_19A85BA68((void *)v54);
    if (!v68)
    {

      goto LABEL_59;
    }
    v69 = v68;
    if (v68 >> 62)
    {
      swift_bridgeObjectRetain();
      v70 = sub_19A8C4DF4();
      if (!v70)
      {
LABEL_58:

        swift_bridgeObjectRelease_n();
        goto LABEL_59;
      }
    }
    else
    {
      v70 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v70)
        goto LABEL_58;
    }
    if (v70 < 1)
      goto LABEL_91;
    v71 = 0;
    do
    {
      if ((v69 & 0xC000000000000001) != 0)
        v72 = (id)MEMORY[0x19AECC324](v71, v69);
      else
        v72 = *(id *)(v69 + 8 * v71 + 32);
      v73 = v72;
      ++v71;
      v97 = v72;
      sub_19A853474(&v97, a2);

    }
    while (v70 != v71);

    swift_bridgeObjectRelease_n();
    v61 = v93;
    v43 = v96;
LABEL_59:
    v74 = objc_msgSend(v43, sel_compactCard);
    if (!v74)
      goto LABEL_73;
    v54 = (int64_t)v74;
    objc_msgSend((id)v54, v47[138], a2);
    sub_19A85BA68((void *)v54);
    if (!v75)
    {

      goto LABEL_73;
    }
    v76 = v75;
    if (v75 >> 62)
    {
      swift_bridgeObjectRetain();
      v77 = sub_19A8C4DF4();
      if (!v77)
      {
LABEL_72:

        swift_bridgeObjectRelease_n();
        goto LABEL_73;
      }
    }
    else
    {
      v77 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v77)
        goto LABEL_72;
    }
    if (v77 < 1)
      goto LABEL_92;
    v78 = 0;
    do
    {
      if ((v76 & 0xC000000000000001) != 0)
        v79 = (id)MEMORY[0x19AECC324](v78, v76);
      else
        v79 = *(id *)(v76 + 8 * v78 + 32);
      v80 = v79;
      ++v78;
      v97 = v79;
      sub_19A853474(&v97, a2);

    }
    while (v77 != v78);

    swift_bridgeObjectRelease_n();
    v61 = v93;
    v43 = v96;
LABEL_73:
    v81 = objc_msgSend(v43, sel_tophitCard);
    if (!v81)
      goto LABEL_87;
    v54 = (int64_t)v81;
    objc_msgSend((id)v54, v47[138], a2);
    sub_19A85BA68((void *)v54);
    if (!v82)
    {

      goto LABEL_87;
    }
    v83 = v82;
    if (v82 >> 62)
    {
      swift_bridgeObjectRetain();
      v84 = sub_19A8C4DF4();
      if (!v84)
      {
LABEL_86:

        swift_bridgeObjectRelease_n();
        goto LABEL_87;
      }
    }
    else
    {
      v84 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v84)
        goto LABEL_86;
    }
    if (v84 >= 1)
      break;
LABEL_93:
    __break(1u);
LABEL_94:
    ;
  }
  v85 = 0;
  do
  {
    if ((v83 & 0xC000000000000001) != 0)
      v86 = (id)MEMORY[0x19AECC324](v85, v83);
    else
      v86 = *(id *)(v83 + 8 * v85 + 32);
    v87 = v86;
    ++v85;
    v97 = v86;
    sub_19A853474(&v97, a2);

  }
  while (v84 != v85);

  swift_bridgeObjectRelease_n();
  v61 = v93;
LABEL_87:
  objc_opt_self();
  result = swift_dynamicCastObjCClass();
  if (result)
  {
    *v61 = result;
  }
  else
  {
    result = swift_unknownObjectRelease();
    *v61 = 0;
  }
  return result;
}

void Apple_Parsec_Spotlight_V1alpha_Topic.queryTopic.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  float v44;
  float v45;
  void (*v46)(uint64_t, uint64_t);
  float v47;
  float v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = sub_19A8C444C();
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_18();
  v51 = v8 - v7;
  v54 = sub_19A8C4470();
  v9 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54, v10, v11, v12, v13);
  OUTLINED_FUNCTION_18();
  v16 = v15 - v14;
  v17 = sub_19A8C4434();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19, v20, v21, v22);
  OUTLINED_FUNCTION_4_4();
  sub_19A8C3EA0();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1E0C80A78](v23, v24, v25, v26, v27);
  OUTLINED_FUNCTION_18();
  v30 = v29 - v28;
  v31 = sub_19A8C45F0();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31, v33, v34, v35, v36);
  OUTLINED_FUNCTION_8();
  sub_19A8C4488();
  v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 88))(v0, v31);
  if (v37 == *MEMORY[0x1E0D6ECF0] || v37 == *MEMORY[0x1E0D6ED20])
  {
LABEL_3:
    sub_19A8C4440();
    OUTLINED_FUNCTION_0_7();
    OUTLINED_FUNCTION_3_7();
    objc_allocWithZone(MEMORY[0x1E0D8C5E8]);
    v38 = 7;
LABEL_4:
    sub_19A86DB3C(v38);
    return;
  }
  if (v37 == *MEMORY[0x1E0D6ED08])
  {
    v39 = sub_19A8C4440();
    v41 = v40;
    sub_19A8C44A0();
    sub_19A8C4428();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v17);
    sub_19A8C3E70();
    v42 = objc_allocWithZone(MEMORY[0x1E0D8C3C8]);
    sub_19A86DAB4(v39, v41, v30);
  }
  else
  {
    if (v37 == *MEMORY[0x1E0D6ECF8])
    {
      sub_19A8C4440();
      OUTLINED_FUNCTION_0_7();
      OUTLINED_FUNCTION_3_7();
      objc_allocWithZone(MEMORY[0x1E0D8C5E8]);
      v38 = 1;
      goto LABEL_4;
    }
    if (v37 == *MEMORY[0x1E0D6ED28])
    {
      v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C478]), sel_init);
      OUTLINED_FUNCTION_14_3();
      sub_19A8C4464();
      v45 = v44;
      v46 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v46(v16, v54);
      objc_msgSend(v43, sel_setLng_, v45);
      OUTLINED_FUNCTION_14_3();
      sub_19A8C4458();
      v48 = v47;
      v46(v16, v54);
      objc_msgSend(v43, sel_setLat_, v48);
      OUTLINED_FUNCTION_5_5();
      OUTLINED_FUNCTION_3_7();
      v49 = objc_allocWithZone(MEMORY[0x1E0D8C860]);
      sub_19A86DBB8((uint64_t)v46, v16, v43);
    }
    else
    {
      if (v37 == *MEMORY[0x1E0D6ED00])
      {
        OUTLINED_FUNCTION_5_5();
        OUTLINED_FUNCTION_0_7();
        OUTLINED_FUNCTION_3_7();
        objc_allocWithZone(MEMORY[0x1E0D8C5E8]);
        v38 = 2;
        goto LABEL_4;
      }
      if (v37 == *MEMORY[0x1E0D6ED18])
        goto LABEL_3;
      if (v37 == *MEMORY[0x1E0D6ECE0])
      {
        OUTLINED_FUNCTION_5_5();
        OUTLINED_FUNCTION_0_7();
        OUTLINED_FUNCTION_3_7();
        objc_allocWithZone(MEMORY[0x1E0D8C5E8]);
        v38 = 6;
        goto LABEL_4;
      }
      if (v37 == *MEMORY[0x1E0D6ECE8])
      {
        OUTLINED_FUNCTION_5_5();
        OUTLINED_FUNCTION_0_7();
        OUTLINED_FUNCTION_3_7();
        objc_allocWithZone(MEMORY[0x1E0D8C5E8]);
        v38 = 8;
        goto LABEL_4;
      }
      if (v37 == *MEMORY[0x1E0D6ED10])
      {
        OUTLINED_FUNCTION_5_5();
        sub_19A8C44AC();
        sub_19A8C4440();
        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
        sub_19A8C447C();
        OUTLINED_FUNCTION_3_7();
        v50 = objc_allocWithZone(MEMORY[0x1E0D8C730]);
        sub_19A86DC18();
      }
      else
      {
        sub_19A8C4E24();
        __break(1u);
      }
    }
  }
}

id sub_19A86D3C4(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  if (a2)
  {
    v2 = (void *)sub_19A8C4938();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_textWithString_, v2);

  return v3;
}

void sub_19A86D430(unint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  NSObject **v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  os_log_t v37;
  char v39;
  char *v40;
  uint64_t v41;
  void *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  NSObject *v52;
  char *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  os_log_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  id v73;
  _QWORD *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  os_log_t v78;
  uint64_t v79;
  uint64_t v80;

  v65 = a3;
  v76 = a2;
  v64 = sub_19A8C465C();
  MEMORY[0x1E0C80A78](v64, v5, v6, v7, v8);
  v63[2] = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19A8C468C();
  v67 = *(_QWORD *)(v10 - 8);
  v68 = v10;
  MEMORY[0x1E0C80A78](v10, v11, v12, v13, v14);
  v66 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_19A8C489C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18, v19, v20, v21);
  v23 = (char *)v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C650]), sel_init);
  sub_19A86DEB8(MEMORY[0x1E0DEE9D8], v73);
  v72 = a1;
  v24 = sub_19A8C4674();
  v25 = *(_QWORD *)(v24 + 16);
  v70 = v17;
  v71 = v16;
  v75 = v25;
  v69 = v23;
  if (v25)
  {
    v26 = (_QWORD *)(v24 + 32);
    v27 = (NSObject **)(v24 + 40);
    v63[1] = v24;
    swift_bridgeObjectRetain();
    v74 = v26;
    v28 = v26;
    v29 = 1;
    v30 = v72;
    while (1)
    {
      v31 = *v28;
      v32 = *v27;
      swift_bridgeObjectRetain();
      v33 = sub_19A86DF18(v76, (SEL *)&selRef_results, &qword_1ECFFDE58);
      if (!v33)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      v3 = v33;
      v77 = v29;
      v78 = v32;
      if (v33 >> 62)
      {
        swift_bridgeObjectRetain();
        v29 = sub_19A8C4DF4();
        if (!v29)
        {
LABEL_30:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
LABEL_31:
          v29 = v77;
LABEL_32:
          if (v29 == v75)
            goto LABEL_36;
          goto LABEL_33;
        }
      }
      else
      {
        v29 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v29)
          goto LABEL_30;
      }
      v16 = v3 & 0xC000000000000001;
      v17 = 4;
      while (1)
      {
        if (v16)
          v34 = (char *)MEMORY[0x19AECC324](v17 - 4, v3);
        else
          v34 = (char *)*(id *)(v3 + 8 * v17);
        v23 = v34;
        v35 = v17 - 3;
        if (__OFADD__(v17 - 4, 1))
        {
          __break(1u);
          goto LABEL_46;
        }
        v36 = sub_19A86DFFC(v34, (SEL *)&selRef_identifier);
        if (!v37)
          goto LABEL_17;
        if (v36 == v31 && v37 == v78)
          break;
        v39 = sub_19A8C4E30();
        swift_bridgeObjectRelease();
        if ((v39 & 1) != 0)
          goto LABEL_21;
LABEL_17:

        ++v17;
        if (v35 == v29)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v17 = v70;
          v16 = v71;
          v23 = v69;
          v30 = v72;
          goto LABEL_31;
        }
      }
      swift_bridgeObjectRelease();
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v23;
      sub_19A85BADC(v73);
      v80 = v41;
      v17 = v70;
      v16 = v71;
      if (!v41)
      {
        __break(1u);
LABEL_50:

        __break(1u);
        return;
      }
      MEMORY[0x19AECBFC4]();
      if (*(_QWORD *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_19A8C4A40();
      sub_19A8C4A58();
      sub_19A8C4A34();
      if (v80)
      {
        sub_19A8444E0(0, &qword_1ECFFDE58);
        v42 = (void *)sub_19A8C4A10();
        swift_bridgeObjectRelease();
      }
      else
      {
        v42 = 0;
      }
      v23 = v69;
      objc_msgSend(v73, sel_setResults_, v42);
      swift_bridgeObjectRelease();

      v29 = v77;
      v30 = v72;
      if (v77 == v75)
      {
LABEL_36:
        swift_bridgeObjectRelease_n();
        goto LABEL_38;
      }
LABEL_33:
      v28 = &v74[2 * v29];
      v27 = (NSObject **)(v28 + 1);
      if (__OFADD__(v29++, 1))
      {
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
  }
  swift_bridgeObjectRelease();
  v30 = v72;
LABEL_38:
  v3 = v30;
  v44 = sub_19A8C4680();
  v46 = v45;
  v29 = (uint64_t)v73;
  sub_19A86DE2C(v29, v44, v46, sub_19A8494D8);
  swift_bridgeObjectRelease();
  if (qword_1ECFFDD20 != -1)
LABEL_47:
    swift_once();
  v47 = __swift_project_value_buffer(v16, (uint64_t)qword_1ECFFDD00);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v23, v47, v16);
  v48 = v66;
  v49 = v67;
  v50 = v3;
  v51 = v68;
  (*(void (**)(char *, unint64_t, uint64_t))(v67 + 16))(v66, v50, v68);
  v40 = (char *)(id)v29;
  v52 = sub_19A8C4878();
  v53 = v23;
  v54 = sub_19A8C4BCC();
  if (os_log_type_enabled(v52, v54))
  {
    v78 = v52;
    v55 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v80 = v56;
    *(_DWORD *)v55 = 134218242;
    sub_19A85BADC(v40);
    if (!v57)
      goto LABEL_50;
    if (v57 >> 62)
      v58 = sub_19A8C4DF4();
    else
      v58 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);

    swift_bridgeObjectRelease();
    v79 = v58;
    sub_19A8C4CC8();

    *(_WORD *)(v55 + 12) = 2080;
    v59 = v66;
    sub_19A8C4668();
    v60 = sub_19A8C4950();
    v79 = sub_19A844794(v60, v61, &v80);
    sub_19A8C4CC8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v59, v68);
    v62 = v78;
    _os_log_impl(&dword_19A825000, v78, v54, "ZKW section decoded. Section results count: %ld, section status code: %s", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x19AECCDEC](v56, -1, -1);
    MEMORY[0x19AECCDEC](v55, -1, -1);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v51);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v53, v16);
  }
}

id sub_19A86DAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  v4 = v3;
  v6 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_19A8C3E58();
  v8 = objc_msgSend(v4, sel_initWithQuery_date_, v6, v7);

  v9 = sub_19A8C3EA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a3, v9);
  return v8;
}

void sub_19A86DB3C(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;

  v3 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  v4 = (void *)OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_7_2();
  objc_msgSend(v1, sel_initWithType_query_identifier_, a1, v3, v4);

  OUTLINED_FUNCTION_10_5();
}

id sub_19A86DBB8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  id v6;

  v5 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithQuery_location_, v5, a3);

  return v6;
}

id sub_19A86DC18()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  v3 = (void *)OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_7_2();
  v4 = objc_msgSend(v0, sel_initWithQuery_requestedEntityType_identifier_, v1, v2, v3);

  return v4;
}

uint64_t sub_19A86DCC0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (v3 = a1 + 8 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_19A8C4E0C();
    __break(1u);
  }
  else
  {
    sub_19A8444E0(0, &qword_1ECFFDE58);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_19A86DDB8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v6;

  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_8_9();
  sub_19A849388(a1, a2);
  *v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_19A86DE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19A86DE2C(a1, a2, a3, sub_19A8494D8);
}

uint64_t sub_19A86DE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19A86DE2C(a1, a2, a3, sub_19A849570);
}

uint64_t sub_19A86DE2C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v10;

  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_8_9();
  a4(a1, a2, a3);
  *v4 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_19A86DE9C(void *a1)
{
  return sub_19A86DF18(a1, (SEL *)&selRef_results, &qword_1ECFFDE58);
}

void sub_19A86DEB8(uint64_t a1, void *a2)
{
  id v3;

  OUTLINED_FUNCTION_45(a1, &qword_1ECFFDE58);
  v3 = (id)OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_10();
  objc_msgSend(a2, sel_setResults_, v3);

}

uint64_t sub_19A86DF18(void *a1, SEL *a2, unint64_t *a3)
{
  id v4;
  void *v5;
  uint64_t v6;

  v4 = objc_msgSend(a1, *a2);
  if (!v4)
    return 0;
  v5 = v4;
  sub_19A8444E0(0, a3);
  v6 = sub_19A8C4A1C();

  return v6;
}

uint64_t sub_19A86DF88(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_punchoutOptions);

  if (!v2)
    return 0;
  sub_19A8444E0(0, &qword_1EE3B04F0);
  v3 = sub_19A8C4A1C();

  return v3;
}

uint64_t sub_19A86DFFC(void *a1, SEL *a2)
{
  uint64_t v2;
  id v3;
  void *v4;

  v3 = objc_msgSend(a1, *a2);
  if (!v3)
    return 0;
  v4 = v3;
  sub_19A8C4944();
  OUTLINED_FUNCTION_3_7();

  return v2;
}

uint64_t sub_19A86E054(uint64_t result, uint64_t a2, unint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t i;
  void (*v10)(_QWORD *, _QWORD);
  void (*v11)(_QWORD *, _QWORD);
  id *v12;
  id v13;
  _QWORD v14[4];

  v5 = result;
  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_19A8C4DF4();
    result = swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v8 = sub_19A8C4DF4();
      result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_19A86E1D8();
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EE3B0FA8);
            sub_19A85BE0C(v14, i, a3);
            v11 = v10;
            v13 = *v12;
            v11(v14, 0);
            *(_QWORD *)(v5 + 8 * i) = v13;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_19A86DCC0((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10), v5);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_19A86E1D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE3B0FB0;
  if (!qword_1EE3B0FB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE3B0FA8);
    result = MEMORY[0x19AECCD38](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE3B0FB0);
  }
  return result;
}

uint64_t sub_19A86E21C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECFFE6E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_5_5()
{
  return sub_19A8C4440();
}

void OUTLINED_FUNCTION_8_9()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_18_3()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_19A86E28C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  v3 = a1;
  v4 = (void *)sub_19A8C4938();
  v5 = objc_msgSend(v4, sel__web_looksLikeIPAddress);

  if ((v5 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_19A831E10();
    v6 = sub_19A8C4CE0();
    v3 = sub_19A86E364(v6, v3);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_19A86E364(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  uint64_t v6;
  void *v7;
  int IsDomainTopLevel;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  MEMORY[0x19AECBF34](16);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v6 = a1 + 16 * v3 + 24;
    while (1)
    {
      swift_bridgeObjectRetain();
      if (v4)
        sub_19A8C49B0();
      sub_19A86E570();
      sub_19A8C49A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v7 = (void *)sub_19A8C4938();
      IsDomainTopLevel = _CFHostIsDomainTopLevel();
      swift_bridgeObjectRelease();

      v9 = IsDomainTopLevel != 0;
      if (!IsDomainTopLevel && v5)
        break;
      v6 -= 16;
      ++v4;
      v5 = IsDomainTopLevel != 0;
      if (v3 == v4)
      {
        swift_bridgeObjectRelease();
        v10 = 0xE000000000000000;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    v13 = a2;
    swift_bridgeObjectRetain();
    v11 = sub_19A8C498C();
    swift_bridgeObjectRelease();
    v12 = 1;
    goto LABEL_14;
  }
  v10 = 0;
  v9 = 0;
LABEL_9:
  swift_bridgeObjectRelease();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v10)
    goto LABEL_13;
  v11 = 0;
  v12 = 0;
  v13 = a2;
LABEL_14:
  v14 = sub_19A8C498C();
  if (!v12 || v11 != v14)
    return 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  return v13;
}

unint64_t sub_19A86E570()
{
  unint64_t result;

  result = qword_1EE3B0FB8;
  if (!qword_1EE3B0FB8)
  {
    result = MEMORY[0x19AECCD38](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE3B0FB8);
  }
  return result;
}

void sub_19A86E5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;

  v1 = sub_19A8C3DF8();
  v2 = *(_QWORD *)(v1 - 8);
  v7 = MEMORY[0x1E0C80A78](v1, v3, v4, v5, v6);
  v76 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v7, v9, v10, v11, v12);
  v15 = (char *)&v73 - v14;
  v20 = MEMORY[0x1E0C80A78](v13, v16, v17, v18, v19);
  v75 = (uint64_t)&v73 - v21;
  MEMORY[0x1E0C80A78](v20, v22, v23, v24, v25);
  v27 = (char *)&v73 - v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v28, v29, v30, v31, v32);
  OUTLINED_FUNCTION_8_10();
  v38 = MEMORY[0x1E0C80A78](v33, v34, v35, v36, v37);
  v40 = (char *)&v73 - v39;
  v45 = MEMORY[0x1E0C80A78](v38, v41, v42, v43, v44);
  OUTLINED_FUNCTION_45(v45, &qword_1EE3B04F0);
  sub_19A8C45A8();
  sub_19A8C3DEC();
  OUTLINED_FUNCTION_10();
  sub_19A843B08();
  if (!v46)
    v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C5E0]), sel_init);
  v47 = v46;
  v48 = sub_19A8C45B4();
  OUTLINED_FUNCTION_2_7(v48, v49, v50, (SEL *)&selRef_setName_);
  v51 = sub_19A8C45CC();
  OUTLINED_FUNCTION_2_7(v51, v52, v53, (SEL *)&selRef_setBundleIdentifier_);
  v54 = sub_19A8C45C0();
  OUTLINED_FUNCTION_2_7(v54, v55, v56, (SEL *)&selRef_setLabel_);
  sub_19A844218();
  sub_19A8C45A8();
  sub_19A8C3DEC();
  OUTLINED_FUNCTION_10();
  if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v1) == 1)
  {
    sub_19A86F5E8((uint64_t)v40);
  }
  else
  {
    OUTLINED_FUNCTION_13_4((uint64_t)v27, (uint64_t)v40);
    v57 = sub_19A86F628(v47);
    if (v57)
    {
      v58 = v57;
      v74 = v15;
      (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v75, v27, v1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v58 = OUTLINED_FUNCTION_2_9(0, *(_QWORD *)(v58 + 16) + 1);
      v60 = *(_QWORD *)(v58 + 16);
      v59 = *(_QWORD *)(v58 + 24);
      if (v60 >= v59 >> 1)
        v58 = OUTLINED_FUNCTION_2_9(v59 > 1, v60 + 1);
      *(_QWORD *)(v58 + 16) = v60 + 1;
      OUTLINED_FUNCTION_14_4();
      OUTLINED_FUNCTION_13_4(v61 + v62 * v60, v75);
      v63 = (void *)OUTLINED_FUNCTION_19_2();
      v64 = OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_26_2(v64, sel_setUrls_);

      OUTLINED_FUNCTION_62((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      v15 = v74;
    }
    else
    {
      OUTLINED_FUNCTION_27_2(0, sel_setUrls_);
      OUTLINED_FUNCTION_62((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      swift_bridgeObjectRelease();
    }
  }
  sub_19A8C459C();
  sub_19A8C3DEC();
  OUTLINED_FUNCTION_10();
  if (__swift_getEnumTagSinglePayload(v0, 1, v1) == 1)
  {
    sub_19A86F5E8(v0);
  }
  else
  {
    OUTLINED_FUNCTION_13_4((uint64_t)v15, v0);
    v65 = sub_19A86F628(v47);
    if (v65)
    {
      v66 = v65;
      (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v76, v15, v1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v66 = OUTLINED_FUNCTION_2_9(0, *(_QWORD *)(v66 + 16) + 1);
      v68 = *(_QWORD *)(v66 + 16);
      v67 = *(_QWORD *)(v66 + 24);
      if (v68 >= v67 >> 1)
        v66 = OUTLINED_FUNCTION_2_9(v67 > 1, v68 + 1);
      *(_QWORD *)(v66 + 16) = v68 + 1;
      OUTLINED_FUNCTION_14_4();
      OUTLINED_FUNCTION_13_4(v69 + v70 * v68, v76);
      v71 = (void *)OUTLINED_FUNCTION_19_2();
      v72 = OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_26_2(v72, sel_setUrls_);

      OUTLINED_FUNCTION_62((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    }
    else
    {
      OUTLINED_FUNCTION_27_2(0, sel_setUrls_);
      OUTLINED_FUNCTION_62((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_0_2();
}

id sub_19A86E9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_19A8C4608();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2, v3, v4, v5);
  OUTLINED_FUNCTION_18();
  v8 = v7 - v6;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C630]), sel_init);
  v10 = sub_19A8C4584();
  sub_19A86889C(v10, v11, v9, (SEL *)&selRef_setName_);
  v12 = sub_19A8C4578();
  sub_19A86889C(v12, v13, v9, (SEL *)&selRef_setMaps_encrypted_muid_);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C4B8]), sel_init);
  sub_19A8C456C();
  v15 = sub_19A8C45FC();
  v17 = v16;
  OUTLINED_FUNCTION_62(v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_2_7(v15, v17, v18, (SEL *)&selRef_setAddress_);
  objc_msgSend(v9, sel_setLocation_type_info_, v14);

  return v9;
}

void sub_19A86EAB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t (**v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  id v74;
  void *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t (**v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v84 = sub_19A8C41D0();
  v87 = *(_QWORD *)(v84 - 8);
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_18();
  v9 = v8 - v7;
  v10 = sub_19A8C41C4();
  v85 = *(uint64_t (***)(uint64_t, uint64_t))(v10 - 8);
  v86 = v10;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v11, v12, v13, v14, v15);
  OUTLINED_FUNCTION_0();
  v81 = v16;
  v17 = sub_19A8C4758();
  v88 = *(_QWORD *)(v17 - 8);
  v89 = v17;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v18, v19, v20, v21, v22);
  OUTLINED_FUNCTION_8_10();
  v28 = MEMORY[0x1E0C80A78](v23, v24, v25, v26, v27);
  v80 = (char *)&v80 - v29;
  MEMORY[0x1E0C80A78](v28, v30, v31, v32, v33);
  v34 = sub_19A8C41A0();
  v35 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D6D838];
  MEMORY[0x1E0C80A78](v34, v36, v37, v38, v39);
  OUTLINED_FUNCTION_18();
  v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C2A0]), sel_init);
  v82 = v0;
  v83 = v40;
  sub_19A8C4374();
  sub_19A8C474C();
  sub_19A84455C(&qword_1EE3B0FC0, v35, MEMORY[0x1E0D6D830]);
  OUTLINED_FUNCTION_24_2();
  v41 = sub_19A8C477C();
  v43 = v42;
  OUTLINED_FUNCTION_12_6();
  v44 = OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_45(v44, &qword_1EE3B0FE0);
  sub_19A84449C(v41, v43);
  v45 = sub_19A843E20(v41, v43);
  if (v45)
  {
    v46 = v45;
    v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C418]), sel_initWithProtobuf_, v45);
    if (v47)
    {
      v48 = v47;
      OUTLINED_FUNCTION_23_3((uint64_t)v47, sel_setImage_);

    }
    else
    {

    }
  }
  sub_19A833360(v41, v43);
  v49 = v81;
  v50 = v85;
  v51 = (uint64_t)v80;
  v52 = sub_19A8C4380();
  sub_19A86889C(v52, v53, v83, (SEL *)&selRef_setTitle_);
  sub_19A8C438C();
  sub_19A8C474C();
  sub_19A84455C(&qword_1EE3B0FC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6D888], MEMORY[0x1E0D6D880]);
  sub_19A8C477C();
  OUTLINED_FUNCTION_17_4(v51);
  v54 = OUTLINED_FUNCTION_62(v49, v50[1]);
  OUTLINED_FUNCTION_45(v54, &qword_1EE3B0FD8);
  v55 = OUTLINED_FUNCTION_24_2();
  sub_19A84449C(v55, v56);
  v57 = OUTLINED_FUNCTION_24_2();
  v59 = sub_19A843E20(v57, v58);
  if (v59)
  {
    v60 = v59;
    v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C298]), sel_initWithProtobuf_, v59);
    if (v61)
    {
      v62 = v61;
      OUTLINED_FUNCTION_23_3((uint64_t)v61, sel_setCommand_);

    }
    else
    {

    }
  }
  v63 = OUTLINED_FUNCTION_24_2();
  sub_19A833360(v63, v64);
  v65 = v84;
  v66 = sub_19A8C435C();
  v67 = *(_QWORD *)(v66 + 16);
  if (v67)
  {
    v90 = MEMORY[0x1E0DEE9D8];
    sub_19A8C4DA0();
    v68 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
    v81 = v66;
    v69 = v66 + v68;
    v70 = *(_QWORD *)(v87 + 72);
    v85 = *(uint64_t (***)(uint64_t, uint64_t))(v87 + 16);
    v86 = v70;
    do
    {
      ((void (*)(uint64_t, unint64_t, uint64_t))v85)(v9, v69, v65);
      sub_19A8C474C();
      sub_19A84455C(&qword_1EE3B0FD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6D908], MEMORY[0x1E0D6D900]);
      v71 = sub_19A8C477C();
      v73 = v72;
      OUTLINED_FUNCTION_17_4(v1);
      v74 = objc_allocWithZone(MEMORY[0x1E0D8C878]);
      sub_19A84449C(v71, v73);
      v75 = (void *)sub_19A8C3E28();
      v76 = objc_msgSend(v74, sel_initWithJSON_, v75);
      OUTLINED_FUNCTION_10_6();

      if (v76)
      {
        if (!objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C1E0]), sel_initWithProtobuf_, v76))
          objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C1E0]), sel_init);
        OUTLINED_FUNCTION_10_6();

        v65 = v84;
      }
      else
      {
        OUTLINED_FUNCTION_10_6();
        v65 = v84;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C1E0]), sel_init);
      }
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v9, v65);
      sub_19A8C4D88();
      sub_19A8C4DAC();
      sub_19A8C4DB8();
      sub_19A8C4D94();
      v69 += v86;
      --v67;
    }
    while (v67);
    v77 = v90;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v77 = MEMORY[0x1E0DEE9D8];
  }
  v78 = v77;
  v79 = v83;
  sub_19A86F684(v78, v83);
  objc_msgSend(v79, sel_setIsDestructive_, sub_19A8C4368() & 1);
  OUTLINED_FUNCTION_0_2();
}

id sub_19A86F01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  int v45;
  id v46;
  uint64_t v47;
  id v48;
  float v49;
  float v50;
  void (*v51)(uint64_t, uint64_t);
  float v52;
  float v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  int v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v0 = sub_19A8C429C();
  v68 = *(_QWORD *)(v0 - 8);
  v69 = v0;
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_0();
  v67 = v6;
  v72 = sub_19A8C42C0();
  v70 = *(_QWORD *)(v72 - 8);
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_0();
  v71 = v12;
  v13 = sub_19A8C4284();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15, v16, v17, v18);
  OUTLINED_FUNCTION_18();
  v21 = v20 - v19;
  sub_19A8C3EA0();
  OUTLINED_FUNCTION_5();
  MEMORY[0x1E0C80A78](v22, v23, v24, v25, v26);
  OUTLINED_FUNCTION_18();
  v29 = v28 - v27;
  v30 = sub_19A8C4350();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30, v32, v33, v34, v35);
  OUTLINED_FUNCTION_18();
  v38 = v37 - v36;
  sub_19A8C42D8();
  v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 88))(v38, v30);
  if (v39 == *MEMORY[0x1E0D6DF88])
  {
    v40 = sub_19A8C4290();
    v42 = v41;
    sub_19A8C42F0();
    sub_19A8C4278();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v21, v13);
    sub_19A8C3E70();
    sub_19A8C42CC();
    OUTLINED_FUNCTION_3_7();
    v43 = objc_allocWithZone(MEMORY[0x1E0D8C3C8]);
    return sub_19A86F4A0(v40, v42, v29);
  }
  v45 = v39;
  if (v39 == *MEMORY[0x1E0D6DF78])
  {
    sub_19A8C4290();
    OUTLINED_FUNCTION_4_5();
    OUTLINED_FUNCTION_3_7();
    v46 = objc_allocWithZone(MEMORY[0x1E0D8C5E8]);
    v47 = 1;
LABEL_13:
    OUTLINED_FUNCTION_18_4(v47);
    return (id)v44;
  }
  if (v39 == *MEMORY[0x1E0D6DF98])
  {
    v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8C478]), sel_init);
    OUTLINED_FUNCTION_20_2();
    sub_19A8C42A8();
    v50 = v49;
    v51 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    v51(v71, v72);
    objc_msgSend(v48, sel_setLat_, v50);
    OUTLINED_FUNCTION_20_2();
    sub_19A8C42B4();
    v53 = v52;
    v51(v71, v72);
    objc_msgSend(v48, sel_setLng_, v53);
    v54 = OUTLINED_FUNCTION_11_5();
    v56 = v55;
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_3_7();
    v57 = objc_allocWithZone(MEMORY[0x1E0D8C860]);
    return sub_19A86F558(v54, v56, v48);
  }
  if (v39 == *MEMORY[0x1E0D6DF80])
  {
    OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_4_5();
    OUTLINED_FUNCTION_3_7();
    v58 = objc_allocWithZone(MEMORY[0x1E0D8C5E8]);
    v47 = 2;
    goto LABEL_13;
  }
  if (v39 == *MEMORY[0x1E0D6DF68])
  {
    OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_4_5();
    OUTLINED_FUNCTION_3_7();
    v59 = objc_allocWithZone(MEMORY[0x1E0D8C5E8]);
    v47 = 6;
    goto LABEL_13;
  }
  if (v39 == *MEMORY[0x1E0D6DF70])
  {
    OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_4_5();
    OUTLINED_FUNCTION_3_7();
    v60 = objc_allocWithZone(MEMORY[0x1E0D8C5E8]);
    v47 = 8;
    goto LABEL_13;
  }
  v63 = *MEMORY[0x1E0D6DF90];
  OUTLINED_FUNCTION_11_5();
  if (v45 != v63)
  {
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_3_7();
    v65 = objc_allocWithZone(MEMORY[0x1E0D8C5E8]);
    OUTLINED_FUNCTION_18_4(7);
    v61 = v66;
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v38, v30);
    return (id)v61;
  }
  sub_19A8C42FC();
  sub_19A8C4290();
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_3_7();
  v64 = objc_allocWithZone(MEMORY[0x1E0D8C730]);
  return sub_19A86DC18();
}

id sub_19A86F4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  v4 = v3;
  v6 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_19A8C3E58();
  v8 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v4, sel_initWithQuery_date_identifier_, v6, v7, v8);

  v10 = sub_19A8C3EA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a3, v10);
  return v9;
}

id sub_19A86F558(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  void *v6;
  id v7;

  v5 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_19A8C4938();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v3, sel_initWithQuery_location_identifier_, v5, a3, v6);

  return v7;
}

uint64_t sub_19A86F5E8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECFFDF70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19A86F628(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_urls);
  if (!v1)
    return 0;
  v2 = v1;
  sub_19A8C3DF8();
  v3 = sub_19A8C4A1C();

  return v3;
}

void sub_19A86F684(uint64_t a1, void *a2)
{
  id v3;

  sub_19A8444E0(0, &qword_1EE3B0FE8);
  v3 = (id)sub_19A8C4A10();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setPreviewButtonItems_, v3);

}

uint64_t OUTLINED_FUNCTION_12_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v1 - 104);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 112) + 8);
  *(_QWORD *)(v1 - 112) = v3;
  return v3(v0, v2);
}

void OUTLINED_FUNCTION_18_4(uint64_t a1)
{
  sub_19A86DB3C(a1);
}

id OUTLINED_FUNCTION_23_3(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(*(id *)(v3 - 152), a2, v2);
}

uint64_t sub_19A86F740()
{
  uint64_t v0;

  MEMORY[0x19AECCDEC](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

void sub_19A86F76C(void (*a1)(void))
{
  uint64_t v1;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(v1 + 16);
  os_unfair_lock_lock(v3);
  a1();
  os_unfair_lock_unlock(v3);
}

void sub_19A86F7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  __n128 *v14;
  __n128 *v15;
  __n128 *v16;

  switch(*(_QWORD *)(a10 + 16))
  {
    case 0:
      OUTLINED_FUNCTION_5_6();
      sub_19A8C47C4();
      return;
    case 1:
      OUTLINED_FUNCTION_4_6((uint64_t *)&unk_1ECFFE900);
      v10 = OUTLINED_FUNCTION_3_0();
      *(_OWORD *)(v10 + 16) = xmmword_19A8CE860;
      v11 = v10 + 32;
      v12 = a10 + 32;
      goto LABEL_8;
    case 2:
      OUTLINED_FUNCTION_4_6((uint64_t *)&unk_1ECFFE900);
      v13 = (__n128 *)OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_0_8(v13, (__n128)xmmword_19A8CE8E0);
      v11 = (uint64_t)&v13[4].n128_i64[1];
      v12 = a10 + 72;
      goto LABEL_8;
    case 3:
      OUTLINED_FUNCTION_4_6((uint64_t *)&unk_1ECFFE900);
      v14 = (__n128 *)OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_0_8(v14, (__n128)xmmword_19A8CE8F0);
      OUTLINED_FUNCTION_6_8();
      v11 = (uint64_t)&v14[7];
      v12 = a10 + 112;
      goto LABEL_8;
    case 4:
      OUTLINED_FUNCTION_4_6((uint64_t *)&unk_1ECFFE900);
      v15 = (__n128 *)OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_0_8(v15, (__n128)xmmword_19A8CF700);
      OUTLINED_FUNCTION_6_8();
      OUTLINED_FUNCTION_8_11();
      v11 = (uint64_t)&v15[9].n128_i64[1];
      v12 = a10 + 152;
      goto LABEL_8;
    case 5:
      OUTLINED_FUNCTION_4_6((uint64_t *)&unk_1ECFFE900);
      v16 = (__n128 *)OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_0_8(v16, (__n128)xmmword_19A8CF6F0);
      OUTLINED_FUNCTION_6_8();
      OUTLINED_FUNCTION_8_11();
      sub_19A865E80(a10 + 152, (uint64_t)&v16[9].n128_i64[1]);
      v11 = (uint64_t)&v16[12];
      v12 = a10 + 192;
LABEL_8:
      sub_19A865E80(v12, v11);
      OUTLINED_FUNCTION_5_6();
      sub_19A8C47C4();
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_11()
{
  uint64_t v0;
  uint64_t v1;

  return sub_19A865E80(v0 + 112, v1 + 112);
}

void sub_19A87005C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19A8709B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

Class __getDEExecutorClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  DialogEngineLibrary();
  result = objc_getClass("DEExecutor");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getDEExecutorClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)__82__SFSearchResult_VisualCat__processVisualCATResultSynchronouslyUsingPatternClass___block_invoke(v3);
  }
  return result;
}

void DialogEngineLibrary()
{
  void *v0;

  if (!DialogEngineLibraryCore_frameworkLibrary)
  {
    DialogEngineLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!DialogEngineLibraryCore_frameworkLibrary)
    {
      v0 = (void *)abort_report_np();
      free(v0);
    }
  }
}

Class __getCATPatternClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  SEL v4;
  id v5;
  id v6;

  DialogEngineLibrary();
  result = objc_getClass("CATPattern");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCATPatternClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (void *)abort_report_np();
    return (Class)+[PARSyncCard cardWithTitle:sections:](v3, v4, v5, v6);
  }
  return result;
}

uint64_t _CPPunchoutForFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  void *v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setName:", v18);
          goto LABEL_26;
        case 3u:
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setLabel:", v18);
          goto LABEL_26;
        case 4u:
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          if (v18)
            objc_msgSend(a1, "addUrls:", v18);
          goto LABEL_26;
        case 5u:
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setBundleIdentifier:", v18);
LABEL_26:

          continue;
        case 6u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        v25 = v24 + 1;
        if (v24 == -1 || v25 > *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
        *(_QWORD *)(a2 + v23) = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0)
          goto LABEL_35;
        v20 += 7;
        v15 = v21++ >= 9;
        if (v15)
        {
          v27 = 0;
          goto LABEL_38;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_35:
      v27 = *(_BYTE *)(a2 + *v5) ? 0 : v22;
LABEL_38:
      objc_msgSend(a1, "setKnownBundleIdentifier:", v27);
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPActionItemForFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  _CPPunchoutForFeedback *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v18 = objc_alloc_init(_CPPunchoutForFeedback);
        if (!PBReaderPlaceMark() || (_CPPunchoutForFeedbackReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPunchout:", v18, 0, 0);

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPButtonFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_44;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_47;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_44:
          if (*(_BYTE *)(a2 + *v6))
            v25 = 0;
          else
            v25 = v20;
LABEL_47:
          objc_msgSend(a1, "setCommandType:", v25);
          continue;
        case 2u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setCommandDetail:", v27);

          continue;
        case 3u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          while (2)
          {
            v31 = *v4;
            v32 = *(_QWORD *)(a2 + v31);
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (v15)
                {
                  v35 = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v35 = 0;
          else
            v35 = v30;
LABEL_52:
          objc_msgSend(a1, "setUniqueId:", v35);
          continue;
        case 4u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v39 = *v4;
        v40 = *(_QWORD *)(a2 + v39);
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
          break;
        v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
        *(_QWORD *)(a2 + v39) = v41;
        v38 |= (unint64_t)(v42 & 0x7F) << v36;
        if ((v42 & 0x80) == 0)
          goto LABEL_54;
        v36 += 7;
        v15 = v37++ >= 9;
        if (v15)
        {
          v43 = 0;
          goto LABEL_57;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_54:
      v43 = *(_BYTE *)(a2 + *v6) ? 0 : v38;
LABEL_57:
      objc_msgSend(a1, "setTimestamp:", v43);
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPButtonForFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  void *v35;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (1)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
            break;
          v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
          *(_QWORD *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0)
            goto LABEL_44;
          v27 += 7;
          v15 = v28++ >= 9;
          if (v15)
          {
            v34 = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
        v34 = *(_BYTE *)(a2 + *v5) ? 0 : v29;
LABEL_47:
        objc_msgSend(a1, "setCommandType:", v34);
      }
      else if ((_DWORD)v18 == 2)
      {
        PBReaderReadString();
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCommandDetail:", v35);

      }
      else if ((_DWORD)v18 == 3)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_39;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_42;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
        v26 = *(_BYTE *)(a2 + *v5) ? 0 : v21;
LABEL_42:
        objc_msgSend(a1, "setUniqueId:", v26);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPCBAEngagementFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  void *v43;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_44;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_47;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_44:
          if (*(_BYTE *)(a2 + *v6))
            v25 = 0;
          else
            v25 = v20;
LABEL_47:
          objc_msgSend(a1, "setTimestamp:", v25);
          continue;
        case 2u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          while (2)
          {
            v30 = *v4;
            v31 = *(_QWORD *)(a2 + v30);
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                v15 = v28++ >= 9;
                if (v15)
                {
                  v34 = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v34 = 0;
          else
            v34 = v29;
LABEL_52:
          objc_msgSend(a1, "setQueryId:", v34);
          continue;
        case 3u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          break;
        case 4u:
          PBReaderReadString();
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setUrl:", v43);

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v38 = *v4;
        v39 = *(_QWORD *)(a2 + v38);
        v40 = v39 + 1;
        if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v5))
          break;
        v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
        *(_QWORD *)(a2 + v38) = v40;
        v37 |= (unint64_t)(v41 & 0x7F) << v35;
        if ((v41 & 0x80) == 0)
          goto LABEL_54;
        v35 += 7;
        v15 = v36++ >= 9;
        if (v15)
        {
          v42 = 0;
          goto LABEL_57;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_54:
      v42 = *(_BYTE *)(a2 + *v6) ? 0 : v37;
LABEL_57:
      objc_msgSend(a1, "setCbaType:", v42);
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPCacheHitFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_39;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_42;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_39:
          if (*(_BYTE *)(a2 + *v6))
            v25 = 0;
          else
            v25 = v20;
LABEL_42:
          objc_msgSend(a1, "setTimestamp:", v25);
          continue;
        case 2u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setInput:", v27);
          goto LABEL_37;
        case 3u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          break;
        case 4u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setUuid:", v27);
LABEL_37:

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v31 = *v4;
        v32 = *(_QWORD *)(a2 + v31);
        v33 = v32 + 1;
        if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          break;
        v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
        *(_QWORD *)(a2 + v31) = v33;
        v30 |= (unint64_t)(v34 & 0x7F) << v28;
        if ((v34 & 0x80) == 0)
          goto LABEL_44;
        v28 += 7;
        v15 = v29++ >= 9;
        if (v15)
        {
          v35 = 0;
          goto LABEL_47;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_44:
      v35 = *(_BYTE *)(a2 + *v6) ? 0 : v30;
LABEL_47:
      objc_msgSend(a1, "setTriggerEvent:", v35);
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPCardSectionForFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  _CPCardSectionForFeedback *v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v18 = (_CPCardSectionForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCardSectionId:", v18);
        goto LABEL_57;
      case 2u:
        PBReaderReadString();
        v18 = (_CPCardSectionForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setActionTarget:", v18);
        goto LABEL_57;
      case 3u:
        PBReaderReadString();
        v18 = (_CPCardSectionForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setActionDestination:", v18);
        goto LABEL_57;
      case 4u:
        PBReaderReadString();
        v18 = (_CPCardSectionForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setResultId:", v18);
        goto LABEL_57;
      case 6u:
        v20 = 0;
        v21 = 0;
        v22 = 0;
        while (2)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          v25 = v24 + 1;
          if (v24 == -1 || v25 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
            *(_QWORD *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              v15 = v21++ >= 9;
              if (v15)
              {
                v27 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v27 = 0;
        else
          v27 = v22;
LABEL_64:
        objc_msgSend(a1, "setCommandType:", v27, v36, v37);
        goto LABEL_58;
      case 7u:
        PBReaderReadString();
        v18 = (_CPCardSectionForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCommandDetail:", v18);
        goto LABEL_57;
      case 8u:
        v18 = objc_alloc_init(_CPCardSectionForFeedback);
        v36 = 0;
        v37 = 0;
        if (!PBReaderPlaceMark() || !_CPCardSectionForFeedbackReadFrom(v18, a2))
          goto LABEL_71;
        PBReaderRecallMark();
        if (v18)
          objc_msgSend(a1, "addCardSections:", v18, 0, 0);
        goto LABEL_57;
      case 9u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v35 = 0;
        else
          v35 = v30;
LABEL_69:
        objc_msgSend(a1, "setCardSectionType:", v35, v36, v37);
        goto LABEL_58;
      case 0xAu:
        PBReaderReadString();
        v18 = (_CPCardSectionForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCardSectionDetail:", v18);
        goto LABEL_57;
      case 0xBu:
        v18 = objc_alloc_init(_CPButtonForFeedback);
        v36 = 0;
        v37 = 0;
        if (!PBReaderPlaceMark() || !_CPButtonForFeedbackReadFrom(v18, a2))
          goto LABEL_71;
        PBReaderRecallMark();
        if (v18)
          objc_msgSend(a1, "addButtons:", v18, 0, 0);
        goto LABEL_57;
      case 0xCu:
        v18 = objc_alloc_init(_CPButtonForFeedback);
        v36 = 0;
        v37 = 0;
        if (!PBReaderPlaceMark() || !_CPButtonForFeedbackReadFrom(v18, a2))
          goto LABEL_71;
        PBReaderRecallMark();
        if (v18)
          objc_msgSend(a1, "addLeadingSwipeButtonItems:", v18, 0, 0);
        goto LABEL_57;
      case 0xDu:
        v18 = objc_alloc_init(_CPButtonForFeedback);
        v36 = 0;
        v37 = 0;
        if (PBReaderPlaceMark() && _CPButtonForFeedbackReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18)
            objc_msgSend(a1, "addTrailingSwipeButtonItems:", v18, 0, 0);
LABEL_57:

LABEL_58:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_71:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_58;
    }
  }
}

BOOL _CPCardForFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  _CPCardSectionForFeedback *v18;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v18 = objc_alloc_init(_CPCardSectionForFeedback);
        if (!PBReaderPlaceMark() || !_CPCardSectionForFeedbackReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v18)
          objc_msgSend(a1, "addCardSections:", v18, 0, 0);
        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_27:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = (_CPCardSectionForFeedback *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "setFbr:", v18);
LABEL_25:

    goto LABEL_27;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPCardSectionEngagementFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPPunchoutForFeedback *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_69;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_72;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_69:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_72:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_59;
      case 2u:
        v27 = objc_alloc_init(_CPPunchoutForFeedback);
        if (!PBReaderPlaceMark() || (_CPPunchoutForFeedbackReadFrom(v27, a2) & 1) == 0)
          goto LABEL_93;
        PBReaderRecallMark();
        objc_msgSend(a1, "setDestination:", v27, 0, 0);
        goto LABEL_58;
      case 3u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v4;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v35 = 0;
        else
          v35 = v30;
LABEL_77:
        objc_msgSend(a1, "setTriggerEvent:", v35);
        goto LABEL_59;
      case 4u:
        v36 = 0;
        v37 = 0;
        v38 = 0;
        while (2)
        {
          v39 = *v4;
          v40 = *(_QWORD *)(a2 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v15 = v37++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v43 = 0;
        else
          v43 = v38;
LABEL_82:
        objc_msgSend(a1, "setActionCardType:", v43);
        goto LABEL_59;
      case 5u:
        v27 = objc_alloc_init(_CPCardSectionForFeedback);
        if (PBReaderPlaceMark() && (_CPCardSectionForFeedbackReadFrom(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCardSection:", v27, 0, 0);
LABEL_58:

LABEL_59:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_93:

        return 0;
      case 6u:
        v44 = 0;
        v45 = 0;
        v46 = 0;
        while (2)
        {
          v47 = *v4;
          v48 = *(_QWORD *)(a2 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v15 = v45++ >= 9;
              if (v15)
              {
                v46 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v46 = 0;
LABEL_86:
        objc_msgSend(a1, "setDestinationWasPARPunchout:", v46 != 0);
        goto LABEL_59;
      case 7u:
        PBReaderReadString();
        v27 = (_CPPunchoutForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setParPunchoutActionTarget:", v27);
        goto LABEL_58;
      case 8u:
        PBReaderReadString();
        v27 = (_CPPunchoutForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCardSectionId:", v27);
        goto LABEL_58;
      case 9u:
        PBReaderReadString();
        v27 = (_CPPunchoutForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setResultId:", v27);
        goto LABEL_58;
      case 0xAu:
        v51 = 0;
        v52 = 0;
        v53 = 0;
        while (2)
        {
          v54 = *v4;
          v55 = *(_QWORD *)(a2 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
            *(_QWORD *)(a2 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v15 = v52++ >= 9;
              if (v15)
              {
                v58 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v58 = 0;
        else
          v58 = v53;
LABEL_91:
        objc_msgSend(a1, "setActionTarget:", v58);
        goto LABEL_59;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_59;
    }
  }
}

uint64_t _CPCardSectionFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPCardSectionForFeedback *v27;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_35;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_38;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_35:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_38:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_39;
      case 2u:
        v27 = objc_alloc_init(_CPCardSectionForFeedback);
        if (PBReaderPlaceMark() && (_CPCardSectionForFeedbackReadFrom(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCardSection:", v27, 0, 0);
LABEL_33:

LABEL_39:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }

        return 0;
      case 3u:
        PBReaderReadString();
        v27 = (_CPCardSectionForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCardSectionId:", v27);
        goto LABEL_33;
      case 4u:
        PBReaderReadString();
        v27 = (_CPCardSectionForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setResultId:", v27);
        goto LABEL_33;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_39;
    }
  }
}

uint64_t _CPCardViewAppearFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPCardForFeedback *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_41;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_44;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_44:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_50;
      case 2u:
        v27 = objc_alloc_init(_CPCardForFeedback);
        if (PBReaderPlaceMark() && _CPCardForFeedbackReadFrom(v27, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCard:", v27, 0, 0);
LABEL_39:

LABEL_50:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }

        return 0;
      case 3u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v4;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v35 = 0;
        else
          v35 = v30;
LABEL_49:
        objc_msgSend(a1, "setLevel:", v35);
        goto LABEL_50;
      case 4u:
        PBReaderReadString();
        v27 = (_CPCardForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setFbr:", v27);
        goto LABEL_39;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_50;
    }
  }
}

uint64_t _CPCardViewDisappearFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _CPCardForFeedback *v35;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (1)
        {
          v30 = *v4;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v5))
            break;
          v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
          *(_QWORD *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0)
            goto LABEL_46;
          v27 += 7;
          v15 = v28++ >= 9;
          if (v15)
          {
            v34 = 0;
            goto LABEL_49;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_46:
        if (*(_BYTE *)(a2 + *v6))
          v34 = 0;
        else
          v34 = v29;
LABEL_49:
        objc_msgSend(a1, "setTimestamp:", v34);
      }
      else if ((_DWORD)v18 == 3)
      {
        v35 = objc_alloc_init(_CPCardForFeedback);
        if (!PBReaderPlaceMark() || !_CPCardForFeedbackReadFrom(v35, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCard:", v35, 0, 0);

      }
      else if ((_DWORD)v18 == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v4;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v5))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_41;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_44;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v6))
          v26 = 0;
        else
          v26 = v21;
LABEL_44:
        objc_msgSend(a1, "setCardDisappearEvent:", v26);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPClearInputFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        while (1)
        {
          v29 = *v4;
          v30 = *(_QWORD *)(a2 + v29);
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v5))
            break;
          v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
          *(_QWORD *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0)
            goto LABEL_42;
          v26 += 7;
          v15 = v27++ >= 9;
          if (v15)
          {
            v33 = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_42:
        v33 = *(_BYTE *)(a2 + *v6) ? 0 : v28;
LABEL_45:
        objc_msgSend(a1, "setTimestamp:", v33);
      }
      else if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_37;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_40;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_37:
        v25 = *(_BYTE *)(a2 + *v6) ? 0 : v20;
LABEL_40:
        objc_msgSend(a1, "setTriggerEvent:", v25);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPUsageSinceLookbackReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  _CPDeviceContext *v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  uint64_t v122;
  char v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  uint64_t v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  uint64_t v138;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_130;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_133;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_130:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
        else
          v25 = v20;
LABEL_133:
        objc_msgSend(a1, "setCollectionStartTimestamp:", v25);
        goto LABEL_203;
      case 2u:
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (2)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
            *(_QWORD *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              v15 = v28++ >= 9;
              if (v15)
              {
                v34 = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v34 = 0;
        else
          v34 = v29;
LABEL_138:
        objc_msgSend(a1, "setCollectionEndTimestamp:", v34);
        goto LABEL_203;
      case 3u:
        v35 = 0;
        v36 = 0;
        v37 = 0;
        while (2)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                v42 = 0;
                goto LABEL_143;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v42 = 0;
        else
          v42 = v37;
LABEL_143:
        objc_msgSend(a1, "setClient:", v42);
        goto LABEL_203;
      case 4u:
        v43 = 0;
        v44 = 0;
        v45 = 0;
        while (2)
        {
          v46 = *v3;
          v47 = *(_QWORD *)(a2 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
            *(_QWORD *)(a2 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v15 = v44++ >= 9;
              if (v15)
              {
                v50 = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v50 = 0;
        else
          v50 = v45;
LABEL_148:
        objc_msgSend(a1, "setTotalUsagesInCollectionPeriod:", v50);
        goto LABEL_203;
      case 5u:
        v51 = objc_alloc_init(_CPDeviceContext);
        if (PBReaderPlaceMark() && _CPDeviceContextReadFrom(v51, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setContext:", v51, 0, 0);

LABEL_203:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 6u:
        v52 = 0;
        v53 = 0;
        v54 = 0;
        while (2)
        {
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              v15 = v53++ >= 9;
              if (v15)
              {
                v59 = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v59 = 0;
        else
          v59 = v54;
LABEL_153:
        objc_msgSend(a1, "setConfiguredLookbackTimeInDays:", v59);
        goto LABEL_203;
      case 7u:
        v60 = 0;
        v61 = 0;
        v62 = 0;
        while (2)
        {
          v63 = *v3;
          v64 = *(_QWORD *)(a2 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              v15 = v61++ >= 9;
              if (v15)
              {
                v67 = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v67 = 0;
        else
          v67 = v62;
LABEL_158:
        objc_msgSend(a1, "setActiveDaysInCollectionPeriod:", v67);
        goto LABEL_203;
      case 8u:
        v68 = 0;
        v69 = 0;
        v70 = 0;
        while (2)
        {
          v71 = *v3;
          v72 = *(_QWORD *)(a2 + v71);
          v73 = v72 + 1;
          if (v72 == -1 || v73 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
            *(_QWORD *)(a2 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              v15 = v69++ >= 9;
              if (v15)
              {
                v75 = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v75 = 0;
        else
          v75 = v70;
LABEL_163:
        objc_msgSend(a1, "setTotalEngagements:", v75);
        goto LABEL_203;
      case 9u:
        v76 = 0;
        v77 = 0;
        v78 = 0;
        while (2)
        {
          v79 = *v3;
          v80 = *(_QWORD *)(a2 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v80);
            *(_QWORD *)(a2 + v79) = v81;
            v78 |= (unint64_t)(v82 & 0x7F) << v76;
            if (v82 < 0)
            {
              v76 += 7;
              v15 = v77++ >= 9;
              if (v15)
              {
                v78 = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v78 = 0;
LABEL_167:
        objc_msgSend(a1, "setIsDiagnosticsAndUsageEnabled:", v78 != 0);
        goto LABEL_203;
      case 0xAu:
        v83 = 0;
        v84 = 0;
        v85 = 0;
        while (2)
        {
          v86 = *v3;
          v87 = *(_QWORD *)(a2 + v86);
          v88 = v87 + 1;
          if (v87 == -1 || v88 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
            *(_QWORD *)(a2 + v86) = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if (v89 < 0)
            {
              v83 += 7;
              v15 = v84++ >= 9;
              if (v15)
              {
                v90 = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v90 = 0;
        else
          v90 = v85;
LABEL_172:
        objc_msgSend(a1, "setInvokedDays:", v90);
        goto LABEL_203;
      case 0xBu:
        v91 = 0;
        v92 = 0;
        v93 = 0;
        while (2)
        {
          v94 = *v3;
          v95 = *(_QWORD *)(a2 + v94);
          v96 = v95 + 1;
          if (v95 == -1 || v96 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
            *(_QWORD *)(a2 + v94) = v96;
            v93 |= (unint64_t)(v97 & 0x7F) << v91;
            if (v97 < 0)
            {
              v91 += 7;
              v15 = v92++ >= 9;
              if (v15)
              {
                v98 = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v98 = 0;
        else
          v98 = v93;
LABEL_177:
        objc_msgSend(a1, "setZkwEngagedDays:", v98);
        goto LABEL_203;
      case 0xCu:
        v99 = 0;
        v100 = 0;
        v101 = 0;
        while (2)
        {
          v102 = *v3;
          v103 = *(_QWORD *)(a2 + v102);
          v104 = v103 + 1;
          if (v103 == -1 || v104 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
            *(_QWORD *)(a2 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              v15 = v100++ >= 9;
              if (v15)
              {
                v106 = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v106 = 0;
        else
          v106 = v101;
LABEL_182:
        objc_msgSend(a1, "setSearchedDays:", v106);
        goto LABEL_203;
      case 0xDu:
        v107 = 0;
        v108 = 0;
        v109 = 0;
        while (2)
        {
          v110 = *v3;
          v111 = *(_QWORD *)(a2 + v110);
          v112 = v111 + 1;
          if (v111 == -1 || v112 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v111);
            *(_QWORD *)(a2 + v110) = v112;
            v109 |= (unint64_t)(v113 & 0x7F) << v107;
            if (v113 < 0)
            {
              v107 += 7;
              v15 = v108++ >= 9;
              if (v15)
              {
                v114 = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v114 = 0;
        else
          v114 = v109;
LABEL_187:
        objc_msgSend(a1, "setSuggestionOrAppleResultEngagedDays:", v114);
        goto LABEL_203;
      case 0xEu:
        v115 = 0;
        v116 = 0;
        v117 = 0;
        while (2)
        {
          v118 = *v3;
          v119 = *(_QWORD *)(a2 + v118);
          v120 = v119 + 1;
          if (v119 == -1 || v120 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v120;
            v117 |= (unint64_t)(v121 & 0x7F) << v115;
            if (v121 < 0)
            {
              v115 += 7;
              v15 = v116++ >= 9;
              if (v15)
              {
                v122 = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v122 = 0;
        else
          v122 = v117;
LABEL_192:
        objc_msgSend(a1, "setWebEngagedDays:", v122);
        goto LABEL_203;
      case 0xFu:
        v123 = 0;
        v124 = 0;
        v125 = 0;
        while (2)
        {
          v126 = *v3;
          v127 = *(_QWORD *)(a2 + v126);
          v128 = v127 + 1;
          if (v127 == -1 || v128 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v127);
            *(_QWORD *)(a2 + v126) = v128;
            v125 |= (unint64_t)(v129 & 0x7F) << v123;
            if (v129 < 0)
            {
              v123 += 7;
              v15 = v124++ >= 9;
              if (v15)
              {
                v130 = 0;
                goto LABEL_197;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v130 = 0;
        else
          v130 = v125;
LABEL_197:
        objc_msgSend(a1, "setVoiceSearchDays:", v130);
        goto LABEL_203;
      case 0x10u:
        v131 = 0;
        v132 = 0;
        v133 = 0;
        while (2)
        {
          v134 = *v3;
          v135 = *(_QWORD *)(a2 + v134);
          v136 = v135 + 1;
          if (v135 == -1 || v136 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v137 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v135);
            *(_QWORD *)(a2 + v134) = v136;
            v133 |= (unint64_t)(v137 & 0x7F) << v131;
            if (v137 < 0)
            {
              v131 += 7;
              v15 = v132++ >= 9;
              if (v15)
              {
                v138 = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v138 = 0;
        else
          v138 = v133;
LABEL_202:
        objc_msgSend(a1, "setNumSearchEngagements:", v138);
        goto LABEL_203;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_203;
    }
  }
}

BOOL _CPDeviceContextReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  void *v18;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setCountry:", v18);
          goto LABEL_25;
        case 2u:
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setDeviceModel:", v18);
          goto LABEL_25;
        case 3u:
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setLocale:", v18);
          goto LABEL_25;
        case 4u:
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setOsVersion:", v18);
LABEL_25:

          goto LABEL_26;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_26:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPUsageEnvelopeReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  _CPUsageSinceLookback *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = objc_alloc_init(_CPUsageSinceLookback);
        if (!PBReaderPlaceMark() || (_CPUsageSinceLookbackReadFrom(v18, a2) & 1) == 0)
          goto LABEL_92;
        PBReaderRecallMark();
        objc_msgSend(a1, "setUsageSinceLookback:", v18, 0, 0);
        goto LABEL_68;
      case 2u:
        v18 = objc_alloc_init(_CPSafariUsagePropensity);
        if (!PBReaderPlaceMark() || (_CPSafariUsagePropensityReadFrom(v18, a2, v19) & 1) == 0)
          goto LABEL_92;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSafariUsagePropensity:", v18, 0, 0);
        goto LABEL_68;
      case 3u:
        v18 = objc_alloc_init(_CPSpotlightUsagePropensity);
        if (!PBReaderPlaceMark() || (_CPSpotlightUsagePropensityReadFrom(v18, a2, v20) & 1) == 0)
          goto LABEL_92;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpotlightUsagePropensity:", v18, 0, 0);
        goto LABEL_68;
      case 4u:
        v18 = objc_alloc_init(_CPImagesUsagePropensity);
        if (!PBReaderPlaceMark() || (_CPImagesUsagePropensityReadFrom(v18, a2, v21) & 1) == 0)
          goto LABEL_92;
        PBReaderRecallMark();
        objc_msgSend(a1, "setImagesUsagePropensity:", v18, 0, 0);
        goto LABEL_68;
      case 5u:
        v18 = objc_alloc_init(_CPNewsUsagePropensity);
        if (!PBReaderPlaceMark() || (_CPNewsUsagePropensityReadFrom(v18, a2, v22) & 1) == 0)
          goto LABEL_92;
        PBReaderRecallMark();
        objc_msgSend(a1, "setNewsUsagePropensity:", v18, 0, 0);
        goto LABEL_68;
      case 0xAu:
        v24 = 0;
        v25 = 0;
        v26 = 0;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          v29 = v28 + 1;
          if (v28 == -1 || v29 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v29;
            v26 |= (unint64_t)(v30 & 0x7F) << v24;
            if (v30 < 0)
            {
              v24 += 7;
              v15 = v25++ >= 9;
              if (v15)
              {
                v31 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
        else
          v31 = v26;
LABEL_75:
        objc_msgSend(a1, "setCollectionStartTimestamp:", v31);
        goto LABEL_69;
      case 0xBu:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v37;
            v34 |= (unint64_t)(v38 & 0x7F) << v32;
            if (v38 < 0)
            {
              v32 += 7;
              v15 = v33++ >= 9;
              if (v15)
              {
                v39 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v39 = 0;
        else
          v39 = v34;
LABEL_80:
        objc_msgSend(a1, "setCollectionEndTimestamp:", v39);
        goto LABEL_69;
      case 0xCu:
        v40 = 0;
        v41 = 0;
        v42 = 0;
        while (2)
        {
          v43 = *v3;
          v44 = *(_QWORD *)(a2 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v15 = v41++ >= 9;
              if (v15)
              {
                v47 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v47 = 0;
        else
          v47 = v42;
LABEL_85:
        objc_msgSend(a1, "setConfiguredLookbackTimeInDays:", v47);
        goto LABEL_69;
      case 0xDu:
        v48 = 0;
        v49 = 0;
        v50 = 0;
        while (2)
        {
          v51 = *v3;
          v52 = *(_QWORD *)(a2 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
            *(_QWORD *)(a2 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v15 = v49++ >= 9;
              if (v15)
              {
                v55 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v55 = 0;
        else
          v55 = v50;
LABEL_90:
        objc_msgSend(a1, "setTotalSessions:", v55);
        goto LABEL_69;
      case 0xEu:
        v18 = objc_alloc_init(_CPDeviceContext);
        if (PBReaderPlaceMark() && _CPDeviceContextReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setContext:", v18, 0, 0);
LABEL_68:

LABEL_69:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_92:

        return 0;
      case 0xFu:
        PBReaderReadData();
        v18 = (_CPUsageSinceLookback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setUuidBytes:", v18);
        goto LABEL_68;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_69;
    }
  }
}

uint64_t _CPSafariUsagePropensityReadFrom(void *a1, uint64_t a2, double a3)
{
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _CPEngagementTriggerRatio *v63;
  double v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  double v73;

  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v8 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    while (1)
    {
      v12 = *v4;
      v13 = *(_QWORD *)(a2 + v12);
      v14 = v13 + 1;
      if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v5))
        break;
      v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
      *(_QWORD *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0)
        goto LABEL_12;
      v9 += 7;
      v16 = v10++ >= 9;
      if (v16)
      {
        v11 = 0;
        v17 = *v6;
        v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v17 = *v6;
    v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(_BYTE *)(a2 + v17))
      v11 = 0;
LABEL_14:
    if (v18 || (v11 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v11 >> 3))
    {
      case 1u:
        v20 = *v4;
        v21 = *(_QWORD *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setLocalGoto:", a3);
        goto LABEL_137;
      case 2u:
        v23 = *v4;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setLocalTap:", a3);
        goto LABEL_137;
      case 3u:
        v25 = *v4;
        v26 = *(_QWORD *)(a2 + v25);
        if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v26);
          *(_QWORD *)(a2 + v25) = v26 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecGoto:", a3);
        goto LABEL_137;
      case 4u:
        v27 = *v4;
        v28 = *(_QWORD *)(a2 + v27);
        if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecTap:", a3);
        goto LABEL_137;
      case 5u:
        v29 = *v4;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v30);
          *(_QWORD *)(a2 + v29) = v30 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setThirdPartyGoto:", a3);
        goto LABEL_137;
      case 6u:
        v31 = *v4;
        v32 = *(_QWORD *)(a2 + v31);
        if (v32 <= 0xFFFFFFFFFFFFFFFBLL && v32 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v32);
          *(_QWORD *)(a2 + v31) = v32 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setThirdPartyTap:", a3);
        goto LABEL_137;
      case 7u:
        v33 = *v4;
        v34 = *(_QWORD *)(a2 + v33);
        if (v34 <= 0xFFFFFFFFFFFFFFFBLL && v34 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v34);
          *(_QWORD *)(a2 + v33) = v34 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setThirdPartyCompletionOrRecentSearch:", a3);
        goto LABEL_137;
      case 8u:
        v35 = *v4;
        v36 = *(_QWORD *)(a2 + v35);
        if (v36 <= 0xFFFFFFFFFFFFFFFBLL && v36 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v36);
          *(_QWORD *)(a2 + v35) = v36 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setGoToSite:", a3);
        goto LABEL_137;
      case 9u:
        v37 = *v4;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFFBLL && v38 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v38);
          *(_QWORD *)(a2 + v37) = v38 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setOther:", a3);
        goto LABEL_137;
      case 0xAu:
        v39 = 0;
        v40 = 0;
        v41 = 0;
        while (2)
        {
          v42 = *v4;
          v43 = *(_QWORD *)(a2 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v43);
            *(_QWORD *)(a2 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v16 = v40++ >= 9;
              if (v16)
              {
                v46 = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v46 = 0;
        else
          v46 = v41;
LABEL_97:
        objc_msgSend(a1, "setTotalEngagements:", v46);
        goto LABEL_137;
      case 0xBu:
        v47 = *v4;
        v48 = *(_QWORD *)(a2 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFFBLL && v48 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v48);
          *(_QWORD *)(a2 + v47) = v48 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecWeb:", a3);
        goto LABEL_137;
      case 0xCu:
        v49 = *v4;
        v50 = *(_QWORD *)(a2 + v49);
        if (v50 <= 0xFFFFFFFFFFFFFFFBLL && v50 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v50);
          *(_QWORD *)(a2 + v49) = v50 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecAppStore:", a3);
        goto LABEL_137;
      case 0xDu:
        v51 = *v4;
        v52 = *(_QWORD *)(a2 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFFBLL && v52 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v52);
          *(_QWORD *)(a2 + v51) = v52 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecMaps:", a3);
        goto LABEL_137;
      case 0xEu:
        v53 = *v4;
        v54 = *(_QWORD *)(a2 + v53);
        if (v54 <= 0xFFFFFFFFFFFFFFFBLL && v54 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v54);
          *(_QWORD *)(a2 + v53) = v54 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecWiki:", a3);
        goto LABEL_137;
      case 0xFu:
        v55 = *v4;
        v56 = *(_QWORD *)(a2 + v55);
        if (v56 <= 0xFFFFFFFFFFFFFFFBLL && v56 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v56);
          *(_QWORD *)(a2 + v55) = v56 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecNews:", a3);
        goto LABEL_137;
      case 0x10u:
        v57 = *v4;
        v58 = *(_QWORD *)(a2 + v57);
        if (v58 <= 0xFFFFFFFFFFFFFFFBLL && v58 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v58);
          *(_QWORD *)(a2 + v57) = v58 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecStocks:", a3);
        goto LABEL_137;
      case 0x11u:
        v59 = *v4;
        v60 = *(_QWORD *)(a2 + v59);
        if (v60 <= 0xFFFFFFFFFFFFFFFBLL && v60 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v60);
          *(_QWORD *)(a2 + v59) = v60 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecWeather:", a3);
        goto LABEL_137;
      case 0x12u:
        v61 = *v4;
        v62 = *(_QWORD *)(a2 + v61);
        if (v62 <= 0xFFFFFFFFFFFFFFFBLL && v62 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v62);
          *(_QWORD *)(a2 + v61) = v62 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecOther:", a3);
        goto LABEL_137;
      case 0x13u:
        v63 = objc_alloc_init(_CPEngagementTriggerRatio);
        if (!PBReaderPlaceMark() || (_CPEngagementTriggerRatioReadFrom(v63, a2, v64) & 1) == 0)
          goto LABEL_139;
        PBReaderRecallMark();
        objc_msgSend(a1, "setTopHitTriggerRatio:", v63, 0, 0);
        goto LABEL_92;
      case 0x14u:
        v65 = 0;
        v66 = 0;
        v67 = 0;
        while (2)
        {
          v68 = *v4;
          v69 = *(_QWORD *)(a2 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v69);
            *(_QWORD *)(a2 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              v16 = v66++ >= 9;
              if (v16)
              {
                v72 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v72 = 0;
        else
          v72 = v67;
LABEL_102:
        objc_msgSend(a1, "setTotalTopHitEngagements:", v72);
        goto LABEL_137;
      case 0x15u:
        v63 = objc_alloc_init(_CPEngagementShareRatio);
        if (PBReaderPlaceMark() && (_CPEngagementShareRatioReadFrom(v63, a2, v73) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEngagementShareRatio:", v63, 0, 0);
LABEL_92:

LABEL_137:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_139:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_137;
    }
  }
}

uint64_t _CPSpotlightUsagePropensityReadFrom(void *a1, uint64_t a2, double a3)
{
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _CPEngagementTriggerRatio *v47;
  double v48;
  double v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  double v76;

  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v8 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    while (1)
    {
      v12 = *v4;
      v13 = *(_QWORD *)(a2 + v12);
      v14 = v13 + 1;
      if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v5))
        break;
      v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
      *(_QWORD *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0)
        goto LABEL_12;
      v9 += 7;
      v16 = v10++ >= 9;
      if (v16)
      {
        v11 = 0;
        v17 = *v6;
        v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v17 = *v6;
    v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(_BYTE *)(a2 + v17))
      v11 = 0;
LABEL_14:
    if (v18 || (v11 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v11 >> 3))
    {
      case 1u:
        v20 = *v4;
        v21 = *(_QWORD *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setAppLaunch:", a3);
        goto LABEL_145;
      case 2u:
        v23 = *v4;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setOnDeviceAddressBookData:", a3);
        goto LABEL_145;
      case 3u:
        v25 = *v4;
        v26 = *(_QWORD *)(a2 + v25);
        if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v26);
          *(_QWORD *)(a2 + v25) = v26 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setOnDeviceOtherPersonalData:", a3);
        goto LABEL_145;
      case 4u:
        v27 = *v4;
        v28 = *(_QWORD *)(a2 + v27);
        if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setPunchout:", a3);
        goto LABEL_145;
      case 5u:
        v29 = *v4;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v30);
          *(_QWORD *)(a2 + v29) = v30 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setThirdPartyInAppContent:", a3);
        goto LABEL_145;
      case 6u:
        v31 = *v4;
        v32 = *(_QWORD *)(a2 + v31);
        if (v32 <= 0xFFFFFFFFFFFFFFFBLL && v32 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v32);
          *(_QWORD *)(a2 + v31) = v32 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsec:", a3);
        goto LABEL_145;
      case 7u:
        v33 = *v4;
        v34 = *(_QWORD *)(a2 + v33);
        if (v34 <= 0xFFFFFFFFFFFFFFFBLL && v34 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v34);
          *(_QWORD *)(a2 + v33) = v34 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setQuerySuggestion:", a3);
        goto LABEL_145;
      case 8u:
        v35 = *v4;
        v36 = *(_QWORD *)(a2 + v35);
        if (v36 <= 0xFFFFFFFFFFFFFFFBLL && v36 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v36);
          *(_QWORD *)(a2 + v35) = v36 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setOther:", a3);
        goto LABEL_145;
      case 9u:
        v37 = 0;
        v38 = 0;
        v39 = 0;
        while (2)
        {
          v40 = *v4;
          v41 = *(_QWORD *)(a2 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v41);
            *(_QWORD *)(a2 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              v16 = v38++ >= 9;
              if (v16)
              {
                v44 = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v44 = 0;
        else
          v44 = v39;
LABEL_103:
        objc_msgSend(a1, "setTotalEngagements:", v44);
        goto LABEL_145;
      case 0xAu:
        v45 = *v4;
        v46 = *(_QWORD *)(a2 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFFBLL && v46 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v46);
          *(_QWORD *)(a2 + v45) = v46 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setSiriSuggestions:", a3);
        goto LABEL_145;
      case 0xBu:
        v47 = objc_alloc_init(_CPEngagementTriggerRatio);
        if (!PBReaderPlaceMark() || (_CPEngagementTriggerRatioReadFrom(v47, a2, v48) & 1) == 0)
          goto LABEL_147;
        PBReaderRecallMark();
        objc_msgSend(a1, "setTopHitTriggerRatio:", v47, 0, 0);
        goto LABEL_98;
      case 0xCu:
        v47 = objc_alloc_init(_CPEngagementTriggerRatio);
        if (!PBReaderPlaceMark() || (_CPEngagementTriggerRatioReadFrom(v47, a2, v49) & 1) == 0)
          goto LABEL_147;
        PBReaderRecallMark();
        objc_msgSend(a1, "setQuerySuggestionTriggerRatio:", v47, 0, 0);
        goto LABEL_98;
      case 0xDu:
        v50 = 0;
        v51 = 0;
        v52 = 0;
        while (2)
        {
          v53 = *v4;
          v54 = *(_QWORD *)(a2 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v54);
            *(_QWORD *)(a2 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v16 = v51++ >= 9;
              if (v16)
              {
                v57 = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v57 = 0;
        else
          v57 = v52;
LABEL_108:
        objc_msgSend(a1, "setTotalTopHitEngagements:", v57);
        goto LABEL_145;
      case 0xEu:
        v58 = *v4;
        v59 = *(_QWORD *)(a2 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFFBLL && v59 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v59);
          *(_QWORD *)(a2 + v58) = v59 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecWeb:", a3);
        goto LABEL_145;
      case 0xFu:
        v60 = *v4;
        v61 = *(_QWORD *)(a2 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFFBLL && v61 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v61);
          *(_QWORD *)(a2 + v60) = v61 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecAppStore:", a3);
        goto LABEL_145;
      case 0x10u:
        v62 = *v4;
        v63 = *(_QWORD *)(a2 + v62);
        if (v63 <= 0xFFFFFFFFFFFFFFFBLL && v63 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v63);
          *(_QWORD *)(a2 + v62) = v63 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecMaps:", a3);
        goto LABEL_145;
      case 0x11u:
        v64 = *v4;
        v65 = *(_QWORD *)(a2 + v64);
        if (v65 <= 0xFFFFFFFFFFFFFFFBLL && v65 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v65);
          *(_QWORD *)(a2 + v64) = v65 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecWiki:", a3);
        goto LABEL_145;
      case 0x12u:
        v66 = *v4;
        v67 = *(_QWORD *)(a2 + v66);
        if (v67 <= 0xFFFFFFFFFFFFFFFBLL && v67 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v67);
          *(_QWORD *)(a2 + v66) = v67 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecNews:", a3);
        goto LABEL_145;
      case 0x13u:
        v68 = *v4;
        v69 = *(_QWORD *)(a2 + v68);
        if (v69 <= 0xFFFFFFFFFFFFFFFBLL && v69 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v69);
          *(_QWORD *)(a2 + v68) = v69 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecStocks:", a3);
        goto LABEL_145;
      case 0x14u:
        v70 = *v4;
        v71 = *(_QWORD *)(a2 + v70);
        if (v71 <= 0xFFFFFFFFFFFFFFFBLL && v71 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v71);
          *(_QWORD *)(a2 + v70) = v71 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecWeather:", a3);
        goto LABEL_145;
      case 0x15u:
        v72 = *v4;
        v73 = *(_QWORD *)(a2 + v72);
        if (v73 <= 0xFFFFFFFFFFFFFFFBLL && v73 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v73);
          *(_QWORD *)(a2 + v72) = v73 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setParsecOther:", a3);
        goto LABEL_145;
      case 0x16u:
        v74 = *v4;
        v75 = *(_QWORD *)(a2 + v74);
        if (v75 <= 0xFFFFFFFFFFFFFFFBLL && v75 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v75);
          *(_QWORD *)(a2 + v74) = v75 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setWebSuggestions:", a3);
        goto LABEL_145;
      case 0x17u:
        v47 = objc_alloc_init(_CPEngagementShareRatio);
        if (PBReaderPlaceMark() && (_CPEngagementShareRatioReadFrom(v47, a2, v76) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEngagementShareRatio:", v47, 0, 0);
LABEL_98:

LABEL_145:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_147:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_145;
    }
  }
}

uint64_t _CPImagesUsagePropensityReadFrom(void *a1, uint64_t a2, double a3)
{
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v8 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)(a2 + v12);
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        v16 = v10++ >= 9;
        if (v16)
        {
          v11 = 0;
          v17 = *v6;
          v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *v6;
      v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(_BYTE *)(a2 + v17))
        v11 = 0;
LABEL_14:
      if (v18 || (v11 & 7) == 4)
        break;
      switch((v11 >> 3))
      {
        case 1u:
          v20 = *v4;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setZkw:", a3);
          continue;
        case 2u:
          v23 = *v4;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v24);
            *(_QWORD *)(a2 + v23) = v24 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setRecentResult:", a3);
          continue;
        case 3u:
          v25 = *v4;
          v26 = *(_QWORD *)(a2 + v25);
          if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setOther:", a3);
          continue;
        case 4u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          break;
        case 5u:
          v35 = *v4;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 <= 0xFFFFFFFFFFFFFFFBLL && v36 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setQuerySuggestion:", a3);
          continue;
        case 6u:
          v37 = *v4;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 <= 0xFFFFFFFFFFFFFFFBLL && v38 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setImage:", a3);
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v30 = *v4;
        v31 = *(_QWORD *)(a2 + v30);
        v32 = v31 + 1;
        if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v5))
          break;
        v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v31);
        *(_QWORD *)(a2 + v30) = v32;
        v29 |= (unint64_t)(v33 & 0x7F) << v27;
        if ((v33 & 0x80) == 0)
          goto LABEL_44;
        v27 += 7;
        v16 = v28++ >= 9;
        if (v16)
        {
          v34 = 0;
          goto LABEL_47;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_44:
      v34 = *(_BYTE *)(a2 + *v6) ? 0 : v29;
LABEL_47:
      objc_msgSend(a1, "setTotalEngagements:", v34);
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPNewsUsagePropensityReadFrom(void *a1, uint64_t a2, double a3)
{
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t result;

  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v8 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)(a2 + v12);
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        v16 = v10++ >= 9;
        if (v16)
        {
          v11 = 0;
          v17 = *v6;
          v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *v6;
      v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(_BYTE *)(a2 + v17))
        v11 = 0;
LABEL_14:
      if (v18 || (v11 & 7) == 4)
        break;
      if ((v11 >> 3) == 1)
      {
        v28 = *v4;
        v29 = *(_QWORD *)(a2 + v28);
        if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setOther:", a3);
      }
      else if ((v11 >> 3) == 2)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
        while (1)
        {
          v23 = *v4;
          v24 = *(_QWORD *)(a2 + v23);
          v25 = v24 + 1;
          if (v24 == -1 || v25 > *(_QWORD *)(a2 + *v5))
            break;
          v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v24);
          *(_QWORD *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0)
            goto LABEL_33;
          v20 += 7;
          v16 = v21++ >= 9;
          if (v16)
          {
            v27 = 0;
            goto LABEL_36;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_33:
        v27 = *(_BYTE *)(a2 + *v6) ? 0 : v22;
LABEL_36:
        objc_msgSend(a1, "setTotalEngagements:", v27);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPEngagementTriggerRatioReadFrom(void *a1, uint64_t a2, double a3)
{
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  unint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t result;

  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v8 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)(a2 + v12);
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        v16 = v10++ >= 9;
        if (v16)
        {
          v11 = 0;
          v17 = *v6;
          v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *v6;
      v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(_BYTE *)(a2 + v17))
        v11 = 0;
LABEL_14:
      if (v18 || (v11 & 7) == 4)
        break;
      v20 = v11 >> 3;
      if ((v11 >> 3) == 1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v30);
          *(_QWORD *)(a2 + v29) = v30 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setGo:", a3);
      }
      else if ((_DWORD)v20 == 2)
      {
        v31 = *v4;
        v32 = *(_QWORD *)(a2 + v31);
        if (v32 <= 0xFFFFFFFFFFFFFFFBLL && v32 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v32);
          *(_QWORD *)(a2 + v31) = v32 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setTap:", a3);
      }
      else if ((_DWORD)v20 == 3)
      {
        v21 = 0;
        v22 = 0;
        v23 = 0;
        while (1)
        {
          v24 = *v4;
          v25 = *(_QWORD *)(a2 + v24);
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v5))
            break;
          v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v25);
          *(_QWORD *)(a2 + v24) = v26;
          v23 |= (unint64_t)(v27 & 0x7F) << v21;
          if ((v27 & 0x80) == 0)
            goto LABEL_37;
          v21 += 7;
          v16 = v22++ >= 9;
          if (v16)
          {
            v28 = 0;
            goto LABEL_40;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_37:
        v28 = *(_BYTE *)(a2 + *v6) ? 0 : v23;
LABEL_40:
        objc_msgSend(a1, "setTotalEngagements:", v28);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPEngagementShareRatioReadFrom(void *a1, uint64_t a2, double a3)
{
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v17;
  int v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;

  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v8 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)(a2 + v12);
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        if (v10++ >= 9)
        {
          v11 = 0;
          v17 = *v6;
          v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *v6;
      v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(_BYTE *)(a2 + v17))
        v11 = 0;
LABEL_14:
      if (v18 || (v11 & 7) == 4)
        break;
      if ((v11 >> 3) == 2)
      {
        v22 = *v4;
        v23 = *(_QWORD *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setShareOfInternetEngagements:", a3);
      }
      else if ((v11 >> 3) == 1)
      {
        v20 = *v4;
        v21 = *(_QWORD *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setShareOfEngagements:", a3);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPExperimentInfoReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  void *v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setNamespaceId:", v18);
          goto LABEL_24;
        case 2u:
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setExperimentId:", v18);
          goto LABEL_24;
        case 3u:
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setTreatmentId:", v18);
LABEL_24:

          continue;
        case 4u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if (v26 < 0)
              {
                v20 += 7;
                v15 = v21++ >= 9;
                if (v15)
                {
                  v27 = 0;
                  goto LABEL_43;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v27 = 0;
          else
            v27 = v22;
LABEL_43:
          objc_msgSend(a1, "setDeploymentId:", v27);
          continue;
        case 5u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v31 = *v3;
        v32 = *(_QWORD *)(a2 + v31);
        v33 = v32 + 1;
        if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          break;
        v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
        *(_QWORD *)(a2 + v31) = v33;
        v30 |= (unint64_t)(v34 & 0x7F) << v28;
        if ((v34 & 0x80) == 0)
          goto LABEL_45;
        v28 += 7;
        v15 = v29++ >= 9;
        if (v15)
        {
          v35 = 0;
          goto LABEL_48;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
      v35 = *(_BYTE *)(a2 + *v5) ? 0 : v30;
LABEL_48:
      objc_msgSend(a1, "setVersion:", v35);
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_29;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_32;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_29:
        v25 = *(_BYTE *)(a2 + *v6) ? 0 : v20;
LABEL_32:
        objc_msgSend(a1, "setTimestamp:", v25);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPSearchViewDisappearFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        while (1)
        {
          v29 = *v4;
          v30 = *(_QWORD *)(a2 + v29);
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v5))
            break;
          v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
          *(_QWORD *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0)
            goto LABEL_42;
          v26 += 7;
          v15 = v27++ >= 9;
          if (v15)
          {
            v33 = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_42:
        v33 = *(_BYTE *)(a2 + *v6) ? 0 : v28;
LABEL_45:
        objc_msgSend(a1, "setTimestamp:", v33);
      }
      else if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_37;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_40;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_37:
        v25 = *(_BYTE *)(a2 + *v6) ? 0 : v20;
LABEL_40:
        objc_msgSend(a1, "setViewDisappearEvent:", v25);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPResultFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  _CPSearchResultForFeedback *v26;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v26 = objc_alloc_init(_CPSearchResultForFeedback);
        if (!PBReaderPlaceMark() || (_CPSearchResultForFeedbackReadFrom(v26, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setResult:", v26, 0, 0);

      }
      else if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_33;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_36;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_36:
        objc_msgSend(a1, "setTimestamp:", v25);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPResultEngagementFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  _CPSearchResultForFeedback *v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_69;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_72;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_69:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_72:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_96;
      case 2u:
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (2)
        {
          v30 = *v4;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
            *(_QWORD *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              v15 = v28++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v29 = 0;
LABEL_76:
        objc_msgSend(a1, "setActionEngaged:", v29 != 0);
        goto LABEL_96;
      case 3u:
        v34 = 0;
        v35 = 0;
        v36 = 0;
        while (2)
        {
          v37 = *v4;
          v38 = *(_QWORD *)(a2 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              v15 = v35++ >= 9;
              if (v15)
              {
                v41 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v41 = 0;
        else
          v41 = v36;
LABEL_81:
        objc_msgSend(a1, "setTriggerEvent:", v41);
        goto LABEL_96;
      case 4u:
        v42 = 0;
        v43 = 0;
        v44 = 0;
        while (2)
        {
          v45 = *v4;
          v46 = *(_QWORD *)(a2 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
            *(_QWORD *)(a2 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v15 = v43++ >= 9;
              if (v15)
              {
                v49 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v49 = 0;
        else
          v49 = v44;
LABEL_86:
        objc_msgSend(a1, "setDestination:", v49);
        goto LABEL_96;
      case 5u:
        v50 = 0;
        v51 = 0;
        v52 = 0;
        while (2)
        {
          v53 = *v4;
          v54 = *(_QWORD *)(a2 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
            *(_QWORD *)(a2 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v15 = v51++ >= 9;
              if (v15)
              {
                v57 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v57 = 0;
        else
          v57 = v52;
LABEL_91:
        objc_msgSend(a1, "setActionTarget:", v57);
        goto LABEL_96;
      case 6u:
        v58 = objc_alloc_init(_CPSearchResultForFeedback);
        if (PBReaderPlaceMark() && (_CPSearchResultForFeedbackReadFrom(v58, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setResult:", v58, 0, 0);
LABEL_60:

LABEL_96:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }

        return 0;
      case 7u:
        PBReaderReadString();
        v58 = (_CPSearchResultForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setTitleText:", v58);
        goto LABEL_60;
      case 8u:
        v59 = 0;
        v60 = 0;
        v61 = 0;
        while (2)
        {
          v62 = *v4;
          v63 = *(_QWORD *)(a2 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              v15 = v60++ >= 9;
              if (v15)
              {
                v61 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v61 = 0;
LABEL_95:
        objc_msgSend(a1, "setMatchesUnengagedSuggestion:", v61 != 0);
        goto LABEL_96;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_96;
    }
  }
}

uint64_t _CPMapsCardSectionEngagementFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPPunchoutForFeedback *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_56;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_59;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_56:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_59:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_75;
      case 2u:
        v27 = objc_alloc_init(_CPPunchoutForFeedback);
        if (PBReaderPlaceMark() && (_CPPunchoutForFeedbackReadFrom(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDestination:", v27, 0, 0);
LABEL_54:

LABEL_75:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }

        return 0;
      case 3u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v4;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v35 = 0;
        else
          v35 = v30;
LABEL_64:
        objc_msgSend(a1, "setTriggerEvent:", v35);
        goto LABEL_75;
      case 4u:
        v36 = 0;
        v37 = 0;
        v38 = 0;
        while (2)
        {
          v39 = *v4;
          v40 = *(_QWORD *)(a2 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v15 = v37++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v43 = 0;
        else
          v43 = v38;
LABEL_69:
        objc_msgSend(a1, "setActionCardType:", v43);
        goto LABEL_75;
      case 5u:
        v44 = 0;
        v45 = 0;
        v46 = 0;
        while (2)
        {
          v47 = *v4;
          v48 = *(_QWORD *)(a2 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v15 = v45++ >= 9;
              if (v15)
              {
                v51 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v51 = 0;
        else
          v51 = v46;
LABEL_74:
        objc_msgSend(a1, "setFeedbackType:", v51);
        goto LABEL_75;
      case 6u:
        PBReaderReadString();
        v27 = (_CPPunchoutForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCardSectionId:", v27);
        goto LABEL_54;
      case 7u:
        PBReaderReadString();
        v27 = (_CPPunchoutForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setResultId:", v27);
        goto LABEL_54;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_75;
    }
  }
}

uint64_t _CPStoreCardSectionEngagementFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPPunchoutForFeedback *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_59;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_62;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_59:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_62:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_78;
      case 2u:
        v27 = objc_alloc_init(_CPPunchoutForFeedback);
        if (!PBReaderPlaceMark() || (_CPPunchoutForFeedbackReadFrom(v27, a2) & 1) == 0)
          goto LABEL_80;
        PBReaderRecallMark();
        objc_msgSend(a1, "setDestination:", v27, 0, 0);
        goto LABEL_57;
      case 3u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v4;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v35 = 0;
        else
          v35 = v30;
LABEL_67:
        objc_msgSend(a1, "setTriggerEvent:", v35);
        goto LABEL_78;
      case 4u:
        v36 = 0;
        v37 = 0;
        v38 = 0;
        while (2)
        {
          v39 = *v4;
          v40 = *(_QWORD *)(a2 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v15 = v37++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v43 = 0;
        else
          v43 = v38;
LABEL_72:
        objc_msgSend(a1, "setActionCardType:", v43);
        goto LABEL_78;
      case 5u:
        v27 = objc_alloc_init(_CPCardSectionForFeedback);
        if (PBReaderPlaceMark() && (_CPCardSectionForFeedbackReadFrom(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCardSection:", v27, 0, 0);
LABEL_57:

LABEL_78:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_80:

        return 0;
      case 6u:
        v44 = 0;
        v45 = 0;
        v46 = 0;
        while (2)
        {
          v47 = *v4;
          v48 = *(_QWORD *)(a2 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v15 = v45++ >= 9;
              if (v15)
              {
                v51 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v51 = 0;
        else
          v51 = v46;
LABEL_77:
        objc_msgSend(a1, "setProductPageResult:", v51);
        goto LABEL_78;
      case 7u:
        PBReaderReadString();
        v27 = (_CPPunchoutForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCardSectionId:", v27);
        goto LABEL_57;
      case 8u:
        PBReaderReadString();
        v27 = (_CPPunchoutForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setResultId:", v27);
        goto LABEL_57;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_78;
    }
  }
}

uint64_t _CPStartSearchFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_53;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_56;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_53:
          if (*(_BYTE *)(a2 + *v6))
            v25 = 0;
          else
            v25 = v20;
LABEL_56:
          objc_msgSend(a1, "setTimestamp:", v25);
          continue;
        case 2u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setInput:", v27);
          goto LABEL_30;
        case 3u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setUuid:", v27);
LABEL_30:

          continue;
        case 4u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          while (2)
          {
            v31 = *v4;
            v32 = *(_QWORD *)(a2 + v31);
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (v15)
                {
                  v35 = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v35 = 0;
          else
            v35 = v30;
LABEL_61:
          objc_msgSend(a1, "setTriggerEvent:", v35);
          continue;
        case 5u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          while (2)
          {
            v39 = *v4;
            v40 = *(_QWORD *)(a2 + v39);
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v41;
              v38 |= (unint64_t)(v42 & 0x7F) << v36;
              if (v42 < 0)
              {
                v36 += 7;
                v15 = v37++ >= 9;
                if (v15)
                {
                  v43 = 0;
                  goto LABEL_66;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v43 = 0;
          else
            v43 = v38;
LABEL_66:
          objc_msgSend(a1, "setQueryId:", v43);
          continue;
        case 6u:
          v44 = 0;
          v45 = 0;
          v46 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v47 = *v4;
        v48 = *(_QWORD *)(a2 + v47);
        v49 = v48 + 1;
        if (v48 == -1 || v49 > *(_QWORD *)(a2 + *v5))
          break;
        v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
        *(_QWORD *)(a2 + v47) = v49;
        v46 |= (unint64_t)(v50 & 0x7F) << v44;
        if ((v50 & 0x80) == 0)
          goto LABEL_68;
        v44 += 7;
        v15 = v45++ >= 9;
        if (v15)
        {
          v51 = 0;
          goto LABEL_71;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_68:
      v51 = *(_BYTE *)(a2 + *v6) ? 0 : v46;
LABEL_71:
      objc_msgSend(a1, "setSearchType:", v51);
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPEndSearchFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        PBReaderReadString();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setUuid:", v26);

      }
      else if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_34;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_31:
        v25 = *(_BYTE *)(a2 + *v6) ? 0 : v20;
LABEL_34:
        objc_msgSend(a1, "setTimestamp:", v25);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL _CPStartNetworkSearchFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  void *v93;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_105;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_108;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_105:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_108:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_102;
      case 2u:
        PBReaderReadString();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setInput:", v26);
        goto LABEL_101;
      case 3u:
        PBReaderReadString();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setUuid:", v26);
        goto LABEL_101;
      case 4u:
        v48 = 0;
        v49 = 0;
        v50 = 0;
        while (2)
        {
          v51 = *v4;
          v52 = *(_QWORD *)(a2 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
            *(_QWORD *)(a2 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v15 = v49++ >= 9;
              if (v15)
              {
                v55 = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v55 = 0;
        else
          v55 = v50;
LABEL_123:
        objc_msgSend(a1, "setQueryId:", v55);
        goto LABEL_102;
      case 5u:
        PBReaderReadString();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setUrl:", v26);
        goto LABEL_101;
      case 6u:
        PBReaderPlaceMark();
        v27 = 0;
        while (1)
        {
          v28 = *v4;
          v29 = *(_QWORD *)(a2 + v28);
          v30 = v29 + 1;
          if (v29 == -1 || v30 > *(_QWORD *)(a2 + *v5))
            break;
          v31 = *(char *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v30;
          if (v31 < 0)
          {
            v15 = v27++ >= 9;
            if (!v15)
              continue;
          }
          goto LABEL_91;
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_91:
        PBReaderReadString();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v88 = 0;
        while (1)
        {
          v89 = *v4;
          v90 = *(_QWORD *)(a2 + v89);
          v91 = v90 + 1;
          if (v90 == -1 || v91 > *(_QWORD *)(a2 + *v5))
            break;
          v92 = *(char *)(*(_QWORD *)(a2 + *v7) + v90);
          *(_QWORD *)(a2 + v89) = v91;
          if (v92 < 0)
          {
            v15 = v88++ >= 9;
            if (!v15)
              continue;
          }
          goto LABEL_99;
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_99:
        PBReaderReadString();
        v93 = (void *)objc_claimAutoreleasedReturnValue();
        PBReaderRecallMark();
        if (!*(_BYTE *)(a2 + *v6))
        {
          objc_msgSend(a1, "setHeaders:forKey:", v93, v26, 0, 0);

LABEL_101:
LABEL_102:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }

        return 0;
      case 7u:
        v56 = 0;
        v57 = 0;
        v58 = 0;
        while (2)
        {
          v59 = *v4;
          v60 = *(_QWORD *)(a2 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
            *(_QWORD *)(a2 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v15 = v57++ >= 9;
              if (v15)
              {
                v63 = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v63 = 0;
        else
          v63 = v58;
LABEL_128:
        objc_msgSend(a1, "setEndpoint:", v63);
        goto LABEL_102;
      case 8u:
        v64 = 0;
        v65 = 0;
        v66 = 0;
        while (2)
        {
          v67 = *v4;
          v68 = *(_QWORD *)(a2 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              v15 = v65++ >= 9;
              if (v15)
              {
                v71 = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v71 = 0;
        else
          v71 = v66;
LABEL_133:
        objc_msgSend(a1, "setTriggerEvent:", v71);
        goto LABEL_102;
      case 9u:
        v72 = 0;
        v73 = 0;
        v74 = 0;
        while (2)
        {
          v75 = *v4;
          v76 = *(_QWORD *)(a2 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
            *(_QWORD *)(a2 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              v15 = v73++ >= 9;
              if (v15)
              {
                v79 = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v79 = 0;
        else
          v79 = v74;
LABEL_138:
        objc_msgSend(a1, "setLookupSelectionType:", v79);
        goto LABEL_102;
      case 0xBu:
        PBReaderReadData();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setBodyData:", v26);
        goto LABEL_101;
      case 0xCu:
        PBReaderReadString();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setExperimentId:", v26);
        goto LABEL_101;
      case 0xDu:
        PBReaderReadString();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setTreatmentId:", v26);
        goto LABEL_101;
      case 0xEu:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        while (2)
        {
          v35 = *v4;
          v36 = *(_QWORD *)(a2 + v35);
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v37;
            v34 |= (unint64_t)(v38 & 0x7F) << v32;
            if (v38 < 0)
            {
              v32 += 7;
              v15 = v33++ >= 9;
              if (v15)
              {
                v39 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v39 = 0;
        else
          v39 = v34;
LABEL_113:
        objc_msgSend(a1, "setSearchType:", v39);
        goto LABEL_102;
      case 0xFu:
        v40 = 0;
        v41 = 0;
        v42 = 0;
        while (2)
        {
          v43 = *v4;
          v44 = *(_QWORD *)(a2 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v15 = v41++ >= 9;
              if (v15)
              {
                v47 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v47 = 0;
        else
          v47 = v42;
LABEL_118:
        objc_msgSend(a1, "setRawRequestSize:", v47);
        goto LABEL_102;
      case 0x10u:
        v80 = 0;
        v81 = 0;
        v82 = 0;
        while (2)
        {
          v83 = *v4;
          v84 = *(_QWORD *)(a2 + v83);
          v85 = v84 + 1;
          if (v84 == -1 || v85 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v85;
            v82 |= (unint64_t)(v86 & 0x7F) << v80;
            if (v86 < 0)
            {
              v80 += 7;
              v15 = v81++ >= 9;
              if (v15)
              {
                v87 = 0;
                goto LABEL_143;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v87 = 0;
        else
          v87 = v82;
LABEL_143:
        objc_msgSend(a1, "setCompressedRequestSize:", v87);
        goto LABEL_102;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_102;
    }
  }
}

uint64_t _CPEndNetworkSearchFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t result;
  _CPNetworkTimingData *v44;
  uint64_t v45;
  unint64_t v46;
  double v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *v6;
        v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *v6;
    v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(_BYTE *)(a2 + v16))
      v10 = 0;
LABEL_14:
    if (v17 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v4;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v5))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_77;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_80;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_77:
        if (*(_BYTE *)(a2 + *v6))
          v26 = 0;
        else
          v26 = v21;
LABEL_80:
        objc_msgSend(a1, "setTimestamp:", v26);
        goto LABEL_53;
      case 2u:
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (2)
        {
          v30 = *v4;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
            *(_QWORD *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              v15 = v28++ >= 9;
              if (v15)
              {
                v34 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v34 = 0;
        else
          v34 = v29;
LABEL_85:
        objc_msgSend(a1, "setResponseSize:", v34);
        goto LABEL_53;
      case 3u:
        v35 = 0;
        v36 = 0;
        v37 = 0;
        while (2)
        {
          v38 = *v4;
          v39 = *(_QWORD *)(a2 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                v42 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v42 = 0;
        else
          v42 = v37;
LABEL_90:
        objc_msgSend(a1, "setStatusCode:", v42);
        goto LABEL_53;
      case 5u:
        PBReaderReadString();
        v44 = (_CPNetworkTimingData *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setUuid:", v44);
        goto LABEL_52;
      case 7u:
        PBReaderReadString();
        v44 = (_CPNetworkTimingData *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setParsecStatus:", v44);
        goto LABEL_52;
      case 8u:
        PBReaderReadString();
        v44 = (_CPNetworkTimingData *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setFbq:", v44);
        goto LABEL_52;
      case 9u:
        v45 = *v4;
        v46 = *(_QWORD *)(a2 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(_QWORD *)(a2 + *v5))
        {
          v47 = *(double *)(*(_QWORD *)(a2 + *v7) + v46);
          *(_QWORD *)(a2 + v45) = v46 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v47 = 0.0;
        }
        objc_msgSend(a1, "setDuration:", v47);
        goto LABEL_53;
      case 0xAu:
        PBReaderReadString();
        v44 = (_CPNetworkTimingData *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setPartialClientIp:", v44);
        goto LABEL_52;
      case 0xBu:
        v44 = objc_alloc_init(_CPNetworkTimingData);
        if (PBReaderPlaceMark() && (_CPNetworkTimingDataReadFrom(v44, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTimingData:", v44, 0, 0);
LABEL_52:

LABEL_53:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }

        return 0;
      case 0xCu:
        v48 = 0;
        v49 = 0;
        v50 = 0;
        while (2)
        {
          v51 = *v4;
          v52 = *(_QWORD *)(a2 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
            *(_QWORD *)(a2 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v15 = v49++ >= 9;
              if (v15)
              {
                v55 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v55 = 0;
        else
          v55 = v50;
LABEL_95:
        objc_msgSend(a1, "setEndpointType:", v55);
        goto LABEL_53;
      case 0xDu:
        v56 = 0;
        v57 = 0;
        v58 = 0;
        while (2)
        {
          v59 = *v4;
          v60 = *(_QWORD *)(a2 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
            *(_QWORD *)(a2 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v15 = v57++ >= 9;
              if (v15)
              {
                v63 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v63 = 0;
        else
          v63 = v58;
LABEL_100:
        objc_msgSend(a1, "setRawResponseSize:", v63);
        goto LABEL_53;
      case 0xEu:
        v64 = 0;
        v65 = 0;
        v66 = 0;
        while (2)
        {
          v67 = *v4;
          v68 = *(_QWORD *)(a2 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              v15 = v65++ >= 9;
              if (v15)
              {
                v71 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v71 = 0;
        else
          v71 = v66;
LABEL_105:
        objc_msgSend(a1, "setDecompressedResponseSize:", v71);
        goto LABEL_53;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_53;
    }
  }
}

uint64_t _CPErrorFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPError *v27;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_37;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_40;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_40:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_41;
      case 2u:
        v27 = objc_alloc_init(_CPError);
        if (!PBReaderPlaceMark() || (_CPErrorReadFrom(v27, a2) & 1) == 0)
          goto LABEL_43;
        PBReaderRecallMark();
        objc_msgSend(a1, "setError:", v27, 0, 0);
        goto LABEL_35;
      case 3u:
        v27 = objc_alloc_init(_CPError);
        if (PBReaderPlaceMark() && (_CPErrorReadFrom(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setUnderlyingError:", v27, 0, 0);
LABEL_35:

LABEL_41:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_43:

        return 0;
      case 4u:
        PBReaderReadString();
        v27 = (_CPError *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setRelatedStartNetworkSearchFeedbackId:", v27);
        goto LABEL_35;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_41;
    }
  }
}

uint64_t _CPCustomFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  void *v35;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (1)
        {
          v30 = *v4;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v5))
            break;
          v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
          *(_QWORD *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0)
            goto LABEL_44;
          v27 += 7;
          v15 = v28++ >= 9;
          if (v15)
          {
            v34 = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_44:
        v34 = *(_BYTE *)(a2 + *v6) ? 0 : v29;
LABEL_47:
        objc_msgSend(a1, "setTimestamp:", v34);
      }
      else if ((_DWORD)v18 == 2)
      {
        PBReaderReadData();
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setJsonFeedback:", v35);

      }
      else if ((_DWORD)v18 == 3)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v4;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v5))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_39;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_42;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_39:
        v26 = *(_BYTE *)(a2 + *v6) ? 0 : v21;
LABEL_42:
        objc_msgSend(a1, "setFeedbackType:", v26);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPSuggestionEngagementFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  _CPSearchSuggestionForFeedback *v26;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v26 = objc_alloc_init(_CPSearchSuggestionForFeedback);
        if (!PBReaderPlaceMark() || (_CPSearchSuggestionForFeedbackReadFrom(v26, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSuggestion:", v26, 0, 0);

      }
      else if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_33;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_36;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_36:
        objc_msgSend(a1, "setTimestamp:", v25);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPVisibleSuggestionsFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  _CPSearchSuggestionForFeedback *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v26 = objc_alloc_init(_CPSearchSuggestionForFeedback);
        v28 = 0;
        v29 = 0;
        if (!PBReaderPlaceMark() || !_CPSearchSuggestionForFeedbackReadFrom(v26, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v26)
          objc_msgSend(a1, "addSuggestions:", v26, 0, 0);

      }
      else if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_35;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_38;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_35:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_38:
        objc_msgSend(a1, "setTimestamp:", v25, v28, v29);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPResultsReceivedAfterTimeoutFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  _CPSearchResultForFeedback *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v26 = objc_alloc_init(_CPSearchResultForFeedback);
        v28 = 0;
        v29 = 0;
        if (!PBReaderPlaceMark() || !_CPSearchResultForFeedbackReadFrom(v26, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v26)
          objc_msgSend(a1, "addResults:", v26, 0, 0);

      }
      else if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_35;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_38;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_35:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_38:
        objc_msgSend(a1, "setTimestamp:", v25, v28, v29);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPLateSectionsAppendedFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  _CPResultSectionForFeedback *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v26 = objc_alloc_init(_CPResultSectionForFeedback);
        v28 = 0;
        v29 = 0;
        if (!PBReaderPlaceMark() || !_CPResultSectionForFeedbackReadFrom(v26, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v26)
          objc_msgSend(a1, "addSections:", v26, 0, 0);

      }
      else if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_35;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_38;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_35:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_38:
        objc_msgSend(a1, "setTimestamp:", v25, v28, v29);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPSectionEngagementFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _CPResultSectionForFeedback *v35;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (1)
        {
          v30 = *v4;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v5))
            break;
          v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
          *(_QWORD *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0)
            goto LABEL_46;
          v27 += 7;
          v15 = v28++ >= 9;
          if (v15)
          {
            v34 = 0;
            goto LABEL_49;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_46:
        if (*(_BYTE *)(a2 + *v6))
          v34 = 0;
        else
          v34 = v29;
LABEL_49:
        objc_msgSend(a1, "setTimestamp:", v34);
      }
      else if ((_DWORD)v18 == 2)
      {
        v35 = objc_alloc_init(_CPResultSectionForFeedback);
        if (!PBReaderPlaceMark() || (_CPResultSectionForFeedbackReadFrom(v35, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSection:", v35, 0, 0);

      }
      else if ((_DWORD)v18 == 3)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v4;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v5))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_41;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_44;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v6))
          v26 = 0;
        else
          v26 = v21;
LABEL_44:
        objc_msgSend(a1, "setTriggerEvent:", v26);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPDidGoToSiteFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  void *v35;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (1)
        {
          v30 = *v4;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v5))
            break;
          v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
          *(_QWORD *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0)
            goto LABEL_44;
          v27 += 7;
          v15 = v28++ >= 9;
          if (v15)
          {
            v34 = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_44:
        v34 = *(_BYTE *)(a2 + *v6) ? 0 : v29;
LABEL_47:
        objc_msgSend(a1, "setTimestamp:", v34);
      }
      else if ((_DWORD)v18 == 2)
      {
        PBReaderReadString();
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setInput:", v35);

      }
      else if ((_DWORD)v18 == 3)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v4;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v5))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_39;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_42;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_39:
        v26 = *(_BYTE *)(a2 + *v6) ? 0 : v21;
LABEL_42:
        objc_msgSend(a1, "setTriggerEvent:", v26);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPDidGoToSearchFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_44;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_47;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_44:
          if (*(_BYTE *)(a2 + *v6))
            v25 = 0;
          else
            v25 = v20;
LABEL_47:
          objc_msgSend(a1, "setTimestamp:", v25);
          continue;
        case 2u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setInput:", v27);

          continue;
        case 3u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          while (2)
          {
            v31 = *v4;
            v32 = *(_QWORD *)(a2 + v31);
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (v15)
                {
                  v35 = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v35 = 0;
          else
            v35 = v30;
LABEL_52:
          objc_msgSend(a1, "setEndpoint:", v35);
          continue;
        case 4u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v39 = *v4;
        v40 = *(_QWORD *)(a2 + v39);
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
          break;
        v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
        *(_QWORD *)(a2 + v39) = v41;
        v38 |= (unint64_t)(v42 & 0x7F) << v36;
        if ((v42 & 0x80) == 0)
          goto LABEL_54;
        v36 += 7;
        v15 = v37++ >= 9;
        if (v15)
        {
          v43 = 0;
          goto LABEL_57;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_54:
      v43 = *(_BYTE *)(a2 + *v6) ? 0 : v38;
LABEL_57:
      objc_msgSend(a1, "setTriggerEvent:", v43);
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPSessionMissingResultsFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  _CPSearchResultForFeedback *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v26 = objc_alloc_init(_CPSearchResultForFeedback);
        v28 = 0;
        v29 = 0;
        if (!PBReaderPlaceMark() || !_CPSearchResultForFeedbackReadFrom(v26, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v26)
          objc_msgSend(a1, "addResults:", v26, 0, 0);

      }
      else if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_35;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_38;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_35:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_38:
        objc_msgSend(a1, "setTimestamp:", v25, v28, v29);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPSessionMissingSuggestionsFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  _CPSearchSuggestionForFeedback *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v26 = objc_alloc_init(_CPSearchSuggestionForFeedback);
        v28 = 0;
        v29 = 0;
        if (!PBReaderPlaceMark() || !_CPSearchSuggestionForFeedbackReadFrom(v26, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v26)
          objc_msgSend(a1, "addSuggestions:", v26, 0, 0);

      }
      else if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_35;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_38;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_35:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_38:
        objc_msgSend(a1, "setTimestamp:", v25, v28, v29);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPResultGradingFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPSearchResultForFeedback *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_41;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_44;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_44:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_50;
      case 2u:
        v27 = objc_alloc_init(_CPSearchResultForFeedback);
        if (PBReaderPlaceMark() && (_CPSearchResultForFeedbackReadFrom(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setResult:", v27, 0, 0);
LABEL_39:

LABEL_50:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }

        return 0;
      case 3u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v4;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v35 = 0;
        else
          v35 = v30;
LABEL_49:
        objc_msgSend(a1, "setGrade:", v35);
        goto LABEL_50;
      case 4u:
        PBReaderReadString();
        v27 = (_CPSearchResultForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setTextFeedback:", v27);
        goto LABEL_39;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_50;
    }
  }
}

uint64_t _CPLookupHintRelevancyFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPRange *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_49;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_52;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_52:
        objc_msgSend(a1, "setTimestamp:", v25);
        goto LABEL_62;
      case 2u:
        v27 = objc_alloc_init(_CPRange);
        if (PBReaderPlaceMark() && (_CPRangeReadFrom(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setHintRange:", v27, 0, 0);
LABEL_47:

LABEL_62:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }

        return 0;
      case 3u:
        PBReaderReadString();
        v27 = (_CPRange *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setDomain:", v27);
        goto LABEL_47;
      case 4u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v4;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v30 = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v30 = 0;
LABEL_56:
        objc_msgSend(a1, "setDiscarded:", v30 != 0);
        goto LABEL_62;
      case 5u:
        v35 = 0;
        v36 = 0;
        v37 = 0;
        while (2)
        {
          v38 = *v4;
          v39 = *(_QWORD *)(a2 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                v42 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v42 = 0;
        else
          v42 = v37;
LABEL_61:
        objc_msgSend(a1, "setGrade:", v42);
        goto LABEL_62;
      case 6u:
        PBReaderReadString();
        v27 = (_CPRange *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setContext:", v27);
        goto LABEL_47;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_62;
    }
  }
}

uint64_t _CPConnectionInvalidatedFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_29;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_32;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_29:
        v25 = *(_BYTE *)(a2 + *v6) ? 0 : v20;
LABEL_32:
        objc_msgSend(a1, "setTimestamp:", v25);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPSessionEndFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t result;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        while (1)
        {
          v29 = *v4;
          v30 = *(_QWORD *)(a2 + v29);
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v5))
            break;
          v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
          *(_QWORD *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0)
            goto LABEL_42;
          v26 += 7;
          v15 = v27++ >= 9;
          if (v15)
          {
            v33 = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_42:
        v33 = *(_BYTE *)(a2 + *v6) ? 0 : v28;
LABEL_45:
        objc_msgSend(a1, "setTimestamp:", v33);
      }
      else if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_37;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_40;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_37:
        v25 = *(_BYTE *)(a2 + *v6) ? 0 : v20;
LABEL_40:
        objc_msgSend(a1, "setReason:", v25);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPSkipSearchFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_41;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_44;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_41:
          if (*(_BYTE *)(a2 + *v6))
            v25 = 0;
          else
            v25 = v20;
LABEL_44:
          objc_msgSend(a1, "setTimestamp:", v25);
          continue;
        case 2u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setInput:", v27);
          goto LABEL_39;
        case 3u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          break;
        case 4u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setExperimentId:", v27);
          goto LABEL_39;
        case 5u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setTreatmentId:", v27);
          goto LABEL_39;
        case 6u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setExperimentNamespaceId:", v27);
LABEL_39:

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v31 = *v4;
        v32 = *(_QWORD *)(a2 + v31);
        v33 = v32 + 1;
        if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          break;
        v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
        *(_QWORD *)(a2 + v31) = v33;
        v30 |= (unint64_t)(v34 & 0x7F) << v28;
        if ((v34 & 0x80) == 0)
          goto LABEL_46;
        v28 += 7;
        v15 = v29++ >= 9;
        if (v15)
        {
          v35 = 0;
          goto LABEL_49;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_46:
      v35 = *(_BYTE *)(a2 + *v6) ? 0 : v30;
LABEL_49:
      objc_msgSend(a1, "setTriggerEvent:", v35);
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPClientTimingFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_46;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_49;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_46:
          if (*(_BYTE *)(a2 + *v6))
            v25 = 0;
          else
            v25 = v20;
LABEL_49:
          objc_msgSend(a1, "setTimestamp:", v25);
          continue;
        case 2u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setInput:", v27);
          goto LABEL_30;
        case 3u:
          PBReaderReadString();
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setEventName:", v27);
LABEL_30:

          continue;
        case 4u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          while (2)
          {
            v31 = *v4;
            v32 = *(_QWORD *)(a2 + v31);
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (v15)
                {
                  v35 = 0;
                  goto LABEL_54;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v35 = 0;
          else
            v35 = v30;
LABEL_54:
          objc_msgSend(a1, "setQueryId:", v35);
          continue;
        case 5u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v39 = *v4;
        v40 = *(_QWORD *)(a2 + v39);
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
          break;
        v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
        *(_QWORD *)(a2 + v39) = v41;
        v38 |= (unint64_t)(v42 & 0x7F) << v36;
        if ((v42 & 0x80) == 0)
          goto LABEL_56;
        v36 += 7;
        v15 = v37++ >= 9;
        if (v15)
        {
          v43 = 0;
          goto LABEL_59;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_56:
      v43 = *(_BYTE *)(a2 + *v6) ? 0 : v38;
LABEL_59:
      objc_msgSend(a1, "setNanosecondInterval:", v43);
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPCommandEngagementFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPSearchResultForFeedback *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_83;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_86;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_83:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_86:
        objc_msgSend(a1, "setCommandType:", v25);
        goto LABEL_80;
      case 2u:
        PBReaderReadString();
        v27 = (_CPSearchResultForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCommandDetail:", v27);
        goto LABEL_79;
      case 3u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v4;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v35 = 0;
        else
          v35 = v30;
LABEL_91:
        objc_msgSend(a1, "setUniqueButtonId:", v35);
        goto LABEL_80;
      case 4u:
        PBReaderReadString();
        v27 = (_CPSearchResultForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCardSectionId:", v27);
        goto LABEL_79;
      case 5u:
        v27 = objc_alloc_init(_CPSearchResultForFeedback);
        if (!PBReaderPlaceMark() || (_CPSearchResultForFeedbackReadFrom(v27, a2) & 1) == 0)
          goto LABEL_116;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResult:", v27, 0, 0);
        goto LABEL_79;
      case 6u:
        v36 = 0;
        v37 = 0;
        v38 = 0;
        while (2)
        {
          v39 = *v4;
          v40 = *(_QWORD *)(a2 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v15 = v37++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v43 = 0;
        else
          v43 = v38;
LABEL_96:
        objc_msgSend(a1, "setTimestamp:", v43);
        goto LABEL_80;
      case 7u:
        PBReaderReadString();
        v27 = (_CPSearchResultForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setResultSectionId:", v27);
        goto LABEL_79;
      case 8u:
        v44 = 0;
        v45 = 0;
        v46 = 0;
        while (2)
        {
          v47 = *v4;
          v48 = *(_QWORD *)(a2 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v15 = v45++ >= 9;
              if (v15)
              {
                v51 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v51 = 0;
        else
          v51 = v46;
LABEL_101:
        objc_msgSend(a1, "setTriggerEvent:", v51);
        goto LABEL_80;
      case 9u:
        v52 = 0;
        v53 = 0;
        v54 = 0;
        while (2)
        {
          v55 = *v4;
          v56 = *(_QWORD *)(a2 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              v15 = v53++ >= 9;
              if (v15)
              {
                v59 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v59 = 0;
        else
          v59 = v54;
LABEL_106:
        objc_msgSend(a1, "setContactActionType:", v59);
        goto LABEL_80;
      case 0xAu:
        v60 = 0;
        v61 = 0;
        v62 = 0;
        while (2)
        {
          v63 = *v4;
          v64 = *(_QWORD *)(a2 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              v15 = v61++ >= 9;
              if (v15)
              {
                v62 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v62 = 0;
LABEL_110:
        objc_msgSend(a1, "setDidDisplayHandleOptions:", v62 != 0);
        goto LABEL_80;
      case 0xBu:
        v67 = 0;
        v68 = 0;
        v69 = 0;
        while (2)
        {
          v70 = *v4;
          v71 = *(_QWORD *)(a2 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
            *(_QWORD *)(a2 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              v15 = v68++ >= 9;
              if (v15)
              {
                v69 = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v69 = 0;
LABEL_114:
        objc_msgSend(a1, "setDidSelectFromOptionsMenu:", v69 != 0);
        goto LABEL_80;
      case 0xCu:
        v27 = objc_alloc_init(_CPPhotosAttributes);
        if (PBReaderPlaceMark() && (_CPPhotosAttributesReadFrom(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPhotosAttributes:", v27, 0, 0);
LABEL_79:

LABEL_80:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_116:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_80;
    }
  }
}

uint64_t _CPDynamicButtonVisibilityFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _CPButtonForFeedback *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        return *(_BYTE *)(a2 + *v6) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v4;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v6) == 0;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 4)
      {
        v27 = objc_alloc_init(_CPButtonForFeedback);
        v29 = 0;
        v30 = 0;
        if (!PBReaderPlaceMark() || !_CPButtonForFeedbackReadFrom(v27, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v27)
          objc_msgSend(a1, "addVisibleDynamicButton2s:", v27, 0, 0);
      }
      else
      {
        if ((_DWORD)v18 != 3)
        {
          if ((_DWORD)v18 == 1)
          {
            v19 = 0;
            v20 = 0;
            v21 = 0;
            while (1)
            {
              v22 = *v4;
              v23 = *(_QWORD *)(a2 + v22);
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v5))
                break;
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
              *(_QWORD *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0)
                goto LABEL_37;
              v19 += 7;
              v15 = v20++ >= 9;
              if (v15)
              {
                v26 = 0;
                goto LABEL_40;
              }
            }
            *(_BYTE *)(a2 + *v6) = 1;
LABEL_37:
            if (*(_BYTE *)(a2 + *v6))
              v26 = 0;
            else
              v26 = v21;
LABEL_40:
            objc_msgSend(a1, "setTimestamp:", v26, v29, v30);
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        PBReaderReadString();
        v27 = (_CPButtonForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCardSectionIdentifier:", v27);
      }

    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPExperimentTriggeredFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _CPCounterfactualInfo *v35;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_41;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_44;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_44:
        objc_msgSend(a1, "setQueryID:", v25);
        goto LABEL_50;
      case 2u:
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (2)
        {
          v30 = *v4;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
            *(_QWORD *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              v15 = v28++ >= 9;
              if (v15)
              {
                v34 = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v34 = 0;
        else
          v34 = v29;
LABEL_49:
        objc_msgSend(a1, "setTimestamp:", v34);
        goto LABEL_50;
      case 3u:
        v35 = objc_alloc_init(_CPCounterfactualInfo);
        if (PBReaderPlaceMark() && (_CPCounterfactualInfoReadFrom(v35, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCounterfactual:", v35, 0, 0);
LABEL_39:

LABEL_50:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }

        return 0;
      case 4u:
        PBReaderReadString();
        v35 = (_CPCounterfactualInfo *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCodepathId:", v35);
        goto LABEL_39;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_50;
    }
  }
}

uint64_t _CPCounterfactualInfoReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (1)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
            break;
          v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
          *(_QWORD *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0)
            goto LABEL_50;
          v27 += 7;
          v15 = v28++ >= 9;
          if (v15)
          {
            v29 = 0;
            goto LABEL_52;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_50:
        if (*(_BYTE *)(a2 + *v5))
          v29 = 0;
LABEL_52:
        objc_msgSend(a1, "setCfDiffered:", v29 != 0);
      }
      else if ((_DWORD)v18 == 2)
      {
        v34 = 0;
        v35 = 0;
        v36 = 0;
        while (1)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
            break;
          v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
          *(_QWORD *)(a2 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0)
            goto LABEL_54;
          v34 += 7;
          v15 = v35++ >= 9;
          if (v15)
          {
            v36 = 0;
            goto LABEL_56;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
        if (*(_BYTE *)(a2 + *v5))
          v36 = 0;
LABEL_56:
        objc_msgSend(a1, "setCfUsed:", v36 != 0);
      }
      else if ((_DWORD)v18 == 3)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_45;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_48;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        v26 = *(_BYTE *)(a2 + *v5) ? 0 : v21;
LABEL_48:
        objc_msgSend(a1, "setCfError:", v26);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPPhotosAttributesReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_64;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_67;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_64:
          if (*(_BYTE *)(a2 + *v5))
            v25 = 0;
          else
            v25 = v20;
LABEL_67:
          objc_msgSend(a1, "setPositionIndex:", v25);
          continue;
        case 2u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                v15 = v28++ >= 9;
                if (v15)
                {
                  v29 = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v29 = 0;
LABEL_71:
          objc_msgSend(a1, "setIsEmbeddingMatched:", v29 != 0);
          continue;
        case 3u:
          v34 = 0;
          v35 = 0;
          v36 = 0;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            v39 = v38 + 1;
            if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v39;
              v36 |= (unint64_t)(v40 & 0x7F) << v34;
              if (v40 < 0)
              {
                v34 += 7;
                v15 = v35++ >= 9;
                if (v15)
                {
                  v36 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v36 = 0;
LABEL_75:
          objc_msgSend(a1, "setIsMetadataMatched:", v36 != 0);
          continue;
        case 4u:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
              *(_QWORD *)(a2 + v44) = v46;
              v43 |= (unint64_t)(v47 & 0x7F) << v41;
              if (v47 < 0)
              {
                v41 += 7;
                v15 = v42++ >= 9;
                if (v15)
                {
                  v43 = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v43 = 0;
LABEL_79:
          objc_msgSend(a1, "setIsVideo:", v43 != 0);
          continue;
        case 5u:
          v48 = 0;
          v49 = 0;
          v50 = 0;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            v53 = v52 + 1;
            if (v52 == -1 || v53 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
              *(_QWORD *)(a2 + v51) = v53;
              v50 |= (unint64_t)(v54 & 0x7F) << v48;
              if (v54 < 0)
              {
                v48 += 7;
                v15 = v49++ >= 9;
                if (v15)
                {
                  v50 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v50 = 0;
LABEL_83:
          objc_msgSend(a1, "setIsFavorite:", v50 != 0);
          continue;
        case 6u:
          v55 = 0;
          v56 = 0;
          v57 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v58 = *v3;
        v59 = *(_QWORD *)(a2 + v58);
        v60 = v59 + 1;
        if (v59 == -1 || v60 > *(_QWORD *)(a2 + *v4))
          break;
        v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
        *(_QWORD *)(a2 + v58) = v60;
        v57 |= (unint64_t)(v61 & 0x7F) << v55;
        if ((v61 & 0x80) == 0)
          goto LABEL_85;
        v55 += 7;
        v15 = v56++ >= 9;
        if (v15)
        {
          v62 = 0;
          goto LABEL_88;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_85:
      v62 = *(_BYTE *)(a2 + *v5) ? 0 : v57;
LABEL_88:
      objc_msgSend(a1, "setPhotosSuggestionType:", v62);
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPStructReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t result;
  void *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  _CPValue *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  _CPValue *v49;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
      {
        PBReaderPlaceMark();
        v23 = 0;
        while (1)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v4))
            break;
          v27 = *(char *)(*(_QWORD *)(a2 + *v7) + v25);
          *(_QWORD *)(a2 + v24) = v26;
          if (v27 < 0)
          {
            v15 = v23++ >= 9;
            if (!v15)
              continue;
          }
          goto LABEL_45;
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        v35 = 0;
        v36 = 0;
        v37 = 0;
        while (1)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
          *(_QWORD *)(a2 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0)
            goto LABEL_58;
          v35 += 7;
          v15 = v36++ >= 9;
          if (v15)
          {
            v42 = 0;
            goto LABEL_61;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_58:
        if (*(_BYTE *)(a2 + *v5))
          v42 = 0;
        else
          v42 = v37;
LABEL_61:
        v44 = 0;
        while (1)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(a2 + *v4))
            break;
          v48 = *(char *)(*(_QWORD *)(a2 + *v7) + v46);
          *(_QWORD *)(a2 + v45) = v47;
          if (v48 < 0)
          {
            v15 = v44++ >= 9;
            if (!v15)
              continue;
          }
          goto LABEL_69;
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_69:
        if ((PBReaderPlaceMark() & 1) == 0)
          return 0;
        v49 = objc_alloc_init(_CPValue);
        if (!_CPValueReadFrom(v49, a2)
          || (PBReaderRecallMark(), PBReaderRecallMark(), *(_BYTE *)(a2 + *v5)))
        {

          return 0;
        }
        objc_msgSend(a1, "setIntKeyFields:forKey:", v49, v42, 0, 0, 0, 0);

      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderPlaceMark();
        v18 = 0;
        while (1)
        {
          v19 = *v3;
          v20 = *(_QWORD *)(a2 + v19);
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(char *)(*(_QWORD *)(a2 + *v7) + v20);
          *(_QWORD *)(a2 + v19) = v21;
          if (v22 < 0)
          {
            v15 = v18++ >= 9;
            if (!v15)
              continue;
          }
          goto LABEL_37;
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        PBReaderReadString();
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        v30 = 0;
        while (1)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
            break;
          v34 = *(char *)(*(_QWORD *)(a2 + *v7) + v32);
          *(_QWORD *)(a2 + v31) = v33;
          if (v34 < 0)
          {
            v15 = v30++ >= 9;
            if (!v15)
              continue;
          }
          goto LABEL_53;
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_76;
        v43 = objc_alloc_init(_CPValue);
        if (!_CPValueReadFrom(v43, a2)
          || (PBReaderRecallMark(), PBReaderRecallMark(), *(_BYTE *)(a2 + *v5)))
        {

LABEL_76:
          return 0;
        }
        objc_msgSend(a1, "setStringKeyFields:forKey:", v43, v29, 0, 0, 0, 0);

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPCoreSpotlightRankingSignalsForFeedbackReadFrom(void *a1, uint64_t a2, double a3)
{
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t v95;

  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v8 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)(a2 + v12);
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        v16 = v10++ >= 9;
        if (v16)
        {
          v11 = 0;
          v17 = *v6;
          v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *v6;
      v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(_BYTE *)(a2 + v17))
        v11 = 0;
LABEL_14:
      if (v18 || (v11 & 7) == 4)
        break;
      switch((v11 >> 3))
      {
        case 1u:
          v20 = *v4;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setTopicalityScore:", a3);
          continue;
        case 2u:
          v23 = *v4;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v24);
            *(_QWORD *)(a2 + v23) = v24 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setFreshness:", a3);
          continue;
        case 3u:
          v25 = *v4;
          v26 = *(_QWORD *)(a2 + v25);
          if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setEngagementScore:", a3);
          continue;
        case 4u:
          v27 = *v4;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setPredictedLikelihoodOfEngagement:", a3);
          continue;
        case 5u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          while (2)
          {
            v32 = *v4;
            v33 = *(_QWORD *)(a2 + v32);
            v34 = v33 + 1;
            if (v33 == -1 || v34 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v33);
              *(_QWORD *)(a2 + v32) = v34;
              v31 |= (unint64_t)(v35 & 0x7F) << v29;
              if (v35 < 0)
              {
                v29 += 7;
                v16 = v30++ >= 9;
                if (v16)
                {
                  v31 = 0;
                  goto LABEL_104;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v31 = 0;
LABEL_104:
          objc_msgSend(a1, "setWasNominatedAsTopHit:", v31 != 0);
          continue;
        case 6u:
          v36 = *v4;
          v37 = *(_QWORD *)(a2 + v36);
          if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v37);
            *(_QWORD *)(a2 + v36) = v37 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setSodiumL2Score:", a3);
          continue;
        case 7u:
          v38 = 0;
          v39 = 0;
          v40 = 0;
          while (2)
          {
            v41 = *v4;
            v42 = *(_QWORD *)(a2 + v41);
            v43 = v42 + 1;
            if (v42 == -1 || v43 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v42);
              *(_QWORD *)(a2 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                v16 = v39++ >= 9;
                if (v16)
                {
                  v40 = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v40 = 0;
LABEL_108:
          objc_msgSend(a1, "setIsExactMatchOfLaunchString:", v40 != 0);
          continue;
        case 8u:
          v45 = 0;
          v46 = 0;
          v47 = 0;
          while (2)
          {
            v48 = *v4;
            v49 = *(_QWORD *)(a2 + v48);
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v49);
              *(_QWORD *)(a2 + v48) = v50;
              v47 |= (unint64_t)(v51 & 0x7F) << v45;
              if (v51 < 0)
              {
                v45 += 7;
                v16 = v46++ >= 9;
                if (v16)
                {
                  v47 = 0;
                  goto LABEL_112;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v47 = 0;
LABEL_112:
          objc_msgSend(a1, "setWasEngagedInSpotlight:", v47 != 0);
          continue;
        case 9u:
          v52 = 0;
          v53 = 0;
          v54 = 0;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            v57 = v56 + 1;
            if (v56 == -1 || v57 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v56);
              *(_QWORD *)(a2 + v55) = v57;
              v54 |= (unint64_t)(v58 & 0x7F) << v52;
              if (v58 < 0)
              {
                v52 += 7;
                v16 = v53++ >= 9;
                if (v16)
                {
                  v59 = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v59 = 0;
          else
            v59 = v54;
LABEL_117:
          objc_msgSend(a1, "setResultQueryRecency:", v59);
          continue;
        case 0xAu:
          v60 = *v4;
          v61 = *(_QWORD *)(a2 + v60);
          if (v61 <= 0xFFFFFFFFFFFFFFFBLL && v61 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setPommesL2Score:", a3);
          continue;
        case 0xBu:
          v62 = 0;
          v63 = 0;
          v64 = 0;
          while (2)
          {
            v65 = *v4;
            v66 = *(_QWORD *)(a2 + v65);
            v67 = v66 + 1;
            if (v66 == -1 || v67 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v66);
              *(_QWORD *)(a2 + v65) = v67;
              v64 |= (unint64_t)(v68 & 0x7F) << v62;
              if (v68 < 0)
              {
                v62 += 7;
                v16 = v63++ >= 9;
                if (v16)
                {
                  v64 = 0;
                  goto LABEL_121;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v64 = 0;
LABEL_121:
          objc_msgSend(a1, "setIsSemanticMatch:", v64 != 0);
          continue;
        case 0xCu:
          v69 = *v4;
          v70 = *(_QWORD *)(a2 + v69);
          if (v70 <= 0xFFFFFFFFFFFFFFFBLL && v70 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v70);
            *(_QWORD *)(a2 + v69) = v70 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setSemanticScore:", a3);
          continue;
        case 0xDu:
          v71 = 0;
          v72 = 0;
          v73 = 0;
          while (2)
          {
            v74 = *v4;
            v75 = *(_QWORD *)(a2 + v74);
            v76 = v75 + 1;
            if (v75 == -1 || v76 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v75);
              *(_QWORD *)(a2 + v74) = v76;
              v73 |= (unint64_t)(v77 & 0x7F) << v71;
              if (v77 < 0)
              {
                v71 += 7;
                v16 = v72++ >= 9;
                if (v16)
                {
                  v73 = 0;
                  goto LABEL_125;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v73 = 0;
LABEL_125:
          objc_msgSend(a1, "setIsSyntacticMatch:", v73 != 0);
          continue;
        case 0xEu:
          v78 = *v4;
          v79 = *(_QWORD *)(a2 + v78);
          if (v79 <= 0xFFFFFFFFFFFFFFFBLL && v79 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setSyntacticScore:", a3);
          continue;
        case 0xFu:
          v80 = 0;
          v81 = 0;
          v82 = 0;
          while (2)
          {
            v83 = *v4;
            v84 = *(_QWORD *)(a2 + v83);
            v85 = v84 + 1;
            if (v84 == -1 || v85 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v84);
              *(_QWORD *)(a2 + v83) = v85;
              v82 |= (unint64_t)(v86 & 0x7F) << v80;
              if (v86 < 0)
              {
                v80 += 7;
                v16 = v81++ >= 9;
                if (v16)
                {
                  v87 = 0;
                  goto LABEL_130;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v87 = 0;
          else
            v87 = v82;
LABEL_130:
          objc_msgSend(a1, "setEmbeddingStatus:", v87);
          continue;
        case 0x10u:
          v88 = 0;
          v89 = 0;
          v90 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v91 = *v4;
        v92 = *(_QWORD *)(a2 + v91);
        v93 = v92 + 1;
        if (v92 == -1 || v93 > *(_QWORD *)(a2 + *v5))
          break;
        v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v92);
        *(_QWORD *)(a2 + v91) = v93;
        v90 |= (unint64_t)(v94 & 0x7F) << v88;
        if ((v94 & 0x80) == 0)
          goto LABEL_132;
        v88 += 7;
        v16 = v89++ >= 9;
        if (v16)
        {
          v95 = 0;
          goto LABEL_135;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_132:
      v95 = *(_BYTE *)(a2 + *v6) ? 0 : v90;
LABEL_135:
      objc_msgSend(a1, "setItemAgeInDays:", v95);
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPMailRankingSignalsForFeedbackReadFrom(void *a1, uint64_t a2, double a3)
{
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t result;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  uint64_t v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  uint64_t v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  uint64_t v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  uint64_t v151;
  char v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  uint64_t v159;
  char v160;
  unsigned int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  uint64_t v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  uint64_t v175;
  char v176;
  unsigned int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  uint64_t v183;
  char v184;
  unsigned int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  uint64_t v191;
  char v192;
  unsigned int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  char v198;
  uint64_t v199;
  char v200;
  unsigned int v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  char v206;
  uint64_t v207;
  char v208;
  unsigned int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  char v214;
  uint64_t v215;
  char v216;
  unsigned int v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  char v222;
  uint64_t v223;
  char v224;
  unsigned int v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  char v230;
  uint64_t v231;
  char v232;
  unsigned int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  char v238;
  uint64_t v239;
  char v240;
  unsigned int v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  char v246;
  uint64_t v247;
  char v248;
  unsigned int v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  char v254;
  uint64_t v255;
  char v256;
  unsigned int v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  char v262;
  uint64_t v263;
  char v264;
  unsigned int v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  char v270;
  uint64_t v271;
  char v272;
  unsigned int v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  char v278;
  uint64_t v279;
  char v280;
  unsigned int v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  char v286;
  uint64_t v287;
  char v288;
  unsigned int v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  char v294;
  uint64_t v295;
  char v296;
  unsigned int v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  char v302;
  uint64_t v303;
  char v304;
  unsigned int v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  unint64_t v309;
  char v310;
  uint64_t v311;
  char v312;
  unsigned int v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unint64_t v317;
  char v318;
  uint64_t v319;
  char v320;
  unsigned int v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  unint64_t v325;
  char v326;
  uint64_t v327;
  char v328;
  unsigned int v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  unint64_t v333;
  char v334;
  uint64_t v335;
  char v336;
  unsigned int v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  unint64_t v341;
  char v342;
  uint64_t v343;
  char v344;
  unsigned int v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  unint64_t v349;
  char v350;
  uint64_t v351;
  char v352;
  unsigned int v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  unint64_t v357;
  char v358;
  uint64_t v359;
  char v360;
  unsigned int v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  unint64_t v365;
  char v366;
  uint64_t v367;
  char v368;
  unsigned int v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  unint64_t v373;
  char v374;
  uint64_t v375;
  char v376;
  unsigned int v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  unint64_t v381;
  char v382;
  uint64_t v383;
  char v384;
  unsigned int v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  unint64_t v389;
  char v390;
  uint64_t v391;
  char v392;
  unsigned int v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  unint64_t v397;
  char v398;
  uint64_t v399;
  char v400;
  unsigned int v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  char v406;
  uint64_t v407;
  char v408;
  unsigned int v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  unint64_t v413;
  char v414;
  uint64_t v415;
  char v416;
  unsigned int v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  unint64_t v421;
  char v422;
  uint64_t v423;
  char v424;
  unsigned int v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  unint64_t v429;
  char v430;
  uint64_t v431;
  char v432;
  unsigned int v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  unint64_t v437;
  char v438;
  uint64_t v439;
  char v440;
  unsigned int v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  unint64_t v445;
  char v446;
  uint64_t v447;
  char v448;
  unsigned int v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  unint64_t v453;
  char v454;
  uint64_t v455;
  char v456;
  unsigned int v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  unint64_t v461;
  char v462;
  uint64_t v463;
  char v464;
  unsigned int v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  unint64_t v469;
  char v470;
  uint64_t v471;
  char v472;
  unsigned int v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  unint64_t v477;
  char v478;
  uint64_t v479;
  char v480;
  unsigned int v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  unint64_t v485;
  char v486;
  uint64_t v487;
  char v488;
  unsigned int v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  unint64_t v493;
  char v494;
  uint64_t v495;
  char v496;
  unsigned int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  unint64_t v501;
  char v502;
  uint64_t v503;
  char v504;
  unsigned int v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  unint64_t v509;
  char v510;
  uint64_t v511;
  char v512;
  unsigned int v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  unint64_t v517;
  char v518;
  uint64_t v519;
  char v520;
  unsigned int v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  unint64_t v525;
  char v526;
  uint64_t v527;
  char v528;
  unsigned int v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  unint64_t v533;
  char v534;
  uint64_t v535;
  char v536;
  unsigned int v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  unint64_t v541;
  char v542;
  uint64_t v543;
  char v544;
  unsigned int v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  unint64_t v549;
  char v550;
  uint64_t v551;

  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v8 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)(a2 + v12);
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        v16 = v10++ >= 9;
        if (v16)
        {
          v11 = 0;
          v17 = *v6;
          v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *v6;
      v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(_BYTE *)(a2 + v17))
        v11 = 0;
LABEL_14:
      if (v18 || (v11 & 7) == 4)
        break;
      switch((v11 >> 3))
      {
        case 1u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)(a2 + v23);
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)(a2 + *v5))
              break;
            v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v24);
            *(_QWORD *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_496;
            v20 += 7;
            v16 = v21++ >= 9;
            if (v16)
            {
              v22 = 0;
              goto LABEL_498;
            }
          }
          *(_BYTE *)(a2 + *v6) = 1;
LABEL_496:
          if (*(_BYTE *)(a2 + *v6))
            v22 = 0;
LABEL_498:
          objc_msgSend(a1, "setWasReorderedByRecency:", v22 != 0);
          continue;
        case 2u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          while (2)
          {
            v31 = *v4;
            v32 = *(_QWORD *)(a2 + v31);
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v32);
              *(_QWORD *)(a2 + v31) = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v16 = v29++ >= 9;
                if (v16)
                {
                  v35 = 0;
                  goto LABEL_503;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v35 = 0;
          else
            v35 = v30;
LABEL_503:
          objc_msgSend(a1, "setNumEngagements:", v35);
          continue;
        case 3u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          while (2)
          {
            v39 = *v4;
            v40 = *(_QWORD *)(a2 + v39);
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v40);
              *(_QWORD *)(a2 + v39) = v41;
              v38 |= (unint64_t)(v42 & 0x7F) << v36;
              if (v42 < 0)
              {
                v36 += 7;
                v16 = v37++ >= 9;
                if (v16)
                {
                  v43 = 0;
                  goto LABEL_508;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v43 = 0;
          else
            v43 = v38;
LABEL_508:
          objc_msgSend(a1, "setNumDaysEngagedLast30Days:", v43);
          continue;
        case 4u:
          v44 = 0;
          v45 = 0;
          v46 = 0;
          while (2)
          {
            v47 = *v4;
            v48 = *(_QWORD *)(a2 + v47);
            v49 = v48 + 1;
            if (v48 == -1 || v49 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v48);
              *(_QWORD *)(a2 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if (v50 < 0)
              {
                v44 += 7;
                v16 = v45++ >= 9;
                if (v16)
                {
                  v51 = 0;
                  goto LABEL_513;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v51 = 0;
          else
            v51 = v46;
LABEL_513:
          objc_msgSend(a1, "setAverageEngagementAgeLast7Days:", v51);
          continue;
        case 5u:
          v52 = 0;
          v53 = 0;
          v54 = 0;
          while (2)
          {
            v55 = *v4;
            v56 = *(_QWORD *)(a2 + v55);
            v57 = v56 + 1;
            if (v56 == -1 || v57 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v56);
              *(_QWORD *)(a2 + v55) = v57;
              v54 |= (unint64_t)(v58 & 0x7F) << v52;
              if (v58 < 0)
              {
                v52 += 7;
                v16 = v53++ >= 9;
                if (v16)
                {
                  v59 = 0;
                  goto LABEL_518;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v59 = 0;
          else
            v59 = v54;
LABEL_518:
          objc_msgSend(a1, "setAverageEngagementAgeLast14Days:", v59);
          continue;
        case 6u:
          v60 = 0;
          v61 = 0;
          v62 = 0;
          while (2)
          {
            v63 = *v4;
            v64 = *(_QWORD *)(a2 + v63);
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v64);
              *(_QWORD *)(a2 + v63) = v65;
              v62 |= (unint64_t)(v66 & 0x7F) << v60;
              if (v66 < 0)
              {
                v60 += 7;
                v16 = v61++ >= 9;
                if (v16)
                {
                  v67 = 0;
                  goto LABEL_523;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v67 = 0;
          else
            v67 = v62;
LABEL_523:
          objc_msgSend(a1, "setAverageEngagementAgeLast21Days:", v67);
          continue;
        case 7u:
          v68 = 0;
          v69 = 0;
          v70 = 0;
          while (2)
          {
            v71 = *v4;
            v72 = *(_QWORD *)(a2 + v71);
            v73 = v72 + 1;
            if (v72 == -1 || v73 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v72);
              *(_QWORD *)(a2 + v71) = v73;
              v70 |= (unint64_t)(v74 & 0x7F) << v68;
              if (v74 < 0)
              {
                v68 += 7;
                v16 = v69++ >= 9;
                if (v16)
                {
                  v75 = 0;
                  goto LABEL_528;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v75 = 0;
          else
            v75 = v70;
LABEL_528:
          objc_msgSend(a1, "setAverageEngagementAgeLast30Days:", v75);
          continue;
        case 8u:
          v76 = 0;
          v77 = 0;
          v78 = 0;
          while (2)
          {
            v79 = *v4;
            v80 = *(_QWORD *)(a2 + v79);
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v80);
              *(_QWORD *)(a2 + v79) = v81;
              v78 |= (unint64_t)(v82 & 0x7F) << v76;
              if (v82 < 0)
              {
                v76 += 7;
                v16 = v77++ >= 9;
                if (v16)
                {
                  v83 = 0;
                  goto LABEL_533;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v83 = 0;
          else
            v83 = v78;
LABEL_533:
          objc_msgSend(a1, "setDaysSinceReceipt:", v83);
          continue;
        case 9u:
          v84 = *v4;
          v85 = *(_QWORD *)(a2 + v84);
          if (v85 <= 0xFFFFFFFFFFFFFFFBLL && v85 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v85);
            *(_QWORD *)(a2 + v84) = v85 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setL1Score:", a3);
          continue;
        case 0xAu:
          v86 = *v4;
          v87 = *(_QWORD *)(a2 + v86);
          if (v87 <= 0xFFFFFFFFFFFFFFFBLL && v87 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v87);
            *(_QWORD *)(a2 + v86) = v87 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setL2Score:", a3);
          continue;
        case 0xBu:
          v88 = 0;
          v89 = 0;
          v90 = 0;
          while (2)
          {
            v91 = *v4;
            v92 = *(_QWORD *)(a2 + v91);
            v93 = v92 + 1;
            if (v92 == -1 || v93 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v92);
              *(_QWORD *)(a2 + v91) = v93;
              v90 |= (unint64_t)(v94 & 0x7F) << v88;
              if (v94 < 0)
              {
                v88 += 7;
                v16 = v89++ >= 9;
                if (v16)
                {
                  v90 = 0;
                  goto LABEL_537;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v90 = 0;
LABEL_537:
          objc_msgSend(a1, "setIsFlagged:", v90 != 0);
          continue;
        case 0xCu:
          v95 = 0;
          v96 = 0;
          v97 = 0;
          while (2)
          {
            v98 = *v4;
            v99 = *(_QWORD *)(a2 + v98);
            v100 = v99 + 1;
            if (v99 == -1 || v100 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v99);
              *(_QWORD *)(a2 + v98) = v100;
              v97 |= (unint64_t)(v101 & 0x7F) << v95;
              if (v101 < 0)
              {
                v95 += 7;
                v16 = v96++ >= 9;
                if (v16)
                {
                  v97 = 0;
                  goto LABEL_541;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v97 = 0;
LABEL_541:
          objc_msgSend(a1, "setIsRepliedTo:", v97 != 0);
          continue;
        case 0xDu:
          v102 = 0;
          v103 = 0;
          v104 = 0;
          while (2)
          {
            v105 = *v4;
            v106 = *(_QWORD *)(a2 + v105);
            v107 = v106 + 1;
            if (v106 == -1 || v107 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v106);
              *(_QWORD *)(a2 + v105) = v107;
              v104 |= (unint64_t)(v108 & 0x7F) << v102;
              if (v108 < 0)
              {
                v102 += 7;
                v16 = v103++ >= 9;
                if (v16)
                {
                  v104 = 0;
                  goto LABEL_545;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v104 = 0;
LABEL_545:
          objc_msgSend(a1, "setIsSemanticMatch:", v104 != 0);
          continue;
        case 0xEu:
          v109 = 0;
          v110 = 0;
          v111 = 0;
          while (2)
          {
            v112 = *v4;
            v113 = *(_QWORD *)(a2 + v112);
            v114 = v113 + 1;
            if (v113 == -1 || v114 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v113);
              *(_QWORD *)(a2 + v112) = v114;
              v111 |= (unint64_t)(v115 & 0x7F) << v109;
              if (v115 < 0)
              {
                v109 += 7;
                v16 = v110++ >= 9;
                if (v16)
                {
                  v111 = 0;
                  goto LABEL_549;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v111 = 0;
LABEL_549:
          objc_msgSend(a1, "setIsSyntacticMatch:", v111 != 0);
          continue;
        case 0xFu:
          v116 = *v4;
          v117 = *(_QWORD *)(a2 + v116);
          if (v117 <= 0xFFFFFFFFFFFFFFFBLL && v117 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v117);
            *(_QWORD *)(a2 + v116) = v117 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setSemanticScore:", a3);
          continue;
        case 0x10u:
          v118 = *v4;
          v119 = *(_QWORD *)(a2 + v118);
          if (v119 <= 0xFFFFFFFFFFFFFFFBLL && v119 + 4 <= *(_QWORD *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v119);
            *(_QWORD *)(a2 + v118) = v119 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + v17) = 1;
            LODWORD(a3) = 0;
          }
          objc_msgSend(a1, "setSyntacticScore:", a3);
          continue;
        case 0x11u:
          v120 = 0;
          v121 = 0;
          v122 = 0;
          while (2)
          {
            v123 = *v4;
            v124 = *(_QWORD *)(a2 + v123);
            v125 = v124 + 1;
            if (v124 == -1 || v125 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v126 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v124);
              *(_QWORD *)(a2 + v123) = v125;
              v122 |= (unint64_t)(v126 & 0x7F) << v120;
              if (v126 < 0)
              {
                v120 += 7;
                v16 = v121++ >= 9;
                if (v16)
                {
                  v127 = 0;
                  goto LABEL_554;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v127 = 0;
          else
            v127 = v122;
LABEL_554:
          objc_msgSend(a1, "setCountUnigramMatchInAuthors:", v127);
          continue;
        case 0x12u:
          v128 = 0;
          v129 = 0;
          v130 = 0;
          while (2)
          {
            v131 = *v4;
            v132 = *(_QWORD *)(a2 + v131);
            v133 = v132 + 1;
            if (v132 == -1 || v133 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v134 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v132);
              *(_QWORD *)(a2 + v131) = v133;
              v130 |= (unint64_t)(v134 & 0x7F) << v128;
              if (v134 < 0)
              {
                v128 += 7;
                v16 = v129++ >= 9;
                if (v16)
                {
                  v135 = 0;
                  goto LABEL_559;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v135 = 0;
          else
            v135 = v130;
LABEL_559:
          objc_msgSend(a1, "setCountBigramMatchInAuthors:", v135);
          continue;
        case 0x13u:
          v136 = 0;
          v137 = 0;
          v138 = 0;
          while (2)
          {
            v139 = *v4;
            v140 = *(_QWORD *)(a2 + v139);
            v141 = v140 + 1;
            if (v140 == -1 || v141 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v142 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v140);
              *(_QWORD *)(a2 + v139) = v141;
              v138 |= (unint64_t)(v142 & 0x7F) << v136;
              if (v142 < 0)
              {
                v136 += 7;
                v16 = v137++ >= 9;
                if (v16)
                {
                  v143 = 0;
                  goto LABEL_564;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v143 = 0;
          else
            v143 = v138;
LABEL_564:
          objc_msgSend(a1, "setCountNgramMatchInAuthors:", v143);
          continue;
        case 0x14u:
          v144 = 0;
          v145 = 0;
          v146 = 0;
          while (2)
          {
            v147 = *v4;
            v148 = *(_QWORD *)(a2 + v147);
            v149 = v148 + 1;
            if (v148 == -1 || v149 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v150 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v148);
              *(_QWORD *)(a2 + v147) = v149;
              v146 |= (unint64_t)(v150 & 0x7F) << v144;
              if (v150 < 0)
              {
                v144 += 7;
                v16 = v145++ >= 9;
                if (v16)
                {
                  v151 = 0;
                  goto LABEL_569;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v151 = 0;
          else
            v151 = v146;
LABEL_569:
          objc_msgSend(a1, "setCountUnigramPrefixMatchInAuthors:", v151);
          continue;
        case 0x15u:
          v152 = 0;
          v153 = 0;
          v154 = 0;
          while (2)
          {
            v155 = *v4;
            v156 = *(_QWORD *)(a2 + v155);
            v157 = v156 + 1;
            if (v156 == -1 || v157 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v158 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v156);
              *(_QWORD *)(a2 + v155) = v157;
              v154 |= (unint64_t)(v158 & 0x7F) << v152;
              if (v158 < 0)
              {
                v152 += 7;
                v16 = v153++ >= 9;
                if (v16)
                {
                  v159 = 0;
                  goto LABEL_574;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v159 = 0;
          else
            v159 = v154;
LABEL_574:
          objc_msgSend(a1, "setCountBigramPrefixMatchInAuthors:", v159);
          continue;
        case 0x16u:
          v160 = 0;
          v161 = 0;
          v162 = 0;
          while (2)
          {
            v163 = *v4;
            v164 = *(_QWORD *)(a2 + v163);
            v165 = v164 + 1;
            if (v164 == -1 || v165 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v166 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v164);
              *(_QWORD *)(a2 + v163) = v165;
              v162 |= (unint64_t)(v166 & 0x7F) << v160;
              if (v166 < 0)
              {
                v160 += 7;
                v16 = v161++ >= 9;
                if (v16)
                {
                  v167 = 0;
                  goto LABEL_579;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v167 = 0;
          else
            v167 = v162;
LABEL_579:
          objc_msgSend(a1, "setCountNgramPrefixMatchInAuthors:", v167);
          continue;
        case 0x17u:
          v168 = 0;
          v169 = 0;
          v170 = 0;
          while (2)
          {
            v171 = *v4;
            v172 = *(_QWORD *)(a2 + v171);
            v173 = v172 + 1;
            if (v172 == -1 || v173 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v174 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v172);
              *(_QWORD *)(a2 + v171) = v173;
              v170 |= (unint64_t)(v174 & 0x7F) << v168;
              if (v174 < 0)
              {
                v168 += 7;
                v16 = v169++ >= 9;
                if (v16)
                {
                  v175 = 0;
                  goto LABEL_584;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v175 = 0;
          else
            v175 = v170;
LABEL_584:
          objc_msgSend(a1, "setCountUnigramMatchInAuthorEmailAddresses:", v175);
          continue;
        case 0x18u:
          v176 = 0;
          v177 = 0;
          v178 = 0;
          while (2)
          {
            v179 = *v4;
            v180 = *(_QWORD *)(a2 + v179);
            v181 = v180 + 1;
            if (v180 == -1 || v181 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v182 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v180);
              *(_QWORD *)(a2 + v179) = v181;
              v178 |= (unint64_t)(v182 & 0x7F) << v176;
              if (v182 < 0)
              {
                v176 += 7;
                v16 = v177++ >= 9;
                if (v16)
                {
                  v183 = 0;
                  goto LABEL_589;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v183 = 0;
          else
            v183 = v178;
LABEL_589:
          objc_msgSend(a1, "setCountBigramMatchInAuthorEmailAddresses:", v183);
          continue;
        case 0x19u:
          v184 = 0;
          v185 = 0;
          v186 = 0;
          while (2)
          {
            v187 = *v4;
            v188 = *(_QWORD *)(a2 + v187);
            v189 = v188 + 1;
            if (v188 == -1 || v189 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v190 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v188);
              *(_QWORD *)(a2 + v187) = v189;
              v186 |= (unint64_t)(v190 & 0x7F) << v184;
              if (v190 < 0)
              {
                v184 += 7;
                v16 = v185++ >= 9;
                if (v16)
                {
                  v191 = 0;
                  goto LABEL_594;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v191 = 0;
          else
            v191 = v186;
LABEL_594:
          objc_msgSend(a1, "setCountNgramMatchInAuthorEmailAddresses:", v191);
          continue;
        case 0x1Au:
          v192 = 0;
          v193 = 0;
          v194 = 0;
          while (2)
          {
            v195 = *v4;
            v196 = *(_QWORD *)(a2 + v195);
            v197 = v196 + 1;
            if (v196 == -1 || v197 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v198 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v196);
              *(_QWORD *)(a2 + v195) = v197;
              v194 |= (unint64_t)(v198 & 0x7F) << v192;
              if (v198 < 0)
              {
                v192 += 7;
                v16 = v193++ >= 9;
                if (v16)
                {
                  v199 = 0;
                  goto LABEL_599;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v199 = 0;
          else
            v199 = v194;
LABEL_599:
          objc_msgSend(a1, "setCountUnigramPrefixMatchInAuthorEmailAddresses:", v199);
          continue;
        case 0x1Bu:
          v200 = 0;
          v201 = 0;
          v202 = 0;
          while (2)
          {
            v203 = *v4;
            v204 = *(_QWORD *)(a2 + v203);
            v205 = v204 + 1;
            if (v204 == -1 || v205 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v206 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v204);
              *(_QWORD *)(a2 + v203) = v205;
              v202 |= (unint64_t)(v206 & 0x7F) << v200;
              if (v206 < 0)
              {
                v200 += 7;
                v16 = v201++ >= 9;
                if (v16)
                {
                  v207 = 0;
                  goto LABEL_604;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v207 = 0;
          else
            v207 = v202;
LABEL_604:
          objc_msgSend(a1, "setCountBigramPrefixMatchInAuthorEmailAddresses:", v207);
          continue;
        case 0x1Cu:
          v208 = 0;
          v209 = 0;
          v210 = 0;
          while (2)
          {
            v211 = *v4;
            v212 = *(_QWORD *)(a2 + v211);
            v213 = v212 + 1;
            if (v212 == -1 || v213 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v214 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v212);
              *(_QWORD *)(a2 + v211) = v213;
              v210 |= (unint64_t)(v214 & 0x7F) << v208;
              if (v214 < 0)
              {
                v208 += 7;
                v16 = v209++ >= 9;
                if (v16)
                {
                  v215 = 0;
                  goto LABEL_609;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v215 = 0;
          else
            v215 = v210;
LABEL_609:
          objc_msgSend(a1, "setCountNgramPrefixMatchInAuthorEmailAddresses:", v215);
          continue;
        case 0x1Du:
          v216 = 0;
          v217 = 0;
          v218 = 0;
          while (2)
          {
            v219 = *v4;
            v220 = *(_QWORD *)(a2 + v219);
            v221 = v220 + 1;
            if (v220 == -1 || v221 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v222 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v220);
              *(_QWORD *)(a2 + v219) = v221;
              v218 |= (unint64_t)(v222 & 0x7F) << v216;
              if (v222 < 0)
              {
                v216 += 7;
                v16 = v217++ >= 9;
                if (v16)
                {
                  v223 = 0;
                  goto LABEL_614;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v223 = 0;
          else
            v223 = v218;
LABEL_614:
          objc_msgSend(a1, "setCountUnigramMatchInSubject:", v223);
          continue;
        case 0x1Eu:
          v224 = 0;
          v225 = 0;
          v226 = 0;
          while (2)
          {
            v227 = *v4;
            v228 = *(_QWORD *)(a2 + v227);
            v229 = v228 + 1;
            if (v228 == -1 || v229 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v230 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v228);
              *(_QWORD *)(a2 + v227) = v229;
              v226 |= (unint64_t)(v230 & 0x7F) << v224;
              if (v230 < 0)
              {
                v224 += 7;
                v16 = v225++ >= 9;
                if (v16)
                {
                  v231 = 0;
                  goto LABEL_619;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v231 = 0;
          else
            v231 = v226;
LABEL_619:
          objc_msgSend(a1, "setCountBigramMatchInSubject:", v231);
          continue;
        case 0x1Fu:
          v232 = 0;
          v233 = 0;
          v234 = 0;
          while (2)
          {
            v235 = *v4;
            v236 = *(_QWORD *)(a2 + v235);
            v237 = v236 + 1;
            if (v236 == -1 || v237 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v238 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v236);
              *(_QWORD *)(a2 + v235) = v237;
              v234 |= (unint64_t)(v238 & 0x7F) << v232;
              if (v238 < 0)
              {
                v232 += 7;
                v16 = v233++ >= 9;
                if (v16)
                {
                  v239 = 0;
                  goto LABEL_624;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v239 = 0;
          else
            v239 = v234;
LABEL_624:
          objc_msgSend(a1, "setCountNgramMatchInSubject:", v239);
          continue;
        case 0x20u:
          v240 = 0;
          v241 = 0;
          v242 = 0;
          while (2)
          {
            v243 = *v4;
            v244 = *(_QWORD *)(a2 + v243);
            v245 = v244 + 1;
            if (v244 == -1 || v245 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v246 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v244);
              *(_QWORD *)(a2 + v243) = v245;
              v242 |= (unint64_t)(v246 & 0x7F) << v240;
              if (v246 < 0)
              {
                v240 += 7;
                v16 = v241++ >= 9;
                if (v16)
                {
                  v247 = 0;
                  goto LABEL_629;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v247 = 0;
          else
            v247 = v242;
LABEL_629:
          objc_msgSend(a1, "setCountUnigramPrefixMatchInSubject:", v247);
          continue;
        case 0x21u:
          v248 = 0;
          v249 = 0;
          v250 = 0;
          while (2)
          {
            v251 = *v4;
            v252 = *(_QWORD *)(a2 + v251);
            v253 = v252 + 1;
            if (v252 == -1 || v253 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v254 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v252);
              *(_QWORD *)(a2 + v251) = v253;
              v250 |= (unint64_t)(v254 & 0x7F) << v248;
              if (v254 < 0)
              {
                v248 += 7;
                v16 = v249++ >= 9;
                if (v16)
                {
                  v255 = 0;
                  goto LABEL_634;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v255 = 0;
          else
            v255 = v250;
LABEL_634:
          objc_msgSend(a1, "setCountBigramPrefixMatchInSubject:", v255);
          continue;
        case 0x22u:
          v256 = 0;
          v257 = 0;
          v258 = 0;
          while (2)
          {
            v259 = *v4;
            v260 = *(_QWORD *)(a2 + v259);
            v261 = v260 + 1;
            if (v260 == -1 || v261 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v262 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v260);
              *(_QWORD *)(a2 + v259) = v261;
              v258 |= (unint64_t)(v262 & 0x7F) << v256;
              if (v262 < 0)
              {
                v256 += 7;
                v16 = v257++ >= 9;
                if (v16)
                {
                  v263 = 0;
                  goto LABEL_639;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v263 = 0;
          else
            v263 = v258;
LABEL_639:
          objc_msgSend(a1, "setCountNgramPrefixMatchInSubject:", v263);
          continue;
        case 0x23u:
          v264 = 0;
          v265 = 0;
          v266 = 0;
          while (2)
          {
            v267 = *v4;
            v268 = *(_QWORD *)(a2 + v267);
            v269 = v268 + 1;
            if (v268 == -1 || v269 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v270 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v268);
              *(_QWORD *)(a2 + v267) = v269;
              v266 |= (unint64_t)(v270 & 0x7F) << v264;
              if (v270 < 0)
              {
                v264 += 7;
                v16 = v265++ >= 9;
                if (v16)
                {
                  v271 = 0;
                  goto LABEL_644;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v271 = 0;
          else
            v271 = v266;
LABEL_644:
          objc_msgSend(a1, "setCountUnigramMatchInTextContent:", v271);
          continue;
        case 0x24u:
          v272 = 0;
          v273 = 0;
          v274 = 0;
          while (2)
          {
            v275 = *v4;
            v276 = *(_QWORD *)(a2 + v275);
            v277 = v276 + 1;
            if (v276 == -1 || v277 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v278 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v276);
              *(_QWORD *)(a2 + v275) = v277;
              v274 |= (unint64_t)(v278 & 0x7F) << v272;
              if (v278 < 0)
              {
                v272 += 7;
                v16 = v273++ >= 9;
                if (v16)
                {
                  v279 = 0;
                  goto LABEL_649;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v279 = 0;
          else
            v279 = v274;
LABEL_649:
          objc_msgSend(a1, "setCountBigramMatchInTextContent:", v279);
          continue;
        case 0x25u:
          v280 = 0;
          v281 = 0;
          v282 = 0;
          while (2)
          {
            v283 = *v4;
            v284 = *(_QWORD *)(a2 + v283);
            v285 = v284 + 1;
            if (v284 == -1 || v285 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v286 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v284);
              *(_QWORD *)(a2 + v283) = v285;
              v282 |= (unint64_t)(v286 & 0x7F) << v280;
              if (v286 < 0)
              {
                v280 += 7;
                v16 = v281++ >= 9;
                if (v16)
                {
                  v287 = 0;
                  goto LABEL_654;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v287 = 0;
          else
            v287 = v282;
LABEL_654:
          objc_msgSend(a1, "setCountNgramMatchInTextContent:", v287);
          continue;
        case 0x26u:
          v288 = 0;
          v289 = 0;
          v290 = 0;
          while (2)
          {
            v291 = *v4;
            v292 = *(_QWORD *)(a2 + v291);
            v293 = v292 + 1;
            if (v292 == -1 || v293 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v294 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v292);
              *(_QWORD *)(a2 + v291) = v293;
              v290 |= (unint64_t)(v294 & 0x7F) << v288;
              if (v294 < 0)
              {
                v288 += 7;
                v16 = v289++ >= 9;
                if (v16)
                {
                  v295 = 0;
                  goto LABEL_659;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v295 = 0;
          else
            v295 = v290;
LABEL_659:
          objc_msgSend(a1, "setCountUnigramPrefixMatchInTextContent:", v295);
          continue;
        case 0x27u:
          v296 = 0;
          v297 = 0;
          v298 = 0;
          while (2)
          {
            v299 = *v4;
            v300 = *(_QWORD *)(a2 + v299);
            v301 = v300 + 1;
            if (v300 == -1 || v301 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v302 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v300);
              *(_QWORD *)(a2 + v299) = v301;
              v298 |= (unint64_t)(v302 & 0x7F) << v296;
              if (v302 < 0)
              {
                v296 += 7;
                v16 = v297++ >= 9;
                if (v16)
                {
                  v303 = 0;
                  goto LABEL_664;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v303 = 0;
          else
            v303 = v298;
LABEL_664:
          objc_msgSend(a1, "setCountBigramPrefixMatchInTextContent:", v303);
          continue;
        case 0x28u:
          v304 = 0;
          v305 = 0;
          v306 = 0;
          while (2)
          {
            v307 = *v4;
            v308 = *(_QWORD *)(a2 + v307);
            v309 = v308 + 1;
            if (v308 == -1 || v309 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v310 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v308);
              *(_QWORD *)(a2 + v307) = v309;
              v306 |= (unint64_t)(v310 & 0x7F) << v304;
              if (v310 < 0)
              {
                v304 += 7;
                v16 = v305++ >= 9;
                if (v16)
                {
                  v311 = 0;
                  goto LABEL_669;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v311 = 0;
          else
            v311 = v306;
LABEL_669:
          objc_msgSend(a1, "setCountNgramPrefixMatchInTextContent:", v311);
          continue;
        case 0x29u:
          v312 = 0;
          v313 = 0;
          v314 = 0;
          while (2)
          {
            v315 = *v4;
            v316 = *(_QWORD *)(a2 + v315);
            v317 = v316 + 1;
            if (v316 == -1 || v317 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v318 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v316);
              *(_QWORD *)(a2 + v315) = v317;
              v314 |= (unint64_t)(v318 & 0x7F) << v312;
              if (v318 < 0)
              {
                v312 += 7;
                v16 = v313++ >= 9;
                if (v16)
                {
                  v319 = 0;
                  goto LABEL_674;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v319 = 0;
          else
            v319 = v314;
LABEL_674:
          objc_msgSend(a1, "setCountUnigramMatchInRecipients:", v319);
          continue;
        case 0x2Au:
          v320 = 0;
          v321 = 0;
          v322 = 0;
          while (2)
          {
            v323 = *v4;
            v324 = *(_QWORD *)(a2 + v323);
            v325 = v324 + 1;
            if (v324 == -1 || v325 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v326 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v324);
              *(_QWORD *)(a2 + v323) = v325;
              v322 |= (unint64_t)(v326 & 0x7F) << v320;
              if (v326 < 0)
              {
                v320 += 7;
                v16 = v321++ >= 9;
                if (v16)
                {
                  v327 = 0;
                  goto LABEL_679;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v327 = 0;
          else
            v327 = v322;
LABEL_679:
          objc_msgSend(a1, "setCountBigramMatchInRecipients:", v327);
          continue;
        case 0x2Bu:
          v328 = 0;
          v329 = 0;
          v330 = 0;
          while (2)
          {
            v331 = *v4;
            v332 = *(_QWORD *)(a2 + v331);
            v333 = v332 + 1;
            if (v332 == -1 || v333 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v334 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v332);
              *(_QWORD *)(a2 + v331) = v333;
              v330 |= (unint64_t)(v334 & 0x7F) << v328;
              if (v334 < 0)
              {
                v328 += 7;
                v16 = v329++ >= 9;
                if (v16)
                {
                  v335 = 0;
                  goto LABEL_684;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v335 = 0;
          else
            v335 = v330;
LABEL_684:
          objc_msgSend(a1, "setCountNgramMatchInRecipients:", v335);
          continue;
        case 0x2Cu:
          v336 = 0;
          v337 = 0;
          v338 = 0;
          while (2)
          {
            v339 = *v4;
            v340 = *(_QWORD *)(a2 + v339);
            v341 = v340 + 1;
            if (v340 == -1 || v341 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v342 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v340);
              *(_QWORD *)(a2 + v339) = v341;
              v338 |= (unint64_t)(v342 & 0x7F) << v336;
              if (v342 < 0)
              {
                v336 += 7;
                v16 = v337++ >= 9;
                if (v16)
                {
                  v343 = 0;
                  goto LABEL_689;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v343 = 0;
          else
            v343 = v338;
LABEL_689:
          objc_msgSend(a1, "setCountUnigramPrefixMatchInRecipients:", v343);
          continue;
        case 0x2Du:
          v344 = 0;
          v345 = 0;
          v346 = 0;
          while (2)
          {
            v347 = *v4;
            v348 = *(_QWORD *)(a2 + v347);
            v349 = v348 + 1;
            if (v348 == -1 || v349 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v350 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v348);
              *(_QWORD *)(a2 + v347) = v349;
              v346 |= (unint64_t)(v350 & 0x7F) << v344;
              if (v350 < 0)
              {
                v344 += 7;
                v16 = v345++ >= 9;
                if (v16)
                {
                  v351 = 0;
                  goto LABEL_694;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v351 = 0;
          else
            v351 = v346;
LABEL_694:
          objc_msgSend(a1, "setCountBigramPrefixMatchInRecipients:", v351);
          continue;
        case 0x2Eu:
          v352 = 0;
          v353 = 0;
          v354 = 0;
          while (2)
          {
            v355 = *v4;
            v356 = *(_QWORD *)(a2 + v355);
            v357 = v356 + 1;
            if (v356 == -1 || v357 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v358 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v356);
              *(_QWORD *)(a2 + v355) = v357;
              v354 |= (unint64_t)(v358 & 0x7F) << v352;
              if (v358 < 0)
              {
                v352 += 7;
                v16 = v353++ >= 9;
                if (v16)
                {
                  v359 = 0;
                  goto LABEL_699;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v359 = 0;
          else
            v359 = v354;
LABEL_699:
          objc_msgSend(a1, "setCountNgramPrefixMatchInRecipients:", v359);
          continue;
        case 0x2Fu:
          v360 = 0;
          v361 = 0;
          v362 = 0;
          while (2)
          {
            v363 = *v4;
            v364 = *(_QWORD *)(a2 + v363);
            v365 = v364 + 1;
            if (v364 == -1 || v365 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v366 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v364);
              *(_QWORD *)(a2 + v363) = v365;
              v362 |= (unint64_t)(v366 & 0x7F) << v360;
              if (v366 < 0)
              {
                v360 += 7;
                v16 = v361++ >= 9;
                if (v16)
                {
                  v367 = 0;
                  goto LABEL_704;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v367 = 0;
          else
            v367 = v362;
LABEL_704:
          objc_msgSend(a1, "setCountUnigramMatchInRecipientEmailAddresses:", v367);
          continue;
        case 0x30u:
          v368 = 0;
          v369 = 0;
          v370 = 0;
          while (2)
          {
            v371 = *v4;
            v372 = *(_QWORD *)(a2 + v371);
            v373 = v372 + 1;
            if (v372 == -1 || v373 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v374 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v372);
              *(_QWORD *)(a2 + v371) = v373;
              v370 |= (unint64_t)(v374 & 0x7F) << v368;
              if (v374 < 0)
              {
                v368 += 7;
                v16 = v369++ >= 9;
                if (v16)
                {
                  v375 = 0;
                  goto LABEL_709;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v375 = 0;
          else
            v375 = v370;
LABEL_709:
          objc_msgSend(a1, "setCountBigramMatchInRecipientEmailAddresses:", v375);
          continue;
        case 0x31u:
          v376 = 0;
          v377 = 0;
          v378 = 0;
          while (2)
          {
            v379 = *v4;
            v380 = *(_QWORD *)(a2 + v379);
            v381 = v380 + 1;
            if (v380 == -1 || v381 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v382 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v380);
              *(_QWORD *)(a2 + v379) = v381;
              v378 |= (unint64_t)(v382 & 0x7F) << v376;
              if (v382 < 0)
              {
                v376 += 7;
                v16 = v377++ >= 9;
                if (v16)
                {
                  v383 = 0;
                  goto LABEL_714;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v383 = 0;
          else
            v383 = v378;
LABEL_714:
          objc_msgSend(a1, "setCountNgramMatchInRecipientEmailAddresses:", v383);
          continue;
        case 0x32u:
          v384 = 0;
          v385 = 0;
          v386 = 0;
          while (2)
          {
            v387 = *v4;
            v388 = *(_QWORD *)(a2 + v387);
            v389 = v388 + 1;
            if (v388 == -1 || v389 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v390 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v388);
              *(_QWORD *)(a2 + v387) = v389;
              v386 |= (unint64_t)(v390 & 0x7F) << v384;
              if (v390 < 0)
              {
                v384 += 7;
                v16 = v385++ >= 9;
                if (v16)
                {
                  v391 = 0;
                  goto LABEL_719;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v391 = 0;
          else
            v391 = v386;
LABEL_719:
          objc_msgSend(a1, "setCountUnigramPrefixMatchInRecipientEmailAddresses:", v391);
          continue;
        case 0x33u:
          v392 = 0;
          v393 = 0;
          v394 = 0;
          while (2)
          {
            v395 = *v4;
            v396 = *(_QWORD *)(a2 + v395);
            v397 = v396 + 1;
            if (v396 == -1 || v397 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v398 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v396);
              *(_QWORD *)(a2 + v395) = v397;
              v394 |= (unint64_t)(v398 & 0x7F) << v392;
              if (v398 < 0)
              {
                v392 += 7;
                v16 = v393++ >= 9;
                if (v16)
                {
                  v399 = 0;
                  goto LABEL_724;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v399 = 0;
          else
            v399 = v394;
LABEL_724:
          objc_msgSend(a1, "setCountBigramPrefixMatchInRecipientEmailAddresses:", v399);
          continue;
        case 0x34u:
          v400 = 0;
          v401 = 0;
          v402 = 0;
          while (2)
          {
            v403 = *v4;
            v404 = *(_QWORD *)(a2 + v403);
            v405 = v404 + 1;
            if (v404 == -1 || v405 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v406 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v404);
              *(_QWORD *)(a2 + v403) = v405;
              v402 |= (unint64_t)(v406 & 0x7F) << v400;
              if (v406 < 0)
              {
                v400 += 7;
                v16 = v401++ >= 9;
                if (v16)
                {
                  v407 = 0;
                  goto LABEL_729;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v407 = 0;
          else
            v407 = v402;
LABEL_729:
          objc_msgSend(a1, "setCountNgramPrefixMatchInRecipientEmailAddresses:", v407);
          continue;
        case 0x35u:
          v408 = 0;
          v409 = 0;
          v410 = 0;
          while (2)
          {
            v411 = *v4;
            v412 = *(_QWORD *)(a2 + v411);
            v413 = v412 + 1;
            if (v412 == -1 || v413 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v414 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v412);
              *(_QWORD *)(a2 + v411) = v413;
              v410 |= (unint64_t)(v414 & 0x7F) << v408;
              if (v414 < 0)
              {
                v408 += 7;
                v16 = v409++ >= 9;
                if (v16)
                {
                  v415 = 0;
                  goto LABEL_734;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v415 = 0;
          else
            v415 = v410;
LABEL_734:
          objc_msgSend(a1, "setCountUnigramMatchInEmailAddresses:", v415);
          continue;
        case 0x36u:
          v416 = 0;
          v417 = 0;
          v418 = 0;
          while (2)
          {
            v419 = *v4;
            v420 = *(_QWORD *)(a2 + v419);
            v421 = v420 + 1;
            if (v420 == -1 || v421 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v422 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v420);
              *(_QWORD *)(a2 + v419) = v421;
              v418 |= (unint64_t)(v422 & 0x7F) << v416;
              if (v422 < 0)
              {
                v416 += 7;
                v16 = v417++ >= 9;
                if (v16)
                {
                  v423 = 0;
                  goto LABEL_739;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v423 = 0;
          else
            v423 = v418;
LABEL_739:
          objc_msgSend(a1, "setCountBigramMatchInEmailAddresses:", v423);
          continue;
        case 0x37u:
          v424 = 0;
          v425 = 0;
          v426 = 0;
          while (2)
          {
            v427 = *v4;
            v428 = *(_QWORD *)(a2 + v427);
            v429 = v428 + 1;
            if (v428 == -1 || v429 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v430 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v428);
              *(_QWORD *)(a2 + v427) = v429;
              v426 |= (unint64_t)(v430 & 0x7F) << v424;
              if (v430 < 0)
              {
                v424 += 7;
                v16 = v425++ >= 9;
                if (v16)
                {
                  v431 = 0;
                  goto LABEL_744;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v431 = 0;
          else
            v431 = v426;
LABEL_744:
          objc_msgSend(a1, "setCountNgramMatchInEmailAddresses:", v431);
          continue;
        case 0x38u:
          v432 = 0;
          v433 = 0;
          v434 = 0;
          while (2)
          {
            v435 = *v4;
            v436 = *(_QWORD *)(a2 + v435);
            v437 = v436 + 1;
            if (v436 == -1 || v437 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v438 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v436);
              *(_QWORD *)(a2 + v435) = v437;
              v434 |= (unint64_t)(v438 & 0x7F) << v432;
              if (v438 < 0)
              {
                v432 += 7;
                v16 = v433++ >= 9;
                if (v16)
                {
                  v439 = 0;
                  goto LABEL_749;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v439 = 0;
          else
            v439 = v434;
LABEL_749:
          objc_msgSend(a1, "setCountUnigramPrefixMatchInEmailAddresses:", v439);
          continue;
        case 0x39u:
          v440 = 0;
          v441 = 0;
          v442 = 0;
          while (2)
          {
            v443 = *v4;
            v444 = *(_QWORD *)(a2 + v443);
            v445 = v444 + 1;
            if (v444 == -1 || v445 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v446 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v444);
              *(_QWORD *)(a2 + v443) = v445;
              v442 |= (unint64_t)(v446 & 0x7F) << v440;
              if (v446 < 0)
              {
                v440 += 7;
                v16 = v441++ >= 9;
                if (v16)
                {
                  v447 = 0;
                  goto LABEL_754;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v447 = 0;
          else
            v447 = v442;
LABEL_754:
          objc_msgSend(a1, "setCountBigramPrefixMatchInEmailAddresses:", v447);
          continue;
        case 0x3Au:
          v448 = 0;
          v449 = 0;
          v450 = 0;
          while (2)
          {
            v451 = *v4;
            v452 = *(_QWORD *)(a2 + v451);
            v453 = v452 + 1;
            if (v452 == -1 || v453 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v454 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v452);
              *(_QWORD *)(a2 + v451) = v453;
              v450 |= (unint64_t)(v454 & 0x7F) << v448;
              if (v454 < 0)
              {
                v448 += 7;
                v16 = v449++ >= 9;
                if (v16)
                {
                  v455 = 0;
                  goto LABEL_759;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v455 = 0;
          else
            v455 = v450;
LABEL_759:
          objc_msgSend(a1, "setCountNgramPrefixMatchInEmailAddresses:", v455);
          continue;
        case 0x3Bu:
          v456 = 0;
          v457 = 0;
          v458 = 0;
          while (2)
          {
            v459 = *v4;
            v460 = *(_QWORD *)(a2 + v459);
            v461 = v460 + 1;
            if (v460 == -1 || v461 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v462 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v460);
              *(_QWORD *)(a2 + v459) = v461;
              v458 |= (unint64_t)(v462 & 0x7F) << v456;
              if (v462 < 0)
              {
                v456 += 7;
                v16 = v457++ >= 9;
                if (v16)
                {
                  v463 = 0;
                  goto LABEL_764;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v463 = 0;
          else
            v463 = v458;
LABEL_764:
          objc_msgSend(a1, "setCountUnigramMatchInAttachmentTypes:", v463);
          continue;
        case 0x3Cu:
          v464 = 0;
          v465 = 0;
          v466 = 0;
          while (2)
          {
            v467 = *v4;
            v468 = *(_QWORD *)(a2 + v467);
            v469 = v468 + 1;
            if (v468 == -1 || v469 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v470 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v468);
              *(_QWORD *)(a2 + v467) = v469;
              v466 |= (unint64_t)(v470 & 0x7F) << v464;
              if (v470 < 0)
              {
                v464 += 7;
                v16 = v465++ >= 9;
                if (v16)
                {
                  v471 = 0;
                  goto LABEL_769;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v471 = 0;
          else
            v471 = v466;
LABEL_769:
          objc_msgSend(a1, "setCountBigramMatchInAttachmentTypes:", v471);
          continue;
        case 0x3Du:
          v472 = 0;
          v473 = 0;
          v474 = 0;
          while (2)
          {
            v475 = *v4;
            v476 = *(_QWORD *)(a2 + v475);
            v477 = v476 + 1;
            if (v476 == -1 || v477 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v478 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v476);
              *(_QWORD *)(a2 + v475) = v477;
              v474 |= (unint64_t)(v478 & 0x7F) << v472;
              if (v478 < 0)
              {
                v472 += 7;
                v16 = v473++ >= 9;
                if (v16)
                {
                  v479 = 0;
                  goto LABEL_774;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v479 = 0;
          else
            v479 = v474;
LABEL_774:
          objc_msgSend(a1, "setCountNgramMatchInAttachmentTypes:", v479);
          continue;
        case 0x3Eu:
          v480 = 0;
          v481 = 0;
          v482 = 0;
          while (2)
          {
            v483 = *v4;
            v484 = *(_QWORD *)(a2 + v483);
            v485 = v484 + 1;
            if (v484 == -1 || v485 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v486 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v484);
              *(_QWORD *)(a2 + v483) = v485;
              v482 |= (unint64_t)(v486 & 0x7F) << v480;
              if (v486 < 0)
              {
                v480 += 7;
                v16 = v481++ >= 9;
                if (v16)
                {
                  v487 = 0;
                  goto LABEL_779;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v487 = 0;
          else
            v487 = v482;
LABEL_779:
          objc_msgSend(a1, "setCountUnigramPrefixMatchInAttachmentTypes:", v487);
          continue;
        case 0x3Fu:
          v488 = 0;
          v489 = 0;
          v490 = 0;
          while (2)
          {
            v491 = *v4;
            v492 = *(_QWORD *)(a2 + v491);
            v493 = v492 + 1;
            if (v492 == -1 || v493 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v494 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v492);
              *(_QWORD *)(a2 + v491) = v493;
              v490 |= (unint64_t)(v494 & 0x7F) << v488;
              if (v494 < 0)
              {
                v488 += 7;
                v16 = v489++ >= 9;
                if (v16)
                {
                  v495 = 0;
                  goto LABEL_784;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v495 = 0;
          else
            v495 = v490;
LABEL_784:
          objc_msgSend(a1, "setCountBigramPrefixMatchInAttachmentTypes:", v495);
          continue;
        case 0x40u:
          v496 = 0;
          v497 = 0;
          v498 = 0;
          while (2)
          {
            v499 = *v4;
            v500 = *(_QWORD *)(a2 + v499);
            v501 = v500 + 1;
            if (v500 == -1 || v501 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v502 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v500);
              *(_QWORD *)(a2 + v499) = v501;
              v498 |= (unint64_t)(v502 & 0x7F) << v496;
              if (v502 < 0)
              {
                v496 += 7;
                v16 = v497++ >= 9;
                if (v16)
                {
                  v503 = 0;
                  goto LABEL_789;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v503 = 0;
          else
            v503 = v498;
LABEL_789:
          objc_msgSend(a1, "setCountNgramPrefixMatchInAttachmentTypes:", v503);
          continue;
        case 0x41u:
          v504 = 0;
          v505 = 0;
          v506 = 0;
          while (2)
          {
            v507 = *v4;
            v508 = *(_QWORD *)(a2 + v507);
            v509 = v508 + 1;
            if (v508 == -1 || v509 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v510 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v508);
              *(_QWORD *)(a2 + v507) = v509;
              v506 |= (unint64_t)(v510 & 0x7F) << v504;
              if (v510 < 0)
              {
                v504 += 7;
                v16 = v505++ >= 9;
                if (v16)
                {
                  v511 = 0;
                  goto LABEL_794;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v511 = 0;
          else
            v511 = v506;
LABEL_794:
          objc_msgSend(a1, "setCountUnigramMatchInAttachmentNames:", v511);
          continue;
        case 0x42u:
          v512 = 0;
          v513 = 0;
          v514 = 0;
          while (2)
          {
            v515 = *v4;
            v516 = *(_QWORD *)(a2 + v515);
            v517 = v516 + 1;
            if (v516 == -1 || v517 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v518 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v516);
              *(_QWORD *)(a2 + v515) = v517;
              v514 |= (unint64_t)(v518 & 0x7F) << v512;
              if (v518 < 0)
              {
                v512 += 7;
                v16 = v513++ >= 9;
                if (v16)
                {
                  v519 = 0;
                  goto LABEL_799;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v519 = 0;
          else
            v519 = v514;
LABEL_799:
          objc_msgSend(a1, "setCountBigramMatchInAttachmentNames:", v519);
          continue;
        case 0x43u:
          v520 = 0;
          v521 = 0;
          v522 = 0;
          while (2)
          {
            v523 = *v4;
            v524 = *(_QWORD *)(a2 + v523);
            v525 = v524 + 1;
            if (v524 == -1 || v525 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v526 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v524);
              *(_QWORD *)(a2 + v523) = v525;
              v522 |= (unint64_t)(v526 & 0x7F) << v520;
              if (v526 < 0)
              {
                v520 += 7;
                v16 = v521++ >= 9;
                if (v16)
                {
                  v527 = 0;
                  goto LABEL_804;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v527 = 0;
          else
            v527 = v522;
LABEL_804:
          objc_msgSend(a1, "setCountNgramMatchInAttachmentNames:", v527);
          continue;
        case 0x44u:
          v528 = 0;
          v529 = 0;
          v530 = 0;
          while (2)
          {
            v531 = *v4;
            v532 = *(_QWORD *)(a2 + v531);
            v533 = v532 + 1;
            if (v532 == -1 || v533 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v534 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v532);
              *(_QWORD *)(a2 + v531) = v533;
              v530 |= (unint64_t)(v534 & 0x7F) << v528;
              if (v534 < 0)
              {
                v528 += 7;
                v16 = v529++ >= 9;
                if (v16)
                {
                  v535 = 0;
                  goto LABEL_809;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v535 = 0;
          else
            v535 = v530;
LABEL_809:
          objc_msgSend(a1, "setCountUnigramPrefixMatchInAttachmentNames:", v535);
          continue;
        case 0x45u:
          v536 = 0;
          v537 = 0;
          v538 = 0;
          while (2)
          {
            v539 = *v4;
            v540 = *(_QWORD *)(a2 + v539);
            v541 = v540 + 1;
            if (v540 == -1 || v541 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v542 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v540);
              *(_QWORD *)(a2 + v539) = v541;
              v538 |= (unint64_t)(v542 & 0x7F) << v536;
              if (v542 < 0)
              {
                v536 += 7;
                v16 = v537++ >= 9;
                if (v16)
                {
                  v543 = 0;
                  goto LABEL_814;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v543 = 0;
          else
            v543 = v538;
LABEL_814:
          objc_msgSend(a1, "setCountBigramPrefixMatchInAttachmentNames:", v543);
          continue;
        case 0x46u:
          v544 = 0;
          v545 = 0;
          v546 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v547 = *v4;
        v548 = *(_QWORD *)(a2 + v547);
        v549 = v548 + 1;
        if (v548 == -1 || v549 > *(_QWORD *)(a2 + *v5))
          break;
        v550 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v548);
        *(_QWORD *)(a2 + v547) = v549;
        v546 |= (unint64_t)(v550 & 0x7F) << v544;
        if ((v550 & 0x80) == 0)
          goto LABEL_816;
        v544 += 7;
        v16 = v545++ >= 9;
        if (v16)
        {
          v551 = 0;
          goto LABEL_819;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_816:
      v551 = *(_BYTE *)(a2 + *v6) ? 0 : v546;
LABEL_819:
      objc_msgSend(a1, "setCountNgramPrefixMatchInAttachmentNames:", v551);
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPMailResultDetailsForFeedbackReadFrom(void *a1, uint64_t a2, double a3)
{
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  unint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t result;

  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v8 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)(a2 + v12);
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        v16 = v10++ >= 9;
        if (v16)
        {
          v11 = 0;
          v17 = *v6;
          v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *v6;
      v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(_BYTE *)(a2 + v17))
        v11 = 0;
LABEL_14:
      if (v18 || (v11 & 7) == 4)
        break;
      v20 = v11 >> 3;
      if ((v11 >> 3) == 1)
      {
        v29 = 0;
        v30 = 0;
        v31 = 0;
        while (1)
        {
          v32 = *v4;
          v33 = *(_QWORD *)(a2 + v32);
          v34 = v33 + 1;
          if (v33 == -1 || v34 > *(_QWORD *)(a2 + *v5))
            break;
          v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v33);
          *(_QWORD *)(a2 + v32) = v34;
          v31 |= (unint64_t)(v35 & 0x7F) << v29;
          if ((v35 & 0x80) == 0)
            goto LABEL_46;
          v29 += 7;
          v16 = v30++ >= 9;
          if (v16)
          {
            v36 = 0;
            goto LABEL_49;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_46:
        v36 = *(_BYTE *)(a2 + *v6) ? 0 : v31;
LABEL_49:
        objc_msgSend(a1, "setDataSources:", v36);
      }
      else if ((_DWORD)v20 == 2)
      {
        v37 = *v4;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFFBLL && v38 + 4 <= *(_QWORD *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(a2 + *v8) + v38);
          *(_QWORD *)(a2 + v37) = v38 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v17) = 1;
          LODWORD(a3) = 0;
        }
        objc_msgSend(a1, "setSuggestionScore:", a3);
      }
      else if ((_DWORD)v20 == 3)
      {
        v21 = 0;
        v22 = 0;
        v23 = 0;
        while (1)
        {
          v24 = *v4;
          v25 = *(_QWORD *)(a2 + v24);
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v5))
            break;
          v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v25);
          *(_QWORD *)(a2 + v24) = v26;
          v23 |= (unint64_t)(v27 & 0x7F) << v21;
          if ((v27 & 0x80) == 0)
            goto LABEL_41;
          v21 += 7;
          v16 = v22++ >= 9;
          if (v16)
          {
            v28 = 0;
            goto LABEL_44;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_41:
        v28 = *(_BYTE *)(a2 + *v6) ? 0 : v23;
LABEL_44:
        objc_msgSend(a1, "setSkgMegadomeSpotlightIndexEntries:", v28);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t _CPSafariAttributesReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_29;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_32;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        v25 = *(_BYTE *)(a2 + *v5) ? 0 : v20;
LABEL_32:
        objc_msgSend(a1, "setHideReason:", v25);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPPhotosAggregatedInfoReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (1)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
            break;
          v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
          *(_QWORD *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0)
            goto LABEL_50;
          v27 += 7;
          v15 = v28++ >= 9;
          if (v15)
          {
            v34 = 0;
            goto LABEL_53;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_50:
        v34 = *(_BYTE *)(a2 + *v5) ? 0 : v29;
LABEL_53:
        objc_msgSend(a1, "setTotalNumberOfAssets:", v34);
      }
      else if ((_DWORD)v18 == 2)
      {
        v35 = 0;
        v36 = 0;
        v37 = 0;
        while (1)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
          *(_QWORD *)(a2 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0)
            goto LABEL_55;
          v35 += 7;
          v15 = v36++ >= 9;
          if (v15)
          {
            v42 = 0;
            goto LABEL_58;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_55:
        v42 = *(_BYTE *)(a2 + *v5) ? 0 : v37;
LABEL_58:
        objc_msgSend(a1, "setTotalNumberOfEmbeddingMatchedAssets:", v42);
      }
      else if ((_DWORD)v18 == 3)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_45;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_48;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        v26 = *(_BYTE *)(a2 + *v5) ? 0 : v21;
LABEL_48:
        objc_msgSend(a1, "setTotalNumberOfMetadataMatchedAssets:", v26);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPValueReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  double v30;
  _CPStruct *v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *v5;
        v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *v5;
    v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(_BYTE *)(a2 + v16))
      v10 = 0;
LABEL_14:
    if (v17 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_48;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            v26 = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_48:
        if (*(_BYTE *)(a2 + *v5))
          v26 = 0;
        else
          v26 = v21;
LABEL_51:
        objc_msgSend(a1, "setNull_value:", v26);
        goto LABEL_58;
      case 2u:
        v28 = *v3;
        v29 = *(_QWORD *)(a2 + v28);
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v30 = *(double *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v30 = 0.0;
        }
        objc_msgSend(a1, "setNumber_value:", v30);
        goto LABEL_58;
      case 3u:
        PBReaderReadString();
        v31 = (_CPStruct *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setString_value:", v31);
        goto LABEL_46;
      case 4u:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v37;
            v34 |= (unint64_t)(v38 & 0x7F) << v32;
            if (v38 < 0)
            {
              v32 += 7;
              v15 = v33++ >= 9;
              if (v15)
              {
                v34 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v34 = 0;
LABEL_55:
        objc_msgSend(a1, "setBool_value:", v34 != 0);
        goto LABEL_58;
      case 5u:
        v31 = objc_alloc_init(_CPStruct);
        if (!PBReaderPlaceMark() || (_CPStructReadFrom(v31, a2) & 1) == 0)
          goto LABEL_60;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStruct_value:", v31, 0, 0);
        goto LABEL_46;
      case 6u:
        v31 = objc_alloc_init(_CPListValue);
        if (PBReaderPlaceMark() && (_CPListValueReadFrom(v31, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setList_value:", v31, 0, 0);
LABEL_46:

LABEL_58:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_60:

        return 0;
      case 7u:
        PBReaderReadData();
        v31 = (_CPStruct *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setBytes_value:", v31);
        goto LABEL_46;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_58;
    }
  }
}

uint64_t _CPListValueReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  _CPValue *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v18 = objc_alloc_init(_CPValue);
        if (!PBReaderPlaceMark() || !_CPValueReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v18)
          objc_msgSend(a1, "addValues:", v18, 0, 0);

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPRangeReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        while (1)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v4))
            break;
          v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
          *(_QWORD *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0)
            goto LABEL_42;
          v26 += 7;
          v15 = v27++ >= 9;
          if (v15)
          {
            v33 = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_42:
        v33 = *(_BYTE *)(a2 + *v5) ? 0 : v28;
LABEL_45:
        objc_msgSend(a1, "setLocation:", v33);
      }
      else if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_37;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_40;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        v25 = *(_BYTE *)(a2 + *v5) ? 0 : v20;
LABEL_40:
        objc_msgSend(a1, "setLength:", v25);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPSearchSuggestionForFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  void *v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  double v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *v5;
          v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *v5;
      v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(_BYTE *)(a2 + v16))
        v10 = 0;
LABEL_14:
      if (v17 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setIdentifier:", v19);
          goto LABEL_36;
        case 2u:
          PBReaderReadString();
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setSuggestion:", v19);
          goto LABEL_36;
        case 3u:
          PBReaderReadString();
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setQuery:", v19);
          goto LABEL_36;
        case 4u:
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v23 = *(double *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v16) = 1;
            v23 = 0.0;
          }
          objc_msgSend(a1, "setScore:", v23);
          continue;
        case 5u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          break;
        case 6u:
          PBReaderReadString();
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setFbr:", v19);
          goto LABEL_36;
        case 7u:
          PBReaderReadString();
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setTopicIdentifier:", v19);
LABEL_36:

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v27 = *v3;
        v28 = *(_QWORD *)(a2 + v27);
        v29 = v28 + 1;
        if (v28 == -1 || v29 > *(_QWORD *)(a2 + *v4))
          break;
        v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
        *(_QWORD *)(a2 + v27) = v29;
        v26 |= (unint64_t)(v30 & 0x7F) << v24;
        if ((v30 & 0x80) == 0)
          goto LABEL_40;
        v24 += 7;
        v15 = v25++ >= 9;
        if (v15)
        {
          v31 = 0;
          goto LABEL_43;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
      v31 = *(_BYTE *)(a2 + *v5) ? 0 : v26;
LABEL_43:
      objc_msgSend(a1, "setType:", v31);
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPErrorReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  void *v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  double v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *v5;
          v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *v5;
      v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(_BYTE *)(a2 + v16))
        v10 = 0;
LABEL_14:
      if (v17 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setDomain:", v19);
          goto LABEL_23;
        case 2u:
          PBReaderReadString();
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setReason:", v19);
LABEL_23:

          continue;
        case 3u:
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v23 = *(double *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v16) = 1;
            v23 = 0.0;
          }
          objc_msgSend(a1, "setCode:", v23);
          continue;
        case 4u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v27 = *v3;
        v28 = *(_QWORD *)(a2 + v27);
        v29 = v28 + 1;
        if (v28 == -1 || v29 > *(_QWORD *)(a2 + *v4))
          break;
        v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
        *(_QWORD *)(a2 + v27) = v29;
        v26 |= (unint64_t)(v30 & 0x7F) << v24;
        if ((v30 & 0x80) == 0)
          goto LABEL_35;
        v24 += 7;
        v15 = v25++ >= 9;
        if (v15)
        {
          v31 = 0;
          goto LABEL_38;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_35:
      v31 = *(_BYTE *)(a2 + *v5) ? 0 : v26;
LABEL_38:
      objc_msgSend(a1, "setErrorCode:", v31);
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPQueryUnderstandingParseReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  char v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  char v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char v153;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_155;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_158;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_155:
          if (*(_BYTE *)(a2 + *v5))
            v25 = 0;
          else
            v25 = v20;
LABEL_158:
          objc_msgSend(a1, "setQueryIntentType:", v25);
          continue;
        case 2u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                v15 = v28++ >= 9;
                if (v15)
                {
                  v29 = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v29 = 0;
LABEL_162:
          objc_msgSend(a1, "setHasUnspecifiedTokens:", v29 != 0);
          continue;
        case 3u:
          v34 = 0;
          v35 = 0;
          v36 = 0;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            v39 = v38 + 1;
            if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v39;
              v36 |= (unint64_t)(v40 & 0x7F) << v34;
              if (v40 < 0)
              {
                v34 += 7;
                v15 = v35++ >= 9;
                if (v15)
                {
                  v36 = 0;
                  goto LABEL_166;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v36 = 0;
LABEL_166:
          objc_msgSend(a1, "setHasSortCriteriaTokens:", v36 != 0);
          continue;
        case 4u:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
              *(_QWORD *)(a2 + v44) = v46;
              v43 |= (unint64_t)(v47 & 0x7F) << v41;
              if (v47 < 0)
              {
                v41 += 7;
                v15 = v42++ >= 9;
                if (v15)
                {
                  v43 = 0;
                  goto LABEL_170;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v43 = 0;
LABEL_170:
          objc_msgSend(a1, "setHasLocationTokens:", v43 != 0);
          continue;
        case 5u:
          v48 = 0;
          v49 = 0;
          v50 = 0;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            v53 = v52 + 1;
            if (v52 == -1 || v53 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
              *(_QWORD *)(a2 + v51) = v53;
              v50 |= (unint64_t)(v54 & 0x7F) << v48;
              if (v54 < 0)
              {
                v48 += 7;
                v15 = v49++ >= 9;
                if (v15)
                {
                  v50 = 0;
                  goto LABEL_174;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v50 = 0;
LABEL_174:
          objc_msgSend(a1, "setHasActionTokens:", v50 != 0);
          continue;
        case 6u:
          v55 = 0;
          v56 = 0;
          v57 = 0;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
              *(_QWORD *)(a2 + v58) = v60;
              v57 |= (unint64_t)(v61 & 0x7F) << v55;
              if (v61 < 0)
              {
                v55 += 7;
                v15 = v56++ >= 9;
                if (v15)
                {
                  v57 = 0;
                  goto LABEL_178;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v57 = 0;
LABEL_178:
          objc_msgSend(a1, "setHasMediaTypeTokens:", v57 != 0);
          continue;
        case 7u:
          v62 = 0;
          v63 = 0;
          v64 = 0;
          while (2)
          {
            v65 = *v3;
            v66 = *(_QWORD *)(a2 + v65);
            v67 = v66 + 1;
            if (v66 == -1 || v67 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
              *(_QWORD *)(a2 + v65) = v67;
              v64 |= (unint64_t)(v68 & 0x7F) << v62;
              if (v68 < 0)
              {
                v62 += 7;
                v15 = v63++ >= 9;
                if (v15)
                {
                  v64 = 0;
                  goto LABEL_182;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v64 = 0;
LABEL_182:
          objc_msgSend(a1, "setHasVisualQualityTokens:", v64 != 0);
          continue;
        case 8u:
          v69 = 0;
          v70 = 0;
          v71 = 0;
          while (2)
          {
            v72 = *v3;
            v73 = *(_QWORD *)(a2 + v72);
            v74 = v73 + 1;
            if (v73 == -1 || v74 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
              *(_QWORD *)(a2 + v72) = v74;
              v71 |= (unint64_t)(v75 & 0x7F) << v69;
              if (v75 < 0)
              {
                v69 += 7;
                v15 = v70++ >= 9;
                if (v15)
                {
                  v71 = 0;
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v71 = 0;
LABEL_186:
          objc_msgSend(a1, "setHasNounTokens:", v71 != 0);
          continue;
        case 9u:
          v76 = 0;
          v77 = 0;
          v78 = 0;
          while (2)
          {
            v79 = *v3;
            v80 = *(_QWORD *)(a2 + v79);
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v80);
              *(_QWORD *)(a2 + v79) = v81;
              v78 |= (unint64_t)(v82 & 0x7F) << v76;
              if (v82 < 0)
              {
                v76 += 7;
                v15 = v77++ >= 9;
                if (v15)
                {
                  v78 = 0;
                  goto LABEL_190;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v78 = 0;
LABEL_190:
          objc_msgSend(a1, "setHasTimeTokens:", v78 != 0);
          continue;
        case 0xAu:
          v83 = 0;
          v84 = 0;
          v85 = 0;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            v88 = v87 + 1;
            if (v87 == -1 || v88 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
              *(_QWORD *)(a2 + v86) = v88;
              v85 |= (unint64_t)(v89 & 0x7F) << v83;
              if (v89 < 0)
              {
                v83 += 7;
                v15 = v84++ >= 9;
                if (v15)
                {
                  v85 = 0;
                  goto LABEL_194;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v85 = 0;
LABEL_194:
          objc_msgSend(a1, "setHasEventTokens:", v85 != 0);
          continue;
        case 0xBu:
          v90 = 0;
          v91 = 0;
          v92 = 0;
          while (2)
          {
            v93 = *v3;
            v94 = *(_QWORD *)(a2 + v93);
            v95 = v94 + 1;
            if (v94 == -1 || v95 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
              *(_QWORD *)(a2 + v93) = v95;
              v92 |= (unint64_t)(v96 & 0x7F) << v90;
              if (v96 < 0)
              {
                v90 += 7;
                v15 = v91++ >= 9;
                if (v15)
                {
                  v92 = 0;
                  goto LABEL_198;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v92 = 0;
LABEL_198:
          objc_msgSend(a1, "setHasGenericLocationTokens:", v92 != 0);
          continue;
        case 0xCu:
          v97 = 0;
          v98 = 0;
          v99 = 0;
          while (2)
          {
            v100 = *v3;
            v101 = *(_QWORD *)(a2 + v100);
            v102 = v101 + 1;
            if (v101 == -1 || v102 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v101);
              *(_QWORD *)(a2 + v100) = v102;
              v99 |= (unint64_t)(v103 & 0x7F) << v97;
              if (v103 < 0)
              {
                v97 += 7;
                v15 = v98++ >= 9;
                if (v15)
                {
                  v99 = 0;
                  goto LABEL_202;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v99 = 0;
LABEL_202:
          objc_msgSend(a1, "setHasCaptureDeviceTokens:", v99 != 0);
          continue;
        case 0xDu:
          v104 = 0;
          v105 = 0;
          v106 = 0;
          while (2)
          {
            v107 = *v3;
            v108 = *(_QWORD *)(a2 + v107);
            v109 = v108 + 1;
            if (v108 == -1 || v109 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
              *(_QWORD *)(a2 + v107) = v109;
              v106 |= (unint64_t)(v110 & 0x7F) << v104;
              if (v110 < 0)
              {
                v104 += 7;
                v15 = v105++ >= 9;
                if (v15)
                {
                  v106 = 0;
                  goto LABEL_206;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v106 = 0;
LABEL_206:
          objc_msgSend(a1, "setHasFavoritedTokens:", v106 != 0);
          continue;
        case 0xEu:
          v111 = 0;
          v112 = 0;
          v113 = 0;
          while (2)
          {
            v114 = *v3;
            v115 = *(_QWORD *)(a2 + v114);
            v116 = v115 + 1;
            if (v115 == -1 || v116 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v117 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v115);
              *(_QWORD *)(a2 + v114) = v116;
              v113 |= (unint64_t)(v117 & 0x7F) << v111;
              if (v117 < 0)
              {
                v111 += 7;
                v15 = v112++ >= 9;
                if (v15)
                {
                  v113 = 0;
                  goto LABEL_210;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v113 = 0;
LABEL_210:
          objc_msgSend(a1, "setHasSourceAppTokens:", v113 != 0);
          continue;
        case 0xFu:
          v118 = 0;
          v119 = 0;
          v120 = 0;
          while (2)
          {
            v121 = *v3;
            v122 = *(_QWORD *)(a2 + v121);
            v123 = v122 + 1;
            if (v122 == -1 || v123 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v124 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v122);
              *(_QWORD *)(a2 + v121) = v123;
              v120 |= (unint64_t)(v124 & 0x7F) << v118;
              if (v124 < 0)
              {
                v118 += 7;
                v15 = v119++ >= 9;
                if (v15)
                {
                  v120 = 0;
                  goto LABEL_214;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v120 = 0;
LABEL_214:
          objc_msgSend(a1, "setHasPersonTokens:", v120 != 0);
          continue;
        case 0x10u:
          v125 = 0;
          v126 = 0;
          v127 = 0;
          while (2)
          {
            v128 = *v3;
            v129 = *(_QWORD *)(a2 + v128);
            v130 = v129 + 1;
            if (v129 == -1 || v130 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v131 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
              *(_QWORD *)(a2 + v128) = v130;
              v127 |= (unint64_t)(v131 & 0x7F) << v125;
              if (v131 < 0)
              {
                v125 += 7;
                v15 = v126++ >= 9;
                if (v15)
                {
                  v127 = 0;
                  goto LABEL_218;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v127 = 0;
LABEL_218:
          objc_msgSend(a1, "setHasPersonSenderTokens:", v127 != 0);
          continue;
        case 0x11u:
          v132 = 0;
          v133 = 0;
          v134 = 0;
          while (2)
          {
            v135 = *v3;
            v136 = *(_QWORD *)(a2 + v135);
            v137 = v136 + 1;
            if (v136 == -1 || v137 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v138 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v136);
              *(_QWORD *)(a2 + v135) = v137;
              v134 |= (unint64_t)(v138 & 0x7F) << v132;
              if (v138 < 0)
              {
                v132 += 7;
                v15 = v133++ >= 9;
                if (v15)
                {
                  v139 = 0;
                  goto LABEL_223;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v139 = 0;
          else
            v139 = v134;
LABEL_223:
          objc_msgSend(a1, "setSpotlightQueryIntent:", v139);
          continue;
        case 0x12u:
          v140 = 0;
          v141 = 0;
          v142 = 0;
          while (2)
          {
            v143 = *v3;
            v144 = *(_QWORD *)(a2 + v143);
            v145 = v144 + 1;
            if (v144 == -1 || v145 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v146 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
              *(_QWORD *)(a2 + v143) = v145;
              v142 |= (unint64_t)(v146 & 0x7F) << v140;
              if (v146 < 0)
              {
                v140 += 7;
                v15 = v141++ >= 9;
                if (v15)
                {
                  v142 = 0;
                  goto LABEL_227;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v142 = 0;
LABEL_227:
          objc_msgSend(a1, "setIsUnsafeQuery:", v142 != 0);
          continue;
        case 0x13u:
          v147 = 0;
          v148 = 0;
          v149 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v150 = *v3;
        v151 = *(_QWORD *)(a2 + v150);
        v152 = v151 + 1;
        if (v151 == -1 || v152 > *(_QWORD *)(a2 + *v4))
          break;
        v153 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v151);
        *(_QWORD *)(a2 + v150) = v152;
        v149 |= (unint64_t)(v153 & 0x7F) << v147;
        if ((v153 & 0x80) == 0)
          goto LABEL_229;
        v147 += 7;
        v15 = v148++ >= 9;
        if (v15)
        {
          v149 = 0;
          goto LABEL_231;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_229:
      if (*(_BYTE *)(a2 + *v5))
        v149 = 0;
LABEL_231:
      objc_msgSend(a1, "setIsBlocklistedQuery:", v149 != 0);
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPPhotosRankingInfoReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_57;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_60;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_57:
          if (*(_BYTE *)(a2 + *v5))
            v25 = 0;
          else
            v25 = v20;
LABEL_60:
          objc_msgSend(a1, "setTotalNumberOfAssetsIndexed:", v25);
          continue;
        case 2u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                v15 = v28++ >= 9;
                if (v15)
                {
                  v34 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v34 = 0;
          else
            v34 = v29;
LABEL_65:
          objc_msgSend(a1, "setTotalNumberOfAssetsInLibrary:", v34);
          continue;
        case 3u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                v15 = v36++ >= 9;
                if (v15)
                {
                  v42 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v42 = 0;
          else
            v42 = v37;
LABEL_70:
          objc_msgSend(a1, "setTotalNumberOfEmbeddingMatchedAssets:", v42);
          continue;
        case 4u:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            v48 = v47 + 1;
            if (v47 == -1 || v48 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                v15 = v44++ >= 9;
                if (v15)
                {
                  v50 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v50 = 0;
          else
            v50 = v45;
LABEL_75:
          objc_msgSend(a1, "setTotalNumberOfMetadataMatchedAssets:", v50);
          continue;
        case 5u:
          v51 = 0;
          v52 = 0;
          v53 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v54 = *v3;
        v55 = *(_QWORD *)(a2 + v54);
        v56 = v55 + 1;
        if (v55 == -1 || v56 > *(_QWORD *)(a2 + *v4))
          break;
        v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
        *(_QWORD *)(a2 + v54) = v56;
        v53 |= (unint64_t)(v57 & 0x7F) << v51;
        if ((v57 & 0x80) == 0)
          goto LABEL_77;
        v51 += 7;
        v15 = v52++ >= 9;
        if (v15)
        {
          v58 = 0;
          goto LABEL_80;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_77:
      v58 = *(_BYTE *)(a2 + *v5) ? 0 : v53;
LABEL_80:
      objc_msgSend(a1, "setAssetEstimationOffAmount:", v58);
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPPerformEntityQueryCommandForFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setTokenString:", v26);

      }
      else if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_34;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        v25 = *(_BYTE *)(a2 + *v5) ? 0 : v20;
LABEL_34:
        objc_msgSend(a1, "setEntityType:", v25);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPIndexStateForFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_57;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_60;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_57:
          if (*(_BYTE *)(a2 + *v5))
            v25 = 0;
          else
            v25 = v20;
LABEL_60:
          objc_msgSend(a1, "setPercentMessagesIndexed:", v25);
          continue;
        case 2u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                v15 = v28++ >= 9;
                if (v15)
                {
                  v34 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v34 = 0;
          else
            v34 = v29;
LABEL_65:
          objc_msgSend(a1, "setPercentAttachmentsIndexed:", v34);
          continue;
        case 3u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                v15 = v36++ >= 9;
                if (v15)
                {
                  v42 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v42 = 0;
          else
            v42 = v37;
LABEL_70:
          objc_msgSend(a1, "setSearchIndex:", v42);
          continue;
        case 4u:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            v48 = v47 + 1;
            if (v47 == -1 || v48 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                v15 = v44++ >= 9;
                if (v15)
                {
                  v50 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v50 = 0;
          else
            v50 = v45;
LABEL_75:
          objc_msgSend(a1, "setTotalMessageCount:", v50);
          continue;
        case 5u:
          v51 = 0;
          v52 = 0;
          v53 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v54 = *v3;
        v55 = *(_QWORD *)(a2 + v54);
        v56 = v55 + 1;
        if (v55 == -1 || v56 > *(_QWORD *)(a2 + *v4))
          break;
        v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
        *(_QWORD *)(a2 + v54) = v56;
        v53 |= (unint64_t)(v57 & 0x7F) << v51;
        if ((v57 & 0x80) == 0)
          goto LABEL_77;
        v51 += 7;
        v15 = v52++ >= 9;
        if (v15)
        {
          v58 = 0;
          goto LABEL_80;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_77:
      v58 = *(_BYTE *)(a2 + *v5) ? 0 : v53;
LABEL_80:
      objc_msgSend(a1, "setIndexedMessageCount:", v58);
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _CPNetworkTimingDataReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  _CPTCPInfo *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t result;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  unint64_t v98;
  double v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  uint64_t v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  uint64_t v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  uint64_t v131;
  char v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  uint64_t v147;
  char v148;
  unsigned int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  uint64_t v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  char v162;
  uint64_t v163;
  char v164;
  unsigned int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  char v170;
  uint64_t v171;
  char v172;
  unsigned int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  char v178;
  uint64_t v179;
  char v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  char v186;
  uint64_t v187;
  char v188;
  unsigned int v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  char v194;
  uint64_t v195;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *v5;
        v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *v5;
    v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(_BYTE *)(a2 + v16))
      v10 = 0;
LABEL_14:
    if (v17 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 3u:
        PBReaderReadString();
        v19 = (_CPTCPInfo *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setInterfaceIdentifier:", v19);
        goto LABEL_45;
      case 4u:
        PBReaderReadData();
        v19 = (_CPTCPInfo *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setPeerAddress:", v19);
        goto LABEL_45;
      case 5u:
        v20 = 0;
        v21 = 0;
        v22 = 0;
        while (2)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          v25 = v24 + 1;
          if (v24 == -1 || v25 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
            *(_QWORD *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              v15 = v21++ >= 9;
              if (v15)
              {
                v22 = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_194:
        objc_msgSend(a1, "setConnectionRace:", v22 != 0);
        goto LABEL_46;
      case 6u:
        v27 = 0;
        v28 = 0;
        v29 = 0;
        while (2)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
            *(_QWORD *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              v15 = v28++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_198;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v29 = 0;
LABEL_198:
        objc_msgSend(a1, "setConnectionReused:", v29 != 0);
        goto LABEL_46;
      case 7u:
        v19 = objc_alloc_init(_CPTCPInfo);
        if (!PBReaderPlaceMark() || (_CPTCPInfoReadFrom(v19, a2) & 1) == 0)
          goto LABEL_300;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartTimeCounts:", v19, 0, 0);
        goto LABEL_45;
      case 8u:
        v19 = objc_alloc_init(_CPTCPInfo);
        if (PBReaderPlaceMark() && (_CPTCPInfoReadFrom(v19, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setStopTimeCounts:", v19, 0, 0);
LABEL_45:

LABEL_46:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_300:

        return 0;
      case 9u:
        PBReaderReadString();
        v19 = (_CPTCPInfo *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setConnectionUUID:", v19);
        goto LABEL_45;
      case 0xDu:
        PBReaderReadString();
        v19 = (_CPTCPInfo *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setNetworkProtocolName:", v19);
        goto LABEL_45;
      case 0xEu:
        v35 = 0;
        v36 = 0;
        v37 = 0;
        while (2)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                v37 = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v37 = 0;
LABEL_202:
        objc_msgSend(a1, "setQUICWhitelistedDomain:", v37 != 0);
        goto LABEL_46;
      case 0xFu:
        v42 = 0;
        v43 = 0;
        v44 = 0;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
            *(_QWORD *)(a2 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v15 = v43++ >= 9;
              if (v15)
              {
                v49 = 0;
                goto LABEL_207;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v49 = 0;
        else
          v49 = v44;
LABEL_207:
        objc_msgSend(a1, "setRedirectCount:", v49);
        goto LABEL_46;
      case 0x10u:
        v50 = 0;
        v51 = 0;
        v52 = 0;
        while (2)
        {
          v53 = *v3;
          v54 = *(_QWORD *)(a2 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
            *(_QWORD *)(a2 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v15 = v51++ >= 9;
              if (v15)
              {
                v57 = 0;
                goto LABEL_212;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v57 = 0;
        else
          v57 = v52;
LABEL_212:
        objc_msgSend(a1, "setRedirectCountW3C:", v57);
        goto LABEL_46;
      case 0x15u:
        v58 = 0;
        v59 = 0;
        v60 = 0;
        while (2)
        {
          v61 = *v3;
          v62 = *(_QWORD *)(a2 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
            *(_QWORD *)(a2 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              v15 = v59++ >= 9;
              if (v15)
              {
                v65 = 0;
                goto LABEL_217;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v65 = 0;
        else
          v65 = v60;
LABEL_217:
        objc_msgSend(a1, "setRequestHeaderSize:", v65);
        goto LABEL_46;
      case 0x16u:
        v66 = 0;
        v67 = 0;
        v68 = 0;
        while (2)
        {
          v69 = *v3;
          v70 = *(_QWORD *)(a2 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v70);
            *(_QWORD *)(a2 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              v15 = v67++ >= 9;
              if (v15)
              {
                v73 = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v73 = 0;
        else
          v73 = v68;
LABEL_222:
        objc_msgSend(a1, "setResponseBodyBytesDecoded:", v73);
        goto LABEL_46;
      case 0x17u:
        v74 = 0;
        v75 = 0;
        v76 = 0;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
            *(_QWORD *)(a2 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              v15 = v75++ >= 9;
              if (v15)
              {
                v81 = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v81 = 0;
        else
          v81 = v76;
LABEL_227:
        objc_msgSend(a1, "setResponseBodyBytesReceived:", v81);
        goto LABEL_46;
      case 0x1Au:
        v82 = 0;
        v83 = 0;
        v84 = 0;
        while (2)
        {
          v85 = *v3;
          v86 = *(_QWORD *)(a2 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v86);
            *(_QWORD *)(a2 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              v15 = v83++ >= 9;
              if (v15)
              {
                v89 = 0;
                goto LABEL_232;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v89 = 0;
        else
          v89 = v84;
LABEL_232:
        objc_msgSend(a1, "setResponseHeaderSize:", v89);
        goto LABEL_46;
      case 0x1Bu:
        v90 = 0;
        v91 = 0;
        v92 = 0;
        while (2)
        {
          v93 = *v3;
          v94 = *(_QWORD *)(a2 + v93);
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
            *(_QWORD *)(a2 + v93) = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              v15 = v91++ >= 9;
              if (v15)
              {
                v92 = 0;
                goto LABEL_236;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v92 = 0;
LABEL_236:
        objc_msgSend(a1, "setTFOSuccess:", v92 != 0);
        goto LABEL_46;
      case 0x1Cu:
        v97 = *v3;
        v98 = *(_QWORD *)(a2 + v97);
        if (v98 <= 0xFFFFFFFFFFFFFFF7 && v98 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v99 = *(double *)(*(_QWORD *)(a2 + *v7) + v98);
          *(_QWORD *)(a2 + v97) = v98 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v99 = 0.0;
        }
        objc_msgSend(a1, "setTimingDataInit:", v99);
        goto LABEL_46;
      case 0x1Fu:
        v100 = 0;
        v101 = 0;
        v102 = 0;
        while (2)
        {
          v103 = *v3;
          v104 = *(_QWORD *)(a2 + v103);
          v105 = v104 + 1;
          if (v104 == -1 || v105 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v106 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v104);
            *(_QWORD *)(a2 + v103) = v105;
            v102 |= (unint64_t)(v106 & 0x7F) << v100;
            if (v106 < 0)
            {
              v100 += 7;
              v15 = v101++ >= 9;
              if (v15)
              {
                v107 = 0;
                goto LABEL_241;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v107 = 0;
        else
          v107 = v102;
LABEL_241:
        objc_msgSend(a1, "setConnectStart:", v107);
        goto LABEL_46;
      case 0x20u:
        v108 = 0;
        v109 = 0;
        v110 = 0;
        while (2)
        {
          v111 = *v3;
          v112 = *(_QWORD *)(a2 + v111);
          v113 = v112 + 1;
          if (v112 == -1 || v113 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v114 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
            *(_QWORD *)(a2 + v111) = v113;
            v110 |= (unint64_t)(v114 & 0x7F) << v108;
            if (v114 < 0)
            {
              v108 += 7;
              v15 = v109++ >= 9;
              if (v15)
              {
                v115 = 0;
                goto LABEL_246;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v115 = 0;
        else
          v115 = v110;
LABEL_246:
        objc_msgSend(a1, "setConnectEnd:", v115);
        goto LABEL_46;
      case 0x21u:
        v116 = 0;
        v117 = 0;
        v118 = 0;
        while (2)
        {
          v119 = *v3;
          v120 = *(_QWORD *)(a2 + v119);
          v121 = v120 + 1;
          if (v120 == -1 || v121 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v122 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v120);
            *(_QWORD *)(a2 + v119) = v121;
            v118 |= (unint64_t)(v122 & 0x7F) << v116;
            if (v122 < 0)
            {
              v116 += 7;
              v15 = v117++ >= 9;
              if (v15)
              {
                v123 = 0;
                goto LABEL_251;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v123 = 0;
        else
          v123 = v118;
LABEL_251:
        objc_msgSend(a1, "setDomainLookupStart:", v123);
        goto LABEL_46;
      case 0x22u:
        v124 = 0;
        v125 = 0;
        v126 = 0;
        while (2)
        {
          v127 = *v3;
          v128 = *(_QWORD *)(a2 + v127);
          v129 = v128 + 1;
          if (v128 == -1 || v129 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v128);
            *(_QWORD *)(a2 + v127) = v129;
            v126 |= (unint64_t)(v130 & 0x7F) << v124;
            if (v130 < 0)
            {
              v124 += 7;
              v15 = v125++ >= 9;
              if (v15)
              {
                v131 = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v131 = 0;
        else
          v131 = v126;
LABEL_256:
        objc_msgSend(a1, "setDomainLookupEnd:", v131);
        goto LABEL_46;
      case 0x23u:
        v132 = 0;
        v133 = 0;
        v134 = 0;
        while (2)
        {
          v135 = *v3;
          v136 = *(_QWORD *)(a2 + v135);
          v137 = v136 + 1;
          if (v136 == -1 || v137 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v138 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v136);
            *(_QWORD *)(a2 + v135) = v137;
            v134 |= (unint64_t)(v138 & 0x7F) << v132;
            if (v138 < 0)
            {
              v132 += 7;
              v15 = v133++ >= 9;
              if (v15)
              {
                v139 = 0;
                goto LABEL_261;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v139 = 0;
        else
          v139 = v134;
LABEL_261:
        objc_msgSend(a1, "setFetchStart:", v139);
        goto LABEL_46;
      case 0x24u:
        v140 = 0;
        v141 = 0;
        v142 = 0;
        while (2)
        {
          v143 = *v3;
          v144 = *(_QWORD *)(a2 + v143);
          v145 = v144 + 1;
          if (v144 == -1 || v145 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v146 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v144);
            *(_QWORD *)(a2 + v143) = v145;
            v142 |= (unint64_t)(v146 & 0x7F) << v140;
            if (v146 < 0)
            {
              v140 += 7;
              v15 = v141++ >= 9;
              if (v15)
              {
                v147 = 0;
                goto LABEL_266;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v147 = 0;
        else
          v147 = v142;
LABEL_266:
        objc_msgSend(a1, "setRedirectStart:", v147);
        goto LABEL_46;
      case 0x25u:
        v148 = 0;
        v149 = 0;
        v150 = 0;
        while (2)
        {
          v151 = *v3;
          v152 = *(_QWORD *)(a2 + v151);
          v153 = v152 + 1;
          if (v152 == -1 || v153 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v154 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v152);
            *(_QWORD *)(a2 + v151) = v153;
            v150 |= (unint64_t)(v154 & 0x7F) << v148;
            if (v154 < 0)
            {
              v148 += 7;
              v15 = v149++ >= 9;
              if (v15)
              {
                v155 = 0;
                goto LABEL_271;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v155 = 0;
        else
          v155 = v150;
LABEL_271:
        objc_msgSend(a1, "setRedirectEnd:", v155);
        goto LABEL_46;
      case 0x26u:
        v156 = 0;
        v157 = 0;
        v158 = 0;
        while (2)
        {
          v159 = *v3;
          v160 = *(_QWORD *)(a2 + v159);
          v161 = v160 + 1;
          if (v160 == -1 || v161 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v162 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v160);
            *(_QWORD *)(a2 + v159) = v161;
            v158 |= (unint64_t)(v162 & 0x7F) << v156;
            if (v162 < 0)
            {
              v156 += 7;
              v15 = v157++ >= 9;
              if (v15)
              {
                v163 = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v163 = 0;
        else
          v163 = v158;
LABEL_276:
        objc_msgSend(a1, "setRequestStart:", v163);
        goto LABEL_46;
      case 0x27u:
        v164 = 0;
        v165 = 0;
        v166 = 0;
        while (2)
        {
          v167 = *v3;
          v168 = *(_QWORD *)(a2 + v167);
          v169 = v168 + 1;
          if (v168 == -1 || v169 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v170 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v168);
            *(_QWORD *)(a2 + v167) = v169;
            v166 |= (unint64_t)(v170 & 0x7F) << v164;
            if (v170 < 0)
            {
              v164 += 7;
              v15 = v165++ >= 9;
              if (v15)
              {
                v171 = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v171 = 0;
        else
          v171 = v166;
LABEL_281:
        objc_msgSend(a1, "setRequestEnd:", v171);
        goto LABEL_46;
      case 0x28u:
        v172 = 0;
        v173 = 0;
        v174 = 0;
        while (2)
        {
          v175 = *v3;
          v176 = *(_QWORD *)(a2 + v175);
          v177 = v176 + 1;
          if (v176 == -1 || v177 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v178 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v176);
            *(_QWORD *)(a2 + v175) = v177;
            v174 |= (unint64_t)(v178 & 0x7F) << v172;
            if (v178 < 0)
            {
              v172 += 7;
              v15 = v173++ >= 9;
              if (v15)
              {
                v179 = 0;
                goto LABEL_286;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v179 = 0;
        else
          v179 = v174;
LABEL_286:
        objc_msgSend(a1, "setResponseStart:", v179);
        goto LABEL_46;
      case 0x29u:
        v180 = 0;
        v181 = 0;
        v182 = 0;
        while (2)
        {
          v183 = *v3;
          v184 = *(_QWORD *)(a2 + v183);
          v185 = v184 + 1;
          if (v184 == -1 || v185 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v186 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v184);
            *(_QWORD *)(a2 + v183) = v185;
            v182 |= (unint64_t)(v186 & 0x7F) << v180;
            if (v186 < 0)
            {
              v180 += 7;
              v15 = v181++ >= 9;
              if (v15)
              {
                v187 = 0;
                goto LABEL_291;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v187 = 0;
        else
          v187 = v182;
LABEL_291:
        objc_msgSend(a1, "setResponseEnd:", v187);
        goto LABEL_46;
      case 0x2Au:
        v188 = 0;
        v189 = 0;
        v190 = 0;
        while (2)
        {
          v191 = *v3;
          v192 = *(_QWORD *)(a2 + v191);
          v193 = v192 + 1;
          if (v192 == -1 || v193 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v194 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v192);
            *(_QWORD *)(a2 + v191) = v193;
            v190 |= (unint64_t)(v194 & 0x7F) << v188;
            if (v194 < 0)
            {
              v188 += 7;
              v15 = v189++ >= 9;
              if (v15)
              {
                v195 = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v195 = 0;
        else
          v195 = v190;
LABEL_296:
        objc_msgSend(a1, "setSecureConnectStart:", v195);
        goto LABEL_46;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_46;
    }
  }
}

uint64_t _CPTCPInfoReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  uint64_t v122;
  char v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  uint64_t v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  uint64_t v138;
  char v139;
  unsigned int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  uint64_t v146;
  char v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  uint64_t v154;
  char v155;
  unsigned int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  uint64_t v162;
  void *v163;
  char v164;
  unsigned int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  char v170;
  uint64_t v171;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_156;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v25 = 0;
              goto LABEL_159;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_156:
          if (*(_BYTE *)(a2 + *v5))
            v25 = 0;
          else
            v25 = v20;
LABEL_159:
          objc_msgSend(a1, "setAvgRTT:", v25);
          continue;
        case 2u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                v15 = v28++ >= 9;
                if (v15)
                {
                  v34 = 0;
                  goto LABEL_164;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v34 = 0;
          else
            v34 = v29;
LABEL_164:
          objc_msgSend(a1, "setCellRXPackets:", v34);
          continue;
        case 3u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                v15 = v36++ >= 9;
                if (v15)
                {
                  v42 = 0;
                  goto LABEL_169;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v42 = 0;
          else
            v42 = v37;
LABEL_169:
          objc_msgSend(a1, "setCellTXPackets:", v42);
          continue;
        case 4u:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            v48 = v47 + 1;
            if (v47 == -1 || v48 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                v15 = v44++ >= 9;
                if (v15)
                {
                  v50 = 0;
                  goto LABEL_174;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v50 = 0;
          else
            v50 = v45;
LABEL_174:
          objc_msgSend(a1, "setConnectAttempts:", v50);
          continue;
        case 5u:
          v51 = 0;
          v52 = 0;
          v53 = 0;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
              *(_QWORD *)(a2 + v54) = v56;
              v53 |= (unint64_t)(v57 & 0x7F) << v51;
              if (v57 < 0)
              {
                v51 += 7;
                v15 = v52++ >= 9;
                if (v15)
                {
                  v58 = 0;
                  goto LABEL_179;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v58 = 0;
          else
            v58 = v53;
LABEL_179:
          objc_msgSend(a1, "setConnectSuccesses:", v58);
          continue;
        case 6u:
          v59 = 0;
          v60 = 0;
          v61 = 0;
          while (2)
          {
            v62 = *v3;
            v63 = *(_QWORD *)(a2 + v62);
            v64 = v63 + 1;
            if (v63 == -1 || v64 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
              *(_QWORD *)(a2 + v62) = v64;
              v61 |= (unint64_t)(v65 & 0x7F) << v59;
              if (v65 < 0)
              {
                v59 += 7;
                v15 = v60++ >= 9;
                if (v15)
                {
                  v66 = 0;
                  goto LABEL_184;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v66 = 0;
          else
            v66 = v61;
LABEL_184:
          objc_msgSend(a1, "setMinRTT:", v66);
          continue;
        case 7u:
          v67 = 0;
          v68 = 0;
          v69 = 0;
          while (2)
          {
            v70 = *v3;
            v71 = *(_QWORD *)(a2 + v70);
            v72 = v71 + 1;
            if (v71 == -1 || v72 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
              *(_QWORD *)(a2 + v70) = v72;
              v69 |= (unint64_t)(v73 & 0x7F) << v67;
              if (v73 < 0)
              {
                v67 += 7;
                v15 = v68++ >= 9;
                if (v15)
                {
                  v74 = 0;
                  goto LABEL_189;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v74 = 0;
          else
            v74 = v69;
LABEL_189:
          objc_msgSend(a1, "setRxBytes:", v74);
          continue;
        case 8u:
          v75 = 0;
          v76 = 0;
          v77 = 0;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
              *(_QWORD *)(a2 + v78) = v80;
              v77 |= (unint64_t)(v81 & 0x7F) << v75;
              if (v81 < 0)
              {
                v75 += 7;
                v15 = v76++ >= 9;
                if (v15)
                {
                  v82 = 0;
                  goto LABEL_194;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v82 = 0;
          else
            v82 = v77;
LABEL_194:
          objc_msgSend(a1, "setRxDuplicateBytes:", v82);
          continue;
        case 9u:
          v83 = 0;
          v84 = 0;
          v85 = 0;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            v88 = v87 + 1;
            if (v87 == -1 || v88 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
              *(_QWORD *)(a2 + v86) = v88;
              v85 |= (unint64_t)(v89 & 0x7F) << v83;
              if (v89 < 0)
              {
                v83 += 7;
                v15 = v84++ >= 9;
                if (v15)
                {
                  v90 = 0;
                  goto LABEL_199;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v90 = 0;
          else
            v90 = v85;
LABEL_199:
          objc_msgSend(a1, "setRxOutOfOrderBytes:", v90);
          continue;
        case 0xAu:
          v91 = 0;
          v92 = 0;
          v93 = 0;
          while (2)
          {
            v94 = *v3;
            v95 = *(_QWORD *)(a2 + v94);
            v96 = v95 + 1;
            if (v95 == -1 || v96 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
              *(_QWORD *)(a2 + v94) = v96;
              v93 |= (unint64_t)(v97 & 0x7F) << v91;
              if (v97 < 0)
              {
                v91 += 7;
                v15 = v92++ >= 9;
                if (v15)
                {
                  v98 = 0;
                  goto LABEL_204;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v98 = 0;
          else
            v98 = v93;
LABEL_204:
          objc_msgSend(a1, "setRxPackets:", v98);
          continue;
        case 0xBu:
          v99 = 0;
          v100 = 0;
          v101 = 0;
          while (2)
          {
            v102 = *v3;
            v103 = *(_QWORD *)(a2 + v102);
            v104 = v103 + 1;
            if (v103 == -1 || v104 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
              *(_QWORD *)(a2 + v102) = v104;
              v101 |= (unint64_t)(v105 & 0x7F) << v99;
              if (v105 < 0)
              {
                v99 += 7;
                v15 = v100++ >= 9;
                if (v15)
                {
                  v106 = 0;
                  goto LABEL_209;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v106 = 0;
          else
            v106 = v101;
LABEL_209:
          objc_msgSend(a1, "setTxBytes:", v106);
          continue;
        case 0xCu:
          v107 = 0;
          v108 = 0;
          v109 = 0;
          while (2)
          {
            v110 = *v3;
            v111 = *(_QWORD *)(a2 + v110);
            v112 = v111 + 1;
            if (v111 == -1 || v112 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v111);
              *(_QWORD *)(a2 + v110) = v112;
              v109 |= (unint64_t)(v113 & 0x7F) << v107;
              if (v113 < 0)
              {
                v107 += 7;
                v15 = v108++ >= 9;
                if (v15)
                {
                  v114 = 0;
                  goto LABEL_214;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v114 = 0;
          else
            v114 = v109;
LABEL_214:
          objc_msgSend(a1, "setTxPackets:", v114);
          continue;
        case 0xDu:
          v115 = 0;
          v116 = 0;
          v117 = 0;
          while (2)
          {
            v118 = *v3;
            v119 = *(_QWORD *)(a2 + v118);
            v120 = v119 + 1;
            if (v119 == -1 || v120 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
              *(_QWORD *)(a2 + v118) = v120;
              v117 |= (unint64_t)(v121 & 0x7F) << v115;
              if (v121 < 0)
              {
                v115 += 7;
                v15 = v116++ >= 9;
                if (v15)
                {
                  v122 = 0;
                  goto LABEL_219;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v122 = 0;
          else
            v122 = v117;
LABEL_219:
          objc_msgSend(a1, "setTxRetransmitPackets:", v122);
          continue;
        case 0xEu:
          v123 = 0;
          v124 = 0;
          v125 = 0;
          while (2)
          {
            v126 = *v3;
            v127 = *(_QWORD *)(a2 + v126);
            v128 = v127 + 1;
            if (v127 == -1 || v128 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v127);
              *(_QWORD *)(a2 + v126) = v128;
              v125 |= (unint64_t)(v129 & 0x7F) << v123;
              if (v129 < 0)
              {
                v123 += 7;
                v15 = v124++ >= 9;
                if (v15)
                {
                  v130 = 0;
                  goto LABEL_224;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v130 = 0;
          else
            v130 = v125;
LABEL_224:
          objc_msgSend(a1, "setVarRTT:", v130);
          continue;
        case 0xFu:
          v131 = 0;
          v132 = 0;
          v133 = 0;
          while (2)
          {
            v134 = *v3;
            v135 = *(_QWORD *)(a2 + v134);
            v136 = v135 + 1;
            if (v135 == -1 || v136 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v137 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v135);
              *(_QWORD *)(a2 + v134) = v136;
              v133 |= (unint64_t)(v137 & 0x7F) << v131;
              if (v137 < 0)
              {
                v131 += 7;
                v15 = v132++ >= 9;
                if (v15)
                {
                  v138 = 0;
                  goto LABEL_229;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v138 = 0;
          else
            v138 = v133;
LABEL_229:
          objc_msgSend(a1, "setWifiRXPackets:", v138);
          continue;
        case 0x10u:
          v139 = 0;
          v140 = 0;
          v141 = 0;
          while (2)
          {
            v142 = *v3;
            v143 = *(_QWORD *)(a2 + v142);
            v144 = v143 + 1;
            if (v143 == -1 || v144 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v143);
              *(_QWORD *)(a2 + v142) = v144;
              v141 |= (unint64_t)(v145 & 0x7F) << v139;
              if (v145 < 0)
              {
                v139 += 7;
                v15 = v140++ >= 9;
                if (v15)
                {
                  v146 = 0;
                  goto LABEL_234;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v146 = 0;
          else
            v146 = v141;
LABEL_234:
          objc_msgSend(a1, "setWifiTXPackets:", v146);
          continue;
        case 0x11u:
          v147 = 0;
          v148 = 0;
          v149 = 0;
          while (2)
          {
            v150 = *v3;
            v151 = *(_QWORD *)(a2 + v150);
            v152 = v151 + 1;
            if (v151 == -1 || v152 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v153 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v151);
              *(_QWORD *)(a2 + v150) = v152;
              v149 |= (unint64_t)(v153 & 0x7F) << v147;
              if (v153 < 0)
              {
                v147 += 7;
                v15 = v148++ >= 9;
                if (v15)
                {
                  v154 = 0;
                  goto LABEL_239;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v154 = 0;
          else
            v154 = v149;
LABEL_239:
          objc_msgSend(a1, "setWiredRXPackets:", v154);
          continue;
        case 0x12u:
          v155 = 0;
          v156 = 0;
          v157 = 0;
          while (2)
          {
            v158 = *v3;
            v159 = *(_QWORD *)(a2 + v158);
            v160 = v159 + 1;
            if (v159 == -1 || v160 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v161 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v159);
              *(_QWORD *)(a2 + v158) = v160;
              v157 |= (unint64_t)(v161 & 0x7F) << v155;
              if (v161 < 0)
              {
                v155 += 7;
                v15 = v156++ >= 9;
                if (v15)
                {
                  v162 = 0;
                  goto LABEL_244;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v162 = 0;
          else
            v162 = v157;
LABEL_244:
          objc_msgSend(a1, "setWiredTXPackets:", v162);
          continue;
        case 0x13u:
          PBReaderReadString();
          v163 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setStatsType:", v163);

          continue;
        case 0x14u:
          v164 = 0;
          v165 = 0;
          v166 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v167 = *v3;
        v168 = *(_QWORD *)(a2 + v167);
        v169 = v168 + 1;
        if (v168 == -1 || v169 > *(_QWORD *)(a2 + *v4))
          break;
        v170 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v168);
        *(_QWORD *)(a2 + v167) = v169;
        v166 |= (unint64_t)(v170 & 0x7F) << v164;
        if ((v170 & 0x80) == 0)
          goto LABEL_246;
        v164 += 7;
        v15 = v165++ >= 9;
        if (v15)
        {
          v171 = 0;
          goto LABEL_249;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_246:
      v171 = *(_BYTE *)(a2 + *v5) ? 0 : v166;
LABEL_249:
      objc_msgSend(a1, "setTxRetransmitBytes:", v171);
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL _CPClientSessionReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  _CPUsageSinceLookback *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  double v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  void *v87;
  uint64_t v89;
  uint64_t v90;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    v18 = v10 >> 3;
    objc_msgSend(a1, "feedbacks");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = objc_msgSend(v19, "count");

    if (v20 && (_DWORD)v18 != 200)
      return 0;
    switch((int)v18)
    {
      case 1:
        PBReaderReadString();
        v21 = (_CPUsageSinceLookback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setAgent:", v21);
        goto LABEL_115;
      case 2:
        PBReaderReadString();
        v21 = (_CPUsageSinceLookback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setUserGuidString:", v21);
        goto LABEL_115;
      case 3:
        v89 = 0;
        v90 = 0;
        PBReaderPlaceMark();
        v22 = 0;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          v25 = v24 + 1;
          if (v24 == -1 || v25 > *(_QWORD *)(a2 + *v4))
            break;
          v26 = *(char *)(*(_QWORD *)(a2 + *v7) + v24);
          *(_QWORD *)(a2 + v23) = v25;
          if (v26 < 0)
          {
            v15 = v22++ >= 9;
            if (!v15)
              continue;
          }
          goto LABEL_105;
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_105:
        PBReaderReadString();
        v21 = (_CPUsageSinceLookback *)objc_claimAutoreleasedReturnValue();
        v82 = 0;
        while (1)
        {
          v83 = *v3;
          v84 = *(_QWORD *)(a2 + v83);
          v85 = v84 + 1;
          if (v84 == -1 || v85 > *(_QWORD *)(a2 + *v4))
            break;
          v86 = *(char *)(*(_QWORD *)(a2 + *v7) + v84);
          *(_QWORD *)(a2 + v83) = v85;
          if (v86 < 0)
          {
            v15 = v82++ >= 9;
            if (!v15)
              continue;
          }
          goto LABEL_113;
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_113:
        PBReaderReadString();
        v87 = (void *)objc_claimAutoreleasedReturnValue();
        PBReaderRecallMark();
        if (!*(_BYTE *)(a2 + *v5))
        {
          objc_msgSend(a1, "setResourceVersions:forKey:", v87, v21);

LABEL_115:
LABEL_116:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

LABEL_153:
        return 0;
      case 4:
        v27 = *v3;
        v28 = *(_QWORD *)(a2 + v27);
        if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v29 = *(double *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v29 = 0.0;
        }
        objc_msgSend(a1, "setSessionStart:", v29, v89, v90);
        goto LABEL_116;
      case 5:
        v30 = 0;
        v31 = 0;
        v32 = 0;
        while (2)
        {
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          v35 = v34 + 1;
          if (v34 == -1 || v35 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
            *(_QWORD *)(a2 + v33) = v35;
            v32 |= (unint64_t)(v36 & 0x7F) << v30;
            if (v36 < 0)
            {
              v30 += 7;
              v15 = v31++ >= 9;
              if (v15)
              {
                v37 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v37 = 0;
        else
          v37 = v32;
LABEL_122:
        objc_msgSend(a1, "setPreviousSessionEndReason:", v37, v89, v90);
        goto LABEL_116;
      case 6:
      case 7:
      case 9:
      case 10:
      case 11:
        goto LABEL_28;
      case 8:
        v38 = 0;
        v39 = 0;
        v40 = 0;
        while (2)
        {
          v41 = *v3;
          v42 = *(_QWORD *)(a2 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
            *(_QWORD *)(a2 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              v15 = v39++ >= 9;
              if (v15)
              {
                v40 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v40 = 0;
LABEL_126:
        objc_msgSend(a1, "setRemoveTimestamps:", v40 != 0);
        goto LABEL_116;
      case 12:
        PBReaderReadString();
        v21 = (_CPUsageSinceLookback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setParsecDeveloperID:", v21);
        goto LABEL_115;
      case 13:
        v45 = 0;
        v46 = 0;
        v47 = 0;
        while (2)
        {
          v48 = *v3;
          v49 = *(_QWORD *)(a2 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
            *(_QWORD *)(a2 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v15 = v46++ >= 9;
              if (v15)
              {
                v47 = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v47 = 0;
LABEL_130:
        objc_msgSend(a1, "setDuEnabled:", v47 != 0);
        goto LABEL_116;
      case 14:
        PBReaderReadString();
        v21 = (_CPUsageSinceLookback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setCountryCode:", v21);
        goto LABEL_115;
      case 15:
        PBReaderReadString();
        v21 = (_CPUsageSinceLookback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setLocale:", v21);
        goto LABEL_115;
      case 16:
        v21 = objc_alloc_init(_CPUsageSinceLookback);
        v89 = 0;
        v90 = 0;
        if (!PBReaderPlaceMark() || (_CPUsageSinceLookbackReadFrom(v21, a2) & 1) == 0)
          goto LABEL_153;
        PBReaderRecallMark();
        objc_msgSend(a1, "setUsageSinceLookback:", v21);
        goto LABEL_115;
      case 17:
        v21 = objc_alloc_init(_CPUsageEnvelope);
        v89 = 0;
        v90 = 0;
        if (!PBReaderPlaceMark() || (_CPUsageEnvelopeReadFrom(v21, a2) & 1) == 0)
          goto LABEL_153;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCohortsFeedback:", v21);
        goto LABEL_115;
      case 18:
        v52 = 0;
        v53 = 0;
        v54 = 0;
        while (2)
        {
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              v15 = v53++ >= 9;
              if (v15)
              {
                v59 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v59 = 0;
        else
          v59 = v54;
LABEL_135:
        objc_msgSend(a1, "setDevicePersistentD20:", v59, v89, v90);
        goto LABEL_116;
      case 19:
        v60 = 0;
        v61 = 0;
        v62 = 0;
        while (2)
        {
          v63 = *v3;
          v64 = *(_QWORD *)(a2 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              v15 = v61++ >= 9;
              if (v15)
              {
                v67 = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v67 = 0;
        else
          v67 = v62;
LABEL_140:
        objc_msgSend(a1, "setPrivateRelayStatus:", v67, v89, v90);
        goto LABEL_116;
      case 20:
        v68 = 0;
        v69 = 0;
        v70 = 0;
        while (2)
        {
          v71 = *v3;
          v72 = *(_QWORD *)(a2 + v71);
          v73 = v72 + 1;
          if (v72 == -1 || v73 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
            *(_QWORD *)(a2 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              v15 = v69++ >= 9;
              if (v15)
              {
                v70 = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v70 = 0;
LABEL_144:
        objc_msgSend(a1, "setIsInternalCarry:", v70 != 0);
        goto LABEL_116;
      case 21:
        v21 = objc_alloc_init(_CPExperimentInfo);
        v89 = 0;
        v90 = 0;
        if (!PBReaderPlaceMark() || !_CPExperimentInfoReadFrom(v21, a2))
          goto LABEL_153;
        PBReaderRecallMark();
        if (v21)
          objc_msgSend(a1, "addExperimentInfo:", v21, 0, 0);
        goto LABEL_115;
      case 22:
        v75 = 0;
        v76 = 0;
        v77 = 0;
        while (2)
        {
          v78 = *v3;
          v79 = *(_QWORD *)(a2 + v78);
          v80 = v79 + 1;
          if (v79 == -1 || v80 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v80;
            v77 |= (unint64_t)(v81 & 0x7F) << v75;
            if (v81 < 0)
            {
              v75 += 7;
              v15 = v76++ >= 9;
              if (v15)
              {
                v77 = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v77 = 0;
LABEL_148:
        objc_msgSend(a1, "setSearchOptOut:", v77 != 0);
        goto LABEL_116;
      default:
        if ((_DWORD)v18 == 101)
        {
          PBReaderReadData();
          v21 = (_CPUsageSinceLookback *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setJsonFeedback:", v21);
          goto LABEL_115;
        }
        if ((_DWORD)v18 != 200)
        {
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
          goto LABEL_116;
        }
        v21 = objc_alloc_init(_CPFeedbackPayload);
        v89 = 0;
        v90 = 0;
        if (!PBReaderPlaceMark() || !_CPFeedbackPayloadReadFrom(v21, a2))
          goto LABEL_153;
        PBReaderRecallMark();
        if (v21)
          objc_msgSend(a1, "addFeedback:", v21, 0, 0);
        goto LABEL_115;
    }
  }
}

uint64_t _CPUserReportFeedbackReadFrom(void *a1, uint64_t a2)
{
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t result;
  _CPSearchResultForFeedback *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  objc_msgSend(a1, "setTimestamp:", 0);
  v4 = (int *)MEMORY[0x1E0D82BF0];
  v5 = (int *)MEMORY[0x1E0D82BD8];
  v6 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v6) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v6))
      return *(_BYTE *)(a2 + *v6) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v4;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v5))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v6);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v6);
    if (*(_BYTE *)(a2 + *v6))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v6) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v4;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v5))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_54;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            v25 = 0;
            goto LABEL_57;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_54:
        if (*(_BYTE *)(a2 + *v6))
          v25 = 0;
        else
          v25 = v20;
LABEL_57:
        objc_msgSend(a1, "setTimestamp:", v25, v36, v37);
        goto LABEL_44;
      case 2u:
        v27 = objc_alloc_init(_CPSearchResultForFeedback);
        if (!PBReaderPlaceMark() || (_CPSearchResultForFeedbackReadFrom(v27, a2) & 1) == 0)
          goto LABEL_64;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResult:", v27, 0, 0);
        goto LABEL_43;
      case 3u:
        v27 = objc_alloc_init(_CPPunchoutForFeedback);
        if (!PBReaderPlaceMark() || (_CPPunchoutForFeedbackReadFrom(v27, a2) & 1) == 0)
          goto LABEL_64;
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserSelection:", v27, 0, 0);
        goto LABEL_43;
      case 4u:
        v27 = objc_alloc_init(_CPCardSectionForFeedback);
        if (!PBReaderPlaceMark() || (_CPCardSectionForFeedbackReadFrom(v27, a2) & 1) == 0)
          goto LABEL_64;
        PBReaderRecallMark();
        objc_msgSend(a1, "setCardSection:", v27, 0, 0);
        goto LABEL_43;
      case 5u:
        PBReaderReadData();
        v27 = (_CPSearchResultForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setUuidBytes:", v27);
        goto LABEL_43;
      case 6u:
        v27 = objc_alloc_init(_CPResultSectionForFeedback);
        v36 = 0;
        v37 = 0;
        if (PBReaderPlaceMark() && _CPResultSectionForFeedbackReadFrom(v27, a2))
        {
          PBReaderRecallMark();
          if (v27)
            objc_msgSend(a1, "addSections:", v27, 0, 0);
LABEL_43:

LABEL_44:
          if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
            return *(_BYTE *)(a2 + *v6) == 0;
          continue;
        }
LABEL_64:

        return 0;
      case 7u:
        PBReaderReadString();
        v27 = (_CPSearchResultForFeedback *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setUploadedDataIdentifier:", v27);
        goto LABEL_43;
      case 8u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v4;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v5))
          {
            *(_BYTE *)(a2 + *v6) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_62;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v6))
          v35 = 0;
        else
          v35 = v30;
LABEL_62:
        objc_msgSend(a1, "setReportType:", v35, v36, v37);
        goto LABEL_44;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_44;
    }
  }
}

id PARLogHandleForCategory()
{
  if (PARLogHandleForCategory_onceToken_1514 != -1)
    dispatch_once(&PARLogHandleForCategory_onceToken_1514, &__block_literal_global_1515);
  return (id)PARLogHandleForCategory_logHandles_2_1516;
}

uint64_t _CPResultTypeToPQCType(int a1)
{
  if ((a1 - 1) > 0x1D)
    return 0;
  else
    return qword_19A8CFD78[a1 - 1];
}

void sub_19A8BE90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  _Block_object_dispose(&a69, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void __decodeSqf_block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;
  void *v8;
  NSObject *v9;
  uint8_t v10[16];

  v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v7, "parsec_stringForKey:", CFSTR("prefix"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v8, "rangeOfString:options:", *(_QWORD *)(a1 + 32), 9) != 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
      *a4 = 1;
    }

  }
  else
  {
    if (PARLogHandleForCategory_onceToken_2084 != -1)
      dispatch_once(&PARLogHandleForCategory_onceToken_2084, &__block_literal_global_226);
    v9 = PARLogHandleForCategory_logHandles_2_2085;
    if (os_log_type_enabled((os_log_t)PARLogHandleForCategory_logHandles_2_2085, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v10 = 0;
      _os_log_error_impl(&dword_19A825000, v9, OS_LOG_TYPE_ERROR, "sqf element not a dictionary", v10, 2u);
    }
  }

}

void recursiveSetQueryId(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  objc_msgSend(v3, "setQueryId:", a2);
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  objc_msgSend(v3, "cardSections");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v20;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v20 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * v8);
        v15 = 0u;
        v16 = 0u;
        v17 = 0u;
        v18 = 0u;
        objc_msgSend(v9, "embeddedCards", 0);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v15, v23, 16);
        if (v11)
        {
          v12 = v11;
          v13 = *(_QWORD *)v16;
          do
          {
            v14 = 0;
            do
            {
              if (*(_QWORD *)v16 != v13)
                objc_enumerationMutation(v10);
              recursiveSetQueryId(*(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v14++), a2);
            }
            while (v12 != v14);
            v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v15, v23, 16);
          }
          while (v12);
        }

        ++v8;
      }
      while (v8 != v6);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
    }
    while (v6);
  }

}

void __checkValidParsecHost_block_invoke()
{
  __SecTask *v0;
  __SecTask *v1;
  uint32_t v2;
  CFTypeRef v3;
  void *v4;
  CFTypeID v5;
  uint64_t v6;

  v0 = SecTaskCreateFromSelf((CFAllocatorRef)*MEMORY[0x1E0C9AE00]);
  if (v0)
  {
    v1 = v0;
    v2 = SecTaskGetCodeSignStatus(v0) & 0x4000001;
    checkValidParsecHost_isValidHost = v2 == 67108865;
    if (v2 != 67108865)
    {
      if (MGGetBoolAnswer())
      {
        v3 = SecTaskCopyValueForEntitlement(v1, CFSTR("com.apple.private.parsec.default-client"), 0);
        if (v3)
        {
          v4 = (void *)v3;
          v5 = CFGetTypeID(v3);
          if (v5 == CFStringGetTypeID())
          {
            v6 = objc_msgSend(v4, "length");
            CFRelease(v4);
            if (v6)
              checkValidParsecHost_isValidHost = 1;
          }
          else
          {
            CFRelease(v4);
          }
        }
      }
    }
    CFRelease(v1);
  }
}

uint64_t sub_19A8C3D20()
{
  return MEMORY[0x1E0CADED0]();
}

uint64_t sub_19A8C3D2C()
{
  return MEMORY[0x1E0CADEF0]();
}

uint64_t sub_19A8C3D38()
{
  return MEMORY[0x1E0CADF10]();
}

uint64_t sub_19A8C3D44()
{
  return MEMORY[0x1E0CADF50]();
}

uint64_t sub_19A8C3D50()
{
  return MEMORY[0x1E0CAE670]();
}

uint64_t sub_19A8C3D5C()
{
  return MEMORY[0x1E0CAE678]();
}

uint64_t sub_19A8C3D68()
{
  return MEMORY[0x1E0CAE690]();
}

uint64_t sub_19A8C3D74()
{
  return MEMORY[0x1E0CAE768]();
}

uint64_t sub_19A8C3D80()
{
  return MEMORY[0x1E0CAE858]();
}

uint64_t sub_19A8C3D8C()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_19A8C3D98()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_19A8C3DA4()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_19A8C3DB0()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t sub_19A8C3DBC()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_19A8C3DC8()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_19A8C3DD4()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_19A8C3DE0()
{
  return MEMORY[0x1E0CAFF80]();
}

uint64_t sub_19A8C3DEC()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_19A8C3DF8()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_19A8C3E04()
{
  return MEMORY[0x1E0CB0080]();
}

uint64_t sub_19A8C3E10()
{
  return MEMORY[0x1E0CB0098]();
}

uint64_t sub_19A8C3E1C()
{
  return MEMORY[0x1E0CB00F8]();
}

uint64_t sub_19A8C3E28()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_19A8C3E34()
{
  return MEMORY[0x1E0CB01F8]();
}

uint64_t sub_19A8C3E40()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_19A8C3E4C()
{
  return MEMORY[0x1E0CB0260]();
}

uint64_t sub_19A8C3E58()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_19A8C3E64()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_19A8C3E70()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_19A8C3E7C()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_19A8C3E88()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_19A8C3E94()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_19A8C3EA0()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_19A8C3EAC()
{
  return MEMORY[0x1E0CB0978]();
}

uint64_t sub_19A8C3EB8()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_19A8C3EC4()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_19A8C3ED0()
{
  return MEMORY[0x1E0CB0A90]();
}

uint64_t sub_19A8C3EDC()
{
  return MEMORY[0x1E0CB0C30]();
}

uint64_t sub_19A8C3EE8()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_19A8C3EF4()
{
  return MEMORY[0x1E0D6D2B0]();
}

uint64_t sub_19A8C3F00()
{
  return MEMORY[0x1E0D6D2B8]();
}

uint64_t sub_19A8C3F0C()
{
  return MEMORY[0x1E0D6D2C0]();
}

uint64_t sub_19A8C3F18()
{
  return MEMORY[0x1E0D6D2C8]();
}

uint64_t sub_19A8C3F24()
{
  return MEMORY[0x1E0D6D2D0]();
}

uint64_t sub_19A8C3F30()
{
  return MEMORY[0x1E0D6D2E8]();
}

uint64_t sub_19A8C3F3C()
{
  return MEMORY[0x1E0D6D2F8]();
}

uint64_t sub_19A8C3F48()
{
  return MEMORY[0x1E0D6D300]();
}

uint64_t sub_19A8C3F54()
{
  return MEMORY[0x1E0D6D308]();
}

uint64_t sub_19A8C3F60()
{
  return MEMORY[0x1E0D6D310]();
}

uint64_t sub_19A8C3F6C()
{
  return MEMORY[0x1E0D6D318]();
}

uint64_t sub_19A8C3F78()
{
  return MEMORY[0x1E0D6D320]();
}

uint64_t sub_19A8C3F84()
{
  return MEMORY[0x1E0D6D328]();
}

uint64_t sub_19A8C3F90()
{
  return MEMORY[0x1E0D6D330]();
}

uint64_t sub_19A8C3F9C()
{
  return MEMORY[0x1E0D6D338]();
}

uint64_t sub_19A8C3FA8()
{
  return MEMORY[0x1E0D6D340]();
}

uint64_t sub_19A8C3FB4()
{
  return MEMORY[0x1E0D6D348]();
}

uint64_t sub_19A8C3FC0()
{
  return MEMORY[0x1E0D6D350]();
}

uint64_t sub_19A8C3FCC()
{
  return MEMORY[0x1E0D6D358]();
}

uint64_t sub_19A8C3FD8()
{
  return MEMORY[0x1E0D6D360]();
}

uint64_t sub_19A8C3FE4()
{
  return MEMORY[0x1E0D6D368]();
}

uint64_t sub_19A8C3FF0()
{
  return MEMORY[0x1E0D6D370]();
}

uint64_t sub_19A8C3FFC()
{
  return MEMORY[0x1E0D6D378]();
}

uint64_t sub_19A8C4008()
{
  return MEMORY[0x1E0D6D380]();
}

uint64_t sub_19A8C4014()
{
  return MEMORY[0x1E0D6D388]();
}

uint64_t sub_19A8C4020()
{
  return MEMORY[0x1E0D6D390]();
}

uint64_t sub_19A8C402C()
{
  return MEMORY[0x1E0D6D398]();
}

uint64_t sub_19A8C4038()
{
  return MEMORY[0x1E0D6D3A0]();
}

uint64_t sub_19A8C4044()
{
  return MEMORY[0x1E0D6D3A8]();
}

uint64_t sub_19A8C4050()
{
  return MEMORY[0x1E0D6D3B0]();
}

uint64_t sub_19A8C405C()
{
  return MEMORY[0x1E0D6D3B8]();
}

uint64_t sub_19A8C4068()
{
  return MEMORY[0x1E0D6D3C0]();
}

uint64_t sub_19A8C4074()
{
  return MEMORY[0x1E0D6D3C8]();
}

uint64_t sub_19A8C4080()
{
  return MEMORY[0x1E0D6D3D0]();
}

uint64_t sub_19A8C408C()
{
  return MEMORY[0x1E0D6D3D8]();
}

uint64_t sub_19A8C4098()
{
  return MEMORY[0x1E0D6D3E0]();
}

uint64_t sub_19A8C40A4()
{
  return MEMORY[0x1E0D6D3E8]();
}

uint64_t sub_19A8C40B0()
{
  return MEMORY[0x1E0D6D3F0]();
}

uint64_t sub_19A8C40BC()
{
  return MEMORY[0x1E0D6D3F8]();
}

uint64_t sub_19A8C40C8()
{
  return MEMORY[0x1E0D6D400]();
}

uint64_t sub_19A8C40D4()
{
  return MEMORY[0x1E0D6D408]();
}

uint64_t sub_19A8C40E0()
{
  return MEMORY[0x1E0D6D410]();
}

uint64_t sub_19A8C40EC()
{
  return MEMORY[0x1E0D6D418]();
}

uint64_t sub_19A8C40F8()
{
  return MEMORY[0x1E0D6D420]();
}

uint64_t sub_19A8C4104()
{
  return MEMORY[0x1E0D6D428]();
}

uint64_t sub_19A8C4110()
{
  return MEMORY[0x1E0D6D430]();
}

uint64_t sub_19A8C411C()
{
  return MEMORY[0x1E0D6D438]();
}

uint64_t sub_19A8C4128()
{
  return MEMORY[0x1E0D6D440]();
}

uint64_t sub_19A8C4134()
{
  return MEMORY[0x1E0D6D448]();
}

uint64_t sub_19A8C4140()
{
  return MEMORY[0x1E0D6D450]();
}

uint64_t sub_19A8C414C()
{
  return MEMORY[0x1E0D6D480]();
}

uint64_t sub_19A8C4158()
{
  return MEMORY[0x1E0D6D488]();
}

uint64_t sub_19A8C4164()
{
  return MEMORY[0x1E0D6D490]();
}

uint64_t sub_19A8C4170()
{
  return MEMORY[0x1E0D6D670]();
}

uint64_t sub_19A8C417C()
{
  return MEMORY[0x1E0D6D690]();
}

uint64_t sub_19A8C4188()
{
  return MEMORY[0x1E0D6D6B0]();
}

uint64_t sub_19A8C4194()
{
  return MEMORY[0x1E0D6D7A8]();
}

uint64_t sub_19A8C41A0()
{
  return MEMORY[0x1E0D6D838]();
}

uint64_t sub_19A8C41AC()
{
  return MEMORY[0x1E0D6D870]();
}

uint64_t sub_19A8C41B8()
{
  return MEMORY[0x1E0D6D878]();
}

uint64_t sub_19A8C41C4()
{
  return MEMORY[0x1E0D6D888]();
}

uint64_t sub_19A8C41D0()
{
  return MEMORY[0x1E0D6D908]();
}

uint64_t sub_19A8C41DC()
{
  return MEMORY[0x1E0D6D9D8]();
}

uint64_t sub_19A8C41E8()
{
  return MEMORY[0x1E0D6D9E0]();
}

uint64_t sub_19A8C41F4()
{
  return MEMORY[0x1E0D6D9E8]();
}

uint64_t sub_19A8C4200()
{
  return MEMORY[0x1E0D6D9F0]();
}

uint64_t sub_19A8C420C()
{
  return MEMORY[0x1E0D6D9F8]();
}

uint64_t sub_19A8C4218()
{
  return MEMORY[0x1E0D6DA00]();
}

uint64_t sub_19A8C4224()
{
  return MEMORY[0x1E0D6DA10]();
}

uint64_t sub_19A8C4230()
{
  return MEMORY[0x1E0D6DA18]();
}

uint64_t sub_19A8C423C()
{
  return MEMORY[0x1E0D6DA20]();
}

uint64_t sub_19A8C4248()
{
  return MEMORY[0x1E0D6DA38]();
}

uint64_t sub_19A8C4254()
{
  return MEMORY[0x1E0D6DA40]();
}

uint64_t sub_19A8C4260()
{
  return MEMORY[0x1E0D6DA48]();
}

uint64_t sub_19A8C426C()
{
  return MEMORY[0x1E0D6DA50]();
}

uint64_t sub_19A8C4278()
{
  return MEMORY[0x1E0D6DB20]();
}

uint64_t sub_19A8C4284()
{
  return MEMORY[0x1E0D6DB28]();
}

uint64_t sub_19A8C4290()
{
  return MEMORY[0x1E0D6DB30]();
}

uint64_t sub_19A8C429C()
{
  return MEMORY[0x1E0D6DB38]();
}

uint64_t sub_19A8C42A8()
{
  return MEMORY[0x1E0D6DB40]();
}

uint64_t sub_19A8C42B4()
{
  return MEMORY[0x1E0D6DB48]();
}

uint64_t sub_19A8C42C0()
{
  return MEMORY[0x1E0D6DB50]();
}

uint64_t sub_19A8C42CC()
{
  return MEMORY[0x1E0D6DB58]();
}

uint64_t sub_19A8C42D8()
{
  return MEMORY[0x1E0D6DB60]();
}

uint64_t sub_19A8C42E4()
{
  return MEMORY[0x1E0D6DB68]();
}

uint64_t sub_19A8C42F0()
{
  return MEMORY[0x1E0D6DB70]();
}

uint64_t sub_19A8C42FC()
{
  return MEMORY[0x1E0D6DB78]();
}

uint64_t sub_19A8C4308()
{
  return MEMORY[0x1E0D6DB80]();
}

uint64_t sub_19A8C4314()
{
  return MEMORY[0x1E0D6DB88]();
}

uint64_t sub_19A8C4320()
{
  return MEMORY[0x1E0D6DD68]();
}

uint64_t sub_19A8C432C()
{
  return MEMORY[0x1E0D6DD70]();
}

uint64_t sub_19A8C4338()
{
  return MEMORY[0x1E0D6DF58]();
}

uint64_t sub_19A8C4344()
{
  return MEMORY[0x1E0D6DF60]();
}

uint64_t sub_19A8C4350()
{
  return MEMORY[0x1E0D6DFA0]();
}

uint64_t sub_19A8C435C()
{
  return MEMORY[0x1E0D6DFB8]();
}

uint64_t sub_19A8C4368()
{
  return MEMORY[0x1E0D6DFC0]();
}

uint64_t sub_19A8C4374()
{
  return MEMORY[0x1E0D6DFC8]();
}

uint64_t sub_19A8C4380()
{
  return MEMORY[0x1E0D6DFD0]();
}

uint64_t sub_19A8C438C()
{
  return MEMORY[0x1E0D6DFD8]();
}

uint64_t sub_19A8C4398()
{
  return MEMORY[0x1E0D6DFE0]();
}

uint64_t sub_19A8C43A4()
{
  return MEMORY[0x1E0D6E1B8]();
}

uint64_t sub_19A8C43B0()
{
  return MEMORY[0x1E0D6E1C0]();
}

uint64_t sub_19A8C43BC()
{
  return MEMORY[0x1E0D6E1C8]();
}

uint64_t sub_19A8C43C8()
{
  return MEMORY[0x1E0D6E1D0]();
}

uint64_t sub_19A8C43D4()
{
  return MEMORY[0x1E0D6E1D8]();
}

uint64_t sub_19A8C43E0()
{
  return MEMORY[0x1E0D6E1E0]();
}

uint64_t sub_19A8C43EC()
{
  return MEMORY[0x1E0D6E1E8]();
}

uint64_t sub_19A8C43F8()
{
  return MEMORY[0x1E0D6E1F0]();
}

uint64_t sub_19A8C4404()
{
  return MEMORY[0x1E0D6E1F8]();
}

uint64_t sub_19A8C4410()
{
  return MEMORY[0x1E0D6E200]();
}

uint64_t sub_19A8C441C()
{
  return MEMORY[0x1E0D6E208]();
}

uint64_t sub_19A8C4428()
{
  return MEMORY[0x1E0D6E2A8]();
}

uint64_t sub_19A8C4434()
{
  return MEMORY[0x1E0D6E2B0]();
}

uint64_t sub_19A8C4440()
{
  return MEMORY[0x1E0D6E2B8]();
}

uint64_t sub_19A8C444C()
{
  return MEMORY[0x1E0D6E2C0]();
}

uint64_t sub_19A8C4458()
{
  return MEMORY[0x1E0D6E2C8]();
}

uint64_t sub_19A8C4464()
{
  return MEMORY[0x1E0D6E2D0]();
}

uint64_t sub_19A8C4470()
{
  return MEMORY[0x1E0D6E2D8]();
}

uint64_t sub_19A8C447C()
{
  return MEMORY[0x1E0D6E2E0]();
}

uint64_t sub_19A8C4488()
{
  return MEMORY[0x1E0D6E2E8]();
}

uint64_t sub_19A8C4494()
{
  return MEMORY[0x1E0D6E2F0]();
}

uint64_t sub_19A8C44A0()
{
  return MEMORY[0x1E0D6E2F8]();
}

uint64_t sub_19A8C44AC()
{
  return MEMORY[0x1E0D6E300]();
}

uint64_t sub_19A8C44B8()
{
  return MEMORY[0x1E0D6E308]();
}

uint64_t sub_19A8C44C4()
{
  return MEMORY[0x1E0D6E310]();
}

uint64_t sub_19A8C44D0()
{
  return MEMORY[0x1E0D6E560]();
}

uint64_t sub_19A8C44DC()
{
  return MEMORY[0x1E0D6E568]();
}

uint64_t sub_19A8C44E8()
{
  return MEMORY[0x1E0D6E570]();
}

uint64_t sub_19A8C44F4()
{
  return MEMORY[0x1E0D6E578]();
}

uint64_t sub_19A8C4500()
{
  return MEMORY[0x1E0D6E580]();
}

uint64_t sub_19A8C450C()
{
  return MEMORY[0x1E0D6E588]();
}

uint64_t sub_19A8C4518()
{
  return MEMORY[0x1E0D6E590]();
}

uint64_t sub_19A8C4524()
{
  return MEMORY[0x1E0D6E598]();
}

uint64_t sub_19A8C4530()
{
  return MEMORY[0x1E0D6E5A0]();
}

uint64_t sub_19A8C453C()
{
  return MEMORY[0x1E0D6E5A8]();
}

uint64_t sub_19A8C4548()
{
  return MEMORY[0x1E0D6E5B0]();
}

uint64_t sub_19A8C4554()
{
  return MEMORY[0x1E0D6E5B8]();
}

uint64_t sub_19A8C4560()
{
  return MEMORY[0x1E0D6E5C0]();
}

uint64_t sub_19A8C456C()
{
  return MEMORY[0x1E0D6E770]();
}

uint64_t sub_19A8C4578()
{
  return MEMORY[0x1E0D6E778]();
}

uint64_t sub_19A8C4584()
{
  return MEMORY[0x1E0D6E780]();
}

uint64_t sub_19A8C4590()
{
  return MEMORY[0x1E0D6E790]();
}

uint64_t sub_19A8C459C()
{
  return MEMORY[0x1E0D6E8D8]();
}

uint64_t sub_19A8C45A8()
{
  return MEMORY[0x1E0D6E8E0]();
}

uint64_t sub_19A8C45B4()
{
  return MEMORY[0x1E0D6E8F0]();
}

uint64_t sub_19A8C45C0()
{
  return MEMORY[0x1E0D6E8F8]();
}

uint64_t sub_19A8C45CC()
{
  return MEMORY[0x1E0D6E900]();
}

uint64_t sub_19A8C45D8()
{
  return MEMORY[0x1E0D6E908]();
}

uint64_t sub_19A8C45E4()
{
  return MEMORY[0x1E0D6EBA8]();
}

uint64_t sub_19A8C45F0()
{
  return MEMORY[0x1E0D6ED30]();
}

uint64_t sub_19A8C45FC()
{
  return MEMORY[0x1E0D6EF28]();
}

uint64_t sub_19A8C4608()
{
  return MEMORY[0x1E0D6EF30]();
}

uint64_t sub_19A8C4614()
{
  return MEMORY[0x1E0D6F698]();
}

uint64_t sub_19A8C4620()
{
  return MEMORY[0x1E0D6F6A0]();
}

uint64_t sub_19A8C462C()
{
  return MEMORY[0x1E0D6F6A8]();
}

uint64_t sub_19A8C4638()
{
  return MEMORY[0x1E0D6FC08]();
}

uint64_t sub_19A8C4644()
{
  return MEMORY[0x1E0D6FC10]();
}

uint64_t sub_19A8C4650()
{
  return MEMORY[0x1E0D6FC18]();
}

uint64_t sub_19A8C465C()
{
  return MEMORY[0x1E0D6FD28]();
}

uint64_t sub_19A8C4668()
{
  return MEMORY[0x1E0D6FE48]();
}

uint64_t sub_19A8C4674()
{
  return MEMORY[0x1E0D6FE50]();
}

uint64_t sub_19A8C4680()
{
  return MEMORY[0x1E0D6FE58]();
}

uint64_t sub_19A8C468C()
{
  return MEMORY[0x1E0D6FE60]();
}

uint64_t sub_19A8C4698()
{
  return MEMORY[0x1E0D6FE68]();
}

uint64_t sub_19A8C46A4()
{
  return MEMORY[0x1E0D6FE70]();
}

uint64_t sub_19A8C46B0()
{
  return MEMORY[0x1E0D6FE80]();
}

uint64_t sub_19A8C46BC()
{
  return MEMORY[0x1E0D6FF48]();
}

uint64_t sub_19A8C46C8()
{
  return MEMORY[0x1E0D6FF58]();
}

uint64_t sub_19A8C46D4()
{
  return MEMORY[0x1E0D70458]();
}

uint64_t sub_19A8C46E0()
{
  return MEMORY[0x1E0D70468]();
}

uint64_t sub_19A8C46EC()
{
  return MEMORY[0x1E0DF1EB8]();
}

uint64_t sub_19A8C46F8()
{
  return MEMORY[0x1E0D70660]();
}

uint64_t sub_19A8C4704()
{
  return MEMORY[0x1E0D70668]();
}

uint64_t sub_19A8C4710()
{
  return MEMORY[0x1E0D70698]();
}

uint64_t sub_19A8C471C()
{
  return MEMORY[0x1E0D706A8]();
}

uint64_t sub_19A8C4728()
{
  return MEMORY[0x1E0D706B0]();
}

uint64_t sub_19A8C4734()
{
  return MEMORY[0x1E0D706B8]();
}

uint64_t sub_19A8C4740()
{
  return MEMORY[0x1E0D706C0]();
}

uint64_t sub_19A8C474C()
{
  return MEMORY[0x1E0D3EA48]();
}

uint64_t sub_19A8C4758()
{
  return MEMORY[0x1E0D3EA50]();
}

uint64_t sub_19A8C4764()
{
  return MEMORY[0x1E0D3EA60]();
}

uint64_t sub_19A8C4770()
{
  return MEMORY[0x1E0D3EA68]();
}

uint64_t sub_19A8C477C()
{
  return MEMORY[0x1E0D3EC38]();
}

uint64_t sub_19A8C4788()
{
  return MEMORY[0x1E0D3EC48]();
}

uint64_t sub_19A8C4794()
{
  return MEMORY[0x1E0D3EC50]();
}

uint64_t sub_19A8C47A0()
{
  return MEMORY[0x1E0D3EC58]();
}

uint64_t sub_19A8C47AC()
{
  return MEMORY[0x1E0DF2078]();
}

uint64_t sub_19A8C47B8()
{
  return MEMORY[0x1E0DF2080]();
}

uint64_t sub_19A8C47C4()
{
  return MEMORY[0x1E0DF2088]();
}

uint64_t sub_19A8C47D0()
{
  return MEMORY[0x1E0DF2090]();
}

uint64_t sub_19A8C47DC()
{
  return MEMORY[0x1E0DF20F8]();
}

uint64_t sub_19A8C47E8()
{
  return MEMORY[0x1E0DF2100]();
}

uint64_t sub_19A8C47F4()
{
  return MEMORY[0x1E0DF2108]();
}

uint64_t sub_19A8C4800()
{
  return MEMORY[0x1E0DF2110]();
}

uint64_t sub_19A8C480C()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t sub_19A8C4818()
{
  return MEMORY[0x1E0DF2148]();
}

uint64_t sub_19A8C4824()
{
  return MEMORY[0x1E0DF2150]();
}

uint64_t sub_19A8C4830()
{
  return MEMORY[0x1E0DF2170]();
}

uint64_t sub_19A8C483C()
{
  return MEMORY[0x1E0DF2198]();
}

uint64_t sub_19A8C4848()
{
  return MEMORY[0x1E0DF2218]();
}

uint64_t sub_19A8C4854()
{
  return MEMORY[0x1E0DF2220]();
}

uint64_t sub_19A8C4860()
{
  return MEMORY[0x1E0DF2228]();
}

uint64_t sub_19A8C486C()
{
  return MEMORY[0x1E0DF2238]();
}

uint64_t sub_19A8C4878()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_19A8C4884()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_19A8C4890()
{
  return MEMORY[0x1E0DF2250]();
}

uint64_t sub_19A8C489C()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_19A8C48A8()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_19A8C48B4()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_19A8C48C0()
{
  return MEMORY[0x1E0DEF590]();
}

uint64_t sub_19A8C48CC()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_19A8C48D8()
{
  return MEMORY[0x1E0DF05B0]();
}

uint64_t sub_19A8C48E4()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_19A8C48F0()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_19A8C48FC()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_19A8C4908()
{
  return MEMORY[0x1E0DE9E78]();
}

uint64_t sub_19A8C4914()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_19A8C4920()
{
  return MEMORY[0x1E0DF1FA0]();
}

uint64_t sub_19A8C492C()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_19A8C4938()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_19A8C4944()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_19A8C4950()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_19A8C495C()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_19A8C4968()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_19A8C4974()
{
  return MEMORY[0x1E0DEA688]();
}

uint64_t sub_19A8C4980()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_19A8C498C()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_19A8C4998()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_19A8C49A4()
{
  return MEMORY[0x1E0DEA810]();
}

uint64_t sub_19A8C49B0()
{
  return MEMORY[0x1E0DEA818]();
}

uint64_t sub_19A8C49BC()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_19A8C49C8()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_19A8C49D4()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_19A8C49E0()
{
  return MEMORY[0x1E0DEAAB8]();
}

uint64_t sub_19A8C49EC()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t sub_19A8C49F8()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_19A8C4A04()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_19A8C4A10()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_19A8C4A1C()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_19A8C4A28()
{
  return MEMORY[0x1E0DEADA8]();
}

uint64_t sub_19A8C4A34()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_19A8C4A40()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_19A8C4A4C()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_19A8C4A58()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_19A8C4A64()
{
  return MEMORY[0x1E0DEAE68]();
}

uint64_t sub_19A8C4A70()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_19A8C4A7C()
{
  return MEMORY[0x1E0DEAF78]();
}

uint64_t sub_19A8C4A88()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_19A8C4A94()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_19A8C4AA0()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_19A8C4AAC()
{
  return MEMORY[0x1E0DF05E0]();
}

uint64_t sub_19A8C4AB8()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_19A8C4AC4()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_19A8C4AD0()
{
  return MEMORY[0x1E0DF0860]();
}

uint64_t sub_19A8C4ADC()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_19A8C4AE8()
{
  return MEMORY[0x1E0DF08B8]();
}

uint64_t sub_19A8C4AF4()
{
  return MEMORY[0x1E0DF08C8]();
}

uint64_t sub_19A8C4B00()
{
  return MEMORY[0x1E0CB1B50]();
}

uint64_t sub_19A8C4B0C()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_19A8C4B18()
{
  return MEMORY[0x1E0DEB5E8]();
}

uint64_t sub_19A8C4B24()
{
  return MEMORY[0x1E0DEB5F0]();
}

uint64_t sub_19A8C4B30()
{
  return MEMORY[0x1E0DEB5F8]();
}

uint64_t sub_19A8C4B3C()
{
  return MEMORY[0x1E0DEB600]();
}

uint64_t sub_19A8C4B48()
{
  return MEMORY[0x1E0DEB608]();
}

uint64_t sub_19A8C4B54()
{
  return MEMORY[0x1E0DEB618]();
}

uint64_t sub_19A8C4B60()
{
  return MEMORY[0x1E0DEB628]();
}

uint64_t sub_19A8C4B6C()
{
  return MEMORY[0x1E0DEB630]();
}

uint64_t sub_19A8C4B78()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_19A8C4B84()
{
  return MEMORY[0x1E0DEB668]();
}

uint64_t sub_19A8C4B90()
{
  return MEMORY[0x1E0DEB6A0]();
}

uint64_t sub_19A8C4B9C()
{
  return MEMORY[0x1E0DEB6C0]();
}

uint64_t sub_19A8C4BA8()
{
  return MEMORY[0x1E0CB1C58]();
}

uint64_t sub_19A8C4BB4()
{
  return MEMORY[0x1E0CB1CF8]();
}

uint64_t sub_19A8C4BC0()
{
  return MEMORY[0x1E0D70738]();
}

uint64_t sub_19A8C4BCC()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_19A8C4BD8()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_19A8C4BE4()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_19A8C4BF0()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_19A8C4BFC()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_19A8C4C08()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_19A8C4C14()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_19A8C4C20()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_19A8C4C2C()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_19A8C4C38()
{
  return MEMORY[0x1E0DF2298]();
}

uint64_t sub_19A8C4C44()
{
  return MEMORY[0x1E0DF22A0]();
}

uint64_t sub_19A8C4C50()
{
  return MEMORY[0x1E0DF22A8]();
}

uint64_t sub_19A8C4C5C()
{
  return MEMORY[0x1E0CB1FF0]();
}

uint64_t sub_19A8C4C68()
{
  return MEMORY[0x1E0CB2020]();
}

uint64_t sub_19A8C4C74()
{
  return MEMORY[0x1E0CB20E0]();
}

uint64_t sub_19A8C4C80()
{
  return MEMORY[0x1E0DF22B0]();
}

uint64_t sub_19A8C4C8C()
{
  return MEMORY[0x1E0DF22B8]();
}

uint64_t sub_19A8C4C98()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_19A8C4CA4()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_19A8C4CB0()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_19A8C4CBC()
{
  return MEMORY[0x1E0CB23E0]();
}

uint64_t sub_19A8C4CC8()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_19A8C4CD4()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_19A8C4CE0()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_19A8C4CEC()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t sub_19A8C4CF8()
{
  return MEMORY[0x1E0CB2500]();
}

uint64_t sub_19A8C4D04()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_19A8C4D10()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_19A8C4D1C()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_19A8C4D28()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_19A8C4D34()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_19A8C4D40()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_19A8C4D4C()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_19A8C4D58()
{
  return MEMORY[0x1E0DEC338]();
}

uint64_t sub_19A8C4D64()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_19A8C4D70()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_19A8C4D7C()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_19A8C4D88()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_19A8C4D94()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_19A8C4DA0()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_19A8C4DAC()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_19A8C4DB8()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_19A8C4DC4()
{
  return MEMORY[0x1E0DECAE0]();
}

uint64_t sub_19A8C4DD0()
{
  return MEMORY[0x1E0DECB00]();
}

uint64_t sub_19A8C4DDC()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_19A8C4DE8()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t sub_19A8C4DF4()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_19A8C4E00()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_19A8C4E0C()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_19A8C4E18()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_19A8C4E24()
{
  return MEMORY[0x1E0DED5F8]();
}

uint64_t sub_19A8C4E30()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_19A8C4E3C()
{
  return MEMORY[0x1E0DED768]();
}

uint64_t sub_19A8C4E48()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_19A8C4E54()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_19A8C4E60()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_19A8C4E6C()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_19A8C4E78()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_19A8C4E84()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_19A8C4E90()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_19A8C4E9C()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_19A8C4EA8()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_19A8C4EB4()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_19A8C4EC0()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_19A8C4ECC()
{
  return MEMORY[0x1E0DEE8F8]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1E0D15420]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1E0C99170]();
}

uint64_t GEOCompletionItemFromSerializedAutocompleteEntry()
{
  return MEMORY[0x1E0D26480]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

uint64_t PBDataWriterPlaceMark()
{
  return MEMORY[0x1E0D82BF8]();
}

uint64_t PBDataWriterRecallMark()
{
  return MEMORY[0x1E0D82C00]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x1E0D82C10]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x1E0D82C28]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x1E0D82C38]();
}

uint64_t PBDataWriterWriteFloatField()
{
  return MEMORY[0x1E0D82C50]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x1E0D82C58]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x1E0D82C68]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x1E0D82C98]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x1E0D82CB0]();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return MEMORY[0x1E0D82CB8]();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return MEMORY[0x1E0D82CC0]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x1E0D82CE0]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x1E0D82CF0]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x1E0D82D00]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x1E0D82D10]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x1E0D82D28]();
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x1E0CD65F0](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x1E0CD6610](allocator);
}

uint32_t SecTaskGetCodeSignStatus(SecTaskRef task)
{
  return MEMORY[0x1E0CD6638](task);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFHostIsDomainTopLevel()
{
  return MEMORY[0x1E0C92EA8]();
}

uint64_t _CFPropertyListCreateFiltered()
{
  return MEMORY[0x1E0C9A3F8]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1E0C813B0]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1E0C83C50]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

uint64_t nw_activity_activate()
{
  return MEMORY[0x1E0CCEDE0]();
}

uint64_t nw_activity_complete_with_reason()
{
  return MEMORY[0x1E0CCEDE8]();
}

uint64_t nw_activity_create()
{
  return MEMORY[0x1E0CCEE00]();
}

uint64_t nw_activity_create_from_token()
{
  return MEMORY[0x1E0CCEE08]();
}

uint64_t nw_activity_get_token()
{
  return MEMORY[0x1E0CCEE28]();
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return MEMORY[0x1E0C84930](log, ptr);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1E0C84970]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

int proc_pidpath(int pid, void *buffer, uint32_t buffersize)
{
  return MEMORY[0x1E0C84C50](*(_QWORD *)&pid, buffer, *(_QWORD *)&buffersize);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1E0DEEBB0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x1E0DEED68]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x1E0DEEF28]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x1E0DEEF30]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x1E0DEEF50]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x1E0DEEF58]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1E0DEEF80]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

int uuid_is_null(const uuid_t uu)
{
  return MEMORY[0x1E0C85A30](uu);
}

