uint64_t destroy for FormatSelector()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA496930()
{
  sub_1BA496944();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA496944()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t getEnumTagSinglePayload for FormatFeedGroup()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t destroy for FormatLayoutValue()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for FeedItemLayoutAttributes()
{
  return &type metadata for FeedItemLayoutAttributes;
}

ValueMetadata *type metadata accessor for AdFeedGroup()
{
  return &type metadata for AdFeedGroup;
}

uint64_t getEnumTagSinglePayload for FormatSourceMapNode(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1BA4969F8()
{
  unsigned __int8 *v0;

  return sub_1BA496A00(*v0);
}

uint64_t sub_1BA496A00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA496A38 + 4 * byte_1BB943800[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA496A38()
{
  return 0x655674616D726F66;
}

uint64_t sub_1BA496A5C()
{
  return 0x567377654E6E696DLL;
}

unint64_t sub_1BA496A8C()
{
  return 0xD000000000000014;
}

unint64_t sub_1BA496AC4()
{
  return 0xD000000000000010;
}

uint64_t storeEnumTagSinglePayload for FormatSourceMapNode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t FeedModel.model.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

ValueMetadata *type metadata accessor for OfflineModel()
{
  return &type metadata for OfflineModel;
}

uint64_t getEnumTagSinglePayload for FormatLayoutValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x6B && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 107);
  v3 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x6A)
    v3 = -1;
  return v3 + 1;
}

_QWORD *sub_1BA496BCC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v2;

  v2 = (*result >> 59) & 0x1E | (*result >> 2) & 1;
  if (v2 > 0x12)
    *a2 = 10;
  else
    *a2 = qword_1BB93AC20[v2];
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatColor(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x74)
  {
    *(_QWORD *)result = a2 - 117;
    if (a3 >= 0x75)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x75)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BA496C58()
{
  return 1885433183;
}

uint64_t storeEnumTagSinglePayload for SportsConfigResourceParameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s10CodingTypeOwst_2(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 39 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 39) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD8)
    return ((uint64_t (*)(void))((char *)&loc_1BA496CF4 + 4 * byte_1BB8AFA9F[v4]))();
  *a1 = a2 + 39;
  return ((uint64_t (*)(void))((char *)sub_1BA496D28 + 4 * byte_1BB8AFA9A[v4]))();
}

uint64_t sub_1BA496D28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA496D30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA496D38);
  return result;
}

uint64_t sub_1BA496D44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA496D4CLL);
  *(_BYTE *)result = a2 + 39;
  return result;
}

uint64_t sub_1BA496D50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA496D58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatNodeKind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD9)
    goto LABEL_17;
  if (a2 + 39 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 39) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 39;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 39;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 39;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x28;
  v8 = v6 - 40;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t getEnumTagSinglePayload for FormatColor(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x75 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 117);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x74)
    v3 = -1;
  return v3 + 1;
}

ValueMetadata *type metadata accessor for FeedContext()
{
  return &type metadata for FeedContext;
}

uint64_t storeEnumTagSinglePayload for FormatMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA496E60()
{
  return swift_storeEnumTagMultiPayload();
}

ValueMetadata *type metadata accessor for FeedGapOffline()
{
  return &type metadata for FeedGapOffline;
}

uint64_t storeEnumTagSinglePayload for FormatLayoutValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x6A)
  {
    *(_QWORD *)result = a2 - 107;
    if (a3 >= 0x6B)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x6B)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BA496ED4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA496EFC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA496EFC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA496F28 + 4 * byte_1BB8AEC40[a1]))(2020557416, 0xE400000000000000);
}

uint64_t sub_1BA496F28(uint64_t a1)
{
  return a1 + 14;
}

uint64_t sub_1BA496F30()
{
  return 0x79616C7265764F68;
}

uint64_t sub_1BA496F48()
{
  return 0x79616C7265764F76;
}

uint64_t sub_1BA496F64()
{
  return 2003134838;
}

uint64_t sub_1BA496F70()
{
  return 1954047348;
}

uint64_t sub_1BA496F7C()
{
  return 0x6567616D69;
}

uint64_t sub_1BA496F90()
{
  return 1835365481;
}

uint64_t sub_1BA496F9C()
{
  return 0x6563617073;
}

uint64_t sub_1BA496FB0()
{
  return 0x74657070696E73;
}

uint64_t sub_1BA496FC8()
{
  return 0x656D656C70707573;
}

uint64_t sub_1BA496FEC()
{
  return 0x686374697773;
}

uint64_t sub_1BA497000()
{
  return 1953459315;
}

uint64_t sub_1BA49700C()
{
  return 0x6269737365636361;
}

uint64_t sub_1BA497030()
{
  return 0x6E6F74747562;
}

uint64_t sub_1BA497044()
{
  return 0x70756F7267;
}

uint64_t sub_1BA497058()
{
  return 0x6465626D45626577;
}

uint64_t sub_1BA497070()
{
  return 0x656D617266;
}

uint64_t sub_1BA497084()
{
  return 0x746165706572;
}

uint64_t sub_1BA497098()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BA4970B0()
{
  return 0x6569566574617473;
}

uint64_t sub_1BA4970D0()
{
  return 0x6D6F74737563;
}

uint64_t sub_1BA4970E4()
{
  return 0x746E697270;
}

uint64_t sub_1BA4970F8()
{
  return 0x63697274654D6461;
}

uint64_t sub_1BA497114()
{
  return 1633905005;
}

uint64_t sub_1BA497120()
{
  return 0x4D6465726579616CLL;
}

uint64_t sub_1BA497140()
{
  return 0x6F65646976;
}

uint64_t sub_1BA497154()
{
  return 0x766F436575737369;
}

uint64_t sub_1BA497170()
{
  return 0x6572616873;
}

uint64_t sub_1BA497184()
{
  return 0x6B636F6C62;
}

uint64_t sub_1BA497198()
{
  return 0x797274656D6F6567;
}

uint64_t sub_1BA4971B0()
{
  return 0x616C506F65646976;
}

uint64_t sub_1BA4971D0()
{
  return 0x73736572676F7270;
}

uint64_t sub_1BA4971F0()
{
  return 0x646E69426D657469;
}

uint64_t sub_1BA497210()
{
  return 0x7261696C69787561;
}

uint64_t sub_1BA497230()
{
  return 0x7465736572;
}

uint64_t sub_1BA497244()
{
  return 0x656C626169726176;
}

uint64_t sub_1BA49725C()
{
  return 0x696F706B61657262;
}

uint64_t sub_1BA49727C()
{
  return 0x6D45656C7A7A7570;
}

uint64_t sub_1BA49729C()
{
  return 0x65726F736E6F7073;
}

uint64_t getEnumTagSinglePayload for FormatColorNotExpression(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7C && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 124);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B)
    v3 = -1;
  return v3 + 1;
}

ValueMetadata *type metadata accessor for FeedItem.PremiumBadge()
{
  return &type metadata for FeedItem.PremiumBadge;
}

uint64_t sub_1BA49732C()
{
  char *v0;

  return sub_1BA619B04(*v0);
}

uint64_t sub_1BA49733C()
{
  unsigned __int8 *v0;

  return sub_1BA497344(*v0);
}

uint64_t sub_1BA497344(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA49737C + 4 * byte_1BB901770[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA49737C()
{
  return 0x7374756F79616CLL;
}

uint64_t sub_1BA497394()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BA4973AC()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA4973C8()
{
  return 0x6C6F686563616C70;
}

uint64_t sub_1BA4973E8()
{
  return 0x73746E65746E6F63;
}

uint64_t sub_1BA497400()
{
  return 0x736E6F6974636573;
}

uint64_t sub_1BA497418()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1BA497430()
{
  return 0x737265746C6966;
}

void sub_1BA497448(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t storeEnumTagSinglePayload for FormatUnderline(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_QWORD *)result = a2 - 248;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatShadow(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = ~(_BYTE)a2;
  }
  return result;
}

uint64_t sub_1BA497694(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BA497744 + 4 * byte_1BB9522F8[(v7 - 1)]))();
}

uint64_t sub_1BA497794()
{
  char *v0;

  return sub_1BA65FFC8(*v0);
}

uint64_t getEnumTagSinglePayload for FormatOption()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA4977AC()
{
  unsigned __int8 *v0;

  return sub_1BA4977B8(*v0);
}

uint64_t sub_1BA4977B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4977F8 + 4 * byte_1BB898DFD[a1]))(0x746C754D6B6E6172, 0xEE007265696C7069);
}

uint64_t sub_1BA4977F8()
{
  return 0x726F635365736162;
}

uint64_t sub_1BA497818()
{
  return 0x72685465726F6373;
}

uint64_t sub_1BA49783C()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA497A8C()
{
  return 0x4D64656546746F6ELL;
}

uint64_t sub_1BA497AAC()
{
  return 0x6B53737961776C61;
}

unint64_t sub_1BA497ACC()
{
  return 0xD000000000000018;
}

unint64_t sub_1BA497AE4()
{
  return 0xD000000000000010;
}

void sub_1BA497AFC()
{
  JUMPOUT(0x1BA497B10);
}

uint64_t storeEnumTagSinglePayload for FormatSelector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatSelector(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatColorNotExpression(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7B)
  {
    *(_QWORD *)result = a2 - 124;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatNotExpression(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x71)
  {
    *(_QWORD *)result = a2 - 114;
    if (a3 >= 0x72)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x72)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatNotExpression(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x72 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 114);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x71)
    v3 = -1;
  return v3 + 1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FeedLayoutResult.LayoutPath()
{
  return &type metadata for FeedLayoutResult.LayoutPath;
}

uint64_t getEnumTagSinglePayload for FormatTextNodeStyle.Selector(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 528))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

double storeEnumTagSinglePayload for FormatFill(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 120) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 96) = 0;
      *(_QWORD *)(a1 + 104) = 2 * -a2;
      *(_QWORD *)(a1 + 112) = 0;
      *(_QWORD *)(a1 + 120) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatNodeStyle(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 50);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t getEnumTagSinglePayload for FormatAdjustment(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x67 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 103);
  v3 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x66)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1BA497E24()
{
  unsigned __int8 *v0;

  return sub_1BAE03AD8(*v0);
}

uint64_t sub_1BA497E3C()
{
  char *v0;

  return sub_1BA497E4C(*v0);
}

uint64_t sub_1BA497E4C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x617461646174656DLL;
  else
    return 0x7463656A626FLL;
}

ValueMetadata *type metadata accessor for FeedItemTraits()
{
  return &type metadata for FeedItemTraits;
}

uint64_t FeedContext.isSubscribed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FeedModel.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 60));
}

ValueMetadata *type metadata accessor for FeedHeadlineTrack()
{
  return &type metadata for FeedHeadlineTrack;
}

uint64_t storeEnumTagSinglePayload for FormatCornerRadius(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1BA497F20()
{
  unsigned __int8 *v0;

  return sub_1BA497F30(*v0);
}

uint64_t sub_1BA497F30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA497F5C + 4 * byte_1BB8D876C[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1BA497F5C()
{
  return 0x696669746E656469;
}

unint64_t sub_1BA497F78()
{
  return 0xD000000000000013;
}

unint64_t sub_1BA498030()
{
  return 0xD000000000000010;
}

uint64_t sub_1BA498058()
{
  return 0x797469726F697270;
}

uint64_t storeEnumTagSinglePayload for FormatSize(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x69)
  {
    *(_QWORD *)result = a2 - 106;
    if (a3 >= 0x6A)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x6A)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatSize(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x6A && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 106);
  v3 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x69)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1BA49811C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA498144(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA498144(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA498178 + 4 * byte_1BB8AE69C[a1]))(0x656C626978656C66, 0xE800000000000000);
}

uint64_t sub_1BA498178()
{
  return 0x6E6F6974706FLL;
}

uint64_t sub_1BA49818C()
{
  return 0x74756F79616CLL;
}

uint64_t sub_1BA4981A0()
{
  return 1684957538;
}

uint64_t sub_1BA4981B0()
{
  return 0x676E69646E6962;
}

uint64_t sub_1BA4981C8()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA4981DC()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA4981FC()
{
  return 7630702;
}

uint64_t sub_1BA49820C()
{
  return 6581857;
}

uint64_t sub_1BA49821C()
{
  return 29295;
}

uint64_t sub_1BA498228()
{
  return 1819242338;
}

unint64_t sub_1BA498238()
{
  return 0xD000000000000013;
}

uint64_t sub_1BA498254()
{
  return 0x656D617266;
}

uint64_t sub_1BA498268()
{
  return 0x6E694270756F7267;
}

uint64_t sub_1BA498284()
{
  return 0x6B636F6C62;
}

uint64_t _s10CodingTypeOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 29 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 29) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE2)
    return ((uint64_t (*)(void))((char *)&loc_1BA4982E8 + 4 * byte_1BB8AFA8B[v4]))();
  *a1 = a2 + 29;
  return ((uint64_t (*)(void))((char *)sub_1BA49831C + 4 * byte_1BB8AFA86[v4]))();
}

uint64_t sub_1BA49831C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA498324(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA49832CLL);
  return result;
}

uint64_t sub_1BA498338(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA498340);
  *(_BYTE *)result = a2 + 29;
  return result;
}

uint64_t sub_1BA498344(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA49834C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s10CodingTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE3)
    goto LABEL_17;
  if (a2 + 29 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 29) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 29;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 29;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 29;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1E;
  v8 = v6 - 30;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatOption()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for FormatOptionValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x72)
  {
    *(_QWORD *)result = a2 - 115;
    if (a3 >= 0x73)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x73)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatOptionValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x73 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 115);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x72)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatQueryParameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatQueryParameter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatParagraphStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 192) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 194) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 194) = 0;
    if (a2)
      *(_BYTE *)(result + 193) = a2 + 2;
  }
  return result;
}

uint64_t sub_1BA498598(_QWORD *a1)
{
  return FormatHeadlineBinding.SharedItem.init(from:)(a1);
}

uint64_t FormatHeadlineBinding.SharedItem.init(from:)(_QWORD *a1)
{
  return sub_1BA57BEB8(a1, (void (*)(uint64_t))sub_1BA57C1E8, (uint64_t)&_s10CodingTypeON_82, (uint64_t)&unk_1E726C180);
}

uint64_t sub_1BA4985D8(_QWORD *a1)
{
  return FormatIssueBinding.IssueCover.init(from:)(a1);
}

uint64_t FormatIssueBinding.IssueCover.init(from:)(_QWORD *a1)
{
  return sub_1BA57BEB8(a1, (void (*)(uint64_t))sub_1BA57C22C, (uint64_t)&_s10CodingTypeON_71, (uint64_t)&unk_1E726C7C0);
}

uint64_t sub_1BA498618@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatHeadlineBinding.Action.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.Action.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA58F410, (uint64_t)&_s10CodingTypeON_86, (uint64_t)&unk_1E726BF00, a2);
}

uint64_t sub_1BA498658@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatHeadlineTrackDurationFormat.init(from:)(a1, a2);
}

uint64_t FormatHeadlineTrackDurationFormat.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA58F454, (uint64_t)&_s10CodingTypeON_80, (uint64_t)&unk_1E726C2C0, a2);
}

uint64_t sub_1BA498698@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatRoute.init(from:)(a1, a2);
}

uint64_t FormatRoute.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FDA70, (uint64_t)&_s10CodingTypeON_149, (uint64_t)&unk_1E72691E0, a2);
}

uint64_t sub_1BA4986D8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatTagBinding.Color.init(from:)(a1, a2);
}

uint64_t FormatTagBinding.Color.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FDA2C, (uint64_t)&_s14descr1E7283981V5ColorO10CodingTypeON, (uint64_t)&unk_1E7253FA0, a2);
}

uint64_t sub_1BA498718@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatIssueBinding.Bool.init(from:)(a1, a2);
}

uint64_t FormatIssueBinding.Bool.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FD9E8, (uint64_t)&_s4BoolO10CodingTypeON_3, (uint64_t)&unk_1E726C680, a2);
}

uint64_t sub_1BA498758(uint64_t a1, uint64_t a2)
{
  initializeWithTake for PuzzleGameCenterListenerType(a2, a1);
  return a2;
}

uint64_t initializeWithTake for PuzzleGameCenterListenerType(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t sub_1BA4987BC()
{
  uint64_t v0;

  return sub_1BA4987D8(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1BA4987D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1BA4987FC(a1);
  if (!v1)
    return swift_retain();
  return result;
}

uint64_t sub_1BA4987FC(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_1BA498804()
{
  uint64_t v1;

  sub_1BB86E71C();
  return v1;
}

void sub_1BA498834()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BA4A3FB4(319, &qword_1ED3CE608, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
  if (v0 <= 0x3F)
  {
    sub_1BA4A3FB4(319, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1BA498904(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t result;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  a1[1] = sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  a1[2] = sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, v2, MEMORY[0x1E0CB0010]);
  result = sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, v2, MEMORY[0x1E0CB0028]);
  a1[3] = result;
  return result;
}

uint64_t sub_1BA49897C(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t result;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  a1[1] = sub_1BA4A2870(&qword_1ED3B0528, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  a1[2] = sub_1BA4A2870((unint64_t *)&unk_1ED3B0510, v2, MEMORY[0x1E0CB0890]);
  result = sub_1BA4A2870((unint64_t *)&qword_1ED3B0520, v2, MEMORY[0x1E0CB08B8]);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatVideoPlayerNode()
{
  return objc_opt_self();
}

uint64_t FormatLayoutView.blueprintViewportMonitorWillDisplaySupplementaryView(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  void *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  char *v25;
  uint64_t v26;
  int v27;
  char *v28;

  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  v3 = *v2;
  v4 = *v2 + 64;
  v5 = 1 << *(_BYTE *)(*v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*v2 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (v7)
  {
    v13 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v14 = v13 | (v10 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v14) + 56);
    switch((v18 >> 59) & 0x1E | (v18 >> 2) & 1)
    {
      case 4uLL:
        v11 = *(void **)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_retain();
        swift_retain();
        v12 = v11;
        FormatLayoutView.blueprintViewportMonitorWillDisplaySupplementaryView(_:)(a1);
        swift_release();

        goto LABEL_5;
      case 0xBuLL:
        v19 = *(char **)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView];
        if (!v20)
          continue;
        v21 = *(_QWORD *)(v20 + qword_1ED3AF858);
        goto LABEL_31;
      case 0xCuLL:
        v22 = *(char **)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v23 = *(_QWORD *)&v22[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
        result = swift_beginAccess();
        v24 = *(unsigned __int8 *)(v23 + 17);
        *(_BYTE *)(v23 + 17) = 1;
        if ((v24 & 0xFFFFFFC1) == 1)
          continue;
        swift_retain();
        swift_retain();
        v25 = v22;
        LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
        swift_release();

        goto LABEL_5;
      case 0xDuLL:
        v19 = *(char **)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v26 = *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
        if (!v26)
          continue;
        v21 = *(_QWORD *)(v26 + qword_1ED3AF858);
LABEL_31:
        result = swift_beginAccess();
        v27 = *(unsigned __int8 *)(v21 + 17);
        *(_BYTE *)(v21 + 17) = 1;
        if ((v27 & 0xFFFFFFC1) != 1)
        {
          swift_retain();
          swift_retain();
          v28 = v19;
          swift_retain();
          LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
          swift_release();

          swift_release();
LABEL_5:
          result = swift_release();
        }
        break;
      default:
        continue;
    }
  }
  v15 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v15 >= v8)
    return swift_release();
  v16 = *(_QWORD *)(v4 + 8 * v15);
  ++v10;
  if (v16)
    goto LABEL_23;
  v10 = v15 + 1;
  if (v15 + 1 >= v8)
    return swift_release();
  v16 = *(_QWORD *)(v4 + 8 * v10);
  if (v16)
    goto LABEL_23;
  v10 = v15 + 2;
  if (v15 + 2 >= v8)
    return swift_release();
  v16 = *(_QWORD *)(v4 + 8 * v10);
  if (v16)
    goto LABEL_23;
  v10 = v15 + 3;
  if (v15 + 3 >= v8)
    return swift_release();
  v16 = *(_QWORD *)(v4 + 8 * v10);
  if (v16)
  {
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
    goto LABEL_24;
  }
  v17 = v15 + 4;
  if (v17 >= v8)
    return swift_release();
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v16 = *(_QWORD *)(v4 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_35:
  __break(1u);
  return result;
}

void FormatContentSubgroupFilter.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BA817B9C(0, &qword_1ED3AB6E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  MEMORY[0x1E0C80A78](v3);
  v4 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA817BF8();
  sub_1BB8746C8();
  __asm { BR              X10 }
}

uint64_t sub_1BA498E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  *(_BYTE *)(v5 - 96) = 0;
  *(_BYTE *)(v5 - 65) = 0;
  sub_1BA8242CC();
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)(v5 - 96) = v6;
    *(_QWORD *)(v5 - 88) = v7;
    *(_BYTE *)(v5 - 65) = 1;
    sub_1BA9F163C();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
}

uint64_t type metadata accessor for TagReferenceService()
{
  return objc_opt_self();
}

uint64_t sub_1BA499254()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
    return swift_initClassMetadata2();
  return result;
}

uint64_t FormatLayeredMediaFilter.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v11 = v1[2];
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatLayeredMediaFilter, v15, v12, (uint64_t)&type metadata for FormatLayeredMediaFilter, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyC, v13, (uint64_t)v8, v14, (uint64_t)&off_1E734BC40);
  sub_1BA5E7FF4(v10);
  sub_1BA6E6C68(v9);
  sub_1BA6E6C68(v11);
  if (qword_1ED3C6D70 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C50);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v5, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACE811C(v10, v9, v11, (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  sub_1BA5E800C(v10);
  sub_1BA6E6CD8(v9);
  return sub_1BA6E6CD8(v11);
}

uint64_t sub_1BA499518()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA499594(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA4CDF6C(0, &qword_1ED39EAB8, (uint64_t (*)(void))sub_1BA608A2C, (uint64_t)&type metadata for FormatItemKind.Object.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA608A2C();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Bool __swiftcall FeedNativeAdManager.shouldFetchNativeAd(for:)(Swift::String a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  char v5;
  Swift::Bool result;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 80);
  swift_bridgeObjectRetain();
  v5 = sub_1BA761FE4(countAndFlagsBits, (uint64_t)object, v4);
  swift_bridgeObjectRelease();
  result = *(_BYTE *)(v1 + 56);
  if (result || *(_BYTE *)(v1 + 88))
  {
    if ((v5 & 1) == 0)
      return result;
  }
  else if ((v5 & 1) == 0)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1BA49972C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FCNewsAppConfigurationManager.todayFeedEditionConfig.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_possiblyUnfetchedAppConfiguration);
  FCNewsAppConfiguration.todayFeedEditionConfig.getter(a1);
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for UserInfoReferenceService()
{
  return objc_opt_self();
}

uint64_t sub_1BA499844()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB871B24();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1BA4998AC()
{
  unint64_t v0;
  _QWORD v1[6];

  v1[4] = &unk_1BB912458;
  sub_1BA75C00C();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[5] = v1;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_1BA499934(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t static Format.prepare()()
{
  if (qword_1ED3CC1E0 != -1)
    swift_once();
  return sub_1BA571578();
}

uint64_t sub_1BA4999B8(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEquation<A>);
  a1[2] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEquation<A>, a2);
  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEquation<A>, a2);
  a1[3] = result;
  return result;
}

uint64_t sub_1BA499A10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C304();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA499A9C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AssetReferenceService()
{
  return objc_opt_self();
}

uint64_t sub_1BA499B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_1BB873A2C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - v7;
  v9 = swift_projectBox();
  v10 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40))(v9, v8, v5);
}

uint64_t sub_1BA499BE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t AssociatedConformanceWitness;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  char v8;
  uint64_t v10;
  char v11;

  v2 = type metadata accessor for FeedServiceOptions(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  v7 = swift_checkMetadataState();
  v6(v7, AssociatedConformanceWitness);
  v8 = v4[*(int *)(v2 + 28)];
  sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FeedServiceOptions);
  v11 = v8;
  return sub_1BA5466FC(&v11, a1);
}

uint64_t FormatContentSubgroupFilterSelector.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  sub_1BA817AFC(0, &qword_1ED3AB790, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v9 = *v1;
  v8 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA817B58();
  sub_1BB8746C8();
  v11[0] = v9;
  v11[1] = v8;
  sub_1BA68660C();
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BA499E18()
{
  sub_1BA499E74();
  return sub_1BB872D60();
}

unint64_t sub_1BA499E74()
{
  unint64_t result;

  result = qword_1ED3B5E48;
  if (!qword_1ED3B5E48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8947F0, &type metadata for FormatPropertyValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B5E48);
  }
  return result;
}

uint64_t type metadata accessor for FeedNativeAdIntegrator()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedClusteringService()
{
  return objc_opt_self();
}

uint64_t sub_1BA499EF8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA499F70(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;

  v3 = v2;
  v5 = *v2;
  sub_1BA81BEF8();
  result = sub_1BB873F54();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v32 = 1 << *(_BYTE *)(v5 + 32);
    v33 = v3;
    v34 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v34)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v34)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v33;
                goto LABEL_40;
              }
              if (v32 >= 64)
                bzero((void *)(v5 + 64), 8 * v34);
              else
                *v9 = v31;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v34)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1BB8745C0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1BA49A224(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BA49A25C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA49A2B0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FeedItem(319);
  if (v1 <= 0x3F)
  {
    result = sub_1BB86FE38();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BA49A350()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86D078();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA49A3D4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FormatAnimationData()
{
  return objc_opt_self();
}

uint64_t sub_1BA49A42C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_release();
    sub_1BA738D54(a2);
    swift_release();
    swift_release();
    return sub_1BA69C828(a5, a6, a7 & 1);
  }
  return result;
}

uint64_t type metadata accessor for PuzzleReferenceService()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedRefreshBasicAnimation()
{
  return objc_opt_self();
}

uint64_t sub_1BA49A4E4()
{
  sub_1BA49A540();
  return sub_1BB872D60();
}

unint64_t sub_1BA49A540()
{
  unint64_t result;

  result = qword_1ED3C6858;
  if (!qword_1ED3C6858)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEF78, &_s10CodingTypeON_39);
    atomic_store(result, (unint64_t *)&qword_1ED3C6858);
  }
  return result;
}

unint64_t sub_1BA49A584()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C44F0;
  if (!qword_1ED3C44F0)
  {
    v1 = sub_1BB86C8B0();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C44F0);
  }
  return result;
}

uint64_t sub_1BA49A5CC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for Feed(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t sub_1BA49A670@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v16[3];

  v10 = *a1;
  v11 = a1[1];
  swift_bridgeObjectRetain();
  LOBYTE(a2) = sub_1BA761FE4(v10, v11, a2);
  result = swift_bridgeObjectRelease();
  v13 = 0uLL;
  v14 = 0uLL;
  v15 = 0uLL;
  if ((a2 & 1) != 0)
  {
    result = sub_1BB0F2A44(a1, a3, a4, (uint64_t *)v16);
    v13 = v16[0];
    v14 = v16[1];
    v15 = v16[2];
  }
  *a5 = v13;
  a5[1] = v14;
  a5[2] = v15;
  return result;
}

void FeedHeadlineScoringContext.topicsConfiguration(treatment:)()
{
  __asm { BR              X10 }
}

id sub_1BA49A73C(void *a1)
{
  id result;

  result = objc_msgSend(a1, sel_defaultTopicsConfig);
  if (!result)
  {
    __break(1u);
    JUMPOUT(0x1BA49A758);
  }
  return result;
}

uint64_t sub_1BA49AB50()
{
  return sub_1BB86E2D8();
}

uint64_t sub_1BA49AB74()
{
  sub_1BA49ABD0();
  return sub_1BB872D60();
}

unint64_t sub_1BA49ABD0()
{
  unint64_t result;

  result = qword_1ED3A0148;
  if (!qword_1ED3A0148)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSizeConstraint, &type metadata for FormatSizeConstraint);
    atomic_store(result, (unint64_t *)&qword_1ED3A0148);
  }
  return result;
}

uint64_t sub_1BA49AC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BA6325A8(a3, a3);
  v8 = *(_QWORD *)(a3 - 8);
  swift_allocObject();
  v9 = sub_1BB872E2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, a2, a3);
  v11 = sub_1BA69C794(v9);
  v12 = sub_1BA4CB9A0(a1, v11, a3, a4);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t FeedGroupFreezing.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1BA4CDF6C(0, &qword_1ED39C0E8, (uint64_t (*)(void))sub_1BA4F5D10, (uint64_t)&type metadata for FeedGroupFreezing.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4F5D10();
  sub_1BB8746C8();
  v14 = 0;
  sub_1BA83CD90();
  sub_1BB8741AC();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_1BA839C58();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BA49AE2C()
{
  sub_1BA49AE88();
  return sub_1BB872D60();
}

unint64_t sub_1BA49AE88()
{
  unint64_t result;

  result = qword_1ED3C0AB8;
  if (!qword_1ED3C0AB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextLineBreakMode, &type metadata for FormatTextLineBreakMode);
    atomic_store(result, (unint64_t *)&qword_1ED3C0AB8);
  }
  return result;
}

uint64_t type metadata accessor for FormatCustomNode()
{
  return objc_opt_self();
}

void sub_1BA49AEEC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BB86EB84();
  if (v0 <= 0x3F)
  {
    sub_1BA6BF9E8(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1BA49AF90()
{
  sub_1BA49AFEC();
  return sub_1BB872D60();
}

unint64_t sub_1BA49AFEC()
{
  unint64_t result;

  result = qword_1ED3B4868;
  if (!qword_1ED3B4868)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFixedColor, &type metadata for FormatFixedColor);
    atomic_store(result, (unint64_t *)&qword_1ED3B4868);
  }
  return result;
}

uint64_t sub_1BA49B030()
{
  sub_1BA49B08C();
  return sub_1BB872D60();
}

unint64_t sub_1BA49B08C()
{
  unint64_t result;

  result = qword_1ED3A71E0;
  if (!qword_1ED3A71E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB6F8, &_s10CodingTypeON_69);
    atomic_store(result, (unint64_t *)&qword_1ED3A71E0);
  }
  return result;
}

unint64_t sub_1BA49B0D0()
{
  unint64_t result;

  result = qword_1ED3C4200;
  if (!qword_1ED3C4200)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceMapNode, &type metadata for FormatSourceMapNode);
    atomic_store(result, (unint64_t *)&qword_1ED3C4200);
  }
  return result;
}

uint64_t FeedGroupSortOption.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1BA4CDF6C(0, &qword_1ED3AB3B8, (uint64_t (*)(void))sub_1BA83B328, (uint64_t)&type metadata for FeedGroupSortOption.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA83B328();
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BA83B210();
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA49B34C()
{
  unint64_t v0;
  _QWORD v1[6];

  v1[4] = MEMORY[0x1E0DE9D48] + 64;
  sub_1BA75C00C();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[5] = v1;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_1BA49B3D8(uint64_t a1, void (*a2)(__int128 *__return_ptr, uint64_t), uint64_t a3, uint64_t a4)
{
  __int128 v5;

  a2(&v5, a4);
  sub_1BA4AD288(0, &qword_1ED3B0840, (uint64_t)&type metadata for FeedFontLoadResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BA49B450@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3A2570 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3A0D50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t type metadata accessor for HeadlineReferenceService()
{
  return objc_opt_self();
}

uint64_t sub_1BA49B4E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7958113 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616854726577656ELL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BA49B5CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 240) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BA49B64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BB86C9E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86CAD8();
  __swift_allocate_value_buffer(v4, qword_1ED3AAB38);
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED3AAB38);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CB0EF8], v0);
  sub_1BB86C9F4();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BA49B714()
{
  sub_1BA49B770();
  return sub_1BB872D60();
}

unint64_t sub_1BA49B770()
{
  unint64_t result;

  result = qword_1ED3A4970;
  if (!qword_1ED3A4970)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedDaysOfWeek, &type metadata for FeedDaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_1ED3A4970);
  }
  return result;
}

uint64_t type metadata accessor for IssueReferenceService()
{
  return objc_opt_self();
}

uint64_t sub_1BA49B7D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  id v30;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  int64_t v47;
  id v48;
  _QWORD *v49;

  v46 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed12FormatButton_stateMaskFormatLayoutViews);
  v47 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v7 << 6);
      goto LABEL_26;
    }
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_54;
    if (v11 >= v47)
      return swift_release();
    v12 = *(_QWORD *)(v46 + 8 * v11);
    ++v7;
    if (!v12)
    {
      v7 = v11 + 1;
      if (v11 + 1 >= v47)
        return swift_release();
      v12 = *(_QWORD *)(v46 + 8 * v7);
      if (!v12)
      {
        v7 = v11 + 2;
        if (v11 + 2 >= v47)
          return swift_release();
        v12 = *(_QWORD *)(v46 + 8 * v7);
        if (!v12)
        {
          v7 = v11 + 3;
          if (v11 + 3 >= v47)
            return swift_release();
          v12 = *(_QWORD *)(v46 + 8 * v7);
          if (!v12)
          {
            v7 = v11 + 4;
            if (v11 + 4 >= v47)
              return swift_release();
            v12 = *(_QWORD *)(v46 + 8 * v7);
            if (!v12)
              break;
          }
        }
      }
    }
LABEL_25:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_26:
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v15 = qword_1ED3CC1E0;
    swift_bridgeObjectRetain();
    if (v15 != -1)
      swift_once();
    v16 = *(_QWORD *)(qword_1ED476AA0 + 48);
    v17 = (unint64_t *)(v16 + 16);
    swift_beginAccess();
    v18 = *(_QWORD *)(v16 + 16);
    if (v18 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v25 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (!v25)
      {
LABEL_37:
        v26 = swift_endAccess();
        v27 = *(_QWORD *)(v16 + 64);
        v28 = __OFADD__(v27, 1);
        v29 = v27 + 1;
        if (v28)
          goto LABEL_55;
        *(_QWORD *)(v16 + 64) = v29;
        v24 = (void *)(*(uint64_t (**)(uint64_t))(v16 + 40))(v26);
        goto LABEL_39;
      }
    }
    else
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      if (!v19)
        goto LABEL_37;
    }
    v20 = *v17;
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *v17 = v20;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v20 & 0x8000000000000000) != 0
      || (v20 & 0x4000000000000000) != 0)
    {
      sub_1BAA67DA8(v20);
    }
    v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v22)
      goto LABEL_52;
    v23 = v22 - 1;
    v24 = *(void **)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v23 + 0x20);
    *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) = v23;
    sub_1BB872DCC();
    swift_endAccess();
LABEL_39:
    swift_release();
    objc_msgSend(v24, sel_setUserInteractionEnabled_, 0);
    sub_1BB873708();
    objc_msgSend(v48, sel_addSubview_, v24);
    swift_beginAccess();
    v30 = v24;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v32 = (_QWORD *)*v6;
    v49 = (_QWORD *)*v6;
    *v6 = 0x8000000000000000;
    v34 = sub_1BA5A0BD8(v14);
    v35 = v32[2];
    v36 = (v33 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
    {
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    v38 = v33;
    if (v32[3] >= v37)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v41 = v49;
        if ((v33 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BB4C6BD8();
        v41 = v49;
        if ((v38 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1BB4B5540(v37, isUniquelyReferenced_nonNull_native);
      v39 = sub_1BA5A0BD8(v14);
      if ((v38 & 1) != (v40 & 1))
        goto LABEL_57;
      v34 = v39;
      v41 = v49;
      if ((v38 & 1) != 0)
      {
LABEL_4:
        v8 = v41[7];

        *(_QWORD *)(v8 + 8 * v34) = v30;
        goto LABEL_5;
      }
    }
    v41[(v34 >> 6) + 8] |= 1 << v34;
    v42 = 8 * v34;
    *(_QWORD *)(v41[6] + v42) = v14;
    *(_QWORD *)(v41[7] + v42) = v30;
    v43 = v41[2];
    v28 = __OFADD__(v43, 1);
    v44 = v43 + 1;
    if (v28)
      goto LABEL_53;
    v41[2] = v44;
    swift_bridgeObjectRetain();
LABEL_5:
    *v6 = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

  }
  v13 = v11 + 5;
  if (v13 >= v47)
    return swift_release();
  v12 = *(_QWORD *)(v46 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v47)
      return swift_release();
    v12 = *(_QWORD *)(v46 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_25;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA49BC50(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  BOOL v5;
  char v6;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v3 = v2;
  if (*a1)
    v5 = 0;
  else
    v5 = a1[1] == 1;
  if (v5)
  {
    sub_1BA6ED734((uint64_t)a1, &qword_1ED3A2C80, (uint64_t)&type metadata for PuzzleGameCenterListenerType);
    v8 = sub_1BA4A42A0(a2);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v12 = *v2;
      v14 = *v3;
      *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BB4CA9CC();
        v12 = v14;
      }
      sub_1BA498758(*(_QWORD *)(v12 + 56) + 16 * v10, (uint64_t)&v15);
      sub_1BAF0F478(v10, v12);
      *v3 = v12;
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = xmmword_1BB87FC90;
    }
    return sub_1BA6ED734((uint64_t)&v15, &qword_1ED3A2C80, (uint64_t)&type metadata for PuzzleGameCenterListenerType);
  }
  else
  {
    sub_1BA498758((uint64_t)a1, (uint64_t)&v15);
    v6 = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BA4A4194((uint64_t)&v15, a2, v6);
    *v2 = v13;
    return swift_bridgeObjectRelease();
  }
}

void sub_1BA49BD7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0558)
  {
    sub_1BB86CB50();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0558);
  }
}

uint64_t sub_1BA49BDD0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA49BE48()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t rawValue;
  uint64_t rawValue_8;
  char v6;

  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v2 = rawValue_8;
  if (rawValue_8)
  {
    v3 = rawValue;
    FeedCursorKind.init(rawValue:)(*(Swift::String *)(&v2 - 1));
    if (v6 == 1)
      return 1;
    else
      return *(unsigned __int8 *)(v0 + 56);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA49BEB8()
{
  sub_1BA49BF14();
  return sub_1BB872D60();
}

unint64_t sub_1BA49BF14()
{
  unint64_t result;

  result = qword_1ED3C7DA8;
  if (!qword_1ED3C7DA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB900CB0, &_s4BoolO10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1ED3C7DA8);
  }
  return result;
}

uint64_t sub_1BA49BF58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB870AC8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FeedModifierStore.init()()
{
  uint64_t v0;

  sub_1BB86FE98();
  sub_1BB86E7B8();
  *(_QWORD *)(v0 + 16) = sub_1BB86E7A0();
  return v0;
}

uint64_t sub_1BA49C040(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for EmptyViewSupplementaryLayoutAttributes();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for EmptyViewSupplementaryLayoutAttributes()
{
  uint64_t result;

  result = qword_1ED3B8BC8;
  if (!qword_1ED3B8BC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for SportsEmbedConfigurationManager()
{
  return objc_opt_self();
}

unint64_t sub_1BA49C0DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B0520;
  if (!qword_1ED3B0520)
  {
    v1 = sub_1BB86C8B0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CB08B8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B0520);
  }
  return result;
}

uint64_t initializeWithCopy for A12_V24.Layout.Attributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA49C158(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;

  v3 = v2;
  v5 = *v2;
  sub_1BA81BE84();
  result = sub_1BB873F54();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v35)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v35);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v35)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(void **)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        v31 = v30;
      result = sub_1BB8745C0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

unint64_t sub_1BA49C408()
{
  unint64_t result;

  result = qword_1ED39DA50;
  if (!qword_1ED39DA50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED39DA50);
  }
  return result;
}

uint64_t FeedPluginManager.__allocating_init(feed:feedKind:formatPluginFactory:)(uint64_t a1, char *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char v15;

  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  v8 = *a2;
  v12 = *(_QWORD *)a1;
  v13 = *(_OWORD *)(a1 + 8);
  v14 = v6;
  v15 = v7;
  v11 = v8;
  swift_allocObject();
  v9 = sub_1BA4CC9AC(&v12, &v11, 0, a3, a4);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_1BA49C4D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3A3910 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3A38F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1BA49C548()
{
  swift_retain();
  sub_1BB86E878();
  return swift_release();
}

uint64_t sub_1BA49C584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_BYTE *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  v7 = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1BA8195A4;
  *(_BYTE *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = v7;
  *(_QWORD *)(v5 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1BA49C600(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_retain();
    sub_1BA738D44(a2);
    swift_retain();
    swift_retain();
    return sub_1BA69C808(a5, a6, a7 & 1);
  }
  return result;
}

uint64_t static FeedScalingManager.shared.getter()
{
  if (qword_1ED3BC390 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1BA49C6B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB871680();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA49C758(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA4CDF6C(0, &qword_1ED39C0F8, (uint64_t (*)(void))sub_1BA4EB108, (uint64_t)&type metadata for FeedGroupFreezingDisallow.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EB108();
  sub_1BB8746C8();
  sub_1BB874188();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_1BA49C858()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  result = objc_msgSend(v0, sel_setUnitsStyle_, 2);
  qword_1ED39AC20 = (uint64_t)v0;
  return result;
}

uint64_t type metadata accessor for SportsTaxonomyGraphManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedJournalFormatter()
{
  return objc_opt_self();
}

void FeedHeadlineScoringContext.scoringConfiguration(treatment:)()
{
  __asm { BR              X10 }
}

id sub_1BA49C908(void *a1)
{
  id result;

  result = objc_msgSend(a1, sel_defaultScoringConfig);
  if (!result)
  {
    __break(1u);
    JUMPOUT(0x1BA49C924);
  }
  return result;
}

uint64_t sub_1BA49CD1C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1BB86EB84();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FormatMetadata();
    if (v2 <= 0x3F)
    {
      result = sub_1BB86C67C();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_1BA49CDBC()
{
  unint64_t result;

  result = qword_1ED3B0420;
  if (!qword_1ED3B0420)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B0420);
  }
  return result;
}

uint64_t sub_1BA49CDF8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA49CE30()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t FormatContentSubgroupFilterSelector.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1BA817AFC(0, &qword_1ED3AB558, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA817B58();
  sub_1BB87468C();
  if (!v2)
  {
    sub_1BA69C13C();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v10 = v12[1];
    *a2 = v12[0];
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA49D010()
{
  sub_1BA49D06C();
  return sub_1BB872D60();
}

unint64_t sub_1BA49D06C()
{
  unint64_t result;

  result = qword_1ED3C9880;
  if (!qword_1ED3C9880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA7C0, &_s10CodingTypeON_82);
    atomic_store(result, (unint64_t *)&qword_1ED3C9880);
  }
  return result;
}

uint64_t sub_1BA49D0B0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA49D120()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BA49D16C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1ED39DF58, (uint64_t (*)(void))sub_1BA81EB58, (uint64_t)&type metadata for A6_V4.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA81EB58();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

uint64_t sub_1BA49D380()
{
  swift_getObjectType();
  return sub_1BB86D204();
}

uint64_t type metadata accessor for SubscriptionReferenceService()
{
  return objc_opt_self();
}

uint64_t sub_1BA49D3F4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for FormatPackageInventoryCache();
  v0 = swift_allocObject();
  sub_1BA84152C();
  swift_allocObject();
  result = sub_1BB86E7AC();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ED476940 = v0;
  return result;
}

uint64_t sub_1BA49D448()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FeedBannerAd();
  if (v1 <= 0x3F)
  {
    result = sub_1BB871F5C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BA49D4E4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA49D568(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  a1[1] = MEMORY[0x1BCCE5B24](a4);
  a1[2] = MEMORY[0x1BCCE5B24](a5, a2);
  result = MEMORY[0x1BCCE5B24](a6, a2);
  a1[3] = result;
  return result;
}

uint64_t static Commands.Suggestions.ignore.getter()
{
  if (qword_1ED39DFB0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t FeedNativeAdIntegrator.object.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_1BA49D664()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA49D6B8()
{
  sub_1BA49D714();
  return sub_1BB872D60();
}

unint64_t sub_1BA49D714()
{
  unint64_t result;

  result = qword_1ED3CDD98;
  if (!qword_1ED3CDD98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB008, &_s10CodingTypeON_75);
    atomic_store(result, (unint64_t *)&qword_1ED3CDD98);
  }
  return result;
}

uint64_t sub_1BA49D758(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _BYTE v15[144];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1BB004424(a2, (uint64_t)v15);
  sub_1BB004424((uint64_t)v15, (uint64_t)&v16);
  result = sub_1BA896370(&v16);
  if ((_DWORD)result != 1)
  {
    v5 = v16;
    if (v16)
    {
      sub_1BB86DD80();
      v6 = sub_1BA72BED4(v14, v5);
      if (v3)
        return swift_release();
      v7 = v6;
      swift_release();
      objc_msgSend(v2, sel_setDuration_, v7);
    }
    v8 = v17;
    if (v17)
    {
      sub_1BB86DD80();
      v9 = sub_1BA72BED4(v14, v8);
      if (v3)
        return swift_release();
      v10 = v9;
      swift_release();
      *(float *)&v11 = v10;
      objc_msgSend(v2, sel_setSpeed_, v11);
    }
    v12 = v18;
    if (!v18)
LABEL_13:
      __asm { BR              X11 }
    sub_1BB86DD80();
    v13 = sub_1BA72BED4(v14, v12);
    result = swift_release();
    if (!v3)
    {
      objc_msgSend(v2, sel_setTimeOffset_, v13);
      goto LABEL_13;
    }
  }
  return result;
}

void sub_1BA49D904(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, __int128 a11, __int128 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,unsigned __int8 a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,unsigned __int8 a45,uint64_t a46,uint64_t a47,unsigned __int8 a48)
{
  uint64_t v48;
  void *v49;
  double v50;
  double v51;
  double v52;
  char v53;
  char v54;
  id v55;
  void *v56;

  objc_msgSend(v49, sel_setFillMode_, *MEMORY[0x1E0CD2B60]);
  if (a36)
  {
    sub_1BB86DD80();
    v50 = sub_1BA72BED4(a11, a36);
    swift_release();
    if (v48)
      goto LABEL_19;
    *(float *)&v51 = v50;
    objc_msgSend(v49, sel_setRepeatCount_, v51);
  }
  if (a37)
  {
    sub_1BB86DD80();
    v52 = sub_1BA72BED4(a11, a37);
    swift_release();
    if (v48)
      goto LABEL_19;
    objc_msgSend(v49, sel_setRepeatDuration_, v52);
  }
  if (a40 != 255)
  {
    sub_1BB86DD80();
    v53 = FormatBoolean.value(contextLayoutOptions:)(a10);
    swift_release();
    if (v48)
      goto LABEL_19;
    objc_msgSend(v49, sel_setAutoreverses_, v53 & 1);
  }
  if (a48 != 255)
  {
    sub_1BB86DD80();
    v54 = FormatBoolean.value(contextLayoutOptions:)(a10);
    swift_release();
    if (v48)
      goto LABEL_19;
    objc_msgSend(v49, sel_setRemovedOnCompletion_, v54 & 1);
  }
  if (a45 != 255)
  {
    if ((a45 & 1) != 0)
      v55 = sub_1BB6DDCA8();
    else
      v55 = sub_1BB161980();
    if (!v48)
    {
      v56 = v55;
      objc_msgSend(v49, sel_setTimingFunction_, v55);

    }
  }
LABEL_19:
  JUMPOUT(0x1BA49D844);
}

uint64_t sub_1BA49DB1C()
{
  sub_1BA49DB78();
  return sub_1BB872D60();
}

unint64_t sub_1BA49DB78()
{
  unint64_t result;

  result = qword_1ED3C7798;
  if (!qword_1ED3C7798)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1BD8, &_s10CodingTypeON_12);
    atomic_store(result, (unint64_t *)&qword_1ED3C7798);
  }
  return result;
}

void sub_1BA49DBBC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BB86C8B0();
  if (v0 <= 0x3F)
  {
    sub_1BA76D78C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

double static FormatServiceOptions.prefetch(purpose:log:)@<D0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  double result;

  v5 = qword_1ED3BE7C0;
  v6 = a1;
  v7 = a2;
  if (v5 != -1)
    swift_once();
  v8 = type metadata accessor for FormatTransformData();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED4768B8);
  v10 = (int *)type metadata accessor for FormatServiceOptions();
  sub_1BA4C2DD8(v9, a3 + v10[10], (uint64_t (*)(_QWORD))type metadata accessor for FormatTransformData);
  *(_QWORD *)(a3 + 40) = 0x4122750000000000;
  *(_BYTE *)(a3 + 48) = 0;
  *(_QWORD *)(a3 + v10[12]) = v6;
  *(_QWORD *)(a3 + v10[13]) = v7;
  *(_OWORD *)(a3 + 56) = xmmword_1BB886D10;
  *(_QWORD *)(a3 + 72) = 0x40F5180000000000;
  *(_QWORD *)(a3 + 80) = 30;
  *(_QWORD *)(a3 + v10[11]) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(a3 + v10[15]) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_BYTE *)(a3 + v10[14]) = 1;
  return result;
}

uint64_t sub_1BA49DD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v16;

  ObjectType = swift_getObjectType();
  v16 = a7(a1, a2, a3, a5, a6, v7, ObjectType, a4);
  swift_unknownObjectRelease();
  return v16;
}

uint64_t sub_1BA49DDDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED39E308 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED39A4C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

BOOL sub_1BA49DE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1BB86DEE8();
  LOBYTE(a2) = sub_1BA761FE4(v3, v4, a2);
  swift_bridgeObjectRelease();
  return (a2 & 1) == 0;
}

unint64_t sub_1BA49DEA8()
{
  unint64_t result;

  result = qword_1ED3B99A0;
  if (!qword_1ED3B99A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B99A0);
  }
  return result;
}

uint64_t sub_1BA49DEE4@<X0>(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = a1(0);
  result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_1BA49DF2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  ObjectType = swift_getObjectType();
  v3 = MEMORY[0x1BCCE5D40](v0 + 32);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 40))(v3, *(_QWORD *)(v0 + 40), ObjectType, v1);
}

uint64_t sub_1BA49DF7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746C7561666564 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E696C66666FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BA49E0C0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  char v3;
  uint64_t v4;
  __int16 v5;
  __int128 v6;

  v0 = swift_allocObject();
  if (qword_1ED3CF378 != -1)
    swift_once();
  v1 = qword_1ED3CF330;
  v2 = word_1ED3CF338;
  v3 = byte_1ED3CF33A;
  v4 = qword_1ED3CF340;
  v5 = word_1ED3CF368;
  *(_QWORD *)(v0 + 16) = qword_1ED3CF328;
  *(_QWORD *)(v0 + 24) = v1;
  *(_WORD *)(v0 + 32) = v2;
  *(_BYTE *)(v0 + 34) = v3;
  *(_QWORD *)(v0 + 40) = v4;
  v6 = unk_1ED3CF358;
  *(_OWORD *)(v0 + 48) = xmmword_1ED3CF348;
  *(_OWORD *)(v0 + 64) = v6;
  *(_WORD *)(v0 + 80) = v5;
  qword_1ED3CF380 = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA49E160()
{
  sub_1BB86CCAC();
  return sub_1BB86CCA0();
}

void FeedHeadlineScoringContext.ontologyLevelConfiguration(treatment:)()
{
  __asm { BR              X10 }
}

id sub_1BA49E264(void *a1)
{
  id result;

  result = objc_msgSend(a1, sel_defaultOntologyLevelConfig);
  if (!result)
  {
    __break(1u);
    JUMPOUT(0x1BA49E280);
  }
  return result;
}

void sub_1BA49E678()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  id v2;

  sub_1BB86F814();
  v0 = (uint64_t (*)(void))sub_1BB86F820();
  v2 = (id)v0();
  sub_1BA83E5A0((uint64_t)v2, v1);

}

uint64_t sub_1BA49E6CC()
{
  uint64_t result;

  result = MEMORY[0x1BCCDEB28]();
  if (!result)
    __break(1u);
  return result;
}

uint64_t type metadata accessor for FeedWeatherReferenceService()
{
  return objc_opt_self();
}

uint64_t sub_1BA49E720()
{
  sub_1BA49E77C();
  return sub_1BB872D60();
}

unint64_t sub_1BA49E77C()
{
  unint64_t result;

  result = qword_1ED3C6728;
  if (!qword_1ED3C6728)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3F38, &_s10CodingTypeON_149);
    atomic_store(result, (unint64_t *)&qword_1ED3C6728);
  }
  return result;
}

uint64_t FeedRebuildPolicy.groupLimit.getter()
{
  uint64_t v1;

  sub_1BB86EC20();
  return v1;
}

uint64_t sub_1BA49E7F0()
{
  sub_1BA49E84C();
  return sub_1BB872D60();
}

unint64_t sub_1BA49E84C()
{
  unint64_t result;

  result = qword_1ED3A7B30;
  if (!qword_1ED3A7B30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5698, &_s10CodingTypeON_128);
    atomic_store(result, (unint64_t *)&qword_1ED3A7B30);
  }
  return result;
}

uint64_t sub_1BA49E890()
{
  swift_retain();
  sub_1BB86E884();
  return swift_release();
}

uint64_t sub_1BA49E8D0()
{
  sub_1BA49E92C();
  return sub_1BB872D60();
}

unint64_t sub_1BA49E92C()
{
  unint64_t result;

  result = qword_1ED3C5010;
  if (!qword_1ED3C5010)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA950, &_s10CodingTypeON_80);
    atomic_store(result, (unint64_t *)&qword_1ED3C5010);
  }
  return result;
}

uint64_t sub_1BA49E970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_1BA49E9D0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BA49EA54()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1BA49EAE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C2240)
  {
    sub_1BB86FA24();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C2240);
  }
}

uint64_t type metadata accessor for AssetManagerReferenceService()
{
  return objc_opt_self();
}

id OfflineManager.onStateChange(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v6;

  v3 = (_QWORD *)(v2 + qword_1EF2C4690);
  v4 = *(_QWORD *)(v2 + qword_1EF2C4690);
  *v3 = a1;
  v3[1] = a2;
  sub_1BA49EBE0(v4);
  swift_retain();
  return v6;
}

uint64_t sub_1BA49EBA4(uint64_t a1)
{
  sub_1BA49EBE0(*(_QWORD *)(a1 + qword_1EF2C4690));
  return __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EF2C4698);
}

uint64_t sub_1BA49EBE0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t type metadata accessor for MailShareLinkTextProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA49EC10()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  char v3;
  char *v4;
  uint64_t v5;
  void *v6;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v4 = &v3;
    v5 = v2;
    v6 = &unk_1BB92C680;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA49ECA4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA49ED1C()
{
  sub_1BA49ED78();
  return sub_1BB872D60();
}

unint64_t sub_1BA49ED78()
{
  unint64_t result;

  result = qword_1ED3CAFB0;
  if (!qword_1ED3CAFB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3028, &_s10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1ED3CAFB0);
  }
  return result;
}

uint64_t sub_1BA49EDBC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB86EB84();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FormatCompilerOptions(319);
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

_QWORD *FeedLayoutCache.init(database:)(uint64_t a1)
{
  _QWORD *v1;

  sub_1BA8414AC();
  swift_allocObject();
  v1[2] = sub_1BB86E7AC();
  v1[8] = 0;
  v1[9] = 0;
  sub_1BA83A2F8(a1, (uint64_t)(v1 + 3));
  return v1;
}

BOOL sub_1BA49EEFC(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  int v17;
  BOOL v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v26[2];
  int v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  _BOOL8 v31;
  uint64_t (*v32)(char *);
  uint64_t v33;

  v4 = v3;
  v31 = a2;
  v32 = a1;
  v33 = sub_1BB86CBE0();
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B0568, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - v11;
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    v14 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v28 = *(_QWORD *)(v6 + 72);
    v29 = v8;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v26[1] = a3;
    swift_bridgeObjectRetain();
    while (1)
    {
      v15 = v33;
      v30(v12, v14, v33);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v16(v12, 0, 1, v15);
      v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v15);
      v18 = v17 != 1;
      if (v17 == 1)
        break;
      v27 = 1;
      v19 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v20 = v6;
      v21 = v29;
      v19(v29, v12, v15);
      v18 = v31;
      v22 = v32(v21);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v15);
        swift_bridgeObjectRelease();
        return v18;
      }
      v23 = v22;
      v24 = v16;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v15);
      if ((v23 & 1) != 0)
      {
        v18 = v27;
        break;
      }
      v14 += v28;
      --v13;
      v4 = 0;
      v6 = v20;
      if (!v13)
        goto LABEL_9;
    }
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v24(v12, 1, 1, v33);
    v18 = 0;
  }
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1BA49F134()
{
  sub_1BA49F190();
  return sub_1BB872D60();
}

unint64_t sub_1BA49F190()
{
  unint64_t result;

  result = qword_1ED3C9920;
  if (!qword_1ED3C9920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA4A0, &_s10CodingTypeON_86);
    atomic_store(result, (unint64_t *)&qword_1ED3C9920);
  }
  return result;
}

uint64_t sub_1BA49F1D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;

  v1 = v0;
  v2 = *v0;
  sub_1BA756C1C(0, &qword_1ED39DAF0, (void (*)(void))sub_1BA837470);
  v3 = sub_1BB873C60();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v31 = v0;
  v32 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v32)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v32)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v32)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v20 = *(void **)v19;
    v21 = *(void **)(v19 + 8);
    sub_1BB8745CC();
    v22 = v21;
    v23 = v20;
    sub_1BB8738D0();
    sub_1BB8745D8();
    result = sub_1BB874608();
    v24 = -1 << *(_BYTE *)(v4 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v9 + 8 * (v25 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v9 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v9 + 8 * v26);
      }
      while (v30 == -1);
      v12 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v23;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v32)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v32)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BA49F498()
{
  sub_1BA49F4F4();
  return sub_1BB872D60();
}

unint64_t sub_1BA49F4F4()
{
  unint64_t result;

  result = qword_1ED3B5D58;
  if (!qword_1ED3B5D58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupItemKind, &type metadata for FormatGroupItemKind);
    atomic_store(result, (unint64_t *)&qword_1ED3B5D58);
  }
  return result;
}

uint64_t sub_1BA49F538()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1BA49F58C()
{
  uint64_t v0;
  _QWORD *v1;

  v1[219] = v0;
  if (v0)
    return swift_asyncLet_finish();
  v1[220] = v1[167];
  swift_bridgeObjectRetain();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1BA49F614()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA49F6C0()
{
  sub_1BA49F71C();
  return sub_1BB872D60();
}

unint64_t sub_1BA49F71C()
{
  unint64_t result;

  result = qword_1ED3A61F0;
  if (!qword_1ED3A61F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB568, &_s10CodingTypeON_71);
    atomic_store(result, (unint64_t *)&qword_1ED3A61F0);
  }
  return result;
}

uint64_t sub_1BA49F760()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB873A2C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FormatResetNode()
{
  return objc_opt_self();
}

uint64_t sub_1BA49F7F0()
{
  sub_1BA49F84C();
  return sub_1BB872D60();
}

unint64_t sub_1BA49F84C()
{
  unint64_t result;

  result = qword_1ED3A5778;
  if (!qword_1ED3A5778)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF228, &_s10CodingTypeON_37);
    atomic_store(result, (unint64_t *)&qword_1ED3A5778);
  }
  return result;
}

uint64_t sub_1BA49F890@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3A3858 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3A3838);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1BA49F900@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED39E348 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED39E328);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1BA49F970()
{
  sub_1BA49F9CC();
  return sub_1BB872D60();
}

unint64_t sub_1BA49F9CC()
{
  unint64_t result;

  result = qword_1ED3C7780;
  if (!qword_1ED3C7780)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88CF24, &_s14descr1E7283981V5ColorO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C7780);
  }
  return result;
}

uint64_t sub_1BA49FA10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for PuzzleTypeReferenceService()
{
  return objc_opt_self();
}

uint64_t sub_1BA49FAA4()
{
  sub_1BB86CBE0();
  sub_1BA4A2870(&qword_1ED3B0560, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1680]);
  return sub_1BB872958() & 1;
}

uint64_t sub_1BA49FB18()
{
  sub_1BA49FB74();
  return sub_1BB872D60();
}

unint64_t sub_1BA49FB74()
{
  unint64_t result;

  result = qword_1ED3CC800;
  if (!qword_1ED3CC800)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3248, &_s10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1ED3CC800);
  }
  return result;
}

uint64_t sub_1BA49FBB8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _BYTE v32[16];

  v3 = v2;
  v5 = *v2;
  sub_1BA81BFD8();
  result = sub_1BB873F54();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v31 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_41;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v30;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v8 >= v13)
                  goto LABEL_34;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_QWORD *)(v5 + 56) + 16 * v17;
      if ((a2 & 1) != 0)
        sub_1BA498758(v22, (uint64_t)v32);
      else
        sub_1BB4CD274(v22, (uint64_t)v32);
      result = sub_1BB8745C0();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      result = sub_1BA498758((uint64_t)v32, *(_QWORD *)(v7 + 56) + 16 * v15);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

uint64_t type metadata accessor for FormatLayeredMediaNode()
{
  return objc_opt_self();
}

uint64_t sub_1BA49FE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_1BA49FEFC()
{
  sub_1BA49FF58();
  return sub_1BB872D60();
}

unint64_t sub_1BA49FF58()
{
  unint64_t result;

  result = qword_1ED3CCBA0;
  if (!qword_1ED3CCBA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0CC0, &_s10CodingTypeON_173);
    atomic_store(result, (unint64_t *)&qword_1ED3CCBA0);
  }
  return result;
}

uint64_t sub_1BA49FF9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 624) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BA4A0008()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

NewsFeed::FeedMode_optional __swiftcall FeedMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FeedMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA4A00DC()
{
  sub_1BA84125C();
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BA4A0110()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB86D7A4();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86D660();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

NewsFeed::FeedPoolCachePolicy_optional __swiftcall FeedPoolCachePolicy.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedPoolCachePolicy_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA4A0228()
{
  sub_1BA4A0284();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A0284()
{
  unint64_t result;

  result = qword_1ED3A4350;
  if (!qword_1ED3A4350)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5540, &_s10CodingTypeON_129);
    atomic_store(result, (unint64_t *)&qword_1ED3A4350);
  }
  return result;
}

uint64_t sub_1BA4A02C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FeedSponsorshipAdReferenceService()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A03A4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4A03DC()
{
  sub_1BA4A0438();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A0438()
{
  unint64_t result;

  result = qword_1ED3C8470;
  if (!qword_1ED3C8470)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatJsonConfigKey, &type metadata for FormatJsonConfigKey);
    atomic_store(result, (unint64_t *)&qword_1ED3C8470);
  }
  return result;
}

uint64_t sub_1BA4A047C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED39E358 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED39A518);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1BA4A04EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for LoadedFont(id *a1)
{

}

uint64_t sub_1BA4A0588()
{
  sub_1BA4A05E4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A05E4()
{
  unint64_t result;

  result = qword_1ED3BD4F8;
  if (!qword_1ED3BD4F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontWidth, &type metadata for FormatFontWidth);
    atomic_store(result, (unint64_t *)&qword_1ED3BD4F8);
  }
  return result;
}

uint64_t type metadata accessor for FormatStateViewNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CloudContextReferenceService()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A0668(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 32);
  return MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], a1, &v3);
}

uint64_t sub_1BA4A06A0()
{
  sub_1BA4A06FC();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A06FC()
{
  unint64_t result;

  result = qword_1ED3A71F8;
  if (!qword_1ED3A71F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB7C0, &_s10CodingTypeON_68);
    atomic_store(result, (unint64_t *)&qword_1ED3A71F8);
  }
  return result;
}

uint64_t sub_1BA4A0740()
{
  sub_1BA4A079C();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A079C()
{
  unint64_t result;

  result = qword_1ED3C77B8;
  if (!qword_1ED3C77B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3068, &_s10CodingTypeON_155);
    atomic_store(result, (unint64_t *)&qword_1ED3C77B8);
  }
  return result;
}

uint64_t sub_1BA4A07E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t i;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t j;
  uint64_t v18;
  void *v19;
  uint64_t k;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a1 + 64;
  v34 = MEMORY[0x1E0DEE9E0];
  v38 = MEMORY[0x1E0DEE9E0];
  v2 = -1 << *(_BYTE *)(a1 + 32);
  if (-v2 < 64)
    v3 = ~(-1 << -(char)v2);
  else
    v3 = -1;
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v35 = (unint64_t)(63 - v2) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v4)
    goto LABEL_8;
LABEL_9:
  v10 = i + 1;
  if (__OFADD__(i, 1))
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v10 >= v35)
    goto LABEL_57;
  v11 = *(_QWORD *)(v36 + 8 * v10);
  v12 = i + 1;
  if (!v11)
  {
    v12 = i + 2;
    if (i + 2 >= v35)
      goto LABEL_57;
    v11 = *(_QWORD *)(v36 + 8 * v12);
    if (!v11)
    {
      v12 = i + 3;
      if (i + 3 >= v35)
        goto LABEL_57;
      v11 = *(_QWORD *)(v36 + 8 * v12);
      if (!v11)
      {
        v12 = i + 4;
        if (i + 4 >= v35)
          goto LABEL_57;
        v11 = *(_QWORD *)(v36 + 8 * v12);
        if (!v11)
        {
          v13 = i + 5;
          if (i + 5 < v35)
          {
            v11 = *(_QWORD *)(v36 + 8 * v13);
            if (v11)
            {
              v12 = i + 5;
              goto LABEL_24;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
                goto LABEL_61;
              if (v12 >= v35)
                break;
              v11 = *(_QWORD *)(v36 + 8 * v12);
              ++v13;
              if (v11)
                goto LABEL_24;
            }
          }
LABEL_57:
          sub_1BA6EBD18();
          return v34;
        }
      }
    }
  }
LABEL_24:
  v4 = (v11 - 1) & v11;
  v9 = __clz(__rbit64(v11)) + (v12 << 6);
  for (i = v12; ; v9 = v8 | (i << 6))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v9);
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v9);
    v37 = MEMORY[0x1E0DEE9D8];
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain_n();
      result = sub_1BB873F30();
      v16 = result;
      if (!result)
        goto LABEL_40;
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (!v16)
        goto LABEL_40;
    }
    if (v16 < 1)
    {
      __break(1u);
      goto LABEL_59;
    }
    if ((v15 & 0xC000000000000001) != 0)
    {
      for (j = 0; j != v16; ++j)
      {
        v18 = MEMORY[0x1BCCE4630](j, v15);
        v19 = (void *)MEMORY[0x1BCCE5D40](v18 + 16);

        if (v19)
        {
          sub_1BB873DB0();
          sub_1BB873DE0();
          sub_1BB873DEC();
          sub_1BB873DBC();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      for (k = 0; k != v16; ++k)
      {
        v21 = (void *)MEMORY[0x1BCCE5D40](*(_QWORD *)(v15 + 8 * k + 32) + 16);
        swift_retain();

        if (v21)
        {
          sub_1BB873DB0();
          sub_1BB873DE0();
          sub_1BB873DEC();
          sub_1BB873DBC();
        }
        else
        {
          swift_release();
        }
      }
    }
LABEL_40:
    swift_bridgeObjectRelease();
    if (v37 < 0 || (v37 & 0x4000000000000000) != 0)
    {
      swift_retain();
      v7 = sub_1BB873F30();
      swift_release();
      if (!v7)
        goto LABEL_7;
    }
    else if (!*(_QWORD *)(v37 + 16))
    {
LABEL_7:
      swift_bridgeObjectRelease();
      result = swift_release();
      if (!v4)
        goto LABEL_9;
      goto LABEL_8;
    }
    v22 = v34;
    v23 = *(_QWORD *)(v34 + 16);
    if (*(_QWORD *)(v34 + 24) <= v23)
    {
      sub_1BA499F70(v23 + 1, 1);
      v22 = v38;
    }
    result = sub_1BB8745C0();
    v24 = v22 + 64;
    v34 = v22;
    v25 = -1 << *(_BYTE *)(v22 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v22 + 64 + 8 * (v26 >> 6))) == 0)
      break;
    v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v22 + 64 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_55:
    *(_QWORD *)(v24 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = 8 * v28;
    *(_QWORD *)(*(_QWORD *)(v22 + 48) + v33) = v14;
    *(_QWORD *)(*(_QWORD *)(v22 + 56) + v33) = v37;
    ++*(_QWORD *)(v22 + 16);
    result = swift_bridgeObjectRelease();
    if (!v4)
      goto LABEL_9;
LABEL_8:
    v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
  }
  v29 = 0;
  v30 = (unint64_t)(63 - v25) >> 6;
  while (++v27 != v30 || (v29 & 1) == 0)
  {
    v31 = v27 == v30;
    if (v27 == v30)
      v27 = 0;
    v29 |= v31;
    v32 = *(_QWORD *)(v24 + 8 * v27);
    if (v32 != -1)
    {
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
      goto LABEL_55;
    }
  }
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ShareLinkProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A0CA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED39E318 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED39A4F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

NewsFeed::FeedGroupClusterOrderingMode_optional __swiftcall FeedGroupClusterOrderingMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedGroupClusterOrderingMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA4A0D68()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PuzzleStatsService()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DisposableObserver()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A0DEC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86EB84();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A0E50()
{
  sub_1BA4A0EAC();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A0EAC()
{
  unint64_t result;

  result = qword_1ED3C7C78;
  if (!qword_1ED3C7C78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9C90, &_s10CodingTypeON_92);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C78);
  }
  return result;
}

uint64_t *sub_1BA4A0EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  v8 = *v4;
  v4[2] = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v4[3] = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  v4[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 24))(a2);
  v9 = *(_QWORD *)(v8 + 80);
  v4[5] = (uint64_t)sub_1BA83E764(a1, v9, a2, a3);
  v4[6] = v10;
  v4[7] = (uint64_t)sub_1BA83E9F4(a1, v9, a2, a3);
  v4[8] = v11;
  v4[9] = (uint64_t)sub_1BA83E664(a1, v9, a2, a3);
  v4[10] = v12;
  v4[11] = (uint64_t)sub_1BA83E82C(a1, v9, a2, a3);
  v4[12] = v13;
  v4[13] = (uint64_t)sub_1BA83E8F4(a1, v9, a2, a3);
  v4[14] = v14;
  return v4;
}

BOOL FeedServiceContextType.shouldRefreshRootCursor(createdDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  char *v13;
  double v14;
  char v15;
  double v17;
  double v18;
  uint64_t v19;

  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FeedServiceOptions(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(a3 + 8))(a2, a3, v10);
  v13 = &v12[*(int *)(v9 + 24)];
  v14 = *(double *)v13;
  v15 = v13[8];
  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FeedServiceOptions);
  if ((v15 & 1) != 0)
    return 0;
  sub_1BB86C8A4();
  sub_1BB86C7F0();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v14 < v18;
}

void sub_1BA4A111C()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X10 }
}

uint64_t sub_1BA4A1210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BB86C634();
  v2 = sub_1BB86C67C();
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    __break(1u);
    JUMPOUT(0x1BA4A1414);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, v1, v2);
}

uint64_t sub_1BA4A1424()
{
  return swift_initClassMetadata2();
}

_QWORD *sub_1BA4A1468(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA81BB4C();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 192);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[24 * v8 + 4])
          memmove(v12, a4 + 4, 192 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA81C820(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1BA4A1588()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BB86C67C();
  if (v0 <= 0x3F)
  {
    sub_1BA6EF3B0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t FeedLoadingGate.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_1BA59AC78(v0 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatGroupNodeMaskLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A1684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3A38E0 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3A38C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1BA4A16F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB870E88();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t FeedPluginManagerResult.fetchResult.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t *initializeWithCopy for FormatAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  id *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unsigned __int8 v14;
  void *v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      v6 = (id *)(a2 + 1);
      v7 = *((unsigned __int8 *)a2 + 16);
      swift_bridgeObjectRetain();
      if (v7 <= 0xFD)
      {
        v37 = *v6;
        sub_1BA727178(*v6, v7);
        a1[1] = (uint64_t)v37;
        *((_BYTE *)a1 + 16) = v7;
      }
      else
      {
        a1[1] = (uint64_t)*v6;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      }
      goto LABEL_30;
    case 1u:
      v8 = *a2;
      v9 = a2[1];
      v10 = a2[2];
      v11 = a2[3];
      v12 = a2[4];
      v13 = *((_BYTE *)a2 + 41);
      v14 = *((_BYTE *)a2 + 40);
      sub_1BA7271AC((id)*a2, v9, v10, v11, v12, v14, v13);
      *a1 = v8;
      a1[1] = v9;
      a1[2] = v10;
      a1[3] = v11;
      a1[4] = v12;
      *((_BYTE *)a1 + 40) = v14;
      *((_BYTE *)a1 + 41) = v13;
      v15 = (void *)a2[7];
      a1[6] = a2[6];
      v16 = *((_BYTE *)a2 + 64);
      swift_bridgeObjectRetain();
      sub_1BA727178(v15, v16);
      a1[7] = (uint64_t)v15;
      *((_BYTE *)a1 + 64) = v16;
      goto LABEL_30;
    case 2u:
      *a1 = *a2;
      swift_retain();
      goto LABEL_30;
    case 4u:
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      v18 = a2[3];
      a1[2] = a2[2];
      a1[3] = v18;
      v19 = a2[5];
      a1[4] = a2[4];
      a1[5] = v19;
      v20 = a2[6];
      v21 = a2[7];
      v22 = a2[8];
      v23 = a2[9];
      v24 = *((_BYTE *)a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA7261E0(v20, v21, v22, v23, v24);
      a1[6] = v20;
      a1[7] = v21;
      a1[8] = v22;
      a1[9] = v23;
      *((_BYTE *)a1 + 80) = v24;
      v25 = a2[12];
      a1[11] = a2[11];
      a1[12] = v25;
      v26 = a2[14];
      a1[13] = a2[13];
      a1[14] = v26;
      a1[15] = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_30;
    case 5u:
      v27 = type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v38 = type metadata accessor for FormatPurchaseLandingPageData();
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v43 = a2[1];
          *a1 = *a2;
          a1[1] = v43;
          v44 = *(int *)(v38 + 20);
          v45 = (char *)a1 + v44;
          v46 = (char *)a2 + v44;
          v47 = type metadata accessor for FormatPostPurchaseData();
          v48 = *(_QWORD *)(v47 - 8);
          v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
          swift_bridgeObjectRetain();
          if (v49(v46, 1, v47))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
          }
          else
          {
            v51 = sub_1BB86C67C();
            v52 = *(_QWORD *)(v51 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v46, 2, v51))
            {
              memcpy(v45, v46, *(_QWORD *)(v48 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v45, v46, v51);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v45, 0, 2, v51);
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
          }
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
          goto LABEL_30;
        }
        v29 = a2[1];
        *a1 = *a2;
        a1[1] = v29;
        v30 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = type metadata accessor for FormatPostPurchaseData();
        v34 = *(_QWORD *)(v33 - 8);
        v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
        swift_bridgeObjectRetain();
        if (v35(v32, 1, v33))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          v41 = sub_1BB86C67C();
          v42 = *(_QWORD *)(v41 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v32, 2, v41))
          {
            memcpy(v31, v32, *(_QWORD *)(v34 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v31, v32, v41);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v31, 0, 2, v41);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_30:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t sub_1BA4A1C9C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t FeedScalingManager.$currentFeedScaleSize.getter()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1BB86D2D0();
  swift_release();
  return v0;
}

uint64_t sub_1BA4A1D30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_BYTE *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  v7 = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1BA8195A4;
  *(_BYTE *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = v7;
  *(_QWORD *)(v5 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1BA4A1DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _OWORD v34[5];
  uint64_t v35;

  v4 = v3;
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v32 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v11);
  v30 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - v14;
  v16 = sub_1BB86BFF8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_OWORD *)(a1 + 48);
  v34[2] = *(_OWORD *)(a1 + 32);
  v34[3] = v20;
  v34[4] = *(_OWORD *)(a1 + 64);
  v35 = *(_QWORD *)(a1 + 80);
  v21 = *(_OWORD *)(a1 + 16);
  v34[0] = *(_OWORD *)a1;
  v34[1] = v21;
  v31 = a2;
  if (!*(_QWORD *)(a2 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a3, v4, v8);
  v29 = a3;
  v22 = v4;
  sub_1BB86BF74();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BAFEE640((uint64_t)v15);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v29, v4, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    v24 = sub_1BB86BF38();
    if (v24)
      v25 = v24;
    else
      v25 = MEMORY[0x1E0DEE9D8];
    MEMORY[0x1E0C80A78](v24);
    *(&v29 - 2) = (uint64_t)v34;
    v26 = sub_1BA7F0E2C((void (*)(_QWORD))sub_1BAFEE694, (uint64_t)(&v29 - 4), v31);
    v33 = v25;
    sub_1BA7F0E18(v26);
    sub_1BB86BF44();
    v27 = (uint64_t)v30;
    sub_1BB86BF80();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v28 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v32, v22, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v27, 1, v8) == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v29, v28, v8);
      return sub_1BA4A2E80(v27, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v28, v8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v29, v27, v8);
    }
  }
}

uint64_t sub_1BA4A20B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  sub_1BA6EE8F0(0, &qword_1ED3B9A28);
  result = sub_1BB873C60();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_1BB8745C0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BA4A234C()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1BA4A2394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1ED39DE08, (uint64_t (*)(void))sub_1BA4F59E0, (uint64_t)&type metadata for A6_V4.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BA4F5964(0, &qword_1ED39DDE8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA4F5924(&qword_1ED39DDE0, &qword_1ED39DDE8, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BA4A24EC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA4A2564()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t type metadata accessor for SportsTaxonomyGraph()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A25CC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A2640()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static FeedCursorGroup.tags(from:excluding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for FeedCursorGroup(255, a3, a4, a4);
  v4 = sub_1BB872EE0();
  sub_1BA78682C();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v4);
  return sub_1BB872BF8();
}

uint64_t sub_1BA4A274C()
{
  sub_1BA4A27A8();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A27A8()
{
  unint64_t result;

  result = qword_1ED3CE148;
  if (!qword_1ED3CE148)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF6F8, &_s10CodingTypeON_33);
    atomic_store(result, (unint64_t *)&qword_1ED3CE148);
  }
  return result;
}

void destroy for FeedEdition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t type metadata accessor for Assembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedPersonalizationService()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A2870(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1BCCE5B24](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA4A28B0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1BB871B24();
  if (v0 <= 0x3F)
  {
    type metadata accessor for FormatItemNodeData();
    if (v1 <= 0x3F)
    {
      type metadata accessor for FormatButtonNodeData();
      if (v2 <= 0x3F)
      {
        sub_1BA4A3FB4(319, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
        if (v3 <= 0x3F)
        {
          type metadata accessor for FormatMicaData();
          if (v4 <= 0x3F)
          {
            type metadata accessor for FormatVideoData(319);
            if (v5 <= 0x3F)
            {
              type metadata accessor for SharedItem();
              if (v6 <= 0x3F)
              {
                type metadata accessor for FormatVideoPlayerData();
                if (v7 <= 0x3F)
                {
                  type metadata accessor for FeedSponsorshipBannerAd();
                  if (v8 <= 0x3F)
                    swift_initEnumMetadataMultiPayload();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1BA4A2A68()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FeedPluginManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + qword_1ED3A4AB0;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t FeedEdition.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1BA4A2B74()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_1BA4A2BBC()
{
  return swift_initClassMetadata2();
}

uint64_t FormatContent.Resolved.iAdKeywords.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupConfig.init(type:identifier:kindIdentifier:slots:paidVisibility:minNewsVersion:maxNewsVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:priority:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char v21;
  char v22;
  int *v23;

  v21 = *a8;
  v22 = *a16;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = v21;
  v23 = (int *)type metadata accessor for FeedGroupConfig(0, a18, a19, a20);
  sub_1BA6BFD64(a10, a9 + v23[15]);
  sub_1BA6BFD64(a11, a9 + v23[16]);
  *(_QWORD *)(a9 + v23[17]) = a12;
  *(_QWORD *)(a9 + v23[18]) = a13;
  *(_QWORD *)(a9 + v23[19]) = a14;
  *(_QWORD *)(a9 + v23[20]) = a15;
  *(_BYTE *)(a9 + v23[21]) = v22;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 32))(a9 + v23[22], a17, a18);
}

void sub_1BA4A2D24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C45D0)
  {
    type metadata accessor for FormatRegex();
    sub_1BA4A2870(&qword_1ED3C6690, (uint64_t (*)(uint64_t))type metadata accessor for FormatRegex, (uint64_t)&protocol conformance descriptor for FormatRegex);
    sub_1BA4A2870(&qword_1ED3C6678, (uint64_t (*)(uint64_t))type metadata accessor for FormatRegex, (uint64_t)&protocol conformance descriptor for FormatRegex);
    sub_1BA4A2870(&qword_1ED3C6680, (uint64_t (*)(uint64_t))type metadata accessor for FormatRegex, (uint64_t)&protocol conformance descriptor for FormatRegex);
    v0 = sub_1BB86DD14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C45D0);
  }
}

uint64_t sub_1BA4A2DF4()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;
  _BYTE *v3;

  v0 = type metadata accessor for FeedServiceOptions(0);
  __swift_allocate_value_buffer(v0, qword_1ED3C40C8);
  v1 = (_BYTE *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED3C40C8);
  type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  result = swift_storeEnumTagMultiPayload();
  *v1 = 0;
  v3 = &v1[*(int *)(v0 + 24)];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v1[*(int *)(v0 + 28)] = 1;
  return result;
}

uint64_t sub_1BA4A2E80(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BA4A2EBC@<X0>(uint64_t *a1@<X8>)
{
  return FeedCursor.shortDescription.getter(a1);
}

uint64_t sub_1BA4A2EDC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatFeedGroup.init(from:)(a1, a2);
}

unint64_t sub_1BA4A2EF0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C797473;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0xD000000000000010;
}

uint64_t sub_1BA4A2F44()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E6963617073;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x61746E6563726570;
}

uint64_t sub_1BA4A2F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4AD288(0, &qword_1ED3A3FF0, (uint64_t)&type metadata for OpenSportEventContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4AD288(0, &qword_1ED3A4028, (uint64_t)&type metadata for OpenSportEventContext, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3A4140 = result;
  return result;
}

uint64_t (*sub_1BA4A3078(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))(_QWORD)
{
  return sub_1BA6598C4(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1BA4A30D4()
{
  return sub_1BA4D7950();
}

void sub_1BA4A30F4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BA4A3FB4(319, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
  {
    sub_1BA4A3FB4(319, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1BA4A31B0()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x61746E6563726570;
}

uint64_t sub_1BA4A31E8()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 1937335659;
}

uint64_t sub_1BA4A320C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4A3240@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4A3274@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4A32A8()
{
  uint64_t v0;

  return sub_1BA6032A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1BA4A32C8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  FormatContent.Resolved.init(from:)(a1, a2);
}

uint64_t sub_1BA4A32DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4A3310(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3B8788, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatementValue);
  a1[2] = sub_1BA4A2870(&qword_1ED3B02D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatementValue);
  result = sub_1BA4A2870(&qword_1ED3D1858, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatementValue);
  a1[3] = result;
  return result;
}

uint64_t sub_1BA4A3388(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3B3B08, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
  a1[2] = sub_1BA4A2870(&qword_1ED3B3B00, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
  result = sub_1BA4A2870(&qword_1ED3D0258, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
  a1[3] = result;
  return result;
}

void sub_1BA4A3400()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BA4A3FB4(319, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  if (v0 <= 0x3F)
  {
    sub_1BA4A3FB4(319, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_1BA4A34CC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BA4A3FB4(319, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  if (v0 <= 0x3F)
  {
    sub_1BA4A3FB4(319, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1BA4A35A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PuzzleTypeStats.init(from:)(a1, a2);
}

uint64_t sub_1BA4A35B8(_QWORD *a1)
{
  return FormatTypeCollection.encode(to:)(a1);
}

uint64_t sub_1BA4A35CC(_QWORD *a1)
{
  return FormatDecorationCollection.encode(to:)(a1);
}

uint64_t sub_1BA4A35E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BA4B8068(0, &qword_1ED3BBFB0, &qword_1ED3BE438, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4B8068(0, (unint64_t *)&unk_1ED3BC010, &qword_1ED3BE438, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1ED39EFC8 = result;
  return result;
}

uint64_t sub_1BA4A36D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEB070];
  sub_1BA4B8068(0, (unint64_t *)&unk_1ED3BBF98, (unint64_t *)&unk_1ED3BE420, MEMORY[0x1E0DEB070], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4B8068(0, &qword_1ED3BBFF8, (unint64_t *)&unk_1ED3BE420, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1ED3CFF40 = result;
  return result;
}

uint64_t sub_1BA4A37C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BA4B8068(0, &qword_1ED3BBFB0, &qword_1ED3BE438, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4B8068(0, (unint64_t *)&unk_1ED3BC010, &qword_1ED3BE438, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1ED3BC1B0 = result;
  return result;
}

uint64_t sub_1BA4A38B8(_QWORD *a1)
{
  return FormatHeadlineBinding.LayeredMedia.init(from:)(a1);
}

uint64_t FormatHeadlineBinding.LayeredMedia.init(from:)(_QWORD *a1)
{
  return sub_1BA57BEB8(a1, (void (*)(uint64_t))sub_1BA57C1A4, (uint64_t)&_s10CodingTypeON_83, (uint64_t)&unk_1E726C130);
}

uint64_t sub_1BA4A38F8(_QWORD *a1)
{
  return FormatCustomItemBinding.URL.init(from:)(a1);
}

uint64_t FormatCustomItemBinding.URL.init(from:)(_QWORD *a1)
{
  return sub_1BA57BEB8(a1, (void (*)(uint64_t))sub_1BA57C160, (uint64_t)&_s3URLO10CodingTypeON, (uint64_t)&unk_1E72682C8);
}

uint64_t sub_1BA4A3938@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatBindingURLExpressionLogic.init(from:)(a1, a2);
}

uint64_t FormatBindingURLExpressionLogic.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FD8D8, (uint64_t)&_s10CodingTypeON_120, (uint64_t)&unk_1E726ABD8, a2);
}

uint64_t sub_1BA4A3978@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatIssueBinding.Text.init(from:)(a1, a2);
}

uint64_t FormatIssueBinding.Text.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FD960, (uint64_t)&_s4TextO10CodingTypeON_3, (uint64_t)&unk_1E726C860, a2);
}

uint64_t sub_1BA4A39B8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatTagBinding.Bool.init(from:)(a1, a2);
}

uint64_t FormatTagBinding.Bool.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FD9A4, (uint64_t)&_s14descr1E730BF49V4BoolO10CodingTypeON, (uint64_t)&unk_1E726EDE8, a2);
}

uint64_t sub_1BA4A39F8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatHeadlineBinding.DateTime.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.DateTime.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FD91C, (uint64_t)&_s14descr1E7272991C8DateTimeO10CodingTypeON, (uint64_t)&unk_1E724BA48, a2);
}

uint64_t sub_1BA4A3A38()
{
  uint64_t v0;

  return sub_1BA4A3A54(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BA4A3A54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *a2;
  v7 = sub_1BB87261C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 41) & 1) == 0)
    return sub_1BA4A3CD4();
  v30 = a2[4];
  sub_1BA7AA598();
  v12 = swift_allocObject();
  v31 = v6;
  v13 = (_QWORD *)v12;
  *(_OWORD *)(v12 + 16) = xmmword_1BB87A390;
  v14 = sub_1BA4F5ADC();
  v32 = a3;
  v16 = v15;
  v13[7] = MEMORY[0x1E0DEA968];
  v17 = sub_1BA6A2D8C();
  v13[8] = v17;
  v13[4] = v14;
  v13[5] = v16;
  v18 = sub_1BA4D7950();
  v13[12] = MEMORY[0x1E0DEA968];
  v13[13] = v17;
  v13[9] = v18;
  v13[10] = v19;
  v20 = sub_1BB87330C();
  sub_1BB86EF44("Emit task will defer until gap is on screen for %{public}@ emitter, identifier=%{public}@", 89, 2, &dword_1BA493000, v30, v20, v13);
  swift_bridgeObjectRelease();
  sub_1BA657D64();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF530], v7);
  v21 = (void *)sub_1BB873498();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v23 = *(_QWORD *)(v31 + 80);
  v22 = *(_QWORD *)(v31 + 88);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v26);
  type metadata accessor for FeedGroupEmitTask(0, v23, v22, v27);
  v28 = sub_1BB86E980();

  return v28;
}

uint64_t sub_1BA4A3CD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1BA4A3CF4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 112))();
}

uint64_t sub_1BA4A3D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4A3DF8(0, (unint64_t *)&unk_1ED3BB520, (uint64_t (*)(uint64_t, unint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4A3DF8(0, &qword_1ED3BC050, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3BC260 = result;
  return result;
}

void sub_1BA4A3DF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA4A3E50();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA4A3E50()
{
  unint64_t result;

  result = qword_1ED3BA820;
  if (!qword_1ED3BA820)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3BA820);
  }
  return result;
}

void sub_1BA4A3E8C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BA4A3FB4(319, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  if (v0 <= 0x3F)
  {
    sub_1BA4A3FB4(319, &qword_1ED3BB1E0, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
    if (v1 <= 0x3F)
    {
      type metadata accessor for FormatOsloSheetPurchaseDataModel(319);
      if (v2 <= 0x3F)
        swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t sub_1BA4A3F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result;
  unint64_t v6;

  result = a5(319);
  if (v6 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1BA4A3FB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BB873A2C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BA4A4000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4A40CC(0, &qword_1ED3B0A58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4A40CC(0, &qword_1ED3B0A98, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3B0AE8 = result;
  return result;
}

void sub_1BA4A40CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB86C67C();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t FeedGroupKnobsRuleValue.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BA4A4164@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BA4A4178(a1, a2);
}

uint64_t sub_1BA4A4178@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1BA4A4194(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BA4A42A0(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1BB4CD2B0(a1, v16[7] + 16 * v10);
      return sub_1BA81C048(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BB4CA9CC();
      goto LABEL_7;
    }
    sub_1BA49FBB8(v13, a3 & 1);
    v18 = sub_1BA4A42A0(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1BB4CD2B0(a1, v16[7] + 16 * v10);
      return sub_1BA81C048(v10, a2, a1, v16);
    }
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

unint64_t sub_1BA4A42A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB8745C0();
  return sub_1BA7B0794(a1, v2);
}

uint64_t sub_1BA4A42D8(_QWORD *a1)
{
  return FormatContentSubgroup.Resolved.encode(to:)(a1);
}

uint64_t sub_1BA4A42EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSlotDefinitionItemSet.init(from:)(a1, a2);
}

uint64_t sub_1BA4A4300(_QWORD *a1)
{
  return FormatStateMachineDefinition.encode(to:)(a1);
}

uint64_t sub_1BA4A4314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4B07F0(0, &qword_1ED3B0A90, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BA650, (uint64_t (*)(uint64_t))sub_1BA768D08, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3BA8D0 = result;
  return result;
}

uint64_t sub_1BA4A43F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4B07F0(0, &qword_1ED3B0A90, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BA650, (uint64_t (*)(uint64_t))sub_1BA768D08, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3BC250 = result;
  return result;
}

uint64_t sub_1BA4A44CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4B07F0(0, &qword_1ED3B0A90, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BA650, (uint64_t (*)(uint64_t))sub_1BA768D08, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3BB540 = result;
  return result;
}

uint64_t sub_1BA4A45A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4B07F0(0, &qword_1ED3B0A90, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BA650, (uint64_t (*)(uint64_t))sub_1BA768D08, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3BC210 = result;
  return result;
}

uint64_t sub_1BA4A4684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4B07F0(0, &qword_1ED3B0A90, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BA650, (uint64_t (*)(uint64_t))sub_1BA768D08, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3BB530 = result;
  return result;
}

uint64_t sub_1BA4A4760(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[2];

  v7 = sub_1BB86D36C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86D378();
  v12 = MEMORY[0x1E0C80A78](v11);
  (*(void (**)(char *, _QWORD, double))(v14 + 104))((char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB57E0], v7);
  *(double *)&v16[1] = a1;
  sub_1BA50F0D4(0, &qword_1ED3B0598);
  swift_allocObject();
  result = sub_1BB86D3D8();
  *a5 = result;
  return result;
}

uint64_t sub_1BA4A48A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB8720A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A491C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86DEF4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1BA4A49CC()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA4A4A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t result;
  double v5;
  uint64_t v6;

  if (v1)
  {
    *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEF040];
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v3 = sub_1BA72BED4(v6, v1);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return __swift_deallocate_boxed_opaque_existential_0(v0);
    }
    else
    {
      v5 = v3;
      swift_release();
      *(double *)v0 = v5;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(_OWORD *)v0 = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
  }
  return result;
}

void sub_1BA4A4B58()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA4A4BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t result;
  double v5;
  uint64_t v6;

  if (v1)
  {
    *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEF040];
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v3 = sub_1BA72BED4(v6, v1);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return __swift_deallocate_boxed_opaque_existential_0(v0);
    }
    else
    {
      v5 = v3;
      swift_release();
      *(double *)v0 = v5;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(_OWORD *)v0 = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
  }
  return result;
}

uint64_t type metadata accessor for FormatPuzzleEmbedViewControllerFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A4D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t result;
  uint64_t v10;

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D234();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAC6F32C(0, (unint64_t *)&unk_1ED3D4B38, v8, &qword_1ED3D4B30, MEMORY[0x1E0DB54F0]);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB54D8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  result = sub_1BB86D3A8();
  qword_1ED3C0958 = result;
  return result;
}

unint64_t sub_1BA4A4E38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  sub_1BA8F559C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F5620();
  v7 = sub_1BB873F6C();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BA4C2DD8(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA8F559C);
    result = sub_1BB4AB52C((unint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for WebEmbedDatastoreCacheKey();
    result = sub_1BA5193C4((uint64_t)v6, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v6[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AdsAssembly()
{
  return objc_opt_self();
}

void sub_1BA4A4FE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B09E8)
  {
    sub_1BB86F868();
    v0 = sub_1BB87063C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B09E8);
  }
}

uint64_t sub_1BA4A5044@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39D0);
  result = sub_1BB86DF48();
  if (v7)
  {
    v4 = type metadata accessor for WebArchiveService();
    v5 = swift_allocObject();
    result = sub_1BA4CECCC(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&protocol witness table for WebArchiveService;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4A50F4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = sub_1BA4D44C8(a2, a1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4B8E28();
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    type metadata accessor for FeedBannerAdRequester();
    swift_allocObject();
    return sub_1BA4E04EC(v5, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4A5188(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF8E04;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA82130C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA4A52AC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF0DD8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA829368();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA8293C0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA4A5414()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[8];

  v2[4] = " ";
  v2[5] = " ";
  v2[6] = &unk_1BB8E78E8;
  result = type metadata accessor for InternalErrorViewLayout.Context();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[7] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A54A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[1] = 0;
  sub_1BA50F0D4(0, &qword_1ED3A3790);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1ED3A36F8 = result;
  return result;
}

uint64_t type metadata accessor for FeedIssueFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CommandAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A5614()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A5668()
{
  sub_1BA505288(0, &qword_1ED3B8A60);
  swift_retain();
  sub_1BB86E5E4();
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for FormatProgressViewNodeRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A5700(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFA5A4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA8321A4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA4A5824()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for FormatPictureInPictureModel();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BB86C67C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3D4B48, (uint64_t (*)(uint64_t))type metadata accessor for FormatPictureInPictureModel, MEMORY[0x1E0DB3938]);
  swift_allocObject();
  return sub_1BB86E158();
}

uint64_t type metadata accessor for EngagementAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A58F8()
{
  sub_1BA4A5954();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A5954()
{
  unint64_t result;

  result = qword_1ED3C9408;
  if (!qword_1ED3C9408)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4948, &_s10CodingTypeON_139);
    atomic_store(result, (unint64_t *)&qword_1ED3C9408);
  }
  return result;
}

uint64_t sub_1BA4A5998()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86EB84();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CategoryViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A5A48@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39F0);
  result = sub_1BB86DF48();
  if (v7)
  {
    v4 = type metadata accessor for LayeredMediaVariantFactory();
    v5 = swift_allocObject();
    result = sub_1BA4CECCC(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1E728D238;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void FeedPluginManager.pluginContainerController.setter(void *a1, uint64_t a2)
{
  void (*v4)(void *, uint64_t);
  id v5;

  sub_1BB86F814();
  v4 = (void (*)(void *, uint64_t))sub_1BB86F820();
  v5 = a1;
  v4(a1, a2);
  sub_1BA49E678();

}

uint64_t sub_1BA4A5B5C()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  void *v3;
  char *v4;

  v3 = &unk_1BB8F8928;
  result = type metadata accessor for GroupLayoutBindingContext();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    v4 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LayeredMediaRenderedViewModelFactory()
{
  return objc_opt_self();
}

_QWORD *sub_1BA4A5C24(_QWORD *a1)
{
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA841BC0(0, &qword_1ED3B07D0, (void (*)(void))sub_1BA83D2D8);
  v1 = sub_1BB86DF3C();
  type metadata accessor for FormatRunModeRunner();
  swift_allocObject();
  return sub_1BA4E2B14(v1);
}

uint64_t sub_1BA4A5CB0()
{
  sub_1BA4A5D0C();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A5D0C()
{
  unint64_t result;

  result = qword_1ED3C9838;
  if (!qword_1ED3C9838)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B85D0, &_s10CodingTypeON_106);
    atomic_store(result, (unint64_t *)&qword_1ED3C9838);
  }
  return result;
}

void sub_1BA4A5D50()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3C4098)
  {
    sub_1BB871F20();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530E8];
    sub_1BB871FC8();
    sub_1BA50AD30(qword_1ED3C0990, 255, v0, MEMORY[0x1E0D530E0]);
    v1 = sub_1BB871BA8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3C4098);
  }
}

uint64_t type metadata accessor for AdPolicyViewportEnvironmentProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A5E18()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86C8B0();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_1BA4A5F08@<X0>(void (*a1)(_QWORD)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  a1(0);
  result = swift_allocObject();
  *a3 = result;
  a3[1] = a2;
  return result;
}

void sub_1BA4A5F40()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3D2F10[0])
  {
    sub_1BB871ECC();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53030];
    sub_1BB871F5C();
    sub_1BA50AD30(&qword_1ED3D2EF0, 255, v0, MEMORY[0x1E0D53028]);
    v1 = sub_1BB87213C();
    if (!v2)
      atomic_store(v1, qword_1ED3D2F10);
  }
}

uint64_t sub_1BA4A5FE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FormatRunModeRunner()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DatabaseAssembly()
{
  return objc_opt_self();
}

uint64_t FCNewsAppConfigurationManager.fetchConfiguration(cachedOnly:)()
{
  sub_1BA4A6114(0, (unint64_t *)&unk_1ED3A3AC0, (unint64_t *)&qword_1ED39C030);
  swift_allocObject();
  return sub_1BB86EA58();
}

void sub_1BA4A6114(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA4EFE00(255, a3);
    v4 = sub_1BB86EAAC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t type metadata accessor for IssueCoverViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A6188()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BA4A61E8()
{
  sub_1BA4A6244();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A6244()
{
  unint64_t result;

  result = qword_1ED3CDB88;
  if (!qword_1ED3CDB88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2F10, &_s10CodingTypeON_156);
    atomic_store(result, (unint64_t *)&qword_1ED3CDB88);
  }
  return result;
}

uint64_t type metadata accessor for FeedPuzzleFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A62C8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A6334()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA4A63B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB871E24();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A6424()
{
  sub_1BA4A6480();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A6480()
{
  unint64_t result;

  result = qword_1ED3B5F38;
  if (!qword_1ED3B5F38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementary.Kind, &type metadata for FormatSupplementary.Kind);
    atomic_store(result, (unint64_t *)&qword_1ED3B5F38);
  }
  return result;
}

uint64_t sub_1BA4A64C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6573616261746164 && a2 == 0xEC000000796C6E4FLL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726566657270 && a2 == 0xEE00657361626174 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB96D8C0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001BB96D8E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4F6B726F7774656ELL && a2 == 0xEB00000000796C6ELL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t type metadata accessor for ShareAttributionViewReuseManager()
{
  return objc_opt_self();
}

int *sub_1BA4A6748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  int *result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a7, a1, AssociatedTypeWitness);
  result = (int *)type metadata accessor for FeedCursorTrackerSnapshot(0, a5, a6, v14);
  *(_QWORD *)(a7 + result[9]) = a2;
  *(_QWORD *)(a7 + result[11]) = a3;
  *(_QWORD *)(a7 + result[10]) = a4;
  return result;
}

uint64_t type metadata accessor for FormatLayoutViewRouter()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A68B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t LazyFeedGroupEmitterCursor.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4A6964(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF7960;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5CCC5C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA76371C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t destroy for FormatConfig(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BA4A6B20()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BB86C8B0();
  if (v0 <= 0x3F)
  {
    sub_1BA4B07F0(319, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for SharingActivityProviderFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatMicaRenderer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ManagerAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A6C50(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF823C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA6400BC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA4A6DB8()
{
  sub_1BA4A6E14();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A6E14()
{
  unint64_t result;

  result = qword_1ED3B7748;
  if (!qword_1ED3B7748)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFlexibleExpression.Direction, &type metadata for FormatFlexibleExpression.Direction);
    atomic_store(result, (unint64_t *)&qword_1ED3B7748);
  }
  return result;
}

uint64_t sub_1BA4A6E58(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaViewRenderer();
  result = sub_1BB86DF3C();
  if (result)
  {
    v2 = result;
    type metadata accessor for FormatLayeredMediaNodeRenderer();
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_QWORD *)(result + 48) = 0;
    *(_QWORD *)(result + 56) = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4A6ECC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatIssueCoverNode();
    sub_1BA4A2870(&qword_1ED39FF80, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssueCoverNode, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA4A7050(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8856E0;
  *(_QWORD *)(v3 + 32) = sub_1BA4D46B8(a2);
  sub_1BB872DCC();
  v4 = (void *)sub_1BB86E854();
  sub_1BA81DCAC();
  sub_1BA81DC64();
  v5 = sub_1BB86E920();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1BA4A7168()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for IssueCoverViewStyler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedPuzzleStatisticFactory()
{
  return objc_opt_self();
}

id sub_1BA4A72A8()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 2);
  result = objc_msgSend(v0, sel_setTimeStyle_, 2);
  qword_1ED39AC18 = (uint64_t)v0;
  return result;
}

uint64_t type metadata accessor for IssueCoverImageProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A7328(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, qword_1ED3B2318);
  sub_1BB86DF48();
  *(_QWORD *)(v2 + 24) = v4;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t destroy for FormatButtonNodeStateMaskLayoutAttributes()
{
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for FormatDecorationProviderFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A73FC()
{
  sub_1BA4A7458();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A7458()
{
  unint64_t result;

  result = qword_1ED3C9150;
  if (!qword_1ED3C9150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizeAutoMask, &type metadata for FormatResizeAutoMask);
    atomic_store(result, (unint64_t *)&qword_1ED3C9150);
  }
  return result;
}

uint64_t sub_1BA4A74D8()
{
  sub_1BA4A7534();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A7534()
{
  unint64_t result;

  result = qword_1ED3CE910;
  if (!qword_1ED3CE910)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4508, &_s10CodingTypeON_143);
    atomic_store(result, (unint64_t *)&qword_1ED3CE910);
  }
  return result;
}

uint64_t sub_1BA4A7578(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, uint64_t), void (*a4)(void))
{
  uint64_t *v4;
  uint64_t *v7;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v7 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_1BA6E35A8(a1, a2);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v7;
  v16 = *v7;
  *v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    v13 = v16;
  }
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v10);
  a3(v10, v13);
  *v7 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1BA4A7654@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v3 = (_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 136));
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  result = FeedOfflineProviding.isOffline.getter(v4, v5);
  if ((result & 1) != 0)
  {
    *a2 = 1;
  }
  else
  {
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
    v9 = swift_checkMetadataState();
    return v8(v9, AssociatedConformanceWitness);
  }
  return result;
}

uint64_t sub_1BA4A7730()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86BEC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A7798()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[16] = v0;
  v2 = sub_1BB87261C();
  v1[17] = v2;
  v1[18] = *(_QWORD *)(v2 - 8);
  v1[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BA4A77F8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitter<A>);
  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitter<A>, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t FeedLoadingGate.dateLifted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = type metadata accessor for FeedLoadingGate.Seal(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86DD20();
  v6 = v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  swift_beginAccess();
  sub_1BA59ACB4(v6, (uint64_t)v5);
  v7 = sub_1BB86C8B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
    v9 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v9, 1, v7);
  return sub_1BB86DD2C();
}

uint64_t type metadata accessor for EngagementBannerViewStyler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A7968()
{
  void *v0;

  if (objc_msgSend(v0, sel_validatedCachedSubscription))
  {
    sub_1BA8412B4();
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    MEMORY[0x1E0C80A78](0);
    sub_1BA8412B4();
    swift_allocObject();
    return sub_1BB86EA58();
  }
}

uint64_t sub_1BA4A7A24(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEC40C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA82A49C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t type metadata accessor for EngagementBannerView()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A7BAC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF96E0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63D70C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA7125BC(0);
    sub_1BA4A2870(&qword_1ED39CEB0, (uint64_t (*)(uint64_t))sub_1BA7125BC, (uint64_t)&protocol conformance descriptor for FormatSelectorValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA4A7D38()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A7DB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t type metadata accessor for FeedPuzzleTypeFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A7E3C()
{
  sub_1BA4A7E98();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A7E98()
{
  unint64_t result;

  result = qword_1ED3BAB28;
  if (!qword_1ED3BAB28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8936FC, &type metadata for FormatItemKind.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3BAB28);
  }
  return result;
}

id FeedBannerAdIntegrator.init(pipeline:blueprintProvider:policyValidator:layoutCollectionProvider:journal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  id v8;

  v7 = *MEMORY[0x1E0DEEDD8] & *v5;
  v8 = sub_1BA4EA700(a1, a2, a3, a4, a5);
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 80) - 8) + 8))(a2);
  swift_release();
  return v8;
}

uint64_t type metadata accessor for FormatPuzzleEmbedViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SportsDataServiceRequestBuilder()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A7F94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = a6;
  *(_BYTE *)(v6 + 88) = a4;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  *(_QWORD *)(v6 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1BA4A7FB8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1BB871680();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86FAD8();
    if (v2 <= 0x3F)
    {
      result = sub_1BB870AC8();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1BA4A8088()
{
  sub_1BA4A80E4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4A80E4()
{
  unint64_t result;

  result = qword_1ED3C9890;
  if (!qword_1ED3C9890)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA6F8, &_s10CodingTypeON_83);
    atomic_store(result, (unint64_t *)&qword_1ED3C9890);
  }
  return result;
}

uint64_t sub_1BA4A8128()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86D93C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for FormatTextNodeAlternative()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1BA4A822C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86D8A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A82E4()
{
  if (qword_1ED3BB3A0 != -1)
    swift_once();
  swift_beginAccess();
  return qword_1ED3B8768;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatFeedGroup(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  int *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  _QWORD *v53;
  uint64_t v54;
  int EnumCaseMultiPayload;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  _QWORD *v103;
  uint64_t v104;
  char *v105;
  _QWORD *v106;
  int *v107;
  unsigned int (*v111)(char *, uint64_t, int *);
  void *__dstb;
  char *__dstc;
  char *__dst;
  int *__dsta;
  char *v116;
  _QWORD *v117;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v3 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    v21 = (_QWORD *)(v26 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    *a1 = *a2;
    v4 = a3[5];
    v5 = (_QWORD *)((char *)a1 + v4);
    v6 = (char *)a2 + v4;
    v7 = *(_QWORD *)((char *)a2 + v4 + 8);
    *v5 = *(_QWORD *)((char *)a2 + v4);
    v5[1] = v7;
    v8 = (int *)type metadata accessor for FormatContent.Resolved();
    v9 = v8[5];
    v10 = (char *)v5 + v9;
    v11 = &v6[v9];
    v12 = sub_1BB86C8B0();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *(_QWORD *)((char *)v5 + v8[6]) = *(_QWORD *)&v6[v8[6]];
    *(_QWORD *)((char *)v5 + v8[7]) = *(_QWORD *)&v6[v8[7]];
    *(_QWORD *)((char *)v5 + v8[8]) = *(_QWORD *)&v6[v8[8]];
    *(_QWORD *)((char *)v5 + v8[9]) = *(_QWORD *)&v6[v8[9]];
    *(_QWORD *)((char *)v5 + v8[10]) = *(_QWORD *)&v6[v8[10]];
    *(_QWORD *)((char *)v5 + v8[11]) = *(_QWORD *)&v6[v8[11]];
    v14 = v8[12];
    __dstb = *(void **)&v6[v14];
    *(_QWORD *)((char *)v5 + v14) = __dstb;
    *(_QWORD *)((char *)v5 + v8[13]) = *(_QWORD *)&v6[v8[13]];
    v106 = v5;
    v107 = v8;
    v15 = v8[14];
    v117 = (_QWORD *)((char *)v5 + v15);
    v116 = v6;
    v16 = &v6[v15];
    v17 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
    v18 = *((_QWORD *)v17 - 1);
    v111 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v19 = __dstb;
    swift_unknownObjectRetain();
    if (v111(v16, 1, v17))
    {
      sub_1BA4A3FB4(0, &qword_1ED3D54C0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
      memcpy(v117, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v22 = a2;
      v21 = a1;
      v23 = v107;
      v24 = a3;
      v25 = v106;
    }
    else
    {
      v104 = v18;
      v27 = *((_QWORD *)v16 + 1);
      *v117 = *(_QWORD *)v16;
      v117[1] = v27;
      v28 = v17[5];
      v29 = (_QWORD *)((char *)v117 + v28);
      v30 = &v16[v28];
      v31 = *(_QWORD *)&v16[v28 + 8];
      *v29 = *(_QWORD *)&v16[v28];
      v29[1] = v31;
      v32 = (int *)type metadata accessor for FormatWebEmbed();
      v33 = v32[5];
      __dstc = (char *)v29 + v33;
      v105 = &v30[v33];
      v34 = sub_1BB86C67C();
      v35 = *(_QWORD *)(v34 - 8);
      v36 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(__dstc, v105, v34);
      v37 = v32[6];
      __dst = (char *)v29 + v37;
      v38 = &v30[v37];
      v101 = v34;
      v102 = v36;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(&v30[v37], 1, v34))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v36(__dst, v38, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
      }
      *(_QWORD *)((char *)v29 + v32[7]) = *(_QWORD *)&v30[v32[7]];
      v40 = v32[8];
      v41 = (_QWORD *)((char *)v29 + v40);
      v42 = &v30[v40];
      v43 = *((_QWORD *)v42 + 1);
      *v41 = *(_QWORD *)v42;
      v41[1] = v43;
      v44 = v32[9];
      v45 = (_QWORD *)((char *)v29 + v44);
      v46 = &v30[v44];
      v47 = *((_QWORD *)v46 + 1);
      *v45 = *(_QWORD *)v46;
      v45[1] = v47;
      *(_QWORD *)((char *)v29 + v32[10]) = *(_QWORD *)&v30[v32[10]];
      *(_QWORD *)((char *)v29 + v32[11]) = *(_QWORD *)&v30[v32[11]];
      *(_QWORD *)((char *)v29 + v32[12]) = *(_QWORD *)&v30[v32[12]];
      *(_QWORD *)((char *)v117 + v17[6]) = *(_QWORD *)&v16[v17[6]];
      *(_QWORD *)((char *)v117 + v17[7]) = *(_QWORD *)&v16[v17[7]];
      __dsta = v17;
      v48 = v17[8];
      v103 = (_QWORD *)((char *)v117 + v48);
      v49 = &v16[v48];
      v50 = type metadata accessor for WebEmbedDataVisualization();
      v51 = *(_QWORD *)(v50 - 8);
      v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v52(v49, 1, v50))
      {
        v53 = v117;
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v103, v49, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        v24 = a3;
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v56 = *(_QWORD *)v49;
        v24 = a3;
        v53 = v117;
        if (EnumCaseMultiPayload == 1)
        {
          v57 = *((_QWORD *)v49 + 1);
          *v103 = v56;
          v103[1] = v57;
          v58 = type metadata accessor for GenericDataVisualization();
          v59 = *(int *)(v58 + 20);
          v60 = (char *)v103 + v59;
          v61 = &v49[v59];
          swift_bridgeObjectRetain();
          v102(v60, v61, v101);
          *(_QWORD *)((char *)v103 + *(int *)(v58 + 24)) = *(_QWORD *)&v49[*(int *)(v58 + 24)];
          swift_bridgeObjectRetain();
        }
        else
        {
          *v103 = v56;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v103, 0, 1, v50);
      }
      v25 = v106;
      v23 = v107;
      v62 = __dsta[9];
      v63 = (char *)v53 + v62;
      v64 = &v16[v62];
      sub_1BA6C5A68();
      v66 = v65;
      v67 = *(_QWORD *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v64, 1, v65))
      {
        sub_1BA4A3FB4(0, &qword_1ED3D2C50, (void (*)(uint64_t))sub_1BA6C5A68);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v63, v64, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v63, 0, 1, v66);
      }
      v22 = a2;
      v21 = a1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v104 + 56))(v53, 0, 1, __dsta);
    }
    v69 = v23[15];
    v70 = *(void **)&v116[v69];
    *(_QWORD *)((char *)v25 + v69) = v70;
    *((_BYTE *)v25 + v23[16]) = v116[v23[16]];
    *(_QWORD *)((char *)v25 + v23[17]) = *(_QWORD *)&v116[v23[17]];
    v71 = v23[18];
    v72 = (char *)v25 + v71;
    v73 = &v116[v71];
    v74 = sub_1BB871E24();
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
    v77 = v70;
    swift_bridgeObjectRetain();
    if (v76(v73, 1, v74))
    {
      sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    }
    v79 = v24[6];
    v80 = v24[7];
    v81 = (_QWORD *)((char *)v21 + v79);
    v82 = (_QWORD *)((char *)v22 + v79);
    v83 = v82[1];
    *v81 = *v82;
    v81[1] = v83;
    *((_BYTE *)v21 + v80) = *((_BYTE *)v22 + v80);
    v84 = v24[9];
    *((_BYTE *)v21 + v24[8]) = *((_BYTE *)v22 + v24[8]);
    *(_QWORD *)((char *)v21 + v84) = *(_QWORD *)((char *)v22 + v84);
    v85 = v24[11];
    *(_QWORD *)((char *)v21 + v24[10]) = *(_QWORD *)((char *)v22 + v24[10]);
    *(_QWORD *)((char *)v21 + v85) = *(_QWORD *)((char *)v22 + v85);
    v86 = v24[12];
    v87 = v24[13];
    v88 = (char *)v21 + v86;
    v89 = (char *)v22 + v86;
    *(_QWORD *)v88 = *(_QWORD *)v89;
    v88[8] = v89[8];
    v90 = (char *)v21 + v87;
    v91 = (char *)v22 + v87;
    *(_QWORD *)v90 = *(_QWORD *)v91;
    v90[8] = v91[8];
    v92 = v24[14];
    v93 = v24[15];
    v94 = (char *)v21 + v92;
    v95 = (char *)v22 + v92;
    *(_QWORD *)v94 = *(_QWORD *)v95;
    v94[8] = v95[8];
    v96 = (char *)v21 + v93;
    v97 = (char *)v22 + v93;
    *(_QWORD *)v96 = *(_QWORD *)v97;
    v96[8] = v97[8];
    v98 = v24[17];
    *((_BYTE *)v21 + v24[16]) = *((_BYTE *)v22 + v24[16]);
    *(_QWORD *)((char *)v21 + v98) = *(_QWORD *)((char *)v22 + v98);
    v99 = v24[19];
    *(_QWORD *)((char *)v21 + v24[18]) = *(_QWORD *)((char *)v22 + v24[18]);
    *(_QWORD *)((char *)v21 + v99) = *(_QWORD *)((char *)v22 + v99);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v21;
}

uint64_t sub_1BA4A8A98(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedHeadlineFactory();
  result = sub_1BB86DF3C();
  if (result)
  {
    v2 = result;
    type metadata accessor for FeedWebEmbedFactory();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4A8B04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v9;
  char v10;
  char v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  char *v18;

  v2 = swift_checkMetadataState();
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    swift_getTupleTypeLayout2();
    v12 = &v11;
    swift_getTupleTypeLayout2();
    v13 = &v10;
    v14 = v5;
    v15 = &unk_1BB92C680;
    v16 = &unk_1BB92C680;
    v17 = &unk_1BB92C680;
    v3 = type metadata accessor for FeedGroupEmitterEmbeddedOutput(319, v3, *(_QWORD *)(a1 + 24), v6);
    if (v7 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v18 = &v9;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v3;
}

uint64_t static FeedGroupGroupingRules.noRules.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA5ECC44();
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 16) = 1000;
  *(_QWORD *)(v2 + 24) = v3;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 1000;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 1000;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 1000;
  *(_QWORD *)(v6 + 24) = v3;
  sub_1BA839ECC();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0x3FF0000000000000;
  *(_BYTE *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 32) = 1;
  *(_BYTE *)(v7 + 40) = 0;
  *(_QWORD *)(v7 + 48) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v7 + 56) = v3;
  return sub_1BAA37D84(v2, v4, v5, v6, v7, 0, 0, 0, a1, 0, 0);
}

uint64_t sub_1BA4A8D18()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_1BB871680();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86FAD8();
    if (v2 <= 0x3F)
    {
      result = sub_1BB870AC8();
      if (v3 <= 0x3F)
      {
        result = sub_1BB872034();
        if (v4 <= 0x3F)
          return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1BA4A8DF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86EDAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A8E88(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  _QWORD v12[5];
  _QWORD v13[3];
  objc_class *v14;
  uint64_t v15;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3CF9D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9900);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D3B80);
  result = sub_1BB86DF48();
  if (!v14)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3BA810);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v7 = result;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D59E0);
  result = sub_1BB86DF48();
  if (v12[3])
  {
    v8 = (objc_class *)type metadata accessor for PuzzleNotificationAutoEnableStartupTask();
    v9 = objc_allocWithZone(v8);
    v10 = sub_1BB112228(v4, v5, (uint64_t)v13, v6, v7, (uint64_t)v12);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v14 = v8;
    v15 = sub_1BA4A2870(&qword_1ED3CF2C0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleNotificationAutoEnableStartupTask, (uint64_t)&unk_1BB8ED638);
    v13[0] = v10;
    v11 = v10;
    sub_1BB86E4D0();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BA4A9128(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatGroupNodeStyle();
    sub_1BA4A2870(&qword_1ED3A6800, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeStyle, (uint64_t)&protocol conformance descriptor for FormatGroupNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t initializeWithCopy for FormatTransformData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  int *v24;
  uint64_t v25;
  unsigned int (*v26)(_QWORD *, uint64_t, int *);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;

  v6 = *(void **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a1 = v6;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v7;
    v8 = (_QWORD *)(a2 + 32);
    v9 = *(_QWORD *)(a2 + 40);
    v10 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v9 - 1) >= 3)
    {
      *(_QWORD *)(a1 + 32) = *v8;
      *(_QWORD *)(a1 + 40) = v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
    }
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v14 = *(void **)(a2 + 56);
    v15 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v14;
    *(_QWORD *)(a1 + 64) = v15;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    v16 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 104) = v16;
    v17 = v16;
    v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
    v19 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(a1 + 80, a2 + 80, v17);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  v20 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  v21 = *(int *)(a3 + 40);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    *v22 = *v23;
    *((_BYTE *)v22 + 8) = *((_BYTE *)v23 + 8);
    v22[2] = v23[2];
    *((_BYTE *)v22 + 24) = *((_BYTE *)v23 + 24);
    v28 = v24[6];
    v29 = (_QWORD *)((char *)v22 + v28);
    v30 = (_QWORD *)((char *)v23 + v28);
    v31 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = v30[1];
      *v29 = *v30;
      v29[1] = v34;
      v35 = *(int *)(v31 + 24);
      v54 = (char *)v30 + v35;
      v55 = (char *)v29 + v35;
      v36 = sub_1BB86D078();
      v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
      swift_bridgeObjectRetain();
      v53(v55, v54, v36);
      *(_QWORD *)((char *)v29 + *(int *)(v31 + 28)) = *(_QWORD *)((char *)v30 + *(int *)(v31 + 28));
      v37 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56);
      swift_bridgeObjectRetain();
      v37(v29, 0, 1, v31);
    }
    v38 = v24[7];
    v39 = (char *)v22 + v38;
    v40 = (char *)v23 + v38;
    *(_QWORD *)v39 = *(_QWORD *)v40;
    v39[8] = v40[8];
    v41 = v24[8];
    v42 = (char *)v22 + v41;
    v43 = (char *)v23 + v41;
    v42[8] = v43[8];
    *(_QWORD *)v42 = *(_QWORD *)v43;
    v44 = v24[9];
    v45 = (char *)v22 + v44;
    v46 = (char *)v23 + v44;
    *(_QWORD *)v45 = *(_QWORD *)v46;
    v45[8] = v46[8];
    v47 = v24[10];
    v48 = (char *)v22 + v47;
    v49 = (char *)v23 + v47;
    v50 = *((_QWORD *)v49 + 4);
    if (v50 == 1)
    {
      v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
      *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
    }
    else
    {
      *(_QWORD *)v48 = *(_QWORD *)v49;
      v48[8] = v49[8];
      *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
      v48[24] = v49[24];
      *((_QWORD *)v48 + 4) = v50;
      swift_bridgeObjectRetain();
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

uint64_t type metadata accessor for LayeredMediaViewProvider()
{
  return objc_opt_self();
}

unint64_t sub_1BA4A9650()
{
  unint64_t result;

  result = qword_1ED3B9790;
  if (!qword_1ED3B9790)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B9790);
  }
  return result;
}

void sub_1BA4A968C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C49A0)
  {
    sub_1BB870A80();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C49A0);
  }
}

uint64_t sub_1BA4A96E0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEC224;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA8268BC();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA4A9804()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_1BA4A9920()
{
  uint64_t v0;
  id v1;
  uint64_t v3;
  _QWORD *v4;

  if ((objc_msgSend(*(id *)(v0 + 32), sel_respondsToSelector_, sel_fetchedAppConfiguration) & 1) != 0)
  {
    v1 = objc_msgSend(*(id *)(v0 + 32), sel_fetchedAppConfiguration);
    if (v1)
      return (*(uint64_t (**)(id))(v0 + 8))(v1);
  }
  if (*(_BYTE *)(v0 + 64) == 1)
  {
    v1 = objc_msgSend(*(id *)(v0 + 32), sel_possiblyUnfetchedAppConfiguration);
    return (*(uint64_t (**)(id))(v0 + 8))(v1);
  }
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED39C030);
  *v4 = v0;
  v4[1] = sub_1BA98051C;
  return sub_1BB874518();
}

uint64_t sub_1BA4A9A50(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[4];
  __int128 v14;
  char v15;

  v5 = a1 & 1;
  v15 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF0E4C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA8294AC();
    v14 = 0uLL;
    sub_1BB874464();
    v14 = xmmword_1BB87FC90;
    sub_1BA82FCB4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA4A9BAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4A9C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF0F0C;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA82FD64();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t type metadata accessor for SharingActivityTypeProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedWebEmbedFactory()
{
  return objc_opt_self();
}

void sub_1BA4A9D80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4540)
  {
    sub_1BB86D93C();
    sub_1BA4B8748(&qword_1ED3C4590, (uint64_t)&protocol conformance descriptor for LayoutContentScale);
    v0 = sub_1BB86D2E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4540);
  }
}

uint64_t sub_1BA4A9DF0()
{
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BBF08, (uint64_t (*)(uint64_t))sub_1BA81DAD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t type metadata accessor for FormatVideoPlayerViewControllerFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA4A9E78@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  int v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19[2];
  _BYTE v20[40];

  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - v5;
  if (*(_QWORD *)(a1 + 16) && (v7 = sub_1BA6E35A8(0x6461654864656546, 0xEC000000656E696CLL), (v8 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BA4CECCC(v19, (uint64_t)v20);
    sub_1BA4C010C((uint64_t)v20, (uint64_t)v19);
    sub_1BA83CC6C();
    v9 = type metadata accessor for FeedHeadline(0);
    v10 = swift_dynamicCast();
    v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v6, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BA5193C4((uint64_t)v6, a2, type metadata accessor for FeedHeadline);
    }
    else
    {
      v11(v6, 1, 1, v9);
      sub_1BA6AA068((uint64_t)v6, (uint64_t)&unk_1ED3B2DB0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      sub_1BA758A4C();
      swift_allocError();
      v18 = v17;
      strcpy((char *)v17, "FeedHeadline");
      *(_BYTE *)(v17 + 13) = 0;
      *(_WORD *)(v17 + 14) = -5120;
      sub_1BA4C010C((uint64_t)v20, v17 + 16);
      *(_BYTE *)(v18 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v14 = v13;
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA85C6FC(v15);
    swift_bridgeObjectRelease();
    strcpy((char *)v14, "FeedHeadline");
    *(_BYTE *)(v14 + 13) = 0;
    *(_WORD *)(v14 + 14) = -5120;
    *(_QWORD *)(v14 + 16) = v16;
    *(_BYTE *)(v14 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t type metadata accessor for FormatLayoutViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AA118(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitter<A>, a1);
  return sub_1BB86E308();
}

void sub_1BA4AA14C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1BB86F6E8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t type metadata accessor for LayeredMediaVariantSelector()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatVideoPlayerNodeRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AA1EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a2;
  v28 = a5;
  v26 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)&v25 - v12;
  v14 = sub_1BB86C8B0();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v18 + 16))(v17, a1, v15);
  v20 = type metadata accessor for FeedDeferredCursorGroup(0, a3, a4, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1 + *(int *)(v20 + 36), AssociatedTypeWitness);
  v21 = sub_1BA5B1EC4();
  v23 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v9, v27, a3);
  return FeedCursorGroup.init(createdDate:group:configIdentifier:serviceConfig:)((uint64_t)v17, (uint64_t)v13, v21, v23, (uint64_t)v9, a3, a4, v28);
}

uint64_t type metadata accessor for SharingIssueActivityTypeProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FactoryAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for InternalErrorView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatLayoutViewDebugger()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TagImageShareAttributeProvider()
{
  return objc_opt_self();
}

void sub_1BA4AA460()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for FormatCompilerOptions(319);
  if (v0 <= 0x3F)
  {
    sub_1BB86EB84();
    if (v1 <= 0x3F)
    {
      sub_1BA4B07F0(319, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1BA4AA574(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0978);
  result = sub_1BB86DF48();
  if (v4)
  {
    type metadata accessor for OpenURLCommandHandler();
    v2 = swift_allocObject();
    sub_1BA4CECCC(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for FormatLayeredMediaNodeRenderer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StubOfflineProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatShareAttributionNodeRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AA670()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  v4 = *(void **)(v0[16] + 112);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DEF548], v3);
  v5 = sub_1BB873498();
  v0[20] = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1BA8286EC;
  v6 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  v0[12] = sub_1BA81D118;
  v0[13] = &block_descriptor_77;
  v0[14] = v6;
  objc_msgSend(v4, sel_fetchAppConfigurationIfNeededWithCompletionQueue_completion_, v5, v0 + 10);
  return swift_continuation_await();
}

void sub_1BA4AA784()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BA7735BC();
  if (v0 <= 0x3F)
  {
    sub_1BB871170();
    if (v1 <= 0x3F)
    {
      sub_1BB870FA8();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1BA4AA830()
{
  uint64_t v0;
  uint64_t result;

  sub_1BA748DB8();
  v0 = sub_1BB8737C8();
  result = sub_1BB8737BC();
  qword_1ED3B4718 = v0;
  unk_1ED3B4720 = result;
  return result;
}

id sub_1BA4AA86C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DA8880]), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_1BA4AA8A4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatProgressViewNodeStyle();
    sub_1BA4A2870(&qword_1ED3A8028, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressViewNodeStyle, (uint64_t)&protocol conformance descriptor for FormatProgressViewNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t type metadata accessor for RendererAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AAA48(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 144) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 152) = a1;
  return swift_task_switch();
}

uint64_t type metadata accessor for CoverChannelView()
{
  return objc_opt_self();
}

void sub_1BA4AAADC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3B0B30)
  {
    sub_1BB871ECC();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53030];
    sub_1BB871F5C();
    sub_1BA50AD30(&qword_1ED3D2EF0, 255, v0, MEMORY[0x1E0D53028]);
    v1 = sub_1BB871BA8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3B0B30);
  }
}

uint64_t type metadata accessor for FormatImageRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AABA4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4AAC20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t type metadata accessor for SportsDataConfigurationService()
{
  return objc_opt_self();
}

void sub_1BA4AAC84()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3B0C00)
  {
    sub_1BB871CB0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D52C40];
    sub_1BB871D94();
    sub_1BA50AD30(&qword_1ED3D2ED8, 255, v0, MEMORY[0x1E0D52C38]);
    v1 = sub_1BB87213C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3B0C00);
  }
}

uint64_t sub_1BA4AAD2C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA7F85E8(0, (unint64_t *)&qword_1ED3B9400, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4E90F4(&qword_1ED39BE40, &qword_1ED39B150, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BA4AAE08()
{
  uint64_t v1;

  sub_1BB86DD5C();
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
  swift_retain();
  sub_1BB86E758();
  swift_release();
  return v1;
}

uint64_t sub_1BA4AAEAC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  char *v8;
  uint64_t *v9;

  v0 = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    v2 = type metadata accessor for FormatMetadata();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout2();
      v8 = &v7;
      v0 = swift_checkMetadataState();
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v9 = &v6;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t sub_1BA4AAF88()
{
  sub_1BA4AAFE4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4AAFE4()
{
  unint64_t result;

  result = qword_1ED3BE020;
  if (!qword_1ED3BE020)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolScale, &type metadata for FormatSymbolScale);
    atomic_store(result, (unint64_t *)&qword_1ED3BE020);
  }
  return result;
}

uint64_t sub_1BA4AB028(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatAccessibilityLayoutValue();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA4AB064()
{
  sub_1BA4AB0C0();
  return sub_1BB872D60();
}

unint64_t sub_1BA4AB0C0()
{
  unint64_t result;

  result = qword_1ED3CA398;
  if (!qword_1ED3CA398)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6FB8, &_s10CodingTypeON_117);
    atomic_store(result, (unint64_t *)&qword_1ED3CA398);
  }
  return result;
}

uint64_t sub_1BA4AB104(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_retain();
  sub_1BB2E4F2C(a1, v3);
  swift_release();
  sub_1BA4B07F0(0, &qword_1ED39A590, (uint64_t (*)(uint64_t))sub_1BA81DD70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t type metadata accessor for LayeredMediaVariantFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedItemPrefetcher()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PuzzleGameCenterService()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AB1F8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SharingActivityItemFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AB288(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEBEFC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA55D9C4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA5737F4(0);
    sub_1BA4A2870(&qword_1ED39F808, (uint64_t (*)(uint64_t))sub_1BA5737F4, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA4AB40C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v5;

  v1 = a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v1, v2);
  v4 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 16);
  v5 = swift_unknownObjectRetain();
  v4(v5, &protocol witness table for SharedItemManager, v2, v3);
  return swift_endAccess();
}

uint64_t sub_1BA4AB49C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF4CD8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA62486C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA8320EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t type metadata accessor for FormatAdMetricsNodeRenderer()
{
  return objc_opt_self();
}

void sub_1BA4AB620()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3C40B0)
  {
    sub_1BB871F20();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530E8];
    sub_1BB871FC8();
    sub_1BA50AD30(qword_1ED3C0990, 255, v0, MEMORY[0x1E0D530E0]);
    v1 = sub_1BB87213C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3C40B0);
  }
}

uint64_t type metadata accessor for CategoryView()
{
  return objc_opt_self();
}

uint64_t FormatContentSubgroupFilter.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1BA817B9C(0, &qword_1ED3AB470, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA817BF8();
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BA824244();
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA4AB82C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 - 65) = 1;
  sub_1BA9F15F8();
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 96);
    v7 = *(_QWORD *)(v5 - 88);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    *v1 = v8;
    JUMPOUT(0x1BA4AB7E4);
  }
  JUMPOUT(0x1BA4AB7D4);
}

void sub_1BA4AB89C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_BYTE *)(v5 - 65) = 1;
  sub_1BB173ED0();
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 96);
    v7 = *(_BYTE *)(v5 - 88);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_BYTE *)(v8 + 24) = v7;
    *v1 = v8 | 0x1000000000000000;
    JUMPOUT(0x1BA4AB7E4);
  }
  JUMPOUT(0x1BA4AB7D4);
}

void sub_1BA4AB918()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 - 65) = 1;
  sub_1BAF30AF8();
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 96);
    v7 = *(_QWORD *)(v5 - 88);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    *v1 = v8 | 0x2000000000000000;
    JUMPOUT(0x1BA4AB7E4);
  }
  JUMPOUT(0x1BA4AB7D4);
}

void sub_1BA4AB98C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 - 65) = 1;
  sub_1BB173E8C();
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 96);
    v7 = *(_QWORD *)(v5 - 88);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    *v1 = v8 | 0x3000000000000000;
    JUMPOUT(0x1BA4AB7E4);
  }
  JUMPOUT(0x1BA4AB7D4);
}

void sub_1BA4ABA00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 - 65) = 1;
  sub_1BA958254();
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 96);
    v7 = *(_QWORD *)(v5 - 88);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    *v1 = v8 | 0x4000000000000000;
    JUMPOUT(0x1BA4AB7E4);
  }
  JUMPOUT(0x1BA4AB7D4);
}

void sub_1BA4ABA74()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  *v0 = swift_allocEmptyBox() | 0x5000000000000000;
  JUMPOUT(0x1BA4AB7E4);
}

uint64_t sub_1BA4ABC64(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_release();
}

uint64_t type metadata accessor for FeedBannerAdView()
{
  return objc_opt_self();
}

uint64_t sub_1BA4ABCC8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StubImageDownloader()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for HeadlineViewRendererPipelineProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1BA4ABD88@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v4 = sub_1BB86DEF4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D5180);
  result = sub_1BB86DF18();
  if (v13)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    result = sub_1BB86DF18();
    if (v11)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB3560], v4);
      v9 = type metadata accessor for WebEmbedDataVisualizationDataService(0);
      swift_allocObject();
      result = sub_1BA937BA4(&v12, &v10, (uint64_t)v7, 60);
      a2[3] = v9;
      a2[4] = (uint64_t)&off_1E727BD98;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4ABF14()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86E6BC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA4ABFA8(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF52F0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA7B6C28();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA836D20();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t type metadata accessor for FeedTagFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AC12C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BA62E724();
  swift_allocObject();
  v2 = sub_1BB86D450();
  sub_1BA4CDF6C(0, &qword_1ED3B06D0, (uint64_t (*)(void))sub_1BA82F598, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
  swift_allocObject();
  result = sub_1BB86D7C8();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t PuzzleService.puzzles(for:excludeDrafts:callbackQueue:)(uint64_t a1, char a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 1624) = v3;
  *(_QWORD *)(v4 + 1576) = a3;
  *(_BYTE *)(v4 + 1784) = a2;
  *(_QWORD *)(v4 + 1528) = a1;
  *(_QWORD *)(v4 + 1672) = *v3;
  return swift_task_switch();
}

uint64_t sub_1BA4AC1F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = sub_1BB86C67C();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t sub_1BA4AC254()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FormatVideoNodeRenderer()
{
  return objc_opt_self();
}

void sub_1BA4AC2CC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BB86C67C();
  if (v0 <= 0x3F)
  {
    sub_1BA4A3FB4(319, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1BA4AC3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[16];

  v5 = sub_1BB86D378();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1BB86D36C();
  v10 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(_BYTE *, _QWORD, double))(v12 + 104))(&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E8], v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB5800], v5);
  v14[15] = 0;
  sub_1BA50F0D4(0, (unint64_t *)&qword_1ED3D5FD0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  *a4 = result;
  return result;
}

uint64_t sub_1BA4AC4DC()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  char *v5;
  char *v6;

  result = sub_1BB86EB84();
  if (v1 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v5 = &v3;
    swift_getTupleTypeLayout3();
    v6 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LayeredMediaConditionValidator()
{
  return objc_opt_self();
}

void sub_1BA4AC5A4()
{
  __asm { BR              X10 }
}

uint64_t (*sub_1BA4AC5E4())()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t (*result)();
  uint64_t v4;

  if (!v1)
    return 0;
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v2 = sub_1BA72BED4(v4, v1);
  swift_bridgeObjectRelease();
  result = (uint64_t (*)())swift_release();
  if (!v0)
  {
    *(double *)(swift_allocObject() + 16) = v2;
    return sub_1BAFD0AC0;
  }
  return result;
}

uint64_t sub_1BA4ACBC0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB87270C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FeedWeather.Temperature(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BA4ACC74(_QWORD *a1)
{
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  id v9;
  char *v10;
  objc_super v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;
  _BYTE v16[24];
  uint64_t v17;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D58C0);
  result = sub_1BB86DF48();
  if (!v17)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, &qword_1ED3CF8C8);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v3 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D3B80);
  result = sub_1BB86DF48();
  if (!v15)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9900);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = sub_1BB86DF48();
  if (v12)
  {
    v5 = v13;
    v6 = (objc_class *)type metadata accessor for ShortcutCommandHandler();
    v7 = (char *)objc_allocWithZone(v6);
    v8 = &v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_commandCenter];
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_commandCenter + 8] = 0;
    swift_unknownObjectWeakInit();
    sub_1BA4C010C((uint64_t)v16, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutManager]);
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutList] = v3;
    sub_1BA4C010C((uint64_t)v14, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_featureAvailability]);
    *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_bundleSubscriptionManager] = v4;
    *((_QWORD *)v8 + 1) = v5;
    swift_unknownObjectWeakAssign();
    v11.receiver = v7;
    v11.super_class = v6;
    v9 = v3;
    swift_unknownObjectRetain();
    v10 = (char *)objc_msgSendSuper2(&v11, sel_init);
    objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutList], sel_addObserver_, v10, v11.receiver, v11.super_class);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return (uint64_t)v10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LazyAuthTokenStore()
{
  return objc_opt_self();
}

uint64_t sub_1BA4ACF3C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE95C0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AE108();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA825364();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t type metadata accessor for PuzzleStatsProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AD0C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4AD288(0, &qword_1ED3BB518, (uint64_t)&type metadata for CommandShareContent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3BC020, (uint64_t)&type metadata for CommandShareContent, MEMORY[0x1E0DBC428]);
  sub_1BB8714A0();
  sub_1BB871470();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3BC1F0 = result;
  return result;
}

uint64_t sub_1BA4AD1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4AD288(0, &qword_1ED3BBFB8, (uint64_t)&type metadata for CommandShareContentComplete, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4AD288(0, &qword_1ED3BC030, (uint64_t)&type metadata for CommandShareContentComplete, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3BC1D8 = result;
  return result;
}

void sub_1BA4AD288(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t static Commands.copyArticle.getter()
{
  if (qword_1ED3BC060 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1BA4AD30C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  __int128 v8;
  uint64_t result;
  __int128 v10;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 264);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_1BA4A42A0(a1), (v7 & 1) != 0))
    sub_1BB4CD274(*(_QWORD *)(v5 + 56) + 16 * v6, (uint64_t)&v10);
  else
    v10 = xmmword_1BB87FC90;
  swift_endAccess();
  v8 = v10;
  result = sub_1BB503AC0((uint64_t)&v10);
  if (v8 == __PAIR128__(1, 0))
  {
    *((_QWORD *)&v10 + 1) = a2;
    swift_unknownObjectWeakInit();
    swift_beginAccess();
    sub_1BA49BC50(&v10, a1);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1BA4AD3F0@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39E0);
  result = sub_1BB86DF48();
  if (v13)
  {
    v10 = a2(0);
    v11 = swift_allocObject();
    *(double *)(v11 + 16) = a5;
    result = sub_1BA4CECCC(&v12, v11 + 24);
    a4[3] = v10;
    a4[4] = a3;
    *a4 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FeedRefreshEvent.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t type metadata accessor for SocialLayerSharedItemCenter()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for GapView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LayeredMediaViewModelFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for GapOfflineView()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AD55C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86BEC0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4AD5D0()
{
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BB508, (uint64_t (*)(uint64_t))sub_1BA81DB7C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BA4AD63C()
{
  sub_1BA4AD698();
  return sub_1BB872D60();
}

unint64_t sub_1BA4AD698()
{
  unint64_t result;

  result = qword_1ED3B5D68;
  if (!qword_1ED3B5D68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupPriority, &type metadata for FormatGroupPriority);
    atomic_store(result, (unint64_t *)&qword_1ED3B5D68);
  }
  return result;
}

uint64_t type metadata accessor for LocationDetectionManager()
{
  return objc_opt_self();
}

uint64_t FeedCursorGroup.init(createdDate:group:configIdentifier:serviceConfig:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  _QWORD *v20;

  v15 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a8, a1, v15);
  v17 = (int *)type metadata accessor for FeedCursorGroup(0, a6, a7, v16);
  v18 = a8 + v17[9];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v18, a2, AssociatedTypeWitness);
  v20 = (_QWORD *)(a8 + v17[10]);
  *v20 = a3;
  v20[1] = a4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(a8 + v17[11], a5, a6);
}

uint64_t type metadata accessor for SportsDataServiceRequestFetcher()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AD858(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEC224;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA8268BC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA833044();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA4AD9BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B0530;
  if (!qword_1ED3B0530)
  {
    v1 = sub_1BB86C8B0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B0530);
  }
  return result;
}

uint64_t type metadata accessor for AdPresentationDelegateProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SharingPuzzleActivityTypeProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA4ADA44()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1BB871680();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86FAD8();
    if (v2 <= 0x3F)
    {
      result = sub_1BB870AC8();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1BA4ADB10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = a6;
  *(_BYTE *)(v6 + 88) = a4;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  *(_QWORD *)(v6 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1BA4ADB34()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB86EF08();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86EE78();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for LayeredMediaLayerProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1BA4ADBD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BB86C9E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86CAD8();
  __swift_allocate_value_buffer(v4, qword_1ED3B9000);
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED3B9000);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CB0EF8], v0);
  sub_1BB86C9F4();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t type metadata accessor for FeedContentPrefetchManager()
{
  return objc_opt_self();
}

uint64_t sub_1BA4ADCC0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB8721C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4ADD54(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF7A38;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA836E18();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA4ADE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  sub_1BA4ADF50();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4ADFA4(0, &qword_1ED3C4908, (uint64_t)&type metadata for LikingCommandContext, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DB6DD8]);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBC3F8], v6);
  result = sub_1BB871458();
  *a4 = result;
  return result;
}

void sub_1BA4ADF50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C49D0)
  {
    v0 = sub_1BB871434();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C49D0);
  }
}

void sub_1BA4ADFA4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4, MEMORY[0x1E0DBCA78]);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BA4ADFF8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LayoutAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AE09C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SwitchHiddenContentEffectRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AE130@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  _QWORD *v14;
  _BYTE v15[32];
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[32];

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs), sel_array));
  v4 = sub_1BB872DB4();

  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v14 = a2;
    v6 = v4 + 32;
    swift_bridgeObjectRetain();
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1BA747A10(v6, (uint64_t)v18);
      sub_1BA747A10((uint64_t)v18, (uint64_t)v15);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v16 = 0;
        v17 = 0;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      v9 = v17;
      if (v17)
      {
        v10 = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1BA6EA0D0(0, v7[2] + 1, 1, v7);
        v12 = v7[2];
        v11 = v7[3];
        if (v12 >= v11 >> 1)
          v7 = sub_1BA6EA0D0((_QWORD *)(v11 > 1), v12 + 1, 1, v7);
        v7[2] = v12 + 1;
        v8 = &v7[2 * v12];
        v8[4] = v10;
        v8[5] = v9;
      }
      v6 += 32;
      --v5;
    }
    while (v5);
    result = swift_bridgeObjectRelease_n();
    a2 = v14;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *a2 = v7;
  return result;
}

uint64_t type metadata accessor for FeedLayoutCache()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatImageProcessor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StubThumbnailProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AE328()
{
  sub_1BA4AE384();
  return sub_1BB872D60();
}

unint64_t sub_1BA4AE384()
{
  unint64_t result;

  result = qword_1ED3C9940;
  if (!qword_1ED3C9940)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87CDA4, &_s14descr1E7272991C8DateTimeO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C9940);
  }
  return result;
}

void sub_1BA4AE3C8()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3D51B0)
  {
    sub_1BB871F08();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530C0];
    sub_1BB871E6C();
    sub_1BA50AD30(&qword_1ED3D51C0, 255, v0, MEMORY[0x1E0D530B8]);
    v1 = sub_1BB871BA8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3D51B0);
  }
}

uint64_t sub_1BA4AE470()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for SportsDataService()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AE544@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97C0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for FormatMicaRenderer();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1E72EAE48;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4AE5D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1BB871680();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86FAD8();
    if (v2 <= 0x3F)
    {
      result = sub_1BB870AC8();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1BA4AE6C0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = sub_1BB86DF48();
  if (v2)
  {
    type metadata accessor for FormatProgressViewNodeRenderer();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v2;
    *(_QWORD *)(result + 24) = v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4AE750(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 648) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 656) = a1;
  return swift_task_switch();
}

uint64_t sub_1BA4AE7C4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4A5F40();
  result = sub_1BB86DF3C();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for FeedBannerAdFactory();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1E7331FE8;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4AE848(double a1)
{
  uint64_t v2;
  CFTimeInterval v3;
  uint64_t v4;
  double v6;

  sub_1BA7AA598();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  v3 = CACurrentMediaTime();
  v4 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v2 + 64) = v4;
  *(CFTimeInterval *)(v2 + 32) = (v3 - a1) * 1000.0;
  sub_1BB87330C();
  sub_1BB86EF44("Feed manager read and fetch time, %fms", v6);
  return swift_bridgeObjectRelease();
}

void sub_1BA4AE8F4()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3D2ED0)
  {
    sub_1BB871CB0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D52C40];
    sub_1BB871D94();
    sub_1BA50AD30(&qword_1ED3D2ED8, 255, v0, MEMORY[0x1E0D52C38]);
    v1 = sub_1BB871BA8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3D2ED0);
  }
}

uint64_t sub_1BA4AE99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for FeedCursorTrackerGroup(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v4 = sub_1BB872814();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D0], v4);
  v5 = sub_1BB872BF8();
  swift_bridgeObjectRelease();
  return v5;
}

void sub_1BA4AEA6C()
{
  __asm { BR              X10 }
}

id (*sub_1BA4AEAB4())(void *a1)
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  id (*result)(void *);
  uint64_t v4;

  if (!v1)
    return 0;
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v2 = sub_1BA72BED4(v4, v1);
  swift_bridgeObjectRelease();
  result = (id (*)(void *))swift_release();
  if (!v0)
  {
    *(double *)(swift_allocObject() + 16) = v2;
    return sub_1BAFD0988;
  }
  return result;
}

uint64_t sub_1BA4AF094()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for EngagementBannerViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for HiddenContentPlacardViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

void sub_1BA4AF14C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3D51C8)
  {
    sub_1BB871F08();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530C0];
    sub_1BB871E6C();
    sub_1BA4A2870(&qword_1ED3D51C0, v0, MEMORY[0x1E0D530B8]);
    v1 = sub_1BB87213C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3D51C8);
  }
}

uint64_t type metadata accessor for FormatIssueCoverNodeRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AF210()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86C67C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ServiceAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CoverIssueView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for IssueCoverViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AF30C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1BB86D7A4();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86D660();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for FeedLayoutSolverOptions(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for OfflineAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AF400()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA4AF488()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  result = type metadata accessor for FeedGroupEmitterOutput(319, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  if (v4 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_1BA4AF5CC(_QWORD *a1)
{
  char *result;
  char *v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, &qword_1ED3B9838);
  result = (char *)sub_1BB86DF3C();
  if (result)
  {
    v2 = result;
    v3 = objc_allocWithZone((Class)type metadata accessor for LikingCompleteCommandHandler());
    return sub_1BA4EE9F4(v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4AF648()
{
  sub_1BA4AF6A4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4AF6A4()
{
  unint64_t result;

  result = qword_1ED3A01E0;
  if (!qword_1ED3A01E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverTraits, &type metadata for FormatIssueCoverTraits);
    atomic_store(result, (unint64_t *)&qword_1ED3A01E0);
  }
  return result;
}

uint64_t sub_1BA4AF6E8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatVideoPlayerNodeStyle();
    sub_1BA4A2870(qword_1ED3A7CC0, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeStyle, (uint64_t)&protocol conformance descriptor for FormatVideoPlayerNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t type metadata accessor for PublisherLogoProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AF88C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + 1760);
  v1 = swift_bridgeObjectRetain();
  sub_1BA4AF900(v1);
  *(_QWORD *)(v0 + 1776) = v3;
  return swift_asyncLet_finish();
}

uint64_t sub_1BA4AF900(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA7B96C8);
}

uint64_t type metadata accessor for NSAttributedStringWarmupTask()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LayeredMediaImageVariantSelector()
{
  return objc_opt_self();
}

uint64_t sub_1BA4AF94C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceFetchResult<A>, a1);
  return sub_1BB86E308();
}

uint64_t FormatContent.Resolved.themes.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FormatAssetHandle(uint64_t a1)
{
  uint64_t result;

  result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (*(_QWORD *)(a1 + 64))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  return result;
}

uint64_t sub_1BA4AF9D8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[7];
  uint64_t v10;

  v0 = type metadata accessor for FormatTransformData();
  MEMORY[0x1E0C80A78]();
  v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)v9 - v3;
  __swift_allocate_value_buffer(v0, qword_1ED4768B8);
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4768B8);
  v6 = type metadata accessor for FeedPersonalizationClusteringRules();
  memset(v9, 0, sizeof(v9));
  v10 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_1BA82C56C((uint64_t)v9, (uint64_t)v2);
  v7 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)v2 + 15) = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)v2 + 16) = v7;
  sub_1BA82C530((uint64_t)v9, (unint64_t *)&qword_1ED3BE8A8);
  *((_QWORD *)v2 + 17) = v7;
  *((_WORD *)v2 + 72) = 0;
  sub_1BA839080((uint64_t)v4, (uint64_t)&v2[*(int *)(v0 + 40)]);
  return sub_1BA82DEDC((uint64_t)v2, v5);
}

uint64_t sub_1BA4AFB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0A80, (uint64_t (*)(uint64_t))sub_1BA78682C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4B07F0(0, &qword_1ED3B0AC0, (uint64_t (*)(uint64_t))sub_1BA78682C, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3AFC08 = result;
  return result;
}

BOOL FeedOfflineProviding.isOffline.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))() != 0;
}

uint64_t FormatFeedGroup.kindIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BA4AFC6C(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1BA66ED18(a1, a2, *(_QWORD *)(v3 + 24), v3 + 32, a3, *(double *)(v3 + 16));
}

uint64_t sub_1BA4AFC8C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73646E696BLL;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BA4AFCE0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4AFD14 + 4 * byte_1BB8AEE90[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA4AFD14()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA4AFD30()
{
  return 0x6C65537865676572;
}

uint64_t sub_1BA4AFD54()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1BA4AFD6C()
{
  return 1885433183;
}

uint64_t sub_1BA4AFD7C()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x6564496B636F6C62;
}

uint64_t sub_1BA4AFDBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4AFDF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4AFE24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4AFE58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4AFE8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4AFEC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4D787C(0, &qword_1ED3BBFE0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4D787C(0, &qword_1ED3BC058, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3C0988 = result;
  return result;
}

uint64_t sub_1BA4AFF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4AD288(0, &qword_1ED3B0A78, (uint64_t)&type metadata for FollowingNotificationContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B0AB0, (uint64_t)&type metadata for FollowingNotificationContext, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3B0AF8 = result;
  return result;
}

uint64_t sub_1BA4B0068(_QWORD *a1)
{
  return FormatColorAndExpression.encode(to:)(a1);
}

uint64_t initializeWithCopy for FormatImageNodeRequestAdjustment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BA527164(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t sub_1BA4B00DC(_QWORD *a1)
{
  return FormatContentSubgroup.ResolvedContainer.encode(to:)(a1);
}

uint64_t sub_1BA4B00F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BA4B8068(0, &qword_1ED3BBFB0, &qword_1ED3BE438, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4B8068(0, (unint64_t *)&unk_1ED3BC010, &qword_1ED3BE438, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1ED3BC140 = result;
  return result;
}

uint64_t sub_1BA4B01E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BA4B8068(0, &qword_1ED3BBFB0, &qword_1ED3BE438, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4B8068(0, (unint64_t *)&unk_1ED3BC010, &qword_1ED3BE438, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1ED3BC0C8 = result;
  return result;
}

uint64_t sub_1BA4B02D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BA4B8068(0, &qword_1ED3BBFB0, &qword_1ED3BE438, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4B8068(0, (unint64_t *)&unk_1ED3BC010, &qword_1ED3BE438, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1ED3BC098 = result;
  return result;
}

uint64_t sub_1BA4B03CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BA4B8068(0, &qword_1ED3BBFB0, &qword_1ED3BE438, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4B8068(0, (unint64_t *)&unk_1ED3BC010, &qword_1ED3BE438, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1ED3BC120 = result;
  return result;
}

uint64_t sub_1BA4B04C0()
{
  return sub_1BA4B04D8();
}

uint64_t sub_1BA4B04D8()
{
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B08C0, (uint64_t (*)(uint64_t))sub_1BA4E0A38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BA4B054C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39EE80, (uint64_t (*)(uint64_t))sub_1BA4B08A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4B07F0(0, &qword_1ED39EEA8, (uint64_t (*)(uint64_t))sub_1BA4B08A0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED39EFA8 = result;
  return result;
}

uint64_t sub_1BA4B0628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_1BA4B0848(0, &qword_1ED39EE78, a3, (uint64_t (*)(uint64_t))type metadata accessor for Commands.RemoveIssues.Prompt, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  sub_1BA4B0848(0, &qword_1ED39EEA0, v8, (uint64_t (*)(uint64_t))type metadata accessor for Commands.RemoveIssues.Prompt, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DBC3F8], v4);
  result = sub_1BB871458();
  qword_1ED39EF90 = result;
  return result;
}

uint64_t sub_1BA4B0704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  sub_1BA4B0848(0, (unint64_t *)&unk_1ED39EE80, 255, (uint64_t (*)(uint64_t))sub_1BA4B08A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  sub_1BA4B0848(0, &qword_1ED39EEA8, 255, (uint64_t (*)(uint64_t))sub_1BA4B08A0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBC3F8], v6);
  result = sub_1BB871458();
  *a4 = result;
  return result;
}

void sub_1BA4B07F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BA4B0848(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = a4(a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BA4B08A0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3BB4A0, (uint64_t (*)(uint64_t))sub_1BA4A3E50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t type metadata accessor for Commands.RemoveIssues.Prompt()
{
  return objc_opt_self();
}

uint64_t FeedCursorReference.__deallocating_deinit()
{
  sub_1BA4B0900();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4B0900()
{
  return swift_release();
}

uint64_t sub_1BA4B0910(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedBannerAdBlueprintModifier<A, B>, a1);
  return sub_1BB870408();
}

id sub_1BA4B0944@<X0>(_QWORD *a1@<X8>)
{
  id v3;

  if (qword_1ED3BBC78 != -1)
    swift_once();
  v3 = (id)qword_1ED3BE098;
  a1[3] = type metadata accessor for SharedItemManager();
  a1[4] = &protocol witness table for SharedItemManager;
  *a1 = v3;
  return v3;
}

uint64_t type metadata accessor for SharedItemManager()
{
  uint64_t result;

  result = qword_1ED3D0618;
  if (!qword_1ED3D0618)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA4B09F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_1BA4B0A68(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;

  v3[2] = a3;
  v3[3] = a1;
  v5 = (_QWORD *)swift_task_alloc();
  v3[4] = v5;
  *v5 = v3;
  v5[1] = sub_1BA4B09F4;
  v5[5] = a2;
  v6 = v3[2];
  v5[6] = *a2;
  v5[7] = v6;
  return swift_task_switch();
}

uint64_t sub_1BA4B0AD8()
{
  sub_1BA4B0B80();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4B0B24()
{
  sub_1BA4B0B80();
  return sub_1BB872D60();
}

unint64_t sub_1BA4B0B80()
{
  unint64_t result;

  result = qword_1ED3BE230;
  if (!qword_1ED3BE230)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FD748, &_s4TextO10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1ED3BE230);
  }
  return result;
}

uint64_t sub_1BA4B0BC4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4B0C2C()
{
  sub_1BA4B0CD4();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4B0C78()
{
  sub_1BA4B0CD4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4B0CD4()
{
  unint64_t result;

  result = qword_1ED3CD548;
  if (!qword_1ED3CD548)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6A90, &_s10CodingTypeON_120);
    atomic_store(result, (unint64_t *)&qword_1ED3CD548);
  }
  return result;
}

uint64_t type metadata accessor for FeedPrerollAdRequester()
{
  return objc_opt_self();
}

uint64_t sub_1BA4B0D38()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BA4B0D80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v5 = *(_QWORD **)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1BA4B0D38;
  return sub_1BA4B0A68(a1, v5, v4);
}

uint64_t type metadata accessor for WebEmbedManager()
{
  return objc_opt_self();
}

uint64_t sub_1BA4B0E04()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  char *v27;
  char *v28;
  void *v29;
  void *v30;
  void *v31;
  char *v32;
  void *v33;
  void *v34;
  const char *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  void *v49;
  const char *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  const char *v61;
  void *v62;
  void *v63;
  void *v64;
  char *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  const char *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;

  v13 = MEMORY[0x1E0DE9D48] + 64;
  v14 = MEMORY[0x1E0DE9D48] + 64;
  v15 = MEMORY[0x1E0DE9D48] + 64;
  v16 = " ";
  v17 = MEMORY[0x1E0DE9D48] + 64;
  v18 = &unk_1BB94DCB0;
  v19 = &unk_1BB94DCC8;
  v20 = &unk_1BB94DCE0;
  v21 = &unk_1BB94DCC8;
  v22 = MEMORY[0x1E0DE9D48] + 64;
  v23 = &unk_1BB94DCC8;
  v24 = &unk_1BB94DCF8;
  v25 = &unk_1BB94DD10;
  v26 = &unk_1BB94DD10;
  v0 = type metadata accessor for FormatCompilerProperty(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v27 = &v12;
    swift_getTupleTypeLayout2();
    v28 = &v11;
    v29 = &unk_1BB94DD28;
    v30 = &unk_1BB94DD40;
    v31 = &unk_1BB94DCC8;
    v0 = type metadata accessor for FormatEnumPropertyDefinition(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v32 = &v10;
      v33 = &unk_1BB94DCC8;
      v34 = &unk_1BB94DCF8;
      v35 = " ";
      v36 = &unk_1BB94DCF8;
      v37 = &unk_1BB94DD58;
      v38 = &unk_1BB94DCF8;
      v39 = &unk_1BB94DCF8;
      v40 = &unk_1BB94DCF8;
      v41 = &unk_1BB94DCF8;
      v42 = &unk_1BB94DCF8;
      v43 = &unk_1BB94DCF8;
      v44 = &unk_1BB94DD70;
      v45 = &unk_1BB94DD88;
      v46 = &unk_1BB94DCB0;
      v47 = " ";
      v3 = type metadata accessor for FormatOption();
      v0 = v3;
      if (v4 <= 0x3F)
      {
        v48 = *(_QWORD *)(v3 - 8) + 64;
        v49 = &unk_1BB94DCF8;
        v50 = " ";
        v51 = &unk_1BB94DCF8;
        v52 = &unk_1BB94DCF8;
        v53 = &unk_1BB94DCF8;
        v54 = &unk_1BB94DCF8;
        v55 = &unk_1BB94DCF8;
        v56 = &unk_1BB94DCF8;
        v57 = &unk_1BB94DCF8;
        v58 = &unk_1BB94DCF8;
        v59 = &unk_1BB94DCC8;
        v60 = &unk_1BB94DCC8;
        v61 = " ";
        v62 = &unk_1BB94DCF8;
        v63 = &unk_1BB94DDA0;
        v64 = &unk_1BB94DCF8;
        v0 = type metadata accessor for FeedCustomItem();
        if (v5 <= 0x3F)
        {
          v6 = type metadata accessor for FormatPropertyDefinition(319);
          if (v7 > 0x3F)
          {
            return v6;
          }
          else
          {
            swift_getTupleTypeLayout2();
            v65 = &v9;
            v66 = &unk_1BB94DCF8;
            v67 = &unk_1BB94DCF8;
            v68 = &unk_1BB94DCF8;
            v69 = &unk_1BB94DCC8;
            v70 = &unk_1BB94DCF8;
            v71 = &unk_1BB94DCF8;
            v72 = &unk_1BB94DCF8;
            v73 = " ";
            v74 = &unk_1BB94DDB8;
            v75 = &unk_1BB94DD58;
            v76 = &unk_1BB94DCC8;
            v77 = &unk_1BB94DCF8;
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return v0;
}

uint64_t sub_1BA4B1064()
{
  sub_1BA4B110C();
  return sub_1BB872D60();
}

uint64_t sub_1BA4B10C0()
{
  sub_1BA4B110C();
  return sub_1BB872D0C();
}

unint64_t sub_1BA4B110C()
{
  unint64_t result;

  result = qword_1ED3CC200;
  if (!qword_1ED3CC200)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B37D0, &_s10CodingTypeON_152);
    atomic_store(result, (unint64_t *)&qword_1ED3CC200);
  }
  return result;
}

uint64_t sub_1BA4B1150()
{
  sub_1BA4B11F8();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4B119C()
{
  sub_1BA4B11F8();
  return sub_1BB872D60();
}

unint64_t sub_1BA4B11F8()
{
  unint64_t result;

  result = qword_1ED3CA3A8;
  if (!qword_1ED3CA3A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897920, &_s3URLO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3CA3A8);
  }
  return result;
}

uint64_t type metadata accessor for FeedModelFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA4B125C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(sub_1BB871C80() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  return sub_1BA7EE7F0(a1, v1 + ((v4 + 16) & ~v4), v1 + ((*(_QWORD *)(v3 + 64) + v4 + ((v4 + 16) & ~v4)) & ~v4));
}

uint64_t sub_1BA4B12AC()
{
  sub_1BA4B1354();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4B12F8()
{
  sub_1BA4B1354();
  return sub_1BB872D60();
}

unint64_t sub_1BA4B1354()
{
  unint64_t result;

  result = qword_1ED3CAD28;
  if (!qword_1ED3CAD28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFDE8, &_s10CodingTypeON_28);
    atomic_store(result, (unint64_t *)&qword_1ED3CAD28);
  }
  return result;
}

uint64_t sub_1BA4B1398(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3CC4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA52D888();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3C85B8, (uint64_t (*)(void))sub_1BA829604, (uint64_t)&type metadata for FormatDecorationContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BA82E504();
    sub_1BB874464();
  }
  return swift_release();
}

void FormatTagBinding.Color.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD v44[18];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v44[14] = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v44[13] = (char *)v44 - v6;
  MEMORY[0x1E0C80A78](v7);
  v44[12] = (char *)v44 - v8;
  MEMORY[0x1E0C80A78](v9);
  v44[11] = (char *)v44 - v10;
  MEMORY[0x1E0C80A78](v11);
  v44[10] = (char *)v44 - v12;
  MEMORY[0x1E0C80A78](v13);
  v44[9] = (char *)v44 - v14;
  MEMORY[0x1E0C80A78](v15);
  v44[8] = (char *)v44 - v16;
  MEMORY[0x1E0C80A78](v17);
  v44[7] = (char *)v44 - v18;
  MEMORY[0x1E0C80A78](v19);
  v44[6] = (char *)v44 - v20;
  MEMORY[0x1E0C80A78](v21);
  v44[5] = (char *)v44 - v22;
  MEMORY[0x1E0C80A78](v23);
  v44[4] = (char *)v44 - v24;
  MEMORY[0x1E0C80A78](v25);
  v44[2] = (char *)v44 - v26;
  MEMORY[0x1E0C80A78](v27);
  v44[1] = (char *)v44 - v28;
  MEMORY[0x1E0C80A78](v29);
  v44[3] = (char *)v44 - v30;
  MEMORY[0x1E0C80A78](v31);
  v44[0] = (char *)v44 - v32;
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  MEMORY[0x1E0C80A78](v35);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v44 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = *v1;
  v40 = a1[3];
  v41 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v40);
  v42 = sub_1BA6B8518();
  v44[17] = v38;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTagBinding.Color, v43, v40, (uint64_t)&type metadata for FormatTagBinding.Color, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyC, v41, (uint64_t)v38, v42, (uint64_t)&off_1E734BC40);
  __asm { BR              X9 }
}

uint64_t sub_1BA4B1844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D70 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA4A5700(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatIssueBinding.IssueCover.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatIssueBinding.IssueCover, v11, v8, (uint64_t)&type metadata for FormatIssueBinding.IssueCover, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v9, (uint64_t)v7, v10, (uint64_t)&off_1E734BDC0);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476C08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v4, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA4A9C2C((uint64_t)v4);
  sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA4B2340(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD, char *), void (*a4)(uint64_t, char *))
{
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  void (*v28)(_QWORD, char *);
  void (*v29)(uint64_t, char *);

  v29 = a4;
  v28 = a3;
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - v11;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v4;
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BA6B8518();
  sub_1BA6EC1EC(a2, v20, v17, a2, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v18, (uint64_t)v15, v19, (uint64_t)&off_1E734BDC0);
  if ((v16 & 1) != 0)
  {
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v21 = sub_1BB86EB84();
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v9, v22, v21);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v29(1, v9);
    v23 = (uint64_t)v9;
  }
  else
  {
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v24 = sub_1BB86EB84();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v12, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v28(0, v12);
    v23 = (uint64_t)v12;
  }
  sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

void FormatBindingTextExpressionLogic.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v26[4] = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v26[3] = (char *)v26 - v6;
  MEMORY[0x1E0C80A78](v7);
  v26[2] = (char *)v26 - v8;
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v26[1] = (char *)v26 - v13;
  MEMORY[0x1E0C80A78](v14);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v1[1];
  v32 = *v1;
  v33 = v18;
  v19 = v1[2];
  v20 = v1[4];
  v28 = v1[3];
  v29 = v20;
  v30 = v1[5];
  v31 = v19;
  v21 = *((unsigned __int8 *)v1 + 50);
  v27 = *((unsigned __int16 *)v1 + 24) | (*((unsigned __int8 *)v1 + 50) << 16);
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = sub_1BA6B8518();
  v34 = v17;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingTextExpressionLogic, v25, v22, (uint64_t)&type metadata for FormatBindingTextExpressionLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v23, (uint64_t)v17, v24, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA4B27CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = qword_1ED3C2478;
  v3 = *(_QWORD *)(v1 - 152);
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v4 = sub_1BB86EB84();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v0, v5, v4);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v1 - 160);
  v7 = *(_QWORD *)(v1 - 72);
  sub_1BACE0BD8(2, v6, v3, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA6EF404(v6, v3, *(_QWORD *)(v1 - 168), *(_QWORD *)(v1 - 192), *(_QWORD *)(v1 - 184), *(_QWORD *)(v1 - 176), *(_DWORD *)(v1 - 196));
  return sub_1BA4A2E80(v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatIssueCoverContent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatIssueCoverContent, v16, v13, (uint64_t)&type metadata for FormatIssueCoverContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BDC0);
  if (v12 < 0)
  {
    v21 = *(_QWORD *)(v12 + 16);
    v22 = *(_QWORD *)(v12 + 24);
    v23 = qword_1ED3C6D58;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v23 != -1)
      swift_once();
    v24 = sub_1BB86EB84();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v5, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACE8B20(1, v21, v22, (uint64_t)v5);
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v17 = *(_BYTE *)(v12 + 16);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v18 = sub_1BB86EB84();
    v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, v19, v18);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A52AC(0, v17, (uint64_t)v8);
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
}

uint64_t FormatRoute.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v28 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v28 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatRoute, v19, v16, (uint64_t)&type metadata for FormatRoute, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v14, v18, (uint64_t)&off_1E734BD80);
  if (v15)
  {
    if (v15 == 1)
    {
      if (qword_1ED3C6D40 != -1)
        swift_once();
      v20 = sub_1BB86EB84();
      v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476BC0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA4ADD54(1, (uint64_t)v8);
      v22 = (uint64_t)v8;
    }
    else
    {
      if (qword_1ED3C6D70 != -1)
        swift_once();
      v25 = sub_1BB86EB84();
      v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v5, v26, v25);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA4ADD54(2, (uint64_t)v5);
      v22 = (uint64_t)v5;
    }
  }
  else
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v23 = sub_1BB86EB84();
    v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v11, v24, v23);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA4ADD54(0, (uint64_t)v11);
    v22 = (uint64_t)v11;
  }
  sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatFlexibleExpression.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE90300(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAE901F8();
  v13 = sub_1BA4A2870(&qword_1EF2B2D30, (uint64_t (*)(uint64_t))sub_1BAE901F8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatFlexibleExpression, v14, v10, (uint64_t)&type metadata for FormatFlexibleExpression, v12, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v15 = sub_1BB86EB84();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, v16, v15);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD478E0(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE90300);
}

uint64_t sub_1BA4B3560@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED39E310 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED39A4E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1BA4B35D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3A38B0 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3A3890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1BA4B3640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED39E300 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED39A4B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t FormatLayeredMediaRatio.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;

  v3 = v2;
  v25 = a2;
  sub_1BAEA13A8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA1420();
  sub_1BA4A2870(&qword_1ED3D1080, (uint64_t (*)(uint64_t))sub_1BAEA1420, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_BYTE *)v25;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v17 - 2);
      v19 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v13;
      MEMORY[0x1E0C80A78](v20);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_101;
      *(&v24 - 3) = sub_1BAEA14A0();
      *(&v24 - 2) = sub_1BA829240();
      *(&v24 - 1) = sub_1BAEA14E4();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71130((uint64_t)&unk_1E726CAE0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA8221D8();
  v26 = 0;
  v27 = 0;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA4B39B8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t result;

  v6 = a4 >> 1;
  v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v7)
    return MEMORY[0x1E0DEE9D8];
  if (v7 <= 0)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v6 != a3)
    {
LABEL_10:
      if (v7 < 0)
        goto LABEL_24;
      v17 = *(_QWORD *)(a6(0) - 8);
      v18 = (char *)v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      v19 = *(_QWORD *)(v17 + 72);
      v20 = a2 + v19 * a3;
      v21 = v19 * v7;
      v22 = &v18[v21];
      v23 = v20 + v21;
      if (v20 < (unint64_t)v22 && (unint64_t)v18 < v23)
        goto LABEL_24;
      swift_arrayInitWithCopy();
      return (uint64_t)v14;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1BA4B07F0(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = *(_QWORD *)(a6(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (v12)
  {
    if (v15 - v13 == 0x8000000000000000 && v12 == -1)
      goto LABEL_23;
    v14[2] = v7;
    v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
    if (v6 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA4B3B90()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1BA50CAA8(319, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  if (v0 <= 0x3F)
  {
    sub_1BA4CDF6C(319, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    if (v1 <= 0x3F)
    {
      sub_1BA68D5EC(319, (unint64_t *)&qword_1ED3CD600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      if (v2 <= 0x3F)
      {
        type metadata accessor for FormatCompilerEnumProperty(319);
        if (v3 <= 0x3F)
        {
          sub_1BA4CDF6C(319, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
          if (v4 <= 0x3F)
          {
            sub_1BA50CAA8(319, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
            if (v5 <= 0x3F)
            {
              sub_1BA50CAA8(319, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
              if (v6 <= 0x3F)
              {
                sub_1BA68D4C8(319, (unint64_t *)&qword_1ED3CD5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
                if (v7 <= 0x3F)
                {
                  sub_1BA4CDF6C(319, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
                  if (v8 <= 0x3F)
                  {
                    sub_1BA4CDF6C(319, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
                    if (v9 <= 0x3F)
                      swift_initEnumMetadataMultiPayload();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void FeedServiceContextType.shouldReadRootCursorFromDatabase(createdDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;

  v16 = a1;
  v5 = sub_1BB86BEC0();
  v14[0] = *(_QWORD *)(v5 - 8);
  v14[1] = v5;
  MEMORY[0x1E0C80A78](v5);
  v15 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v15);
  v6 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FeedServiceOptions(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(a3 + 8))(a2, a3, v10);
  sub_1BA4C2EB0((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v8);
  v13 = (char *)sub_1BA4B3F50 + 4 * byte_1BB8D67F5[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_1BA4B3F50()
{
  uint64_t v0;
  uint64_t v1;
  double *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;

  v4 = *v2;
  sub_1BB86C8A4();
  sub_1BB86C7F0();
  v6 = v5;
  (*(void (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v3 - 112));
  return v4 < v6;
}

uint64_t sub_1BA4B3FF0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t *v22;
  uint64_t (*v23)(uint64_t);
  _QWORD v24[2];
  uint64_t **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30[3];
  _OWORD v31[6];
  unsigned __int8 v32;

  v25 = a3;
  v24[1] = a2;
  v4 = *a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v24 - v9;
  v11 = *(_QWORD *)(v4 + 80);
  v27 = sub_1BB873A2C();
  v12 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v14 = (char *)v24 - v13;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))((char *)v24 - v13, 1, 1, v11);
  v32 = 7;
  v16 = sub_1BB86C8B0();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  memset(v31, 0, 80);
  memset(v30, 0, sizeof(v30));
  v28 = 0;
  v29 = 256;
  v18 = v26;
  sub_1BA83B518(v15);
  if (v18)
  {
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED3B0540, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v27);
  }
  else
  {
    v21 = swift_retain();
    v22 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, (uint64_t)v14, 0, &v32, (uint64_t)v10, (uint64_t)v8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
            0,
            0,
            (uint64_t)v31,
            v30,
            (uint64_t)&v28,
            0,
            0,
            v21);
    swift_release();
    v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED3B0540, v23);
    result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v27);
    *v25 = v22;
  }
  return result;
}

uint64_t *sub_1BA4B42A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[5];
  unsigned __int8 v33;

  v10 = *a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v27 - v15;
  v17 = *(_QWORD *)(v10 + 80);
  v18 = sub_1BB873A2C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v27 - v20;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))((char *)&v27 - v20, 1, 1, v17);
  v33 = a8;
  v22 = sub_1BB86C8B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v16, 1, 1, v22);
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  v23 = *(_QWORD *)(a3 + 40);
  memset(v32, 0, sizeof(v32));
  v31 = 0;
  v30 = 0u;
  v28 = 0;
  v29 = 256;
  v24 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, (uint64_t)v21, 0, &v33, (uint64_t)v16, (uint64_t)v14, 0, 0, 0, 0, 0, 0, 0, 1, v23, 0, 0, 1,
          0,
          0,
          (uint64_t)v32,
          (uint64_t *)&v30,
          (uint64_t)&v28,
          *(_QWORD *)(a3 + 16),
          0,
          0);
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BA5C699C((uint64_t)v14, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BA5C699C((uint64_t)v16, (unint64_t *)&qword_1ED3B0540, v25);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  return v24;
}

uint64_t sub_1BA4B44D8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatFontMetricAdjustment.init(from:)(a1, a2);
}

uint64_t FormatFontMetricAdjustment.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA58F344, (uint64_t)&_s10CodingTypeON_169, (uint64_t)&unk_1E7250568, a2);
}

uint64_t sub_1BA4B4518@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatFontMetric.init(from:)(a1, a2);
}

uint64_t FormatFontMetric.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA58F3CC, (uint64_t)&_s10CodingTypeON_170, (uint64_t)&unk_1E7250518, a2);
}

uint64_t sub_1BA4B4558@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatIssueBinding.Image.init(from:)(a1, a2);
}

uint64_t FormatIssueBinding.Image.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA58F388, (uint64_t)&_s5ImageO10CodingTypeON, (uint64_t)&unk_1E726C770, a2);
}

uint64_t sub_1BA4B4598@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4B45C4();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4B45C4()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1BA4B460C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4B4638();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4B4638()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12)
    return 18;
  else
    return v0;
}

uint64_t sub_1BA4B4688(_QWORD *a1)
{
  return FormatRepeatNode.encode(to:)(a1);
}

uint64_t sub_1BA4B46A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroup.Resolved.init(from:)(a1, a2);
}

uint64_t sub_1BA4B46BC(_QWORD *a1)
{
  return sub_1BA7B6C88(a1);
}

uint64_t sub_1BA4B46D0(_QWORD *a1)
{
  return FormatOptionsNode.encode(to:)(a1);
}

uint64_t FeedPluginManager.add<A>(factory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, _OWORD *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = (uint64_t *)(*v3 + class metadata base offset for FeedPluginManager);
  v8 = *v7;
  v9 = v7[2];
  type metadata accessor for FeedPluginManager.FactoryWrapper(0, *v7, v7[1], v9);
  v10 = sub_1BA83CAB8(a1, v8, a2, a3, v9);
  v12 = v11;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = v12;
  swift_beginAccess();
  sub_1BB872EE0();
  swift_retain();
  sub_1BB872EB0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BA4B47F0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86C8B0();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t *FeedManager.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *v0;
  swift_release();
  swift_release();
  v2 = (void *)v0[6];

  swift_bridgeObjectRelease();
  v3 = (uint64_t)v0 + *(_QWORD *)(*v0 + 152);
  v4 = sub_1BB873A2C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5((uint64_t)v0 + *(_QWORD *)(*v0 + 160), v4);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 168));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 176));
  swift_release();
  return v0;
}

uint64_t sub_1BA4B4978()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char *v5;
  char *v6;
  uint64_t v7;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    v2 = MEMORY[0x1E0DE9D48] + 64;
    swift_getTupleTypeLayout2();
    v5 = &v4;
    swift_getTupleTypeLayout2();
    v6 = &v3;
    v7 = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *initializeWithCopy for FormatTextNodeAlternative(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BA4B4AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for FormatStringSelector();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  result = sub_1BB86DD50();
  *(_QWORD *)(v1 + 24) = result;
  qword_1ED4768D0 = v1;
  return result;
}

uint64_t sub_1BA4B4B84()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v0 = sub_1BB86D36C();
  v14 = *(_QWORD *)(v0 - 8);
  v15 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BB86D378();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1BB86D234();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAC6F32C(0, (unint64_t *)&unk_1ED3D4B38, v11, &qword_1ED3D4B30, MEMORY[0x1E0DB54F0]);
  sub_1BB8729A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB54D8], v7);
  *v6 = sub_1BB8729A0();
  v6[1] = v12;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB57F8], v3);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v2, *MEMORY[0x1E0DB57E8], v15);
  result = sub_1BB86D3B4();
  qword_1ED3A33A0 = result;
  return result;
}

uint64_t sub_1BA4B4D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  v0 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for FormatBundleCache();
  v1 = swift_allocObject();
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  result = sub_1BB86DD50();
  v3 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v1 + 16) = result;
  *(_QWORD *)(v1 + 24) = v3;
  qword_1ED476968 = v1;
  return result;
}

uint64_t FormatLayeredMediaNode.init(identifier:content:style:animation:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11, uint64_t *a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v19 = *a3;
  v20 = *a6;
  v21 = *a7;
  v23 = *a10;
  v25 = *a12;
  v24 = *((_BYTE *)a12 + 8);
  swift_beginAccess();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  *(_QWORD *)(v13 + 32) = v19;
  *(_QWORD *)(v13 + 40) = a4;
  *(_QWORD *)(v13 + 48) = a5;
  *(_QWORD *)(v13 + 56) = v20;
  *(_QWORD *)(v13 + 64) = v21;
  swift_beginAccess();
  *(_QWORD *)(v13 + 72) = a8;
  swift_beginAccess();
  *(_QWORD *)(v13 + 80) = a9;
  swift_beginAccess();
  *(_QWORD *)(v13 + 88) = v23;
  swift_beginAccess();
  *(_BYTE *)(v13 + 96) = a11;
  *(_QWORD *)(v13 + 104) = v25;
  *(_BYTE *)(v13 + 112) = v24;
  swift_beginAccess();
  *(_QWORD *)(v13 + 120) = a13;
  return v13;
}

uint64_t sub_1BA4B4F30()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
    return swift_initClassMetadata2();
  return result;
}

uint64_t sub_1BA4B4FEC()
{
  return swift_initClassMetadata2();
}

uint64_t static FeedLocation.topOfFeed(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v18 - v9;
  type metadata accessor for FeedCursorTracker(255, a2, a3, v11);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = swift_allocBox();
  v15 = v14;
  v16 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v14, a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  result = FeedCursorTracker.__allocating_init(context:)((uint64_t)v10);
  *(_QWORD *)(v15 + v16) = result;
  *a4 = v13;
  return result;
}

uint64_t PuzzleStatsState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v19 = a2;
  v20 = sub_1BB86C8B0();
  v18 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5D29A4(0, &qword_1ED3A30F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v22 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = type metadata accessor for PuzzleStatsState();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA5D2960();
  v9 = v23;
  sub_1BB87468C();
  if (v9)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v10 = v5;
  v11 = v21;
  LOBYTE(v25) = 0;
  v12 = (uint64_t)v8;
  *v8 = sub_1BB874098();
  v8[1] = v13;
  sub_1BA5D28FC();
  v24 = 1;
  sub_1BA5D2A00((unint64_t *)&unk_1ED3A2E30, (uint64_t (*)(void))sub_1BA833664, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  sub_1BB8740D4();
  v8[2] = v25;
  sub_1BA5D2AE8();
  v24 = 2;
  sub_1BA81E4FC();
  sub_1BB8740D4();
  v8[3] = v25;
  LOBYTE(v25) = 3;
  sub_1BA629A0C(&qword_1ED3B0528, MEMORY[0x1E0CB08C0]);
  v14 = v11;
  v15 = v20;
  sub_1BB8740D4();
  (*(void (**)(_QWORD, uint64_t))(v10 + 8))(0, v22);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v12 + *(int *)(v6 + 28), v14, v15);
  sub_1BA831F94(v12, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BA4A2E80(v12, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatsState);
}

uint64_t sub_1BA4B552C()
{
  uint64_t v0;

  v0 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v0);
  sub_1BB873DA4();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v0);
  if ((sub_1BB873168() & 1) != 0)
    return swift_bridgeObjectRelease();
  sub_1BB872814();
  return sub_1BB872838();
}

uint64_t _s11TeaSettings0B0C8NewsFeedE7PuzzlesV18BadgeCountOverrideC3key12defaultValue6accessAHSSSg_SbAA6AccessOtcfC_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1BB86D36C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  v9 = sub_1BB86D24C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

void sub_1BA4B5700(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  unint64_t i;
  unint64_t v23;
  id v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v5 = a5;
  v7 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v33 = v7 - 1;
  v8 = a5[1];
  if (*a5 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v8 == v9)
      goto LABEL_3;
  }
  else if (v8 == *(_QWORD *)((*a5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_retain();
    sub_1BB73E0B4(a1, a2, v33, a3);
    return;
  }
  v35 = a3 + 56;
  v34 = v5;
  while (1)
  {
    v10 = *v5;
    v11 = v5[1];
    if ((*v5 & 0xC000000000000001) != 0)
    {
      v12 = (id)MEMORY[0x1BCCE4630](v5[1]);
      v29 = v5[1];
      v13 = v29 + 1;
      if (__OFADD__(v29, 1))
        goto LABEL_33;
      goto LABEL_10;
    }
    if ((v11 & 0x8000000000000000) != 0)
      break;
    if (v11 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_32;
    v12 = *(id *)(v10 + 8 * v11 + 32);
    v13 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_33;
LABEL_10:
    v5[1] = v13;
    v14 = sub_1BB8738AC();
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    v18 = 1 << v16;
    if (((1 << v16) & *(_QWORD *)(v35 + 8 * (v16 >> 6))) == 0)
      goto LABEL_17;
    sub_1BA57FDCC();
    v19 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v16);
    v20 = sub_1BB8738B8();

    if ((v20 & 1) == 0)
    {
      v21 = ~v15;
      for (i = v16 + 1; ; i = v23 + 1)
      {
        v23 = i & v21;
        if (((*(_QWORD *)(v35 + (((i & v21) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v21)) & 1) == 0)
          break;
        v24 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v23);
        v25 = sub_1BB8738B8();

        if ((v25 & 1) != 0)
        {

          v17 = v23 >> 6;
          v18 = 1 << v23;
          goto LABEL_19;
        }
      }
LABEL_17:

      v5 = v34;
      goto LABEL_22;
    }

LABEL_19:
    v26 = a1[v17];
    a1[v17] = v26 & ~v18;
    v5 = v34;
    if ((v18 & v26) != 0)
    {
      v27 = v33 - 1;
      if (__OFSUB__(v33, 1))
        goto LABEL_34;
      --v33;
      if (!v27)
        return;
    }
LABEL_22:
    v28 = v5[1];
    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v30 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v28 == v30)
        goto LABEL_3;
    }
    else if (v28 == *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t FeedModifierStore.applyPendingModifiers<A, B>(to:)()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;

  swift_retain();
  v0 = sub_1BB86E788();
  result = swift_release();
  v2 = 0;
  v11 = v0 + 64;
  v3 = 1 << *(_BYTE *)(v0 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v0 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v8 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v6)
      return swift_release();
    v9 = *(_QWORD *)(v11 + 8 * v8);
    ++v2;
    if (!v9)
    {
      v2 = v8 + 1;
      if (v8 + 1 >= v6)
        return swift_release();
      v9 = *(_QWORD *)(v11 + 8 * v2);
      if (!v9)
        break;
    }
LABEL_18:
    v5 = (v9 - 1) & v9;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_retain();
    v7 = sub_1BB86FE98();
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB8030], v7);
    sub_1BB86FEC8();
    swift_retain();
    sub_1BB86E7DC();
    swift_release();
    result = swift_release();
  }
  v10 = v8 + 2;
  if (v10 >= v6)
    return swift_release();
  v9 = *(_QWORD *)(v11 + 8 * v10);
  if (v9)
  {
    v2 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    v2 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v2 >= v6)
      return swift_release();
    v9 = *(_QWORD *)(v11 + 8 * v2);
    ++v10;
    if (v9)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1BA4B5BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  char **v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  double v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  _QWORD *v26;
  id v27;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  _QWORD aBlock[6];

  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_1BA4A07E0(v1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 24) = v2;
  swift_bridgeObjectRelease();
  v3 = (_QWORD *)(v0 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v0 + 16);
  v45 = v0;
  v46 = v4 + 64;
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v4 + 64);
  v47 = (unint64_t)(v5 + 63) >> 6;
  v43 = *MEMORY[0x1E0C99860];
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = &selRef_initWithAssetHandles_;
  v44 = v4;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_23;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_37;
    if (v15 >= v47)
      return swift_release();
    v16 = *(_QWORD *)(v46 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v47)
        return swift_release();
      v16 = *(_QWORD *)(v46 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v47)
          return swift_release();
        v16 = *(_QWORD *)(v46 + 8 * v8);
        if (!v16)
          break;
      }
    }
LABEL_22:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_23:
    v18 = 8 * v14;
    v19 = *(double *)(*(_QWORD *)(v4 + 48) + v18);
    v20 = *(id *)(*(_QWORD *)(v4 + 56) + v18);
    if ((objc_msgSend(v20, v9[260]) & 1) == 0)
    {
      v21 = swift_allocObject();
      swift_weakInit();
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v21;
      *(double *)(v22 + 24) = v19;
      aBlock[4] = sub_1BB5BEC98;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BA573874;
      aBlock[3] = &block_descriptor_86;
      v23 = _Block_copy(aBlock);
      v24 = (void *)objc_opt_self();
      swift_retain();
      v25 = objc_msgSend(v24, sel_timerWithTimeInterval_repeats_block_, 1, v23, v19);
      _Block_release(v23);
      swift_release();
      swift_release();
      v26 = v3;
      swift_beginAccess();
      v27 = v25;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v29 = *(_QWORD **)(v45 + 16);
      *(_QWORD *)(v45 + 16) = 0x8000000000000000;
      v31 = sub_1BA67BEE0(v19);
      v32 = v29[2];
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v35 = v30;
      if (v29[3] < v34)
      {
        sub_1BA49C158(v34, isUniquelyReferenced_nonNull_native);
        v36 = sub_1BA67BEE0(v19);
        if ((v35 & 1) != (v37 & 1))
          goto LABEL_40;
        v31 = v36;
        if ((v35 & 1) == 0)
          goto LABEL_31;
LABEL_4:
        v10 = v29[7];
        v11 = 8 * v31;

        *(_QWORD *)(v10 + v11) = v27;
LABEL_5:
        v3 = v26;
        *v26 = v29;
        swift_bridgeObjectRelease();
        swift_endAccess();
        v12 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop);
        objc_msgSend(v12, sel_addTimer_forMode_, v27, v43);

        v4 = v44;
        v9 = &selRef_initWithAssetHandles_;
        goto LABEL_6;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v30 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BB4C66BC();
        if ((v35 & 1) != 0)
          goto LABEL_4;
      }
LABEL_31:
      v29[(v31 >> 6) + 8] |= 1 << v31;
      v38 = 8 * v31;
      *(double *)(v29[6] + v38) = v19;
      *(_QWORD *)(v29[7] + v38) = v27;
      v39 = v29[2];
      v40 = __OFADD__(v39, 1);
      v41 = v39 + 1;
      if (v40)
        goto LABEL_38;
      v29[2] = v41;
      goto LABEL_5;
    }
LABEL_6:

  }
  v17 = v15 + 3;
  if (v17 >= v47)
    return swift_release();
  v16 = *(_QWORD *)(v46 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v47)
      return swift_release();
    v16 = *(_QWORD *)(v46 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t *sub_1BA4B6034(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;

  v5 = v4;
  v10 = *v5;
  v11 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v11);
  v12 = a1[3];
  *((_OWORD *)v5 + 3) = a1[2];
  *((_OWORD *)v5 + 4) = v12;
  v13 = a1[5];
  *((_OWORD *)v5 + 5) = a1[4];
  *((_OWORD *)v5 + 6) = v13;
  v14 = a1[1];
  *((_OWORD *)v5 + 1) = *a1;
  *((_OWORD *)v5 + 2) = v14;
  v5[14] = a2;
  v15 = *(_QWORD *)(v10 + 80);
  sub_1BB86EAAC();
  sub_1BB86E74C();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = *(_QWORD *)(v10 + 88);
  v16[4] = a3;
  v16[5] = a4;
  sub_1BA4C9ACC((uint64_t)a1);
  swift_retain();
  sub_1BA5D1A70();
  v5[15] = sub_1BB86E734();
  return v5;
}

id sportsOnboardingState(userInfo:)(void *a1)
{
  id v2;
  unsigned int v3;

  if (objc_msgSend(a1, sel_sportsSyncState) == (id)2
    && (v2 = objc_msgSend((id)objc_opt_self(), sel_sharedAccount),
        v3 = objc_msgSend(v2, sel_isUserSignedInToiCloud),
        v2,
        v3))
  {
    return objc_msgSend(a1, sel_sportsOnboardingState);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1BA4B6260(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, unsigned __int8 a18)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA796C70(a8, a9, a10);
    sub_1BA825F5C(a11, a12, a13, a14, a15);
    return sub_1BA796C70(a16, a17, a18);
  }
  return result;
}

uint64_t initializeWithCopy for FormatAnimationNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA4B63B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_1BB8745CC();
  if (v2 == 1 || v2 == 2 || v2 == 3)
  {
    sub_1BB8745D8();
  }
  else
  {
    sub_1BB8745D8();
    sub_1BB8745E4();
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      sub_1BA6DB13C(v1, v2);
    }
  }
  return sub_1BB874608();
}

uint64_t FormatStateViewNode.init(identifier:size:resize:adjustments:stateMachineName:states:zIndex:visibility:isUserInteractionEnabled:animation:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v20 = *a3;
  v21 = *a4;
  v23 = *a10;
  swift_beginAccess();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  swift_beginAccess();
  *(_QWORD *)(v13 + 32) = v20;
  *(_QWORD *)(v13 + 40) = v21;
  swift_beginAccess();
  *(_QWORD *)(v13 + 48) = a5;
  *(_QWORD *)(v13 + 56) = a6;
  *(_QWORD *)(v13 + 64) = a7;
  *(_QWORD *)(v13 + 72) = a8;
  swift_beginAccess();
  *(_QWORD *)(v13 + 80) = a9;
  swift_beginAccess();
  *(_QWORD *)(v13 + 88) = v23;
  swift_beginAccess();
  *(_BYTE *)(v13 + 96) = a11;
  *(_QWORD *)(v13 + 104) = a12;
  swift_beginAccess();
  *(_QWORD *)(v13 + 112) = a13;
  return v13;
}

uint64_t sub_1BA4B65BC()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t TupleTypeMetadata2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult(255, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  sub_1BB86EAAC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v4 = sub_1BB873A2C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))((char *)&v10 - v7, 1, 1, TupleTypeMetadata2, v6);
  sub_1BA59B108((uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1BA4B6700(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  _BYTE v24[16];
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[4];

  sub_1BA82148C(0);
  v9 = v8;
  v10 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v10;
  v12 = v10[1];
  v13 = swift_allocObject();
  v14 = a2 & 1;
  *(_BYTE *)(v13 + 16) = a2 & 1;
  *(_QWORD *)(v13 + 24) = v11;
  *(_QWORD *)(v13 + 32) = v12;
  sub_1BA4CDF6C(0, &qword_1ED3A09B0, (uint64_t (*)(void))sub_1BA4C783C, (uint64_t)&type metadata for FormatCountLimit.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BA81BDC0();
  swift_retain();
  v15 = sub_1BB87444C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = v14;
  sub_1BA4C010C(v4 + *(int *)(v9 + 36), (uint64_t)v27);
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  v25 = sub_1BAEE4AD0;
  v26 = v16;
  v20 = a3;
  v21 = a4;
  v22 = sub_1BAEE4AB4;
  v23 = v13;
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v24, (uint64_t)sub_1BAEFCC08, (uint64_t)v19);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v11 & 1;
}

uint64_t sub_1BA4B6894()
{
  sub_1BA4B68F0();
  return sub_1BB872D60();
}

unint64_t sub_1BA4B68F0()
{
  unint64_t result;

  result = qword_1ED3CB8F8;
  if (!qword_1ED3CB8F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1498, &_s10CodingTypeON_169);
    atomic_store(result, (unint64_t *)&qword_1ED3CB8F8);
  }
  return result;
}

uint64_t *sub_1BA4B6934(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = v2;
  v6 = *v3;
  v7 = (char *)v3 + qword_1ED476428;
  v8 = sub_1BB86C8B0();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  *(uint64_t *)((char *)v3 + qword_1ED476430) = a2;
  type metadata accessor for FeedCursorManifestGroupEntry(255, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), v10);
  v11 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  sub_1BB87273C();
  sub_1BB872814();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v11);
  sub_1BB872C40();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  *(uint64_t *)((char *)v3 + qword_1ED476438) = v13;
  return v3;
}

void sub_1BA4B6A90(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  swift_beginAccess();
  *(_QWORD *)(v2 + 40) = a2;
  v5 = swift_unknownObjectWeakAssign();
  v6 = *(_QWORD *)(v2 + 184);
  v7 = (void *)MEMORY[0x1BCCE5D40](v5);
  v8 = *(_QWORD *)(v2 + 40);
  swift_beginAccess();
  *(_QWORD *)(v6 + 24) = v8;
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1BA4B6C08()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for FeedGap(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void FeedModeState.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA4B6C7C()
{
  _QWORD *v0;

  sub_1BB872AFC((_QWORD *)0x656E696C66666FLL);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v0);
  return 0x2064657269736564;
}

uint64_t sub_1BA4B6D98(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v18 = sub_1BB86C8E0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = 0;
  if ((a1 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BB86C8D4();
    v23 = sub_1BB86C8C8();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    type metadata accessor for FormatGroupNodeMaskLayoutAttributes();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a2;
    *(_QWORD *)(v22 + 24) = a3;
    *(_QWORD *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = v25;
    *(double *)(v22 + 48) = a6;
    *(double *)(v22 + 56) = a7;
    *(double *)(v22 + 64) = a8;
    *(double *)(v22 + 72) = a9;
    *(_QWORD *)(v22 + 80) = a4;
    *(_QWORD *)(v22 + 88) = a5;
    swift_retain();
    swift_retain();
  }
  return v22;
}

uint64_t type metadata accessor for FeedScalingManager()
{
  return objc_opt_self();
}

uint64_t sub_1BA4B6ED4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatOptionBindingModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA4B6F7C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86C8B0();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_1BA4B70D0()
{
  return swift_initClassMetadata2();
}

uint64_t initializeWithCopy for FeedEdition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t FeedPluginManagerResult.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4B71C4()
{
  sub_1BA4B7220();
  return sub_1BB872D60();
}

unint64_t sub_1BA4B7220()
{
  unint64_t result;

  result = qword_1ED3C7450;
  if (!qword_1ED3C7450)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B13D0, &_s10CodingTypeON_170);
    atomic_store(result, (unint64_t *)&qword_1ED3C7450);
  }
  return result;
}

uint64_t sub_1BA4B7264(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();

  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

id sub_1BA4B72EC(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_1BA4B7324@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BA4B7374()
{
  sub_1BA4B73D0();
  return sub_1BB872D60();
}

unint64_t sub_1BA4B73D0()
{
  unint64_t result;

  result = qword_1ED3BE8B0;
  if (!qword_1ED3BE8B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnderlineStyle, &type metadata for FormatUnderlineStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3BE8B0);
  }
  return result;
}

void FeedScoringContext.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA4B7460()
{
  _QWORD *v0;
  _QWORD *v1;

  FeedHeadlineScoringContext.description.getter();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  return 0x656E696C64616548;
}

uint64_t sub_1BA4B7628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a2;
  v4 = swift_unknownObjectWeakAssign();
  v5 = *(_QWORD *)(*(_QWORD *)(v2 + 184) + 56);
  MEMORY[0x1BCCE5D40](v4);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(v2 + 32);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t destroy for FormatLayoutContext()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4B76F4()
{
  sub_1BA4B7750();
  return sub_1BB872D60();
}

unint64_t sub_1BA4B7750()
{
  unint64_t result;

  result = qword_1ED39CBC8;
  if (!qword_1ED39CBC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLineCap, &type metadata for FormatLineCap);
    atomic_store(result, (unint64_t *)&qword_1ED39CBC8);
  }
  return result;
}

uint64_t sub_1BA4B7794(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, unsigned __int8 a18)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA796C58(a8, a9, a10);
    sub_1BA825F44(a11, a12, a13, a14, a15);
    return sub_1BA796C58(a16, a17, a18);
  }
  return result;
}

uint64_t sub_1BA4B788C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, _OWORD *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  v8 = (_QWORD *)*v4;
  sub_1BB86DEE8();
  v9 = v8[10];
  v10 = v8[12];
  type metadata accessor for FormatFeedPluginFactory.FactoryWrapper(0, v9, v8[11], v10);
  v11 = sub_1BA83E4D4(a1, v9, a2, a3, v10);
  v13 = v12;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)(v14 + 24) = v13;
  swift_beginAccess();
  sub_1BB872814();
  sub_1BB872838();
  return swift_endAccess();
}

uint64_t sub_1BA4B7998()
{
  sub_1BA4B79F4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4B79F4()
{
  unint64_t result;

  result = qword_1ED39C5C8;
  if (!qword_1ED39C5C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9114B0, &type metadata for FeedGroupFreezing.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39C5C8);
  }
  return result;
}

uint64_t _s8NewsFeed8FeedItemO4KindOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BA4B7A80()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4B7AB8 + 4 * byte_1BB8AF277[*v0]))(0x746E6F436F676F6CLL, 0xEB00000000746E65);
}

uint64_t sub_1BA4B7AB8()
{
  return 0x657A69536F676F6CLL;
}

uint64_t sub_1BA4B7AD0()
{
  return 0x6C7974536F676F6CLL;
}

uint64_t sub_1BA4B7AEC()
{
  return 0x697365526F676F6CLL;
}

uint64_t sub_1BA4B7B08()
{
  return 0x61727544776F6873;
}

uint64_t sub_1BA4B7B28()
{
  return 1885433183;
}

uint64_t sub_1BA4B7B38()
{
  char *v0;

  return *(_QWORD *)&aSize_55[8 * *v0];
}

uint64_t sub_1BA4B7B50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4B7B80 + 4 * byte_1BB8AF03C[*v0]))(0x726F7463656C6573, 0xE800000000000000);
}

uint64_t sub_1BA4B7B80()
{
  return 0x426F547370696C63;
}

uint64_t sub_1BA4B7BA4()
{
  return 7235952;
}

uint64_t sub_1BA4B7BB4()
{
  return 0x6162726562627572;
}

uint64_t sub_1BA4B7BD0()
{
  return 1885433183;
}

uint64_t sub_1BA4B7BE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4B7C14(_QWORD *a1)
{
  return FormatEdgeInsetsEquation.encode(to:)(a1);
}

uint64_t sub_1BA4B7C28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4B7C5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4B7C90(_QWORD *a1)
{
  return FormatContentSlot.Resolved.encode(to:)(a1);
}

uint64_t sub_1BA4B7CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BA4B8068(0, &qword_1ED3BBFB0, &qword_1ED3BE438, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4B8068(0, (unint64_t *)&unk_1ED3BC010, &qword_1ED3BE438, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1ED3BC160 = result;
  return result;
}

uint64_t sub_1BA4B7D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEB070];
  sub_1BA4B8068(0, (unint64_t *)&unk_1ED3BBF98, (unint64_t *)&unk_1ED3BE420, MEMORY[0x1E0DEB070], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4B8068(0, &qword_1ED3BBFF8, (unint64_t *)&unk_1ED3BE420, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1ED3BC0B0 = result;
  return result;
}

uint64_t sub_1BA4B7E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEB070];
  sub_1BA4B8068(0, (unint64_t *)&unk_1ED3BBF98, (unint64_t *)&unk_1ED3BE420, MEMORY[0x1E0DEB070], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4B8068(0, &qword_1ED3BBFF8, (unint64_t *)&unk_1ED3BE420, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1ED3BC108 = result;
  return result;
}

uint64_t sub_1BA4B7F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEB070];
  sub_1BA4B8068(0, (unint64_t *)&unk_1ED3BBF98, (unint64_t *)&unk_1ED3BE420, MEMORY[0x1E0DEB070], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1BA4B8068(0, &qword_1ED3BBFF8, (unint64_t *)&unk_1ED3BE420, v0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1BB871458();
  qword_1ED3BC178 = result;
  return result;
}

void sub_1BA4B8068(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BA4AD288(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for AudioCommandContext);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BA4B80D4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatWebEmbedBinding.Bool.init(from:)(a1, a2);
}

uint64_t FormatWebEmbedBinding.Bool.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FD894, (uint64_t)&type metadata for FormatWebEmbedBinding.Bool.CodingType, (uint64_t)&unk_1E726F658, a2);
}

uint64_t sub_1BA4B8114(uint64_t a1)
{
  return sub_1BA4B8128(a1);
}

uint64_t sub_1BA4B8128(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA7BDD9C(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1BA4B8148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4B8160(a1, a2);
}

uint64_t sub_1BA4B8160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1BB873A2C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)v13 - v8, a1, v5, v7);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v9, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_1BB2ED7F8();
  swift_allocError();
  *(_QWORD *)v11 = 0;
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 5;
  return swift_willThrow();
}

void sub_1BA4B8294()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for PuzzleStatisticValue(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for PuzzleStatisticDifficultyLevelValue(319);
    if (v1 <= 0x3F)
    {
      sub_1BA4B07F0(319, (unint64_t *)&unk_1ED3C4390, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
      {
        type metadata accessor for PuzzleStatisticsGroupedValue(319);
        if (v3 <= 0x3F)
          swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

uint64_t sub_1BA4B8364(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA4B8398@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAE77CDC();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4B83CC(_QWORD *a1)
{
  return FormatQueryParameter.encode(to:)(a1);
}

uint64_t sub_1BA4B83E0(_QWORD *a1)
{
  return FormatLayeredMediaNodeStyle.Selector.encode(to:)(a1);
}

void sub_1BA4B83F4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_1BA50CAA8(319, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  if (v0 <= 0x3F)
  {
    sub_1BA4CDF6C(319, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
    if (v1 <= 0x3F)
    {
      sub_1BA74E2EC(319);
      if (v2 <= 0x3F)
      {
        type metadata accessor for FormatEnumPropertyDefinition(319);
        if (v3 <= 0x3F)
        {
          sub_1BA4CDF6C(319, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          if (v4 <= 0x3F)
          {
            sub_1BA50CAA8(319, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
            if (v5 <= 0x3F)
            {
              sub_1BA50CAA8(319, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
              if (v6 <= 0x3F)
              {
                sub_1BA74E21C(319);
                if (v7 <= 0x3F)
                {
                  sub_1BA4CDF6C(319, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                  if (v8 <= 0x3F)
                  {
                    sub_1BA4CDF6C(319, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                    if (v9 <= 0x3F)
                    {
                      sub_1BA4CDF6C(319, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                      if (v10 <= 0x3F)
                      {
                        sub_1BA4CDF6C(319, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                        if (v11 <= 0x3F)
                          swift_initEnumMetadataMultiPayload();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

id sub_1BA4B86AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id result;

  if (qword_1ED3CCD38 != -1)
    swift_once();
  v0 = qword_1ED3CCD28;
  v1 = unk_1ED3CCD30;
  v2 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  sub_1BA6E9BC8(v1);
  result = objc_msgSend(v2, sel_emptyDatastore);
  qword_1ED3CEA88 = v0;
  unk_1ED3CEA90 = v1;
  qword_1ED3CEA98 = (uint64_t)result;
  return result;
}

uint64_t sub_1BA4B8748(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BB86D93C();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataConfigurationManager()
{
  return objc_opt_self();
}

NewsFeed::GapColorPalette __swiftcall GapColorPalette.init(tintColor:textColor:)(UIColor tintColor, UIColor textColor)
{
  UIColor *v2;
  UIColor *v3;
  objc_class *v4;
  objc_class *v5;
  NewsFeed::GapColorPalette result;

  v3 = v2;

  v3->super.isa = textColor.super.isa;
  v3[1].super.isa = textColor.super.isa;
  v4 = textColor.super.isa;
  result.textColor.super.isa = v5;
  result.tintColor.super.isa = v4;
  return result;
}

uint64_t destroy for FormatSizeEquation()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4B8804(uint64_t a1)
{
  return sub_1BA852130(a1, &qword_1ED3BFDE8);
}

uint64_t sub_1BA4B8820()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86D660();
    if (v2 <= 0x3F)
    {
      result = sub_1BB86D7A4();
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for FeedLayoutSolverOptions(319);
        if (v4 <= 0x3F)
          return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1BA4B893C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78]();
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86D93C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB60A0];
  MEMORY[0x1E0C80A78]();
  (*(void (**)(char *, _QWORD))(v10 + 104))((char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB6098]);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB5800], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  sub_1BAC6F32C(0, &qword_1ED3C4548, v8, &qword_1ED3C4590, (uint64_t)&protocol conformance descriptor for LayoutContentScale);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1ED3C4518 = result;
  return result;
}

uint64_t sub_1BA4B8AD8(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for CopyIssueCommandHandler();
  result = sub_1BB86DF3C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1ED3BB558 != -1)
      swift_once();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3BA820);
    sub_1BA4A2870(&qword_1ED3BB8B8, (uint64_t (*)(uint64_t))type metadata accessor for CopyIssueCommandHandler, (uint64_t)&unk_1BB9429F0);
    sub_1BB86FF58();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for DebugCommandHandler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LayeredMediaLayerRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA4B8C34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4A9650();
  sub_1BB872A9C();
  v3 = sub_1BB86DF0C();
  result = swift_bridgeObjectRelease();
  if (v3)
  {
    v5 = type metadata accessor for AdPolicyViewportEnvironmentProvider();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v3;
    a2[3] = v5;
    result = sub_1BA50AD30(&qword_1ED3B8A78, 255, (uint64_t (*)(uint64_t))type metadata accessor for AdPolicyViewportEnvironmentProvider, (uint64_t)&unk_1BB94BBB4);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BA4B8D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  void *v7;
  void *v8;
  id v9;

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v7 = 0;
  if (v6(a1, 1, v4) != 1)
  {
    v7 = (void *)sub_1BB86C808();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  if (v6(a2, 1, v4) == 1)
  {
    v8 = 0;
  }
  else
  {
    v8 = (void *)sub_1BB86C808();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  }
  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithStartDate_endDate_, v7, v8);

  return v9;
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedItemRendererResult(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)(*a2 & 0xFFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void sub_1BA4B8E28()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3B0B78)
  {
    sub_1BB871ECC();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53030];
    sub_1BB871EFC();
    sub_1BB871F5C();
    sub_1BA50AD30(&qword_1ED3D2EF0, 255, v0, MEMORY[0x1E0D53028]);
    v1 = sub_1BB871D10();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3B0B78);
  }
}

void sub_1BA4B8EF0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  swift_beginAccess();
  v0 = swift_unknownObjectWeakAssign();
  v1 = (void *)MEMORY[0x1BCCE5D40](v0);
  v2 = swift_unknownObjectWeakAssign();
  v3 = (void *)MEMORY[0x1BCCE5D40](v2);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1BA4B8F90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  sub_1BA81D6FC(0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t type metadata accessor for NotificationCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4B9008()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA4B9048((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BA4B9048(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA4B9088()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4B9150()
{
  sub_1BA4B91F8();
  return sub_1BB872D60();
}

uint64_t sub_1BA4B91AC()
{
  sub_1BA4B91F8();
  return sub_1BB872D0C();
}

unint64_t sub_1BA4B91F8()
{
  unint64_t result;

  result = qword_1ED3C6F10;
  if (!qword_1ED3C6F10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC638, &_s10CodingTypeON_62);
    atomic_store(result, (unint64_t *)&qword_1ED3C6F10);
  }
  return result;
}

uint64_t sub_1BA4B923C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingEmptyArrayStrategy<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1BA4B9268()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3C40A8)
  {
    sub_1BB871F20();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530E8];
    sub_1BB871F98();
    sub_1BB871FC8();
    sub_1BA50AD30(qword_1ED3C0990, 255, v0, MEMORY[0x1E0D530E0]);
    v1 = sub_1BB871D10();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3C40A8);
  }
}

uint64_t sub_1BA4B9330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 32);
  v12 = *(_QWORD *)(v0 + 16);
  v10 = *(_BYTE *)(v0 + 48);
  swift_beginAccess();
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(unsigned __int8 *)(v0 + 74);
  v6 = *(unsigned __int16 *)(v0 + 72);
  v7 = *(_BYTE *)(v0 + 75);
  v8 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v8 + 16) = v12;
  *(_QWORD *)(v8 + 24) = v1;
  *(_QWORD *)(v8 + 32) = v11;
  *(_QWORD *)(v8 + 40) = v2;
  *(_BYTE *)(v8 + 48) = v10;
  swift_beginAccess();
  *(_QWORD *)(v8 + 56) = v4;
  *(_QWORD *)(v8 + 64) = v3;
  *(_BYTE *)(v8 + 74) = v5;
  *(_WORD *)(v8 + 72) = v6;
  *(_BYTE *)(v8 + 75) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA771834(v3, v6 | (v5 << 16));
  return v8;
}

uint64_t sub_1BA4B945C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (qword_1ED3C6D10 != -1)
    swift_once();
  v0 = qword_1ED4769C0;
  if (qword_1ED3C2128 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v1 = swift_bridgeObjectRetain();
  result = sub_1BA81DDA8(v1);
  qword_1ED4769B8 = v0;
  return result;
}

uint64_t type metadata accessor for BlockingCompleteCommandHandler()
{
  return objc_opt_self();
}

CLLocation_optional __swiftcall NSUserDefaults.location(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  Swift::Bool v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  char v9;
  int v10;
  int v11;
  unint64_t v12;
  char v13;
  int v14;
  double v15;
  objc_class *v16;
  double v17;
  __int128 v18;
  __int128 v19;
  CLLocation_optional result;

  v2 = (void *)sub_1BB872970();
  v3 = objc_msgSend(v1, sel_dictionaryForKey_, v2);

  if (!v3)
    goto LABEL_20;
  v6 = sub_1BB87276C();

  v7 = 0.0;
  if (*(_QWORD *)(v6 + 16) && (v8 = sub_1BA6E35A8(0x656475746974616CLL, 0xEB0000000079654BLL), (v9 & 1) != 0))
  {
    sub_1BA747A10(*(_QWORD *)(v6 + 56) + 32 * v8, (uint64_t)&v18);
    v10 = swift_dynamicCast();
    v11 = v10 ^ 1;
    if (v10)
      v7 = v17;
    else
      v7 = 0.0;
    if (!*(_QWORD *)(v6 + 16))
      goto LABEL_12;
  }
  else
  {
    v11 = 1;
    if (!*(_QWORD *)(v6 + 16))
      goto LABEL_12;
  }
  v12 = sub_1BA6E35A8(0x64757469676E6F6CLL, 0xEC00000079654B65);
  if ((v13 & 1) != 0)
  {
    sub_1BA747A10(*(_QWORD *)(v6 + 56) + 32 * v12, (uint64_t)&v18);
    goto LABEL_13;
  }
LABEL_12:
  v18 = 0u;
  v19 = 0u;
LABEL_13:
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v19 + 1))
  {
    sub_1BA6EDA74((uint64_t)&v18);
    goto LABEL_20;
  }
  v14 = swift_dynamicCast();
  if (((v11 | v14 ^ 1) & 1) != 0)
  {
LABEL_20:
    v16 = 0;
    goto LABEL_21;
  }
  if (v14)
    v15 = v17;
  else
    v15 = 0.0;
  v16 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, v7, v15);
LABEL_21:
  result.value._internal = v4;
  result.value.super.isa = v16;
  result.is_nil = v5;
  return result;
}

uint64_t type metadata accessor for FeedAdPipelineProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1BA4B9718(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v45;
  _QWORD v46[4];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v67 = a1;
  v57 = *(_QWORD *)v1;
  swift_beginAccess();
  v59 = *(_QWORD *)(v1 + 16);
  v68 = *(_QWORD *)(v1 + 24);
  v58 = *(_QWORD *)(v1 + 32);
  v69 = *(_QWORD *)(v1 + 40);
  v2 = swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v7 = *(_QWORD *)(v1 + 80);
  v8 = *(_QWORD *)(v1 + 88);
  v9 = *(_QWORD *)(v1 + 96);
  v10 = *(_QWORD *)(v1 + 104);
  v11 = *(_QWORD *)(v1 + 112);
  v12 = *(unsigned __int8 *)(v1 + 120);
  v13 = *(_QWORD *)(v1 + 128);
  v65 = v10;
  v66 = v6;
  v64 = v3;
  v63 = v12;
  v61 = v5;
  v62 = v4;
  if (!v13)
  {
    v60 = (uint64_t *)v7;
    v27 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48 = v11;
    sub_1BA7AF9CC(v3, v6, v27, (uint64_t)v60, v8, v9, v10, v11, v12);
    v26 = 0;
    v23 = v8;
    goto LABEL_6;
  }
  v60 = &v47;
  v70 = v67;
  MEMORY[0x1E0C80A78](v2);
  v56 = v46;
  v46[2] = &v70;
  v15 = v14;
  v16 = v11;
  v18 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v66;
  swift_bridgeObjectRetain();
  v45 = v12;
  v20 = v3;
  v21 = v9;
  v22 = v9;
  v23 = v8;
  v24 = v65;
  sub_1BA7AF9CC(v20, v19, v18, v15, v8, v21, v65, v16, v45);
  v25 = v71;
  v26 = sub_1BA8A1070((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))sub_1BA7919BC, (uint64_t)v56, v13);
  v71 = v25;
  if (!v25)
  {
    v48 = v16;
    v9 = v22;
    v60 = (uint64_t *)v15;
LABEL_6:
    v28 = v26;
    v29 = *(_QWORD *)(v1 + 144);
    v51 = *(_QWORD *)(v1 + 136);
    v52 = *(_QWORD *)(v1 + 152);
    v30 = *(_QWORD *)(v1 + 168);
    v53 = *(_QWORD *)(v1 + 160);
    v54 = *(_QWORD *)(v1 + 176);
    v55 = *(_QWORD *)(v1 + 184);
    v56 = *(_QWORD **)(v1 + 192);
    v50 = *(_QWORD *)(v1 + 200);
    v49 = *(_QWORD *)(v1 + 208);
    v31 = *(unsigned __int8 *)(v1 + 216);
    v32 = v67;
    if (v31 == 254)
    {
      v33 = v68;
      v34 = v69;
    }
    else
    {
      swift_retain();
      v35 = v32;
      v36 = v71;
      sub_1BA742954(v35, v30);
      v33 = v68;
      v34 = v69;
      v71 = v36;
      if (v36)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E8A78(v51, v29, v52, v53, v30, v54, v55, (uint64_t)v56, v50, v49, v31);
        sub_1BA7AF9E4(v64, v66, v61, (uint64_t)v60, v23, v9, v65, v48, v63);
        return v1;
      }
      sub_1BA6E8A78(v51, v29, v52, v53, v30, v54, v55, (uint64_t)v56, v50, v49, v31);
      v30 = v70;
      v29 = v29;
    }
    v1 = swift_allocObject();
    swift_beginAccess();
    *(_QWORD *)(v1 + 16) = v59;
    *(_QWORD *)(v1 + 24) = v33;
    *(_QWORD *)(v1 + 32) = v58;
    *(_QWORD *)(v1 + 40) = v34;
    swift_beginAccess();
    v37 = v64;
    *(_QWORD *)(v1 + 48) = v62;
    *(_QWORD *)(v1 + 56) = v37;
    v38 = v61;
    *(_QWORD *)(v1 + 64) = v66;
    *(_QWORD *)(v1 + 72) = v38;
    *(_QWORD *)(v1 + 80) = v60;
    *(_QWORD *)(v1 + 88) = v23;
    v39 = v65;
    *(_QWORD *)(v1 + 96) = v9;
    *(_QWORD *)(v1 + 104) = v39;
    *(_QWORD *)(v1 + 112) = v48;
    *(_BYTE *)(v1 + 120) = v63;
    v40 = v51;
    *(_QWORD *)(v1 + 128) = v28;
    *(_QWORD *)(v1 + 136) = v40;
    v41 = v52;
    *(_QWORD *)(v1 + 144) = v29;
    *(_QWORD *)(v1 + 152) = v41;
    *(_QWORD *)(v1 + 160) = v53;
    *(_QWORD *)(v1 + 168) = v30;
    v42 = v55;
    *(_QWORD *)(v1 + 176) = v54;
    *(_QWORD *)(v1 + 184) = v42;
    v43 = v50;
    *(_QWORD *)(v1 + 192) = v56;
    *(_QWORD *)(v1 + 200) = v43;
    *(_QWORD *)(v1 + 208) = v49;
    *(_BYTE *)(v1 + 216) = v31;
    return v1;
  }
  sub_1BA7AF9E4(v64, v19, v61, v15, v8, v22, v24, v16, v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1BA4B9C54(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v6)(uint64_t, uint64_t, void *);
  uint64_t v7;
  id v8;

  v6 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  sub_1BA49A224(0, &qword_1ED3BBB88);
  v7 = sub_1BB872DB4();
  swift_retain();
  v8 = a4;
  v6(v7, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t FormatSupplementaryNodeStyle.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA771864(*(_QWORD *)(v0 + 64), *(unsigned __int16 *)(v0 + 72) | (*(unsigned __int8 *)(v0 + 74) << 16));
  return swift_deallocClassInstance();
}

void sub_1BA4B9D78()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BB86C8B0();
  if (v0 <= 0x3F)
  {
    sub_1BA6DB154(319);
    if (v1 <= 0x3F)
    {
      sub_1BA6D940C(319);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1BA4B9E5C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void *v13;
  id v14;
  char v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  _BYTE v22[24];

  v8 = sub_1BB86C8B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs;
  v13 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs);
  sub_1BA49A224(0, &qword_1ED3CF968);
  v14 = v13;
  v15 = sub_1BB8738B8();

  v16 = *(void **)(a2 + v12);
  *(_QWORD *)(a2 + v12) = a1;
  v17 = a1;

  v18 = *a3;
  v19 = (_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_itemsByArticleID);
  swift_beginAccess();
  *v19 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BB86C8A4();
  v20 = a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_modificationDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 40))(v20, v11, v8);
  result = swift_endAccess();
  *a4 = (v15 & 1) == 0;
  return result;
}

uint64_t type metadata accessor for WebEmbedDataSourceRadarCommandHandler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LikingCompleteCommandHandler()
{
  return objc_opt_self();
}

void sub_1BA4BA004(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ShortcutCommandHandler();
  v2 = sub_1BB86DF3C();
  if (v2)
  {
    v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1ED3C4C60 != -1)
      swift_once();
    sub_1BA4A2870(&qword_1ED3CA248, (uint64_t (*)(uint64_t))type metadata accessor for ShortcutCommandHandler, (uint64_t)&unk_1BB8FCD40);
    sub_1BB86FF64();

  }
  else
  {
    __break(1u);
  }
}

void sub_1BA4BA104(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ClearSavedCommandHandler();
  v2 = sub_1BB86DF3C();
  if (v2)
  {
    v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1ED3C4050 != -1)
      swift_once();
    sub_1BA4A2870(&qword_1ED3C4290, (uint64_t (*)(uint64_t))type metadata accessor for ClearSavedCommandHandler, (uint64_t)&unk_1BB9306DC);
    sub_1BB86FF58();

  }
  else
  {
    __break(1u);
  }
}

uint64_t FeedManager.prepare(context:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  CFTimeInterval v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  void *v21;
  uint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult(255, v4, AssociatedConformanceWitness, v6);
  sub_1BB86EAAC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = sub_1BB873A2C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - v13;
  v15 = CACurrentMediaTime();
  v16 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(CFTimeInterval *)v16 = v15;
  *(_BYTE *)(v16 + 8) = 0;
  v17 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v14, a1, AssociatedTypeWitness);
  *(_QWORD *)&v14[v17] = sub_1BA4E7EB4(a1);
  v18 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, TupleTypeMetadata2);
  sub_1BA59B108((uint64_t)v14);
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  sub_1BA49C548();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, TupleTypeMetadata2))
    return ((uint64_t (*)(char *, uint64_t))v19)(v11, v8);
  swift_retain();
  v19(v11, v8);
  v21 = (void *)sub_1BB86E854();
  sub_1BB86E9B0();
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for OpenURLCommandHandler()
{
  return objc_opt_self();
}

void FormatTagBinding.Asset.assetHandle(tag:)(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType();
  sub_1BA7834E0(a1, v1);
}

uint64_t type metadata accessor for FeedCursorCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BA4A8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86C67C();
    if (v2 <= 0x3F)
    {
      result = sub_1BB86BC8C();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BA4BA56C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t (*v36)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  unint64_t v92;

  v88 = a1;
  v80 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v80);
  v81 = (uint64_t *)((char *)&v76 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v76 - v3;
  v5 = type metadata accessor for FormatOption();
  v82 = *(_QWORD *)(v5 - 8);
  v83 = v5;
  MEMORY[0x1E0C80A78](v5);
  v79 = (uint64_t)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86C67C();
  v89 = *(_QWORD *)(v7 - 8);
  v90 = v7;
  MEMORY[0x1E0C80A78](v7);
  v78 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v76 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v76 - v13;
  MEMORY[0x1E0C80A78](v15);
  v85 = (uint64_t)&v76 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v76 - v18;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, v20);
  MEMORY[0x1E0C80A78](v21);
  v76 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v77 = (uint64_t)&v76 - v24;
  MEMORY[0x1E0C80A78](v25);
  v84 = (uint64_t)&v76 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v76 - v28;
  v30 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v76 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v33);
  v35 = (uint64_t *)((char *)&v76 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8(v87, (uint64_t)v35, v36);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1BA5193C4((uint64_t)v35, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    if (qword_1ED3BA8B8 != -1)
      swift_once();
    v48 = qword_1ED3B0AE8;
    v49 = v88;
    v51 = *(_QWORD *)(v88 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    v50 = *(_QWORD *)(v88 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    v52 = *(_QWORD *)&v32[*(int *)(v30 + 20)];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA7F0B28(v49, v52, (uint64_t)v19);
    swift_bridgeObjectRelease();
    v54 = v89;
    v53 = v90;
    if (v50)
      sub_1BA7EDAF0((uint64_t)v19, v51, v50, (uint64_t)v29);
    else
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v29, v19, v90);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v19, v53);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v29, 0, 1, v53);
    type metadata accessor for FormatCommandAction();
    swift_allocObject();
    v69 = sub_1BA7E8134(v48, (uint64_t)v29);
    sub_1BA4A2E80((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    return v69;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v38 = v35[1];
    v39 = v35[2];
    if (qword_1ED3BA8B8 != -1)
      swift_once();
    v40 = qword_1ED3B0AE8;
    v41 = v88;
    v42 = *(_QWORD *)(v88 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    v82 = *(_QWORD *)(v88 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    v91 = *(_BYTE *)(v88 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    swift_bridgeObjectRetain();
    v87 = v40;
    swift_retain();
    sub_1BA4A111C();
    sub_1BB86C5BC();
    v43 = v89;
    v44 = *(void (**)(char *, uint64_t))(v89 + 8);
    v83 = v38;
    v45 = v90;
    v44(v11, v90);
    swift_bridgeObjectRetain();
    v46 = v85;
    sub_1BA7F0B28(v41, v39, v85);
    swift_bridgeObjectRelease();
    v44(v14, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v47 = v84;
    if (v42)
      sub_1BA7EDAF0(v46, v82, v42, v84);
    else
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v84, v46, v45);
    v44((char *)v46, v45);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v47, 0, 1, v45);
    type metadata accessor for FormatCommandAction();
    swift_allocObject();
    return sub_1BA7E8134(v87, v47);
  }
  v55 = *v35;
  v56 = v35[1];
  v57 = v35[2];
  v58 = v88;
  FormatOptionCollection.subscript.getter(*v35, v56, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v4, 1, v83) != 1)
  {
    v68 = v79;
    sub_1BA5193C4((uint64_t)v4, v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v69 = *(_QWORD *)(v68 + 16) & 0xFFFFFFFFFFFFFFFLL;
    swift_retain();
    v70 = v86;
    sub_1BA711ECC();
    v63 = v89;
    v64 = v90;
    if (!v70)
    {
      swift_release();
      v71 = v55;
      v67 = v78;
      sub_1BA7E0DB4(v92, v71, v56, v57, v58, v78);
      swift_release();
      sub_1BA4A2E80(v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    swift_release();
    sub_1BA4A2E80(v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v69;
  }
  sub_1BA98DC18((uint64_t)v4);
  v59 = (uint64_t)v81;
  *v81 = v55;
  *(_QWORD *)(v59 + 8) = v56;
  swift_storeEnumTagMultiPayload();
  v60 = *(_BYTE *)(v58 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  v62 = (void *)swift_allocError();
  v63 = v89;
  v64 = v90;
  if ((v60 & 1) == 0)
  {
    v69 = (uint64_t)type metadata accessor for FormatLayoutError;
    sub_1BA4C2DD8(v59, v61, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v69;
  }
  sub_1BA4C2DD8(v59, v61, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
  swift_bridgeObjectRetain();
  v65 = v76;
  sub_1BB86C634();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48))(v65, 1, v64);
  if ((_DWORD)result != 1)
  {
    v67 = v78;
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v78, v65, v64);
    sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    if (qword_1ED3BA8B8 != -1)
      swift_once();
    v72 = qword_1ED3B0AE8;
    v73 = *(_QWORD *)(v58 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    if (v73)
    {
      v74 = *(_QWORD *)(v58 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
      swift_retain();
      swift_bridgeObjectRetain();
      v75 = v77;
      sub_1BA7EDAF0(v67, v74, v73, v77);
    }
    else
    {
      v75 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v77, v67, v64);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v75, 0, 1, v64);
    type metadata accessor for FormatCommandAction();
    swift_allocObject();
    v69 = sub_1BA7E8134(v72, v75);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v67, v64);
    return v69;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NetworkEventHandler()
{
  return objc_opt_self();
}

uint64_t FeedManager.readAndFetch(context:)(uint64_t a1)
{
  double **v1;
  double **v2;
  CFTimeInterval v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = v1;
  v4 = CACurrentMediaTime();
  sub_1BA4D58D8(v2, a1);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(CFTimeInterval *)(v5 + 24) = v4;
  swift_retain();
  v6 = (void *)sub_1BB86E854();
  v7 = sub_1BB86E9EC();
  swift_release();
  swift_release();

  sub_1BA4B65BC();
  return v7;
}

uint64_t type metadata accessor for ClearSavedCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BAF80()
{
  sub_1BA4BAFDC();
  return sub_1BB872D60();
}

unint64_t sub_1BA4BAFDC()
{
  unint64_t result;

  result = qword_1ED3B6CF8;
  if (!qword_1ED3B6CF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizeConstraint.Dimension, &type metadata for FormatResizeConstraint.Dimension);
    atomic_store(result, (unint64_t *)&qword_1ED3B6CF8);
  }
  return result;
}

void sub_1BA4BB020()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3D2EE0)
  {
    sub_1BB871CB0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D52C40];
    sub_1BB871D40();
    sub_1BB871D94();
    sub_1BA50AD30(&qword_1ED3D2ED8, 255, v0, MEMORY[0x1E0D52C38]);
    v1 = sub_1BB871D10();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3D2EE0);
  }
}

void sub_1BA4BB0E8()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3D51B8)
  {
    sub_1BB871F08();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530C0];
    sub_1BB871DA0();
    sub_1BB871E6C();
    sub_1BA50AD30(&qword_1ED3D51C0, 255, v0, MEMORY[0x1E0D530B8]);
    v1 = sub_1BB871D10();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3D51B8);
  }
}

uint64_t sub_1BA4BB1B0(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for LiveActivityCommandHandler();
  result = sub_1BB86DF3C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1ED3C4B20 != -1)
      swift_once();
    type metadata accessor for LiveActivityCommandContext();
    sub_1BA4A2870(&qword_1ED3CBC68, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityCommandHandler, (uint64_t)&unk_1BB8E04EC);
    sub_1BB86FF64();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for CopyIssueCommandHandler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SavingCommandHandler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WebEmbedDatastoreRadarCommandHandler()
{
  return objc_opt_self();
}

Swift::Void __swiftcall WebEmbedDataSourceService.sceneWillEnterForeground()()
{
  uint64_t v0;
  unsigned __int8 v1;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v1 != 255)
  {
    if ((v1 & 1) != 0)
    {
      sub_1BAF1FEB4(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1BB86E884();
      swift_release();
    }
  }
}

void sub_1BA4BB3A8(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA4BB3EC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA4BB498()
{
  sub_1BA4BB540();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4BB4E4()
{
  sub_1BA4BB540();
  return sub_1BB872D60();
}

unint64_t sub_1BA4BB540()
{
  unint64_t result;

  result = qword_1ED3C4CB8;
  if (!qword_1ED3C4CB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8478, &_s10CodingTypeON_107);
    atomic_store(result, (unint64_t *)&qword_1ED3C4CB8);
  }
  return result;
}

id ColorPaletteProviding.issueCoverColorPalette.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10;

  if (qword_1ED3BA860 != -1)
    swift_once();
  v2 = (void *)qword_1ED3B7090;
  v3 = *(void **)algn_1ED3B7098;
  v5 = (void *)qword_1ED3B70A0;
  v4 = unk_1ED3B70A8;
  v10 = (id)unk_1ED3B70A8;
  *a1 = qword_1ED3B7090;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  v6 = v2;
  v7 = v3;
  v8 = v5;
  return v10;
}

uint64_t type metadata accessor for FormatSponsoredBannerNodeRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BB624(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SavingCommandHandler();
  result = sub_1BB86DF3C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1ED3BA8C8 != -1)
      swift_once();
    sub_1BA82F318(0);
    sub_1BA4A2870(&qword_1ED3B6418, (uint64_t (*)(uint64_t))type metadata accessor for SavingCommandHandler, (uint64_t)&unk_1BB8FF798);
    sub_1BB86FF64();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4BB738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v15[16];

  v5 = sub_1BB86D36C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1BB86D378();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)&v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v12 = sub_1BB8729A0();
  v12[1] = v13;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB57F8], v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E8], v5);
  v15[15] = 0;
  sub_1BA50F0D4(0, (unint64_t *)&qword_1ED3D5FD0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  *a4 = result;
  return result;
}

uint64_t type metadata accessor for LikingCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BB8B4()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedPersonalizationDetailCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BB8F8(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FeedCursorCommandHandler();
  result = sub_1BB86DF3C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1ED3BA8A0 != -1)
      swift_once();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B2470, (uint64_t (*)(uint64_t))type metadata accessor for FeedCursorCommandHandler, (uint64_t)&unk_1BB8F804C);
    sub_1BB86FF58();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4BB9F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  uint64_t *v17;

  v16 = a1;
  v17 = a4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v16 - v9;
  type metadata accessor for FeedCursorGroup(0, a2, a3, v11);
  v12 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  v13 = swift_checkMetadataState();
  v12(v13, AssociatedConformanceWitness);
  swift_getAssociatedConformanceWitness();
  v14 = sub_1BB873090();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  result = 0;
  if ((v14 & 1) == 0)
    result = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(v13, AssociatedConformanceWitness);
  *v17 = result;
  return result;
}

uint64_t sub_1BA4BBBC4()
{
  sub_1BA4BBC6C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4BBC10()
{
  sub_1BA4BBC6C();
  return sub_1BB872D60();
}

unint64_t sub_1BA4BBC6C()
{
  unint64_t result;

  result = qword_1ED3CA498;
  if (!qword_1ED3CA498)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3A80, &_s10CodingTypeON_150);
    atomic_store(result, (unint64_t *)&qword_1ED3CA498);
  }
  return result;
}

uint64_t destroy for FormatAnimationNodeStyle.Selector()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4BBCD8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 720) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BA4BBD44()
{
  sub_1BA4BBDEC();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4BBD90()
{
  sub_1BA4BBDEC();
  return sub_1BB872D60();
}

unint64_t sub_1BA4BBDEC()
{
  unint64_t result;

  result = qword_1ED3B60F0;
  if (!qword_1ED3B60F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB889EA0, &type metadata for FormatCommandOpenURL.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B60F0);
  }
  return result;
}

_QWORD *sub_1BA4BBE30()
{
  _QWORD *v0;
  uint64_t v1;

  type metadata accessor for FormatAdMetricsNodeRenderer();
  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for AdPresentationDelegateProvider();
  v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 24) = 1;
  v0[5] = v1;
  return v0;
}

uint64_t sub_1BA4BBEA4(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for BlockingCompleteCommandHandler();
  result = sub_1BB86DF3C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1ED3BA8E0 != -1)
      swift_once();
    sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
    sub_1BA4A2870((unint64_t *)&unk_1ED3B0220, (uint64_t (*)(uint64_t))type metadata accessor for BlockingCompleteCommandHandler, (uint64_t)&unk_1BB914738);
    sub_1BB86FF58();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4BBFC0(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FeedCursorDatabaseCommandHandler();
  result = sub_1BB86DF3C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1ED3C4AA8 != -1)
      swift_once();
    sub_1BA4A2870(&qword_1ED3C6178, (uint64_t (*)(uint64_t))type metadata accessor for FeedCursorDatabaseCommandHandler, (uint64_t)&unk_1BB955E04);
    sub_1BB86FF58();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4BC0BC()
{
  sub_1BA4BC164();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4BC108()
{
  sub_1BA4BC164();
  return sub_1BB872D60();
}

unint64_t sub_1BA4BC164()
{
  unint64_t result;

  result = qword_1ED3BE248;
  if (!qword_1ED3BE248)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF49C, &_s5ImageO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3BE248);
  }
  return result;
}

uint64_t sub_1BA4BC1A8()
{
  sub_1BA4BC204();
  return sub_1BB872D60();
}

unint64_t sub_1BA4BC204()
{
  unint64_t result;

  result = qword_1ED3BD450;
  if (!qword_1ED3BD450)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlendMode, &type metadata for FormatBlendMode);
    atomic_store(result, (unint64_t *)&qword_1ED3BD450);
  }
  return result;
}

void sub_1BA4BC248(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;

  v8 = *(_QWORD *)(sub_1BB86C8B0() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(a4 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v11 + 84) <= v9)
    v12 = v9;
  else
    v12 = *(_DWORD *)(v11 + 84);
  v13 = *(_QWORD *)(v10 - 8);
  if (v12 <= *(_DWORD *)(v13 + 84))
    v12 = *(_DWORD *)(v13 + 84);
  if (v12 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v12;
  v15 = *(unsigned __int8 *)(v11 + 80);
  v16 = *(unsigned __int8 *)(v13 + 80);
  v17 = ((v16 + 16 + ((*(_QWORD *)(v11 + 64) + 7 + ((*(_QWORD *)(v8 + 64) + v15) & ~v15)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)
      + *(_QWORD *)(v13 + 64);
  if (a3 <= v14)
  {
    v18 = 0u;
  }
  else if (v17 <= 3)
  {
    v20 = ((a3 - v14 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v20))
    {
      v18 = 4u;
    }
    else if (v20 >= 0x100)
    {
      v18 = 2;
    }
    else
    {
      v18 = v20 > 1;
    }
  }
  else
  {
    v18 = 1u;
  }
  if (v14 < a2)
  {
    v19 = ~v14 + a2;
    if (v17 < 4)
    {
      if ((_DWORD)v17)
      {
        v21 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if ((_DWORD)v17 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if ((_DWORD)v17 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, ((v16 + 16 + ((*(_QWORD *)(v11 + 64) + 7 + ((*(_QWORD *)(v8 + 64) + v15) & ~v15)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)+ *(_QWORD *)(v13 + 64));
      *(_DWORD *)a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

uint64_t type metadata accessor for LayeredMediaViewModelRenderer()
{
  return objc_opt_self();
}

uint64_t FormatArticle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1BA4BC5B4(_QWORD *a1)
{
  id result;
  void *v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97D0);
  result = (id)sub_1BB86DF3C();
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, sel_networkReachability);

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t EmptyViewSupplementaryLayoutAttributes.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  v2 = sub_1BB870E88();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t **sub_1BA4BC6D4(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t **v3;
  uint64_t **v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t **, _UNKNOWN **, uint64_t, uint64_t *);
  uint64_t *v12;

  v4 = v3;
  v8 = *v4;
  v4[3] = 0;
  swift_unknownObjectWeakInit();
  v4[5] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for FormatFeedPluginFactory.FactoryWrapper(0, v8[10], v8[11], v8[12]);
  v9 = sub_1BB87273C();
  v4[6] = a1;
  v4[7] = a2;
  v4[8] = a3;
  v4[9] = (uint64_t *)v9;
  ObjectType = swift_getObjectType();
  v11 = (void (*)(uint64_t **, _UNKNOWN **, uint64_t, uint64_t *))a2[2];
  v12 = a3;
  swift_retain();
  swift_unknownObjectRetain_n();
  v11(v4, &off_1E72DF608, ObjectType, a2);
  swift_unknownObjectRelease();

  return v4;
}

uint64_t type metadata accessor for BlockingCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BC7D4(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v7 = sub_1BB86CBE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86CBA4();
  v11 = a3;
  v12 = a4;
  v13 = a1;
  sub_1BA4D5F20(v11, (uint64_t)v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t type metadata accessor for FeedDatabaseCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BC8BC(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x656E696C66666FLL;
  else
    v2 = 0x746C7561666564;
  if ((a2 & 1) != 0)
    v3 = 0x656E696C66666FLL;
  else
    v3 = 0x746C7561666564;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1BB874398();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1BA4BC938()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1BA756C1C(0, &qword_1ED39DAF0, (void (*)(void))sub_1BA837470);
  v3 = sub_1BB873C60();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v21 = *v19;
      v20 = v19[1];
      sub_1BB8745CC();
      sub_1BB8738D0();
      sub_1BB8745D8();
      result = sub_1BB874608();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v21;
      v13[1] = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BA4BCC28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1BB86D378();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D36C();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, double))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB57E8], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  v9[1] = 0x3FD999999999999ALL;
  sub_1BA50F0D4(0, &qword_1ED3B0598);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1ED3C20A8 = result;
  return result;
}

uint64_t sub_1BA4BCD64()
{
  sub_1BA4BCDC0();
  return sub_1BB872D60();
}

unint64_t sub_1BA4BCDC0()
{
  unint64_t result;

  result = qword_1ED3B4E20;
  if (!qword_1ED3B4E20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageRole, &type metadata for FormatPackageRole);
    atomic_store(result, (unint64_t *)&qword_1ED3B4E20);
  }
  return result;
}

uint64_t type metadata accessor for FeedCursorDatabaseCommandHandler()
{
  return objc_opt_self();
}

void sub_1BA4BCE24(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FollowingCommandHandler();
  v2 = sub_1BB86DF3C();
  if (v2)
  {
    v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1ED3BA900 != -1)
      swift_once();
    sub_1BA4A2870(&qword_1ED3B70D0, (uint64_t (*)(uint64_t))type metadata accessor for FollowingCommandHandler, (uint64_t)&unk_1BB924F98);
    sub_1BB86FF64();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BA4BCF24@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v2 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v7 = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B99B0);
  v8 = MEMORY[0x1E0DBCF00];
  *(_QWORD *)&v6 = v2;
  v3 = type metadata accessor for LayeredMediaConditionValidator();
  v4 = swift_allocObject();
  result = sub_1BA4CECCC(&v6, v4 + 16);
  a1[3] = v3;
  a1[4] = (uint64_t)&off_1E7323C68;
  *a1 = v4;
  return result;
}

uint64_t sub_1BA4BCFD4(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FeedDatabaseCommandHandler();
  result = sub_1BB86DF3C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1ED3C4AD0 != -1)
      swift_once();
    sub_1BA4A2870(&qword_1ED3C6000, (uint64_t (*)(uint64_t))type metadata accessor for FeedDatabaseCommandHandler, (uint64_t)&unk_1BB8DCB7C);
    sub_1BB86FF58();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4BD0D0()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for FeedScalingManager();
  v0 = swift_allocObject();
  if (qword_1ED3BBDC8 != -1)
    swift_once();
  sub_1BA4A9D80();
  swift_allocObject();
  swift_retain();
  result = sub_1BB86D2F4();
  *(_QWORD *)(v0 + 16) = result;
  off_1ED3BC388 = (_UNKNOWN *)v0;
  return result;
}

uint64_t FormatVideoPlayerNode.init(identifier:size:resize:adjustments:style:animation:content:posterContent:posterStyle:overlayContent:isLive:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:allowsPrerollAds:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t a10, __int128 *a11, __int128 *a12, uint64_t a13, uint64_t *a14, char a15, uint64_t *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20)
{
  uint64_t v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  char v38;
  uint64_t v41;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v23 = *a3;
  v24 = *a4;
  v25 = *a8;
  v26 = *a9;
  v36 = a11[1];
  v37 = *a11;
  v27 = *((_QWORD *)a11 + 4);
  v35 = *((_QWORD *)a11 + 5);
  v34 = *((_BYTE *)a11 + 48);
  v33 = *a12;
  v32 = *((_QWORD *)a12 + 2);
  v38 = *((_BYTE *)a12 + 24);
  v41 = *a14;
  v43 = *a16;
  v44 = *((_BYTE *)a16 + 8);
  v45 = a20[1];
  v46 = *a20;
  v47 = *((_BYTE *)a20 + 16);
  *(_OWORD *)(v20 + 248) = 0u;
  *(_BYTE *)(v20 + 264) = -1;
  *(_OWORD *)(v20 + 232) = 0u;
  swift_beginAccess();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = v23;
  *(_QWORD *)(v20 + 40) = v24;
  swift_beginAccess();
  *(_QWORD *)(v20 + 48) = a5;
  *(_QWORD *)(v20 + 56) = a6;
  *(_QWORD *)(v20 + 64) = a7;
  *(_QWORD *)(v20 + 72) = v25;
  *(_QWORD *)(v20 + 80) = v26;
  *(_QWORD *)(v20 + 88) = a10;
  *(_OWORD *)(v20 + 96) = v37;
  *(_OWORD *)(v20 + 112) = v36;
  *(_QWORD *)(v20 + 128) = v27;
  *(_QWORD *)(v20 + 136) = v35;
  *(_BYTE *)(v20 + 144) = v34;
  *(_OWORD *)(v20 + 152) = v33;
  *(_QWORD *)(v20 + 168) = v32;
  *(_BYTE *)(v20 + 176) = v38;
  swift_beginAccess();
  *(_QWORD *)(v20 + 184) = a13;
  swift_beginAccess();
  *(_QWORD *)(v20 + 192) = v41;
  swift_beginAccess();
  *(_BYTE *)(v20 + 200) = a15;
  *(_QWORD *)(v20 + 208) = v43;
  *(_BYTE *)(v20 + 216) = v44;
  swift_beginAccess();
  *(_QWORD *)(v20 + 224) = a17;
  swift_beginAccess();
  *(_QWORD *)(v20 + 232) = a18;
  *(_QWORD *)(v20 + 240) = a19;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v28 = *(_QWORD *)(v20 + 248);
  v29 = *(_QWORD *)(v20 + 256);
  *(_QWORD *)(v20 + 248) = v46;
  *(_QWORD *)(v20 + 256) = v45;
  v30 = *(_BYTE *)(v20 + 264);
  *(_BYTE *)(v20 + 264) = v47;
  sub_1BA796C70(v28, v29, v30);
  return v20;
}

id *FeedDatabase.deinit()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  swift_unknownObjectRelease();
  (*(void (**)(char *))(*(_QWORD *)(v1[11] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 20));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

void sub_1BA4BD480(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for LikingCompleteCommandHandler();
  v2 = sub_1BB86DF3C();
  if (v2)
  {
    v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1ED3C4B48 != -1)
      swift_once();
    sub_1BA4A2870(&qword_1ED3CC810, (uint64_t (*)(uint64_t))type metadata accessor for LikingCompleteCommandHandler, (uint64_t)&unk_1BB93C390);
    sub_1BB86FF64();

  }
  else
  {
    __break(1u);
  }
}

uint64_t FCNewsAppConfiguration.todayFeedEditionConfig.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1BB8729E8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (uint64_t)objc_msgSend(v2, sel_respondsToSelector_, sel_todayFeedEditionConfigJSON, v6);
  if ((result & 1) != 0)
  {
    v10 = objc_msgSend(v2, sel_todayFeedEditionConfigJSON);
    if (!v10)
      goto LABEL_5;
    v11 = v10;
    sub_1BB8729A0();

    sub_1BB8729DC();
    v12 = sub_1BB8729AC();
    v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    if (v14 >> 60 == 15)
    {
LABEL_5:
      if (qword_1ED3C0C80 != -1)
        swift_once();
      swift_beginAccess();
      v15 = *(_QWORD *)algn_1ED3C5428;
      *a1 = qword_1ED3C5420;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
    else
    {
      sub_1BB86BCB0();
      swift_allocObject();
      sub_1BB86BCA4();
      sub_1BAAABFF4();
      sub_1BB86BC98();
      swift_release();
      return sub_1BA69D490(v12, v14);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4BD860()
{
  return sub_1BB874494();
}

uint64_t sub_1BA4BD878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  sub_1BA4BD94C(0, &qword_1ED3C4A18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  sub_1BA4BD94C(0, (unint64_t *)&unk_1ED3C4A70, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBC3F8], v6);
  result = sub_1BB871458();
  *a4 = result;
  return result;
}

void sub_1BA4BD94C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for WebEmbedDataVisualization();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for ShortcutCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BD9C4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CopySportsEventUmcIdCommandHandler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ShareAttributionViewReuseFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BDAAC()
{
  sub_1BA4BDB08();
  return sub_1BB872D60();
}

unint64_t sub_1BA4BDB08()
{
  unint64_t result;

  result = qword_1ED3B4B78;
  if (!qword_1ED3B4B78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentMode, &type metadata for FormatContentMode);
    atomic_store(result, (unint64_t *)&qword_1ED3B4B78);
  }
  return result;
}

uint64_t sub_1BA4BDB4C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v26;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(_DWORD *)(v11 + 84);
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = *(_DWORD *)(v11 + 84);
  v14 = *(_QWORD *)(v9 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  if (v13 <= v15)
    v16 = *(_DWORD *)(v14 + 84);
  else
    v16 = v13;
  if (v16 <= 0x7FFFFFFF)
    v17 = 0x7FFFFFFF;
  else
    v17 = v16;
  if (!a2)
    return 0;
  v18 = AssociatedTypeWitness;
  v19 = *(unsigned __int8 *)(v11 + 80);
  v20 = *(_QWORD *)(v7 + 64) + v19;
  v21 = *(_QWORD *)(v11 + 64) + 7;
  v22 = *(unsigned __int8 *)(v14 + 80);
  v23 = v22 + 16;
  if (a2 <= v17)
    goto LABEL_30;
  v24 = ((v23 + ((v21 + (v20 & ~v19)) & 0xFFFFFFFFFFFFFFF8)) & ~v22) + *(_QWORD *)(v14 + 64);
  v25 = 8 * v24;
  if (v24 <= 3)
  {
    v28 = ((a2 - v17 + ~(-1 << v25)) >> v25) + 1;
    if (HIWORD(v28))
    {
      v26 = *(_DWORD *)(a1 + v24);
      if (!v26)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v28 > 0xFF)
    {
      v26 = *(unsigned __int16 *)(a1 + v24);
      if (!*(_WORD *)(a1 + v24))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v28 < 2)
    {
LABEL_30:
      if ((_DWORD)v8 == v17)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, v8, v6);
      v31 = (v20 + a1) & ~v19;
      if (v12 == v17)
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v11 + 48))(v31, *(unsigned int *)(v11 + 84), v18);
      v32 = (v21 + v31) & 0xFFFFFFFFFFFFFFF8;
      if ((v16 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))((v23 + v32) & ~v22, v15, v9);
      v33 = *(_QWORD *)(v32 + 8);
      if (v33 >= 0xFFFFFFFF)
        LODWORD(v33) = -1;
      return (v33 + 1);
    }
  }
  v26 = *(unsigned __int8 *)(a1 + v24);
  if (!*(_BYTE *)(a1 + v24))
    goto LABEL_30;
LABEL_21:
  v29 = (v26 - 1) << v25;
  if (v24 > 3)
    v29 = 0;
  if ((_DWORD)v24)
  {
    if (v24 <= 3)
      v30 = ((v23 + ((v21 + (v20 & ~(_DWORD)v19)) & 0xFFFFFFF8)) & ~(_DWORD)v22) + *(_DWORD *)(v14 + 64);
    else
      v30 = 4;
    __asm { BR              X12 }
  }
  return v17 + v29 + 1;
}

unint64_t destroy for FeedIssue(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  result = *(_QWORD *)(a1 + 128);
  if (result >= 0x11)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BA4BDE54()
{
  sub_1BA4BDEB0();
  return sub_1BB872D60();
}

unint64_t sub_1BA4BDEB0()
{
  unint64_t result;

  result = qword_1ED3B64F0;
  if (!qword_1ED3B64F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatButtonNodeState, &type metadata for FormatButtonNodeState);
    atomic_store(result, (unint64_t *)&qword_1ED3B64F0);
  }
  return result;
}

uint64_t sub_1BA4BDEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1BA6EBD18();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v19 = sub_1BB874608();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1BB874398() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1BB874398() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_1BA81CB60((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1BA6EBD18();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_1BA81CB60((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1BA6EBD18();
      MEMORY[0x1BCCE5C38](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

void sub_1BA4BE35C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for BlockingCommandHandler();
  v2 = sub_1BB86DF3C();
  if (v2)
  {
    v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1ED3BA8E8 != -1)
      swift_once();
    sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
    sub_1BA4A2870(&qword_1ED3B6938, (uint64_t (*)(uint64_t))type metadata accessor for BlockingCommandHandler, (uint64_t)&unk_1BB8F61E8);
    sub_1BB86FF64();

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for FeedHeadlineFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LayeredMediaViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BE4BC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA4BE538(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FeedPersonalizationDetailCommandHandler();
  result = sub_1BB86DF3C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1ED3C4AC0 != -1)
      swift_once();
    sub_1BA4A2870((unint64_t *)&unk_1ED3C6240, (uint64_t (*)(uint64_t))type metadata accessor for FeedPersonalizationDetailCommandHandler, (uint64_t)&unk_1BB949728);
    sub_1BB86FF58();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4BE634()
{
  sub_1BA4BE6DC();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4BE680()
{
  sub_1BA4BE6DC();
  return sub_1BB872D60();
}

unint64_t sub_1BA4BE6DC()
{
  unint64_t result;

  result = qword_1ED3C8EE8;
  if (!qword_1ED3C8EE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BBA38, &_s14descr1E72CC571C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C8EE8);
  }
  return result;
}

uint64_t type metadata accessor for HiddenContentPlacardViewStyler()
{
  return objc_opt_self();
}

void sub_1BA4BE740(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  __int128 v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  switch((unint64_t)v3)
  {
    case 0uLL:
      v4 = xmmword_1BB87FC90;
      goto LABEL_6;
    case 1uLL:
      v4 = xmmword_1BB886E80;
      goto LABEL_6;
    case 5uLL:
      v4 = xmmword_1BB8832D0;
LABEL_6:
      *(_OWORD *)a1 = v4;
      break;
    default:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      break;
  }
}

uint64_t sub_1BA4BE7EC()
{
  return sub_1BB87447C();
}

uint64_t sub_1BA4BE800()
{
  sub_1BA4BE8A8();
  return sub_1BB872D60();
}

uint64_t sub_1BA4BE85C()
{
  sub_1BA4BE8A8();
  return sub_1BB872D0C();
}

unint64_t sub_1BA4BE8A8()
{
  unint64_t result;

  result = qword_1ED3C6F20;
  if (!qword_1ED3C6F20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4B30, &_s10CodingTypeON_138);
    atomic_store(result, (unint64_t *)&qword_1ED3C6F20);
  }
  return result;
}

uint64_t sub_1BA4BE8EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v18;
  id v19;
  double v21;
  uint64_t v23;
  uint64_t v24[18];
  _BYTE v25[144];
  _BYTE v26[152];

  v11 = v9;
  sub_1BB004424(a5, (uint64_t)v26);
  sub_1BB004424((uint64_t)v26, (uint64_t)v25);
  sub_1BA49D758(a4, (uint64_t)v25);
  if (!v10)
  {
    *(_QWORD *)(v11 + 16) = a1;
    *(_QWORD *)(v11 + 24) = a2;
    *(_QWORD *)(v11 + 32) = a3;
    *(_QWORD *)(v11 + 56) = a6;
    *(_QWORD *)(v11 + 64) = a7;
    *(_QWORD *)(v11 + 72) = a8;
    *(_QWORD *)(v11 + 80) = a9;
    sub_1BB004424((uint64_t)v26, (uint64_t)v24);
    if (sub_1BA896370(v24) != 1)
    {
      v18 = v24[2];
      v19 = a1;
      sub_1BA4BEB58(a6);
      sub_1BA4BEB58(a8);
      swift_bridgeObjectRetain();
      sub_1BAC653DC((uint64_t)v26);
      if (v18)
      {
        sub_1BB86DD80();
        v21 = sub_1BA72BED4(v23, v18);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1BA49EBE0(a8);
        sub_1BA49EBE0(a6);

        swift_release();
        *(double *)(v11 + 40) = v21;
        *(_BYTE *)(v11 + 48) = 0;
        return v11;
      }
      sub_1BA49EBE0(a8);
      sub_1BA49EBE0(a6);

    }
    swift_release();
    *(_QWORD *)(v11 + 40) = 0;
    *(_BYTE *)(v11 + 48) = 1;
    return v11;
  }
  sub_1BA49EBE0(a8);
  sub_1BA49EBE0(a6);
  swift_bridgeObjectRelease();

  swift_release();
  sub_1BAC653DC((uint64_t)v26);
  swift_deallocPartialClassInstance();
  return v11;
}

uint64_t sub_1BA4BEB58(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t FeedScalingManager.currentFeedScaleSize.getter()
{
  swift_retain();
  sub_1BB86D2B8();
  return swift_release();
}

uint64_t type metadata accessor for WebEmbedDatastoreCopyToClipboardCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BEBBC(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for OpenURLCommandHandler();
  result = sub_1BB86DF3C();
  if (result)
  {
    swift_getObjectType();
    if (qword_1ED3BA8B8 != -1)
      swift_once();
    sub_1BB86C67C();
    sub_1BA4A2870(&qword_1ED3B6880, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLCommandHandler, (uint64_t)&unk_1BB89AFC8);
    sub_1BB86FF58();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4BECC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int isUniquelyReferenced_nonNull_native;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  unsigned __int8 v47;
  unint64_t v48;

  v45 = type metadata accessor for SharedItem();
  v3 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - v7;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E10]), sel_init);
  v44 = v9;
  v48 = MEMORY[0x1E0DEE9E0];
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_19:
    v46 = *(_QWORD **)(v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
    MEMORY[0x1E0C80A78](v9);
    v38 = v44;
    *(&v41 - 4) = (uint64_t)v44;
    *(&v41 - 3) = v1;
    *(&v41 - 2) = (uint64_t)&v48;
    sub_1BB86DD5C();
    swift_retain();
    sub_1BB86E758();

    swift_release();
    v39 = v47;
    swift_bridgeObjectRelease();
    return v39;
  }
  v41 = a1;
  v42 = v1;
  v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v12 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v43 = v8;
  while (1)
  {
    sub_1BAF52AB4(v11, (uint64_t)v8);
    v14 = (void *)sub_1BB86C58C();
    v15 = objc_msgSend(v14, sel_fc_NewsArticleID);

    if (!v15)
      goto LABEL_5;
    v16 = sub_1BB8729A0();
    v18 = v17;

    v19 = (void *)sub_1BB872970();
    objc_msgSend(v44, sel_addObject_, v19);

    v20 = (uint64_t)v8;
    v21 = (uint64_t)v5;
    sub_1BAF52AB4(v20, (uint64_t)v5);
    v22 = v48;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v46 = (_QWORD *)v22;
    v48 = 0x8000000000000000;
    v25 = sub_1BA6E35A8(v16, v18);
    v26 = *(_QWORD *)(v22 + 16);
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
      break;
    v29 = v24;
    if (*(_QWORD *)(v22 + 24) >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v32 = v46;
        if ((v24 & 1) == 0)
          goto LABEL_14;
      }
      else
      {
        sub_1BB4C70EC();
        v32 = v46;
        if ((v29 & 1) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      sub_1BB4B5D30(v28, isUniquelyReferenced_nonNull_native);
      v30 = sub_1BA6E35A8(v16, v18);
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_22;
      v25 = v30;
      v32 = v46;
      if ((v29 & 1) == 0)
      {
LABEL_14:
        v32[(v25 >> 6) + 8] |= 1 << v25;
        v33 = (uint64_t *)(v32[6] + 16 * v25);
        *v33 = v16;
        v33[1] = v18;
        v34 = v32[7] + v25 * v12;
        v5 = (char *)v21;
        sub_1BAF52BCC(v21, v34);
        v35 = v32[2];
        v36 = __OFADD__(v35, 1);
        v37 = v35 + 1;
        if (v36)
          goto LABEL_21;
        v32[2] = v37;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    v13 = v32[7] + v25 * v12;
    v5 = (char *)v21;
    sub_1BAF53524(v21, v13);
LABEL_4:
    v48 = (unint64_t)v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v43;
LABEL_5:
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    v11 += v12;
    if (!--v10)
    {
      v9 = (id)swift_bridgeObjectRelease();
      v1 = v42;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FollowingCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4BF07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t result;
  __int128 v20;
  _QWORD v21[4];
  char v22;
  __int128 v23;
  double v24;
  double v25;
  unsigned __int8 v26;

  sub_1BA739A14(a1, (uint64_t)v21);
  v12 = v21[0];
  v13 = v21[1];
  v14 = v21[2];
  v15 = v21[3];
  v16 = v22;
  *(_QWORD *)&v23 = 0;
  *((_QWORD *)&v23 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  v20 = v23;
  sub_1BB872AFC((_QWORD *)v23);
  *(double *)&v23 = a3;
  *((double *)&v23 + 1) = a4;
  v24 = a5;
  v25 = a6;
  type metadata accessor for CGRect(0);
  sub_1BB873E34();
  sub_1BB872AFC(v17);
  sub_1BA739A14(a1, (uint64_t)&v23);
  v18 = v26;
  if ((v26 & 1) == 0)
    sub_1BB873E34();
  sub_1BB872AFC((_QWORD *)v18);
  result = swift_bridgeObjectRelease();
  *(_OWORD *)a2 = v20;
  *(double *)(a2 + 16) = a3;
  *(double *)(a2 + 24) = a4;
  *(double *)(a2 + 32) = a5;
  *(double *)(a2 + 40) = a6;
  *(_QWORD *)(a2 + 48) = v12;
  *(_QWORD *)(a2 + 56) = v13;
  *(_QWORD *)(a2 + 64) = v14;
  *(_QWORD *)(a2 + 72) = v15;
  *(_BYTE *)(a2 + 80) = v16;
  return result;
}

void sub_1BA4BF210(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for NotificationCommandHandler();
  v2 = sub_1BB86DF3C();
  if (v2)
  {
    v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1ED3BA8F8 != -1)
      swift_once();
    sub_1BA4A2870(&qword_1ED3B7FF8, (uint64_t (*)(uint64_t))type metadata accessor for NotificationCommandHandler, (uint64_t)&unk_1BB92130C);
    sub_1BB86FF58();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BA4BF308()
{
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F088();
  swift_allocObject();
  return sub_1BB86F0B8();
}

uint64_t type metadata accessor for ReportScoreConcernCommandHandler()
{
  return objc_opt_self();
}

void sub_1BA4BF3E4()
{
  id v0;
  char *v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SocialLayerSharedItemCenter()), sel_init);
  v1 = (char *)objc_allocWithZone((Class)type metadata accessor for SharedItemManager());
  v2 = v0;
  v3 = sub_1BA5038E8((uint64_t)v2, v1);

  qword_1ED3BE098 = (uint64_t)v3;
}

uint64_t sub_1BA4BF448()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4BF474 + 4 * byte_1BB8AEB57[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1BA4BF474()
{
  return 0x6567616D69;
}

uint64_t sub_1BA4BF484()
{
  return 0x6E6F69746361;
}

uint64_t sub_1BA4BF498()
{
  return 1885433183;
}

uint64_t FormatCustomItemDefinition.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE8E75C(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAE8E654();
  v13 = sub_1BA4A2870(&qword_1ED3D1200, (uint64_t (*)(uint64_t))sub_1BAE8E654, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCustomItemDefinition, v14, v10, (uint64_t)&type metadata for FormatCustomItemDefinition, v12, (uint64_t)&type metadata for FormatVersions.AzdenB, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BC20);
  v15 = qword_1ED3C6D30;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476B90);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v5, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD10948(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE8E75C);
}

uint64_t FormatCountLimit.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  sub_1BA82148C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v27 = v1[1];
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA4C783C();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCountLimit, v16, v13, (uint64_t)&type metadata for FormatCountLimit, (uint64_t)&type metadata for FormatCountLimit.CodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BDC0);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C08);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v19(v8, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  if (v12)
  {
    v20 = sub_1BA4B6700((uint64_t)v8, 0, (uint64_t)sub_1BA90CF04, 0);
    if (v2)
      goto LABEL_11;
    if ((v20 & 1) != 0)
    {
      v30 = 0;
      v29 = v12;
      sub_1BA4C77E0(0, &qword_1ED3A09B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
      sub_1BA81BDC0();
      sub_1BB874464();
    }
  }
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  v21 = (uint64_t)v28;
  v19(v28, v18, v17);
  swift_storeEnumTagMultiPayload();
  v22 = v27;
  if (v27 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v24 = sub_1BA4B6700(v21, 1, (uint64_t)sub_1BA90CF04, 0);
    if (!v2)
    {
      if ((v24 & 1) != 0)
      {
        v30 = 1;
        v29 = v22;
        sub_1BA4C77E0(0, &qword_1ED3A09B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
        sub_1BA81BDC0();
        sub_1BB874464();
      }
      goto LABEL_8;
    }
    v8 = (char *)v21;
LABEL_11:
    v23 = (uint64_t)v8;
    goto LABEL_12;
  }
LABEL_8:
  v23 = v21;
LABEL_12:
  sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA82148C);
}

uint64_t FormatFontMetricSizing.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  _BYTE v25[12];
  int v26;
  _BYTE *v27;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v27 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v25[-v8];
  sub_1BAE90E14(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(_QWORD *)v1;
  v26 = *(unsigned __int8 *)(v1 + 8);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE90D0C();
  v17 = sub_1BA4A2870(&qword_1ED3D1000, (uint64_t (*)(uint64_t))sub_1BAE90D0C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatFontMetricSizing, v18, v14, (uint64_t)&type metadata for FormatFontMetricSizing, v16, (uint64_t)&type metadata for FormatVersions.AzdenE, v15, (uint64_t)v12, v17, (uint64_t)&off_1E734BD20);
  v19 = qword_1ED3C6D40;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476BC0);
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD16E24(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v23 = (uint64_t)v27;
    v22(v27, v21, v20);
    swift_storeEnumTagMultiPayload();
    sub_1BAD4AEAC(v26, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE90E14);
}

uint64_t sub_1BA4BFC80(uint64_t a1)
{
  return sub_1BA5429CC(a1, qword_1ED476900);
}

uint64_t sub_1BA4BFC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BB86EB84();
  __swift_allocate_value_buffer(v0, qword_1ED3C0B18);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED3C0B18);
  if (qword_1ED3C43A8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4768E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

_QWORD *sub_1BA4BFD24(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v32[3];
  uint64_t v33;
  _UNKNOWN **v34;
  _QWORD v35[3];
  uint64_t v36;
  _UNKNOWN **v37;
  _QWORD v38[5];

  v8 = type metadata accessor for LayeredMediaConditionValidator();
  v38[3] = v8;
  v38[4] = &off_1E7323C68;
  v38[0] = a1;
  v9 = type metadata accessor for LayeredMediaImageVariantSelector();
  v36 = v9;
  v37 = &off_1E72E7ED0;
  v35[0] = a2;
  v10 = type metadata accessor for LayeredMediaVariantSelector();
  v33 = v10;
  v34 = &off_1E729E3E8;
  v32[0] = a3;
  type metadata accessor for LayeredMediaLayerRenderer();
  v11 = (_QWORD *)swift_allocObject();
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (_QWORD *)((char *)&v32[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (_QWORD *)((char *)&v32[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (_QWORD *)((char *)&v32[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
  v27 = *v15;
  v28 = *v20;
  v29 = *v25;
  v11[5] = v8;
  v11[6] = &off_1E7323C68;
  v11[2] = v27;
  v11[10] = v9;
  v11[11] = &off_1E72E7ED0;
  v11[12] = v29;
  v11[7] = v28;
  v11[15] = v10;
  v11[16] = &off_1E729E3E8;
  sub_1BA4CECCC(a4, (uint64_t)(v11 + 17));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v11;
}

_QWORD *sub_1BA4BFF2C(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, __int128 *a6)
{
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _QWORD v34[3];
  uint64_t v35;
  _UNKNOWN **v36;
  _QWORD v37[3];
  uint64_t v38;
  _UNKNOWN **v39;

  v38 = type metadata accessor for SportsDataServiceRequestBuilder();
  v39 = &off_1E727F6F8;
  v37[0] = a1;
  v35 = type metadata accessor for SportsDataServiceRequestFetcher();
  v36 = &off_1E72DB4B8;
  v34[0] = a2;
  v32 = type metadata accessor for SportsDataConfigurationManager();
  v33 = &off_1E72E49B8;
  v31[0] = a4;
  type metadata accessor for SportsDataService();
  v12 = (_QWORD *)swift_allocObject();
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)&v31[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (_QWORD *)((char *)&v31[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v22 + 16))(v21, v19);
  v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (_QWORD *)((char *)&v31[-1] - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v27 + 16))(v26, v24);
  v28 = sub_1BA5C9EDC(*v16, *v21, a3, *v26, a5, a6, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return v28;
}

uint64_t sub_1BA4C010C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t FormatSupplementaryNodePinTrait.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  __int16 v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  __int16 v26;
  __int128 v27;
  uint64_t v28;

  v3 = v2;
  v28 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_17:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v28;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_7;
      }
      v22 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v22;
      *(_QWORD *)(v23 + 8) = v17;
      *(_QWORD *)(v23 + 16) = &unk_1E72683F0;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v22, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      goto LABEL_17;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA821828();
  v27 = 0uLL;
  sub_1BB8740D4();
  v18 = v25;
  if ((_BYTE)v25)
  {
    if (v25 == 1)
    {
      v27 = xmmword_1BB87FC90;
      sub_1BA820698();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v19 = v25;
      if (HIBYTE(v26))
        v20 = 256;
      else
        v20 = 0;
      v21 = v20 | v26;
    }
    else
    {
      v27 = xmmword_1BB87FC90;
      sub_1BA820698();
      sub_1BB874068();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v19 = v25;
      v21 = v26;
    }
  }
  else
  {
    sub_1BA4CDF6C(0, &qword_1ED3AD418, (uint64_t (*)(void))sub_1BAE787A0, (uint64_t)&type metadata for FormatSupplementaryNodePinEdge, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    v27 = xmmword_1BB87FC90;
    sub_1BAE787E4();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v21 = 0;
    v19 = v25;
  }
  *(_QWORD *)v12 = v19;
  *(_WORD *)(v12 + 8) = v21;
  *(_BYTE *)(v12 + 10) = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA4C0500(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaLayerRenderer();
  result = sub_1BB86DF3C();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for LayeredMediaViewModelRenderer();
    result = sub_1BB86DF3C();
    if (result)
    {
      v4 = result;
      type metadata accessor for LayeredMediaViewRenderer();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v3;
      *(_QWORD *)(result + 24) = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4C05B0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97C0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, (unint64_t *)&unk_1ED3D2EA8);
    result = sub_1BB86DF18();
    if (v5)
    {
      type metadata accessor for FormatVideoNodeRenderer();
      swift_allocObject();
      return sub_1BA4CA720(v3, &v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t FormatSupplementaryNodePinDistance.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  __int128 v25;
  uint64_t v26;

  v3 = v2;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v20 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v20;
      *(_QWORD *)(v21 + 8) = v16;
      *(_QWORD *)(v21 + 16) = &unk_1E726EB40;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v20, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA820814();
  v25 = 0uLL;
  sub_1BB8740D4();
  v17 = v23;
  if ((v23 & 1) != 0)
  {
    v25 = xmmword_1BB87FC90;
    sub_1BA81F6B0();
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v18 = v23;
    v19 = v24;
  }
  else
  {
    sub_1BA655028(0);
    v25 = xmmword_1BB87FC90;
    sub_1BA4A2870(&qword_1ED3B3498, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v19 = 0;
    v18 = v23;
  }
  *(_QWORD *)v12 = v18;
  *(_BYTE *)(v12 + 8) = v19;
  *(_BYTE *)(v12 + 9) = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA4C09F0(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, &qword_1ED3C48D8);
  result = sub_1BB86DF48();
  if (v4)
  {
    sub_1BA4CECCC(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1BA4A2870(&qword_1ED3CBC60, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityCommandHandler, (uint64_t)&unk_1BB8E048C);
    sub_1BB86EE6C();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FormatShareAttributionNodeContent.init(from:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v1)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v2);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = sub_1BB8740EC();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = (unint64_t *)(v11 + 40);
      while (1)
      {
        v14 = *v13;
        if (*v13 >= 4)
          break;
        v13 += 2;
        if (!--v12)
          goto LABEL_7;
      }
      v15 = *(v13 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v2 = (void *)swift_allocError();
      *(_QWORD *)v16 = v15;
      *(_QWORD *)(v16 + 8) = v14;
      *(_QWORD *)(v16 + 16) = &unk_1E7269858;
      *(_OWORD *)(v16 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v15, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA820C7C();
  v18 = 0uLL;
  sub_1BB8740D4();
  v18 = xmmword_1BB87FC90;
  sub_1BA4DDF50();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA4C0D5C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0980);
  result = sub_1BB86DF48();
  if (v6)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97D0);
    result = sub_1BB86DF3C();
    if (result)
    {
      v3 = result;
      type metadata accessor for FeedDatabaseCommandHandler();
      v4 = swift_allocObject();
      sub_1BA4CECCC(&v5, v4 + 16);
      *(_QWORD *)(v4 + 56) = v3;
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t FormatImageNodeRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE9A26C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE9A2E4();
  sub_1BA4A2870(&qword_1ED3D1010, (uint64_t (*)(uint64_t))sub_1BAE9A2E4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v26 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_115;
      *(&v26 - 3) = sub_1BAE9A364();
      *(&v26 - 2) = sub_1BA82A3BC();
      *(&v26 - 1) = sub_1BAE9A3A8();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726C4C8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA824FAC();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB874068();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BA8250DC();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  *v12 = v18;
  v12[1] = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatLayeredMediaNodeContent.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  unint64_t *v31;

  v3 = v2;
  v31 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
LABEL_13:
    sub_1BA7F8B78(v10, (uint64_t)v3);
    swift_willThrow();

    v24 = (uint64_t)v10;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v11 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_8;
      }
      v22 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v22;
      *(_QWORD *)(v23 + 8) = v17;
      *(_QWORD *)(v23 + 16) = &unk_1E726CA90;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v22, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v10 = v28;
      goto LABEL_13;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BA82297C();
  v30 = 0uLL;
  sub_1BB8740D4();
  if ((v29 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1EF2B2F80, (uint64_t (*)(void))sub_1BAEA092C, (uint64_t)&type metadata for FormatLayeredMediaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    v29 = xmmword_1BB87FC90;
    sub_1BAEA0970();
    sub_1BB8740D4();
    v18 = v31;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v19 = v30;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = v19;
    v21 = v20 | 0x8000000000000000;
  }
  else
  {
    v30 = xmmword_1BB87FC90;
    sub_1BA4DDB40();
    sub_1BB8740D4();
    v18 = v31;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v26 = v29;
    v21 = swift_allocObject();
    *(_BYTE *)(v21 + 16) = v26;
  }
  *v18 = v21;
  v24 = (uint64_t)v28;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t FormatVideoPlayerLive.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
    goto LABEL_8;
  v12 = sub_1BB8740EC();
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1BA82ADA4();
    v24 = 0;
    v25 = 0;
    sub_1BB8740D4();
    v16 = v27;
    if ((v27 & 1) != 0)
    {
      v27 = xmmword_1BB87FC90;
      sub_1BA7967E4();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v17 = v24;
      v18 = v25;
      v19 = v26;
    }
    else
    {
      v27 = xmmword_1BB87FC90;
      sub_1BAA629E0();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v17 = v24;
      v18 = v25;
      v19 = v26;
    }
    *(_QWORD *)a2 = v17;
    *(_QWORD *)(a2 + 8) = v18;
    *(_QWORD *)(a2 + 16) = v19;
    *(_BYTE *)(a2 + 24) = v16;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v14 = (unint64_t *)(v12 + 40);
  while (1)
  {
    v15 = *v14;
    if (*v14 >= 4)
      break;
    v14 += 2;
    if (!--v13)
      goto LABEL_7;
  }
  v20 = *(v14 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  swift_allocError();
  *(_QWORD *)v21 = v20;
  *(_QWORD *)(v21 + 8) = v15;
  *(_QWORD *)(v21 + 16) = &unk_1E7268120;
  *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v20, v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatImageNodeRequestSize.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (**v8)(char *, _QWORD);
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(char *, _QWORD);
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  void (**v36)(char *, _QWORD);
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v34 = a2;
  sub_1BAEFBAC0(0, &qword_1ED3C4758, (void (*)(void))sub_1BA821070, (void (*)(void))sub_1BA8210B4);
  v4 = v3;
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v31 - v5;
  sub_1BAE9A7B4();
  v35 = v7;
  v8 = *(void (***)(char *, _QWORD))(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE9A82C();
  sub_1BA4A2870(&qword_1ED3D1230, (uint64_t (*)(uint64_t))sub_1BAE9A82C, (uint64_t)&unk_1BB8FFC6C);
  v11 = v36;
  sub_1BB87468C();
  if (v11)
  {
    v12 = v11;
LABEL_3:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v32 = v6;
  v36 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v35;
  if ((v14 & 1) != 0)
  {
    v31 = a1;
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_9;
      }
      v21 = v15;
      v22 = *((_QWORD *)v18 - 2);
      v23 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      v25 = v10;
      MEMORY[0x1E0C80A78](v24);
      *(&v31 - 4) = &_s10CodingKeysON_113;
      *(&v31 - 3) = (_QWORD *)sub_1BAE9A8AC();
      *(&v31 - 2) = (_QWORD *)sub_1BA825084();
      *(&v31 - 1) = (_QWORD *)sub_1BAE9A8F0();
      swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71130((uint64_t)&unk_1E726C568);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v27 = v22;
      *(_QWORD *)(v27 + 8) = v23;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      v36[1](v25, v21);
      a1 = v31;
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    a1 = v31;
  }
  v40 = 0;
  v41 = 0;
  v42 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    sub_1BAE9A65C();
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v19 = v32;
    sub_1BB8740D4();
    v20 = v34;
    v28 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v4);
    v29 = v36;
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9D8];
    v29 = v36;
    v20 = v34;
  }
  v29[1](v10, v15);
  *v20 = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA4C1BC8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA58BC48();
  result = sub_1BB86DF3C();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, qword_1ED3D4BE0);
    result = sub_1BB86DF48();
    if (v6)
    {
      type metadata accessor for FeedItemPrefetcher();
      v4 = swift_allocObject();
      *(_QWORD *)(v4 + 16) = v3;
      sub_1BA4CECCC(&v5, v4 + 24);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4C1CAC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatLayoutResizingProvider();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatSystemFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D52D0);
  result = sub_1BB86DF48();
  if (v8)
  {
    *a2 = v5;
    a2[1] = v6;
    return sub_1BA4CECCC(&v7, (uint64_t)(a2 + 2));
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BA4C1DB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1EF2A9088);
  result = sub_1BB86DF48();
  if (!v11)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v5 = sub_1BB872148();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if ((v5 & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA4EFE00(0, &qword_1ED3D2EC8);
    result = sub_1BB86DF3C();
    if (result)
    {
      v6 = type metadata accessor for StubImageProcessor();
      v7 = swift_allocObject();
      v11 = v6;
      v12 = sub_1BA50AD30(&qword_1EF2A9090, 255, (uint64_t (*)(uint64_t))type metadata accessor for StubImageProcessor, (uint64_t)&protocol conformance descriptor for StubImageProcessor);
      v10[0] = v7;
      objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StubImageDownloader()), sel_init);
      sub_1BA50AD30(&qword_1EF2A9048, 255, (uint64_t (*)(uint64_t))type metadata accessor for StubImageDownloader, (uint64_t)&protocol conformance descriptor for StubImageDownloader);
      v8 = sub_1BB86F484();
      swift_allocObject();
      result = sub_1BB86F478();
      v9 = MEMORY[0x1E0DB68A0];
      *(_QWORD *)(a2 + 24) = v8;
      *(_QWORD *)(a2 + 32) = v9;
      *(_QWORD *)a2 = result;
      return result;
    }
    goto LABEL_8;
  }
  *(_QWORD *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t FormatTextAdjustmentOtherBaseline.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  uint64_t v32;

  v3 = v2;
  v29 = a2;
  sub_1BAEC43D0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC4448();
  sub_1BA4A2870(&qword_1ED3D13F0, (uint64_t (*)(uint64_t))sub_1BAEC4448, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)v29;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v29 = v13;
      v22 = *((_QWORD *)v17 - 2);
      v23 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v24);
      *(&v29 - 4) = (uint64_t)&_s10CodingKeysON_22;
      *(&v29 - 3) = sub_1BAEC44C8();
      *(&v29 - 2) = sub_1BA5415BC();
      *(&v29 - 1) = sub_1BAEC450C();
      swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71220((uint64_t)&unk_1E726F090);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v26 = v22;
      *(_QWORD *)(v26 + 8) = v23;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v18 = v12;
  v30 = 0uLL;
  v31 = 0;
  v19 = sub_1BB874098();
  v21 = v20;
  type metadata accessor for FormatTextNodeStyle();
  v30 = xmmword_1BB8A1A10;
  v31 = 0;
  sub_1BA4A2870(&qword_1ED3C8748, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v28 = v32;
  *v18 = v19;
  v18[1] = v21;
  v18[2] = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatImageNodeRequestPath.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (**v8)(char *, _QWORD);
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(char *, _QWORD);
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  void (**v36)(char *, _QWORD);
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v34 = a2;
  sub_1BAEFBAC0(0, &qword_1ED3C4758, (void (*)(void))sub_1BA821070, (void (*)(void))sub_1BA8210B4);
  v4 = v3;
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v31 - v5;
  sub_1BAE9A4DC();
  v35 = v7;
  v8 = *(void (***)(char *, _QWORD))(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE9A554();
  sub_1BA4A2870(&qword_1ED3D1220, (uint64_t (*)(uint64_t))sub_1BAE9A554, (uint64_t)&unk_1BB8FFC6C);
  v11 = v36;
  sub_1BB87468C();
  if (v11)
  {
    v12 = v11;
LABEL_3:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v32 = v6;
  v36 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v35;
  if ((v14 & 1) != 0)
  {
    v31 = a1;
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_9;
      }
      v21 = v15;
      v22 = *((_QWORD *)v18 - 2);
      v23 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      v25 = v10;
      MEMORY[0x1E0C80A78](v24);
      *(&v31 - 4) = &_s10CodingKeysON_114;
      *(&v31 - 3) = (_QWORD *)sub_1BAE9A5D4();
      *(&v31 - 2) = (_QWORD *)sub_1BA8251EC();
      *(&v31 - 1) = (_QWORD *)sub_1BAE9A618();
      swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71130((uint64_t)&unk_1E726C540);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v27 = v22;
      *(_QWORD *)(v27 + 8) = v23;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      v36[1](v25, v21);
      a1 = v31;
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    a1 = v31;
  }
  v40 = 0;
  v41 = 0;
  v42 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    sub_1BAE9A65C();
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v19 = v32;
    sub_1BB8740D4();
    v20 = v34;
    v28 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v4);
    v29 = v36;
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9D8];
    v29 = v36;
    v20 = v34;
  }
  v29[1](v10, v15);
  *v20 = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatSupplementaryNodePinDistanceAdjustment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  __int128 v21;

  v3 = v2;
  v20[1] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_8:
    sub_1BA81F990();
    v21 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X9 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726EB90;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA4C29B4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1BB86C67C();
  if (v0 <= 0x3F)
  {
    sub_1BA4B07F0(319, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
    {
      sub_1BA4B07F0(319, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
      {
        sub_1BA4B07F0(319, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

NewsFeed::FeedDaysOfWeek_optional __swiftcall FeedDaysOfWeek.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedDaysOfWeek_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

void _s8NewsFeed0B14ServiceOptionsV16RootCursorSourceO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v12 = sub_1BB86BEC0();
  MEMORY[0x1E0C80A78](v12);
  v4 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  sub_1BA83BEB8();
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 + *(int *)(v8 + 48) - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FeedServiceOptions.RootCursorSource);
  sub_1BA4C2DD8(a2, (uint64_t)v9, type metadata accessor for FeedServiceOptions.RootCursorSource);
  v10 = (char *)sub_1BA4C2C94 + 4 * byte_1BB8A2933[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_1BA4C2C94()
{
  uint64_t v0;
  double *v1;
  double *v2;
  BOOL v3;
  uint64_t (*v4)(_QWORD);

  sub_1BA4C2DD8(v0, (uint64_t)v2, type metadata accessor for FeedServiceOptions.RootCursorSource);
  if (swift_getEnumCaseMultiPayload())
  {
    v3 = 0;
    v4 = (uint64_t (*)(_QWORD))sub_1BA83BEB8;
  }
  else
  {
    v3 = *v2 == *v1;
    v4 = type metadata accessor for FeedServiceOptions.RootCursorSource;
  }
  sub_1BA4A2E80(v0, v4);
  return v3;
}

uint64_t sub_1BA4C2DD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FeedServiceOptions.init(feedMode:rootCursorSource:rootCursorFreshness:database:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unsigned __int8 *a4@<X3>, _BYTE *a5@<X8>)
{
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  int *v11;
  uint64_t result;
  _BYTE *v13;
  char v14;

  v7 = *a1;
  v8 = *a3;
  v9 = *((_BYTE *)a3 + 8);
  v10 = *a4;
  *a5 = v7;
  v11 = (int *)type metadata accessor for FeedServiceOptions(0);
  result = sub_1BA4C2EB0(a2, (uint64_t)&a5[v11[5]]);
  v13 = &a5[v11[6]];
  *(_QWORD *)v13 = v8;
  v13[8] = v9;
  if (v7)
    v14 = 2;
  else
    v14 = 1;
  if (v10 != 3)
    v14 = v10;
  a5[v11[7]] = v14;
  return result;
}

uint64_t sub_1BA4C2EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FeedServiceOptions.RootCursorSource(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3C40B8);
}

uint64_t FeedServiceOptions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  _BYTE *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v22 = a2;
  v21 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  MEMORY[0x1E0C80A78](v21);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3A3070, (uint64_t (*)(void))sub_1BA83C59C, (uint64_t)&type metadata for FeedServiceOptions.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = (int *)type metadata accessor for FeedServiceOptions(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1BA83C59C();
  v24 = v8;
  v13 = v26;
  sub_1BB87468C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v14 = v11;
  v15 = v22;
  v33 = 0;
  sub_1BA5ED140();
  v16 = v23;
  sub_1BB8740D4();
  *v14 = v34;
  v32 = 1;
  sub_1BA4A2870(&qword_1ED3A27A0, type metadata accessor for FeedServiceOptions.RootCursorSource, (uint64_t)&protocol conformance descriptor for FeedServiceOptions.RootCursorSource);
  sub_1BB8740D4();
  sub_1BA4C2EB0((uint64_t)v4, (uint64_t)&v14[v9[5]]);
  v31 = 2;
  sub_1BA83BB90();
  v17 = v24;
  sub_1BB8740D4();
  v18 = v28;
  v19 = &v14[v9[6]];
  *(_QWORD *)v19 = v27;
  v19[8] = v18;
  v29 = 3;
  sub_1BA83B664();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v16);
  v14[v9[7]] = v30;
  sub_1BA4C2DD8((uint64_t)v14, v15, type metadata accessor for FeedServiceOptions);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FeedServiceOptions);
}

unint64_t FeedJournal.init(entries:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v4 = MEMORY[0x1E0DEE9D8];
  v5 = sub_1BA4C3320(MEMORY[0x1E0DEE9D8]);
  v16 = v5;
  result = sub_1BA4C3314(v4);
  v17 = result;
  v15 = a1;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = (uint64_t *)(a1 + 48);
    do
    {
      v10 = *(v9 - 2);
      v11 = *(v9 - 1);
      v12 = *v9;
      v9 += 3;
      v13 = v8 + 1;
      v14[0] = v10;
      v14[1] = v11;
      v14[2] = v12;
      sub_1BB7477C4(v8, v14, (uint64_t)&v15);
      v8 = v13;
    }
    while (v7 != v13);
    swift_bridgeObjectRelease();
    a1 = v15;
    v5 = v16;
    result = v17;
  }
  *a2 = a1;
  a2[1] = v5;
  a2[2] = result;
  return result;
}

unint64_t sub_1BA4C3314(uint64_t a1)
{
  return sub_1BA66B7F8(a1, (void (*)(_QWORD))sub_1BA6B3D08);
}

unint64_t sub_1BA4C3320(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA670AB0();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    v5 = *(v4 - 4);
    v6 = *(v4 - 3);
    v7 = *(v4 - 2);
    v8 = *(v4 - 1);
    v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA67035C(v8);
    result = sub_1BA6E35A8(v5, v6);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v2[6] + 16 * result);
    *v12 = v5;
    v12[1] = v6;
    v13 = (_QWORD *)(v2[7] + 24 * result);
    *v13 = v7;
    v13[1] = v8;
    v13[2] = v9;
    v14 = v2[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v2[2] = v16;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BA4C3464()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656D695465746164;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x726F74617265706FLL;
}

uint64_t sub_1BA4C34B8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656D695465746164;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x73646E6F636573;
}

uint64_t sub_1BA4C350C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4C3548 + 4 * byte_1BB8AF150[*v0]))(0x5373726566657270, 0xED0000656372756FLL);
}

uint64_t sub_1BA4C3548()
{
  return 1953394534;
}

uint64_t sub_1BA4C3558()
{
  return 0x676E6964646170;
}

uint64_t sub_1BA4C3570()
{
  return 0x615272656E726F63;
}

uint64_t sub_1BA4C3590()
{
  return 1885433183;
}

NewsFeed::FormatFixedColor_optional __swiftcall FormatFixedColor.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatFixedColor_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatTextLineBreakMode_optional __swiftcall FormatTextLineBreakMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatTextLineBreakMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatJsonConfigKey_optional __swiftcall FormatJsonConfigKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatJsonConfigKey_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

NewsFeed::FormatSizeConstraint_optional __swiftcall FormatSizeConstraint.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatSizeConstraint_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FeedCursorKind_optional __swiftcall FeedCursorKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedCursorKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatGroupItemKind_optional __swiftcall FormatGroupItemKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatGroupItemKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatFontWidth_optional __swiftcall FormatFontWidth.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatFontWidth_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA4C3810()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x736574617473;
}

uint64_t sub_1BA4C3840@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4C3874(_QWORD *a1)
{
  return FormatButtonNode.encode(to:)(a1);
}

uint64_t FeedServiceOptions.RootCursorFreshness.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  char v39;

  v34 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BA4CDF6C(0, &qword_1ED3A30B8, (uint64_t (*)(void))sub_1BA83BC70, (uint64_t)&type metadata for FeedServiceOptions.RootCursorFreshness.NewerThanCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v31 = v4;
  v33 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v29 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3A30B0, (uint64_t (*)(void))sub_1BA83BD44, (uint64_t)&type metadata for FeedServiceOptions.RootCursorFreshness.AnyCodingKeys, v3);
  v32 = v6;
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - v7;
  sub_1BA4CDF6C(0, &qword_1ED3A30A8, (uint64_t (*)(void))sub_1BA83BE74, (uint64_t)&type metadata for FeedServiceOptions.RootCursorFreshness.CodingKeys, v3);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v29 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA83BE74();
  v14 = v37;
  sub_1BB87468C();
  if (v14)
    goto LABEL_6;
  v16 = v35;
  v15 = v36;
  v37 = v11;
  v30 = a1;
  v17 = sub_1BB8740EC();
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v19 = sub_1BB873D68();
    swift_allocError();
    v21 = v20;
    sub_1BA909FB4();
    *v21 = &type metadata for FeedServiceOptions.RootCursorFreshness;
    sub_1BB874008();
    sub_1BB873D38();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v10);
    a1 = v30;
LABEL_6:
    v22 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v22);
  }
  v18 = *(_BYTE *)(v17 + 32);
  if ((v18 & 1) != 0)
  {
    v39 = 1;
    sub_1BA83BC70();
    sub_1BB873FFC();
    v24 = v31;
    sub_1BB8740B0();
    v25 = v37;
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v10);
  }
  else
  {
    v38 = 0;
    sub_1BA83BD44();
    sub_1BB873FFC();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v10);
    v27 = 0;
  }
  v28 = v34;
  *v34 = v27;
  *((_BYTE *)v28 + 8) = v18 ^ 1;
  v22 = (uint64_t)v30;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t sub_1BA4C3CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4C3E90(0, (unint64_t *)&unk_1ED3A4008, (unint64_t *)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4C3E90(0, (unint64_t *)&unk_1ED3A4038, (unint64_t *)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3A4158 = result;
  return result;
}

uint64_t sub_1BA4C3D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  sub_1BA4C3E90(0, &qword_1ED3C4A30, (unint64_t *)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  sub_1BA4C3E90(0, &qword_1ED3C4A90, (unint64_t *)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBC3F8], v6);
  result = sub_1BB871458();
  *a4 = result;
  return result;
}

void sub_1BA4C3E90(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BA4EFE00(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BA4C3EF0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39E0);
  result = sub_1BB86DF48();
  if (*((_QWORD *)&v10 + 1))
  {
    sub_1BA4CECCC(&v9, (uint64_t)v11);
    v4 = v12;
    v5 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v5 + 32))(&v9, v4, v5);
    v6 = type metadata accessor for IssueCoverViewStyler();
    v7 = swift_allocObject();
    v8 = v10;
    *(_OWORD *)(v7 + 16) = v9;
    *(_OWORD *)(v7 + 32) = v8;
    a2[3] = v6;
    a2[4] = (uint64_t)&off_1E7348D28;
    *a2 = v7;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4C3FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1ED3B0738, (uint64_t (*)(void))sub_1BA594EF0, (uint64_t)&type metadata for A6_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BA5955DC(0, &qword_1ED3B06C0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA59559C(&qword_1ED3B06B8, &qword_1ED3B06C0, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BA4C412C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatTagBinding.Text.init(from:)(a1, a2);
}

uint64_t FormatTagBinding.Text.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FD850, (uint64_t)&_s14descr1E731D319V4TextO10CodingTypeON, (uint64_t)&unk_1E726EF78, a2);
}

uint64_t sub_1BA4C416C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BA4C4188(a1, v2[5], v2[2], v2[3], a2);
}

uint64_t sub_1BA4C4188@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;

  v7 = *a1;
  type metadata accessor for FeedPluginManagerResult(0, a3, a4, a4);
  *a5 = sub_1BA4C4204(a2, v7);
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FeedPluginManagerResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedPluginManagerResult);
}

uint64_t sub_1BA4C4204(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_1BA4C4240()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for FormatImageAdjustment(uint64_t a1)
{
  return sub_1BA76849C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
}

uint64_t sub_1BA4C4310@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_executionPhase;
  v4 = sub_1BB86E6BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BA4C4358@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t result;
  __int128 v11[2];

  v4 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C010C(a1, (uint64_t)v11);
  v5 = swift_allocObject();
  sub_1BA4CECCC(v11, v5 + 16);
  sub_1BB872730();
  swift_allocObject();
  v6 = sub_1BB872724();
  v7 = type metadata accessor for WeatherKitService();
  v8 = (_QWORD *)swift_allocObject();
  if (qword_1ED39DF78 != -1)
    swift_once();
  sub_1BA50CAA8(0, (unint64_t *)&qword_1ED39A498, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB5990], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB5648]);
  swift_allocObject();
  swift_retain();
  v8[4] = sub_1BB86D2F4();
  sub_1BB86DE64();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1BB53C22C;
  *(_QWORD *)(v9 + 24) = v5;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AC9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEE9B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  result = sub_1BB86E740();
  v8[2] = result;
  v8[3] = v6;
  a2[3] = v7;
  a2[4] = &protocol witness table for WeatherKitService;
  *a2 = v8;
  return result;
}

uint64_t sub_1BA4C453C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4C45C0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v2 = v1;
  v4 = sub_1BB86DD44();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8];
  MEMORY[0x1E0C80A78](v4);
  sub_1BA59C0C8();
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1BB86E224();
  v6 = v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  v7 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth) = 0;
  v8 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_lock;
  v9 = MEMORY[0x1E0DEE9D8];
  sub_1BA59C120();
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C02E0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA59C024();
  sub_1BB873BC4();
  sub_1BB86DD5C();
  swift_allocObject();
  *(_QWORD *)(v2 + v8) = sub_1BB86DD50();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_log) = a1;
  v10 = a1;
  v11 = sub_1BB87330C();
  sub_1BB86EF44("Feed loading gate created", 25, 2, &dword_1BA493000, v10, v11, v9);
  return v2;
}

uint64_t sub_1BA4C4778(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB89D208, a1);
  return sub_1BB86E308();
}

uint64_t sub_1BA4C47AC(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA4C4878()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  *(_QWORD *)(v1 + 304) = 0;
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for ResetPuzzleProgressCommandHandler()
{
  return objc_opt_self();
}

uint64_t FeedNativeAdManager.onFetch(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = v3;
  v8 = type metadata accessor for DisposableObserver();
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  swift_retain();
  v10 = swift_retain();
  MEMORY[0x1BCCE36AC](v10);
  if (*(_QWORD *)((*(_QWORD *)(v4 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v4 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  sub_1BB872DCC();
  swift_endAccess();
  a3[3] = v8;
  result = sub_1BA4A2870(&qword_1ED3B52C8, (uint64_t (*)(uint64_t))type metadata accessor for DisposableObserver, (uint64_t)&unk_1BB8A0BC4);
  a3[4] = result;
  *a3 = v9;
  return result;
}

uint64_t sub_1BA4C49EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB46A0];
  v3 = sub_1BB86E6BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1BA4C4A30()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4C4AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_featureAvailability + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_featureAvailability + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_featureAvailability), v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v1, v2);
  if ((v3 & 1) != 0)
  {
    MEMORY[0x1E0C80A78](v3);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86EA58();
  }
  else
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v5 = sub_1BB86EFEC();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED476918);
    v6 = sub_1BB86EFC8();
    v7 = sub_1BB87330C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1BA493000, v6, v7, "PuzzleNotificationAutoEnableStartupTask did not run due to puzzles feature disabled.", v8, 2u);
      MEMORY[0x1BCCE5C38](v8, -1, -1);
    }

    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
}

uint64_t sub_1BA4C4C58()
{
  sub_1BA4C4CB4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4C4CB4()
{
  unint64_t result;

  result = qword_1ED3B75E8;
  if (!qword_1ED3B75E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityTrait, &type metadata for FormatAccessibilityTrait);
    atomic_store(result, (unint64_t *)&qword_1ED3B75E8);
  }
  return result;
}

uint64_t destroy for FormatQueryParameter()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t type metadata accessor for EmptyView()
{
  return objc_opt_self();
}

uint64_t sub_1BA4C4D40()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4C4D64()
{
  sub_1BA4C4E0C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4C4DB0()
{
  sub_1BA4C4E0C();
  return sub_1BB872D60();
}

unint64_t sub_1BA4C4E0C()
{
  unint64_t result;

  result = qword_1ED3CB908;
  if (!qword_1ED3CB908)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAAE0, &_s10CodingTypeON_78);
    atomic_store(result, (unint64_t *)&qword_1ED3CB908);
  }
  return result;
}

uint64_t sub_1BA4C4E50()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double *EmptyViewSupplementaryLayoutAttributes.init(kind:frame:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double *v5;
  char *v11;
  uint64_t v12;

  v11 = (char *)v5 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  v12 = sub_1BB870E88();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  v5[2] = a2;
  v5[3] = a3;
  v5[4] = a4;
  v5[5] = a5;
  return v5;
}

uint64_t sub_1BA4C4F50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB46A8];
  v3 = sub_1BB86E6BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1BA4C4F94()
{
  sub_1BA4C503C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4C4FE0()
{
  sub_1BA4C503C();
  return sub_1BB872D60();
}

unint64_t sub_1BA4C503C()
{
  unint64_t result;

  result = qword_1ED3A6AB0[0];
  if (!qword_1ED3A6AB0[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91D0D4, &_s17ResolvedContainerO10CodingTypeON);
    atomic_store(result, qword_1ED3A6AB0);
  }
  return result;
}

uint64_t initializeWithCopy for FormatImageAdjustment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_BYTE *)(a2 + 128);
  sub_1BA76849C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_BYTE *)(a1 + 128) = v20;
  return a1;
}

uint64_t sub_1BA4C519C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v7 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 &= 0xFFFFFFFFFFFFF8uLL;
  *v10 = *(_QWORD *)v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v9 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA4C5308(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v7 = sub_1BB86D378();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1BB86D36C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DB57E8], v11);
  *v10 = sub_1BB8729A0();
  v10[1] = v15;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB57F8], v7);
  result = sub_1BB86D240();
  *a5 = result;
  return result;
}

uint64_t FormatMenu.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  _QWORD *v15;
  char v16;
  uint64_t v17;

  sub_1BA81BE28(0, &qword_1ED3B9BC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA531020();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1BA4C576C(0, &qword_1ED3C03B8);
  v16 = 0;
  sub_1BA4C5708(&qword_1ED3C03C0, &qword_1ED3C03B8, (uint64_t)&type metadata for FormatMenuGroupable, (uint64_t (*)(void))sub_1BA82E9B0);
  sub_1BB874068();
  v15 = a2;
  v10 = v17;
  sub_1BA4C576C(0, &qword_1ED3B9458);
  v16 = 1;
  sub_1BA4C5708((unint64_t *)&qword_1ED3B9460, &qword_1ED3B9458, (uint64_t)&type metadata for FormatMenuItem, (uint64_t (*)(void))sub_1BA835294);
  swift_bridgeObjectRetain();
  sub_1BB874068();
  v11 = v17;
  v16 = 2;
  sub_1BA821448();
  swift_bridgeObjectRetain();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v12 = v17;
  v13 = v15;
  *v15 = v10;
  v13[1] = v11;
  *((_BYTE *)v13 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4C5708(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4C576C(255, a2);
    v8 = v7;
    v9 = a4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA4C576C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BB872EE0();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t type metadata accessor for FormatLayoutResizingProvider()
{
  return objc_opt_self();
}

uint64_t _s8NewsFeed22FormatResizeConstraintVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA4C5804()
{
  sub_1BA4C58AC();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4C5850()
{
  sub_1BA4C58AC();
  return sub_1BB872D60();
}

unint64_t sub_1BA4C58AC()
{
  unint64_t result;

  result = qword_1ED3CCFD8;
  if (!qword_1ED3CCFD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2138, &_s10CodingTypeON_8);
    atomic_store(result, (unint64_t *)&qword_1ED3CCFD8);
  }
  return result;
}

uint64_t type metadata accessor for SetPuzzleStreakEligibleHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA4C5910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  _QWORD v13[3];
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v13[2] = a3;
  v14 = a4;
  v13[1] = a2;
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86D36C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50F0D4(0, &qword_1ED3B0598);
  v16 = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB57E8], v8);
  sub_1BA81BD6C(0, (unint64_t *)&unk_1ED3A1728, &qword_1ED3A3788);
  sub_1BA842038(0, &qword_1ED3A3788);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB8832C0;
  v15 = 0;
  sub_1BB86D384();
  v15 = 0x404E000000000000;
  sub_1BB86D384();
  v15 = 0x4066800000000000;
  sub_1BB86D384();
  v15 = 0x4072C00000000000;
  sub_1BB86D384();
  v15 = 0x4082C00000000000;
  sub_1BB86D384();
  v15 = 0x408C200000000000;
  sub_1BB86D384();
  v15 = 0x40AC200000000000;
  sub_1BB86D384();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB5800], v4);
  result = sub_1BB86D39C();
  *v14 = result;
  return result;
}

uint64_t sub_1BA4C5C7C()
{
  sub_1BA4C5CC8();
  return sub_1BB872D0C();
}

unint64_t sub_1BA4C5CC8()
{
  unint64_t result;

  result = qword_1ED3C42B8;
  if (!qword_1ED3C42B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB910E3C, &type metadata for FormatContentSizeCategory.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3C42B8);
  }
  return result;
}

uint64_t sub_1BA4C5D0C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4C5D38 + 4 * byte_1BB8AEAEE[*v0]))(0x726F6C6F63, 0xE500000000000000);
}

uint64_t sub_1BA4C5D38()
{
  return 0x746E756F6D61;
}

unint64_t sub_1BA4C5D4C()
{
  return 0xD000000000000014;
}

uint64_t sub_1BA4C5D68()
{
  return 1885433183;
}

uint64_t sub_1BA4C5D78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED39E360 != -1)
    swift_once();
  v2 = sub_1BB86E008();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED39A530);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t FormatSupplementaryNodeStyle.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  __int128 v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v34 = a2;
  sub_1BAEC1C7C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC1CF4();
  sub_1BA4A2870(&qword_1ED3D1320, (uint64_t (*)(uint64_t))sub_1BAEC1CF4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v16 - 2);
      v22 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      v34 = v12;
      MEMORY[0x1E0C80A78](v23);
      *(&v31 - 4) = (uint64_t)&_s10CodingKeysON_34;
      *(&v31 - 3) = sub_1BAEC1D74();
      *(&v31 - 2) = sub_1BA82309C();
      *(&v31 - 1) = sub_1BAEC1DB8();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E726EC30);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v13);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v35 = 0uLL;
  v36 = 0;
  sub_1BB8740D4();
  v17 = v12;
  v18 = v37;
  v19 = v38;
  v35 = xmmword_1BB8A1A10;
  v36 = 0;
  v20 = sub_1BB874038();
  v35 = xmmword_1BB8D2D60;
  v36 = 0;
  sub_1BA551094();
  sub_1BB874068();
  v32 = v37;
  v33 = (unsigned __int16)v38 | (BYTE2(v38) << 16);
  v35 = xmmword_1BB8D2D70;
  v36 = 0;
  sub_1BA4FAC94();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v13);
  v27 = v37;
  v28 = v18;
  v29 = v34;
  *(_QWORD *)v34 = v28;
  *(_QWORD *)(v29 + 8) = v19;
  *(_BYTE *)(v29 + 16) = v20;
  *(_QWORD *)(v29 + 24) = v32;
  v30 = v33;
  *(_BYTE *)(v29 + 34) = BYTE2(v33);
  *(_WORD *)(v29 + 32) = v30;
  *(_BYTE *)(v29 + 35) = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA4C6214(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (**v7)(char *, _QWORD);
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (**v32)(char *, _QWORD);
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  sub_1BA841C74();
  v3 = v2;
  v31 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEF0654();
  v30 = v6;
  v7 = *(void (***)(char *, _QWORD))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = sub_1BAEA00A0();
  sub_1BA4A2870(&qword_1ED3D0C30, (uint64_t (*)(uint64_t))sub_1BAEA00A0, (uint64_t)&unk_1BB8FFC6C);
  v11 = v32;
  sub_1BB87468C();
  if (v11)
  {
    v12 = v11;
LABEL_3:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v29 = v5;
  v32 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v30;
  v16 = v31;
  if ((v14 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_9;
      }
      v21 = v9;
      v22 = *((_QWORD *)v19 - 2);
      v23 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v24);
      *(&v29 - 4) = (char *)&_s10CodingKeysON_105;
      *(&v29 - 3) = (char *)sub_1BAEA0120();
      *(&v29 - 2) = (char *)sub_1BA832A74();
      *(&v29 - 1) = (char *)sub_1BAEA0164();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71130((uint64_t)&unk_1E726C9F0);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v26 = v22;
      *(_QWORD *)(v26 + 8) = v23;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      v32[1](v21, v15);
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
  }
  v36 = 0;
  v37 = 0;
  v38 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    sub_1BA4A2870(&qword_1ED3C45F0, (uint64_t (*)(uint64_t))sub_1BA841C74, MEMORY[0x1E0DB3140]);
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v20 = v29;
    sub_1BB8740D4();
    v27 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v3);
  }
  else
  {
    v27 = MEMORY[0x1E0DEE9E8];
  }
  v32[1](v9, v15);
  type metadata accessor for FormatJsonConfig();
  KeyPath = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 16) = v27;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

uint64_t FormatPercentFillSizing.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v25 = a2;
  sub_1BAE707C8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE70840();
  sub_1BA4A2870(&qword_1ED3D1090, (uint64_t (*)(uint64_t))sub_1BAE70840, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v16 - 2);
      v19 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v7;
      MEMORY[0x1E0C80A78](v20);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_259;
      *(&v25 - 3) = sub_1BAE708C0();
      *(&v25 - 2) = sub_1BA828F3C();
      *(&v25 - 1) = sub_1BAE70904();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E724BF98);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BA69C018();
  v26 = 0uLL;
  v27 = 0;
  sub_1BB8740D4();
  v17 = v28;
  v26 = xmmword_1BB8A1A10;
  v27 = 0;
  sub_1BA8269C4();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = v28;
  *v12 = v17;
  v12[1] = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FeedPlatform.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD v23[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v23, v23[3]);
    v8 = sub_1BB8743B0();
    v9 = v11;
    v12 = sub_1BB872A0C();
    v14 = v12 == 0x656E6F6870 && v13 == 0xE500000000000000;
    if (v14 || (v15 = v12, v16 = v13, (sub_1BB874398() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = 0;
      v9 = 1;
    }
    else
    {
      v17 = v15 == 6578544 && v16 == 0xE300000000000000;
      if (v17 || (sub_1BB874398() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = 0;
        v9 = 2;
      }
      else
      {
        if (v15 == 6513005 && v16 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v18 = sub_1BB874398();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            if (qword_1ED3BB670 != -1)
              swift_once();
            v19 = (void *)qword_1ED4768A8;
            sub_1BA7AA598();
            v20 = swift_allocObject();
            *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
            *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v20 + 64) = sub_1BA6A2D8C();
            *(_QWORD *)(v20 + 32) = v8;
            *(_QWORD *)(v20 + 40) = v9;
            v21 = v19;
            swift_bridgeObjectRetain();
            v22 = sub_1BB87330C();
            sub_1BB86EF44("Ignoring unknown feed platform with value=%{public}@", 52, 2, &dword_1BA493000, v21, v22, v20);

            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
        }
        swift_bridgeObjectRelease();
        v8 = 0;
        v9 = 3;
      }
    }
LABEL_27:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    goto LABEL_6;
  }
  if (qword_1ED3BB670 != -1)
    swift_once();
  v5 = (id)qword_1ED4768A8;
  v6 = sub_1BB8732F4();
  sub_1BA7AA598();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  v23[6] = v2;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = 0xE000000000000000;
  sub_1BB86EF44("Failed to decode feed platform due to error=%{public}@", 54, 2, &dword_1BA493000, v5, v6, v7);

  swift_bridgeObjectRelease();
  v8 = 0;
  v9 = 0;
LABEL_6:
  *a2 = v8;
  a2[1] = v9;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatVideoPlayerOverlayContent.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31;
  char v32;
  __int128 v33;
  char v34;
  _QWORD *v35;

  v3 = v2;
  v35 = a2;
  sub_1BAE7C5DC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7C654();
  sub_1BA4A2870(&qword_1ED3D1360, (uint64_t (*)(uint64_t))sub_1BAE7C654, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v28 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  v10 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v10 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v15 - 2);
      v17 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v19 = sub_1BAE1574C();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v20 = v18;
      *(_QWORD *)(v20 + 8) = v17;
      *(_QWORD *)(v20 + 16) = v19;
      *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      a1 = v30;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA650F04();
  v33 = 0uLL;
  v34 = 0;
  sub_1BB8740D4();
  v16 = v31;
  v33 = xmmword_1BB8A1A10;
  v34 = 0;
  sub_1BA569C54();
  sub_1BB8740D4();
  v22 = v31;
  type metadata accessor for FormatImageNodeStyle();
  v33 = xmmword_1BB8D2D60;
  v34 = 0;
  sub_1BA4A2870(&qword_1ED3C8E98, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNodeStyle, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
  sub_1BB874068();
  v23 = v31;
  v33 = xmmword_1BB8D2D70;
  v34 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v24 = v31;
  v31 = xmmword_1BB8D2D90;
  v32 = 0;
  sub_1BA7967E4();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v25 = v34;
  v26 = v33;
  v27 = v35;
  *v35 = v16;
  v27[1] = v22;
  v27[2] = v23;
  v27[3] = v24;
  *((_OWORD *)v27 + 2) = v26;
  *((_BYTE *)v27 + 48) = v25;
  v28 = (uint64_t)v30;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

void sub_1BA4C7188()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BA76D78C();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_1BB86C8B0();
      if (v2 <= 0x3F)
        swift_initClassMetadata2();
    }
  }
}

uint64_t sub_1BA4C7250()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4C7284 + 4 * byte_1BB8AE30A[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA4C7284()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1BA4C729C()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA4C72B8()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BA4C72D0()
{
  return 0x73776F726874;
}

uint64_t sub_1BA4C72E4()
{
  return 1885433183;
}

uint64_t sub_1BA4C72F4@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A6_V4.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

void sub_1BA4C73D0(_QWORD *a1)
{
  FormatContentSlotItemObject.Resolved.encode(to:)(a1);
}

uint64_t sub_1BA4C73E4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4C7418 + 4 * byte_1BB8AE772[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA4C7418()
{
  return 0x65706F6373;
}

uint64_t sub_1BA4C742C()
{
  return 0x636E657265666572;
}

uint64_t sub_1BA4C7444()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1BA4C745C()
{
  return 1885433183;
}

uint64_t sub_1BA4C746C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D2EA8);
  result = sub_1BB86DF18();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF18();
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3B09F0);
  result = sub_1BB86DF48();
  if (v5)
  {
    type metadata accessor for HeadlineViewRendererPipelineProcessor();
    v3 = swift_allocObject();
    sub_1BA4CECCC(&v8, v3 + 16);
    sub_1BA4CECCC(&v6, v3 + 56);
    sub_1BA4CECCC(&v4, v3 + 96);
    return v3;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BA4C75F0()
{
  unsigned __int8 *v0;

  return sub_1BADF6914(*v0);
}

uint64_t sub_1BA4C75F8()
{
  unsigned __int8 *v0;

  return sub_1BADE75E8(*v0);
}

uint64_t sub_1BA4C7600@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCountLimit.init(from:)(a1, a2);
}

uint64_t FormatCountLimit.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;

  sub_1BA4C77E0(0, &qword_1ED3C0518, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4C783C();
  sub_1BB87468C();
  if (!v2)
  {
    v21 = 0;
    v10 = sub_1BB874050();
    if ((v11 & 1) != 0)
      v12 = 0;
    else
      v12 = v10;
    v20 = 1;
    v13 = sub_1BB874050();
    if ((v14 & 1) != 0)
    {
      if ((v12 & 0x8000000000000000) == 0)
      {
        v15 = 0x7FFFFFFFFFFFFFFFLL;
        goto LABEL_12;
      }
    }
    else if ((v12 & 0x8000000000000000) == 0)
    {
      v15 = v13;
      if (v13 < v12)
      {
        sub_1BB80D004();
        swift_allocError();
        *(_QWORD *)v16 = v12;
        *(_QWORD *)(v16 + 8) = v15;
        *(_BYTE *)(v16 + 16) = 1;
        goto LABEL_14;
      }
LABEL_12:
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      *a2 = v12;
      a2[1] = v15;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    sub_1BB80D004();
    swift_allocError();
    *(_QWORD *)v17 = v12;
    *(_QWORD *)(v17 + 8) = 0;
    *(_BYTE *)(v17 + 16) = 0;
LABEL_14:
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA4C77E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA4C783C();
    v7 = a3(a1, &type metadata for FormatCountLimit.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA4C783C()
{
  unint64_t result;

  result = qword_1ED3BDAB0;
  if (!qword_1ED3BDAB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB951A44, &type metadata for FormatCountLimit.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3BDAB0);
  }
  return result;
}

uint64_t sub_1BA4C7880()
{
  return sub_1BA4C7898();
}

uint64_t sub_1BA4C7898()
{
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2EA0, (uint64_t (*)(uint64_t))sub_1BA573E74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BA4C790C()
{
  sub_1BA4C79B4();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4C7958()
{
  sub_1BA4C79B4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4C79B4()
{
  unint64_t result;

  result = qword_1ED3A5490;
  if (!qword_1ED3A5490)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF7C0, &_s10CodingTypeON_32);
    atomic_store(result, (unint64_t *)&qword_1ED3A5490);
  }
  return result;
}

uint64_t sub_1BA4C79F8()
{
  sub_1BA4C7AA0();
  return sub_1BB872D60();
}

uint64_t sub_1BA4C7A54()
{
  sub_1BA4C7AA0();
  return sub_1BB872D0C();
}

unint64_t sub_1BA4C7AA0()
{
  unint64_t result;

  result = qword_1ED3C7740;
  if (!qword_1ED3C7740)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9149D4, &_s14descr1E730BF49V4BoolO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C7740);
  }
  return result;
}

uint64_t sub_1BA4C7AE4()
{
  sub_1BA4C7B8C();
  return sub_1BB872D60();
}

uint64_t sub_1BA4C7B40()
{
  sub_1BA4C7B8C();
  return sub_1BB872D0C();
}

unint64_t sub_1BA4C7B8C()
{
  unint64_t result;

  result = qword_1ED3C7C58;
  if (!qword_1ED3C7C58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9970, &_s10CodingTypeON_96);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C58);
  }
  return result;
}

uint64_t sub_1BA4C7BD0()
{
  sub_1BA4C7C78();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4C7C1C()
{
  sub_1BA4C7C78();
  return sub_1BB872D60();
}

unint64_t sub_1BA4C7C78()
{
  unint64_t result;

  result = qword_1ED3C81D0;
  if (!qword_1ED3C81D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCellSelection.CodingType, &type metadata for FormatCellSelection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3C81D0);
  }
  return result;
}

uint64_t FeedCursorToken.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4C7CE0()
{
  sub_1BA4C7D88();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4C7D2C()
{
  sub_1BA4C7D88();
  return sub_1BB872D60();
}

unint64_t sub_1BA4C7D88()
{
  unint64_t result;

  result = qword_1ED3C9B98;
  if (!qword_1ED3C9B98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Bool.CodingType, &type metadata for FormatWebEmbedBinding.Bool.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3C9B98);
  }
  return result;
}

void sub_1BA4C7DCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C0B60[0])
  {
    sub_1BB86ECE0();
    sub_1BA828468();
    sub_1BA4C7E7C(&qword_1ED3C48C0, MEMORY[0x1E0DB4FE8]);
    sub_1BA4C7E7C((unint64_t *)&unk_1ED3C48B0, MEMORY[0x1E0DB4FE0]);
    v0 = sub_1BB86F130();
    if (!v1)
      atomic_store(v0, qword_1ED3C0B60);
  }
}

uint64_t sub_1BA4C7E7C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BB86ECE0();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA4C7EBC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4138);
  result = sub_1BB86DF48();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for LayeredMediaVariantSelector();
    v19[3] = v10;
    v19[4] = &off_1E729E3E8;
    v19[0] = v9;
    v11 = type metadata accessor for LayeredMediaImageVariantSelector();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1E729E3E8;
    v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1E72E7ED0;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4C8054@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4D9CE8(0, &qword_1ED3BFB68);
  result = sub_1BB86DF48();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for EngagementBannerViewStyler();
    v19[3] = v10;
    v19[4] = &off_1E72E60C0;
    v19[0] = v9;
    v11 = type metadata accessor for EngagementBannerViewRenderer();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1E72E60C0;
    v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &protocol witness table for EngagementBannerViewRenderer;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4C81E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3C4F00);
  result = sub_1BB86DF48();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for WebEmbedDataVisualizationDataService(0);
    v19[3] = v10;
    v19[4] = &off_1E727BD98;
    v19[0] = v9;
    v11 = type metadata accessor for WebEmbedDataSourceManager();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    v18 = sub_1BA53CA04(*v16, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1E729D660;
    *a2 = v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4C8384(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B97B0);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1ED3B98B0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D3B80);
  result = sub_1BB86DF48();
  if (v7)
  {
    type metadata accessor for SavingCommandHandler();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    sub_1BA4CECCC(&v6, v5 + 32);
    return v5;
  }
LABEL_7:
  __break(1u);
  return result;
}

_QWORD *sub_1BA4C84C0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4BB0E8();
  result = (_QWORD *)sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4AE3C8();
  result = (_QWORD *)sub_1BB86DF3C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4AF14C();
  result = (_QWORD *)sub_1BB86DF3C();
  if (result)
  {
    v5 = (uint64_t)result;
    type metadata accessor for FeedPrerollAdRequester();
    swift_allocObject();
    return sub_1BA4D0644(v3, v4, v5);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1BA4C85BC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, qword_1ED3B2318);
  sub_1BB86DF48();
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)(v3 + 24) = v8;
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BB8709A8();
  v4 = sub_1BB86DF3C();
  if (v4)
  {
    v5 = (void *)v4;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1BA4A9650();
    sub_1BB872A9C();
    v6 = (void *)sub_1BB86DF0C();
    swift_bridgeObjectRelease();
    if (v6)
    {
      sub_1BA50AD30((unint64_t *)&unk_1EF2C4EE8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAdRequester, (uint64_t)&protocol conformance descriptor for FeedBannerAdRequester);
      sub_1BB870978();
      swift_retain();
      sub_1BB86E884();

      swift_release();
    }
    else
    {

    }
  }
}

uint64_t sub_1BA4C8758(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  objc_class *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  objc_super v14;
  _BYTE v15[24];
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA83207C();
  result = sub_1BB86DF48();
  if (v16)
  {
    sub_1BA8346AC(0, v2, v3, v4);
    v6 = v5;
    v7 = (char *)objc_allocWithZone(v5);
    v8 = &v7[qword_1EF2C4690];
    *(_QWORD *)v8 = 0;
    *((_QWORD *)v8 + 1) = 0;
    sub_1BA4C010C((uint64_t)v15, (uint64_t)&v7[qword_1EF2C4698]);
    v14.receiver = v7;
    v14.super_class = v6;
    v9 = (char *)objc_msgSendSuper2(&v14, sel_init);
    v10 = *(_QWORD *)&v9[qword_1EF2C4698 + 24];
    v11 = *(_QWORD *)&v9[qword_1EF2C4698 + 32];
    __swift_project_boxed_opaque_existential_1(&v9[qword_1EF2C4698], v10);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v13 = v9;
    v12(v9, v10, v11);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return (uint64_t)v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4C8854(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedItemRendererTool();
  result = sub_1BB86DF3C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA4DD3F4(0, &qword_1ED3C0328, qword_1ED3BC6C0, (uint64_t)&protocol descriptor for FeedGroupDebuggerType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB86DF48();
    if (qword_1ED3D5158 != -1)
      swift_once();
    sub_1BA50AD30(&qword_1ED3C77D0, v3, (uint64_t (*)(uint64_t))type metadata accessor for RendererAssembly, (uint64_t)&unk_1BB87D7C4);
    sub_1BB86D210();
    __asm { BR              X10 }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4C8A78@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1ED3B7B40);
  v4 = sub_1BB86DF3C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98D0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v6 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, &qword_1ED3B0980);
    result = sub_1BB86DF48();
    if (v10)
    {
      v7 = type metadata accessor for FollowingManager();
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v4;
      *(_QWORD *)(v8 + 24) = v6;
      result = sub_1BA4CECCC(&v9, v8 + 32);
      a2[3] = v7;
      a2[4] = (uint64_t)&protocol witness table for FollowingManager;
      *a2 = v8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4C8BC8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4218);
  result = sub_1BB86DF48();
  if (!v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaViewModelFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaViewModelRenderer();
  result = sub_1BB86DF3C();
  if (result)
  {
    v4 = result;
    type metadata accessor for LayeredMediaRenderedViewModelFactory();
    v5 = swift_allocObject();
    sub_1BA4CECCC(&v6, v5 + 16);
    *(_QWORD *)(v5 + 56) = v3;
    *(_QWORD *)(v5 + 64) = v4;
    return v5;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BA4C8CE4(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, &qword_1ED3B0800);
  result = sub_1BB86DF48();
  if (v4)
  {
    sub_1BA4CECCC(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1BA50AD30(&qword_1ED3B7860, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutViewRenderer, (uint64_t)&protocol conformance descriptor for FormatLayoutViewRenderer);
    sub_1BB86E5F0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4C8DC8(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(_QWORD))
{
  uint64_t result;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a4(0, a2, a3);
  result = sub_1BB86DF3C();
  if (result)
  {
    v10 = result;
    a5(0);
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1BA4C8E60(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAEC72C(a1, *(uint64_t **)(v1 + 32));
}

uint64_t sub_1BA4C8E80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0B08);
  result = sub_1BB86DF48();
  if (!v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4B9268();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4A5D50();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3B0B80);
  result = sub_1BB86DF48();
  if (v10)
  {
    v7 = type metadata accessor for FeedSponsorshipAdService();
    v8 = swift_allocObject();
    sub_1BA4CECCC(&v11, v8 + 16);
    *(_QWORD *)(v8 + 56) = v5;
    *(_QWORD *)(v8 + 64) = v6;
    result = sub_1BA4CECCC(&v9, v8 + 72);
    a2[3] = v7;
    a2[4] = (uint64_t)&protocol witness table for FeedSponsorshipAdService;
    *a2 = v8;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA4C9014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  sub_1BA4D787C(0, &qword_1ED3BBFE0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  sub_1BA4D787C(0, &qword_1ED3BC058, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBC3F8], v6);
  result = sub_1BB871458();
  *a4 = result;
  return result;
}

uint64_t sub_1BA4C90E8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatHeadlineBinding.Color.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.Color.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FD80C, (uint64_t)&_s14descr1E728F061C5ColorO10CodingTypeON, (uint64_t)&unk_1E7268780, a2);
}

uint64_t sub_1BA4C9128@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4C9154();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4C9154()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x13)
    return 19;
  else
    return v0;
}

uint64_t sub_1BA4C91A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4C91D0();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4C91D0()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1BA4C9218@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4C9244();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4C9244()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1BA4C928C(unint64_t a1)
{
  uint64_t *v1;

  return sub_1BA7BE1F8(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1BA4C92BC()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
    return swift_initClassMetadata2();
  return result;
}

uint64_t destroy for FormatWebEmbedNodeStyle.Selector(uint64_t a1)
{
  uint64_t result;
  unsigned int v3;
  unsigned int v4;

  result = swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 0xFD)
    result = sub_1BA6F2B88(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v3);
  v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 <= 0xFD)
    return sub_1BA6F2B88(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v4);
  return result;
}

void sub_1BA4C9450(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for LikingCommandHandler();
  v2 = sub_1BB86DF3C();
  if (v2)
  {
    v3 = (void *)v2;
    swift_getObjectType();
    if (qword_1ED3BA858 != -1)
      swift_once();
    sub_1BA4A2870(&qword_1ED3B6410, (uint64_t (*)(uint64_t))type metadata accessor for LikingCommandHandler, (uint64_t)&unk_1BB957368);
    sub_1BB86FF64();
    if (qword_1ED3BA8C0 != -1)
      swift_once();
    sub_1BB86FF64();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BA4C95BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BA4C96D8(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t v21;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = sub_1BB86C8B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v6 <= v9)
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = v6;
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  if (!a2)
    return 0;
  v12 = v7;
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = *(_QWORD *)(v5 + 64);
  v15 = *(unsigned __int8 *)(v8 + 80);
  if (v11 < a2)
  {
    if (((((((((*(_QWORD *)(v8 + 64) + ((v14 + v15 + ((v13 + 16) & ~v13)) & ~v15) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v16 = 2;
    else
      v16 = a2 - v11 + 1;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    __asm { BR              X0 }
  }
  if ((v10 & 0x80000000) != 0)
  {
    v21 = (a1 + v13 + 16) & ~v13;
    if ((_DWORD)v6 == v11)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v21, v6, AssociatedTypeWitness);
    else
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))((v21 + v14 + v15) & ~v15, v9, v12);
  }
  else
  {
    v20 = *(_QWORD *)(a1 + 8);
    if (v20 >= 0xFFFFFFFF)
      LODWORD(v20) = -1;
    return (v20 + 1);
  }
}

uint64_t sub_1BA4C993C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  v0 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for FeedCursorStoreManager();
  v1 = swift_allocObject();
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  result = sub_1BB86DD50();
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 16) = result;
  *(_QWORD *)(v1 + 24) = v3;
  qword_1ED3C5AA0 = v1;
  return result;
}

void sub_1BA4C99E4(char *a1@<X0>, unint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;

  v4 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs], sel_array);
  v5 = sub_1BB872DB4();

  v6 = a1;
  v7 = sub_1BA81DDC4(v5, (uint64_t)v6);
  swift_bridgeObjectRelease();

  *a2 = v7;
}

uint64_t sub_1BA4C9A7C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BA4C9ACC(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BA4C9B90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[40];

  v28[6] = a6;
  v28[7] = a5;
  v28[39] = a4;
  v13 = *a1;
  v14 = *(_QWORD *)(*a1 + 80);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v18 + 16;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v21 = Strong;
    v19 = a3;
    sub_1BA4EE55C((uint64_t)v17);
    if (!v10)
    {
      v28[3] = v15;
      v25 = type metadata accessor for FeedCursor(0, v14, *(_QWORD *)(v13 + 88), v22);
      v26 = swift_retain();
      v28[0] = v25;
      v28[1] = sub_1BA4EB234(v26, (uint64_t)v17, a9, a10);
      swift_release();
      v28[5] = *(_QWORD *)(v21 + 16);
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87FC80;
      v27 = *((unsigned __int8 *)a1 + qword_1ED476480);
      v28[4] = v14;
      v28[2] = v27;
      __asm { BR              X9 }
    }
    swift_release();
  }
  else
  {
    sub_1BB025BE8();
    swift_allocError();
    *(_OWORD *)v23 = xmmword_1BB8D2D90;
    *(_BYTE *)(v23 + 16) = 7;
    swift_willThrow();
  }
  return v19;
}

uint64_t sub_1BA4C9DA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = MEMORY[0x1E0DEA968];
  v0[7] = MEMORY[0x1E0DEA968];
  v4 = sub_1BA6A2D8C();
  v0[8] = v4;
  v0[4] = 1852138835;
  v0[5] = 0xE400000000000000;
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(id *)(v2 - 344);
  *(_QWORD *)(v2 - 344) = v5;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v8 = *(_QWORD *)(v2 - 312);
  if (v8)
  {
    v9 = *(_QWORD *)(v2 - 320);
    v0[12] = v3;
    v0[13] = v4;
    v0[9] = v9;
    v0[10] = v8;
    v10 = sub_1BA4E0C98();
    v0[17] = v3;
    v0[18] = v4;
    v0[14] = v10;
    v0[15] = v11;
    v12 = sub_1BB87330C();
    sub_1BB86EF44("Feed database converting %{public}@ deferred cursor %{public}@ with new context=%{public}@", 90, 2, &dword_1BA493000, v6, v12, v0);

    v13 = swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t))((char *)&loc_1BA4C9EE0
                                            + *((int *)qword_1BB024248 + *(_QWORD *)(v2 - 368))))(v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4CA084()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1BA4CA118()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1BB86DD44();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8];
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for FormatLayoutResizingProvider();
  v2 = (_QWORD *)swift_allocObject();
  sub_1BA4A2870((unint64_t *)&qword_1ED3BBE30, v1, MEMORY[0x1E0DB3208]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C02E0, v1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3C02F0, (unint64_t *)&unk_1ED3C02E0, v1);
  sub_1BB873BC4();
  sub_1BB86DD5C();
  swift_allocObject();
  v3 = sub_1BB86DD50();
  v4 = MEMORY[0x1E0DEE9E0];
  v2[2] = v3;
  v2[3] = v4;
  v2[4] = 0;
  v2[5] = 0;
  return v2;
}

uint64_t sub_1BA4CA258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t result;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a3;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v36 - v7);
  v38 = sub_1BB86F04C();
  v36 = *(_QWORD *)(v38 - 8);
  v9 = MEMORY[0x1E0C80A78](v38);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v36 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v36 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v36 - v18;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BA67F4CC(v20);
  swift_bridgeObjectRelease();
  if (v21[2])
  {
    sub_1BB86F1E4();
    sub_1BB86F064();
    sub_1BB86F22C();
    result = swift_release();
    if (v40)
    {
      v43 = MEMORY[0x1E0DEA968];
      v44 = MEMORY[0x1E0DB2EC8];
      v41 = v39;
      v42 = v40;
      sub_1BB86F160();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
      sub_1BA81C284((uint64_t)v21);
      swift_release();
      sub_1BB86F184();
      swift_bridgeObjectRelease();
      sub_1BB86F154();
      v23 = *(void (**)(char *, uint64_t))(v36 + 8);
      v24 = v14;
      v25 = v38;
      v23(v24, v38);
      v23(v17, v25);
      *v8 = 0x4464657461657263;
      v8[1] = 0xEB00000000657461;
      v26 = *MEMORY[0x1E0DB2D20];
      v27 = sub_1BB86F274();
      v28 = *(_QWORD *)(v27 - 8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v28 + 104))(v8, v26, v27);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v8, 0, 1, v27);
      v29 = v37;
      v30 = sub_1BB86F1C0();
      if (!v29)
        v26 = v30;
      swift_release();
      sub_1BA5C699C((uint64_t)v8, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
      v23(v19, v25);
      return v26;
    }
    __break(1u);
  }
  else
  {
    swift_release();
    sub_1BB86F1E4();
    sub_1BB86F064();
    sub_1BB86F22C();
    result = swift_release();
    if (v40)
    {
      v43 = MEMORY[0x1E0DEA968];
      v44 = MEMORY[0x1E0DB2EC8];
      v41 = v39;
      v42 = v40;
      sub_1BB86F160();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
      *v6 = 0x4464657461657263;
      v6[1] = 0xEB00000000657461;
      v26 = *MEMORY[0x1E0DB2D20];
      v31 = sub_1BB86F274();
      v32 = *(_QWORD *)(v31 - 8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v32 + 104))(v6, v26, v31);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v6, 0, 1, v31);
      v33 = v37;
      v34 = sub_1BB86F1C0();
      v35 = v38;
      if (!v33)
        v26 = v34;
      swift_release();
      sub_1BA5C699C((uint64_t)v6, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v35);
      return v26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4CA720(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  __int128 *v10;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;

  v13 = a1;
  v14 = a2;
  v3 = sub_1BB873450();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB87342C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v9);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  sub_1BB872640();
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, v8, MEMORY[0x1E0DEF828]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9650, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA81D7A4();
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v3);
  *(_QWORD *)(v2 + 64) = sub_1BB87348C();
  v10 = v14;
  *(_QWORD *)(v2 + 16) = v13;
  sub_1BA4CECCC(v10, v2 + 24);
  return v2;
}

uint64_t sub_1BA4CA904()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86C8B0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_1BA4CAA64(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(sub_1BB86C8B0() - 8);
  if (v7 <= *(_DWORD *)(v8 + 84))
    v9 = *(_DWORD *)(v8 + 84);
  else
    v9 = v7;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  if (v10 >= a3)
  {
    v13 = 0u;
    if (a2 <= v10)
      goto LABEL_20;
  }
  else
  {
    if (((((((*(_DWORD *)(v8 + 64)
             + ((*(_DWORD *)(v6 + 64)
               + *(unsigned __int8 *)(v8 + 80)
               + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~*(unsigned __int8 *)(v6 + 80))) & ~*(unsigned __int8 *)(v8 + 80))
             + 7) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v11 = a3 - v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    if (a2 <= v10)
LABEL_20:
      __asm { BR              X0 }
  }
  if (((((((*(_DWORD *)(v8 + 64)
           + ((*(_DWORD *)(v6 + 64)
             + *(unsigned __int8 *)(v8 + 80)
             + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~*(unsigned __int8 *)(v6 + 80))) & ~*(unsigned __int8 *)(v8 + 80))
           + 7) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v14 = ~v10 + a2;
    bzero(a1, ((((((*(_QWORD *)(v8 + 64)+ ((*(_QWORD *)(v6 + 64)+ *(unsigned __int8 *)(v8 + 80)+ ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v14;
  }
  __asm { BR              X10 }
}

void sub_1BA4CAC68()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x1BA4CACD8);
}

void sub_1BA4CAC70()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1BA4CAC78);
  JUMPOUT(0x1BA4CACD8);
}

void sub_1BA4CAC8C()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x1BA4CACD8);
}

void sub_1BA4CAC94()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x1BA4CACD8);
}

void sub_1BA4CAC9C()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_WORD *)(v1 + v3) = 0;
  if (v2)
  {
    if (v0 < 0)
      JUMPOUT(0x1BA4CACA8);
    if (v2 < 0)
      JUMPOUT(0x1BA4CACD0);
    *(_QWORD *)(v1 + 8) = (v2 - 1);
  }
  JUMPOUT(0x1BA4CACD8);
}

_QWORD *initializeWithCopy for CoverChannelViewLayout(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t FormatSlotDefinitionItemSet.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  __int128 v15;
  _QWORD *v16;
  char v17;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1ED3AB6F0, (uint64_t (*)(void))sub_1BA7DFD50, (uint64_t)&type metadata for FormatSlotDefinitionItemSet.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA7DFD50();
  sub_1BB8746C8();
  LOBYTE(v15) = 0;
  sub_1BB8741B8();
  if (!v2)
  {
    v10 = *(_DWORD *)(v3 + 4);
    if (v10 != 0x7FFFFFFF)
    {
      LOBYTE(v16) = 1;
      LODWORD(v15) = v10;
      sub_1BA4CB104();
      sub_1BB874464();
    }
    v11 = *(_QWORD *)(v3 + 8);
    v17 = 2;
    swift_bridgeObjectRetain_n();
    v12 = sub_1BA68215C(v11);
    swift_bridgeObjectRelease();
    v16 = v12;
    swift_retain();
    sub_1BA81E3AC((uint64_t *)&v16);
    swift_release();
    *(_QWORD *)&v15 = v16;
    sub_1BA4CB104();
    sub_1BA4C576C(0, &qword_1ED3A0840);
    sub_1BA682178();
    sub_1BB874464();
    swift_bridgeObjectRelease();
    swift_release();
    v14 = *(_QWORD *)(v3 + 16);
    if (*(_QWORD *)(v14 + 16))
    {
      LOBYTE(v16) = 3;
      *(_QWORD *)&v15 = v14;
      sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA7DFE14((unint64_t *)&qword_1ED39EA30, &qword_1ED3BB1A0, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition, MEMORY[0x1E0DEAF10]);
      sub_1BB874464();
    }
    v15 = *(_OWORD *)(v3 + 24);
    LOBYTE(v16) = 4;
    sub_1BA82004C();
    sub_1BB87414C();
    type metadata accessor for FormatSlotDefinitionItemSet();
    LOBYTE(v15) = 5;
    sub_1BB86E710();
    sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BA4CB104()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB6E8;
  if (!qword_1ED3AB6E8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AB6F0, (uint64_t (*)(void))sub_1BA7DFD50, (uint64_t)&type metadata for FormatSlotDefinitionItemSet.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB6E8);
  }
  return result;
}

void sub_1BA4CB16C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1BB86EFEC();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1BB86C304();
  MEMORY[0x1E0C80A78](v1);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9860);
  sub_1BB86C1F0();
  swift_getKeyPath();
  sub_1BB86C184();
  sub_1BA4A2870(&qword_1ED3C44A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1A00], MEMORY[0x1E0DC19F8]);

}

id sub_1BA4CB430()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_dataProvider);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, sel_isRawFileConsumable);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1BA4CB48C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  FCCurrentQoSOrUtilityIfMain();
  v1 = (id)FCDispatchQueueForQualityOfService();
  v0[4] = v1;
  v2 = swift_task_alloc();
  v0[5] = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_1BA4B7264;
  v4 = v0[2];
  v3 = (_QWORD *)v0[3];
  *(_QWORD *)(v2 + 1624) = v3;
  *(_QWORD *)(v2 + 1576) = v1;
  *(_BYTE *)(v2 + 1784) = 0;
  *(_QWORD *)(v2 + 1528) = v4;
  *(_QWORD *)(v2 + 1672) = *v3;
  return swift_task_switch();
}

uint64_t sub_1BA4CB518()
{
  return swift_initClassMetadata2();
}

void sub_1BA4CB55C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  void *v10;
  void *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v10 = &unk_1BB894C28;
  v11 = &unk_1BB894C28;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v12 = &v9;
    swift_getTupleTypeLayout2();
    v13 = &v8;
    swift_getTupleTypeLayout2();
    v14 = &v7;
    swift_getTupleTypeLayout2();
    v1 = MEMORY[0x1E0DE9D18] + 64;
    v15 = &v6;
    v16 = MEMORY[0x1E0DE9D18] + 64;
    v17 = MEMORY[0x1E0DE9D18] + 64;
    v18 = MEMORY[0x1E0DE9D18] + 64;
    v19 = MEMORY[0x1E0DE9D18] + 64;
    v20 = MEMORY[0x1E0DE9D18] + 64;
    v21 = MEMORY[0x1E0DE9D18] + 64;
    swift_getTupleTypeLayout2();
    v22 = &v5;
    swift_getTupleTypeLayout2();
    v23 = &v4;
    v24 = v1;
    v25 = v1;
    v26 = v1;
    v27 = v1;
    v28 = v1;
    v29 = v1;
    v30 = v1;
    v31 = v1;
    v32 = v1;
    v33 = v1;
    v34 = v1;
    v35 = v1;
    sub_1BA4A3FB4(319, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
    if (v3 <= 0x3F)
    {
      v36 = *(_QWORD *)(v2 - 8) + 64;
      v37 = v36;
      v38 = &unk_1BB894C58;
      v39 = v1;
      v40 = v1;
      v41 = v1;
      v42 = v1;
      v43 = MEMORY[0x1E0DE9D48] + 64;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t FeedCursorTracker.snapshot()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v16;

  v2 = v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v16 - v8;
  sub_1BB86DD20();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), AssociatedTypeWitness);
  v10 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104));
  swift_beginAccess();
  v11 = *v10;
  v12 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  swift_beginAccess();
  v13 = *v12;
  v14 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112));
  swift_beginAccess();
  sub_1BA4A6748((uint64_t)v9, v11, v13, *v14, v5, v4, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BB86DD2C();
}

uint64_t sub_1BA4CB9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = a2;
  v14 = a3;
  v15 = a4;
  v12 = a4;
  KeyPath = swift_getKeyPath();
  v5 = sub_1BB872EE0();
  v6 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v5);
  v8 = sub_1BAA52384((void (*)(char *, char *))sub_1BA82DB50, (uint64_t)v11, v5, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v6, MEMORY[0x1E0DEDD18], v7);
  swift_release();
  sub_1BA6E43EC(v8);
  swift_bridgeObjectRelease();
  v17 = a1;
  swift_getTupleTypeMetadata2();
  sub_1BB872E68();
  v16 = sub_1BB8727CC();
  v9 = sub_1BB872814();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D0], v9);
  sub_1BB872C40();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1BA4CBB2C()
{
  sub_1BA4CBBD4();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4CBB78()
{
  sub_1BA4CBBD4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4CBBD4()
{
  unint64_t result;

  result = qword_1ED3CC090;
  if (!qword_1ED3CC090)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0B30, &_s10CodingTypeON_175);
    atomic_store(result, (unint64_t *)&qword_1ED3CC090);
  }
  return result;
}

uint64_t sub_1BA4CBC18()
{
  sub_1BA4CBC74();
  return sub_1BB872D60();
}

unint64_t sub_1BA4CBC74()
{
  unint64_t result;

  result = qword_1ED3C6B80;
  if (!qword_1ED3C6B80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1E40, &_s10CodingTypeON_166);
    atomic_store(result, (unint64_t *)&qword_1ED3C6B80);
  }
  return result;
}

uint64_t sub_1BA4CBCB8()
{
  sub_1BA4CBD14();
  return sub_1BB872D60();
}

unint64_t sub_1BA4CBD14()
{
  unint64_t result;

  result = qword_1ED3A5930;
  if (!qword_1ED3A5930)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7AF0, &_s6ActionO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A5930);
  }
  return result;
}

uint64_t sub_1BA4CBD58@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;

  objc_msgSend(a1, sel_possiblyUnfetchedAppConfiguration);
  swift_getAtKeyPath();
  result = swift_unknownObjectRelease();
  v4 = v5;
  if (v6)
    v4 = 0;
  *a2 = v4;
  return result;
}

uint64_t sub_1BA4CBDD0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(void **)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1BA6DB13C(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

id sub_1BA4CBE4C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v5;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_blackColor);
  v2 = objc_msgSend(v0, sel_whiteColor);
  v3 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v1, v2);

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.490196078, 0.498039216, 0.498039216, 1.0);
  qword_1ED3B4500 = (uint64_t)v5;
  *(_QWORD *)algn_1ED3B4508 = v5;
  return v5;
}

void sub_1BA4CBF28(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v4 = *v2;
  v5 = *v2 + OBJC_IVAR____TtC8NewsFeed27SocialLayerSharedItemCenter_delegate;
  swift_beginAccess();
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  sub_1BB86E71C();
  objc_msgSend(v6, sel_setDelegate_, v4);
  swift_unknownObjectRelease();

}

uint64_t sub_1BA4CBFC4()
{
  sub_1BA4CC020();
  return sub_1BB872D60();
}

unint64_t sub_1BA4CC020()
{
  unint64_t result;

  result = qword_1ED3B5F68;
  if (!qword_1ED3B5F68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAlignment, &type metadata for FormatTextAlignment);
    atomic_store(result, (unint64_t *)&qword_1ED3B5F68);
  }
  return result;
}

uint64_t sub_1BA4CC064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1BB86E7E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86E104();
  sub_1BA8346AC(0, v4, v5, v6);
  sub_1BB86E5D8();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A08], v0);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BA4CC148(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C616D726F6ELL;
  else
    v3 = 7827308;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6C616D726F6ELL;
  else
    v5 = 7827308;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t FormatAnimationNodeStyle.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4CC21C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v4 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39C8);
  result = sub_1BB86DF48();
  if (v11)
  {
    v6 = type metadata accessor for FeedNativeAdManager();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 64) = MEMORY[0x1E0DEE9D8];
    sub_1BB86DD38();
    sub_1BB86DD5C();
    swift_allocObject();
    v8 = sub_1BB86DD50();
    v9 = MEMORY[0x1E0DEE9E8];
    *(_QWORD *)(v7 + 72) = v8;
    *(_QWORD *)(v7 + 80) = v9;
    *(_BYTE *)(v7 + 88) = 0;
    result = sub_1BA4CECCC(&v10, v7 + 16);
    *(_BYTE *)(v7 + 56) = 0;
    a2[3] = v6;
    a2[4] = (uint64_t)&protocol witness table for FeedNativeAdManager;
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA4CC358(void (*a1)())
{
  sub_1BB86DD5C();
  sub_1BA81DB7C(0);
  swift_retain();
  sub_1BB86E758();
  swift_release();
  a1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4CC40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v0 = sub_1BB86BE54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BA6E43EC(MEMORY[0x1E0DEE9D8]);
  sub_1BB86D294();
  sub_1BB86D27C();
  if (qword_1ED3C4530 != -1)
    swift_once();
  sub_1BB86D270();
  swift_release();
  if (v14 == 1)
  {
    sub_1BA6EE5AC((uint64_t *)&v14, 0xD000000000000022, 0x80000001BB96C930);
    swift_bridgeObjectRelease();
    sub_1BB86D27C();
    if (qword_1EF2A6CF8 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    v17 = v14;
    sub_1BA7114A0();
    v4 = sub_1BB873B4C();
    swift_bridgeObjectRelease();
    v12 = v4;
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v6 = (uint64_t *)(v12 + 56);
      do
      {
        v13 = *(_OWORD *)(v6 - 3);
        v8 = *(v6 - 1);
        v7 = *v6;
        *(_QWORD *)&v14 = 0;
        *((_QWORD *)&v14 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1BB873CB4();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v17 = 0xD00000000000001ALL;
        *((_QWORD *)&v17 + 1) = 0x80000001BB96C960;
        v14 = v13;
        v15 = v8;
        v16 = v7;
        sub_1BB86BE00();
        sub_1BAB222A8();
        sub_1BB873AEC();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        swift_bridgeObjectRelease();
        sub_1BB872A0C();
        swift_bridgeObjectRelease();
        sub_1BB872AFC(v9);
        swift_bridgeObjectRelease();
        sub_1BA6EE5AC((uint64_t *)&v14, v17, *((uint64_t *)&v17 + 1));
        swift_bridgeObjectRelease();
        v6 += 4;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t sub_1BA4CC6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 16);
  v5 = *(_BYTE *)(v0 + 64);
  swift_beginAccess();
  v6 = *(_QWORD *)(v0 + 72);
  v13 = *(_DWORD *)(v0 + 80);
  v12 = *(_BYTE *)(v0 + 84);
  swift_beginAccess();
  v7 = *(_QWORD *)(v0 + 88);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 72) = 0;
  swift_beginAccess();
  *(_QWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 24) = v1;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v2;
  *(_QWORD *)(v8 + 48) = v4;
  *(_QWORD *)(v8 + 56) = v10;
  *(_BYTE *)(v8 + 64) = v5;
  swift_beginAccess();
  *(_QWORD *)(v8 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 84) = v12;
  *(_DWORD *)(v8 + 80) = v13;
  swift_beginAccess();
  *(_QWORD *)(v8 + 88) = v7;
  return v8;
}

uint64_t sub_1BA4CC82C()
{
  sub_1BA4CC888();
  return sub_1BB872D60();
}

unint64_t sub_1BA4CC888()
{
  unint64_t result;

  result = qword_1ED3B5668;
  if (!qword_1ED3B5668)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolWeight, &type metadata for FormatSymbolWeight);
    atomic_store(result, (unint64_t *)&qword_1ED3B5668);
  }
  return result;
}

uint64_t sub_1BA4CC8CC()
{
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  return swift_release();
}

uint64_t sub_1BA4CC954()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4CC97C + 4 * byte_1BB8AE5C1[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1BA4CC97C()
{
  return 1702521203;
}

uint64_t sub_1BA4CC988()
{
  return 0x676E696C616373;
}

uint64_t sub_1BA4CC9A0()
{
  return 1885433183;
}

uint64_t sub_1BA4CC9AC(uint64_t *a1, char *a2, void *a3, uint64_t a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t *v18;
  uint64_t **v19;
  uint64_t v20;
  __int128 v22;
  char v23;
  uint64_t v24;
  char v25;

  v6 = v5;
  v9 = *v5;
  v10 = *a1;
  v24 = a1[3];
  v23 = *((_BYTE *)a1 + 32);
  v25 = *a2;
  *(_QWORD *)((char *)v5 + qword_1ED3A4AB0 + 8) = 0;
  swift_unknownObjectWeakInit();
  v11 = qword_1ED3A4AC0;
  v12 = v9 + class metadata base offset for FeedPluginManager;
  v13 = *(_QWORD *)(v9 + class metadata base offset for FeedPluginManager);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = *(_QWORD *)(v12 + 16);
  type metadata accessor for FeedPluginManager.FactoryWrapper(0, v13, v14, v15);
  swift_retain();
  v22 = *(_OWORD *)(a1 + 1);
  *(_QWORD *)((char *)v6 + v11) = sub_1BB872748();
  v16 = (char *)v6 + qword_1ED3A4AA8;
  *(_QWORD *)v16 = v10;
  *(_OWORD *)(v16 + 8) = v22;
  *((_QWORD *)v16 + 3) = v24;
  v16[32] = v23;
  *((_BYTE *)v6 + qword_1ED3A4AB8) = v25;
  *(_QWORD *)((char *)v6 + qword_1ED3A4AA0) = a3;
  type metadata accessor for FormatFeedPluginFactory(0, v13, v14, v15);
  v17 = a3;
  v18 = (uint64_t *)swift_unknownObjectRetain();
  v19 = sub_1BA83E5D0(v18, a5, (uint64_t *)a3);
  swift_unknownObjectRelease();
  *(_QWORD *)((char *)v6 + qword_1ED3A4A98) = v19;
  swift_release();
  v20 = sub_1BB86F808();
  *(_QWORD *)(*(_QWORD *)(v20 + qword_1ED3A4A98) + 24) = &protocol witness table for FeedPluginManager<A>;
  swift_unknownObjectWeakAssign();
  return v20;
}

uint64_t (*sub_1BA4CCB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))(_QWORD)
{
  return sub_1BA6D7960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1BA4CCB8C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6168706C61;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x726F6C6F63;
}

uint64_t sub_1BA4CCBD8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6369676F6CLL;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x656D695465746164;
}

uint64_t sub_1BA4CCC28()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65756C6176;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_1BA4CCC70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4CCCA8 + 4 * byte_1BB8AF035[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA4CCCA8()
{
  return 0x7373616C63;
}

uint64_t sub_1BA4CCCBC()
{
  return 0x426F547370696C63;
}

uint64_t sub_1BA4CCCE0()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA4CCCFC()
{
  return 7235952;
}

uint64_t sub_1BA4CCD0C()
{
  return 0x6162726562627572;
}

uint64_t sub_1BA4CCD28()
{
  return 1885433183;
}

uint64_t sub_1BA4CCD38()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x6F756E69746E6F63;
}

uint64_t sub_1BA4CCD70()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x656C797473;
}

uint64_t sub_1BA4CCDA0()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x6F69746365726964;
}

uint64_t sub_1BA4CCDD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5DC6CC();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for FeedUserInfo()
{
  return objc_opt_self();
}

double sub_1BA4CCE2C@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  double result;
  __int128 v5;
  _OWORD v6[6];

  sub_1BA5A9620((uint64_t *)v6);
  v2 = v6[3];
  a1[2] = v6[2];
  a1[3] = v2;
  v3 = v6[5];
  a1[4] = v6[4];
  a1[5] = v3;
  result = *(double *)v6;
  v5 = v6[1];
  *a1 = v6[0];
  a1[1] = v5;
  return result;
}

uint64_t sub_1BA4CCE70()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_BYTE *)(v0 + 88);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 32) = v3;
  *(_BYTE *)(v2 + 48) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  sub_1BA52E378(0, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
  *v4 = v0;
  v4[1] = sub_1BA819538;
  return sub_1BB874518();
}

uint64_t sub_1BA4CCF3C(_QWORD *a1)
{
  return FeedGroupRepooling.encode(to:)(a1);
}

uint64_t FeedGroupRepooling.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1BA518CA0(0, &qword_1ED39C0F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA518C5C();
  sub_1BB8746C8();
  v11 = v8;
  sub_1BA4CD054();
  sub_1BB87414C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA4CD054()
{
  unint64_t result;

  result = qword_1ED39C5D8;
  if (!qword_1ED39C5D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupFreezing, &type metadata for FeedGroupFreezing);
    atomic_store(result, (unint64_t *)&qword_1ED39C5D8);
  }
  return result;
}

uint64_t sub_1BA4CD098(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(void))
{
  a2(0);
  swift_allocObject();
  return a3();
}

uint64_t sub_1BA4CD0D0()
{
  sub_1BA4CD178();
  return sub_1BB872D60();
}

uint64_t sub_1BA4CD12C()
{
  sub_1BA4CD178();
  return sub_1BB872D0C();
}

unint64_t sub_1BA4CD178()
{
  unint64_t result;

  result = qword_1ED3C75F8;
  if (!qword_1ED3C75F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B40C8, &_s10CodingTypeON_147);
    atomic_store(result, (unint64_t *)&qword_1ED3C75F8);
  }
  return result;
}

uint64_t sub_1BA4CD1BC()
{
  sub_1BA4CD264();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4CD208()
{
  sub_1BA4CD264();
  return sub_1BB872D60();
}

unint64_t sub_1BA4CD264()
{
  unint64_t result;

  result = qword_1ED3B66B0;
  if (!qword_1ED3B66B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9152CC, &_s14descr1E730C861C7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3B66B0);
  }
  return result;
}

uint64_t FeedServiceOptions.Database.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;

  v36 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BA4CDF6C(0, &qword_1ED3A30D8, (uint64_t (*)(void))sub_1BA83B738, (uint64_t)&type metadata for FeedServiceOptions.Database.OfflineCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v35 = v4;
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v30 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3A30D0, (uint64_t (*)(void))sub_1BA83B80C, (uint64_t)&type metadata for FeedServiceOptions.Database.DefaultCodingKeys, v3);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v30 - v7;
  sub_1BA4CDF6C(0, &qword_1ED3A30C8, (uint64_t (*)(void))sub_1BA83B8E0, (uint64_t)&type metadata for FeedServiceOptions.Database.NoneCodingKeys, v3);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - v9;
  sub_1BA4CDF6C(0, &qword_1ED3A30C0, (uint64_t (*)(void))sub_1BA83BA2C, (uint64_t)&type metadata for FeedServiceOptions.Database.CodingKeys, v3);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v30 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA83BA2C();
  v16 = v39;
  sub_1BB87468C();
  if (!v16)
  {
    v17 = v37;
    v18 = v38;
    v39 = v13;
    v19 = v15;
    v20 = sub_1BB8740EC();
    if (*(_QWORD *)(v20 + 16) == 1)
    {
      v21 = *(unsigned __int8 *)(v20 + 32);
      if (*(_BYTE *)(v20 + 32))
      {
        v31 = v20;
        if (v21 == 1)
        {
          v41 = 1;
          sub_1BA83B80C();
          sub_1BB873FFC();
          v22 = v36;
          v23 = v39;
          (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v34);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v12);
          *v22 = 1;
        }
        else
        {
          v42 = 2;
          sub_1BA83B738();
          sub_1BB873FFC();
          v28 = v36;
          v29 = v39;
          v37 = 0;
          (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v35);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v12);
          *v28 = v21;
        }
      }
      else
      {
        v40 = 0;
        sub_1BA83B8E0();
        sub_1BB873FFC();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v12);
        *v36 = v21;
      }
    }
    else
    {
      v24 = sub_1BB873D68();
      swift_allocError();
      v26 = v25;
      sub_1BA909FB4();
      *v26 = &type metadata for FeedServiceOptions.Database;
      sub_1BB874008();
      sub_1BB873D38();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x1E0DEC450], v24);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v12);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FeedServiceOptions.RootCursorSource.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  _QWORD v34[4];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;

  v48 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BA4CDF6C(0, &qword_1ED3A3080, (uint64_t (*)(void))sub_1BA83C30C, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.NetworkOnlyCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x1E0C80A78](v4);
  v46 = (char *)v34 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3A30A0, (uint64_t (*)(void))sub_1BA83BFBC, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseDateIntervalCodingKeys, v3);
  v52 = v6;
  v42 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v47 = (char *)v34 - v7;
  sub_1BA4CDF6C(0, &qword_1ED3A3098, (uint64_t (*)(void))sub_1BA83C090, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseMaxAgeCodingKeys, v3);
  v39 = v8;
  v51 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v45 = (char *)v34 - v9;
  sub_1BA4CDF6C(0, &qword_1ED3A3090, (uint64_t (*)(void))sub_1BA83C164, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseCodingKeys, v3);
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  MEMORY[0x1E0C80A78](v10);
  v44 = (char *)v34 - v11;
  sub_1BA4CDF6C(0, &qword_1ED3A3088, (uint64_t (*)(void))sub_1BA83C238, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.DatabaseOnlyCodingKeys, v3);
  v50 = v12;
  v36 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v43 = (char *)v34 - v13;
  sub_1BA4CDF6C(0, &qword_1ED3A3078, (uint64_t (*)(void))sub_1BA83C40C, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.CodingKeys, v3);
  v53 = v14;
  v49 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v34 - v15;
  v17 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v34 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v34 - v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA83C40C();
  v26 = v54;
  sub_1BB87468C();
  v27 = (uint64_t)a1;
  if (!v26)
  {
    v34[0] = v22;
    v34[1] = v19;
    v34[3] = 0;
    v34[2] = v25;
    v35 = v17;
    v54 = a1;
    v28 = v53;
    v29 = sub_1BB8740EC();
    if (*(_QWORD *)(v29 + 16) == 1)
      __asm { BR              X10 }
    v30 = sub_1BB873D68();
    swift_allocError();
    v32 = v31;
    sub_1BA909FB4();
    *v32 = v35;
    sub_1BB874008();
    sub_1BB873D38();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x1E0DEC450], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v28);
    v27 = (uint64_t)v54;
  }
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

void sub_1BA4CDF6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_1BA4CDFC8()
{
  sub_1BA4CDFE8();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4CDFE8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t destroy for FormatSupplementaryNodeStyle.Selector(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 34) != 255)
  {
    v3 = *(unsigned __int16 *)(a1 + 32) | (*(unsigned __int8 *)(a1 + 34) << 16);
    return sub_1BA77A170(*(_QWORD *)(a1 + 24), v3, SBYTE2(v3), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
  }
  return result;
}

uint64_t sub_1BA4CE06C()
{
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F088();
  swift_allocObject();
  return sub_1BB86F0A0();
}

uint64_t destroy for CoverChannelViewLayout()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t destroy for FormatProcessedColor()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4CE214()
{
  sub_1BA4CE2BC();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4CE260()
{
  sub_1BA4CE2BC();
  return sub_1BB872D60();
}

unint64_t sub_1BA4CE2BC()
{
  unint64_t result;

  result = qword_1ED3CDF70;
  if (!qword_1ED3CDF70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD338, &_s10CodingTypeON_54);
    atomic_store(result, (unint64_t *)&qword_1ED3CDF70);
  }
  return result;
}

uint64_t sub_1BA4CE300()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BA4CE33C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4CE3B4()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F5320);
  return sub_1BB872D0C();
}

uint64_t sub_1BA4CE408()
{
  return swift_initClassMetadata2();
}

_QWORD *_s8NewsFeed41FormatButtonNodeStateMaskLayoutAttributesVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t FeedCursorTracker.markSeen(group:sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  _QWORD *v66;
  uint64_t v67[2];

  v5 = v4;
  v60 = a3;
  v58 = a2;
  v64 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  v8 = type metadata accessor for FeedCursorTrackerGroup(255, v6, v7, a4);
  v9 = sub_1BB873A2C();
  MEMORY[0x1E0C80A78](v9);
  v61 = (char *)&v55 - v10;
  v11 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v11);
  v56 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v59 = v6;
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v55 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)&v55 - v14;
  v62 = *(_QWORD *)(v8 - 8);
  v63 = v8;
  MEMORY[0x1E0C80A78](v16);
  v65 = (uint64_t *)((char *)&v55 - v17);
  sub_1BB86DD20();
  v18 = (uint64_t *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  swift_beginAccess();
  v19 = *v18;
  v57 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  swift_bridgeObjectRetain();
  v20 = v64;
  v21 = sub_1BB86DEE8();
  v23 = sub_1BA761FE4(v21, v22, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    return sub_1BB86DD2C();
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v15, v20, AssociatedTypeWitness);
  v24 = v60;
  swift_bridgeObjectRetain();
  v25 = (uint64_t)v56;
  sub_1BB86C8A4();
  sub_1BB6565B0((uint64_t)v15, v58, v24, v25, v59, v7, v65);
  v26 = sub_1BB86DEE8();
  v28 = v27;
  swift_beginAccess();
  sub_1BA6EE5AC(v67, v26, v28);
  swift_endAccess();
  swift_bridgeObjectRelease();
  v29 = sub_1BB86DEE8();
  v31 = v30;
  v32 = v61;
  v33 = v62;
  v34 = v65;
  v35 = v63;
  (*(void (**)(char *, uint64_t *, uint64_t))(v62 + 16))(v61, v65, v63);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v32, 0, 1, v35);
  v67[0] = v29;
  v67[1] = v31;
  swift_beginAccess();
  sub_1BB872814();
  sub_1BB872838();
  swift_endAccess();
  v36 = (*(uint64_t (**)(uint64_t))(v57 + 32))(AssociatedTypeWitness);
  v37 = v35;
  v38 = v33;
  if (!(v36 >> 62))
  {
    v39 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v39)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease();
    v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_15:
    swift_beginAccess();
    v51 = v42[2];
    if (v51)
    {
      v52 = v42 + 5;
      do
      {
        v53 = *(v52 - 1);
        v54 = *v52;
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC(v67, v53, v54);
        swift_bridgeObjectRelease();
        v52 += 2;
        --v51;
      }
      while (v51);
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    (*(void (**)(uint64_t *, uint64_t))(v38 + 8))(v34, v37);
    return sub_1BB86DD2C();
  }
  v39 = sub_1BB873F30();
  if (!v39)
    goto LABEL_14;
LABEL_4:
  v66 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  result = sub_1BA7447E8(0, v39 & ~(v39 >> 63), 0);
  if ((v39 & 0x8000000000000000) == 0)
  {
    v64 = v5;
    v41 = 0;
    v42 = v66;
    do
    {
      if ((v36 & 0xC000000000000001) != 0)
      {
        v43 = (void *)MEMORY[0x1BCCE4630](v41, v36);
      }
      else
      {
        v43 = *(void **)(v36 + 8 * v41 + 32);
        swift_unknownObjectRetain();
      }
      v44 = objc_msgSend(v43, sel_itemID);
      v45 = sub_1BB8729A0();
      v47 = v46;
      swift_unknownObjectRelease();

      v66 = v42;
      v49 = v42[2];
      v48 = v42[3];
      if (v49 >= v48 >> 1)
      {
        sub_1BA7447E8(v48 > 1, v49 + 1, 1);
        v42 = v66;
      }
      ++v41;
      v42[2] = v49 + 1;
      v50 = &v42[2 * v49];
      v50[4] = v45;
      v50[5] = v47;
    }
    while (v39 != v41);
    swift_bridgeObjectRelease();
    v37 = v63;
    v38 = v62;
    v34 = v65;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4CEA20(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4CEA58 + 4 * byte_1BB8AE2AA[a1]))(0x756C61566D6F7266, 0xE900000000000065);
}

uint64_t sub_1BA4CEA58()
{
  return 0x65756C61566F74;
}

uint64_t sub_1BA4CEA70()
{
  return 0x65756C61567962;
}

uint64_t sub_1BA4CEA8C()
{
  return 1885433183;
}

uint64_t FormatFeedGroup.personalizingItems.getter()
{
  type metadata accessor for FormatFeedGroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA4CEABC(char a1)
{
  if ((a1 & 1) != 0)
    return 1885433183;
  else
    return 0x7365756C6176;
}

uint64_t sub_1BA4CEAE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4CEB14();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4CEB14()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

void sub_1BA4CEB5C(_QWORD *a1)
{
  FormatButtonNodeAction.encode(to:)(a1);
}

uint64_t sub_1BA4CEB70()
{
  unsigned __int8 *v0;

  return sub_1BADB9494(*v0);
}

uint64_t sub_1BA4CEB78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for GroupLayoutContext() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BA619904(v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_1BA4CEBD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t SharingActivityItemFactory.init(commandCenter:shareLinkProvider:shareLinkTextProvider:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v4 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BA4CECCC(a3, v4 + 32);
  sub_1BA4CECCC(a4, v4 + 72);
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(_QWORD *)(v4 + 192) = 0;
  return v4;
}

uint64_t sub_1BA4CECCC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_QWORD *assignWithTake for PuzzleStatsState(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1BA4CED70()
{
  return swift_initClassMetadata2();
}

void sub_1BA4CEDE4(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA4CEE3C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA4CEEE4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  unint64_t v3;

  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1BB86F0F4();
  swift_release();
  sub_1BB86F100();
  result = swift_release();
  if (v0)
    return result;
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  sub_1BB86F22C();
  result = swift_release();
  if (v3 >> 60 == 15)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  swift_getAssociatedTypeWitness();
  sub_1BB86E290();
  return sub_1BA69D490(v2, v3);
}

_QWORD *WebEmbedManager.init(resolver:)(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1[3] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for WebEmbedCache();
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEE9E0];
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v3 + 24) = v5;
  *(_QWORD *)(v3 + 64) = 0;
  *(_OWORD *)(v3 + 32) = xmmword_1BB8F7B50;
  *(_QWORD *)(v3 + 48) = 27;
  *(_BYTE *)(v3 + 56) = 1;
  v1[9] = v3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  *(_QWORD *)(v6 + 64) = 0;
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 32) = 2;
  *(_BYTE *)(v6 + 56) = 0;
  v1[10] = v6;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v5;
  *(_QWORD *)(v7 + 64) = 0;
  *(_QWORD *)(v7 + 40) = 0;
  *(_QWORD *)(v7 + 48) = 0;
  *(_QWORD *)(v7 + 32) = 1;
  *(_BYTE *)(v7 + 56) = 0;
  v1[11] = v7;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = v5;
  *(_QWORD *)(v8 + 64) = 0;
  *(_QWORD *)(v8 + 40) = 0;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v8 + 32) = 2;
  *(_BYTE *)(v8 + 56) = 0;
  v1[12] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v5;
  *(_QWORD *)(v9 + 64) = 0;
  *(_QWORD *)(v9 + 40) = 0;
  *(_QWORD *)(v9 + 48) = 0;
  *(_QWORD *)(v9 + 32) = 1;
  *(_BYTE *)(v9 + 56) = 0;
  v1[13] = v9;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v4;
  *(_QWORD *)(v10 + 24) = v5;
  *(_QWORD *)(v10 + 64) = 0;
  *(_QWORD *)(v10 + 40) = 0;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v10 + 32) = 2;
  *(_BYTE *)(v10 + 56) = 0;
  v1[14] = v10;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = v5;
  *(_QWORD *)(v11 + 64) = 0;
  *(_QWORD *)(v11 + 40) = 0;
  *(_QWORD *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 32) = 2;
  *(_BYTE *)(v11 + 56) = 0;
  v1[15] = v11;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v4;
  *(_QWORD *)(v12 + 24) = v5;
  *(_QWORD *)(v12 + 64) = 0;
  *(_QWORD *)(v12 + 40) = 0;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v12 + 32) = 2;
  *(_BYTE *)(v12 + 56) = 0;
  v13 = MEMORY[0x1E0DEE9E8];
  v1[16] = v12;
  v1[17] = v13;
  v1[18] = v4;
  sub_1BA4CECCC(a1, (uint64_t)(v1 + 4));
  return v1;
}

id SocialLayerSharedItemCenter.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  char *v4;
  objc_super v6;
  uint64_t v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_1BB86DE7C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  MEMORY[0x1E0C80A78](v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed27SocialLayerSharedItemCenter_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v7 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870(&qword_1ED3B07A0, v3, MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  v4 = v0;
  sub_1BB873BC4();
  sub_1BA841628();
  swift_allocObject();
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed27SocialLayerSharedItemCenter_lazyHighlightCenter] = sub_1BB86E740();

  v6.receiver = v4;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_1BA4CF37C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  CFTimeInterval v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  double v12;

  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  v7 = CACurrentMediaTime();
  v8 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v6 + 64) = v8;
  *(CFTimeInterval *)(v6 + 32) = (v7 - a3) * 1000.0;
  sub_1BB87330C();
  sub_1BB86EF44("Service successfully fetched feed pool, elapsed time=%fms", v12);
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_1BA4CF514()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4CF580()
{
  sub_1BA4CF628();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4CF5CC()
{
  sub_1BA4CF628();
  return sub_1BB872D60();
}

unint64_t sub_1BA4CF628()
{
  unint64_t result;

  result = qword_1ED3C9900;
  if (!qword_1ED3C9900)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A818, &_s14descr1E728F061C5ColorO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C9900);
  }
  return result;
}

uint64_t destroy for FormatGroupCollection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4CF69C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1BB873A2C();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

double sub_1BA4CF774@<D0>(uint64_t *a1@<X8>)
{
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  double result;

  v2 = MEMORY[0x1E0DED1E8];
  sub_1BA4AD288(0, &qword_1ED3C1DF0, (uint64_t)&type metadata for FeedEditionConfig.FetchWindow, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87D7A0;
  *(_QWORD *)(v3 + 32) = &unk_1E724C998;
  *(_QWORD *)(v3 + 40) = 6;
  *(_BYTE *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_BYTE *)(v3 + 64) = 1;
  *(_QWORD *)(v3 + 72) = 20;
  *(_BYTE *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  *(_BYTE *)(v3 + 96) = 1;
  *(_QWORD *)(v3 + 104) = &unk_1E724CA78;
  *(_QWORD *)(v3 + 112) = 0;
  *(_BYTE *)(v3 + 120) = 1;
  *(_QWORD *)(v3 + 128) = -1;
  *(_BYTE *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 4;
  *(_BYTE *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 160) = 0;
  *(_BYTE *)(v3 + 168) = 1;
  *(_QWORD *)(v3 + 176) = &unk_1E724CAD8;
  *(_QWORD *)(v3 + 184) = 0;
  *(_BYTE *)(v3 + 192) = 1;
  *(_QWORD *)(v3 + 200) = -1;
  *(_BYTE *)(v3 + 208) = 0;
  *(_QWORD *)(v3 + 216) = 12;
  *(_BYTE *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_BYTE *)(v3 + 240) = 1;
  *(_QWORD *)(v3 + 248) = &unk_1E724CB38;
  *(_QWORD *)(v3 + 256) = 0;
  *(_BYTE *)(v3 + 264) = 1;
  *(_QWORD *)(v3 + 272) = 0;
  *(_BYTE *)(v3 + 280) = 1;
  *(_QWORD *)(v3 + 288) = 0;
  *(_BYTE *)(v3 + 296) = 1;
  *(_QWORD *)(v3 + 304) = -24;
  *(_BYTE *)(v3 + 312) = 0;
  sub_1BA4AD288(0, &qword_1ED3C1DF8, (uint64_t)&type metadata for FeedEditionConfig.RepoolInterval, (uint64_t (*)(_QWORD, uint64_t))v2);
  v4 = swift_allocObject();
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v4 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v4 + 32) = &unk_1E724CB98;
  *(_QWORD *)(v4 + 40) = 205200;
  *(_QWORD *)(v4 + 48) = &unk_1E724CC78;
  *(_QWORD *)(v4 + 56) = 86400;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

void sub_1BA4CF8F4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BB873A2C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BA4CF938()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(*v0 + 80);
  v1 = *(_QWORD *)(*v0 + 88);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 80);
  v5 = swift_checkMetadataState();
  v4(v5, AssociatedConformanceWitness);
  v6 = v0[4];
  sub_1BA7AA598();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  type metadata accessor for FeedPoolManager.Key(0, v2, v1, v8);
  v9 = sub_1BA4E48E4();
  v11 = v10;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v11;
  v12 = sub_1BB87330C();
  sub_1BB86EF44("Feed pool requested for key=%{public}@", 38, 2, &dword_1BA493000, v6, v12, v7);
  swift_bridgeObjectRelease();
  v13 = sub_1BB86E0EC();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t type metadata accessor for FeedItemRendererTool()
{
  return objc_opt_self();
}

uint64_t sub_1BA4CFB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + 15;
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((v3 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1BA4CFB6C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BAEB6C4C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1BA4CFB94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4608)
  {
    sub_1BA82C908();
    sub_1BA82C9D4();
    sub_1BA82C990();
    v0 = sub_1BB86DD14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4608);
  }
}

uint64_t sub_1BA4CFC14()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4CFC8C()
{
  return sub_1BB874470();
}

void sub_1BA4CFCA0(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  uint64_t v12;
  unsigned __int8 v13;
  id v14;
  id v15;
  id v16;
  _QWORD *v17;
  void *v18;
  _QWORD v19[6];

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = objc_msgSend(a5, sel_respondsToSelector_, sel_fetchedAppConfiguration);
  swift_retain();
  if ((v13 & 1) != 0
    && (v14 = objc_msgSend(a5, sel_fetchedAppConfiguration)) != 0)
  {
    v15 = v14;
    swift_release();
    v19[0] = v15;
    a1(v19);
    swift_unknownObjectRelease();
  }
  else if ((a6 & 1) != 0)
  {
    swift_release();
    v19[0] = objc_msgSend(a5, sel_possiblyUnfetchedAppConfiguration);
    a1(v19);
    swift_unknownObjectRelease();
  }
  else
  {
    FCCurrentQoS();
    v16 = (id)FCDispatchQueueForQualityOfService();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = sub_1BAAAC18C;
    v17[3] = v12;
    v17[4] = a3;
    v17[5] = a4;
    v19[4] = sub_1BAAAC050;
    v19[5] = v17;
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 1107296256;
    v19[2] = sub_1BAAABB6C;
    v19[3] = &block_descriptor_17;
    v18 = _Block_copy(v19);
    swift_retain();
    swift_release();
    objc_msgSend(a5, sel_fetchAppConfigurationIfNeededWithCompletionQueue_completion_, v16, v18);
    _Block_release(v18);

  }
}

uint64_t sub_1BA4CFE74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[16];

  sub_1BA841768(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1BB86E0A4();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB86D294();
  sub_1BB86D27C();
  if (qword_1ED3C3FD0 != -1)
    swift_once();
  sub_1BB86D270();
  swift_release();
  if (v14[15] == 1)
  {
    if (qword_1ED3C43B0 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED3C0B18);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
    sub_1BB86EB6C();
    v11 = sub_1BB86E3A4();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
    sub_1BB86EB60();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    if (qword_1ED3C43B0 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED3C0B18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, v13, v6);
  }
}

uint64_t FeedLayoutContext.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FormatContent.Resolved.subgroups.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA4D00E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8720DC();
  result = sub_1BB86DF0C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, (unint64_t *)&unk_1ED3D2F00);
    result = sub_1BB86DF18();
    if (v7)
    {
      v5 = sub_1BB872070();
      swift_allocObject();
      result = sub_1BB872064();
      v6 = MEMORY[0x1E0D534F8];
      a2[3] = v5;
      a2[4] = v6;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4D020C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  char v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA81D390();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatSystemFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v4 = result;
  sub_1BB86D294();
  sub_1BB86D27C();
  if (qword_1ED3D5158 != -1)
    swift_once();
  sub_1BB86D270();
  swift_release();
  type metadata accessor for FormatDecorationProviderFactory();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v4;
  *(_BYTE *)(result + 32) = 0;
  *(_BYTE *)(result + 33) = v5;
  *(_OWORD *)(result + 40) = 0u;
  *(_OWORD *)(result + 56) = 0u;
  *(_OWORD *)(result + 72) = 0u;
  *(_QWORD *)(result + 88) = 0;
  return result;
}

uint64_t sub_1BA4D0338@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, &qword_1ED3D39D0);
    result = sub_1BB86DF48();
    if (v9)
    {
      v6 = type metadata accessor for SportsDataConfigurationService();
      v7 = swift_allocObject();
      sub_1BB86DC9C();
      swift_allocObject();
      *(_QWORD *)(v7 + 64) = sub_1BB86DC90();
      *(_QWORD *)(v7 + 16) = v5;
      result = sub_1BA4CECCC(&v8, v7 + 24);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1E727F5F8;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4D0460@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  _BYTE v22[24];
  uint64_t v23;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4128);
  result = sub_1BB86DF48();
  if (v23)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA84136C();
    result = sub_1BB86DF3C();
    if (result)
    {
      v5 = result;
      v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      v7 = MEMORY[0x1E0C80A78](v6);
      v9 = (_QWORD *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
      v11 = *v9;
      v12 = type metadata accessor for LayeredMediaVariantFactory();
      v21[3] = v12;
      v21[4] = &off_1E728D238;
      v21[0] = v11;
      v13 = type metadata accessor for LayeredMediaLayerProviderFactory();
      v14 = (_QWORD *)swift_allocObject();
      v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v12);
      v16 = MEMORY[0x1E0C80A78](v15);
      v18 = (_QWORD *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      v20 = *v18;
      v14[5] = v12;
      v14[6] = &off_1E728D238;
      v14[2] = v20;
      v14[7] = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      a2[3] = v13;
      a2[4] = &protocol witness table for LayeredMediaLayerProviderFactory;
      *a2 = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BA4D0644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;

  v7 = sub_1BB86DD44();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8];
  MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0DEE9D8];
  v3[2] = MEMORY[0x1E0DEE9E8];
  v3[3] = v9;
  sub_1BA4B07F0(0, &qword_1ED3CFB28, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
  sub_1BB86DD38();
  sub_1BA4A2870((unint64_t *)&qword_1ED3BBE30, v8, MEMORY[0x1E0DB3208]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C02E0, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA59C024();
  sub_1BB873BC4();
  sub_1BB86DD5C();
  swift_allocObject();
  v10 = sub_1BB86DD50();
  v3[4] = a1;
  v3[5] = a2;
  v3[6] = a3;
  v3[7] = v10;
  return v3;
}

uint64_t sub_1BA4D07C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  return FormatFileReferenceCollection.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t FormatTextLineBreakMode.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[5];
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v23[4] = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v23[3] = (char *)v23 - v6;
  MEMORY[0x1E0C80A78](v7);
  v23[2] = (char *)v23 - v8;
  MEMORY[0x1E0C80A78](v9);
  v23[1] = (char *)v23 - v10;
  MEMORY[0x1E0C80A78](v11);
  v23[0] = (char *)v23 - v12;
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v23 - v15;
  v24 = *v1;
  v25 = a1;
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v26;
  sub_1BA69F160((uint64_t)v16, (uint64_t)sub_1BA90CF04, 0, v17, v18);
  if (!v21)
  {
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
}

uint64_t FormatSizeConstraint.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;
  _BYTE v26[24];
  uint64_t v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v23 = (char *)&v21 - v6;
  MEMORY[0x1E0C80A78](v7);
  v22 = (char *)&v21 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  v25 = *v1;
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v14 = sub_1BB86EB84();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED476C08);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16(v11, v15, v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v17 = v28;
  sub_1BA69F160((uint64_t)v11, (uint64_t)sub_1BA90CF04, 0, v12, v13);
  result = sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  if (!v17)
  {
    v19 = a1[3];
    v28 = a1[4];
    if (v25)
    {
      __swift_project_boxed_opaque_existential_1(a1, v19);
      v20 = (uint64_t)v23;
      v16(v23, v15, v14);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(a1, v19);
      v20 = (uint64_t)v22;
      v16(v22, v15, v14);
    }
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v20, (uint64_t)sub_1BA90CF04, 0, v19, v28);
    sub_1BA4A2E80(v20, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    sub_1BB8743E0();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  return result;
}

uint64_t FormatFlexibleExpression.Direction.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;
  _BYTE v26[24];
  uint64_t v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v23 = (char *)&v21 - v6;
  MEMORY[0x1E0C80A78](v7);
  v22 = (char *)&v21 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  v25 = *v1;
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v14 = sub_1BB86EB84();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED476C20);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16(v11, v15, v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v17 = v28;
  sub_1BA69F160((uint64_t)v11, (uint64_t)sub_1BA90CF04, 0, v12, v13);
  result = sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  if (!v17)
  {
    v19 = a1[3];
    v28 = a1[4];
    if (v25)
    {
      __swift_project_boxed_opaque_existential_1(a1, v19);
      v20 = (uint64_t)v23;
      v16(v23, v15, v14);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(a1, v19);
      v20 = (uint64_t)v22;
      v16(v22, v15, v14);
    }
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v20, (uint64_t)sub_1BA90CF04, 0, v19, v28);
    sub_1BA4A2E80(v20, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    sub_1BB8743E0();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  return result;
}

uint64_t FormatFixedColor.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[14];
  uint64_t v40;
  uint64_t v41;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v39[12] = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v39[11] = (char *)v39 - v6;
  MEMORY[0x1E0C80A78](v7);
  v39[10] = (char *)v39 - v8;
  MEMORY[0x1E0C80A78](v9);
  v39[9] = (char *)v39 - v10;
  MEMORY[0x1E0C80A78](v11);
  v39[8] = (char *)v39 - v12;
  MEMORY[0x1E0C80A78](v13);
  v39[7] = (char *)v39 - v14;
  MEMORY[0x1E0C80A78](v15);
  v39[6] = (char *)v39 - v16;
  MEMORY[0x1E0C80A78](v17);
  v39[5] = (char *)v39 - v18;
  MEMORY[0x1E0C80A78](v19);
  v39[4] = (char *)v39 - v20;
  MEMORY[0x1E0C80A78](v21);
  v39[3] = (char *)v39 - v22;
  MEMORY[0x1E0C80A78](v23);
  v39[2] = (char *)v39 - v24;
  MEMORY[0x1E0C80A78](v25);
  v39[1] = (char *)v39 - v26;
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v39 - v29;
  v31 = *v1;
  v39[13] = a1;
  v40 = v31;
  v32 = a1[3];
  v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v32);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v34 = sub_1BB86EB84();
  v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v30, v35, v34);
  v36 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v37 = v41;
  sub_1BA69F160((uint64_t)v30, (uint64_t)sub_1BA90CF04, 0, v32, v33);
  if (!v37)
  {
    v39[0] = v35;
    v41 = v36;
    sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v30, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA4D1D7C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4D1DB0 + 4 * byte_1BB8AEDBE[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA4D1DB0()
{
  return 0x7373616C63;
}

uint64_t sub_1BA4D1DC4()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA4D1DE0()
{
  return 0x6168706C61;
}

uint64_t sub_1BA4D1DF4()
{
  return 0x73736572676F7270;
}

uint64_t sub_1BA4D1E18()
{
  return 0x6C6F436B63617274;
}

unint64_t sub_1BA4D1E30()
{
  return 0xD000000000000018;
}

uint64_t sub_1BA4D1E4C()
{
  return 1885433183;
}

uint64_t sub_1BA4D1E5C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x646F4D646E656C62;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x726F6C6F63;
}

uint64_t sub_1BA4D1EB0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x6F69736E656D6964;
}

uint64_t sub_1BA4D1F0C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6973736572707865;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x726F6C6F63;
}

uint64_t sub_1BA4D1F60()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4D1F90 + 4 * byte_1BB8AE2BE[*v0]))(0x726F7463656C6573, 0xE800000000000000);
}

uint64_t sub_1BA4D1F90()
{
  return 0x6F50726F68636E61;
}

uint64_t sub_1BA4D1FB0()
{
  return 0x6F6974616D696E61;
}

uint64_t sub_1BA4D1FCC()
{
  return 0x65646F4D6E7572;
}

uint64_t sub_1BA4D1FE4()
{
  return 1885433183;
}

uint64_t sub_1BA4D1FF4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4D2020 + 4 * byte_1BB8AE72D[*v0]))(0x6874646977, 0xE500000000000000);
}

uint64_t sub_1BA4D2020()
{
  return 0x746E616C73;
}

uint64_t sub_1BA4D2030()
{
  return 0x6564617267;
}

uint64_t sub_1BA4D2040()
{
  return 0x6E6769736564;
}

uint64_t sub_1BA4D2054()
{
  return 1885433183;
}

NewsFeed::FormatFlexibleExpression::Direction_optional __swiftcall FormatFlexibleExpression.Direction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatFlexibleExpression::Direction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatSupplementary::Kind_optional __swiftcall FormatSupplementary.Kind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatSupplementary::Kind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

NewsFeed::FormatSymbolScale_optional __swiftcall FormatSymbolScale.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatSymbolScale_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatResizeAutoMask_optional __swiftcall FormatResizeAutoMask.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatResizeAutoMask_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA4D21CC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

NewsFeed::FormatIssueCoverTraits_optional __swiftcall FormatIssueCoverTraits.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatIssueCoverTraits_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA4D227C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE v6[40];
  uint64_t v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = sub_1BB86DF48();
  if (v7)
  {
    v3 = v8;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB86DC0C();
    result = sub_1BB86DF3C();
    if (result)
    {
      v4 = result;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1BA505288(0, (unint64_t *)&qword_1ED3CB970);
      sub_1BB86DF48();
      type metadata accessor for FormatLayoutViewRouter();
      v5 = (_QWORD *)swift_allocObject();
      v5[2] = v7;
      v5[3] = v3;
      v5[4] = v4;
      sub_1BA4DD398((uint64_t)v6, (uint64_t)(v5 + 5), &qword_1ED3CB978, (unint64_t *)&qword_1ED3CB970, (uint64_t)&protocol descriptor for FormatLayoutViewRouterType);
      return (uint64_t)v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BA4D23CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatPackageInventory.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BA4D2420@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, qword_1ED3D4838);
  result = sub_1BB86DF48();
  if (!v14)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D2EA8);
  result = sub_1BB86DF18();
  if (!v12)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&qword_1ED3D3990);
  result = sub_1BB86DF48();
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D3B80);
  result = sub_1BB86DF48();
  if (v8)
  {
    v5 = type metadata accessor for CategoryViewRenderer();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 176) = 0;
    *(_BYTE *)(v6 + 184) = 1;
    sub_1BA4CECCC(&v13, v6 + 16);
    sub_1BA4CECCC(&v11, v6 + 56);
    sub_1BA4CECCC(&v9, v6 + 96);
    result = sub_1BA4CECCC(&v7, v6 + 136);
    a2[3] = v5;
    a2[4] = (uint64_t)&protocol witness table for CategoryViewRenderer;
    *a2 = v6;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA4D2618(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D2EA8);
  result = sub_1BB86DF18();
  if (!v15)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF18();
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF18();
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF18();
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3B09F0);
  result = sub_1BB86DF48();
  if (v7)
  {
    type metadata accessor for FeedItemRendererPipelineProcessor(0);
    v3 = swift_allocObject();
    v4 = v3 + OBJC_IVAR____TtC8NewsFeed33FeedItemRendererPipelineProcessor_lastRendererOptions;
    v5 = sub_1BB86FC70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    sub_1BA4CECCC(&v14, v3 + 16);
    sub_1BA4CECCC(&v12, v3 + 56);
    sub_1BA4CECCC(&v10, v3 + 96);
    sub_1BA4CECCC(&v8, v3 + 136);
    sub_1BA4CECCC(&v6, v3 + 176);
    return v3;
  }
LABEL_11:
  __break(1u);
  return result;
}

_QWORD *sub_1BA4D287C(_QWORD *a1)
{
  _QWORD *result;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98D0);
  result = (_QWORD *)sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B9820);
  result = (_QWORD *)sub_1BB86DF3C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3CF9A0);
  result = (_QWORD *)sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    type metadata accessor for FeedTagFactory();
    result = (_QWORD *)swift_allocObject();
    result[2] = v3;
    result[3] = v4;
    result[4] = v5;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t FormatShareAttributionNode.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(_BYTE *, _QWORD);
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[4];
  int v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  _QWORD *v57;
  uint64_t v58;
  __int128 v59;
  void (**v60)(_BYTE *, _QWORD);
  __int128 v61;
  char v62;
  __int128 v63;
  char v64;
  unint64_t v65;

  v57 = a2;
  sub_1BA6927D0();
  v54 = *((_QWORD *)v3 - 1);
  v55 = v3;
  MEMORY[0x1E0C80A78](v3);
  v56 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  *(_QWORD *)&v59 = &v45[-v8];
  sub_1BAEB7B84();
  v58 = v9;
  v10 = *(void (***)(_BYTE *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v45[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEB7BFC();
  sub_1BA4A2870(&qword_1ED3D1250, (uint64_t (*)(uint64_t))sub_1BAEB7BFC, (uint64_t)&unk_1BB8FFC6C);
  v13 = v60;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    v31 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  *(_QWORD *)&v53 = v7;
  v60 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v58;
  v18 = v12;
  if ((v16 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v21 - 2);
      v25 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      *(_QWORD *)&v45[-32] = &_s10CodingKeysON_55;
      *(_QWORD *)&v45[-24] = sub_1BAEB7C7C();
      *(_QWORD *)&v45[-16] = sub_1BA824DDC();
      *(_QWORD *)&v45[-8] = sub_1BAEB7CC0();
      swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7253010);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v29 = v26;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v25, 1);
      v60[1](v12, v17);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v12, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEB7B84);
  v24 = v23;
  v63 = xmmword_1BB8A1A10;
  v64 = 0;
  sub_1BA820BD0();
  sub_1BB8740D4();
  v52 = xmmword_1BB8D2D60;
  v63 = xmmword_1BB8D2D60;
  v64 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v52;
    v62 = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v30 = v65;
  }
  else
  {
    v30 = 0xB000000000000008;
  }
  *(_QWORD *)&v52 = v30;
  v63 = xmmword_1BB8D2D70;
  v64 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v51 = v61;
  v50 = xmmword_1BB8D2D90;
  v63 = xmmword_1BB8D2D90;
  v64 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v50;
    v62 = 0;
    sub_1BAEB7D04();
    sub_1BB8740D4();
    v33 = v59;
    *(_QWORD *)&v50 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v33, v6);
  }
  else
  {
    *(_QWORD *)&v50 = MEMORY[0x1E0DEE9D8];
  }
  v59 = xmmword_1BB8D2D80;
  v63 = xmmword_1BB8D2D80;
  v64 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v59;
    v62 = 0;
    sub_1BB8740D4();
    v34 = v65;
  }
  else
  {
    v34 = 0;
  }
  v59 = xmmword_1BB8D2DA0;
  v63 = xmmword_1BB8D2DA0;
  v64 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v59;
    v62 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v35 = v52;
    *(_QWORD *)&v59 = a1;
    v36 = v65;
  }
  else
  {
    v35 = v52;
    *(_QWORD *)&v59 = a1;
    v36 = 0x8000000000000000;
  }
  v53 = xmmword_1BB8D2DB0;
  v63 = xmmword_1BB8D2DB0;
  v64 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v53;
    v62 = 0;
    sub_1BB8740D4();
    *(_QWORD *)&v53 = v22;
    v37 = v65;
  }
  else
  {
    *(_QWORD *)&v53 = v22;
    v37 = 1;
  }
  LODWORD(v52) = v37;
  v63 = xmmword_1BB8D2DD0;
  v64 = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  v49 = v61;
  v38 = v18;
  LODWORD(v18) = BYTE8(v61);
  v48 = xmmword_1BB8D2DE0;
  v63 = xmmword_1BB8D2DE0;
  v64 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v46 = (int)v18;
    v47 = v24;
    v61 = v48;
    v62 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v18 = v55;
    v39 = v56;
    sub_1BB8740D4();
    *(_QWORD *)&v48 = v34;
    v40 = v38;
    v41 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, _BYTE *))(v54 + 8))(v39, v18);
    v24 = v47;
    LOBYTE(v18) = v46;
  }
  else
  {
    *(_QWORD *)&v48 = v34;
    v40 = v38;
    v41 = MEMORY[0x1E0DEE9E8];
  }
  v60[1](v40, v17);
  v42 = v57;
  *v57 = v53;
  v42[1] = v24;
  v43 = v51;
  v42[2] = v35;
  v42[3] = v43;
  v44 = v48;
  v42[4] = v50;
  v42[5] = v44;
  v42[6] = v36;
  *((_BYTE *)v42 + 56) = v52;
  v42[8] = v49;
  *((_BYTE *)v42 + 72) = (_BYTE)v18;
  v42[10] = v41;
  v31 = v59;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

uint64_t sub_1BA4D3354(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (**v9)(char *, _QWORD);
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  __int128 v49;
  int v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (**v63)(char *, _QWORD);
  __int128 v64;
  char v65;
  __int128 v66;
  char v67;
  uint64_t v68;

  sub_1BA6927D0();
  v60 = v2;
  v58 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v59 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v62 = (uint64_t)&v47 - v7;
  sub_1BAEEAE1C();
  v61 = v8;
  v9 = *(void (***)(char *, _QWORD))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC0204();
  sub_1BA4A2870(&qword_1ED3D0E30, (uint64_t (*)(uint64_t))sub_1BAEC0204, (uint64_t)&unk_1BB8FFC6C);
  v13 = v63;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_9:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v56 = v6;
  v57 = v5;
  v63 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v18 = v61;
  v17 = v62;
  v19 = v11;
  if ((v16 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = v18;
      v28 = *((_QWORD *)v22 - 2);
      v29 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      sub_1BAEC0284();
      sub_1BA82E3EC();
      sub_1BAEC02C8();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v31 = sub_1BAE71220((uint64_t)&unk_1E7251BB8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v32 = v28;
      *(_QWORD *)(v32 + 8) = v29;
      *(_QWORD *)(v32 + 16) = v31;
      *(_OWORD *)(v32 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v28, v29, 1);
      v63[1](v11, v27);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v24 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEEAE1C);
  v26 = v25;
  v55 = xmmword_1BB8A1A10;
  v66 = xmmword_1BB8A1A10;
  v67 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v64 = v55;
    v65 = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v33 = v68;
  }
  else
  {
    v33 = 0xB000000000000008;
  }
  v66 = xmmword_1BB8D2D60;
  v67 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v53 = v24;
  v34 = v64;
  v54 = xmmword_1BB8D2D70;
  v66 = xmmword_1BB8D2D70;
  v67 = 0;
  v35 = sub_1BB8740F8();
  *(_QWORD *)&v55 = v34;
  if ((v35 & 1) != 0)
  {
    v64 = v54;
    v65 = 0;
    sub_1BAEB7D04();
    v36 = v17;
    v37 = v57;
    sub_1BB8740D4();
    *(_QWORD *)&v54 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v36, v37);
  }
  else
  {
    *(_QWORD *)&v54 = MEMORY[0x1E0DEE9D8];
  }
  v66 = xmmword_1BB8D2D90;
  v67 = 0;
  v57 = sub_1BB874098();
  v62 = v38;
  sub_1BA4AD288(0, &qword_1ED3B9340, (uint64_t)&type metadata for FormatStateViewNodeState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v66 = xmmword_1BB8D2D80;
  v67 = 0;
  sub_1BA81DBEC();
  sub_1BB8740D4();
  v56 = v64;
  v52 = xmmword_1BB8D2DA0;
  v66 = xmmword_1BB8D2DA0;
  v67 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v64 = v52;
    v65 = 0;
    sub_1BB8740D4();
    v51 = v68;
  }
  else
  {
    v51 = 0;
  }
  v52 = xmmword_1BB8D2DB0;
  v66 = xmmword_1BB8D2DB0;
  v67 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v64 = v52;
    v65 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v39 = v68;
  }
  else
  {
    v39 = 0x8000000000000000;
  }
  v52 = xmmword_1BB8D2DD0;
  v66 = xmmword_1BB8D2DD0;
  v67 = 0;
  v40 = v33;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v64 = v52;
    v65 = 0;
    sub_1BB8740D4();
    v41 = v55;
    *(_QWORD *)&v52 = v26;
    v42 = v68;
  }
  else
  {
    v41 = v55;
    *(_QWORD *)&v52 = v26;
    v42 = 1;
  }
  v50 = v42;
  type metadata accessor for FormatAnimationNodeStyle();
  v66 = xmmword_1BB8D2DE0;
  v67 = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v43 = v64;
  v49 = xmmword_1BB8D2DF0;
  v66 = xmmword_1BB8D2DF0;
  v67 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v47 = v43;
    v48 = v40;
    v64 = v49;
    v65 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v44 = v59;
    v45 = v60;
    sub_1BB8740D4();
    v46 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v45);
    v40 = v48;
    v43 = v47;
  }
  else
  {
    v46 = MEMORY[0x1E0DEE9E8];
  }
  v63[1](v19, v18);
  *(_QWORD *)&v66 = v40;
  *(_QWORD *)&v64 = v41;
  v68 = v39;
  type metadata accessor for FormatStateViewNode();
  swift_allocObject();
  KeyPath = FormatStateViewNode.init(identifier:size:resize:adjustments:stateMachineName:states:zIndex:visibility:isUserInteractionEnabled:animation:selectors:)(v53, v52, (uint64_t *)&v66, (uint64_t *)&v64, v54, v57, v62, v56, v51, &v68, v50, v43, v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

uint64_t sub_1BA4D3E3C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v55 = a2;
  v3 = (_QWORD *)*v2;
  v53 = a1;
  v4 = *a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v44 - v6;
  v8 = *(_QWORD *)(v4 + 80);
  v50 = *(_QWORD *)(v4 + 88);
  v51 = v8;
  v10 = type metadata accessor for FeedCursorTrackerSnapshot(0, v8, v50, v9);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - v12;
  v14 = sub_1BB873A2C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v44 - v16;
  sub_1BA49C548();
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, v10);
  v52 = v7;
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v19 = MEMORY[0x1E0DEE9E8];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v17, v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v19 = *(_QWORD *)&v13[*(int *)(v10 + 36)];
    v20 = *(void (**)(char *, uint64_t))(v11 + 8);
    swift_bridgeObjectRetain();
    v20(v13, v10);
  }
  v21 = v3[10];
  v22 = v3[11];
  v23 = v3[12];
  v24 = v3[13];
  v26 = (uint64_t *)v3[14];
  v25 = (uint64_t *)v3[15];
  v28 = (uint64_t *)v3[16];
  v27 = (uint64_t *)v3[17];
  v41 = v28;
  v42 = v27;
  v40 = v25;
  v29 = v54;
  v48 = v21;
  v49 = v22;
  v53 = (_QWORD *)sub_1BA4D6C50(v19, (uint64_t)v53, v55);
  swift_bridgeObjectRelease();
  v54 = v29;
  if (v29)
    return (uint64_t)v25;
  v45 = v28;
  v46 = v27;
  v47 = v25;
  v30 = (uint64_t)v53;
  sub_1BB86F064();
  v31 = (uint64_t)v52;
  sub_1BB86F22C();
  swift_release();
  v32 = sub_1BB86C8B0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32);
  if ((_DWORD)result != 1)
  {
    v36 = v50;
    v35 = v51;
    v55 = type metadata accessor for FeedCursorManifest(0, v51, v50, v34);
    v44 = (uint64_t)&v44;
    v56 = v30;
    MEMORY[0x1E0C80A78](v55);
    v37 = v49;
    *(&v44 - 8) = v48;
    *(&v44 - 7) = v37;
    *(&v44 - 6) = v23;
    *(&v44 - 5) = v24;
    v40 = v26;
    v41 = v47;
    v42 = v45;
    v43 = v46;
    sub_1BA4AD288(0, &qword_1ED3AADD0, (uint64_t)&type metadata for FeedGroupEntity.ManifestEntity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    type metadata accessor for FeedCursorManifestGroupEntry(0, v35, v36, v38);
    sub_1BA5C69E0(&qword_1ED3AADD8, &qword_1ED3AADD0, (uint64_t)&type metadata for FeedGroupEntity.ManifestEntity, MEMORY[0x1E0DEAF38]);
    v39 = sub_1BB872BF8();
    swift_bridgeObjectRelease();
    v25 = sub_1BA83C990((uint64_t)v52, v39);
    swift_bridgeObjectRelease();
    return (uint64_t)v25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4D41AC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatPublisherLogoSizeBinding.init(from:)(a1, a2);
}

uint64_t FormatPublisherLogoSizeBinding.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FD7C8, (uint64_t)&_s10CodingTypeON_48, (uint64_t)&unk_1E726D948, a2);
}

unint64_t sub_1BA4D41EC()
{
  unint64_t result;

  result = qword_1ED3B4870;
  if (!qword_1ED3B4870)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFixedColor, &type metadata for FormatFixedColor);
    atomic_store(result, (unint64_t *)&qword_1ED3B4870);
  }
  return result;
}

uint64_t sub_1BA4D4230@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupTopicDiversityRequirements.init(from:)(a1, a2);
}

uint64_t FeedGroupTopicDiversityRequirements.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;

  sub_1BA4D4414(0, &qword_1ED3AB3D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4D4470();
  sub_1BB87468C();
  if (!v2)
  {
    v21 = 0;
    sub_1BB874020();
    v10 = v17;
    v20 = v18;
    v21 = 1;
    sub_1BB874020();
    v11 = v17;
    v19 = v18;
    sub_1BA6BCC84();
    v21 = 2;
    sub_1BA64D3D4((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    sub_1BB874020();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v17;
    v13 = v20;
    v14 = v19;
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v13;
    *(_QWORD *)(a2 + 16) = v11;
    *(_BYTE *)(a2 + 24) = v14;
    *(_QWORD *)(a2 + 32) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA4D4414(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA4D4470();
    v7 = a3(a1, &type metadata for FeedGroupTopicDiversityRequirements.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA4D4470()
{
  unint64_t result;

  result = qword_1ED3A51C8;
  if (!qword_1ED3A51C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D3248, &type metadata for FeedGroupTopicDiversityRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A51C8);
  }
  return result;
}

uint64_t sub_1BA4D44B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatLayeredMediaNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1BA4D44C8(uint64_t a1, _QWORD *a2)
{
  char v3;
  uint64_t v4;
  uint64_t result;
  id v6;
  id v7;
  uint64_t v8;

  sub_1BB86D1E0();
  v3 = sub_1BB86D258();
  swift_release();
  if ((v3 & 1) != 0)
  {
    sub_1BB86D1E0();
    sub_1BB86D1D4();
    swift_release();
    type metadata accessor for AdsAssembly();
    sub_1BA50AD30(&qword_1EF2C4EF8, v4, (uint64_t (*)(uint64_t))type metadata accessor for AdsAssembly, (uint64_t)&unk_1BB91C6F0);
    sub_1BB86D210();
    swift_release();
    return v8;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1BA81D06C();
    result = sub_1BB86DF3C();
    if (result)
    {
      v6 = objc_msgSend((id)result, sel_possiblyUnfetchedAppConfiguration);
      swift_unknownObjectRelease();
      if ((objc_msgSend(v6, sel_respondsToSelector_, sel_feedAdScreenfulsToPrefetch) & 1) != 0)
      {
        v7 = objc_msgSend(v6, sel_feedAdScreenfulsToPrefetch);
        swift_unknownObjectRelease();
        return (uint64_t)v7;
      }
      else
      {
        swift_unknownObjectRelease();
        return 3;
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1BA4D4618()
{
  sub_1BA4D4674();
  return sub_1BB872D60();
}

unint64_t sub_1BA4D4674()
{
  unint64_t result;

  result = qword_1ED3B8A48;
  if (!qword_1ED3B8A48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAttachmentAlignment, &type metadata for FormatTextNodeAttachmentAlignment);
    atomic_store(result, (unint64_t *)&qword_1ED3B8A48);
  }
  return result;
}

uint64_t sub_1BA4D46B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v1 = sub_1BB52A3A4(a1);
  v3 = v2;
  v5 = v4;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB895110;
  v7 = sub_1BB529960(v1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 32) = v7;
  v8 = sub_1BB529D78(v3);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 40) = v8;
  swift_retain();
  sub_1BB52A264(v5);
  swift_release();
  v9 = (void *)sub_1BB86E854();
  sub_1BA81DCAC();
  sub_1BA81DC64();
  sub_1BB86E920();
  swift_bridgeObjectRelease();

  v10 = (void *)sub_1BB86E854();
  v11 = sub_1BB86E974();
  swift_bridgeObjectRelease();
  swift_release();

  *(_QWORD *)(v6 + 48) = v11;
  sub_1BB872DCC();
  sub_1BB86E92C();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_1BB86E854();
  v13 = sub_1BB86E974();
  swift_release();

  return v13;
}

uint64_t sub_1BA4D48A8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BA4D4904(uint64_t *a1@<X8>)
{
  void *v2;
  uint64_t v3;

  v2 = (void *)sub_1BB86E6F8();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v3 = sub_1BB86EBFC();

  *a1 = v3;
}

uint64_t sub_1BA4D49D4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 6)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB93A660;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

Swift::Void __swiftcall SportsEmbedConfigurationManager.sceneWillEnterForeground()()
{
  uint64_t v0;
  unsigned __int8 v1;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v1 != 255)
  {
    if ((v1 & 1) != 0)
    {
      sub_1BB06312C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1BB86E884();
      swift_release();
    }
  }
  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v1 != 255)
  {
    if ((v1 & 1) != 0)
    {
      sub_1BB06312C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1BB86E884();
      swift_release();
    }
  }
  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v1 != 255)
  {
    if ((v1 & 1) != 0)
    {
      sub_1BB06312C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1BB86E884();
      swift_release();
    }
  }
  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v1 != 255)
  {
    if ((v1 & 1) != 0)
    {
      sub_1BB06312C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1BB86E884();
      swift_release();
    }
  }
  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v1 != 255)
  {
    if ((v1 & 1) != 0)
    {
      sub_1BB06312C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1BB86E884();
      swift_release();
    }
  }
  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v1 != 255)
  {
    if ((v1 & 1) != 0)
    {
      sub_1BB06312C(v0, v1);
    }
    else
    {
      swift_retain();
      sub_1BB86E884();
      swift_release();
    }
  }
}

uint64_t sub_1BA4D4EE8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4D4F60(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v4, AssociatedTypeWitness);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_1BB86C8B0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))((v4 + v5 + *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatSlotTransform(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1BA4D50FC(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1BA4D50FC(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA4D512C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 + 304);
  v0[4] = v2;
  if (v2)
  {
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    v4 = sub_1BAA1DB80;
    v0[5] = v3;
  }
  else
  {
    v5 = v0[3];
    v6 = sub_1BB872F94();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v8 = sub_1BA50AD30(&qword_1ED3ACA08, v7, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatsService, (uint64_t)&unk_1BB8912E4);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = v1;
    v9[3] = v8;
    v9[4] = v1;
    swift_retain_n();
    v10 = sub_1BB1B6AEC(v5, (uint64_t)&unk_1EF2AD810, (uint64_t)v9);
    v0[6] = v10;
    *(_QWORD *)(v1 + 304) = v10;
    swift_retain();
    swift_release();
    v3 = (_QWORD *)swift_task_alloc();
    v4 = sub_1BA82F388;
    v0[7] = v3;
  }
  *v3 = v0;
  v3[1] = v4;
  return sub_1BB872FA0();
}

uint64_t FormatVariableCollection.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4D5290()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA4D52C0(_QWORD *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  CFTimeInterval v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  _BOOL4 v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];

  v44 = a3;
  v8 = (_QWORD *)*a1;
  v45 = sub_1BB86C8B0();
  v9 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v8[12];
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  sub_1BA499BE8((uint64_t)v16);
  if (!v4)
  {
    v17 = (*(uint64_t (**)(_QWORD))(v8[14] + 24))(v8[11]);
    v43 = a1;
    v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8[15] + 56))(v46, v17, v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    swift_release();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v21 = v42;
    FeedCursorContainer.createdDate.getter(v42, (uint64_t)v11);
    v22 = swift_getAssociatedTypeWitness();
    v23 = v43;
    v24 = swift_getAssociatedConformanceWitness();
    v41 = FeedServiceContextType.shouldRefreshRootCursor(createdDate:)((uint64_t)v11, v22, v24);
    v39 = *(void (**)(char *, uint64_t))(v9 + 8);
    v25 = v45;
    v39(v11, v45);
    v40 = v23[6];
    sub_1BA7AA598();
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1BB87A390;
    v37 = AssociatedConformanceWitness;
    v38 = AssociatedTypeWitness;
    FeedCursorContainer.createdDate.getter(v21, (uint64_t)v11);
    sub_1BA4AD9BC();
    v27 = sub_1BB87420C();
    v29 = v28;
    v39(v11, v25);
    *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v26 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v26 + 32) = v27;
    *(_QWORD *)(v26 + 40) = v29;
    v30 = CACurrentMediaTime();
    v31 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v26 + 96) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v26 + 104) = v31;
    *(CFTimeInterval *)(v26 + 72) = (v30 - a4) * 1000.0;
    v32 = sub_1BB87330C();
    if (v41)
    {
      v33 = (uint64_t *)(v44 + 16);
      sub_1BB86EF44("Feed manager prepared read from the database, will refresh from network, cursor createdDate=%{public}@, time=%fms", 113, 2, &dword_1BA493000, v40, v32, v26);
      swift_bridgeObjectRelease();
      LOBYTE(v47[0]) = 2;
      sub_1BA83A9D8();
      sub_1BB86E1D0();
      swift_beginAccess();
      v34 = *v33;
      *v33 = v21;
      swift_retain();
      sub_1BA62ECD4(v34);
      v13 = sub_1BAA3B15C(v21, v46);
    }
    else
    {
      sub_1BB86EF44("Feed manager prepared read from the database, cursor createdDate=%{public}@, time=%fms", 86, 2, &dword_1BA493000, v40, v32, v26);
      swift_bridgeObjectRelease();
      LOBYTE(v47[0]) = 1;
      sub_1BA83A9D8();
      sub_1BB86E1D0();
      type metadata accessor for FeedLocation(255, v38, v37, v35);
      sub_1BB86EAAC();
      sub_1BA838824(v21, v47);
      v13 = sub_1BB86E9D4();
    }
    swift_release();
  }
  return v13;
}

uint64_t sub_1BA4D56F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (a1 < 0)
    v5 = (a1 & 0x7FFFFFFFFFFFFFFFLL) + *a3;
  else
    v5 = a1 + *a2;
  v6 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v5, v6);
}

uint64_t FeedCursorContainer.createdDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4D56F4(a1, &qword_1ED476780, &qword_1ED476440, a2);
}

uint64_t sub_1BA4D575C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4D5788 + 4 * byte_1BB8AF155[*v0]))(0x63697274656DLL, 0xE600000000000000);
}

uint64_t sub_1BA4D5788()
{
  return 0x656C797473;
}

uint64_t sub_1BA4D579C()
{
  return 0x656D7473756A6461;
}

uint64_t sub_1BA4D57B8()
{
  return 1885433183;
}

uint64_t sub_1BA4D57C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4D57FC + 4 * byte_1BB8AED10[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA4D57FC()
{
  return 0x6E656D6574617473;
}

uint64_t sub_1BA4D5814()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1BA4D582C()
{
  return 1885433183;
}

uint64_t ThumbnailProcessorRequest.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  sub_1BA4D5884(v0 + OBJC_IVAR____TtC8NewsFeed25ThumbnailProcessorRequest_border);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4D5884(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA4D58D8(double **a1, uint64_t a2)
{
  double v3;
  double v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  char v30;
  double **v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  CFTimeInterval v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  double v44;
  uint64_t v45;
  double *v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  double *v55;
  double v56;
  double v58[2];
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  double *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  double **v70;
  __int128 v71;
  double v72;
  double v73;
  double v74;
  double v75;
  char v76[9];

  v69 = a2;
  v3 = (*a1)[13];
  v61 = *a1;
  v4 = v61[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v68 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v63 = *(_QWORD *)(v68 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v64 = (char *)v58 - v6;
  v7 = swift_getAssociatedTypeWitness();
  v67 = v3;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v66 = type metadata accessor for FeedServiceFetchResult(255, v7, AssociatedConformanceWitness, v9);
  sub_1BB86EAAC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = sub_1BB873A2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v58 - v13;
  v15 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](v16);
  v60 = (char *)v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v58 - v19;
  v70 = a1;
  sub_1BA49C548();
  v65 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, TupleTypeMetadata2) != 1)
  {
    v62 = TupleTypeMetadata2;
    v22 = *(int *)(TupleTypeMetadata2 + 48);
    v23 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
    v23(v20, v14, AssociatedTypeWitness);
    *(_QWORD *)&v20[v22] = *(_QWORD *)&v14[v22];
    v24 = swift_getAssociatedConformanceWitness();
    FeedServiceContextType.feedMode.getter(AssociatedTypeWitness, v24, &v71);
    v25 = v71;
    v26 = v69;
    FeedServiceContextType.feedMode.getter(AssociatedTypeWitness, v24, v76);
    if (v25)
      v27 = 0x656E696C66666FLL;
    else
      v27 = 0x746C7561666564;
    if (v76[0])
      v28 = 0x656E696C66666FLL;
    else
      v28 = 0x746C7561666564;
    v29 = *(double *)&v20;
    if (v27 == v28)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v21 = v26;
      v30 = sub_1BB874398();
      swift_bridgeObjectRelease_n();
      if ((v30 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v65 + 8))(v20, v62);
        return sub_1BA4E7EB4(v21);
      }
    }
    v31 = v70;
    sub_1BA7AA598();
    v32 = swift_allocObject();
    v33 = v32;
    *(_OWORD *)(v32 + 16) = xmmword_1BB87CE70;
    v34 = (uint64_t)v31 + *((_QWORD *)*v31 + 23);
    v35 = *(_BYTE *)(v34 + 8);
    v59 = v23;
    v36 = AssociatedTypeWitness;
    if ((v35 & 1) != 0)
    {
      v37 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v32 + 64) = v37;
      *(_QWORD *)(v32 + 32) = -1;
    }
    else
    {
      v38 = *(double *)v34;
      v39 = CACurrentMediaTime();
      v73 = MEMORY[0x1E0DEB070];
      v74 = MEMORY[0x1E0DEB100];
      *(double *)&v71 = (v39 - v38) * 1000.0;
      sub_1BA4CECCC(&v71, v33 + 32);
    }
    v40 = v68;
    sub_1BB87330C();
    sub_1BB86EF44("Feed manager prewarmed for %fms before initial read and fetch", v58[0]);
    swift_bridgeObjectRelease();
    v41 = v62;
    v42 = *(int *)(v62 + 48);
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
    v44 = *(double *)&v60;
    v43(v60, *(_QWORD *)&v29, v36);
    *(_QWORD *)&v58[0] = v58;
    v45 = *(_QWORD *)(*(_QWORD *)&v29 + v22);
    *(_QWORD *)(*(_QWORD *)&v44 + v42) = v45;
    MEMORY[0x1E0C80A78](v45);
    v58[1] = v29;
    v46 = v61;
    v48 = v61[11];
    v47 = v61[12];
    v58[-8] = v4;
    v58[-7] = v48;
    v49 = v67;
    v58[-6] = v47;
    v58[-5] = v49;
    v50 = v46[14];
    v51 = v46[15];
    v58[-4] = v50;
    v58[-3] = v51;
    v58[-2] = v44;
    swift_retain();
    v61 = (double *)sub_1BB86EC14();
    v65 = *(_QWORD *)(v65 + 8);
    ((void (*)(_QWORD, uint64_t))v65)(*(_QWORD *)&v44, v41);
    v52 = v64;
    v53 = v36;
    v43(v64, v69, v36);
    v54 = (*(unsigned __int8 *)(v68 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    v55 = (double *)swift_allocObject();
    v55[2] = v4;
    v55[3] = v48;
    v56 = v67;
    v55[4] = v47;
    v55[5] = v56;
    v55[6] = v50;
    v55[7] = v51;
    v59((char *)v55 + v54, v52, v53);
    sub_1BB86E854();
    *(double *)&v71 = v4;
    *((double *)&v71 + 1) = v48;
    v72 = v47;
    v73 = v56;
    v74 = v50;
    v75 = v51;
    type metadata accessor for FeedManager();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v21 = v69;
  return sub_1BA4E7EB4(v21);
}

uint64_t sub_1BA4D5E6C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C797473;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 1702521203;
}

uint64_t sub_1BA4D5EB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedBannerAdViewLayout.Attributes.init(from:)(a1, a2);
}

NewsFeed::FormatGroupPriority_optional __swiftcall FormatGroupPriority.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatGroupPriority_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA4D5F20(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t AssociatedTypeWitness;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t AssociatedConformanceWitness;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t result;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  __int128 *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t *v65;
  char *v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  int *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  int v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  __int128 *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char v123[8];
  uint64_t v124;
  char v125[8];
  char v126[8];
  _QWORD v127[3];
  uint64_t v128;

  v5 = *MEMORY[0x1E0DEEDD8] & *v2;
  sub_1BA6D5338();
  v100 = v6;
  v99 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v98 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3C2280, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v93 = (char *)&v90 - v10;
  v11 = sub_1BB871A70();
  MEMORY[0x1E0C80A78](v11);
  v92 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_1BB8721C0();
  v96 = *(_QWORD *)(v97 - 8);
  v13 = MEMORY[0x1E0C80A78](v97);
  v94 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v102 = (char *)&v90 - v15;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0C18, (uint64_t (*)(uint64_t))sub_1BA7EF0F8, v8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v95 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v101 = (char *)&v90 - v19;
  sub_1BA7EF0F8();
  v103 = v20;
  v105 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v104 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_1BB871B60();
  v108 = *(_QWORD *)(v109 - 8);
  v22 = MEMORY[0x1E0C80A78](v109);
  v106 = (__int128 *)((char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v22);
  v107 = (char *)&v90 - v24;
  v112 = sub_1BB871B6C();
  v111 = *(_QWORD *)(v112 - 8);
  v25 = MEMORY[0x1E0C80A78](v112);
  v90 = (uint64_t)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v110 = (char *)&v90 - v27;
  sub_1BA4B07F0(0, &qword_1ED3B2D18, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, v8);
  MEMORY[0x1E0C80A78](v28);
  v118 = (char *)&v90 - v29;
  v119 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v117 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v116 = (char *)&v90 - v31;
  v120 = type metadata accessor for FeedBannerAd();
  v115 = *(_QWORD *)(v120 - 8);
  v32 = MEMORY[0x1E0C80A78](v120);
  v91 = (char *)&v90 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v113 = (uint64_t)&v90 - v34;
  v35 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v37 = swift_getAssociatedConformanceWitness();
  v127[0] = v35;
  v127[1] = AssociatedTypeWitness;
  v127[2] = AssociatedConformanceWitness;
  v128 = v37;
  v38 = sub_1BB871680();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v90 - v40;
  v121 = sub_1BB86F778();
  v114 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v122 = (char *)&v90 - v42;
  v43 = objc_msgSend(a1, sel_indexPathsForVisibleItems);
  sub_1BB86CBE0();
  v44 = sub_1BB872DB4();

  v124 = a2;
  LOBYTE(v43) = sub_1BA49EEFC((uint64_t (*)(char *))sub_1BA49FAA4, (_BOOL8)v123, v44);
  result = swift_bridgeObjectRelease();
  if ((v43 & 1) == 0)
  {
    result = sub_1BB871278();
    if ((result & 1) != 0)
    {
      sub_1BB870420();
      v46 = v122;
      sub_1BB87168C();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
      v47 = v116;
      v48 = v121;
      sub_1BB86F76C();
      v49 = (uint64_t)v118;
      (*(void (**)(uint64_t))(*(_QWORD *)(v119 + 112) + 8))(AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v47, AssociatedTypeWitness);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v49, 1, v120) == 1)
      {
        (*(void (**)(char *, uint64_t))(v114 + 8))(v46, v48);
        return sub_1BA5C699C(v49, &qword_1ED3B2D18, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd);
      }
      else
      {
        v50 = v113;
        sub_1BB2803AC(v49, v113);
        v51 = v110;
        sub_1BB8721A8();
        v52 = v111;
        v53 = v112;
        if ((*(unsigned int (**)(char *, uint64_t))(v111 + 88))(v51, v112) == *MEMORY[0x1E0D52780])
        {
          (*(void (**)(char *, uint64_t))(v52 + 96))(v51, v53);
          v54 = v108;
          v55 = v107;
          v56 = v109;
          (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v51, v109);
          v57 = v106;
          (*(void (**)(__int128 *, char *, uint64_t))(v54 + 16))(v106, v55, v56);
          v58 = (*(uint64_t (**)(__int128 *, uint64_t))(v54 + 88))(v57, v56);
          if (v58 == *MEMORY[0x1E0D52798])
          {
            (*(void (**)(__int128 *, uint64_t))(v54 + 96))(v57, v56);
            sub_1BA4CECCC(v57, (uint64_t)v127);
            sub_1BA4CECCC((__int128 *)((char *)v57 + 40), (uint64_t)v126);
            sub_1BA4C010C((uint64_t)v126, (uint64_t)v125);
            sub_1BB2803F0();
            v59 = (uint64_t)v101;
            v60 = v103;
            v61 = swift_dynamicCast();
            v62 = v105;
            v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
            if (v61)
            {
              v119 = *(_QWORD *)(v105 + 56);
              v63(v59, 0, 1, v60);
              (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v104, v59, v60);
              sub_1BB872178();
              v64 = v90;
              sub_1BA4C010C((uint64_t)v127, v90);
              (*(void (**)(uint64_t, _QWORD, uint64_t))(v111 + 104))(v64, *MEMORY[0x1E0D527B8], v112);
              sub_1BB872178();
              v65 = (uint64_t *)v50;
              sub_1BB8720F4();
              swift_bridgeObjectRelease();
              v66 = v102;
              sub_1BB872184();
              sub_1BB872178();
              __swift_project_boxed_opaque_existential_1(v127, v128);
              sub_1BB871D4C();
              v67 = sub_1BB87216C();
              v68 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53750];
              v69 = (uint64_t)v93;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v93, 1, 1, v67);
              v70 = v104;
              sub_1BB872118();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1BA5C699C(v69, &qword_1ED3C2280, v68);
              v72 = *v65;
              v71 = v65[1];
              v73 = v96;
              v74 = v94;
              v75 = v97;
              (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v94, v66, v97);
              v76 = (int *)v120;
              v77 = v91;
              *(_QWORD *)&v91[*(int *)(v120 + 24)] = 0x2000;
              v78 = &v77[v76[7]];
              *(_QWORD *)v78 = 0;
              v78[8] = 1;
              *(_OWORD *)&v77[v76[8]] = xmmword_1BB886E80;
              *(_QWORD *)v77 = v72;
              *((_QWORD *)v77 + 1) = v71;
              (*(void (**)(char *, char *, uint64_t))(v73 + 32))(&v77[v76[5]], v74, v75);
              v79 = v95;
              v80 = v70;
              v81 = v103;
              (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v95, v80, v103);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v119)(v79, 0, 1, v81);
              sub_1BA4A2870(&qword_1ED3D35E0, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
              swift_bridgeObjectRetain();
              swift_retain();
              v82 = v98;
              sub_1BB871BB4();
              sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9CB0, (uint64_t (*)(uint64_t))sub_1BA6D5338, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
              v83 = v99;
              v84 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
              v85 = swift_allocObject();
              *(_OWORD *)(v85 + 16) = xmmword_1BB87CE70;
              v86 = v100;
              (*(void (**)(unint64_t, char *, uint64_t))(v83 + 16))(v85 + v84, v82, v100);
              FeedBannerAdIntegrator.integrateBannerAdUpdates(_:)((Swift::OpaquePointer)v85);
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v86);
              (*(void (**)(char *, uint64_t))(v73 + 8))(v102, v75);
              (*(void (**)(char *, uint64_t))(v105 + 8))(v104, v81);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
              (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v109);
              sub_1BA735370(v113);
              (*(void (**)(char *, uint64_t))(v114 + 8))(v122, v121);
            }
            else
            {
              v63(v59, 1, 1, v60);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
              (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v56);
              sub_1BA735370(v50);
              (*(void (**)(char *, uint64_t))(v114 + 8))(v122, v48);
              sub_1BA5C699C(v59, (unint64_t *)&qword_1ED3B0C18, (uint64_t (*)(uint64_t))sub_1BA7EF0F8);
            }
            return __swift_destroy_boxed_opaque_existential_1((uint64_t)v127);
          }
          else
          {
            v87 = v58;
            v88 = *MEMORY[0x1E0D52790];
            v89 = *(void (**)(char *, uint64_t))(v54 + 8);
            v89(v55, v56);
            sub_1BA735370(v50);
            result = (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v46, v48);
            if (v87 != v88)
              return ((uint64_t (*)(__int128 *, uint64_t))v89)(v106, v109);
          }
        }
        else
        {
          sub_1BA735370(v50);
          (*(void (**)(char *, uint64_t))(v114 + 8))(v46, v48);
          return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v51, v53);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BA4D6C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t *boxed_opaque_existential_0;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32[7];

  v31[2] = a3;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v31 - v6;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v4);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v31 - v9;
  v11 = sub_1BB86F04C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v31 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v31 - v19;
  if (!*(_QWORD *)(a1 + 16))
    return MEMORY[0x1E0DEE9D8];
  sub_1BA83DC5C();
  v31[1] = sub_1BB86F208();
  v21 = swift_bridgeObjectRetain();
  v22 = sub_1BA67F4CC(v21);
  swift_bridgeObjectRelease();
  sub_1BA81C284((uint64_t)v22);
  swift_release();
  sub_1BB86F16C();
  swift_bridgeObjectRelease();
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  v23 = sub_1BB86C8B0();
  v24 = *(_QWORD *)(v23 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v10, 1, v23);
  if ((_DWORD)result != 1)
  {
    v32[3] = v23;
    v32[4] = MEMORY[0x1E0DB2918];
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
    (*(void (**)(uint64_t *, char *, uint64_t))(v24 + 32))(boxed_opaque_existential_0, v10, v23);
    sub_1BB86F160();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    sub_1BB86F154();
    v27 = *(void (**)(char *, uint64_t))(v12 + 8);
    v27(v15, v11);
    v27(v18, v11);
    v28 = sub_1BB86F274();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v7, 1, 1, v28);
    v29 = v32[6];
    v30 = sub_1BB86F370();
    if (!v29)
      v15 = (char *)v30;
    swift_release();
    sub_1BA5C699C((uint64_t)v7, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
    v27(v20, v11);
    return (uint64_t)v15;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BA4D6FA0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  _QWORD *v61;
  __int128 v62;
  char v63;
  __int128 v64;
  char v65;

  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v58 = v2;
  *(_QWORD *)&v60 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v55 = (char *)&v47 - v3;
  sub_1BA4A2D24();
  v59 = v4;
  v53 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v54 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v56 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEECD90();
  v57 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v14);
  sub_1BAEB686C();
  sub_1BA4A2870(&qword_1ED3D1600, (uint64_t (*)(uint64_t))sub_1BAEB686C, (uint64_t)&unk_1BB8FFC6C);
  v15 = (uint64_t)v61;
  sub_1BB87468C();
  v16 = (void *)v15;
  if (v15)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v14;
  }
  v52 = v9;
  v51 = v7;
  v17 = v58;
  v18 = a1[3];
  v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v19 = sub_1BB872874();
  LOBYTE(v18) = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  v20 = v57;
  v22 = v59;
  v21 = v60;
  if ((v18 & 1) != 0)
  {
    v23 = sub_1BB8740EC();
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v25 = (_BYTE *)(v23 + 48);
      while (*v25 != 1)
      {
        v25 += 24;
        if (!--v24)
          goto LABEL_7;
      }
      v33 = *((_QWORD *)v25 - 2);
      v32 = *((_QWORD *)v25 - 1);
      swift_bridgeObjectRetain_n();
      v34 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v34);
      *(&v47 - 4) = (uint64_t)&_s10CodingKeysON_60;
      *(&v47 - 3) = sub_1BAEB68EC();
      *(&v47 - 2) = sub_1BA833DF8();
      *(&v47 - 1) = sub_1BAEB6930();
      swift_getKeyPath();
      swift_retain();
      v14 = (_QWORD *)sub_1BAE71220((uint64_t)&unk_1E726DF60);
      swift_release_n();
      sub_1BA98D1F0();
      v16 = (void *)swift_allocError();
      *(_QWORD *)v35 = v33;
      *(_QWORD *)(v35 + 8) = v32;
      *(_QWORD *)(v35 + 16) = v14;
      *(_OWORD *)(v35 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v33, v32, 1);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
      a1 = v61;
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v26 = sub_1BAE0F8F8((uint64_t)v13, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEECD90);
  v28 = v27;
  v48 = v26;
  v49 = xmmword_1BB8A1A10;
  v64 = xmmword_1BB8A1A10;
  v65 = 0;
  v29 = sub_1BB8740F8();
  v50 = v11;
  if ((v29 & 1) != 0)
  {
    v62 = v49;
    v63 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v30 = v52;
    v31 = v56;
    sub_1BB8740D4();
    v37 = sub_1BB86DD08();
    v38 = v30;
    v39 = v37;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v31);
    v21 = v60;
  }
  else
  {
    v39 = MEMORY[0x1E0DEE9E8];
  }
  v60 = xmmword_1BB8D2D60;
  v64 = xmmword_1BB8D2D60;
  v65 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v58 = v28;
    v62 = v60;
    v63 = 0;
    sub_1BA4A2870(&qword_1ED3C45C8, (uint64_t (*)(uint64_t))sub_1BA4A2D24, MEMORY[0x1E0DB3140]);
    v40 = v54;
    sub_1BB8740D4();
    *(_QWORD *)&v60 = v39;
    v41 = sub_1BB86DD08();
    v42 = v22;
    v43 = v41;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v42);
    v28 = v58;
  }
  else
  {
    *(_QWORD *)&v60 = v39;
    v43 = MEMORY[0x1E0DEE9E8];
  }
  v64 = xmmword_1BB8D2D70;
  v65 = 0;
  sub_1BA4FB6A0();
  v44 = v55;
  sub_1BB8740D4();
  v45 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v44, v17);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v20);
  type metadata accessor for FormatResetNode();
  v46 = v28;
  v14 = (_QWORD *)swift_allocObject();
  swift_beginAccess();
  v14[2] = v48;
  v14[3] = v46;
  swift_beginAccess();
  v14[4] = v60;
  swift_beginAccess();
  v14[5] = v43;
  swift_beginAccess();
  v14[6] = v45;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  return v14;
}

_BYTE *sub_1BA4D7670(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA4D768C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

_BYTE *sub_1BA4D768C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _BYTE v20[32];

  v5 = sub_1BB873A2C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v20[-v7];
  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v20[-v14];
  sub_1BA4D78C8(a1, (uint64_t)v20);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v16 = swift_dynamicCast();
  v17 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if ((v16 & 1) != 0)
  {
    v17(v8, 0, 1, a3);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v15, v8, a3);
    sub_1BB86EAAC();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v12, v15, a3);
    v8 = (_BYTE *)sub_1BB86E9D4();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v15, a3);
  }
  else
  {
    v17(v8, 1, 1, a3);
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    sub_1BB2ED7F8();
    swift_allocError();
    *(_OWORD *)v18 = xmmword_1BB8D2D60;
    *(_BYTE *)(v18 + 16) = 5;
    swift_willThrow();
  }
  return v8;
}

void sub_1BA4D787C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEE9C0] + 8);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BA4D78C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA4D7928(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1BA4D7948()
{
  uint64_t v0;

  return sub_1BA4D7970(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1BA4D7950()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1BA4D7970(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1BA4D7990(_QWORD *a1)
{
  return FormatGroup.encode(to:)(a1);
}

uint64_t sub_1BA4D79A4(_QWORD *a1)
{
  return FormatDimensionSizing.encode(to:)(a1);
}

uint64_t sub_1BA4D79B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
  return sub_1BB52F484(a1, v1 + ((v3 + 16) & ~v3));
}

_QWORD *assignWithTake for FormatVideoPlayerContent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1BA4D7A3C()
{
  sub_1BA4D7AE4();
  return sub_1BB872D60();
}

uint64_t sub_1BA4D7A98()
{
  sub_1BA4D7AE4();
  return sub_1BB872D0C();
}

unint64_t sub_1BA4D7AE4()
{
  unint64_t result;

  result = qword_1ED3A7F18;
  if (!qword_1ED3A7F18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB933BEC, &_s8ResolvedO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A7F18);
  }
  return result;
}

uint64_t sub_1BA4D7B28()
{
  sub_1BA4D7BD0();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4D7B74()
{
  sub_1BA4D7BD0();
  return sub_1BB872D60();
}

unint64_t sub_1BA4D7BD0()
{
  unint64_t result;

  result = qword_1ED3C9B88;
  if (!qword_1ED3C9B88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.URL.CodingType, &type metadata for FormatWebEmbedBinding.URL.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3C9B88);
  }
  return result;
}

id sub_1BA4D7C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  v24[1] = a2;
  v2 = sub_1BB86C9DC();
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA49BD7C();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86C9E8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86CAD8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v17 = (void *)sub_1BB872970();
  objc_msgSend(v16, sel_setDateFormat_, v17);

  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CB0ED8], v8);
  sub_1BB86C9F4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = (void *)sub_1BB86CA60();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  objc_msgSend(v16, sel_setCalendar_, v18);

  sub_1BB86CB2C();
  v19 = sub_1BB86CB50();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v19) != 1)
  {
    v21 = (void *)sub_1BB86CB38();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v19);
  }
  objc_msgSend(v16, sel_setTimeZone_, v21);

  sub_1BB86C8EC();
  v22 = (void *)sub_1BB86C940();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
  objc_msgSend(v16, sel_setLocale_, v22);

  return v16;
}

uint64_t FeedAdGroupDataProvider.FailureReason.description.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = 0xD000000000000019;
  v2 = *(_QWORD *)(v0 + 8);
  if (v2)
  {
    if (v2 == 1)
    {
      return 0x2073692064656546;
    }
    else
    {
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      sub_1BB872AFC((_QWORD *)0x746E6563616A6441);
      sub_1BB872AFC("Feed does not support ads");
      return 0x746E6563616A6441;
    }
  }
  return result;
}

uint64_t initializeWithCopy for FormatConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __int128 v12;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = a2 + 24;
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v8 = *(void **)(a2 + 32);
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v8;
    v10 = *(_QWORD *)(a2 + 48);
    v9 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v9;
    swift_bridgeObjectRetain();
    v11 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(v6 + 32);
  }
  return a1;
}

uint64_t sub_1BA4D8040()
{
  sub_1BA4D80E8();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4D808C()
{
  sub_1BA4D80E8();
  return sub_1BB872D60();
}

unint64_t sub_1BA4D80E8()
{
  unint64_t result;

  result = qword_1ED3CA528;
  if (!qword_1ED3CA528)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0D98, &_s10CodingTypeON_18);
    atomic_store(result, (unint64_t *)&qword_1ED3CA528);
  }
  return result;
}

uint64_t sub_1BA4D812C()
{
  sub_1BA4D81D4();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4D8178()
{
  sub_1BA4D81D4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4D81D4()
{
  unint64_t result;

  result = qword_1ED3CB280;
  if (!qword_1ED3CB280)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C38C8, &_s10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3CB280);
  }
  return result;
}

uint64_t destroy for FormatRegex(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  sub_1BA4D82D0(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for FormatRegex(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  sub_1BA4D82D0(0);
  v9 = v8;
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v6, v7, v9);
  return a1;
}

void sub_1BA4D82D0(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3C48C8, MEMORY[0x1E0DF1E50], MEMORY[0x1E0DF1F50]);
}

uint64_t FeedGroupEmitterCursor.unboxCursor<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *v2;
  if (*(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 176)))
  {
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = *(_QWORD *)(v4 + 80);
    v5[3] = a2;
    v5[4] = *(_QWORD *)(v4 + 88);
    swift_retain();
    v6 = (void *)sub_1BB86E854();
    v7 = sub_1BB86E968();
    swift_release();
    swift_release();

    return v7;
  }
  else
  {
    sub_1BB86EAAC();
    sub_1BB2ED7F8();
    swift_allocError();
    *(_OWORD *)v9 = xmmword_1BB8A1A10;
    *(_BYTE *)(v9 + 16) = 5;
    return sub_1BB86E9BC();
  }
}

uint64_t sub_1BA4D83D0()
{
  sub_1BA4D8478();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4D841C()
{
  sub_1BA4D8478();
  return sub_1BB872D60();
}

unint64_t sub_1BA4D8478()
{
  unint64_t result;

  result = qword_1ED3CA460;
  if (!qword_1ED3CA460)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B87F0, &_s10CodingTypeON_104);
    atomic_store(result, (unint64_t *)&qword_1ED3CA460);
  }
  return result;
}

uint64_t _s8NewsFeed17SharedItemManagerC24loadInitialItemsIfNeeded13TeaFoundation7PromiseCySayAA0cD0VGGyF_0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  char *v7;

  v1 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager____lazy_storage___initializingPromise;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed17SharedItemManager____lazy_storage___initializingPromise])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed17SharedItemManager____lazy_storage___initializingPromise];
  }
  else
  {
    MEMORY[0x1E0C80A78](0);
    v7 = v0;
    sub_1BA81DB7C(v3);
    sub_1BB86EC14();
    *(_QWORD *)(swift_allocObject() + 16) = v0;
    v4 = v0;
    v5 = (void *)sub_1BB86E854();
    v2 = sub_1BB86E9EC();
    swift_release();
    swift_release();

    *(_QWORD *)&v7[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1BA4D85C0()
{
  sub_1BA4D8668();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4D860C()
{
  sub_1BA4D8668();
  return sub_1BB872D60();
}

unint64_t sub_1BA4D8668()
{
  unint64_t result;

  result = qword_1ED3C7760;
  if (!qword_1ED3C7760)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92582C, &_s14descr1E731D319V4TextO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C7760);
  }
  return result;
}

Swift::Double __swiftcall Double.millisecondsUntilCurrentMediaTime()()
{
  double v0;

  return (CACurrentMediaTime() - v0) * 1000.0;
}

Swift::Void __swiftcall LocationDetectionManager.sceneWillEnterForeground()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1BA8265E4;
  *(_QWORD *)(v1 + 24) = v0;
  sub_1BB86E050();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1BB247DCC;
  *(_QWORD *)(v2 + 24) = v1;
  swift_retain_n();
  swift_retain();
  sub_1BB86E044();
  swift_release_n();
  swift_release();
  swift_release();
}

uint64_t sub_1BA4D87B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, _QWORD *);
  uint64_t v31;
  char *v32;
  _QWORD v33[4];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v37 = a7;
  v38 = a8;
  v36 = a6;
  sub_1BA71C89C();
  v39 = v14;
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a2;
  v44 = a3;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v18);
  v20 = v43;
  v19 = v44;
  v45 = a1;
  KeyPath = swift_getKeyPath();
  swift_beginAccess();
  v40 = a4;
  v42 = *(_QWORD *)(a4 + 32);
  v22 = v42;
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v22);
  v23 = v41;
  sub_1BA717E88();
  sub_1BA719718(v22);
  if (v23)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v34 = v17;
    v35 = v15;
    v41 = KeyPath;
    swift_beginAccess();
    swift_retain();
    v25 = swift_bridgeObjectRetain();
    v26 = sub_1BB67D4D4(v25, a5);
    v33[0] = a9;
    swift_bridgeObjectRelease();
    swift_release();
    v27 = (_QWORD *)swift_allocObject();
    v28 = v37;
    v27[2] = v36;
    v27[3] = v28;
    v33[2] = v20;
    v33[3] = v26;
    v29 = v38;
    v27[4] = v40;
    v27[5] = v29;
    v27[6] = v20;
    v27[7] = v19;
    v27[8] = a9;
    v30 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BA735194(0, &qword_1ED3C4558, MEMORY[0x1E0DB5A10]);
    v33[1] = v31;
    sub_1BA735154(&qword_1ED3C4550, &qword_1ED3C4558, v30, MEMORY[0x1E0DB5A18]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v32 = v34;
    sub_1BB86D534();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v39);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1BA4D8AC0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v0 + 240) = *(_QWORD *)(v0 + 288);
  v1 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
  if ((sub_1BB873168() & 1) != 0)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 536) = v2;
    *v2 = v0;
    v2[1] = sub_1BA4A7DB8;
    v3 = *(_QWORD *)(v0 + 520);
    v4 = *(_QWORD *)(v0 + 296);
    v5 = *(_QWORD **)(v0 + 280);
    v2[22] = *(_QWORD *)(v0 + 304);
    v2[21] = v4;
    v2[19] = v3;
    v2[20] = v5;
    v2[23] = *v5;
    return swift_task_switch();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 280);
    v7 = *(_QWORD *)(v0 + 288);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v7;
    *(_QWORD *)(v9 + 24) = FeedCursorContainer.init(cursor:)(v8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9 | 0x2000000000000000);
  }
}

uint64_t sub_1BA4D8CB8()
{
  sub_1BA4D8D14();
  return sub_1BB872D60();
}

unint64_t sub_1BA4D8D14()
{
  unint64_t result;

  result = qword_1ED39AD00[0];
  if (!qword_1ED39AD00[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitterPriority, &type metadata for FeedGroupEmitterPriority);
    atomic_store(result, qword_1ED39AD00);
  }
  return result;
}

uint64_t sub_1BA4D8D58()
{
  sub_1BA4D8E00();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4D8DA4()
{
  sub_1BA4D8E00();
  return sub_1BB872D60();
}

unint64_t sub_1BA4D8E00()
{
  unint64_t result;

  result = qword_1ED3CB290;
  if (!qword_1ED3CB290)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3990, &_s10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3CB290);
  }
  return result;
}

uint64_t sub_1BA4D8E44()
{
  sub_1BA4D8EEC();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4D8E90()
{
  sub_1BA4D8EEC();
  return sub_1BB872D60();
}

unint64_t sub_1BA4D8EEC()
{
  unint64_t result;

  result = qword_1ED3C7C68;
  if (!qword_1ED3C7C68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2210, &_s10CodingTypeON_164);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C68);
  }
  return result;
}

uint64_t *sub_1BA4D8F30(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __int128 v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _OWORD *v46;
  __int128 *v47;
  __int128 v48;
  __int128 v49;
  uint64_t *result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6 & 0xF8 | 7;
  v8 = ~v7;
  v9 = *(_QWORD *)(v5 + 64);
  v10 = v9 + 7;
  if (v9 <= ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v9 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v9 <= 0x10)
    v11 = 16;
  else
    v11 = v9;
  if ((v11 & 0xFFFFFFFFFFFFFFF8) + 48 <= v11)
    v12 = v11;
  else
    v12 = (v11 & 0xFFFFFFFFFFFFFFF8) + 48;
  if ((v6 & 0x1000F8) != 0
    || (((v6 & 0xF8) + 31) & ~v7)
     + (((((((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v13 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFF8);
    *v13 = *v14;
    v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
    *v15 = *v16;
    v17 = ((unint64_t)v15 + 15) & v8;
    v18 = ((unint64_t)v16 + 15) & v8;
    v21 = v11 + 1;
    v22 = v12 + 1;
    switch(*(_BYTE *)(v18 + v12))
    {
      case 0:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, AssociatedTypeWitness);
        v23 = (v10 + v17) & 0xFFFFFFFFFFFFFFF8;
        v24 = (v10 + v18) & 0xFFFFFFFFFFFFFFF8;
        v25 = *(_QWORD *)(v24 + 24);
        if (v25 < 0xFFFFFFFF)
        {
          v33 = *(_OWORD *)(v24 + 16);
          *(_OWORD *)v23 = *(_OWORD *)v24;
          *(_OWORD *)(v23 + 16) = v33;
        }
        else
        {
          *(_QWORD *)(v23 + 24) = v25;
          (**(void (***)(void))(v25 - 8))();
        }
        *(_BYTE *)(v17 + v12) = 0;
        break;
      case 1:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, AssociatedTypeWitness);
        v26 = (v10 + v17) & 0xFFFFFFFFFFFFFFF8;
        v27 = (v10 + v18) & 0xFFFFFFFFFFFFFFF8;
        v28 = *(_QWORD *)(v27 + 24);
        if (v28 < 0xFFFFFFFF)
        {
          v34 = *(_OWORD *)(v27 + 16);
          *(_OWORD *)v26 = *(_OWORD *)v27;
          *(_OWORD *)(v26 + 16) = v34;
        }
        else
        {
          *(_QWORD *)(v26 + 24) = v28;
          (**(void (***)(void))(v28 - 8))();
        }
        v29 = 1;
        goto LABEL_45;
      case 2:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, AssociatedTypeWitness);
        v29 = 2;
        goto LABEL_45;
      case 3:
        *(_QWORD *)v17 = *(_QWORD *)v18;
        *(_QWORD *)((((unint64_t)v15 + 15) & v8) + 8) = *(_QWORD *)((((unint64_t)v16 + 15) & v8) + 8);
        v30 = 3;
        goto LABEL_28;
      case 4:
        *(_QWORD *)v17 = *(_QWORD *)v18;
        *(_QWORD *)((((unint64_t)v15 + 15) & v8) + 8) = *(_QWORD *)((((unint64_t)v16 + 15) & v8) + 8);
        v30 = 4;
        goto LABEL_28;
      case 5:
        *(_QWORD *)v17 = *(_QWORD *)v18;
        *(_QWORD *)((((unint64_t)v15 + 15) & v8) + 8) = *(_QWORD *)((((unint64_t)v16 + 15) & v8) + 8);
        v30 = 5;
LABEL_28:
        *(_BYTE *)(v17 + v12) = v30;
        swift_bridgeObjectRetain();
        break;
      case 6:
        v31 = *(unsigned __int8 *)(v18 + v11);
        if (v31 >= 3)
        {
          if (v11 <= 3)
            v32 = v11;
          else
            v32 = 4;
          __asm { BR              X13 }
        }
        if (v31 == 2)
        {
          *(_QWORD *)v17 = *(_QWORD *)v18;
          *(_QWORD *)(v17 + 8) = *(_QWORD *)((((unint64_t)v16 + 15) & v8) + 8);
          *(_BYTE *)(v17 + v11) = 2;
          swift_bridgeObjectRetain();
        }
        else if (v31 == 1)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, AssociatedTypeWitness);
          *(_BYTE *)(v17 + v11) = 1;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, AssociatedTypeWitness);
          v35 = (v10 + v17) & 0xFFFFFFFFFFFFFFF8;
          v36 = (v10 + v18) & 0xFFFFFFFFFFFFFFF8;
          v37 = *(_QWORD *)(v36 + 24);
          if (v37 < 0xFFFFFFFF)
          {
            v38 = *(_OWORD *)(v36 + 16);
            *(_OWORD *)v35 = *(_OWORD *)v36;
            *(_OWORD *)(v35 + 16) = v38;
          }
          else
          {
            *(_QWORD *)(v35 + 24) = v37;
            (**(void (***)(void))(v37 - 8))();
          }
          *(_BYTE *)(v17 + v11) = 0;
        }
        v39 = ((v17 | 7) + v21) & 0xFFFFFFFFFFFFFFF8;
        v40 = ((v18 | 7) + v21) & 0xFFFFFFFFFFFFFFF8;
        v41 = *(_QWORD *)(v40 + 24);
        *(_QWORD *)(v39 + 24) = v41;
        *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
        (**(void (***)(void))(v41 - 8))();
        v29 = 6;
LABEL_45:
        *(_BYTE *)(v17 + v12) = v29;
        break;
      default:
        if (v12 <= 3)
          v19 = v12;
        else
          v19 = 4;
        __asm { BR              X13 }
        return result;
    }
    v42 = (_QWORD *)(((v17 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
    v43 = (_QWORD *)(((v18 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
    *v42 = *v43;
    v44 = (_QWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFF8);
    v45 = (_QWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v44 = *v45;
    v46 = (_OWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
    v47 = (__int128 *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
    v48 = *v47;
    v49 = v47[1];
    *(_OWORD *)((char *)v46 + 26) = *(__int128 *)((char *)v47 + 26);
    *v46 = v48;
    v46[1] = v49;
    *(_QWORD *)(((unint64_t)v46 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v47 + 49) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BA4D9414(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  id v4;
  id v5;

  v3 = sub_1BB86EFEC();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_1BB8729A0();

  }
  return sub_1BB86EFD4();
}

_QWORD *sub_1BA4D94F8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, AssociatedTypeWitness);
  v11 = *(_QWORD *)(v6 + 64);
  v12 = sub_1BB86C8B0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v16 = (v11 + v14 + v8) & ~v14;
  v17 = (v15 + v9) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v17, v12);
  v18 = *(_QWORD *)(v13 + 64) + 7;
  v19 = (_QWORD *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v19[1] = v20[1];
  v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA4D96D0()
{
  sub_1BA4D9778();
  return sub_1BB872D60();
}

uint64_t sub_1BA4D972C()
{
  sub_1BA4D9778();
  return sub_1BB872D0C();
}

unint64_t sub_1BA4D9778()
{
  unint64_t result;

  result = qword_1ED3C90A0;
  if (!qword_1ED3C90A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2B70, &_s10CodingTypeON_189);
    atomic_store(result, (unint64_t *)&qword_1ED3C90A0);
  }
  return result;
}

uint64_t sub_1BA4D97BC()
{
  sub_1BB86E104();
  type metadata accessor for EngagementBannerViewLayoutAttributesFactory();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA4D9CE8(0, qword_1ED3D4A30);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E110();
  sub_1BB86E5CC();
  return swift_release();
}

uint64_t FeedCursorTracker.init(snapshot:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;

  v2 = v1;
  v4 = *(_QWORD **)v1;
  v5 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v5);
  v6 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v1 + v4[13]) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112)) = v6;
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v8 = v4[10];
  v9 = v4[11];
  type metadata accessor for FeedCursorTrackerGroup(0, v8, v9, v10);
  *(_QWORD *)(v1 + v7) = sub_1BB87273C();
  v11 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  *(_QWORD *)(v1 + v11) = sub_1BB86DD50();
  v12 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v12, a1, AssociatedTypeWitness);
  v15 = (int *)type metadata accessor for FeedCursorTrackerSnapshot(0, v8, v9, v14);
  v16 = *(_QWORD *)(a1 + v15[9]);
  v17 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104));
  swift_beginAccess();
  *v17 = v16;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a1 + v15[11]);
  v19 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  swift_beginAccess();
  *v19 = v18;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a1 + v15[10]);
  v21 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112));
  swift_beginAccess();
  *v21 = v20;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BA4D9B10(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];
  __int128 v19;
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4D9CE8(0, &qword_1ED3BFB68);
  result = sub_1BB86DF48();
  if (v22)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA4D9CE8(0, &qword_1ED3BBD50);
    result = sub_1BB86DF48();
    if (v20)
    {
      v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
      v4 = MEMORY[0x1E0C80A78](v3);
      v6 = (_QWORD *)((char *)&v18[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v7 + 16))(v6, v4);
      v8 = *v6;
      v9 = type metadata accessor for EngagementBannerViewStyler();
      v18[3] = v9;
      v18[4] = &off_1E72E60C0;
      v18[0] = v8;
      type metadata accessor for EngagementBannerViewLayoutAttributesFactory();
      v10 = (_QWORD *)swift_allocObject();
      v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v9);
      v12 = MEMORY[0x1E0C80A78](v11);
      v14 = (_QWORD *)((char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
      v16 = *v14;
      v10[5] = v9;
      v10[6] = &off_1E72E60C0;
      v10[2] = v16;
      sub_1BA4CECCC(&v19, (uint64_t)(v10 + 7));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      return (uint64_t)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4D9CE8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BA4D9D34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97C0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v4 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA4EFE00(0, &qword_1ED3B9868);
    result = sub_1BB86DF3C();
    if (result)
    {
      v5 = result;
      type metadata accessor for FeedFontManager();
      v6 = (_QWORD *)swift_allocObject();
      sub_1BB86DD38();
      sub_1BB86DD5C();
      swift_allocObject();
      v7 = sub_1BB86DD50();
      v8 = MEMORY[0x1E0DEE9E8];
      v6[4] = v7;
      v6[5] = v8;
      v6[2] = v4;
      v6[3] = v5;
      return (uint64_t)v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4D9E7C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (**v9)(char *, _QWORD);
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  char v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  int v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  void (**v60)(char *, _QWORD);
  __int128 v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  __int128 v65;
  char v66;
  char *v67;

  sub_1BA6927D0();
  v55 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  MEMORY[0x1E0C80A78](v2);
  v57 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  *(_QWORD *)&v58 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v44 - v6;
  sub_1BAEF04B0();
  v59 = v8;
  v9 = *(void (***)(char *, _QWORD))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA0824();
  sub_1BA4A2870(&qword_1ED3D1020, (uint64_t (*)(uint64_t))sub_1BAEA0824, (uint64_t)&unk_1BB8FFC6C);
  v13 = v60;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v54 = v7;
  *(_QWORD *)&v53 = v5;
  v15 = v58;
  v60 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16 = sub_1BB872874();
  v17 = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v18 = v59;
  v19 = v11;
  if ((v17 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = *((_QWORD *)v22 - 2);
      v26 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v28 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v28);
      sub_1BAEA08A4();
      sub_1BA82A19C();
      sub_1BAEA08E8();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v29 = sub_1BAE71220((uint64_t)&unk_1E72525B8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v30 = v27;
      *(_QWORD *)(v30 + 8) = v26;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v27, v26, 1);
      v60[1](v11, v18);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v23 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF04B0);
  v25 = v24;
  v65 = xmmword_1BB8A1A10;
  v66 = 0;
  sub_1BA8228D0();
  sub_1BB8740D4();
  v32 = v61;
  type metadata accessor for FormatLayeredMediaNodeStyle();
  v65 = xmmword_1BB8D2D60;
  v66 = 0;
  sub_1BA4A2870(&qword_1ED3CC0D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeStyle, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeStyle);
  sub_1BB874068();
  v52 = v32;
  v33 = v61;
  type metadata accessor for FormatAnimationNodeStyle();
  v65 = xmmword_1BB8D2D70;
  v66 = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v51 = v33;
  v50 = v23;
  v34 = v61;
  v65 = xmmword_1BB8D2D90;
  v66 = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v49 = v34;
  v35 = v61;
  v65 = xmmword_1BB8D2D80;
  v66 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v48 = v61;
  v47 = xmmword_1BB8D2DA0;
  v65 = xmmword_1BB8D2DA0;
  v66 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v46 = v35;
    v61 = v47;
    v62 = 0;
    sub_1BAEB7D04();
    v36 = (uint64_t)v54;
    sub_1BB8740D4();
    *(_QWORD *)&v47 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v36, v15);
    v35 = v46;
  }
  else
  {
    *(_QWORD *)&v47 = MEMORY[0x1E0DEE9D8];
  }
  v58 = xmmword_1BB8D2DB0;
  v65 = xmmword_1BB8D2DB0;
  v66 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v58;
    v62 = 0;
    sub_1BB8740D4();
    v54 = v67;
  }
  else
  {
    v54 = 0;
  }
  v58 = xmmword_1BB8D2DD0;
  v65 = xmmword_1BB8D2DD0;
  v66 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v58;
    v62 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)&v58 = a1;
    v37 = (unint64_t)v67;
  }
  else
  {
    *(_QWORD *)&v58 = a1;
    v37 = 0x8000000000000000;
  }
  v53 = xmmword_1BB8D2DE0;
  v65 = xmmword_1BB8D2DE0;
  v66 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v53;
    v62 = 0;
    sub_1BB8740D4();
    *(_QWORD *)&v53 = v25;
    v38 = v19;
    v39 = (char)v67;
  }
  else
  {
    *(_QWORD *)&v53 = v25;
    v38 = v19;
    v39 = 1;
  }
  v65 = xmmword_1BB8D2DF0;
  v66 = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  v46 = v61;
  v45 = BYTE8(v61);
  v44 = xmmword_1BB8D2E00;
  v65 = xmmword_1BB8D2E00;
  v66 = 0;
  v40 = v38;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v61 = v44;
    v62 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v42 = v56;
    v41 = v57;
    v43 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v42);
  }
  else
  {
    v43 = MEMORY[0x1E0DEE9E8];
  }
  v60[1](v40, v18);
  *(_QWORD *)&v61 = v52;
  v67 = (char *)v35;
  v63 = v37;
  v64 = v48;
  *(_QWORD *)&v65 = v46;
  BYTE8(v65) = v45;
  type metadata accessor for FormatLayeredMediaNode();
  swift_allocObject();
  KeyPath = FormatLayeredMediaNode.init(identifier:content:style:animation:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(v50, v53, (uint64_t *)&v61, v51, v49, (uint64_t *)&v67, &v64, v47, (uint64_t)v54, (uint64_t *)&v63, v39, (uint64_t *)&v65, v43);
  __swift_destroy_boxed_opaque_existential_1(v58);
  return KeyPath;
}

unint64_t Blueprint.storedCursorContainer<A>(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;

  if (qword_1ED3C5AA8 != -1)
    swift_once();
  sub_1BB871650();
  if (v10)
  {
    type metadata accessor for FeedCursorToken();
    if (swift_dynamicCast())
      v5 = v8;
    else
      v5 = 0;
  }
  else
  {
    sub_1BA6EDA74((uint64_t)v9);
    v5 = 0;
  }
  v6 = FeedCursorStoreManager.get<A>(token:)(v5, a2, a3);
  swift_release();
  return v6;
}

uint64_t sub_1BA4DABBC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return HeadlineViewLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1BA4DABD0(_QWORD *a1)
{
  return FormatCompilerOptions.Newsroom.Environment.encode(to:)(a1);
}

uint64_t sub_1BA4DABE4(_QWORD *a1)
{
  return sub_1BB62FDE8(a1);
}

uint64_t *sub_1BA4DABF8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t rawValue;
  uint64_t rawValuea;
  uint64_t rawValue_8;

  v27 = *v3;
  v28 = *a1;
  v6 = v3[2];
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87A390;
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  if (!rawValue_8)
  {
    __break(1u);
    goto LABEL_10;
  }
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BA6A2D8C();
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = rawValue;
  *(_QWORD *)(v7 + 40) = rawValue_8;
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  if (!v31)
  {
LABEL_10:
    __break(1u);
    __break(1u);
    JUMPOUT(0x1BA4DAFBCLL);
  }
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 72) = v30;
  *(_QWORD *)(v7 + 80) = v31;
  v10 = sub_1BB87330C();
  sub_1BB86EF44("Feed database decoding %{public}@ cursor %{public}@", 51, 2, &dword_1BA493000, v6, v10, v7);
  swift_bridgeObjectRelease();
  v11 = sub_1BA4E4A18(a1, (_QWORD *)a2, a3);
  if (!v29)
  {
    v13 = v11;
    rawValuea = v11;
    v14 = *(_QWORD *)(v28 + 80);
    v15 = *(_QWORD *)(v28 + 88);
    type metadata accessor for FeedDatabaseGroup(255, v14, v15, v12);
    v16 = sub_1BB872EE0();
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v16);
    if ((sub_1BB873168() & 1) != 0)
    {
      sub_1BB86F064();
      sub_1BB86F22C();
      swift_release();
      v18 = rawValue_8;
      v19 = rawValuea;
      FeedCursorKind.init(rawValue:)(*(Swift::String *)(&v18 - 1));
      __asm { BR              X10 }
    }
    type metadata accessor for FeedDatabaseCursor(0, v14, v15, v17);
    v20 = swift_allocObject();
    swift_weakInit();
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = *(_QWORD *)(v27 + 80);
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(v27 + 88);
    *(_OWORD *)(v21 + 32) = *(_OWORD *)(v27 + 96);
    *(_QWORD *)(v21 + 48) = *(_QWORD *)(v27 + 112);
    *(_OWORD *)(v21 + 56) = *(_OWORD *)(v27 + 120);
    v22 = *(_QWORD *)(v27 + 136);
    v23 = *(_OWORD *)a2;
    *(_OWORD *)(v21 + 104) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v21 + 88) = v23;
    v24 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v21 + 168) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(v21 + 152) = v24;
    v25 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v21 + 136) = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(v21 + 72) = v22;
    *(_QWORD *)(v21 + 80) = v20;
    *(_OWORD *)(v21 + 120) = v25;
    sub_1BA4C9ACC(a2);
    sub_1BA4C9ACC(a2);
    v3 = sub_1BA83C924((_OWORD *)a2, v13, (uint64_t)sub_1BA8382E0, v21);
    swift_release();
    sub_1BA5D1B6C(a2);
  }
  return v3;
}

uint64_t sub_1BA4DAFC0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  uint64_t v23;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D3B90);
  result = sub_1BB86DF48();
  if (v23)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, &qword_1ED3D5020);
    result = sub_1BB86DF48();
    v3 = v20;
    if (v20)
    {
      v4 = v21;
      v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      v6 = MEMORY[0x1E0C80A78](v5);
      v8 = (_QWORD *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      v10 = *v8;
      v11 = type metadata accessor for FormatImageRenderer();
      v19[3] = v11;
      v19[4] = &off_1E72E1F68;
      v19[0] = v10;
      type metadata accessor for FormatVideoPlayerNodeRenderer();
      v12 = (_QWORD *)swift_allocObject();
      v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v11);
      v14 = MEMORY[0x1E0C80A78](v13);
      v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
      v18 = *v16;
      v12[5] = v11;
      v12[6] = &off_1E72E1F68;
      v12[2] = v18;
      v12[7] = v3;
      v12[8] = v4;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      return (uint64_t)v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4DB1A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D2EA8);
  result = sub_1BB86DF18();
  if (!v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97C0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedItemRendererTool();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = sub_1BB86DF48();
  if (v9)
  {
    v7 = type metadata accessor for FormatImageRenderer();
    v8 = (_QWORD *)swift_allocObject();
    result = sub_1BA4CECCC(&v11, (uint64_t)(v8 + 2));
    v8[7] = v6;
    v8[8] = v5;
    v8[9] = v9;
    v8[10] = v10;
    a2[3] = v7;
    a2[4] = &off_1E72E1F68;
    *a2 = v8;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

double sub_1BA4DB354@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BA4DB398(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BA4DB398@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1ED39DF50, (uint64_t (*)(void))sub_1BA4DB5AC, (uint64_t)&type metadata for A6_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4DB5AC();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BA4DB5AC()
{
  unint64_t result;

  result = qword_1ED39DEB8;
  if (!qword_1ED39DEB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89ABEC, &type metadata for A6_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39DEB8);
  }
  return result;
}

double sub_1BA4DB5F0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BA4DB634(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BA4DB634@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C48, (uint64_t (*)(void))sub_1BA4DB8BC, (uint64_t)&type metadata for A6_V3.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4DB8BC();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

uint64_t sub_1BA4DB848(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4C576C(255, &qword_1ED3B94A0);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA4DB8BC()
{
  unint64_t result;

  result = qword_1ED3B8EA8;
  if (!qword_1ED3B8EA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB954094, &type metadata for A6_V3.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B8EA8);
  }
  return result;
}

uint64_t sub_1BA4DB900@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3BEB88);
  result = sub_1BB86DF48();
  if (!v14)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3BFB60);
  result = sub_1BB86DF48();
  if (!v12)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&qword_1ED3C4370);
  result = sub_1BB86DF48();
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3C4250);
  result = sub_1BB86DF48();
  if (v8)
  {
    v5 = type metadata accessor for ActivityItemsConfigurationFactory();
    v6 = swift_allocObject();
    sub_1BA4CECCC(&v13, v6 + 16);
    sub_1BA4CECCC(&v11, v6 + 56);
    sub_1BA4CECCC(&v9, v6 + 96);
    result = sub_1BA4CECCC(&v7, v6 + 136);
    a2[3] = v5;
    a2[4] = (uint64_t)&protocol witness table for ActivityItemsConfigurationFactory;
    *a2 = v6;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA4DBAD0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D2EA8);
  result = sub_1BB86DF18();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1BB86DF18();
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedItemRendererTool();
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    type metadata accessor for HeadlineViewRenderer();
    v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for AdPresentationDelegateProvider();
    v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *(_QWORD *)(v7 + 24) = 1;
    *(_QWORD *)(v6 + 24) = v7;
    sub_1BA4CECCC(&v10, v6 + 32);
    result = sub_1BA4CECCC(&v8, v6 + 72);
    *(_QWORD *)(v6 + 112) = v5;
    *a2 = v6;
    a2[1] = (uint64_t)&off_1E72FD438;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PuzzleRankProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA4DBC9C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97C0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA4EFE00(0, &qword_1ED3B9830);
    result = sub_1BB86DF3C();
    if (result)
    {
      v6 = result;
      v7 = type metadata accessor for AssetHandleFactory();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v5;
      *(_QWORD *)(result + 24) = v6;
      a2[3] = v7;
      a2[4] = (uint64_t)&off_1E730EA18;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AssetHandleFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA4DBDA4()
{
  sub_1BB8745CC();
  FormatItemTrait.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA4DBE04@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatTextNodeTransform.init(from:)(a1, a2);
}

uint64_t FormatTextNodeTransform.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BA5FD784, (uint64_t)&_s10CodingTypeON_7, (uint64_t)&unk_1E726F248, a2);
}

uint64_t sub_1BA4DBE44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA4DBE5C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BA4DBE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v6 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (!*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  v7 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  swift_bridgeObjectRetain();
  sub_1BA6E35A8(v7, v6);
  if ((v9 & 1) == 0)
  {
LABEL_5:
    type metadata accessor for FeedCursorManifestGroupEntry(0, a3, a4, v8);
    sub_1BB872E68();
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
LABEL_6:
  swift_bridgeObjectRelease();
  type metadata accessor for FeedCursorManifestGroupEntry(255, a3, a4, v10);
  sub_1BB872EE0();
  swift_retain();
  sub_1BB872EB0();
  sub_1BB872814();
  swift_bridgeObjectRetain();
  return sub_1BB872838();
}

uint64_t sub_1BA4DBFA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPercentage.init(from:)(a1, a2);
}

uint64_t FormatPercentage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v3 = v2;
  v27 = a2;
  sub_1BAEAB02C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEAB0A4();
  sub_1BA4A2870(&qword_1ED3AD808, (uint64_t (*)(uint64_t))sub_1BAEAB0A4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_DWORD *)v27;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v20 = *((_QWORD *)v17 - 2);
      v21 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      v27 = v13;
      MEMORY[0x1E0C80A78](v22);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_79;
      *(&v26 - 3) = sub_1BAEAB124();
      *(&v26 - 2) = sub_1BA4DC2B4();
      *(&v26 - 1) = sub_1BAEAB168();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71130((uint64_t)&unk_1E726D580);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v28 = 0;
  v29 = 0;
  v30 = 0;
  sub_1BB8740BC();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4DC2B4()
{
  unint64_t result;

  result = qword_1ED3A59F8;
  if (!qword_1ED3A59F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C82E0, &_s10CodingKeysON_79);
    atomic_store(result, (unint64_t *)&qword_1ED3A59F8);
  }
  return result;
}

uint64_t sub_1BA4DC2F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatButtonNodeAction.init(from:)(a1, a2);
}

uint64_t sub_1BA4DC30C(_QWORD *a1)
{
  return FormatItem.encode(to:)(a1);
}

uint64_t sub_1BA4DC320(_QWORD *a1)
{
  return FormatImageNode.encode(to:)(a1);
}

uint64_t sub_1BA4DC340(_QWORD *a1)
{
  return FormatItemNodeStyle.encode(to:)(a1);
}

uint64_t type metadata accessor for FeedCursorStoreManager()
{
  return objc_opt_self();
}

uint64_t sub_1BA4DC380(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;

  v38 = a1;
  v39 = a6;
  v37 = a2;
  v32 = a7;
  v11 = *(_QWORD *)(*(_QWORD *)a7 + 80);
  v10 = *(_QWORD *)(*(_QWORD *)a7 + 88);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v36 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v40 = (char *)&v30 - v14;
  v15 = sub_1BB873A2C();
  MEMORY[0x1E0C80A78](v15);
  v31 = (char *)&v30 - v16;
  sub_1BA7AA598();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
  v33 = a3;
  v41 = a3;
  v34 = a4;
  v35 = a5;
  v42 = a4;
  v43 = a5;
  type metadata accessor for FeedPoolManager.Key(0, v11, v10, v18);
  v19 = sub_1BA4E48E4();
  v21 = v20;
  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v17 + 32) = v19;
  *(_QWORD *)(v17 + 40) = v21;
  v22 = sub_1BB87330C();
  sub_1BB86EF44("Feed pool completed fetch for key=%{public}@", 44, 2, &dword_1BA493000, v37, v22, v17);
  swift_bridgeObjectRelease();
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 88);
  v24 = v38;
  v25 = swift_checkMetadataState();
  v26 = v23(v25, AssociatedConformanceWitness);
  v27 = v36;
  if ((v26 & 1) != 0)
  {
    v28 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v31, v24, AssociatedTypeWitness);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, AssociatedTypeWitness);
    v41 = v33;
    v42 = v34;
    v43 = v35;
    swift_bridgeObjectRetain();
    sub_1BB86E7DC();
  }
  sub_1BB86EAAC();
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v40, v24, AssociatedTypeWitness);
  return sub_1BB86E9D4();
}

uint64_t initializeWithCopy for GroupLayoutBindingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1BA4DC6A8(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  return a1;
}

uint64_t sub_1BA4DC6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result;

  switch(a9)
  {
    case 0:
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_3;
    case 2:
    case 3:
LABEL_3:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA4DC71C()
{
  sub_1BA4DC7C4();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4DC768()
{
  sub_1BA4DC7C4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4DC7C4()
{
  unint64_t result;

  result = qword_1ED3CB698;
  if (!qword_1ED3CB698)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B53E8, &_s14descr1E72CC8B9V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3CB698);
  }
  return result;
}

uint64_t sub_1BA4DC808@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_1BB86D8C4();
  if (!v1)
  {
    v8 = v4;
    v9 = v5;
    v10 = v6;
    v11 = v7;
    sub_1BB86D8E8();
    a1[3] = (uint64_t)&type metadata for GapViewLayout.Attributes;
    result = swift_allocObject();
    *a1 = result;
    *(_QWORD *)(result + 16) = v8;
    *(_QWORD *)(result + 24) = v9;
    *(_QWORD *)(result + 32) = v10;
    *(_QWORD *)(result + 40) = v11;
    *(_OWORD *)(result + 48) = v12;
    *(_QWORD *)(result + 64) = v13;
    *(_QWORD *)(result + 72) = v14;
  }
  return result;
}

uint64_t sub_1BA4DC8D4()
{
  sub_1BA4DC97C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4DC920()
{
  sub_1BA4DC97C();
  return sub_1BB872D60();
}

unint64_t sub_1BA4DC97C()
{
  unint64_t result;

  result = qword_1ED3CB688;
  if (!qword_1ED3CB688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5320, &_s10CodingTypeON_130);
    atomic_store(result, (unint64_t *)&qword_1ED3CB688);
  }
  return result;
}

_QWORD *_s8NewsFeed20FormatQueryParameterVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1BA4DC9FC()
{
  sub_1BA4DCAA4();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4DCA48()
{
  sub_1BA4DCAA4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4DCAA4()
{
  unint64_t result;

  result = qword_1ED3CB828;
  if (!qword_1ED3CB828)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8018, &_s10CodingTypeON_109);
    atomic_store(result, (unint64_t *)&qword_1ED3CB828);
  }
  return result;
}

uint64_t destroy for GroupLayoutBindingError(uint64_t a1)
{
  return sub_1BA4DCB20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t sub_1BA4DCB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result;

  switch(a9)
  {
    case 0:
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 2:
    case 3:
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t destroy for FeedGap(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 48);
  if (result >= 0x11)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BA4DCBF4()
{
  return swift_initClassMetadata2();
}

uint64_t FeedLayoutStylerFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t destroy for FormatServiceOptions(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + a2[10];
  if (*(_QWORD *)v4)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v4 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v4 + 80);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v6 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = v5 + *(int *)(v6 + 24);
    v8 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      v9 = v7 + *(int *)(v8 + 24);
      v10 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v5 + *(int *)(v6 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1BA4DCE04@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroupCollection.init(from:)(a1, a2);
}

uint64_t sub_1BA4DCE18(_QWORD *a1)
{
  return FormatParagraphStyle.encode(to:)(a1);
}

uint64_t sub_1BA4DCE2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContent.init(from:)(a1, a2);
}

uint64_t FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:actionSenderHandler:)(uint64_t a1, double *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10[3];

  memset(v10, 0, sizeof(v10));
  return FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:sourceItemData:resizingProvider:actionSenderHandler:)(a1, a2, a3, a4, v10, *(_QWORD *)(v8 + 320), a5, a6, a7, a8);
}

uint64_t sub_1BA4DCE80()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4DCEAC + 4 * byte_1BB8AE83C[*v0]))(0x656C797473, 0xE500000000000000);
}

uint64_t sub_1BA4DCEAC()
{
  return 0x6F6974616D696E61;
}

uint64_t sub_1BA4DCEC8()
{
  return 1702521203;
}

uint64_t sub_1BA4DCED8()
{
  return 0x656D7473756A6461;
}

uint64_t sub_1BA4DCEF8()
{
  return 1885433183;
}

uint64_t sub_1BA4DCF08@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, double);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD v30[2];
  _QWORD *v31;
  _QWORD v32[3];
  uint64_t v33;
  _UNKNOWN **v34;
  _QWORD v35[5];
  _QWORD v36[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    v31 = a2;
    v6 = type metadata accessor for SportsDataServiceEndpoint();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    v36[3] = v6;
    v36[4] = &off_1E72E2808;
    v36[0] = v7;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    result = sub_1BB86DF3C();
    if (result)
    {
      v8 = result;
      v9 = type metadata accessor for SportsDataServiceResource();
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = v8;
      v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v6);
      v30[1] = v30;
      v12 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
      v13 = MEMORY[0x1E0C80A78](v11);
      v14 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
      v16 = *(void (**)(char *, double))(v15 + 16);
      v16((char *)v30 - v14, v13);
      v17 = *(_QWORD *)((char *)v30 - v14);
      v35[3] = v6;
      v35[4] = &off_1E72E2808;
      v35[0] = v17;
      v33 = v9;
      v34 = &off_1E7311180;
      v32[0] = v10;
      v18 = type metadata accessor for SportsDataServiceRequestBuilder();
      v19 = (_QWORD *)swift_allocObject();
      v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v6);
      v21 = MEMORY[0x1E0C80A78](v20);
      v16((char *)v30 - v14, v21);
      v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
      v23 = MEMORY[0x1E0C80A78](v22);
      v25 = (_QWORD *)((char *)v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
      v27 = *(_QWORD *)((char *)v30 - v14);
      v28 = *v25;
      v19[5] = v6;
      v19[6] = &off_1E72E2808;
      v19[2] = v27;
      v19[10] = v9;
      v19[11] = &off_1E7311180;
      v19[7] = v28;
      swift_retain();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      swift_release();
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      v29 = v31;
      v31[3] = v18;
      v29[4] = &off_1E727F6F8;
      *v29 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4DD1B0(_QWORD *a1, void (*a2)(_QWORD), void (*a3)(_QWORD))
{
  uint64_t result;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a2(0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v6 = result;
    a3(0);
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for LayeredMediaLayerRenderableProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA4DD250()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FormatMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BA4DD2D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  _BYTE v4[24];
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4DD3F4(0, (unint64_t *)&unk_1ED3D4820, (unint64_t *)&unk_1ED3D2EA8, MEMORY[0x1E0DB7438], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  result = sub_1BB86DF18();
  if (v5 != 1)
    return sub_1BA4DD398((uint64_t)v4, a2, (unint64_t *)&unk_1ED3D4820, (unint64_t *)&unk_1ED3D2EA8, MEMORY[0x1E0DB7438]);
  __break(1u);
  return result;
}

uint64_t sub_1BA4DD398(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v7;

  sub_1BA4DD3F4(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1BA4DD3F4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BA505288(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BA4DD458@<X0>(id *a1@<X3>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1BA4DD488(a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BA4DD488(id *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  unsigned int v4;

  v2 = *(void **)(v1 + 16);
  v3 = objc_msgSend(*a1, sel_identifier);
  if (!v3)
  {
    sub_1BB8729A0();
    v3 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v4 = objc_msgSend(v2, sel_isArticleOnReadingList_, v3);

  return v4 ^ 1;
}

uint64_t sub_1BA4DD504(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FeedJournalGroupResult(a2, a1);
  return a2;
}

void initializeWithCopy for FeedJournalGroupResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 32;
  v7 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(v6 + 32);
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v10 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 106) = *(_OWORD *)(a2 + 106);
  v11 = *(unsigned __int8 *)(a2 + 192);
  swift_bridgeObjectRetain();
  __asm { BR              X9 }
}

uint64_t sub_1BA4DD5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(v0 + 152) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(v3, v2);
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v1 + 168);
  *(_BYTE *)(v0 + 192) = 0;
  v5 = *(_QWORD *)(v1 + 200);
  if (v5)
  {
    *(_QWORD *)(v0 + 200) = v5;
    v6 = *(_QWORD *)(v1 + 208);
    swift_bridgeObjectRetain();
    if (v6 >= 2)
      swift_bridgeObjectRetain();
    v7 = *(_QWORD *)(v1 + 216);
    *(_QWORD *)(v0 + 208) = v6;
    *(_QWORD *)(v0 + 216) = v7;
  }
  else
  {
    *(_OWORD *)(v0 + 200) = *(_OWORD *)(v1 + 200);
    *(_QWORD *)(v0 + 216) = *(_QWORD *)(v1 + 216);
  }
  v8 = *(_QWORD *)(v1 + 232);
  v9 = *(_QWORD *)(v1 + 240);
  *(_QWORD *)(v0 + 224) = *(_QWORD *)(v1 + 224);
  *(_QWORD *)(v0 + 232) = v8;
  *(_QWORD *)(v0 + 240) = v9;
  swift_retain();
  return v0;
}

uint64_t sub_1BA4DD774@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatBindingLayeredMediaExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingLayeredMediaExpression.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  _BYTE *v28;
  __int128 v29;
  char v30;
  __int128 v31;
  char v32;
  char v33;

  v3 = v2;
  v28 = a2;
  sub_1BAE848E0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE84958();
  sub_1BA4A2870(&qword_1ED3D1400, (uint64_t (*)(uint64_t))sub_1BAE84958, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v28;
  v14 = v6;
  v15 = v9;
  if ((v12 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v18 - 1);
      v28 = (_BYTE *)*((_QWORD *)v18 - 2);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *((_QWORD *)&v27 - 4) = &_s10CodingKeysON_172;
      *((_QWORD *)&v27 - 3) = sub_1BAE849D8();
      *((_QWORD *)&v27 - 2) = sub_1BA4DDAFC();
      *((_QWORD *)&v27 - 1) = sub_1BAE84A1C();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726AAE8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      v24 = (uint64_t)v28;
      *(_QWORD *)v25 = v28;
      *(_QWORD *)(v25 + 8) = v21;
      *(_QWORD *)(v25 + 16) = v23;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v24, v21, 1);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v14);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4DDB40();
  v31 = 0uLL;
  v32 = 0;
  sub_1BB8740D4();
  v19 = v29;
  v27 = xmmword_1BB8A1A10;
  v31 = xmmword_1BB8A1A10;
  v32 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v29 = v27;
    v30 = 0;
    sub_1BA946B08();
    sub_1BB8740D4();
    v20 = v33;
  }
  else
  {
    v20 = 1;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v6);
  *v13 = v19;
  v13[1] = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4DDAFC()
{
  unint64_t result;

  result = qword_1ED3CE580;
  if (!qword_1ED3CE580)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD518, &_s10CodingKeysON_172);
    atomic_store(result, (unint64_t *)&qword_1ED3CE580);
  }
  return result;
}

unint64_t sub_1BA4DDB40()
{
  unint64_t result;

  result = qword_1ED3B0200;
  if (!qword_1ED3B0200)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaNodeBinding, &type metadata for FormatLayeredMediaNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3B0200);
  }
  return result;
}

uint64_t sub_1BA4DDB84@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return FormatBindingShareAttributionExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingShareAttributionExpression.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  char v30;
  __int128 v31;
  char v32;
  char v33;

  v3 = v2;
  v28 = a2;
  sub_1BAE84B50();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE84BC8();
  sub_1BA4A2870(&qword_1ED3D1440, (uint64_t (*)(uint64_t))sub_1BAE84BC8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v27 = v7;
  v10 = v28;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v6;
  v14 = v9;
  if ((v12 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *((_QWORD *)&v26 - 4) = &_s10CodingKeysON_171;
      *((_QWORD *)&v26 - 3) = sub_1BAE84C48();
      *((_QWORD *)&v26 - 2) = sub_1BA4DDF0C();
      *((_QWORD *)&v26 - 1) = sub_1BAE84C8C();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726AB10);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v21;
      *(_QWORD *)(v24 + 8) = v20;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v20, 1);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4DDF50();
  v31 = 0uLL;
  v32 = 0;
  sub_1BB8740D4();
  v26 = xmmword_1BB8A1A10;
  v31 = xmmword_1BB8A1A10;
  v32 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v29 = v26;
    v30 = 0;
    sub_1BA946C00();
    sub_1BB8740D4();
    v18 = v10;
    v19 = v33;
  }
  else
  {
    v19 = 1;
    v18 = v10;
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v13);
  *v18 = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4DDF0C()
{
  unint64_t result;

  result = qword_1ED3CEFB8;
  if (!qword_1ED3CEFB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD468, &_s10CodingKeysON_171);
    atomic_store(result, (unint64_t *)&qword_1ED3CEFB8);
  }
  return result;
}

unint64_t sub_1BA4DDF50()
{
  unint64_t result;

  result = qword_1ED3BFF18;
  if (!qword_1ED3BFF18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShareAttributionNodeBinding, &type metadata for FormatShareAttributionNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3BFF18);
  }
  return result;
}

uint64_t sub_1BA4DDF94(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BA75AF30(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BA4DDFB0()
{
  sub_1BA4DE00C();
  return sub_1BB872D60();
}

unint64_t sub_1BA4DE00C()
{
  unint64_t result;

  result = qword_1ED3B44B0;
  if (!qword_1ED3B44B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontTrait, &type metadata for FormatFontTrait);
    atomic_store(result, (unint64_t *)&qword_1ED3B44B0);
  }
  return result;
}

uint64_t static FeedGroupDecoration.register(in:)()
{
  sub_1BB870BB8();
  sub_1BB873558();
  sub_1BB870D80();
  sub_1BB873558();
  sub_1BB871188();
  sub_1BB873558();
  sub_1BB870CFC();
  sub_1BB873558();
  type metadata accessor for FormatMicaSectionDecorationItem();
  sub_1BB14B494();
  return sub_1BB873558();
}

uint64_t sub_1BA4DE0EC()
{
  sub_1BA4DE194();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4DE138()
{
  sub_1BA4DE194();
  return sub_1BB872D60();
}

unint64_t sub_1BA4DE194()
{
  unint64_t result;

  result = qword_1ED3C9958;
  if (!qword_1ED3C9958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1158, &_s10CodingTypeON_171);
    atomic_store(result, (unint64_t *)&qword_1ED3C9958);
  }
  return result;
}

uint64_t destroy for FormatBindExpression()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4DE208()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA4DE24C()
{
  sub_1BA4B8E28();
  sub_1BB86E5D8();
  swift_release();
  type metadata accessor for FeedBannerAdRequester();
  swift_retain();
  sub_1BB86E5D8();
  swift_release();
  sub_1BB86DCC0();
  swift_release();
  swift_release();
  sub_1BB8720DC();
  sub_1BB86E5D8();
  swift_release();
  sub_1BA4AAADC();
  sub_1BB86E5D8();
  return swift_release();
}

uint64_t sub_1BA4DE360(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  sub_1BB86E5D8();
  return swift_release();
}

uint64_t sub_1BA4DE3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA841FE0();
  v11[1] = v8;
  v20 = 0;
  *v7 = sub_1BB8729A0();
  v7[1] = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  sub_1BA4B07F0(0, &qword_1ED3D4468, (uint64_t (*)(uint64_t))sub_1BB8559F4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BB8559F4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB933ED0;
  v19 = 0;
  sub_1BB86D384();
  v18 = 1;
  sub_1BB86D384();
  v17 = 2;
  sub_1BB86D384();
  v16 = 3;
  sub_1BB86D384();
  v15 = 4;
  sub_1BB86D384();
  v14 = 5;
  sub_1BB86D384();
  v13 = 6;
  sub_1BB86D384();
  v12 = 7;
  sub_1BB86D384();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  sub_1BA83E28C();
  result = sub_1BB86D39C();
  qword_1ED3D5170 = result;
  return result;
}

void FeedLayoutDebugging<>.setupDebugging(in:reloadBlock:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  void *v34;
  char v35;

  v7 = v6;
  v34 = a1;
  v13 = sub_1BB86D678();
  v14 = MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *, _QWORD, double))(v16 + 104))((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5CF8], v14);
  v17 = objc_allocWithZone((Class)sub_1BB86D834());
  v18 = (void *)sub_1BB86D828();
  if (qword_1ED3BA870 != -1)
    swift_once();
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a4;
  v20[3] = a5;
  v20[4] = a6;
  v20[5] = v19;
  v20[6] = v18;
  v20[7] = a2;
  v20[8] = a3;
  v21 = v18;
  swift_retain();
  sub_1BB86D1EC();
  swift_release();
  if (v35 != 1)
    goto LABEL_6;
  v22 = v21;
  v23 = objc_msgSend(v7, sel_view);
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v23, sel_bounds);
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v32 = v31;

    objc_msgSend(v22, sel_setFrame_, v26, v28, v30, v32);
    objc_msgSend(v22, sel_setAutoresizingMask_, 18);
    v33 = sub_1BB5FA4AC(v34, v7);
    objc_msgSend(v33, sel_addSubview_, v22);

LABEL_6:
    return;
  }
  __break(1u);
}

uint64_t sub_1BA4DE978()
{
  type metadata accessor for FeedHeadlineFactory();
  sub_1BB86E5D8();
  swift_release();
  type metadata accessor for FeedIssueFactory();
  sub_1BB86E5D8();
  swift_release();
  type metadata accessor for FeedTagFactory();
  sub_1BB86E5D8();
  swift_release();
  type metadata accessor for FeedWebEmbedFactory();
  sub_1BB86E5D8();
  swift_release();
  type metadata accessor for FeedPuzzleFactory();
  sub_1BB86E5D8();
  swift_release();
  type metadata accessor for FeedPuzzleTypeFactory();
  sub_1BB86E5D8();
  swift_release();
  type metadata accessor for FeedPuzzleStatisticFactory();
  sub_1BB86E5D8();
  return swift_release();
}

void sub_1BA4DEAA8(unint64_t a1, int a2, uint64_t a3, void (*a4)(uint64_t), unint64_t a5, void (*a6)(unint64_t, _QWORD), uint64_t a7, double a8)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  void (*v50)(uint64_t);
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(unint64_t, _QWORD);
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  unsigned int v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void (*v87)(uint64_t);
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;

  v68 = a7;
  v70 = a6;
  v86 = a5;
  v87 = a4;
  HIDWORD(v69) = a2;
  v82 = a1;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB86C8B0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3BBD68, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v68 - v22;
  v24 = type metadata accessor for SharedItem();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  if (!a3)
  {
    v74 = (uint64_t)&v68 - v30;
    v75 = v32;
    v83 = v31;
    v84 = v18;
    v80 = v29;
    v81 = v17;
    v76 = v16;
    v77 = v23;
    if (qword_1ED3CF628 == -1)
      goto LABEL_8;
    goto LABEL_42;
  }
  v33 = (id)a3;
  if (qword_1ED3CF628 != -1)
LABEL_38:
    swift_once();
  v26 = (char *)(id)qword_1ED476990;
  v34 = sub_1BB8732F4();
  sub_1BA7AA598();
  v23 = (char *)swift_allocObject();
  *((_OWORD *)v23 + 1) = xmmword_1BB87A390;
  v35 = (CACurrentMediaTime() - a8) * 1000.0;
  if ((~*(_QWORD *)&v35 & 0x7FF0000000000000) != 0)
  {
    if (v35 > -1.0)
    {
      if (v35 < 1.84467441e19)
      {
        v36 = MEMORY[0x1E0DEBBF8];
        *((_QWORD *)v23 + 7) = MEMORY[0x1E0DEBB98];
        *((_QWORD *)v23 + 8) = v36;
        *((_QWORD *)v23 + 4) = (unint64_t)v35;
        v89 = 0;
        v90 = 0xE000000000000000;
        v88 = a3;
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
        sub_1BB873E34();
        v37 = v89;
        v38 = v90;
        *((_QWORD *)v23 + 12) = MEMORY[0x1E0DEA968];
        *((_QWORD *)v23 + 13) = sub_1BA6A2D8C();
        *((_QWORD *)v23 + 9) = v37;
        *((_QWORD *)v23 + 10) = v38;
        sub_1BB86EF44("Failed to fetch highlights from highlight center, time=%lums, error=%{public}@", 78, 2, &dword_1BA493000, v26, v34, v23);

        swift_bridgeObjectRelease();
        v87(a3);

        return;
      }
      goto LABEL_41;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  swift_once();
LABEL_8:
  v39 = (void *)qword_1ED476990;
  sub_1BA7AA598();
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1BB87A390;
  v41 = v39;
  v42 = (CACurrentMediaTime() - a8) * 1000.0;
  if ((~*(_QWORD *)&v42 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v42 <= -1.0)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v42 >= 1.84467441e19)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v17 = (uint64_t)v20;
  v43 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v40 + 56) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v40 + 64) = v43;
  *(_QWORD *)(v40 + 32) = (unint64_t)v42;
  v23 = (char *)(v82 >> 62);
  if (!(v82 >> 62))
  {
    v44 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_13;
  }
LABEL_46:
  swift_bridgeObjectRetain();
  v44 = sub_1BB873F30();
  swift_bridgeObjectRelease();
LABEL_13:
  v20 = v77;
  v45 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v40 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v40 + 104) = v45;
  *(_QWORD *)(v40 + 72) = v44;
  sub_1BB87330C();
  sub_1BB86EF44("Did fetch highlights from highlight center, time=%lums, count=%lu", v68, v69);

  swift_bridgeObjectRelease();
  if (v23)
  {
    swift_bridgeObjectRetain();
    v46 = sub_1BB873F30();
    if (v46)
      goto LABEL_15;
  }
  else
  {
    v46 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v46)
    {
LABEL_15:
      v79 = v82 & 0xC000000000000001;
      v47 = MEMORY[0x1E0DEE9D8];
      a3 = 4;
      v72 = v26;
      v73 = v12;
      v71 = v46;
      while (1)
      {
        v48 = a3 - 4;
        if (v79)
        {
          v49 = (id)MEMORY[0x1BCCE4630](a3 - 4, v82);
          v50 = (void (*)(uint64_t))(a3 - 3);
          if (__OFADD__(v48, 1))
            goto LABEL_37;
        }
        else
        {
          v49 = *(id *)(v82 + 8 * a3);
          v50 = (void (*)(uint64_t))(a3 - 3);
          if (__OFADD__(v48, 1))
          {
LABEL_37:
            __break(1u);
            goto LABEL_38;
          }
        }
        v86 = v47;
        v87 = v50;
        v85 = a3;
        v51 = v49;
        v52 = objc_msgSend(v51, sel_timestamp);
        sub_1BB86C874();

        sub_1BB74400C((uint64_t)v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
        {

          (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v17, v81);
          sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
          v53 = v83;
          v54 = v80;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v20, 1, 1, v80);
        }
        else
        {
          v55 = v76;
          (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v76, v12, v13);
          v54 = v80;
          v56 = v75;
          (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v75 + *(int *)(v80 + 28), v55, v13);
          *(_QWORD *)(v56 + *(int *)(v54 + 24)) = v51;
          v57 = v17;
          v58 = v17;
          v59 = v81;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v56, v57, v81);
          v60 = v51;
          v61 = objc_msgSend(v60, sel_resourceURL);
          if (!v61)
          {
            __break(1u);
            return;
          }
          v62 = v61;
          v78 = objc_msgSend(v61, sel_fc_isNewsURL);

          (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v58, v59);
          (*(void (**)(char *, uint64_t))(v14 + 8))(v55, v13);
          *(_BYTE *)(v56 + *(int *)(v54 + 20)) = v78;
          v63 = (uint64_t)v77;
          sub_1BAF52BCC(v56, (uint64_t)v77);
          v64 = v83;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v63, 0, 1, v54);
          v17 = v58;
          v20 = (char *)v63;
          v53 = v64;
          v26 = v72;
          v12 = v73;
          v46 = v71;
        }

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v20, 1, v54) == 1)
        {
          sub_1BA5DF64C((uint64_t)v20);
          v47 = v86;
        }
        else
        {
          v65 = v74;
          sub_1BAF52BCC((uint64_t)v20, v74);
          sub_1BAF52BCC(v65, (uint64_t)v26);
          v47 = v86;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v47 = sub_1BB392078(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
          v67 = *(_QWORD *)(v47 + 16);
          v66 = *(_QWORD *)(v47 + 24);
          if (v67 >= v66 >> 1)
            v47 = sub_1BB392078(v66 > 1, v67 + 1, 1, v47);
          *(_QWORD *)(v47 + 16) = v67 + 1;
          sub_1BAF52BCC((uint64_t)v26, v47+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(_QWORD *)(v83 + 72) * v67);
        }
        a3 = v85 + 1;
        if (v87 == (void (*)(uint64_t))v46)
        {
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v47 = MEMORY[0x1E0DEE9D8];
LABEL_36:
  v70(v47, BYTE4(v69) & 1);
  swift_bridgeObjectRelease();
}

uint64_t sub_1BA4DF300()
{
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F088();
  swift_allocObject();
  return sub_1BB86F0C4();
}

uint64_t destroy for FormatMenuItem(uint64_t *a1)
{
  sub_1BA7CCC14(*a1, a1[1], a1[2], a1[3]);
  sub_1BA7CCC64(a1[4], a1[5], a1[6]);
  return swift_release();
}

uint64_t sub_1BA4DF3E4()
{
  sub_1BA4DF48C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4DF430()
{
  sub_1BA4DF48C();
  return sub_1BB872D60();
}

unint64_t sub_1BA4DF48C()
{
  unint64_t result;

  result = qword_1ED3CCFA8;
  if (!qword_1ED3CCFA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE1B0, &_s10CodingTypeON_48);
    atomic_store(result, (unint64_t *)&qword_1ED3CCFA8);
  }
  return result;
}

uint64_t sub_1BA4DF4D0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 1728);
  v2 = *(void **)(v0 + 1712);

  swift_release_n();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 1776));
}

uint64_t FeedCursorContainer.feedJournal.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = &qword_1ED476790;
  if (a1 < 0)
    v3 = &qword_1ED476450;
  v4 = (uint64_t *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + *v3);
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  return result;
}

uint64_t sub_1BA4DF5AC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 13)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB8F7510;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BA4DF8B0()
{
  sub_1BA4DF958();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4DF8FC()
{
  sub_1BA4DF958();
  return sub_1BB872D60();
}

unint64_t sub_1BA4DF958()
{
  unint64_t result;

  result = qword_1ED3CB220;
  if (!qword_1ED3CB220)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE278, &_s10CodingTypeON_47);
    atomic_store(result, (unint64_t *)&qword_1ED3CB220);
  }
  return result;
}

uint64_t sub_1BA4DF99C()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA4DFACC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4DFB00 + 4 * byte_1BB8AED14[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA4DFB00()
{
  return 0x65756C6176;
}

uint64_t sub_1BA4DFB14()
{
  return 0x7265696669646F6DLL;
}

uint64_t sub_1BA4DFB30()
{
  return 1885433183;
}

uint64_t sub_1BA4DFB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v6 = v5;
  *(_BYTE *)(v5 + 72) = 0;
  if (qword_1ED3BA660 != -1)
    swift_once();
  *(_QWORD *)(v5 + 80) = qword_1ED4767B0;
  sub_1BB86FFF4();
  swift_retain();
  *(_QWORD *)(v5 + 88) = sub_1BB86FFE8();
  sub_1BA4C010C(a1, v5 + 32);
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  *(_QWORD *)(v5 + 96) = a4;
  v12 = qword_1ED3BA870;
  swift_unknownObjectRetain();
  swift_retain();
  if (v12 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1BA50AD30(&qword_1ED3B1DD0, v13, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemRendererTool, (uint64_t)&unk_1BB94FAF8);
  sub_1BB86D21C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(_BYTE *)(v6 + 72) = v15;
  return v6;
}

uint64_t destroy for FeedJournalGroup(uint64_t a1)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  swift_bridgeObjectRelease();
  v2 = a1 + 128;
  switch(*(_BYTE *)(a1 + 192))
  {
    case 0:
    case 1:
    case 2:
      __swift_destroy_boxed_opaque_existential_1(v2);
      goto LABEL_5;
    case 3:
      __swift_destroy_boxed_opaque_existential_1(v2);
      goto LABEL_8;
    case 4:
    case 5:
    case 6:
LABEL_8:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 200))
        goto LABEL_9;
      return swift_release();
    default:
LABEL_5:
      if (!*(_QWORD *)(a1 + 200))
        return swift_release();
LABEL_9:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 208) >= 2uLL)
        swift_bridgeObjectRelease();
      return swift_release();
  }
}

BOOL OfflineManager.isOffline.getter()
{
  _BOOL8 v0;
  uint64_t v2;
  uint64_t v3;

  OfflineManager.state.getter((uint64_t)&v2);
  v0 = v3 != 0;
  sub_1BA6D6924(v2, v3);
  return v0;
}

_QWORD *OfflineManager.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[2];
  uint64_t v12;
  __int128 v13;

  v3 = *v1;
  v4 = *MEMORY[0x1E0DEEDD8];
  v5 = (uint64_t *)((char *)v1 + qword_1EF2C4698);
  v7 = *(uint64_t *)((char *)v1 + qword_1EF2C4698 + 24);
  v6 = *(uint64_t *)((char *)v1 + qword_1EF2C4698 + 32);
  __swift_project_boxed_opaque_existential_1(v5, v7);
  result = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v6 + 8) + 8))(v7);
  switch((unint64_t)result)
  {
    case 0uLL:
      *(_QWORD *)(a1 + 48) = 0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      return result;
    case 1uLL:
      result = (*(_QWORD *(**)(_OWORD *__return_ptr))(*(_QWORD *)((v4 & v3) + 0x58) + 8))(v11);
      goto LABEL_8;
    case 2uLL:
      result = (*(_QWORD *(**)(_OWORD *__return_ptr))(*(_QWORD *)((v4 & v3) + 0x58) + 16))(v11);
      goto LABEL_8;
    case 3uLL:
      result = (*(_QWORD *(**)(_OWORD *__return_ptr))(*(_QWORD *)((v4 & v3) + 0x58) + 48))(v11);
      goto LABEL_8;
    case 4uLL:
    case 5uLL:
      result = (*(_QWORD *(**)(_OWORD *__return_ptr))(*(_QWORD *)((v4 & v3) + 0x58) + 32))(v11);
      goto LABEL_8;
    case 6uLL:
      result = (*(_QWORD *(**)(_OWORD *__return_ptr))(*(_QWORD *)((v4 & v3) + 0x58) + 40))(v11);
LABEL_8:
      v9 = v11[1];
      v10 = v12;
      *(_OWORD *)a1 = v11[0];
      *(_OWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 32) = v10;
      *(_OWORD *)(a1 + 40) = v13;
      break;
    default:
      result = (_QWORD *)sub_1BB873EAC();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1BA4DFF1C@<X0>(_QWORD *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v26;
  uint64_t *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;

  v29 = a4;
  v30 = a3;
  v27 = a5;
  v28 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v12 = v5;
  if (!v5)
  {
    v13 = v29;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v14 = sub_1BB872874();
    v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
    v16 = swift_bridgeObjectRelease();
    v17 = v11;
    if ((v15 & 1) != 0)
    {
      v18 = sub_1BB8740EC();
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v20 = (unint64_t *)(v18 + 40);
        while (1)
        {
          v21 = *v20;
          if (*v20 >= 4)
            break;
          v20 += 2;
          if (!--v19)
            goto LABEL_7;
        }
        v23 = *(v20 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1BA98D1F0();
        v12 = (void *)swift_allocError();
        *(_QWORD *)v24 = v23;
        *(_QWORD *)(v24 + 8) = v21;
        *(_QWORD *)(v24 + 16) = v13;
        *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA98D234(v23, v21);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
        goto LABEL_12;
      }
LABEL_7:
      v16 = swift_bridgeObjectRelease();
    }
    v28(v16);
    v31 = 0uLL;
    sub_1BB8740D4();
    if ((_BYTE)v32)
    {
      if (v32 != 1)
      {
        sub_1BA655028(0);
        v31 = xmmword_1BB87FC90;
        sub_1BA4A2870(&qword_1ED3B3498, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
        sub_1BB8740D4();
        v26 = v27;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
        v22 = v32;
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      v22 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      v22 = 0;
    }
    v26 = v27;
LABEL_16:
    *v26 = v22;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
LABEL_12:
  sub_1BA7F8B78(a1, (uint64_t)v12);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA4E0228()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x726F6C6F63;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x656C797473;
}

uint64_t sub_1BA4E0274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t (*v14)(void);
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = &v16[-v12];
  v20 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v10 + 104))(&v16[-v12], *MEMORY[0x1E0DB63C0], v9, v11);
  v17 = a2;
  v18 = a3;
  v19 = a4;
  v14 = MEMORY[0x1E0DB5DD0];
  sub_1BA65781C(0, &qword_1ED3B0690, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA657898(&qword_1ED3B0688, &qword_1ED3B0690, (uint64_t (*)(uint64_t, _QWORD *))v14, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1BA4E03B0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4E03E4 + 4 * byte_1BB8AEB17[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA4E03E4()
{
  return 1701667182;
}

uint64_t sub_1BA4E03F4()
{
  return 0x7470697263736564;
}

uint64_t sub_1BA4E0414()
{
  return 0x73676E69727473;
}

uint64_t sub_1BA4E042C()
{
  return 1885433183;
}

NewsFeed::FormatUnderlineStyle_optional __swiftcall FormatUnderlineStyle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatUnderlineStyle_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatLineCap_optional __swiftcall FormatLineCap.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatLineCap_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA4E04EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v11 = a1;
  v12 = a2;
  v3 = sub_1BB873450();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB87342C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v9);
  sub_1BA657D64();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  sub_1BB872658();
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, v8, MEMORY[0x1E0DEF828]);
  sub_1BA81D850(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9660, (uint64_t (*)(uint64_t))sub_1BA81D850, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v3);
  *(_QWORD *)(v2 + 40) = sub_1BB87348C();
  sub_1BA8419D8();
  swift_allocObject();
  *(_QWORD *)(v2 + 48) = sub_1BB86E080();
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEE9D8];
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  v13 = 0;
  sub_1BA841318();
  swift_allocObject();
  *(_QWORD *)(v2 + 104) = sub_1BB86E86C();
  *(_QWORD *)(v2 + 32) = v11;
  *(_QWORD *)(v2 + 64) = v12;
  return v2;
}

void sub_1BA4E0728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BA4E0748(a1, a2, a3, a4);
}

void sub_1BA4E0748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  _QWORD v12[6];

  v8 = (void *)objc_opt_self();
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = v9;
  v10[5] = a1;
  v10[6] = a2;
  v12[4] = sub_1BB27DD74;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BA4F1DD8;
  v12[3] = &block_descriptor_57;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_scheduleLowPriorityBlockForMainThread_, v11);
  _Block_release(v11);
}

uint64_t sub_1BA4E085C(uint64_t a1, uint64_t a2)
{
  return sub_1BA72E548(a1, a2);
}

uint64_t destroy for SportsConfigResourceParameter()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4E0898()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA4E0914(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  sub_1BA4E0A38();
  sub_1BB86EC14();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BB86E854();
  sub_1BB86EA28();
  swift_release();
  swift_release();

  v3 = (void *)sub_1BB86E854();
  sub_1BB86DEAC();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9640, (uint64_t (*)(uint64_t))sub_1BA4E0A38, MEMORY[0x1E0DEAF38]);
  v4 = sub_1BB86EA7C();
  swift_release();

  return v4;
}

void sub_1BA4E0A38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9630)
  {
    sub_1BA4EFE00(255, (unint64_t *)&qword_1ED3B9800);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9630);
  }
}

uint64_t sub_1BA4E0A9C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t destroy for FormatProgressViewNodeStyle.Selector(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) != 0)
    result = swift_release();
  if ((~*(_QWORD *)(a1 + 32) & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for FeedIssue(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD *v15;
  unint64_t v16;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  v8 = v4;
  swift_bridgeObjectRetain();
  v9 = v6;
  if (v7 == 1)
  {
    v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  else
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v7;
    v11 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v11;
    v13 = *(void **)(a2 + 104);
    v12 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v13;
    *(_QWORD *)(a1 + 112) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v13;
  }
  v15 = (_QWORD *)(a2 + 120);
  v16 = *(_QWORD *)(a2 + 128);
  if (v16 >= 0x11)
  {
    *(_QWORD *)(a1 + 120) = *v15;
    *(_QWORD *)(a1 + 128) = v16;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v15;
  }
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t initializeWithCopy for FeedLayoutResult(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA4E0C98()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  sub_1BB872AFC("iers");
  sub_1BB872AFC((_QWORD *)0xE500000000000000);
  swift_bridgeObjectRelease();
  sub_1BB872AFC("Context(seenContentOnly=");
  sub_1BB87420C();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB87420C();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 0;
}

uint64_t sub_1BA4E0E14()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4E0E44 + 4 * byte_1BB8AF002[*v0]))(0x746E65746E6F63, 0xE700000000000000);
}

uint64_t sub_1BA4E0E44()
{
  return 0x656C797473;
}

uint64_t sub_1BA4E0E58()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA4E0E74()
{
  return 1885433183;
}

uint64_t sub_1BA4E0E84()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4E0EB8 + 4 * byte_1BB8AF1A6[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA4E0EB8()
{
  return 0x746E65746E6F63;
}

uint64_t sub_1BA4E0ED0()
{
  return 0x6369676F6CLL;
}

uint64_t sub_1BA4E0EE4()
{
  return 1885433183;
}

uint64_t sub_1BA4E0EF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return FormatFileVersionURIReferenceCollection.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1BA4E0F10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4E0F44 + 4 * byte_1BB8AE2B7[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA4E0F44()
{
  return 0x7373616C63;
}

uint64_t sub_1BA4E0F58()
{
  return 0x6F50726F68636E61;
}

uint64_t sub_1BA4E0F78()
{
  return 0x6F6974616D696E61;
}

uint64_t sub_1BA4E0F90()
{
  return 0x65646F4D6E7572;
}

uint64_t sub_1BA4E0FA8()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA4E0FC4()
{
  return 1885433183;
}

uint64_t sub_1BA4E0FD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatLayeredMediaFilter.init(from:)(a1, a2);
}

uint64_t FormatLayeredMediaFilter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v24 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v24;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v18 = v17;
      *(_QWORD *)(v18 + 8) = v16;
      *(_QWORD *)(v18 + 16) = &unk_1E726CA18;
      *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v17, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAEA0220();
  v22 = 0uLL;
  sub_1BB8740D4();
  v21 = xmmword_1BB87FC90;
  sub_1BA4E12A0();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = v23;
  *(_OWORD *)v12 = v22;
  *(_QWORD *)(v12 + 16) = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4E12A0()
{
  unint64_t result;

  result = qword_1ED3CABD0;
  if (!qword_1ED3CABD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaFilter.Monochrome, &type metadata for FormatLayeredMediaFilter.Monochrome);
    atomic_store(result, (unint64_t *)&qword_1ED3CABD0);
  }
  return result;
}

uint64_t sub_1BA4E12E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTagBinding.Image.init(from:)(a1, a2);
}

uint64_t FormatTagBinding.Image.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_9;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA4E17E4();
    v23 = 0;
    v24 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v18 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v16;
  *(_QWORD *)(v19 + 16) = &unk_1E726EED8;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = v21;
LABEL_9:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA4E1594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD **)(v3 - 72);
  *v4 = 1;
  v4[1] = 0x1000000000000004;
  v4[2] = 0;
  v4[3] = 0;
  JUMPOUT(0x1BA4E14ACLL);
}

void sub_1BA4E15BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  _QWORD *v11;

  *(_OWORD *)(v4 - 160) = xmmword_1BB87FC90;
  sub_1BA4E17A0();
  sub_1BB874068();
  if (!v2)
  {
    v5 = *(_QWORD *)(v4 - 128);
    v6 = v3;
    if (v5)
    {
      v7 = *(_QWORD *)(v4 - 120);
      v8 = *(_QWORD *)(v4 - 136);
      v9 = *(_DWORD *)(v4 - 144);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v1);
      v10 = v9 & 1;
    }
    else
    {
      static FormatTagIconStyle.default.getter(v4 - 112);
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
      v10 = *(unsigned __int8 *)(v4 - 112);
      v8 = *(_QWORD *)(v4 - 104);
      v5 = *(_QWORD *)(v4 - 96);
      v7 = *(_QWORD *)(v4 - 88);
    }
    v11 = *(_QWORD **)(v4 - 72);
    *v11 = v10;
    v11[1] = v8;
    v11[2] = v5;
    v11[3] = v7;
    JUMPOUT(0x1BA4E14ACLL);
  }
  JUMPOUT(0x1BA4E1470);
}

unint64_t sub_1BA4E17A0()
{
  unint64_t result;

  result = qword_1ED3BB710[0];
  if (!qword_1ED3BB710[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagIconStyle, &type metadata for FormatTagIconStyle);
    atomic_store(result, qword_1ED3BB710);
  }
  return result;
}

unint64_t sub_1BA4E17E4()
{
  unint64_t result;

  result = qword_1ED3C77A0;
  if (!qword_1ED3C77A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5288, &_s10CodingTypeON_12);
    atomic_store(result, (unint64_t *)&qword_1ED3C77A0);
  }
  return result;
}

uint64_t sub_1BA4E1828@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatIssueCoverBinding.init(from:)(a1, a2);
}

uint64_t FormatIssueCoverBinding.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _BYTE *v22;
  __int128 v23;
  char v24;

  v3 = v2;
  v22 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_13:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v22;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v18 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v19 = v18;
      *(_QWORD *)(v19 + 8) = v16;
      *(_QWORD *)(v19 + 16) = &unk_1E726C8B0;
      *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v18, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4E1B10();
  v23 = 0uLL;
  sub_1BB8740D4();
  v17 = v24;
  v23 = xmmword_1BB87FC90;
  if ((v24 & 1) != 0)
    sub_1BA4E1B54();
  else
    sub_1BAE9B87C();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *v12 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4E1B10()
{
  unint64_t result;

  result = qword_1ED3A71E8;
  if (!qword_1ED3A71E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9DE8, &_s10CodingTypeON_69);
    atomic_store(result, (unint64_t *)&qword_1ED3A71E8);
  }
  return result;
}

unint64_t sub_1BA4E1B54()
{
  unint64_t result;

  result = qword_1ED39FD30;
  if (!qword_1ED39FD30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.IssueCover, &type metadata for FormatIssueBinding.IssueCover);
    atomic_store(result, (unint64_t *)&qword_1ED39FD30);
  }
  return result;
}

uint64_t sub_1BA4E1B98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRunMode.init(from:)(a1, a2);
}

uint64_t FormatRunMode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[6];

  v20[1] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v20[0] = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA4E1FD0();
    v20[2] = 0;
    v20[3] = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726E078;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = (_QWORD *)v20[0];
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA4E1E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA4E1F3CLL);
}

void sub_1BA4E1E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
  sub_1BA4E1F8C();
  sub_1BB874068();
  if (!v2)
  {
    if (*(_BYTE *)(v4 - 68) == 1)
      swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BA4E1F3CLL);
  }
  JUMPOUT(0x1BA4E1D24);
}

void sub_1BA4E1EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
  sub_1BA4E1F8C();
  sub_1BB874068();
  if (!v2)
  {
    if (*(_BYTE *)(v4 - 68) == 1)
      swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BA4E1F3CLL);
  }
  JUMPOUT(0x1BA4E1D24);
}

void sub_1BA4E1F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA4E1F38);
}

unint64_t sub_1BA4E1F8C()
{
  unint64_t result;

  result = qword_1ED39E598;
  if (!qword_1ED39E598)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPercentage, &type metadata for FormatPercentage);
    atomic_store(result, (unint64_t *)&qword_1ED39E598);
  }
  return result;
}

unint64_t sub_1BA4E1FD0()
{
  unint64_t result;

  result = qword_1ED3A5780;
  if (!qword_1ED3A5780)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C70B8, &_s10CodingTypeON_37);
    atomic_store(result, (unint64_t *)&qword_1ED3A5780);
  }
  return result;
}

uint64_t sub_1BA4E2014@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatVideoPlayerNodeBinding.init(from:)(a1, a2);
}

uint64_t FormatVideoPlayerNodeBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v24;
  _OWORD v25[2];
  uint64_t v26;

  v3 = v2;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25[-1] - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v10 = sub_1BB872874();
    v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
    swift_bridgeObjectRelease();
    v12 = v26;
    v13 = v9;
    if ((v11 & 1) != 0)
    {
      v14 = sub_1BB8740EC();
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        v16 = (unint64_t *)(v14 + 40);
        while (1)
        {
          v17 = *v16;
          if (*v16 >= 4)
            break;
          v16 += 2;
          if (!--v15)
            goto LABEL_7;
        }
        v19 = *(v16 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1BA98D1F0();
        v3 = (void *)swift_allocError();
        *(_QWORD *)v20 = v19;
        *(_QWORD *)(v20 + 8) = v17;
        *(_QWORD *)(v20 + 16) = &unk_1E726F478;
        *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA98D234(v19, v17);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
        goto LABEL_15;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BA4E2364();
    v25[0] = 0uLL;
    sub_1BB8740D4();
    v18 = v24;
    if ((_BYTE)v24)
    {
      if (v24 != 1)
      {
        v24 = xmmword_1BB87FC90;
        sub_1BA64437C();
        sub_1BB8740D4();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
        v21 = *(_QWORD *)&v25[0];
        v22 = *(_OWORD *)((char *)v25 + 8);
        goto LABEL_17;
      }
      v25[0] = xmmword_1BB87FC90;
      sub_1BAB19BF0();
    }
    else
    {
      v25[0] = xmmword_1BB87FC90;
      sub_1BA82AF58();
    }
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v21 = v24;
    v22 = 0uLL;
LABEL_17:
    *(_QWORD *)v12 = v21;
    *(_OWORD *)(v12 + 8) = v22;
    *(_BYTE *)(v12 + 24) = v18;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
LABEL_15:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4E2364()
{
  unint64_t result;

  result = qword_1ED3CC808;
  if (!qword_1ED3CC808)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3F18, &_s10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1ED3CC808);
  }
  return result;
}

uint64_t sub_1BA4E23A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  type metadata accessor for WeakSharedItemManagerObserver();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v5 + 24) = a3;
  swift_unknownObjectWeakAssign();
  v6 = (_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_observers);
  v7 = swift_beginAccess();
  MEMORY[0x1BCCE36AC](v7);
  if (*(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  sub_1BB872DCC();
  return swift_endAccess();
}

uint64_t type metadata accessor for WeakSharedItemManagerObserver()
{
  return objc_opt_self();
}

void sub_1BA4E2498()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BB873A2C();
  if (v0 <= 0x3F)
  {
    sub_1BA4A3FB4(319, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *FeedCursorReference.init(cursorContainer:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *v1;
  if (qword_1ED3C5AA8 != -1)
    swift_once();
  v5 = *(_QWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 88);
  swift_retain();
  v7 = FeedCursorStoreManager.createToken<A>(cursorContainer:)(a1, v5, v6);
  swift_release();
  if (v7)
    swift_release();
  else
    v7 = a1 | 0x4000000000000000;
  v2[2] = v7;
  return v2;
}

uint64_t sub_1BA4E2604@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BA4E2654@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BA4E26AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAnimationNodeKeyPath.init(from:)(a1, a2);
}

uint64_t FormatAnimationNodeKeyPath.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  __int128 v21;
  uint64_t v23;

  v3 = v2;
  v23 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v20 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA4E2A50();
    v21 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X9 }
  }
  v12 = sub_1BB8740EC();
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v14 = (unint64_t *)(v12 + 40);
  while (1)
  {
    v15 = *v14;
    if (*v14 >= 4)
      break;
    v14 += 2;
    if (!--v13)
      goto LABEL_7;
  }
  v16 = *(v14 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v17 = v16;
  *(_QWORD *)(v17 + 8) = v15;
  *(_QWORD *)(v17 + 16) = &unk_1E726A610;
  *(_OWORD *)(v17 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v16, v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  a1 = v20;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA4E29CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA4CDF6C(0, &qword_1EF2B2950, (uint64_t (*)(void))sub_1BAB1DDC8, (uint64_t)&type metadata for FormatSizeEquation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeKeyPathAnimation);
  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BAE805A8();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
    JUMPOUT(0x1BA4E29B8);
  }
  JUMPOUT(0x1BA4E28BCLL);
}

unint64_t sub_1BA4E2A50()
{
  unint64_t result;

  result = qword_1ED3A7B38;
  if (!qword_1ED3A7B38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE3C8, &_s10CodingTypeON_128);
    atomic_store(result, (unint64_t *)&qword_1ED3A7B38);
  }
  return result;
}

void sub_1BA4E2A94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED39F248[0])
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    v3 = v2;
    v4 = sub_1BA83585C();
    v6 = type metadata accessor for FormatAnimationNodeKeyPathAnimation(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, qword_1ED39F248);
  }
}

_QWORD *sub_1BA4E2B14(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v2 = v1;
  v3 = MEMORY[0x1E0DEE9E8];
  v1[2] = MEMORY[0x1E0DEE9E8];
  v1[3] = v3;
  v1[4] = v3;
  if (a1)
  {
    sub_1BA84168C();
    swift_allocObject();
    swift_retain();
    sub_1BB86E620();
    swift_allocObject();
    swift_weakInit();
    sub_1BB86E638();
    swift_release();
    swift_release();
    sub_1BB86DF78();
    swift_release();
    swift_release();
  }
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v5 = qword_1ED3BBA90;
  swift_retain();
  if (v5 != -1)
    swift_once();
  objc_msgSend(v4, sel_addObserver_selector_name_object_, v2, sel_debugClearRunModeCache, qword_1ED476890, 0);

  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_1BA4E2C8C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA4E2D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v17;

  v5 = *(_QWORD *)(v4 + 280);
  v6 = *(_QWORD *)(*(_QWORD *)(v4 + 296) + 40);
  *(_QWORD *)(v4 + 664) = v6;
  v7 = *(_QWORD *)(v5 + qword_1ED4767C8);
  *(_QWORD *)(v4 + 208) = v7;
  v8 = *(_QWORD *)(v4 + 312);
  v9 = *(_QWORD *)(v4 + 320);
  *(_QWORD *)(v4 + 672) = v7;
  *(_QWORD *)(v4 + 680) = type metadata accessor for FeedGroupEmitter(255, v8, v9, a4);
  v10 = sub_1BB872EE0();
  *(_QWORD *)(v4 + 688) = v10;
  *(_QWORD *)(v4 + 696) = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v10);
  if ((sub_1BB873168() & 1) != 0)
  {
    v11 = *(_QWORD *)(v4 + 280);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 648) + 56))(*(_QWORD *)(v4 + 352), 1, 1, *(_QWORD *)(v4 + 328));
    v12 = sub_1BB872E68();
    *(_QWORD *)(v4 + 824) = v12;
    v13 = *(_QWORD *)(v11 + qword_1ED4767D8);
    v14 = sub_1BAAE8300();
    *(_QWORD *)(v4 + 832) = v14;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 840) = v15;
    *v15 = v4;
    v15[1] = sub_1BAAE6544;
    return sub_1BAAE8380(*(_QWORD *)(v4 + 272), *(_QWORD *)(v4 + 352), 0, v12, v13, v14, *(uint64_t **)(v4 + 280), v6, *(double *)(v4 + 288));
  }
  else
  {
    *(_QWORD *)(v4 + 704) = sub_1BA6668CC(v7, *(uint64_t **)(v4 + 280), 0, *(double *)(v4 + 288));
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 712) = v17;
    *v17 = v4;
    v17[1] = sub_1BA4BBCD8;
    return sub_1BB86E908();
  }
}

uint64_t sub_1BA4E2EC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedItemRendererTool();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D3F70);
  result = sub_1BB86DF48();
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = sub_1BB86DF48();
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86DC0C();
  result = sub_1BB86DF3C();
  if (result)
  {
    sub_1BA50AD30((unint64_t *)&qword_1ED3B0750, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
    sub_1BB8709E4();
    swift_allocObject();
    v6 = sub_1BB8709CC();
    type metadata accessor for CoverIssueViewRenderer();
    v7 = swift_allocObject();
    result = sub_1BA4CECCC(&v9, v7 + 24);
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 64) = v6;
    *a2 = v7;
    a2[1] = (uint64_t)&off_1E73472F0;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA4E30A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedItemRendererTool();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D2EA8);
  result = sub_1BB86DF18();
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  result = sub_1BB86DF48();
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86DC0C();
  result = sub_1BB86DF3C();
  if (result)
  {
    sub_1BA50AD30((unint64_t *)&qword_1ED3B0750, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
    sub_1BB8709E4();
    swift_allocObject();
    v6 = sub_1BB8709CC();
    type metadata accessor for CoverChannelViewRenderer();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    result = sub_1BA4CECCC(&v9, v7 + 24);
    *(_QWORD *)(v7 + 64) = v6;
    *a2 = v7;
    a2[1] = (uint64_t)&off_1E7331518;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA4E32AC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3B0B80);
  result = sub_1BB86DF48();
  if (!v14)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D39B8);
  result = sub_1BB86DF48();
  if (!v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0B08);
  result = sub_1BB86DF48();
  if (!v10)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4BB020();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4AE8F4();
  result = sub_1BB86DF3C();
  if (result)
  {
    v6 = result;
    v7 = type metadata accessor for NativeAdService();
    v8 = (_QWORD *)swift_allocObject();
    v8[19] = MEMORY[0x1E0DEE9E0];
    sub_1BA4CECCC(&v13, (uint64_t)(v8 + 2));
    sub_1BA4CECCC(&v11, (uint64_t)(v8 + 7));
    result = sub_1BA4CECCC(&v9, (uint64_t)(v8 + 12));
    v8[17] = v5;
    v8[18] = v6;
    a2[3] = v7;
    a2[4] = &protocol witness table for NativeAdService;
    *a2 = v8;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BA4E34A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1BB871D64();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3B0B80);
  result = sub_1BB86DF48();
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0B08);
  result = sub_1BB86DF48();
  if (!v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4AAADC();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4A5F40();
  result = sub_1BB86DF3C();
  if (result)
  {
    sub_1BB871D58();
    sub_1BA4B8E28();
    swift_allocObject();
    return sub_1BB871D04();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA4E3668@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.Image.init(from:)(a1, a2);
}

uint64_t FormatGroupBinding.Image.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA4E3B64();
    v24 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E726BCD0;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = v22;
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA4E3B64()
{
  unint64_t result;

  result = qword_1ED3C7C80;
  if (!qword_1ED3C7C80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CABD0, &_s10CodingTypeON_92);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C80);
  }
  return result;
}

uint64_t sub_1BA4E3BA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageNodeRequestAdjustment.init(from:)(a1, a2);
}

uint64_t FormatImageNodeRequestAdjustment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  __int128 v22;
  uint64_t v23;

  v23 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v20 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA4E4450();
    v22 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v12 = sub_1BB8740EC();
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v14 = (unint64_t *)(v12 + 40);
  while (1)
  {
    v15 = *v14;
    if (*v14 >= 4)
      break;
    v14 += 2;
    if (!--v13)
      goto LABEL_7;
  }
  v16 = *(v14 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v17 = v16;
  *(_QWORD *)(v17 + 8) = v15;
  *(_QWORD *)(v17 + 16) = &unk_1E726C4F0;
  *(_OWORD *)(v17 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v16, v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  a1 = v20;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4E4450()
{
  unint64_t result;

  result = qword_1ED3CDDA0;
  if (!qword_1ED3CDDA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA198, &_s10CodingTypeON_75);
    atomic_store(result, (unint64_t *)&qword_1ED3CDDA0);
  }
  return result;
}

uint64_t sub_1BA4E4494@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatIssueCoverContent.init(from:)(a1, a2);
}

uint64_t FormatIssueCoverContent.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  unint64_t *v31;

  v3 = v2;
  v31 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
LABEL_13:
    sub_1BA7F8B78(v10, (uint64_t)v3);
    swift_willThrow();

    v24 = (uint64_t)v10;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v11 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_8;
      }
      v22 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v22;
      *(_QWORD *)(v23 + 8) = v17;
      *(_QWORD *)(v23 + 16) = &unk_1E726C900;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v22, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v10 = v28;
      goto LABEL_13;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BA4E4824();
  v30 = 0uLL;
  sub_1BB8740D4();
  if ((v29 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1EF2B2F68, (uint64_t (*)(void))sub_1BAE9B8C0, (uint64_t)&type metadata for FormatIssueCoverContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    v29 = xmmword_1BB87FC90;
    sub_1BAE9B904();
    sub_1BB8740D4();
    v18 = v31;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v19 = v30;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = v19;
    v21 = v20 | 0x8000000000000000;
  }
  else
  {
    v30 = xmmword_1BB87FC90;
    sub_1BA4E4868();
    sub_1BB8740D4();
    v18 = v31;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v26 = v29;
    v21 = swift_allocObject();
    *(_BYTE *)(v21 + 16) = v26;
  }
  *v18 = v21;
  v24 = (uint64_t)v28;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

unint64_t sub_1BA4E4824()
{
  unint64_t result;

  result = qword_1ED3A7200;
  if (!qword_1ED3A7200)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9DC0, &_s10CodingTypeON_68);
    atomic_store(result, (unint64_t *)&qword_1ED3A7200);
  }
  return result;
}

unint64_t sub_1BA4E4868()
{
  unint64_t result;

  result = qword_1ED3A0250;
  if (!qword_1ED3A0250)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverBinding, &type metadata for FormatIssueCoverBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A0250);
  }
  return result;
}

_QWORD *_s8NewsFeed20FormatProcessedColorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA4E48E4()
{
  unsigned __int8 *v0;
  _QWORD *v1;
  _QWORD *v2;
  __int128 v4;

  BYTE8(v4) = 0;
  *(_QWORD *)&v4 = *v0;
  sub_1BB873E34();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  return *(_QWORD *)((char *)&v4 + 1);
}

uint64_t sub_1BA4E4978()
{
  sub_1BA4E49D4();
  return sub_1BB872D60();
}

unint64_t sub_1BA4E49D4()
{
  unint64_t result;

  result = qword_1ED3B4BB8;
  if (!qword_1ED3B4BB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageResize, &type metadata for FormatImageResize);
    atomic_store(result, (unint64_t *)&qword_1ED3B4BB8);
  }
  return result;
}

uint64_t sub_1BA4E4A18(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v36 = *a1;
  v44 = *(_QWORD *)(v3 + 16);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v38 = v7;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
  v37 = a2[11];
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v10 = v43;
  if (!v43)
  {
    __break(1u);
    goto LABEL_11;
  }
  v11 = v42;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1BA6A2D8C();
  *(_QWORD *)(v8 + 64) = v13;
  *(_QWORD *)(v8 + 32) = v11;
  *(_QWORD *)(v8 + 40) = v10;
  v35[1] = *a2;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v14 = v41;
  if (!v41)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v15 = v40;
  *(_QWORD *)(v8 + 96) = v12;
  *(_QWORD *)(v8 + 104) = v13;
  *(_QWORD *)(v8 + 72) = v15;
  *(_QWORD *)(v8 + 80) = v14;
  v16 = sub_1BB87330C();
  sub_1BB86EF44("Feed database decoding groups from %{public}@ cursor %{public}@", 63, 2, &dword_1BA493000, v44, v16, v8);
  swift_bridgeObjectRelease();
  v17 = a3;
  v18 = sub_1BA4CA258(a3, (uint64_t)a1, (uint64_t)a2);
  if (v39)
    return v17;
  v19 = v18;
  v39 = v35;
  v42 = v18;
  MEMORY[0x1E0C80A78](v18);
  sub_1BA4AD288(0, &qword_1ED39BDD8, (uint64_t)&type metadata for FeedGroupEntity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v21 = type metadata accessor for FeedDatabaseGroup(0, *(_QWORD *)(v36 + 80), *(_QWORD *)(v36 + 88), v20);
  sub_1BA5C69E0(&qword_1ED39BDE0, &qword_1ED39BDD8, (uint64_t)&type metadata for FeedGroupEntity, MEMORY[0x1E0DEAF38]);
  v17 = sub_1BB872BF8();
  v40 = v17;
  v22 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v22);
  sub_1BB873144();
  if (v42)
  {
    sub_1BA83D078();
    swift_release();
  }
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BB87D7A0;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v24 = v43;
  v25 = v44;
  v26 = MEMORY[0x1E0DEA968];
  if (!v43)
    goto LABEL_12;
  v27 = v42;
  *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v23 + 64) = v13;
  *(_QWORD *)(v23 + 32) = v27;
  *(_QWORD *)(v23 + 40) = v24;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v28 = v41;
  if (v41)
  {
    v29 = v40;
    *(_QWORD *)(v23 + 96) = v26;
    *(_QWORD *)(v23 + 104) = v13;
    *(_QWORD *)(v23 + 72) = v29;
    *(_QWORD *)(v23 + 80) = v28;
    v30 = *(_QWORD *)(v19 + 16);
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x1E0DEB418];
    v32 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v23 + 136) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v23 + 144) = v32;
    *(_QWORD *)(v23 + 112) = v30;
    v33 = MEMORY[0x1BCCE37B4](v17, v21);
    *(_QWORD *)(v23 + 176) = v31;
    *(_QWORD *)(v23 + 184) = v32;
    *(_QWORD *)(v23 + 152) = v33;
    v34 = sub_1BB87330C();
    sub_1BB86EF44("Feed database decoding %{public}@ cursor %{public}@ read %ld groups and filtered to %ld groups", 94, 2, &dword_1BA493000, v25, v34, v23);
    swift_bridgeObjectRelease();
    return v17;
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_1BA4E4DD4()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.9, 1.0);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.1, 1.0);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_blackColor);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.0, 0.1);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0, 0.1);
  v6 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

  qword_1ED3B7090 = (uint64_t)v0;
  *(_QWORD *)algn_1ED3B7098 = v1;
  qword_1ED3B70A0 = (uint64_t)v3;
  unk_1ED3B70A8 = v6;
}

uint64_t sub_1BA4E4EF0()
{
  sub_1BA4E4F98();
  return sub_1BB872D60();
}

uint64_t sub_1BA4E4F4C()
{
  sub_1BA4E4F98();
  return sub_1BB872D0C();
}

unint64_t sub_1BA4E4F98()
{
  unint64_t result;

  result = qword_1ED3CC1E8;
  if (!qword_1ED3CC1E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4C88, &_s10CodingTypeON_137);
    atomic_store(result, (unint64_t *)&qword_1ED3CC1E8);
  }
  return result;
}

uint64_t FormatLayeredMediaFilter.Monochrome.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v32 = (char *)&v28 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  sub_1BAEA03E4(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v31 = v1[1];
  v29 = v1[2];
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAEA02DC();
  v18 = sub_1BA4A2870(&qword_1ED3D1140, (uint64_t (*)(uint64_t))sub_1BAEA02DC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatLayeredMediaFilter.Monochrome, v19, v15, (uint64_t)&type metadata for FormatLayeredMediaFilter.Monochrome, v17, (uint64_t)&type metadata for FormatVersions.StarSkyC, v16, (uint64_t)v13, v18, (uint64_t)&off_1E734BC40);
  sub_1BA5E7FF4(v14);
  if (qword_1ED3C6D70 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C50);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v10, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD46460(v14, 0, 0, 0, (uint64_t)v10, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  sub_1BA5E800C(v14);
  if (!v2)
  {
    v23 = (uint64_t)v32;
    v22(v32, v21, v20);
    swift_storeEnumTagMultiPayload();
    v24 = v31;
    sub_1BA6E6C68(v31);
    sub_1BAD46678(v24, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v24);
    v25 = (uint64_t)v30;
    v22(v30, v21, v20);
    swift_storeEnumTagMultiPayload();
    v26 = v29;
    sub_1BA6E6C68(v29);
    sub_1BAD46678(v26, 2, 0, 0, v25, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v26);
  }
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BAEA03E4);
}

uint64_t sub_1BA4E532C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F69746172;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 1937207154;
}

uint64_t sub_1BA4E5374()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x726F7463656C6573;
}

uint64_t sub_1BA4E53AC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[8];

  v0 = sub_1BB872610();
  v15 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB872664();
  v3 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB87261C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF530], v6);
  v10 = (void *)sub_1BB873498();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  aBlock[4] = sub_1BA4CB16C;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_102;
  v11 = _Block_copy(aBlock);
  sub_1BB872634();
  aBlock[7] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA60B87C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v5, v2, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v14);
  sub_1BA84125C();
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BA4E5618(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA552080(0, (unint64_t *)&qword_1ED3B93F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA551908(&qword_1ED39BE30, &qword_1ED39B140, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BA4E56F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatDecorationCollection.init(from:)(a1, a2);
}

uint64_t FormatDecorationCollection.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v12 = a2;
  sub_1BA4CDF6C(0, &qword_1ED39C0D8, (uint64_t (*)(void))sub_1BA4E5A38, (uint64_t)&type metadata for FormatDecorationCollection.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4E5A38();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v12;
    sub_1BA4E59C4();
    sub_1BA4E5A7C(&qword_1ED39BE18, &qword_1ED39B128, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatDecorationCollection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];

  sub_1BA4CDF6C(0, &qword_1ED39C188, (uint64_t (*)(void))sub_1BA4E5A38, (uint64_t)&type metadata for FormatDecorationCollection.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4E5A38();
  sub_1BB8746C8();
  v10[3] = v8;
  sub_1BA4E59C4();
  sub_1BA4E5A7C(&qword_1ED39BE10, &qword_1ED39B120, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1BA4E59C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B93E8)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B93E8);
  }
}

unint64_t sub_1BA4E5A38()
{
  unint64_t result;

  result = qword_1ED39BA58;
  if (!qword_1ED39BA58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8905F0, &type metadata for FormatDecorationCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39BA58);
  }
  return result;
}

uint64_t sub_1BA4E5A7C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA4E59C4();
    v10 = v9;
    v11 = sub_1BA4E5AF4(a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA4E5AF4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA4E5B54()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1BB86FA60();
}

id sub_1BA4E5B9C@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id v4;

  v4 = *v1;
  a1[3] = sub_1BA749984();
  a1[4] = sub_1BA4A2870((unint64_t *)&unk_1ED3C2980, (uint64_t (*)(uint64_t))sub_1BA749984, (uint64_t)&protocol conformance descriptor for FCAssetHandle);
  *a1 = v4;
  return v4;
}

uint64_t sub_1BA4E5BFC(_QWORD *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  _BYTE *v28;
  void (*v29)(_BYTE *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[4];
  int v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  _BYTE *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;

  v4 = v3;
  v79 = a3;
  v80 = a2;
  v6 = *a1;
  v76 = *(_QWORD *)v4;
  v84 = *(_QWORD *)(v76 + 88);
  v77 = *(_QWORD *)(v84 - 8);
  v78 = v6;
  v7 = MEMORY[0x1E0C80A78](a1);
  v75 = &v72[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v82 = &v72[-v9];
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v74 = &v72[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA5266EC();
  v14 = v13;
  MEMORY[0x1E0C80A78](v13);
  v16 = &v72[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA76D78C();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = &v72[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = &v72[-v22];
  MEMORY[0x1E0C80A78](v21);
  v25 = &v72[-v24];
  v81 = *((_QWORD *)v4 + 4);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(&v72[-v24], v81 + qword_1ED476428, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
  v83 = a1;
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  v26 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1BA76D70C((uint64_t)v25, (uint64_t)v16);
  sub_1BA76D70C((uint64_t)v23, v26);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v27((uint64_t)v16, 1, v10) == 1)
  {
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    if (v27(v26, 1, v10) == 1)
    {
      sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA76D78C);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1BA76D70C((uint64_t)v16, (uint64_t)v20);
  if (v27(v26, 1, v10) == 1)
  {
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v20, v10);
LABEL_6:
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA5266EC);
LABEL_14:
    v55 = *((_QWORD *)v4 + 3);
    v56 = swift_retain();
    v51 = v79;
    v57 = v87;
    v58 = v80(v56);
    if (v57)
    {
      swift_release();
      return v51;
    }
    v59 = v58;
    v60 = *((_QWORD *)v4 + 2);
    v87 = *((_QWORD *)v4 + 6);
    v61 = v84;
    (*(void (**)(_BYTE *, char *, uint64_t))(v77 + 16))(v75, &v4[*(_QWORD *)(*(_QWORD *)v4 + 168)], v84);
    swift_retain();
    swift_retain();
    v62 = v83;
    v63 = sub_1BA49BE48();
    LODWORD(v80) = v63;
    v82 = v72;
    v64 = *((_QWORD *)v4 + 8);
    v85 = v62[14];
    MEMORY[0x1E0C80A78](v63);
    v65 = v76;
    *(_QWORD *)&v72[-32] = *(_QWORD *)(v76 + 80);
    *(_QWORD *)&v72[-24] = v61;
    *(_OWORD *)&v72[-16] = *(_OWORD *)(v65 + 96);
    type metadata accessor for FeedDatabaseGroup(255, *(_QWORD *)(v78 + 80), *(_QWORD *)(v78 + 88), v66);
    v67 = sub_1BB872EE0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v68 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v67);
    v70 = sub_1BAA52384((void (*)(char *, char *))sub_1BA5B0708, (uint64_t)&v72[-48], v67, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v68, MEMORY[0x1E0DEDD18], v69);
    swift_bridgeObjectRelease();
    v50 = sub_1BA78A504(v70, v64);
    swift_bridgeObjectRelease();
    v51 = swift_allocObject();
    v71 = *(_QWORD *)v51;
    *(_QWORD *)(v51 + 16) = v60;
    *(_QWORD *)(v51 + 24) = v55;
    *(_QWORD *)(v51 + 32) = v59;
    *(_QWORD *)(v51 + 40) = 0;
    *(_QWORD *)(v51 + 48) = v87;
    (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)(*(_QWORD *)(v71 + 88) - 8) + 32))(v51 + *(_QWORD *)(v71 + 168), v75);
LABEL_17:
    *(_BYTE *)(v51 + 56) = v80 & 1;
    *(_QWORD *)(v51 + 64) = v50;
    return v51;
  }
  v28 = v74;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 32))(v74, v26, v10);
  sub_1BA49C0DC();
  v73 = sub_1BB872958();
  v29 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
  v29(v28, v10);
  sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  v29(v20, v10);
  sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  if ((v73 & 1) == 0)
    goto LABEL_14;
LABEL_8:
  v31 = *((_QWORD *)v4 + 2);
  v30 = *((_QWORD *)v4 + 3);
  v32 = *((_QWORD *)v4 + 6);
  (*(void (**)(_BYTE *, char *, uint64_t))(v77 + 16))(v82, &v4[*(_QWORD *)(*(_QWORD *)v4 + 168)], v84);
  v33 = *((_QWORD *)v4 + 5);
  v34 = v83[14];
  v36 = type metadata accessor for FeedDatabaseGroup(0, *(_QWORD *)(v78 + 80), *(_QWORD *)(v78 + 88), v35);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  result = MEMORY[0x1BCCE37B4](v34, v36);
  v38 = v33 + result;
  if (__OFADD__(v33, result))
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if ((v86 & 1) != 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v39 = __OFADD__(v38, v85);
  v40 = v38 + v85;
  if (v39)
    goto LABEL_20;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if ((v86 & 1) == 0)
  {
    if (!__OFADD__(v40, v85))
    {
      v83 = (_QWORD *)(v40 + v85);
      v41 = sub_1BA49BE48();
      LODWORD(v80) = v41;
      v79 = v32;
      v42 = *((_QWORD *)v4 + 8);
      v85 = v34;
      MEMORY[0x1E0C80A78](v41);
      v43 = v31;
      v44 = v76;
      v45 = v84;
      *(_QWORD *)&v72[-32] = *(_QWORD *)(v76 + 80);
      *(_QWORD *)&v72[-24] = v45;
      *(_OWORD *)&v72[-16] = *(_OWORD *)(v44 + 96);
      v46 = sub_1BB872EE0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v46);
      v49 = sub_1BAA52384((void (*)(char *, char *))sub_1BA5B0708, (uint64_t)&v72[-48], v46, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v47, MEMORY[0x1E0DEDD18], v48);
      swift_bridgeObjectRelease();
      v50 = sub_1BA78A504(v49, v42);
      swift_bridgeObjectRelease();
      v51 = swift_allocObject();
      v52 = *(_QWORD *)v51;
      *(_QWORD *)(v51 + 16) = v43;
      *(_QWORD *)(v51 + 24) = v30;
      v53 = v82;
      v54 = v83;
      *(_QWORD *)(v51 + 32) = v81;
      *(_QWORD *)(v51 + 40) = v54;
      *(_QWORD *)(v51 + 48) = v79;
      (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)(*(_QWORD *)(v52 + 88) - 8) + 32))(v51 + *(_QWORD *)(v52 + 168), v53);
      goto LABEL_17;
    }
    goto LABEL_21;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1BA4E6360()
{
  sub_1BA4E6380();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4E6380()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FeedCursorTracker.__deallocating_deinit()
{
  FeedCursorTracker.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedCursorTracker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1BA4E6534@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFontAttributes.init(from:)(a1, a2);
}

uint64_t FormatFontAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  char v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  __int128 v43;
  char v44;

  v3 = v2;
  v40 = a2;
  sub_1BAE90770();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE907E8();
  sub_1BA4A2870(&qword_1ED3D0EB0, (uint64_t (*)(uint64_t))sub_1BAE907E8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v34 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v34);
  }
  v10 = v40;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v7;
  v14 = v6;
  v15 = v9;
  if ((v12 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v18 - 2);
      v22 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      v40 = v13;
      MEMORY[0x1E0C80A78](v23);
      *(_QWORD *)&v35[-32] = &_s10CodingKeysON_138;
      *(_QWORD *)&v35[-24] = sub_1BAE90868();
      *(_QWORD *)&v35[-16] = sub_1BA4E697C();
      *(_QWORD *)&v35[-8] = sub_1BAE908AC();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E726B938);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4E6A04();
  v43 = 0uLL;
  v44 = 0;
  sub_1BB874068();
  v19 = a1;
  v20 = v41;
  v43 = xmmword_1BB8A1A10;
  v44 = 0;
  sub_1BA689CD8();
  sub_1BB874068();
  v26 = v14;
  v27 = v13;
  v28 = v41;
  v29 = v42;
  v43 = xmmword_1BB8D2D60;
  v44 = 0;
  v30 = sub_1BB87405C();
  v36 = v31;
  v37 = v30;
  v38 = v29;
  v39 = v28;
  v43 = xmmword_1BB8D2D70;
  v44 = 0;
  sub_1BA4E69C0();
  sub_1BB874068();
  (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v15, v26);
  v33 = v41;
  *(_BYTE *)v10 = v20;
  *(_QWORD *)(v10 + 8) = v39;
  *(_BYTE *)(v10 + 16) = v38;
  *(_QWORD *)(v10 + 24) = v37;
  *(_BYTE *)(v10 + 32) = v36 & 1;
  *(_BYTE *)(v10 + 33) = v33;
  v34 = (uint64_t)v19;
  return __swift_destroy_boxed_opaque_existential_1(v34);
}

unint64_t sub_1BA4E697C()
{
  unint64_t result;

  result = qword_1ED3C8D28;
  if (!qword_1ED3C8D28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB5D8, &_s10CodingKeysON_138);
    atomic_store(result, (unint64_t *)&qword_1ED3C8D28);
  }
  return result;
}

unint64_t sub_1BA4E69C0()
{
  unint64_t result;

  result = qword_1ED3BDBC0;
  if (!qword_1ED3BDBC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontDesign, &type metadata for FormatFontDesign);
    atomic_store(result, (unint64_t *)&qword_1ED3BDBC0);
  }
  return result;
}

unint64_t sub_1BA4E6A04()
{
  unint64_t result;

  result = qword_1ED3BD500;
  if (!qword_1ED3BD500)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontWidth, &type metadata for FormatFontWidth);
    atomic_store(result, (unint64_t *)&qword_1ED3BD500);
  }
  return result;
}

uint64_t sub_1BA4E6A48@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4E6A74();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4E6A74()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x17)
    return 23;
  else
    return v0;
}

uint64_t sub_1BA4E6AC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(sub_1BB86D7A4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_1BB86D660();
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64)
      + ((v4 + v5 + *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BA619874(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + v7), *(_QWORD *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)), a1);
}

void sub_1BA4E6B50(unsigned int *a1, int a2, int a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  size_t v9;
  int v10;
  unsigned int v11;
  int v12;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v7 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v7 <= 0x10)
    v7 = 16;
  if ((v7 & 0xFFFFFFFFFFFFFFF8) + 48 > v7)
    v7 = (v7 & 0xFFFFFFFFFFFFFFF8) + 48;
  v8 = *(_DWORD *)(v6 + 80) & 0xF8;
  v9 = ((v8 + 31) & ~(v8 | 7))
     + (((((((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (a3 < 0)
  {
    v11 = a3 - 2147483646;
    if ((_DWORD)v9)
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v10 = 1;
    else
      v10 = v12;
    if ((a2 & 0x80000000) == 0)
LABEL_9:
      __asm { BR              X13 }
  }
  else
  {
    v10 = 0u;
    if ((a2 & 0x80000000) == 0)
      goto LABEL_9;
  }
  if ((_DWORD)v9)
  {
    bzero(a1, v9);
    *a1 = a2 ^ 0x80000000;
  }
  __asm { BR              X10 }
}

void sub_1BA4E6D50()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (!v1)
    JUMPOUT(0x1BA4E6D38);
  JUMPOUT(0x1BA4E6D08);
}

void sub_1BA4E6D5C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA4E6D38);
}

void sub_1BA4E6D64()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA4E6D38);
}

uint64_t initializeWithCopy for FormatVideoNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0)
    swift_retain();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(unsigned __int8 *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v7 <= 0xFD)
  {
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    sub_1BA6F2B04(v8, v9, v7);
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 56) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  }
  if (*(unsigned __int8 *)(a2 + 144) == 254)
  {
    v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    swift_retain();
  }
  v12 = *(_QWORD *)(a2 + 152);
  if ((~v12 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(a1 + 152) = v12;
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  return a1;
}

uint64_t sub_1BA4E6EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t result;
  _QWORD v19[3];
  uint64_t *v20;

  v19[2] = a3;
  v20 = a4;
  v19[1] = a2;
  v4 = sub_1BB86D36C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86D378();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_1BB86D234();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAC6F32C(0, (unint64_t *)&unk_1ED3D4B38, v16, &qword_1ED3D4B30, MEMORY[0x1E0DB54F0]);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB54D8], v12);
  *v11 = sub_1BB8729A0();
  v11[1] = v17;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB57F8], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57E8], v4);
  result = sub_1BB86D3B4();
  *v20 = result;
  return result;
}

uint64_t sub_1BA4E7064(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t result;
  uint64_t v16;
  uint64_t *v17;

  v17 = a5;
  v6 = sub_1BB86D36C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86D234();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAC6F32C(0, (unint64_t *)&unk_1ED3D4B38, v14, &qword_1ED3D4B30, MEMORY[0x1E0DB54F0]);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *a2, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB57E8], v6);
  result = sub_1BB86D3A8();
  *v17 = result;
  return result;
}

_QWORD *_s8NewsFeed19FormatPropertyValueOwCP_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if (((((unint64_t)*a2 >> 60) & 0x8F | (16 * (*a2 & 7))) ^ 0x7E) >= 0x72)
    swift_retain();
  *a1 = v3;
  return a1;
}

uint64_t FeedGroupEmitterInitialCursorContext.unwrappedPool.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  swift_getAssociatedTypeWitness();
  sub_1BB873A2C();
  sub_1BB86EC14();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_1BA4E72C0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA4E7358(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  CGFloat MinX;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  CGFloat MinY;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  CGFloat MidX;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  CGFloat MidY;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  void (*v49)(char *, uint64_t, uint64_t);
  CGFloat MaxX;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  CGFloat MaxY;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  CGFloat Width;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  CGFloat v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;

  v8 = type metadata accessor for FormatVersionRequirement(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9D90, (uint64_t (*)(uint64_t))sub_1BA76B9F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87FAA0;
  v13 = type metadata accessor for FormatOption();
  v14 = swift_allocBox();
  v16 = v15;
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v99 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C08);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v11, v99, v17);
  v19 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v100.origin.x = a1;
  v100.origin.y = a2;
  v100.size.width = a3;
  v100.size.height = a4;
  MinX = CGRectGetMinX(v100);
  v21 = swift_allocObject();
  v22 = MEMORY[0x1E0DEE9D8];
  *(CGFloat *)(v21 + 16) = MinX;
  *(_QWORD *)(v21 + 24) = v22;
  *v16 = 0x586E694D6B73616DLL;
  v16[1] = 0xE800000000000000;
  v16[2] = v21 | 0x3000000000000000;
  v16[3] = 1;
  v23 = (uint64_t)v16 + *(int *)(v13 + 28);
  sub_1BA6EDD40((uint64_t)v11, v23);
  v24 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56);
  v24(v23, 0, 1, v8);
  *(_QWORD *)(v12 + 32) = v14;
  v93 = swift_allocBox();
  v26 = v25;
  v27 = v99;
  v18(v11, v99, v17);
  v97 = v19;
  swift_storeEnumTagMultiPayload();
  v101.origin.x = a1;
  v101.origin.y = a2;
  v101.size.width = a3;
  v101.size.height = a4;
  MinY = CGRectGetMinY(v101);
  v29 = swift_allocObject();
  *(CGFloat *)(v29 + 16) = MinY;
  *(_QWORD *)(v29 + 24) = MEMORY[0x1E0DEE9D8];
  *v26 = 0x596E694D6B73616DLL;
  v26[1] = 0xE800000000000000;
  v26[2] = v29 | 0x3000000000000000;
  v26[3] = 1;
  v30 = (uint64_t)v26 + *(int *)(v13 + 28);
  sub_1BA6EDD40((uint64_t)v11, v30);
  v24(v30, 0, 1, v8);
  *(_QWORD *)(v12 + 40) = v93;
  v93 = swift_allocBox();
  v32 = v31;
  v18(v11, v27, v17);
  v33 = v12;
  v34 = v18;
  v94 = v18;
  swift_storeEnumTagMultiPayload();
  v102.origin.x = a1;
  v102.origin.y = a2;
  v102.size.width = a3;
  v102.size.height = a4;
  MidX = CGRectGetMidX(v102);
  v36 = swift_allocObject();
  *(CGFloat *)(v36 + 16) = MidX;
  *(_QWORD *)(v36 + 24) = MEMORY[0x1E0DEE9D8];
  *v32 = 0x5864694D6B73616DLL;
  v32[1] = 0xE800000000000000;
  v32[2] = v36 | 0x3000000000000000;
  v32[3] = 1;
  v37 = (uint64_t)v32 + *(int *)(v13 + 28);
  sub_1BA6EDD40((uint64_t)v11, v37);
  v98 = v8;
  v24(v37, 0, 1, v8);
  *(_QWORD *)(v33 + 48) = v93;
  v38 = swift_allocBox();
  v40 = v39;
  v41 = v99;
  v34(v11, v99, v17);
  swift_storeEnumTagMultiPayload();
  v103.origin.x = a1;
  v103.origin.y = a2;
  v103.size.width = a3;
  v103.size.height = a4;
  MidY = CGRectGetMidY(v103);
  v43 = swift_allocObject();
  *(CGFloat *)(v43 + 16) = MidY;
  *(_QWORD *)(v43 + 24) = MEMORY[0x1E0DEE9D8];
  *v40 = 0x5964694D6B73616DLL;
  v40[1] = 0xE800000000000000;
  v40[2] = v43 | 0x3000000000000000;
  v40[3] = 1;
  v44 = (uint64_t)v40 + *(int *)(v13 + 28);
  sub_1BA6EDD40((uint64_t)v11, v44);
  v24(v44, 0, 1, v8);
  v45 = v24;
  v46 = v33;
  *(_QWORD *)(v33 + 56) = v38;
  v93 = swift_allocBox();
  v48 = v47;
  v49 = v94;
  v94(v11, v41, v17);
  swift_storeEnumTagMultiPayload();
  v104.origin.x = a1;
  v104.origin.y = a2;
  v104.size.width = a3;
  v104.size.height = a4;
  MaxX = CGRectGetMaxX(v104);
  v51 = swift_allocObject();
  *(CGFloat *)(v51 + 16) = MaxX;
  *(_QWORD *)(v51 + 24) = MEMORY[0x1E0DEE9D8];
  *v48 = 0x5878614D6B73616DLL;
  v48[1] = 0xE800000000000000;
  v48[2] = v51 | 0x3000000000000000;
  v48[3] = 1;
  v52 = (uint64_t)v48 + *(int *)(v13 + 28);
  sub_1BA6EDD40((uint64_t)v11, v52);
  v53 = v98;
  v45(v52, 0, 1, v98);
  *(_QWORD *)(v46 + 64) = v93;
  v54 = v46;
  v55 = swift_allocBox();
  v57 = v56;
  v49(v11, v41, v17);
  swift_storeEnumTagMultiPayload();
  v105.origin.x = a1;
  v105.origin.y = a2;
  v105.size.width = a3;
  v105.size.height = a4;
  MaxY = CGRectGetMaxY(v105);
  v59 = swift_allocObject();
  *(CGFloat *)(v59 + 16) = MaxY;
  *(_QWORD *)(v59 + 24) = MEMORY[0x1E0DEE9D8];
  *v57 = 0x5978614D6B73616DLL;
  v57[1] = 0xE800000000000000;
  v57[2] = v59 | 0x3000000000000000;
  v57[3] = 1;
  v60 = (uint64_t)v57 + *(int *)(v13 + 28);
  sub_1BA6EDD40((uint64_t)v11, v60);
  v45(v60, 0, 1, v53);
  *(_QWORD *)(v54 + 72) = v55;
  v93 = swift_allocBox();
  v62 = v61;
  v63 = v99;
  v96 = v17;
  v49(v11, v99, v17);
  swift_storeEnumTagMultiPayload();
  v106.origin.x = a1;
  v106.origin.y = a2;
  v106.size.width = a3;
  v106.size.height = a4;
  Width = CGRectGetWidth(v106);
  v65 = swift_allocObject();
  *(CGFloat *)(v65 + 16) = Width;
  *(_QWORD *)(v65 + 24) = MEMORY[0x1E0DEE9D8];
  *v62 = 0x746469576B73616DLL;
  v62[1] = 0xE900000000000068;
  v62[2] = v65 | 0x3000000000000000;
  v62[3] = 1;
  v66 = (uint64_t)v62 + *(int *)(v13 + 28);
  sub_1BA6EDD40((uint64_t)v11, v66);
  v45(v66, 0, 1, v53);
  v67 = v54;
  v95 = v54;
  *(_QWORD *)(v54 + 80) = v93;
  v68 = swift_allocBox();
  v70 = v69;
  v49(v11, v63, v17);
  swift_storeEnumTagMultiPayload();
  v107.origin.x = a1;
  v107.origin.y = a2;
  v107.size.width = a3;
  v107.size.height = a4;
  v71 = CGRectGetWidth(v107);
  v72 = swift_allocObject();
  *(CGFloat *)(v72 + 16) = v71;
  *(_QWORD *)(v72 + 24) = MEMORY[0x1E0DEE9D8];
  *v70 = 0x676965486B73616DLL;
  v70[1] = 0xEA00000000007468;
  v70[2] = v72 | 0x3000000000000000;
  v70[3] = 1;
  v73 = (uint64_t)v70 + *(int *)(v13 + 28);
  sub_1BA6EDD40((uint64_t)v11, v73);
  v74 = v98;
  v45(v73, 0, 1, v98);
  *(_QWORD *)(v67 + 88) = v68;
  v75 = swift_allocBox();
  v77 = v76;
  v78 = v96;
  v49(v11, v63, v96);
  swift_storeEnumTagMultiPayload();
  sub_1BB8735D0();
  v80 = v79;
  v81 = swift_allocObject();
  *(_QWORD *)(v81 + 16) = v80;
  *(_QWORD *)(v81 + 24) = MEMORY[0x1E0DEE9D8];
  *v77 = 0x746E65436B73616DLL;
  v77[1] = 0xEB00000000587265;
  v77[2] = v81 | 0x3000000000000000;
  v77[3] = 1;
  v82 = (uint64_t)v77 + *(int *)(v13 + 28);
  sub_1BA6EDD40((uint64_t)v11, v82);
  v45(v82, 0, 1, v74);
  v83 = v95;
  *(_QWORD *)(v95 + 96) = v75;
  v84 = swift_allocBox();
  v86 = v85;
  v49(v11, v99, v78);
  swift_storeEnumTagMultiPayload();
  sub_1BB8735D0();
  v88 = v87;
  v89 = swift_allocObject();
  *(_QWORD *)(v89 + 16) = v88;
  *(_QWORD *)(v89 + 24) = MEMORY[0x1E0DEE9D8];
  *v86 = 0x746E65436B73616DLL;
  v86[1] = 0xEB00000000597265;
  v86[2] = v89 | 0x3000000000000000;
  v86[3] = 1;
  v90 = (uint64_t)v86 + *(int *)(v13 + 28);
  sub_1BA6EDD40((uint64_t)v11, v90);
  v45(v90, 0, 1, v74);
  *(_QWORD *)(v83 + 104) = v84;
  return v83;
}

uint64_t destroy for FormatVideoNodeStyle.Selector(uint64_t a1)
{
  uint64_t result;
  unsigned int v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) != 0)
    swift_release();
  result = swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 0xFD)
    result = sub_1BA6F2B88(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v3);
  if (*(unsigned __int8 *)(a1 + 144) != 254)
    result = swift_release();
  if ((~*(_QWORD *)(a1 + 152) & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t sub_1BA4E7D24()
{
  sub_1BA4E7DCC();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4E7D70()
{
  sub_1BA4E7DCC();
  return sub_1BB872D60();
}

unint64_t sub_1BA4E7DCC()
{
  unint64_t result;

  result = qword_1ED3C86B8;
  if (!qword_1ED3C86B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C01F0, &_s10CodingTypeON_25);
    atomic_store(result, (unint64_t *)&qword_1ED3C86B8);
  }
  return result;
}

uint64_t *initializeWithCopy for FormatMenuItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  sub_1BA7CCBB4(*a2, v5, v6, v7);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  sub_1BA7CCCA0(v8, v9, v10);
  a1[4] = v8;
  a1[5] = v9;
  v11 = a2[7];
  a1[6] = v10;
  a1[7] = v11;
  swift_retain();
  return a1;
}

uint64_t FormatContent.Resolved.tag.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_unknownObjectRetain();
}

uint64_t sub_1BA4E7EB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  CFTimeInterval v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t AssociatedConformanceWitness;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;

  v47 = a1;
  v3 = *(_QWORD **)v1;
  v48 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v4 = v3[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v34 = AssociatedTypeWitness;
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v34 - v8;
  v10 = CACurrentMediaTime();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0xF000000000000007;
  v37 = sub_1BB86E6F8();
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v46(v9, a1, AssociatedTypeWitness);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (v12 + 64) & ~v12;
  v42 = v12 | 7;
  v36 = v13;
  v14 = (v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = v14 + 8;
  v15 = (_QWORD *)swift_allocObject();
  v16 = v4;
  v15[2] = v4;
  v40 = v3[11];
  v15[3] = v40;
  v38 = v3[12];
  v17 = v48;
  v15[4] = v38;
  v15[5] = v17;
  v41 = v3[14];
  v15[6] = v41;
  v39 = v3[15];
  v15[7] = v39;
  v18 = (char *)v15 + v13;
  v35 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v19 = v34;
  v35(v18, v9, v34);
  *(CFTimeInterval *)((char *)v15 + v14) = v10;
  *(_QWORD *)((char *)v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8)) = v11;
  v20 = swift_getAssociatedTypeWitness();
  v44 = v20;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedLocation(0, v20, AssociatedConformanceWitness, v21);
  swift_retain();
  v22 = (void *)v37;
  sub_1BB86EC08();

  swift_release();
  v46(v9, v47, v19);
  v23 = (_QWORD *)swift_allocObject();
  v24 = v40;
  v23[2] = v16;
  v23[3] = v24;
  v25 = v48;
  v23[4] = v38;
  v23[5] = v25;
  v26 = (char *)v23 + v36;
  v27 = v39;
  v23[6] = v41;
  v23[7] = v27;
  v35(v26, v9, v19);
  *(_QWORD *)((char *)v23 + v14) = v11;
  swift_retain();
  v28 = (void *)sub_1BB86E854();
  sub_1BB86EA28();
  swift_release();
  swift_release();

  v29 = (void *)sub_1BB86E854();
  type metadata accessor for FeedServiceFetchResult(0, v44, AssociatedConformanceWitness, v30);
  sub_1BB86E980();
  swift_release();

  swift_retain();
  v31 = (void *)sub_1BB86E854();
  v32 = sub_1BB86EA28();
  swift_release();
  swift_release_n();

  return v32;
}

uint64_t sub_1BA4E822C()
{
  unsigned __int8 *v0;

  return sub_1BADAB874(*v0);
}

uint64_t sub_1BA4E8234()
{
  unsigned __int8 *v0;

  return sub_1BADB5740(*v0);
}

uint64_t sub_1BA4E823C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatArticleOverrides.init(from:)(a1, a2);
}

uint64_t sub_1BA4E8250(_QWORD *a1)
{
  return FormatTypeDefinition.Enum.encode(to:)(a1);
}

uint64_t sub_1BA4E8264@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4E8290();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4E8290()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12)
    return 18;
  else
    return v0;
}

uint64_t sub_1BA4E82E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4E830C();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4E830C()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

_QWORD *sub_1BA4E8354(uint64_t *a1, _OWORD *a2, unsigned __int8 *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  int v12;
  double v13;
  _QWORD *result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  CFTimeInterval v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _QWORD v46[6];
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v6 = v4;
  v10 = *v4;
  v11 = *a1;
  v12 = *a3;
  v13 = CACurrentMediaTime();
  result = sub_1BA4DABF8(a1, (uint64_t)a2, a4);
  if (!v5)
  {
    v48 = v11;
    v49 = v12;
    v50 = v10;
    v15 = v4[2];
    v53 = result;
    v54 = v15;
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v52 = v16;
    v17 = swift_allocObject();
    v51 = xmmword_1BB87FC80;
    *(_OWORD *)(v17 + 16) = xmmword_1BB87FC80;
    sub_1BB86F064();
    sub_1BB86F22C();
    result = (_QWORD *)swift_release();
    v18 = v58;
    if (v58)
    {
      v19 = v57;
      *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
      v20 = sub_1BA6A2D8C();
      *(_QWORD *)(v17 + 64) = v20;
      *(_QWORD *)(v17 + 32) = v19;
      *(_QWORD *)(v17 + 40) = v18;
      sub_1BB86F064();
      sub_1BB86F22C();
      result = (_QWORD *)swift_release();
      v21 = v56;
      if (v56)
      {
        v22 = v55;
        *(_QWORD *)(v17 + 96) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v17 + 104) = v20;
        *(_QWORD *)(v17 + 72) = v22;
        *(_QWORD *)(v17 + 80) = v21;
        v23 = CACurrentMediaTime();
        v24 = MEMORY[0x1E0DEB100];
        *(_QWORD *)(v17 + 136) = MEMORY[0x1E0DEB070];
        *(_QWORD *)(v17 + 144) = v24;
        *(CFTimeInterval *)(v17 + 112) = (v23 - v13) * 1000.0;
        v25 = sub_1BB87330C();
        sub_1BB86EF44("Feed database finished decoding deferred %{public}@ cursor %{public}@, time=%fms", 80, 2, &dword_1BA493000, v54, v25, v17);
        v26 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v26);
        v46[2] = v6;
        v46[3] = a1;
        v27 = v53;
        v46[4] = v53;
        v47 = sub_1BA4E5BFC(v53, (uint64_t (*)(uint64_t))sub_1BB026784, (uint64_t)v46);
        v28 = MEMORY[0x1E0DEA968];
        v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = v51;
        sub_1BB86F064();
        sub_1BB86F22C();
        result = (_QWORD *)swift_release();
        v30 = v58;
        if (v58)
        {
          v31 = v57;
          *(_QWORD *)(v29 + 56) = v28;
          *(_QWORD *)(v29 + 64) = v20;
          *(_QWORD *)(v29 + 32) = v31;
          *(_QWORD *)(v29 + 40) = v30;
          sub_1BB86F064();
          sub_1BB86F22C();
          result = (_QWORD *)swift_release();
          v32 = v56;
          if (v56)
          {
            v33 = v55;
            *(_QWORD *)(v29 + 96) = v28;
            *(_QWORD *)(v29 + 104) = v20;
            *(_QWORD *)(v29 + 72) = v33;
            *(_QWORD *)(v29 + 80) = v32;
            v34 = (_QWORD *)v47;
            v35 = sub_1BA4E0C98();
            *(_QWORD *)(v29 + 136) = v28;
            *(_QWORD *)(v29 + 144) = v20;
            *(_QWORD *)(v29 + 112) = v35;
            *(_QWORD *)(v29 + 120) = v36;
            v37 = sub_1BB87330C();
            sub_1BB86EF44("Feed database creating deferred %{public}@ cursor %{public}@ with new context=%{public}@", 88, 2, &dword_1BA493000, v54, v37, v29);
            swift_bridgeObjectRelease();
            type metadata accessor for FeedDeferredCursor(0, *(_QWORD *)(v48 + 80), *(_QWORD *)(v48 + 88), v38);
            LOBYTE(v57) = v49;
            v39 = v6[3];
            v40 = swift_allocObject();
            swift_weakInit();
            v41 = swift_allocObject();
            v42 = v50;
            *(_QWORD *)(v41 + 16) = *(_QWORD *)(v50 + 112);
            *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 120);
            *(_QWORD *)(v41 + 40) = *(_QWORD *)(v42 + 136);
            *(_QWORD *)(v41 + 48) = v40;
            *(_QWORD *)(v41 + 56) = v27;
            *(_QWORD *)(v41 + 64) = v34;
            *(_QWORD *)(v41 + 72) = a1;
            v43 = a2[3];
            *(_OWORD *)(v41 + 112) = a2[2];
            *(_OWORD *)(v41 + 128) = v43;
            v44 = a2[5];
            *(_OWORD *)(v41 + 144) = a2[4];
            *(_OWORD *)(v41 + 160) = v44;
            v45 = a2[1];
            *(_OWORD *)(v41 + 80) = *a2;
            *(_OWORD *)(v41 + 96) = v45;
            swift_unknownObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1BA4C9ACC((uint64_t)a2);
            return (_QWORD *)sub_1BA8FDBE4((char *)&v57, (uint64_t)v27, v34, v39, (uint64_t)sub_1BA8382AC, v41);
          }
          goto LABEL_12;
        }
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1BA4E8744()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t GroupLayoutBindingKey.description.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  if (*(_QWORD *)(v0 + 24))
  {
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v1);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v2);
    sub_1BB872AFC(v3);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v5);
    swift_bridgeObjectRelease();
  }
  sub_1BB872AFC(v4);
  return 0x3D657079747BLL;
}

void sub_1BA4E88B0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BB873A2C();
  if (v0 <= 0x3F)
  {
    sub_1BA4B07F0(319, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

NewsFeed::FormatCellSelection::CodingType_optional __swiftcall FormatCellSelection.CodingType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatCellSelection::CodingType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatResizeConstraint::Dimension_optional __swiftcall FormatResizeConstraint.Dimension.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatResizeConstraint::Dimension_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

NewsFeed::FormatBlendMode_optional __swiftcall FormatBlendMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatBlendMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 16;
  if (v3 < 0x10)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA4E8A8C(_QWORD *a1)
{
  return FormatSwitchNodeDefault.encode(to:)(a1);
}

void sub_1BA4E8AAC(uint64_t a1, _QWORD *a2)
{
  FormatCommandValue.encode(to:)(a1, a2);
}

uint64_t sub_1BA4E8AC0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4160);
  result = sub_1BB86DF48();
  if (!v26)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4210);
  result = sub_1BB86DF48();
  if (!v24)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4138);
  result = sub_1BB86DF48();
  if (!v22)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D2EA8);
  result = sub_1BB86DF18();
  if (v20)
  {
    v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
    v4 = MEMORY[0x1E0C80A78](v3);
    v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v7 + 16))(v6, v4);
    v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    v9 = MEMORY[0x1E0C80A78](v8);
    v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v12 + 16))(v11, v9);
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (uint64_t *)((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    v18 = sub_1BA4BFD24(*v6, *v11, *v16, &v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return (uint64_t)v18;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BA4E8D90(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedBannerAdRequester();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedPrerollAdRequester();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D3468);
  result = sub_1BB86DF48();
  if (!v11)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8720DC();
  result = sub_1BB86DF0C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3B09F0);
  result = sub_1BB86DF48();
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4A5F40();
  result = sub_1BB86DF3C();
  if (result)
  {
    v6 = result;
    type metadata accessor for FeedAdPipelineProcessor();
    v7 = (_QWORD *)swift_allocObject();
    v7[3] = 0;
    swift_unknownObjectWeakInit();
    v7[4] = v3;
    v7[5] = v4;
    sub_1BA4CECCC(&v10, (uint64_t)(v7 + 6));
    v7[11] = v5;
    sub_1BA4CECCC(&v8, (uint64_t)(v7 + 12));
    v7[17] = v6;
    return (uint64_t)v7;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BA4E8FAC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatItemCollection.init(from:)(a1, a2);
}

uint64_t FormatItemCollection.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v6;
  __int128 v7;
  _QWORD v8[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1BA7F85E8(0, (unint64_t *)&qword_1ED3B9400, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA4E90F4(&qword_1ED39BE48, &qword_1ED39B158, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF40]);
    sub_1BB8743D4();
    sub_1BA7F7558(v8[6], &v7);
    v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA4E90F4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA7F85E8(255, (unint64_t *)&qword_1ED3B9400, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))sub_1BA7F8204, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA4E9184@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatURLParameterOptionModifier.init(from:)(a1, a2);
}

uint64_t FormatURLParameterOptionModifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v25 = a2;
  sub_1BAEC8D60();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC8DD8();
  sub_1BA4A2870(&qword_1ED3D1390, (uint64_t (*)(uint64_t))sub_1BAEC8DD8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v17 - 2);
      v19 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v13;
      MEMORY[0x1E0C80A78](v20);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_11;
      *(&v24 - 3) = sub_1BAEC8E58();
      *(&v24 - 2) = sub_1BA545B1C();
      *(&v24 - 1) = sub_1BAEC8E9C();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71130((uint64_t)&unk_1E726F338);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4AD288(0, &qword_1ED3B94E0, (uint64_t)&type metadata for FormatQueryParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4E94C0();
  v26 = 0;
  v27 = 0;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4E94C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B94E8;
  if (!qword_1ED3B94E8)
  {
    sub_1BA4AD288(255, &qword_1ED3B94E0, (uint64_t)&type metadata for FormatQueryParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82CA18();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B94E8);
  }
  return result;
}

uint64_t sub_1BA4E9538@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatAnimationNodeAnimation.init(from:)(a1, a2);
}

uint64_t FormatAnimationNodeAnimation.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  __int128 v30;
  uint64_t v31;

  v3 = v2;
  v29 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
LABEL_15:
    sub_1BA7F8B78(v10, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  v10 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v12 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_8;
      }
      v22 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v22;
      *(_QWORD *)(v23 + 8) = v17;
      *(_QWORD *)(v23 + 16) = &unk_1E726A598;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v22, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      goto LABEL_15;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BA4E9970();
  v30 = 0uLL;
  sub_1BB8740D4();
  if ((_BYTE)v31)
  {
    if (v31 == 1)
    {
      type metadata accessor for FormatAnimationNodeSpringAnimation();
      v30 = xmmword_1BB87FC90;
      sub_1BA4A2870(&qword_1ED39F0D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeSpringAnimation);
      sub_1BB8740D4();
      v18 = v29;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v19 = v31;
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v19;
      v21 = v20 | 0x4000000000000000;
    }
    else
    {
      type metadata accessor for FormatAnimationNodeGroupAnimation();
      v30 = xmmword_1BB87FC90;
      sub_1BA4A2870(&qword_1EF2AD910, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeGroupAnimation, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeGroupAnimation);
      sub_1BB8740D4();
      v18 = v29;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v26 = v31;
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = v26;
      v21 = v27 | 0x8000000000000000;
    }
  }
  else
  {
    type metadata accessor for FormatAnimationNodeBasicAnimation();
    v30 = xmmword_1BB87FC90;
    sub_1BA4A2870(&qword_1EF2B2908, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeBasicAnimation, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeBasicAnimation);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v24 = v31;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v24;
    v18 = v29;
  }
  *v18 = v21;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA4E9970()
{
  unint64_t result;

  result = qword_1ED3A4358;
  if (!qword_1ED3A4358)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE4A0, &_s10CodingTypeON_129);
    atomic_store(result, (unint64_t *)&qword_1ED3A4358);
  }
  return result;
}

uint64_t sub_1BA4E99B4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatLayeredMediaFilter.Monochrome.init(from:)(a1, a2);
}

uint64_t FormatLayeredMediaFilter.Monochrome.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  __int128 v34;
  char v35;
  uint64_t v36;

  v3 = v2;
  v33 = a2;
  sub_1BAEA0264();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA02DC();
  sub_1BA4A2870(&qword_1ED3D1140, (uint64_t (*)(uint64_t))sub_1BAEA02DC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v29 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v29);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      v32 = a1;
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v22 = v12;
      MEMORY[0x1E0C80A78](v21);
      *(&v31 - 4) = (uint64_t)&_s10CodingKeysON_104;
      *(&v31 - 3) = sub_1BAEA035C();
      *(&v31 - 2) = sub_1BA7F1374();
      *(&v31 - 1) = sub_1BAEA03A0();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726CA68);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v19;
      *(_QWORD *)(v24 + 8) = v20;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      a1 = v32;
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v13);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA62C9A0();
  v34 = 0uLL;
  v35 = 0;
  sub_1BB874068();
  v32 = a1;
  v18 = v36;
  v34 = xmmword_1BB8A1A10;
  v35 = 0;
  sub_1BA61BC14();
  sub_1BB874068();
  v25 = v12;
  v26 = v36;
  v34 = xmmword_1BB8D2D60;
  v35 = 0;
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
  v28 = v36;
  v29 = (uint64_t)v32;
  v30 = v33;
  *v33 = v18;
  v30[1] = v26;
  v30[2] = v28;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_1BA4E9DA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatVisibility.init(from:)(a1, a2);
}

uint64_t FormatVisibility.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA4EA19C();
    v23 = 0;
    v24 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E7268AA0;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA4EA044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  **(_QWORD **)(v3 - 72) = 0x8000000000000008;
  JUMPOUT(0x1BA4EA01CLL);
}

void sub_1BA4EA060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
  *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
  sub_1BAE767F4();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v5 = *(_QWORD *)(v4 - 96);
    v6 = *(_QWORD *)(v4 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    **(_QWORD **)(v4 - 72) = v7;
    JUMPOUT(0x1BA4EA01CLL);
  }
  JUMPOUT(0x1BA4E9F30);
}

void sub_1BA4EA0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3A66C0, (uint64_t (*)(void))sub_1BAADB198, (uint64_t)&type metadata for FormatVisibility, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
  sub_1BAE79EE8();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    v5 = *(_QWORD *)(v4 - 96);
    v6 = *(_QWORD *)(v4 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    JUMPOUT(0x1BA4EA188);
  }
  JUMPOUT(0x1BA4E9F30);
}

unint64_t sub_1BA4EA19C()
{
  unint64_t result;

  result = qword_1ED3C77C0;
  if (!qword_1ED3C77C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFC18, &_s10CodingTypeON_155);
    atomic_store(result, (unint64_t *)&qword_1ED3C77C0);
  }
  return result;
}

uint64_t sub_1BA4EA1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatContent.Resolved() - 8) + 80);
  return sub_1BA4EA234(a1, a2, (_QWORD *)(v3 + ((v7 + 16) & ~v7)), a3);
}

uint64_t sub_1BA4EA234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void *v25;
  uint64_t v26;

  v22 = *a3;
  v26 = a3[1];
  v6 = (int *)type metadata accessor for FormatContent.Resolved();
  v7 = v6[5];
  v8 = (char *)a3 + v7;
  v9 = (char *)a4 + v7;
  v10 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, v8, v10);
  v11 = *(_QWORD *)((char *)a3 + v6[11]);
  v25 = *(void **)((char *)a3 + v6[12]);
  v21 = *(_QWORD *)((char *)a3 + v6[13]);
  sub_1BA4C2DD8((uint64_t)a3 + v6[14], (uint64_t)a4 + v6[14], (uint64_t (*)(_QWORD))sub_1BA6DB154);
  v12 = *(void **)((char *)a3 + v6[15]);
  v20 = *((_BYTE *)a3 + v6[16]);
  v13 = *(_QWORD *)((char *)a3 + v6[17]);
  v14 = *(_QWORD *)((char *)a3 + v6[6]);
  v15 = *(_QWORD *)((char *)a3 + v6[9]);
  v19 = *(_QWORD *)((char *)a3 + v6[10]);
  sub_1BA4C2DD8((uint64_t)a3 + v6[18], (uint64_t)a4 + v6[18], (uint64_t (*)(_QWORD))sub_1BA6D940C);
  *a4 = v22;
  a4[1] = v26;
  *(_QWORD *)((char *)a4 + v6[6]) = v14;
  *(_QWORD *)((char *)a4 + v6[7]) = a1;
  *(_QWORD *)((char *)a4 + v6[8]) = a2;
  *(_QWORD *)((char *)a4 + v6[9]) = v15;
  *(_QWORD *)((char *)a4 + v6[11]) = v11;
  *(_QWORD *)((char *)a4 + v6[12]) = v25;
  *(_QWORD *)((char *)a4 + v6[13]) = v21;
  *(_QWORD *)((char *)a4 + v6[15]) = v12;
  *((_BYTE *)a4 + v6[16]) = v20;
  *(_QWORD *)((char *)a4 + v6[17]) = v13;
  *(_QWORD *)((char *)a4 + v6[10]) = v19;
  v16 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v17 = v25;
  return swift_unknownObjectRetain();
}

uint64_t sub_1BA4EA400()
{
  sub_1BA4EA45C();
  return sub_1BB872D60();
}

unint64_t sub_1BA4EA45C()
{
  unint64_t result;

  result = qword_1ED39CC10;
  if (!qword_1ED39CC10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorderEdge, &type metadata for FormatBorderEdge);
    atomic_store(result, (unint64_t *)&qword_1ED39CC10);
  }
  return result;
}

uint64_t sub_1BA4EA4A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[10];

  v4 = sub_1BB86DEF4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    sub_1BA4B07F0(0, &qword_1ED3C4898, (uint64_t (*)(uint64_t))sub_1BA6EF3B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4EA0]);
    swift_allocObject();
    swift_unknownObjectRetain();
    sub_1BB86EC44();
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB3560], v4);
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58C90]), sel_init);
    v15[8] = sub_1BA49A224(0, &qword_1ED3CF908);
    v15[9] = sub_1BA81D2C4();
    v15[5] = v9;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v10 = type metadata accessor for NetworkEventHandler();
    result = sub_1BB86DF0C();
    if (result)
    {
      v11 = result;
      v15[3] = v10;
      v15[4] = sub_1BA4A2870(qword_1ED3C89A8, (uint64_t (*)(uint64_t))type metadata accessor for NetworkEventHandler, (uint64_t)&unk_1BB921894);
      v15[0] = v11;
      v12 = sub_1BB86E284();
      swift_allocObject();
      swift_retain();
      v13 = sub_1BB86E278();
      v14 = MEMORY[0x1E0DB3B30];
      a2[3] = v12;
      a2[4] = v14;
      swift_unknownObjectRelease();
      result = swift_release();
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1BA4EA700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *ObjectType;
  objc_super v30;
  uint64_t v31;

  v27 = a4;
  v28 = a5;
  v25 = a2;
  v26 = a3;
  v24 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v22 = *MEMORY[0x1E0DEEDD8] & *v5;
  v6 = v22;
  v23 = sub_1BB873450();
  v20[0] = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB87342C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v9);
  v11 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v11);
  v21 = *(_QWORD *)(v6 + 168);
  v20[1] = sub_1BA657D64();
  v12 = v5;
  sub_1BB872658();
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, v10, MEMORY[0x1E0DEF828]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9650, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3B9660, (unint64_t *)&unk_1ED3B9650, v10);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v20[0] + 104))(v8, *MEMORY[0x1E0DEF8D0], v23);
  *(_QWORD *)((char *)v5 + v21) = sub_1BB87348C();
  v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *((_BYTE *)v12 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v12) + 0xB0)) = 0;
  *(_QWORD *)((char *)v12 + *(_QWORD *)((*v13 & *v12) + 0xB8)) = MEMORY[0x1E0DEE9D8];
  v14 = v25;
  *(_QWORD *)((char *)v12 + *(_QWORD *)((*v13 & *v12) + 0x80)) = v24;
  v15 = v13;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v22 + 80) - 8) + 16))((char *)v12 + *(_QWORD *)((*v13 & *v12) + 0x88), v14);
  v16 = v26;
  sub_1BA4C010C(v26, (uint64_t)v12 + *(_QWORD *)((*v15 & *v12) + 0x90));
  v17 = v27;
  sub_1BA4C010C(v27, (uint64_t)v12 + *(_QWORD *)((*v15 & *v12) + 0x98));
  *(_QWORD *)((char *)v12 + *(_QWORD *)((*v15 & *v12) + 0xA0)) = v28;
  swift_retain();
  swift_retain();

  v30.receiver = v12;
  v30.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v30, sel_init);
  __swift_destroy_boxed_opaque_existential_1(v17);
  __swift_destroy_boxed_opaque_existential_1(v16);
  return v18;
}

uint64_t sub_1BA4EAA34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3D51A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  result = sub_1BB86DF0C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, (unint64_t *)&unk_1ED3D5190);
    result = sub_1BB86DF48();
    if (v10)
    {
      type metadata accessor for LazyAuthTokenStore();
      v6 = swift_allocObject();
      sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
      sub_1BA5D1B18();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B9240, (uint64_t (*)(uint64_t))sub_1BA5D1B18, MEMORY[0x1E0DEAF38]);
      swift_retain();
      sub_1BB873BC4();
      sub_1BA4B07F0(0, &qword_1ED3C47F8, (uint64_t (*)(uint64_t))sub_1BA4C7DCC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
      swift_allocObject();
      *(_QWORD *)(v6 + 16) = sub_1BB86E740();
      sub_1BA841784();
      v8 = v7;
      swift_allocObject();
      v9 = sub_1BB86E260();
      a2[3] = v8;
      a2[4] = sub_1BA4A2870((unint64_t *)&unk_1ED3C47A0, (uint64_t (*)(uint64_t))sub_1BA841784, MEMORY[0x1E0DB3B20]);
      result = swift_release();
      *a2 = v9;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t FormatPrefetchResources.tagAssetBindings.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = v1 + 56;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v10 | (v8 << 6); ; i = __clz(__rbit64(v13)) + (v8 << 6))
  {
    v15 = *(_BYTE *)(*(_QWORD *)(v1 + 48) + i);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BA81C6E8(0, *(_QWORD *)(v9 + 16) + 1, 1, (char *)v9);
      v9 = result;
    }
    v17 = *(_QWORD *)(v9 + 16);
    v16 = *(_QWORD *)(v9 + 24);
    if (v17 >= v16 >> 1)
    {
      result = (uint64_t)sub_1BA81C6E8((char *)(v16 > 1), v17 + 1, 1, (char *)v9);
      v9 = result;
    }
    *(_QWORD *)(v9 + 16) = v17 + 1;
    *(_BYTE *)(v9 + v17 + 32) = v15;
    if (v5)
      goto LABEL_4;
LABEL_5:
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v6)
      goto LABEL_29;
    v13 = *(_QWORD *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v6)
        goto LABEL_29;
      v13 = *(_QWORD *)(v2 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v6)
          goto LABEL_29;
        v13 = *(_QWORD *)(v2 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v6)
            goto LABEL_29;
          v13 = *(_QWORD *)(v2 + 8 * v8);
          if (!v13)
          {
            v8 = v12 + 4;
            if (v12 + 4 >= v6)
              goto LABEL_29;
            v13 = *(_QWORD *)(v2 + 8 * v8);
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_22:
    v5 = (v13 - 1) & v13;
  }
  v14 = v12 + 5;
  if (v14 >= v6)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return v9;
  }
  v13 = *(_QWORD *)(v2 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v6)
      goto LABEL_29;
    v13 = *(_QWORD *)(v2 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

NewsFeed::FormatButtonNodeState_optional __swiftcall FormatButtonNodeState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatButtonNodeState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatContentMode_optional __swiftcall FormatContentMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatContentMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FormatWebEmbedBinding.Bool.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  v4 = 10;
  if (v2 < 0xA)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t sub_1BA4EAFB8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FeedGroupFreezingDisallow.init(from:)(a1, a2);
}

uint64_t FeedGroupFreezingDisallow.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _BYTE *v9;
  char v10;
  uint64_t v12;
  _BYTE *v13;

  v13 = a2;
  sub_1BA4CDF6C(0, &qword_1ED39DB40, (uint64_t (*)(void))sub_1BA4EB108, (uint64_t)&type metadata for FeedGroupFreezingDisallow.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EB108();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v13;
    v10 = sub_1BB8740A4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4EB108()
{
  unint64_t result;

  result = qword_1ED39C6F0;
  if (!qword_1ED39C6F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB911608, &type metadata for FeedGroupFreezingDisallow.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39C6F0);
  }
  return result;
}

uint64_t FeedAdGroupDataProvider.__deallocating_deinit()
{
  FeedAdGroupDataProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedAdGroupDataProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 144);
  v2 = sub_1BB871680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  v4 = sub_1BB86FAD8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
  v6 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t *sub_1BA4EB234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t AssociatedTypeWitness;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[16];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  _QWORD v78[3];
  void *v79;
  char v80;
  char v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;

  v55 = a4;
  v53 = a3;
  v7 = v4;
  v8 = *(_QWORD *)(v4 + 88);
  v9 = *(_QWORD *)(v7 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v58 = sub_1BB873A2C();
  MEMORY[0x1E0C80A78](v58);
  v54 = (char *)&v51 - v10;
  v11 = sub_1BB86C8B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v51 - v16;
  v66 = (uint64_t)&v51 - v16;
  v69 = *(_QWORD *)(v9 - 8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v67 = (uint64_t)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a1 + 24);
  v68 = *(_QWORD *)(a1 + 16);
  v64 = v21;
  (*(void (**)(double))(v22 + 16))(v19);
  v63 = *(_QWORD *)(a1 + qword_1EF3D04D0);
  v92 = 4;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v23(v17, a1 + qword_1ED476458, v11);
  v23(v14, a1 + qword_1ED476440, v11);
  type metadata accessor for FeedGroupEmitter(0, v9, v8, v24);
  swift_bridgeObjectRetain();
  swift_retain();
  v62 = sub_1BB872E68();
  sub_1BB872EE0();
  swift_getTupleTypeMetadata2();
  sub_1BB872E68();
  v61 = sub_1BB8727CC();
  v59 = sub_1BB872E68();
  v57 = sub_1BB872E68();
  v79 = *(void **)(a1 + qword_1ED476460);
  v71 = v9;
  v72 = v8;
  v73 = v53;
  v74 = v55;
  v75 = a2;
  v56 = v9;
  type metadata accessor for FeedDeferredCursorGroup(255, v9, v8, v25);
  v26 = sub_1BB872EE0();
  v28 = type metadata accessor for FeedCursorGroup(0, v9, v8, v27);
  swift_bridgeObjectRetain();
  v29 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v26);
  v55 = sub_1BAA52384((void (*)(char *, char *))sub_1BA8388F4, (uint64_t)v70, v26, v28, MEMORY[0x1E0DEDCE8], v29, MEMORY[0x1E0DEDD18], v30);
  swift_bridgeObjectRelease();
  v52 = *(_QWORD *)(a1 + qword_1ED476468);
  v53 = *(_QWORD *)(a1 + qword_1ED476470);
  swift_bridgeObjectRetain();
  v51 = sub_1BA81E5E8(MEMORY[0x1E0DEE9D8]);
  sub_1BB86EAAC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v54, 1, 1);
  AssociatedTypeWitness = sub_1BB86E9D4();
  v31 = *(void **)(a1 + qword_1ED476448);
  v32 = *(_BYTE *)(a1 + qword_1ED476448 + 8);
  v33 = *(_BYTE *)(a1 + qword_1ED476448 + 9);
  v34 = *(_BYTE *)(a1 + qword_1ED476448 + 10);
  v35 = *(_BYTE *)(a1 + qword_1ED476448 + 11);
  v36 = *(_QWORD *)(a1 + qword_1ED476448 + 16);
  v37 = *(_QWORD *)(a1 + qword_1ED476448 + 24);
  v38 = *(_QWORD *)(a1 + qword_1ED476448 + 32);
  v39 = *(_QWORD *)(a1 + qword_1ED476448 + 40);
  v40 = *(_BYTE *)(a1 + qword_1ED476448 + 48);
  v41 = *(void **)(a1 + qword_1ED476448 + 56);
  v42 = *(_QWORD *)(a1 + qword_1ED476448 + 64);
  v58 = *(_QWORD *)(a1 + qword_1ED476448 + 72);
  v79 = v31;
  v80 = v32;
  v81 = v33;
  v82 = v34;
  v83 = v35;
  v84 = v36;
  v85 = v37;
  v86 = v38;
  v87 = v39;
  v88 = v40;
  v89 = v41;
  v90 = v42;
  v91 = v58;
  v43 = *(_QWORD *)(a1 + qword_1ED476450 + 8);
  v44 = *(_QWORD *)(a1 + qword_1ED476450 + 16);
  v78[0] = *(_QWORD *)(a1 + qword_1ED476450);
  v78[1] = v43;
  v78[2] = v44;
  v76 = 1;
  v77 = 1;
  v45 = *(_QWORD *)(a1 + qword_1ED476488);
  v46 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v38, v39);
  v47 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v48 = v67;
  v49 = sub_1BB63BF98(v68, v64, v67, v63, &v92, v66, (uint64_t)v65, v62, v61, v59, v57, v55, v52, v53, 0, 0, v51, AssociatedTypeWitness, (uint64_t *)&v79,
          (uint64_t)v78,
          (unsigned __int8 **)&v76,
          v45,
          MEMORY[0x1E0DEE9D8],
          0,
          0);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v48, v56);
  return v49;
}

uint64_t sub_1BA4EB868(_QWORD *a1)
{
  return FormatSlotItemCountLimit.encode(to:)(a1);
}

uint64_t FormatSlotItemCountLimit.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36[4];

  v2 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v2);
  v36[0] = (uint64_t)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v36 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v36 - v11;
  v13 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BA6B8518();
  sub_1BA6EC1EC(v13, v22, v19, v13, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v20, (uint64_t)v18, v21, (uint64_t)&off_1E734BDC0);
  sub_1BA4C2DD8(v36[3], (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotItemCountLimit);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v24 = v36[0];
      sub_1BA5193C4((uint64_t)v15, v36[0], (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      if (qword_1ED3C6D20 != -1)
        swift_once();
      v25 = sub_1BB86EB84();
      v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476B78);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v6, v26, v25);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BACE7E0C(2, v24, (uint64_t)v6);
      sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
      v27 = (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition;
      v28 = v24;
    }
    else
    {
      if (qword_1ED3C6D58 != -1)
        swift_once();
      v33 = sub_1BB86EB84();
      v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476C08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v12, v34, v33);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA4A96E0(0, (uint64_t)v12);
      v27 = type metadata accessor for FormatVersionRequirement;
      v28 = (uint64_t)v12;
    }
  }
  else
  {
    v29 = *v15;
    v30 = v15[1];
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v31 = sub_1BB86EB84();
    v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v9, v32, v31);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA4AD858(1, v29, v30, (uint64_t)v9);
    v27 = type metadata accessor for FormatVersionRequirement;
    v28 = (uint64_t)v9;
  }
  sub_1BA4A2E80(v28, v27);
  return sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA4EBC6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingTextExpressionLogic.Compare.init(from:)(a1, a2);
}

uint64_t FormatBindingTextExpressionLogic.Compare.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  char v32;

  v3 = v2;
  v29 = a2;
  sub_1BAE796D8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE79750();
  sub_1BA4A2870(&qword_1ED3D1370, (uint64_t (*)(uint64_t))sub_1BAE79750, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v29;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v29 = v13;
      v22 = *((_QWORD *)v17 - 2);
      v23 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v24);
      *(&v29 - 4) = (uint64_t)&_s10CodingKeysON_216;
      *(&v29 - 3) = sub_1BAE797D0();
      *(&v29 - 2) = sub_1BA4EBFD4();
      *(&v29 - 1) = sub_1BAE79814();
      swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71220((uint64_t)&unk_1E72689D8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v26 = v22;
      *(_QWORD *)(v26 + 8) = v23;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v18 = v12;
  v30 = 0uLL;
  v31 = 0;
  v19 = sub_1BB874098();
  v21 = v20;
  v30 = xmmword_1BB8A1A10;
  v31 = 0;
  sub_1BA63BE34();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v28 = v32;
  *(_QWORD *)v18 = v19;
  *(_QWORD *)(v18 + 8) = v21;
  *(_BYTE *)(v18 + 16) = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4EBFD4()
{
  unint64_t result;

  result = qword_1ED3CDB98;
  if (!qword_1ED3CDB98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFDF0, &_s10CodingKeysON_216);
    atomic_store(result, (unint64_t *)&qword_1ED3CDB98);
  }
  return result;
}

uint64_t sub_1BA4EC018(_QWORD *a1)
{
  return FormatShareAttributionNodeBinding.init(from:)(a1);
}

uint64_t FormatShareAttributionNodeBinding.init(from:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v1)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v2);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = sub_1BB8740EC();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = (unint64_t *)(v11 + 40);
      while (1)
      {
        v14 = *v13;
        if (*v13 >= 4)
          break;
        v13 += 2;
        if (!--v12)
          goto LABEL_7;
      }
      v15 = *(v13 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v2 = (void *)swift_allocError();
      *(_QWORD *)v16 = v15;
      *(_QWORD *)(v16 + 8) = v14;
      *(_QWORD *)(v16 + 16) = &unk_1E726E208;
      *(_OWORD *)(v16 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v15, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4EC2C4();
  v18 = 0uLL;
  sub_1BB8740D4();
  v18 = xmmword_1BB87FC90;
  sub_1BA4EC308();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4EC2C4()
{
  unint64_t result;

  result = qword_1ED3CE150;
  if (!qword_1ED3CE150)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6E08, &_s10CodingTypeON_33);
    atomic_store(result, (unint64_t *)&qword_1ED3CE150);
  }
  return result;
}

unint64_t sub_1BA4EC308()
{
  unint64_t result;

  result = qword_1ED3BE960;
  if (!qword_1ED3BE960)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.SharedItem, &type metadata for FormatHeadlineBinding.SharedItem);
    atomic_store(result, (unint64_t *)&qword_1ED3BE960);
  }
  return result;
}

uint64_t sub_1BA4EC34C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatOptionBindingModifier.init(from:)(a1, a2);
}

uint64_t FormatOptionBindingModifier.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v23 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v19 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v20 = v19;
      *(_QWORD *)(v20 + 8) = v16;
      *(_QWORD *)(v20 + 16) = &unk_1E7268C08;
      *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v19, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4EC674();
  v24 = 0uLL;
  sub_1BB8740D4();
  if ((v25 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v17 = 0;
    v18 = v23;
  }
  else
  {
    v24 = xmmword_1BB87FC90;
    sub_1BA4EC630();
    sub_1BB8740D4();
    v18 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v17 = v25;
  }
  *v18 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4EC630()
{
  unint64_t result;

  result = qword_1ED3B8798;
  if (!qword_1ED3B8798)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatURLParameterOptionModifier, &type metadata for FormatURLParameterOptionModifier);
    atomic_store(result, (unint64_t *)&qword_1ED3B8798);
  }
  return result;
}

unint64_t sub_1BA4EC674()
{
  unint64_t result;

  result = qword_1ED3CC208;
  if (!qword_1ED3CC208)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF570, &_s10CodingTypeON_152);
    atomic_store(result, (unint64_t *)&qword_1ED3CC208);
  }
  return result;
}

uint64_t FeedNativeAdRequester.__deallocating_deinit()
{
  FeedNativeAdRequester.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedNativeAdRequester.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 144);
  v2 = sub_1BB871680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));

  return v0;
}

uint64_t sub_1BA4EC768()
{
  sub_1BA4EC810();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4EC7B4()
{
  sub_1BA4EC810();
  return sub_1BB872D60();
}

unint64_t sub_1BA4EC810()
{
  unint64_t result;

  result = qword_1ED3B23A8;
  if (!qword_1ED3B23A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupPaidVisibility, &type metadata for FeedGroupPaidVisibility);
    atomic_store(result, (unint64_t *)&qword_1ED3B23A8);
  }
  return result;
}

_QWORD *sub_1BA4EC854(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  id v17;

  *a1 = *a2;
  v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(void **)v6;
  *(_QWORD *)v5 = *(_QWORD *)v6;
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(v6 + 8);
  *(_BYTE *)(v5 + 9) = *(_BYTE *)(v6 + 9);
  *(_BYTE *)(v5 + 10) = *(_BYTE *)(v6 + 10);
  *(_BYTE *)(v5 + 11) = *(_BYTE *)(v6 + 11);
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(v6 + 24);
  v8 = *(_QWORD *)(v6 + 40) - 1;
  swift_retain();
  v9 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >= 3)
  {
    *(_QWORD *)(v5 + 32) = *(_QWORD *)(v6 + 32);
    *(_QWORD *)(v5 + 40) = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v5 + 32) = *(_OWORD *)(v6 + 32);
  }
  *(_BYTE *)(v5 + 48) = *(_BYTE *)(v6 + 48);
  v10 = *(void **)(v6 + 56);
  *(_QWORD *)(v5 + 56) = v10;
  *(_QWORD *)(v5 + 64) = *(_QWORD *)(v6 + 64);
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(v6 + 72);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v5 + v13 + 80) & ~v13;
  v15 = (v6 + v13 + 80) & ~v13;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v17 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v14, v15, v11);
  return a1;
}

uint64_t sub_1BA4EC998()
{
  sub_1BA4ECA40();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4EC9E4()
{
  sub_1BA4ECA40();
  return sub_1BB872D60();
}

unint64_t sub_1BA4ECA40()
{
  unint64_t result;

  result = qword_1ED3B8778;
  if (!qword_1ED3B8778)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AAE8, &type metadata for FormatOptionsNodeStatementValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B8778);
  }
  return result;
}

uint64_t sub_1BA4ECA84()
{
  sub_1BA4ECB2C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4ECAD0()
{
  sub_1BA4ECB2C();
  return sub_1BB872D60();
}

unint64_t sub_1BA4ECB2C()
{
  unint64_t result;

  result = qword_1ED3CA610;
  if (!qword_1ED3CA610)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2680, &_s10CodingTypeON_7);
    atomic_store(result, (unint64_t *)&qword_1ED3CA610);
  }
  return result;
}

uint64_t sub_1BA4ECB70(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    sub_1BB025BE8();
    swift_allocError();
    *(_OWORD *)v20 = xmmword_1BB8D2D90;
    *(_BYTE *)(v20 + 16) = 7;
    swift_willThrow();
    return a5;
  }
  v26 = a7;
  sub_1BB86E2A8();
  swift_allocObject();
  v18 = sub_1BB86DC90();
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v27)
  {
    sub_1BB86F0F4();
    swift_release();
    sub_1BB86F100();
    if (v10)
    {
      swift_release();
      swift_release();
      swift_release();
      return a5;
    }
    swift_release();
    sub_1BB86F064();
    swift_release();
    swift_release();
    swift_release();
    sub_1BB86F22C();
    result = swift_release();
    if (v28 >> 60 != 15)
    {
      sub_1BB86E5B4();
      sub_1BA4A2870(&qword_1ED39A570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4370], MEMORY[0x1E0DB4380]);
      sub_1BB86DC78();
      swift_retain();
      sub_1BB86E2D8();
      swift_release();
      v25 = (void *)sub_1BB86E6F8();
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = a3;
      *(_QWORD *)(v21 + 24) = a4;
      *(_QWORD *)(v21 + 32) = a5;
      *(_QWORD *)(v21 + 40) = a6;
      *(_QWORD *)(v21 + 48) = v26;
      *(_QWORD *)(v21 + 56) = a8;
      *(_QWORD *)(v21 + 64) = a9;
      *(_QWORD *)(v21 + 72) = a10;
      v22 = a2[3];
      *(_OWORD *)(v21 + 112) = a2[2];
      *(_OWORD *)(v21 + 128) = v22;
      v23 = a2[5];
      *(_OWORD *)(v21 + 144) = a2[4];
      *(_OWORD *)(v21 + 160) = v23;
      v24 = a2[1];
      *(_OWORD *)(v21 + 80) = *a2;
      *(_OWORD *)(v21 + 96) = v24;
      *(_QWORD *)(v21 + 176) = v18;
      sub_1BA4C9ACC((uint64_t)a2);
      swift_getAssociatedTypeWitness();
      swift_retain();
      a5 = sub_1BB86E974();
      swift_release();
      swift_release();

      swift_release();
      sub_1BA69D490(v27, v28);
      swift_release();
      swift_release();
      return a5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA4ECF08(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, double a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)(v6 + 288) = v5;
  *(double *)(v6 + 280) = a5;
  *(_QWORD *)(v6 + 264) = a3;
  *(_QWORD *)(v6 + 272) = a4;
  *(_QWORD *)(v6 + 248) = a1;
  *(_QWORD *)(v6 + 256) = a2;
  v7 = *v5;
  v8 = *a3;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  *(_QWORD *)(v6 + 296) = swift_task_alloc();
  *(_QWORD *)(v6 + 304) = swift_task_alloc();
  v9 = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v6 + 312) = v9;
  v10 = sub_1BB873A2C();
  *(_QWORD *)(v6 + 320) = v10;
  *(_QWORD *)(v6 + 328) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 336) = swift_task_alloc();
  v11 = sub_1BB86C8B0();
  *(_QWORD *)(v6 + 344) = v11;
  *(_QWORD *)(v6 + 352) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 360) = swift_task_alloc();
  *(_QWORD *)(v6 + 368) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 376) = swift_task_alloc();
  *(_QWORD *)(v6 + 384) = *(_QWORD *)(v7 + 88);
  *(_QWORD *)(v6 + 392) = *(_QWORD *)(v7 + 80);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v6 + 400) = AssociatedConformanceWitness;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 + 408) = swift_task_alloc();
  v14 = type metadata accessor for FeedCursorGroup(0, v9, AssociatedConformanceWitness, v13);
  *(_QWORD *)(v6 + 416) = v14;
  *(_QWORD *)(v6 + 424) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v6 + 432) = swift_task_alloc();
  *(_QWORD *)(v6 + 440) = swift_task_alloc();
  *(_QWORD *)(v6 + 448) = swift_task_alloc();
  *(_QWORD *)(v6 + 456) = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 + 464) = AssociatedTypeWitness;
  v16 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v6 + 472) = v16;
  v18 = type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, v16, v17);
  *(_QWORD *)(v6 + 480) = v18;
  *(_QWORD *)(v6 + 488) = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v6 + 496) = swift_task_alloc();
  v20 = type metadata accessor for FeedScoredResult(0, v9, AssociatedConformanceWitness, v19);
  *(_QWORD *)(v6 + 504) = v20;
  *(_QWORD *)(v6 + 512) = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v6 + 520) = swift_task_alloc();
  *(_QWORD *)(v6 + 528) = swift_task_alloc();
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v6 + 536) = v21;
  *(_QWORD *)(v6 + 544) = *(_QWORD *)(v21 + 64);
  *(_QWORD *)(v6 + 552) = swift_task_alloc();
  *(_QWORD *)(v6 + 560) = swift_task_alloc();
  *(_QWORD *)(v6 + 568) = swift_task_alloc();
  *(_QWORD *)(v6 + 576) = swift_task_alloc();
  v23 = type metadata accessor for FeedChosenEmitterResult(0, v9, AssociatedConformanceWitness, v22);
  *(_QWORD *)(v6 + 584) = v23;
  *(_QWORD *)(v6 + 592) = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v6 + 600) = swift_task_alloc();
  return swift_task_switch();
}

void sub_1BA4ED2E4(uint64_t a1, uint64_t a2)
{
  FormatCompilerPrimitiveProperty.encode(to:)(a1, a2);
}

uint64_t sub_1BA4ED2F8@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return sub_1BA4ED30C(a1, a2);
}

uint64_t sub_1BA4ED30C@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;
  __int128 *v38;
  __int128 v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v3 = v2;
  v38 = a2;
  sub_1BAEE42FC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE4374();
  sub_1BA4A2870(&qword_1ED3D1570, (uint64_t (*)(uint64_t))sub_1BAEE4374, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v32 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v17 - 2);
      v22 = *((_QWORD *)v17 - 1);
      v37 = a1;
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      v24 = v12;
      MEMORY[0x1E0C80A78](v23);
      *(&v34 - 4) = (uint64_t)&_s10CodingKeysON_260;
      *(&v34 - 3) = sub_1BAEE43F4();
      *(&v34 - 2) = sub_1BA7B7038();
      *(&v34 - 1) = sub_1BAEE4438();
      swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71220((uint64_t)&unk_1E726CD60);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v26 = v21;
      *(_QWORD *)(v26 + 8) = v22;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      a1 = v37;
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v13);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4ED770();
  v39 = 0uLL;
  v40 = 0;
  sub_1BB8740D4();
  v37 = a1;
  v18 = v41;
  v19 = v42;
  v20 = v43;
  v39 = xmmword_1BB8A1A10;
  v40 = 0;
  sub_1BA4ED7B4();
  sub_1BB8740D4();
  v35 = v41;
  v36 = v19;
  v27 = v42;
  v41 = xmmword_1BB8D2D60;
  LOBYTE(v42) = 0;
  sub_1BA4ED72C();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v13);
  v29 = v20;
  v31 = v38;
  v30 = v39;
  *v38 = v18;
  v32 = (uint64_t)v37;
  *((_QWORD *)v31 + 2) = v36;
  *((_QWORD *)v31 + 3) = v29;
  v33 = *((_QWORD *)&v35 + 1);
  *((_QWORD *)v31 + 4) = v35;
  *((_QWORD *)v31 + 5) = v33;
  *((_QWORD *)v31 + 6) = v27;
  *((_QWORD *)v31 + 7) = v30;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

unint64_t sub_1BA4ED72C()
{
  unint64_t result;

  result = qword_1ED3B6258;
  if (!qword_1ED3B6258)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93A400, &type metadata for FormatMenuItemAction);
    atomic_store(result, (unint64_t *)&qword_1ED3B6258);
  }
  return result;
}

unint64_t sub_1BA4ED770()
{
  unint64_t result;

  result = qword_1ED3BD7E0;
  if (!qword_1ED3BD7E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuTitle, &type metadata for FormatMenuTitle);
    atomic_store(result, (unint64_t *)&qword_1ED3BD7E0);
  }
  return result;
}

unint64_t sub_1BA4ED7B4()
{
  unint64_t result;

  result = qword_1ED3BD7D8;
  if (!qword_1ED3BD7D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuImage, &type metadata for FormatMenuImage);
    atomic_store(result, (unint64_t *)&qword_1ED3BD7D8);
  }
  return result;
}

uint64_t sub_1BA4ED7F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBindExpression.init(from:)(a1, a2);
}

uint64_t FormatGroupBindExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v30 = a2;
  sub_1BAE9500C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE95084();
  sub_1BA4A2870(&qword_1ED3D11B0, (uint64_t (*)(uint64_t))sub_1BAE95084, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)v30;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v30 = v13;
      v22 = *((_QWORD *)v17 - 2);
      v23 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v24);
      *(&v29 - 4) = (uint64_t)&_s10CodingKeysON_125;
      *(&v29 - 3) = sub_1BAE95104();
      *(&v29 - 2) = sub_1BA557D3C();
      *(&v29 - 1) = sub_1BAE95148();
      swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71220((uint64_t)&unk_1E726BB68);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v26 = v22;
      *(_QWORD *)(v26 + 8) = v23;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v18 = v12;
  v19 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAE9500C);
  v21 = v20;
  v28 = sub_1BAE10070((uint64_t)v9, 1, 0, 0, (uint64_t (*)(uint64_t))sub_1BA4EDB58, (void (*)(_QWORD, double))sub_1BAE9500C, &qword_1ED3BBDF8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  *v18 = v19;
  v18[1] = v21;
  v18[2] = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA4EDB58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBE00)
  {
    sub_1BA82EE78();
    sub_1BA82EF44();
    sub_1BA82EF00();
    v0 = sub_1BB86DD14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBE00);
  }
}

uint64_t sub_1BA4EDBD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4EDC04();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4EDC04()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

void sub_1BA4EDC4C(_QWORD *a1)
{
  FormatPropertyDefinition.encode(to:)(a1);
}

uint64_t sub_1BA4EDC60(_QWORD *a1)
{
  return FormatType.encode(to:)(a1);
}

uint64_t sub_1BA4EDC74()
{
  unsigned __int8 *v0;

  return sub_1BAD850E4(*v0);
}

uint64_t sub_1BA4EDC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v42 = a4;
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v7);
  v37 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = sub_1BB873A2C();
  v10 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v12 = (char *)&v37 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v14);
  v40 = (char *)&v37 - v15;
  v17 = (int *)type metadata accessor for FeedCursorTrackerGroup(0, a2, a3, v16);
  v41 = *((_QWORD *)v17 - 1);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v37 - v18;
  v39 = *(_QWORD *)(a1 + 16);
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (!v46)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v43 = v45;
  v44 = v46;
  swift_getAssociatedConformanceWitness();
  sub_1BB872D00();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, AssociatedTypeWitness) == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v38);
    v21 = 1;
    v23 = v41;
    v22 = v42;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v23 + 56))(v22, v21, 1, v17);
  }
  v24 = v13;
  v25 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v26 = v40;
  v25(v40, v12, AssociatedTypeWitness);
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v27 = v46;
  if (!v46)
    goto LABEL_16;
  *(_QWORD *)v19 = v45;
  *((_QWORD *)v19 + 1) = v27;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(&v19[v17[9]], v26, AssociatedTypeWitness);
  sub_1BB86F064();
  v28 = v37;
  sub_1BB86F22C();
  swift_release();
  v29 = sub_1BB86C8B0();
  v30 = *(_QWORD *)(v29 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
  if ((_DWORD)result == 1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v38 = v24;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v19[v17[10]], v28, v29);
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (!v45)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1BB86F328();
  swift_release();
  v31 = v43;
  if (!v43)
    v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v19[v17[12]] = v31;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v32 = v46;
  if (v46)
  {
    v33 = &v19[v17[13]];
    *(_QWORD *)v33 = v45;
    *((_QWORD *)v33 + 1) = v32;
    sub_1BB86F064();
    sub_1BB86F22C();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, AssociatedTypeWitness);
    v34 = v46;
    if (v46 == 1)
    {
      v35 = &v19[v17[11]];
      *(_QWORD *)v35 = 0;
      *((_QWORD *)v35 + 1) = 0;
    }
    else
    {
      v36 = &v19[v17[11]];
      *(_QWORD *)v36 = v45;
      *((_QWORD *)v36 + 1) = v34;
    }
    v23 = v41;
    v22 = v42;
    (*(void (**)(uint64_t, char *, int *))(v41 + 32))(v42, v19, v17);
    v21 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v23 + 56))(v22, v21, 1, v17);
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_1BA4EE160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  _QWORD *v13;
  id v14;
  void *v15;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1BA81DAD0();
  swift_retain();
  sub_1BB86EC14();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a5;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1BA830B88;
  *(_QWORD *)(v10 + 24) = v9;
  v11 = a5;
  v12 = (void *)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();
  swift_release();

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = sub_1BA573ED8;
  v13[3] = v8;
  v13[4] = v11;
  v14 = v11;
  v15 = (void *)sub_1BB86E854();
  sub_1BB86E9EC();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t initializeWithCopy for FormatProgressViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  if ((~v6 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t initializeWithCopy for FormatWebEmbedNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    sub_1BA6F2B04(v6, v7, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    sub_1BA6F2B04(v9, v10, *(_BYTE *)(a2 + 56));
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    *(_BYTE *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  }
  *(_WORD *)(a1 + 57) = *(_WORD *)(a2 + 57);
  return a1;
}

void sub_1BA4EE424()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BA4EE46C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t destroy for FeedReadStoryCommandContext()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatBindExpression(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BA4EE55C(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  dispatch_semaphore_t v18;
  _QWORD *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v32 = a1;
  v35 = *v1;
  v3 = *(_QWORD *)(v35 + 80);
  v39 = sub_1BB873A2C();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v38 = (char *)v31 - v4;
  v5 = sub_1BB872688();
  v36 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB8726B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA657D64();
  *v11 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF738], v8);
  v12 = sub_1BB8726D0();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    v31[2] = v2;
    v13 = swift_allocBox();
    v34 = v5;
    v14 = v13;
    v16 = v15;
    v33 = *(_QWORD *)(v3 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v15, 1, 1, v3);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = 0;
    v31[1] = v17 + 16;
    v18 = dispatch_semaphore_create(0);
    sub_1BB86E71C();
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v3;
    v19[3] = *(_QWORD *)(v35 + 88);
    v19[4] = v14;
    v35 = v14;
    swift_retain();
    v20 = (void *)sub_1BB86E854();
    sub_1BB86E974();
    swift_release();
    swift_release();

    swift_retain();
    v21 = (void *)sub_1BB86E854();
    sub_1BB86E9A4();
    swift_release();
    swift_release();

    *(_QWORD *)(swift_allocObject() + 16) = v18;
    v22 = v18;
    v23 = (void *)sub_1BB86E854();
    sub_1BB86E9EC();
    swift_release();
    swift_release();
    swift_release();

    sub_1BB872670();
    sub_1BB8734E0();
    v24 = v7;
    v25 = v33;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v34);
    swift_beginAccess();
    v27 = v37;
    v26 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v38, v16, v39);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v26, 1, v3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v39);
      swift_beginAccess();
      v28 = *(void **)(v17 + 16);
      sub_1BB025BE8();
      swift_allocError();
      *(_QWORD *)v29 = v28;
      *(_QWORD *)(v29 + 8) = 0;
      *(_BYTE *)(v29 + 16) = 3;
      v30 = v28;
      swift_willThrow();
      swift_release();
      swift_release();

    }
    else
    {

      (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v32, v26, v3);
      swift_release();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BA4EE954()
{
  sub_1BA4EE9B0();
  return sub_1BB872D60();
}

unint64_t sub_1BA4EE9B0()
{
  unint64_t result;

  result = qword_1ED3B4158;
  if (!qword_1ED3B4158)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOperator, &type metadata for FormatOperator);
    atomic_store(result, (unint64_t *)&qword_1ED3B4158);
  }
  return result;
}

char *sub_1BA4EE9F4(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char *v11;
  void *v12;
  char *v13;
  id v14;
  objc_super v16;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_readingHistory] = a1;
  v5 = v2;
  v6 = a1;
  v7 = objc_msgSend(v6, sel_allLikedArticleIDs);
  v8 = sub_1BB873030();

  *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allLikedArticleIDs] = v8;
  v9 = objc_msgSend(v6, sel_allDislikedArticleIDs);
  v10 = sub_1BB873030();

  *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allDislikedArticleIDs] = v10;
  v16.receiver = v5;
  v16.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v16, sel_init);
  v12 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_readingHistory];
  v13 = v11;
  v14 = v12;
  objc_msgSend(v14, sel_addObserver_, v13);

  return v13;
}

void sub_1BA4EEB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  CFTimeInterval v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  CFTimeInterval *v18;
  void *v19;
  _QWORD v20[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  swift_retain();
  v11 = CACurrentMediaTime();
  if (qword_1ED3CF628 != -1)
    swift_once();
  v12 = (void *)qword_1ED476990;
  sub_1BA7AA598();
  v13 = swift_allocObject();
  v14 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
  v15 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 32) = a5;
  v16 = v12;
  sub_1BB87330C();
  sub_1BB86EF44("Will fetch highlights from highlight center, limit=%lu", v20[0]);

  swift_bridgeObjectRelease();
  sub_1BB86E71C();
  v17 = (void *)v20[0];
  v18 = (CFTimeInterval *)swift_allocObject();
  v18[2] = v11;
  *((_QWORD *)v18 + 3) = a3;
  *((_QWORD *)v18 + 4) = a4;
  *((_QWORD *)v18 + 5) = sub_1BA81DB34;
  *((_QWORD *)v18 + 6) = v10;
  v20[4] = sub_1BA82394C;
  v20[5] = v18;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 1107296256;
  v20[2] = sub_1BA4B9C54;
  v20[3] = &block_descriptor_108;
  v19 = _Block_copy(v20);
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_fetchHighlightsWithLimit_completionBlock_, a5, v19);

  _Block_release(v19);
}

uint64_t _s8NewsFeed24LocationDetectionManagerC08locationE22DidChangeAuthorizationyySo010CLLocationE0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1BA8265E4;
  *(_QWORD *)(v2 + 24) = v1;
  sub_1BB86E050();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1BB247DCC;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain_n();
  swift_retain();
  sub_1BB86E044();
  swift_release_n();
  swift_release();
  swift_release();
  v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_onUserInteractedWithLocationAuthorizationTCC);
  v5 = *(void (**)(uint64_t))(v0
                                      + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_onUserInteractedWithLocationAuthorizationTCC);
  if (v5)
  {
    v6 = swift_retain();
    v5(v6);
    sub_1BA49EBE0((uint64_t)v5);
    v7 = *v4;
  }
  else
  {
    v7 = 0;
  }
  *v4 = 0;
  v4[1] = 0;
  sub_1BA49EBE0(v7);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1BB248290;
  *(_QWORD *)(v9 + 24) = v8;
  swift_retain_n();
  sub_1BB86E044();
  swift_release_n();
  return swift_release();
}

uint64_t *sub_1BA4EEEC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v27;
  uint64_t *v28;
  unsigned int v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(unint64_t, unint64_t, uint64_t);
  unint64_t v38;
  unint64_t v39;
  void *v40;
  const void *v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  void (*v46)(unint64_t, unint64_t, uint64_t);
  unint64_t v47;
  unint64_t v48;
  void *v49;
  const void *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  size_t __n;
  uint64_t v65;
  size_t v66;
  unint64_t v67;
  uint64_t *v68;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_1BB86EB84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 | 7;
  v13 = (v11 | 7) + v8;
  v14 = v11 + 16;
  v15 = *(_QWORD *)(v10 + 64);
  v16 = v15 + v11;
  if (*(_DWORD *)(v10 + 84))
    v17 = *(_QWORD *)(v10 + 64);
  else
    v17 = v15 + 1;
  v18 = ((((((((v17 + 7 + ((v15 + v11 + ((v15 + v11 + ((v11 + 16) & ~v11)) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v19 = v18 + (v13 & ~(v11 | 7));
  v20 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v21 = *(_QWORD *)(v20 + 64) + v12;
  v22 = v18 + (v21 & ~v12);
  if (v22 <= v19)
    v23 = v19;
  else
    v23 = v22;
  v24 = v12 | (*(_BYTE *)(v20 + 80) | *(_BYTE *)(v7 + 80));
  if (v24 != 7
    || ((*(_DWORD *)(v20 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || (v23 | 1) > 0x18)
  {
    v27 = *a2;
    *a1 = *a2;
    v28 = (uint64_t *)(v27 + ((v24 + 16) & ~v24));
    swift_retain();
  }
  else
  {
    v65 = v9;
    v68 = a1;
    v29 = *((unsigned __int8 *)a2 + v23);
    if ((v23 & 0xFFFFFFF8) != 0 && v29 >= 2)
      v29 = *(_DWORD *)a2 + 2;
    __n = v17;
    v66 = v17 + 7;
    v67 = v23;
    v31 = ~v12;
    v32 = ~v11;
    if (v29 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *))(v20 + 16))(v68, a2);
      v33 = (_QWORD *)(((unint64_t)v68 + v21) & v31);
      v34 = (_QWORD *)(((unint64_t)a2 + v21) & v31);
      *v33 = *v34;
      v33[1] = v34[1];
      v35 = ((unint64_t)v33 + v14) & v32;
      v36 = ((unint64_t)v34 + v14) & v32;
      v37 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
      swift_bridgeObjectRetain();
      v37(v35, v36, v65);
      v38 = (v16 + v35) & v32;
      v39 = (v16 + v36) & v32;
      v37(v38, v39, v65);
      v40 = (void *)((v16 + v38) & v32);
      v41 = (const void *)((v16 + v39) & v32);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v41, 1, v65))
      {
        memcpy(v40, v41, __n);
      }
      else
      {
        v37((unint64_t)v40, (unint64_t)v41, v65);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v40, 0, 1, v65);
      }
      v51 = (_QWORD *)(((unint64_t)v40 + v66) & 0xFFFFFFFFFFFFF8);
      v52 = (_QWORD *)(((unint64_t)v41 + v66) & 0xFFFFFFFFFFFFFFF8);
      *v51 = *v52;
      v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
      v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v53 = *v54;
      v55 = (_QWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFF8);
      v56 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v55 = *v56;
      *(_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFF8);
      v28 = v68;
      *((_BYTE *)v68 + v67) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v68, a2, v6);
      v42 = (_QWORD *)(((unint64_t)v68 + v13) & v31);
      v43 = (_QWORD *)(((unint64_t)a2 + v13) & v31);
      *v42 = *v43;
      v42[1] = v43[1];
      v44 = ((unint64_t)v42 + v14) & v32;
      v45 = ((unint64_t)v43 + v14) & v32;
      v46 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
      swift_bridgeObjectRetain();
      v46(v44, v45, v65);
      v47 = (v16 + v44) & v32;
      v48 = (v16 + v45) & v32;
      v46(v47, v48, v65);
      v49 = (void *)((v16 + v47) & v32);
      v50 = (const void *)((v16 + v48) & v32);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v50, 1, v65))
      {
        memcpy(v49, v50, __n);
      }
      else
      {
        v46((unint64_t)v49, (unint64_t)v50, v65);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v49, 0, 1, v65);
      }
      v57 = (_QWORD *)(((unint64_t)v49 + v66) & 0xFFFFFFFFFFFFF8);
      v58 = (_QWORD *)(((unint64_t)v50 + v66) & 0xFFFFFFFFFFFFFFF8);
      *v57 = *v58;
      v59 = (_QWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
      v60 = (_QWORD *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v59 = *v60;
      v61 = (_QWORD *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFF8);
      v62 = (_QWORD *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v61 = *v62;
      *(_QWORD *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFF8);
      v28 = v68;
      *((_BYTE *)v68 + v67) = 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v28;
}

uint64_t initializeWithCopy for FormatContentRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1BA4EF350(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t sub_1BA4EF350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  switch(a6)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return swift_retain();
    case 7:
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_5;
    case 15:
      swift_bridgeObjectRetain();
      goto LABEL_5;
    case 16:
LABEL_5:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA4EF3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1BB8721C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

_QWORD *_s8NewsFeed16FeedJournalEntryVwCP_0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  swift_bridgeObjectRetain();
  if (v4 >= 2)
    swift_bridgeObjectRetain();
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t sub_1BA4EF480(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedHeadlineFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedIssueFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedTagFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedWebEmbedFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = result;
  type metadata accessor for FeedCustomItemFactory();
  v7 = swift_allocObject();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D3460);
  result = sub_1BB86DF48();
  if (!v15)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedPuzzleFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = result;
  v9 = v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedPuzzleTypeFactory();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FeedPuzzleStatisticFactory();
  result = sub_1BB86DF3C();
  if (result)
  {
    v11 = result;
    type metadata accessor for FeedModelFactory();
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = v9;
    v12[3] = v4;
    v12[4] = v5;
    v12[5] = v6;
    v12[6] = v13;
    sub_1BA4CECCC(&v14, (uint64_t)(v12 + 7));
    v12[12] = v8;
    v12[13] = v10;
    v12[14] = v11;
    return (uint64_t)v12;
  }
LABEL_17:
  __break(1u);
  return result;
}

void FeedLayoutResult.supplementaryAttributes(kind:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  v2 = *(_QWORD *)(v1 + 40);
  v3[2] = a1;
  swift_bridgeObjectRetain();
  sub_1BA6A9700((uint64_t (*)(char *))sub_1BA6A9724, (uint64_t)v3, v2);
}

uint64_t sub_1BA4EF748()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x6D6E6F7269766E65;
}

uint64_t sub_1BA4EF7A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[5];
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D3D58);
  result = sub_1BB86DF48();
  if (!v29)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D2EA8);
  result = sub_1BB86DF18();
  if (!v27)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaViewProvider();
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D4218);
  result = sub_1BB86DF48();
  if (!v25)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for LayeredMediaViewRenderer();
  result = sub_1BB86DF3C();
  if (result)
  {
    v6 = result;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
    v8 = MEMORY[0x1E0C80A78](v7);
    v10 = (_QWORD *)((char *)&v23[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
    v12 = *v10;
    v13 = type metadata accessor for IssueCoverViewStyler();
    v23[3] = v13;
    v23[4] = &off_1E7348D28;
    v23[0] = v12;
    v14 = type metadata accessor for IssueCoverViewRenderer();
    v15 = swift_allocObject();
    v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v13);
    v17 = MEMORY[0x1E0C80A78](v16);
    v19 = (_QWORD *)((char *)&v23[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v20 + 16))(v19, v17);
    v21 = *v19;
    *(_QWORD *)(v15 + 80) = v13;
    *(_QWORD *)(v15 + 88) = &off_1E7348D28;
    *(_OWORD *)(v15 + 16) = 0u;
    *(_OWORD *)(v15 + 32) = 0u;
    *(_QWORD *)(v15 + 48) = 0;
    *(_QWORD *)(v15 + 56) = v21;
    sub_1BA4CECCC(&v26, v15 + 96);
    *(_QWORD *)(v15 + 136) = v5;
    sub_1BA4CECCC(&v24, v15 + 144);
    *(_QWORD *)(v15 + 184) = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    a2[3] = v14;
    a2[4] = (uint64_t)&off_1E72747F0;
    *a2 = v15;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BA4EFAA0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatResize.init(from:)(a1, a2);
}

uint64_t FormatResize.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v23 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v23;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v18 = v17;
      *(_QWORD *)(v18 + 8) = v16;
      *(_QWORD *)(v18 + 16) = &unk_1E726DF88;
      *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v17, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4EFDBC();
  v24 = 0uLL;
  sub_1BB8740D4();
  type metadata accessor for FormatResizeAuto();
  v24 = xmmword_1BB87FC90;
  sub_1BA4A2870(&qword_1ED3C7620, (uint64_t (*)(uint64_t))type metadata accessor for FormatResizeAuto, (uint64_t)&protocol conformance descriptor for FormatResizeAuto);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = v25;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v20;
  *v12 = v21;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for FormatResizeAuto()
{
  return objc_opt_self();
}

unint64_t sub_1BA4EFDBC()
{
  unint64_t result;

  result = qword_1ED3C6860;
  if (!qword_1ED3C6860)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7268, &_s10CodingTypeON_39);
    atomic_store(result, (unint64_t *)&qword_1ED3C6860);
  }
  return result;
}

uint64_t sub_1BA4EFE00(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for PaidBundleConfigManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedAppConfigManager()
{
  return objc_opt_self();
}

uint64_t FormatService.prefetch(content:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for FormatContent.Resolved();
  v24 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v24 + 64);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + *(int *)(v9 + 28));
  v26 = v2;
  v27 = a1;
  v28 = a2;
  swift_bridgeObjectRetain();
  v11 = sub_1BA8A070C((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BA835C30, (uint64_t)v25, v10);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v12 = sub_1BA603FE4(a1);
    v22 = &v21;
    v23 = v12;
    v13 = *(_QWORD *)(a1 + *(int *)(v6 + 32));
    MEMORY[0x1E0C80A78](v12);
    *(&v21 - 4) = v2;
    *(&v21 - 3) = a1;
    *(&v21 - 2) = a2;
    swift_bridgeObjectRetain();
    v14 = sub_1BA8A1C24((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BA7F44AC, (uint64_t)(&v21 - 6), v13);
    v15 = swift_bridgeObjectRelease();
    v22 = &v21;
    MEMORY[0x1E0C80A78](v15);
    *(&v21 - 6) = v11;
    *(&v21 - 5) = v14;
    *(&v21 - 4) = v2;
    *(&v21 - 3) = v23;
    *(&v21 - 2) = a1;
    sub_1BA4F0100();
    sub_1BB86EC14();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8(a1, (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    v16 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v17 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v8, v17 + v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_1BA4EA1E0;
    *(_QWORD *)(v18 + 24) = v17;
    v19 = (void *)sub_1BB86E854();
    v6 = sub_1BB86E974();
    swift_release();
    swift_release();

  }
  return v6;
}

void sub_1BA4F0100()
{
  uint64_t (*v0)(void);
  unint64_t TupleTypeMetadata;
  uint64_t v2;

  if (!qword_1ED3CF7B0)
  {
    v0 = MEMORY[0x1E0DEAEC8];
    sub_1BA4B07F0(255, &qword_1ED3B9540, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA4AD288(255, &qword_1ED3CF790, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, (uint64_t (*)(_QWORD, uint64_t))v0);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1ED3CF7B0);
  }
}

uint64_t sub_1BA4F01B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMenuTitle.init(from:)(a1, a2);
}

uint64_t FormatMenuTitle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v28 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v21 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v21;
      *(_QWORD *)(v22 + 8) = v16;
      *(_QWORD *)(v22 + 16) = &unk_1E7269A38;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v21, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4F050C();
  v25 = 0uLL;
  sub_1BB8740D4();
  if ((v24 & 1) != 0)
  {
    v25 = xmmword_1BB87FC90;
    sub_1BA650B5C();
    sub_1BB8740D4();
    v17 = v28;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = 0;
    *(_QWORD *)&v19 = v24;
    v20 = 4;
  }
  else
  {
    sub_1BA541AA4(0);
    v24 = xmmword_1BB87FC90;
    sub_1BA4A2870(&qword_1ED3B50F8, (uint64_t (*)(uint64_t))sub_1BA541AA4, (uint64_t)&protocol conformance descriptor for FormatSwitchValue<A>);
    sub_1BB8740D4();
    v17 = v28;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v19 = v25;
    v18 = v26;
    v20 = v27;
  }
  *(_OWORD *)v17 = v19;
  *(_QWORD *)(v17 + 16) = v18;
  *(_QWORD *)(v17 + 24) = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4F050C()
{
  unint64_t result;

  result = qword_1ED3C6F28;
  if (!qword_1ED3C6F28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE8F0, &_s10CodingTypeON_138);
    atomic_store(result, (unint64_t *)&qword_1ED3C6F28);
  }
  return result;
}

uint64_t sub_1BA4F0550@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMenuImage.init(from:)(a1, a2);
}

uint64_t FormatMenuImage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v20 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v20;
      *(_QWORD *)(v21 + 8) = v16;
      *(_QWORD *)(v21 + 16) = &unk_1E726CD10;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v20, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4F08A0();
  v24 = 0uLL;
  sub_1BB8740D4();
  if ((v23 & 1) != 0)
  {
    v24 = xmmword_1BB87FC90;
    sub_1BA574BC0();
    sub_1BB8740D4();
    v17 = v26;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    *(_QWORD *)&v18 = v23;
    v19 = 0x2000000000000000;
  }
  else
  {
    sub_1BA542120(0);
    v23 = xmmword_1BB87FC90;
    sub_1BA4A2870(&qword_1ED3B5510, (uint64_t (*)(uint64_t))sub_1BA542120, (uint64_t)&protocol conformance descriptor for FormatCommandValue<A, B>);
    sub_1BB8740D4();
    v17 = v26;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = v24;
    v19 = v25;
  }
  *(_OWORD *)v17 = v18;
  *(_QWORD *)(v17 + 16) = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4F08A0()
{
  unint64_t result;

  result = qword_1ED3C6F18;
  if (!qword_1ED3C6F18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C91A8, &_s10CodingTypeON_62);
    atomic_store(result, (unint64_t *)&qword_1ED3C6F18);
  }
  return result;
}

uint64_t sub_1BA4F08E4@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatVideoPlayerContent.init(from:)(a1, a2);
}

uint64_t FormatVideoPlayerContent.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  __int128 v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  unint64_t *v34;

  v3 = v2;
  v34 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
LABEL_13:
    sub_1BA7F8B78(v10, (uint64_t)v3);
    swift_willThrow();

    v25 = (uint64_t)v10;
    return __swift_destroy_boxed_opaque_existential_1(v25);
  }
  v11 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_8;
      }
      v23 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v23;
      *(_QWORD *)(v24 + 8) = v17;
      *(_QWORD *)(v24 + 16) = &unk_1E726F3D8;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v23, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v10 = v29;
      goto LABEL_13;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BA4F0CD0();
  v31 = 0uLL;
  sub_1BB8740D4();
  if ((v30 & 1) != 0)
  {
    v30 = xmmword_1BB87FC90;
    sub_1BA4F0C8C();
    sub_1BB8740D4();
    v18 = v34;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v28 = v31;
    v19 = v32;
    v20 = v33;
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = v28;
    *(_QWORD *)(v21 + 32) = v19;
    *(_BYTE *)(v21 + 40) = v20;
    v22 = v21 | 0x8000000000000000;
  }
  else
  {
    sub_1BA4CDF6C(0, &qword_1ED3BE018, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    v30 = xmmword_1BB87FC90;
    sub_1BA831138();
    sub_1BB8740D4();
    v18 = v34;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v27 = v31;
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = v27;
  }
  *v18 = v22;
  v25 = (uint64_t)v29;
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

unint64_t sub_1BA4F0C8C()
{
  unint64_t result;

  result = qword_1ED3BFA78;
  if (!qword_1ED3BFA78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerNodeBinding, &type metadata for FormatVideoPlayerNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3BFA78);
  }
  return result;
}

unint64_t sub_1BA4F0CD0()
{
  unint64_t result;

  result = qword_1ED3CAFB8;
  if (!qword_1ED3CAFB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4018, &_s10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1ED3CAFB8);
  }
  return result;
}

void sub_1BA4F0D14(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  FormatAnimationNodeKeyPathAnimation.init(from:)(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

void FormatAnimationNodeKeyPathAnimation.init(from:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[26];

  v22[7] = a3;
  v5 = sub_1BB873A2C();
  v22[11] = *(_QWORD *)(v5 - 8);
  v22[12] = v5;
  MEMORY[0x1E0C80A78](v5);
  v22[17] = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v22[5] = (char *)v22 - v8;
  MEMORY[0x1E0C80A78](v9);
  v22[6] = (char *)v22 - v10;
  MEMORY[0x1E0C80A78](v11);
  v22[18] = (char *)v22 - v12;
  MEMORY[0x1E0C80A78](v13);
  v22[13] = (char *)v22 - v14;
  MEMORY[0x1E0C80A78](v15);
  v22[19] = (char *)v22 - v16;
  v22[14] = a1;
  v22[15] = a2;
  v18 = _s10CodingKeysOMa_203(255, a1, a2, v17);
  v19 = MEMORY[0x1BCCE5B24](&unk_1BB8CE390, v18);
  v20 = MEMORY[0x1BCCE5B24](&unk_1BB8CE340, v18);
  v21 = MEMORY[0x1BCCE5B24](&unk_1BB8CE318, v18);
  v22[20] = v18;
  v22[21] = v19;
  v22[9] = v20;
  v22[10] = v19;
  v22[22] = v20;
  v22[23] = v21;
  v22[8] = v21;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BA4F1310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v12 = sub_1BB873A2C();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v16(a6, a1, v12);
  v14 = type metadata accessor for FormatAnimationNodeKeyPathAnimation(0, a4, a5, v13);
  v16(a6 + *(int *)(v14 + 36), a2, v12);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v16)(a6 + *(int *)(v14 + 40), a3, v12);
}

uint64_t type metadata accessor for FormatAnimationNodeKeyPathAnimation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatAnimationNodeKeyPathAnimation);
}

uint64_t _s10CodingKeysOMa_203(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_203);
}

uint64_t sub_1BA4F13E8(_QWORD *a1)
{
  return FormatHBoxNode.encode(to:)(a1);
}

uint64_t sub_1BA4F1408(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  size_t v20;
  uint64_t isStackAllocationSafe;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  unsigned __int8 *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  int v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  char v73;
  uint64_t result;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  unint64_t v86;
  unsigned int v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94[7];

  v92 = a1;
  v93 = 0;
  v94[6] = *MEMORY[0x1E0C80C00];
  v81 = *v1;
  swift_beginAccess();
  v88 = v1;
  v2 = v1[7];
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v77 = sub_1BA81C4AC(0, v3, 0, MEMORY[0x1E0DEE9D8]);
  v76 = sub_1BA81C5C8(0, v3, 0, v4);
  v5 = *(_QWORD *)(v2 + 16);
  v78 = v2;
  v80 = v5;
  if (!v5)
  {
LABEL_30:
    sub_1BA823428(0);
    v45 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v46 = *(_QWORD *)(v45 + 16);
    v92 = v45;
    if (v46)
    {
      v47 = (unsigned __int8 *)(v45 + 67);
      v48 = v77;
      do
      {
        v49 = *(_QWORD *)(v47 - 35);
        v50 = *(_QWORD *)(v47 - 27);
        v51 = *(v47 - 19);
        v52 = *(_QWORD *)(v47 - 11);
        v53 = *(unsigned __int16 *)(v47 - 3) | (*(v47 - 1) << 16);
        LODWORD(v93) = *v47;
        swift_bridgeObjectRetain();
        sub_1BA771834(v52, v53);
        v55 = v48[2];
        v54 = v48[3];
        if (v55 >= v54 >> 1)
          v48 = sub_1BA81C4AC((_QWORD *)(v54 > 1), v55 + 1, 1, v48);
        v48[2] = v55 + 1;
        v56 = &v48[5 * v55];
        v56[4] = v49;
        v56[5] = v50;
        *((_BYTE *)v56 + 48) = v51;
        v56[7] = v52;
        *((_BYTE *)v56 + 66) = BYTE2(v53);
        *((_WORD *)v56 + 32) = v53;
        *((_BYTE *)v56 + 67) = (_BYTE)v93;
        v47 += 48;
        --v46;
      }
      while (v46);
    }
    else
    {
      v48 = v77;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v57 = v48[2];
    if (v57)
    {
      v58 = v88;
      swift_retain();
      swift_bridgeObjectRetain();
      v77 = v48;
      v59 = (unsigned __int8 *)v48 + 67;
      do
      {
        v62 = *(v59 - 19);
        v63 = *(_QWORD *)(v59 - 11);
        v64 = *(v59 - 1);
        v65 = *(unsigned __int16 *)(v59 - 3);
        LODWORD(v92) = *v59;
        swift_beginAccess();
        v66 = v58;
        if (v62 == 2)
          v62 = *((unsigned __int8 *)v58 + 48);
        LODWORD(v91) = v62;
        v67 = v65 | (v64 << 16);
        v68 = v58[3];
        v90 = v58[2];
        v69 = v58[4];
        v70 = v58[5];
        v89 = v69;
        swift_beginAccess();
        v71 = v66[7];
        v93 = (void *)v63;
        v72 = v67;
        if ((v67 & 0xFFFFFF) >= 0xFF0000)
        {
          v63 = v66[8];
          v72 = *((unsigned __int16 *)v66 + 36) | (*((unsigned __int8 *)v66 + 74) << 16);
          sub_1BA771834(v63, v72);
        }
        v73 = v92;
        if ((_DWORD)v92 == 3)
          v73 = *((_BYTE *)v66 + 75);
        v60 = swift_allocObject();
        v88 = v66;
        v61 = v60;
        swift_beginAccess();
        *(_QWORD *)(v61 + 16) = v90;
        *(_QWORD *)(v61 + 24) = v68;
        *(_QWORD *)(v61 + 32) = v89;
        *(_QWORD *)(v61 + 40) = v70;
        *(_BYTE *)(v61 + 48) = v91;
        swift_beginAccess();
        *(_QWORD *)(v61 + 56) = v71;
        *(_QWORD *)(v61 + 64) = v63;
        *(_BYTE *)(v61 + 74) = BYTE2(v72);
        *(_WORD *)(v61 + 72) = v72;
        *(_BYTE *)(v61 + 75) = v73;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA771834((uint64_t)v93, v67);
        swift_release();
        v59 += 40;
        v58 = (_QWORD *)v61;
        --v57;
      }
      while (v57);
      swift_bridgeObjectRelease();
    }
    else
    {
      v61 = (uint64_t)v88;
      swift_retain();
    }
    swift_bridgeObjectRelease();
    return v61;
  }
  v79 = v2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
LABEL_5:
  if (v6 >= *(_QWORD *)(v2 + 16))
    goto LABEL_50;
  v9 = v79 + 40 * v6;
  v11 = *(_QWORD *)v9;
  v10 = *(_QWORD *)(v9 + 8);
  v83 = *(unsigned __int8 *)(v9 + 16);
  v7 = *(_QWORD *)(v9 + 24);
  v8 = *(unsigned __int16 *)(v9 + 32) | (*(unsigned __int8 *)(v9 + 34) << 16);
  v84 = *(unsigned __int8 *)(v9 + 35);
  swift_bridgeObjectRetain();
  sub_1BA771834(v7, v8);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v82 = v11;
  v94[0] = v11;
  v94[1] = v10;
  swift_bridgeObjectRetain();
  v12 = sub_1BA6E583C(v94);
  swift_bridgeObjectRelease();
  v91 = *(_QWORD *)(v12 + 16);
  if (!v91)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v87 = v8;
  v85 = v7;
  v86 = v6;
  v13 = 0;
  v14 = (uint64_t *)(v12 + 64);
  v89 = v10;
  while (1)
  {
    if (v13 >= *(_QWORD *)(v12 + 16))
    {
      __break(1u);
LABEL_50:
      __break(1u);
    }
    v90 = *(v14 - 2);
    v15 = *(v14 - 1);
    v16 = *v14;
    v17 = *(_BYTE *)(v15 + 32);
    v18 = v17 & 0x3F;
    v19 = (unint64_t)((1 << v17) + 63) >> 6;
    v20 = 8 * v19;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v18 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v22 = (char *)swift_slowAlloc();
    bzero(v22, v20);
    v26 = v19;
    v24 = v93;
    v25 = sub_1BA6EB5B4((uint64_t)v22, v26, v15, v92);
    swift_bridgeObjectRelease();
    if (v24)
      goto LABEL_52;
    v93 = 0;
    MEMORY[0x1BCCE5C38](v22, -1, -1);
LABEL_18:
    v27 = sub_1BA6EB330(v25, v15);
    swift_release();
    if ((v27 & 1) != 0 && (sub_1BA6EBD20(v92, v16) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v28 = v87;
      v29 = HIWORD(v87);
      v30 = v90;
      if (v90 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v7 = v85;
        sub_1BA771834(v85, v28);
        v38 = v77;
        v40 = v77[2];
        v39 = v77[3];
        v6 = v86;
        if (v40 >= v39 >> 1)
          v38 = sub_1BA81C4AC((_QWORD *)(v39 > 1), v40 + 1, 1, v77);
        v41 = v84;
        v42 = v83;
        v43 = v82;
        v38[2] = v40 + 1;
        v77 = v38;
        v44 = &v38[5 * v40];
        v44[4] = v43;
        v44[5] = v89;
        *((_BYTE *)v44 + 48) = v42;
        v44[7] = v7;
        *((_BYTE *)v44 + 66) = v29;
        v8 = v87;
        *((_WORD *)v44 + 32) = v87;
        *((_BYTE *)v44 + 67) = v41;
      }
      else
      {
        swift_bridgeObjectRetain();
        v7 = v85;
        sub_1BA771834(v85, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = v76;
        v33 = v76[2];
        v32 = v76[3];
        v6 = v86;
        if (v33 >= v32 >> 1)
          v31 = sub_1BA81C5C8((_QWORD *)(v32 > 1), v33 + 1, 1, v76);
        v34 = v84;
        v35 = v83;
        v36 = v82;
        v31[2] = v33 + 1;
        v76 = v31;
        v37 = &v31[6 * v33];
        v37[4] = v36;
        v37[5] = v89;
        *((_BYTE *)v37 + 48) = v35;
        v37[7] = v7;
        *((_BYTE *)v37 + 66) = v29;
        v8 = v87;
        *((_WORD *)v37 + 32) = v87;
        *((_BYTE *)v37 + 67) = v34;
        v37[9] = v30;
      }
      swift_bridgeObjectRelease();
      v2 = v78;
LABEL_4:
      ++v6;
      sub_1BA771864(v7, v8);
      if (v6 == v80)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      goto LABEL_5;
    }
    ++v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 += 5;
    if (v91 == v13)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v78;
      v6 = v86;
      v7 = v85;
      v8 = v87;
      goto LABEL_4;
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v22 = (char *)&v75 - ((v20 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v22, v20);
  v23 = v19;
  v24 = v93;
  v25 = sub_1BA6EB5B4((uint64_t)v22, v23, v15, v92);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    v93 = 0;
    goto LABEL_18;
  }
  swift_willThrow();

  __break(1u);
LABEL_52:

  result = MEMORY[0x1BCCE5C38](v22, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BA4F1CEC()
{
  sub_1BA4F1D94();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4F1D38()
{
  sub_1BA4F1D94();
  return sub_1BB872D60();
}

unint64_t sub_1BA4F1D94()
{
  unint64_t result;

  result = qword_1ED3C7E58;
  if (!qword_1ED3C7E58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D22F0, &_s10CodingTypeON_188);
    atomic_store(result, (unint64_t *)&qword_1ED3C7E58);
  }
  return result;
}

uint64_t sub_1BA4F1DD8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1BA4F1E04()
{
  uint64_t v0;

  return sub_1BA679C4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32), (void (*)(uint64_t, _QWORD))sub_1BA67B180);
}

uint64_t sub_1BA4F1E28()
{
  sub_1BA4F1ED0();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4F1E74()
{
  sub_1BA4F1ED0();
  return sub_1BB872D60();
}

unint64_t sub_1BA4F1ED0()
{
  unint64_t result;

  result = qword_1ED3C9DA8;
  if (!qword_1ED3C9DA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6EF0, &_s10CodingTypeON_118);
    atomic_store(result, (unint64_t *)&qword_1ED3C9DA8);
  }
  return result;
}

void FeedGroupDecoration.decorationItem.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA4F1F4C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_0;

  v1 = sub_1BB870BB8();
  v2 = swift_projectBox();
  v3 = MEMORY[0x1E0DBA760];
  v0[3] = v1;
  v0[4] = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v0);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(boxed_opaque_existential_0, v2, v1);
}

uint64_t sub_1BA4F2014()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_0;

  v1 = type metadata accessor for FormatMicaSectionDecorationItem();
  v2 = swift_projectBox();
  v0[3] = v1;
  v0[4] = sub_1BB14B494();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v0);
  return sub_1BB076B98(v2, (uint64_t)boxed_opaque_existential_0);
}

void sub_1BA4F2060()
{
  FeedGroupDecoration.decorationItem.getter();
}

void sub_1BA4F208C(_QWORD *a1)
{
  FormatCompilerProperty.encode(to:)(a1);
}

uint64_t sub_1BA4F20A0()
{
  unsigned __int8 *v0;

  return sub_1BAD94D8C(*v0);
}

uint64_t sub_1BA4F20A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BA62E724();
  swift_allocObject();
  v2 = sub_1BB86D450();
  swift_allocObject();
  result = sub_1BB86D450();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1BA4F2140(_QWORD *a1)
{
  return FormatTextNodeFormat.Token.encode(to:)(a1);
}

uint64_t sub_1BA4F2154@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAnimationNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatAnimationNodeStyle.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v27;
  int v28;
  char v29;
  uint64_t v30;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  char v39;
  __int128 v40;
  unsigned __int8 v41;

  v3 = v2;
  v37 = a2;
  sub_1BAE8130C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE81384();
  sub_1BA4A2870(&qword_1ED3AD928, (uint64_t (*)(uint64_t))sub_1BAE81384, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = v37;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v7;
  v14 = v6;
  if ((v12 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v36 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(_QWORD *)&v31[-32] = &_s10CodingKeysON_187;
      *(_QWORD *)&v31[-24] = sub_1BAE81404();
      *(_QWORD *)&v31[-16] = sub_1BA4F25E0();
      *(_QWORD *)&v31[-8] = sub_1BAE81448();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726A660);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v40 = 0uLL;
  v41 = 0;
  sub_1BB8740D4();
  v18 = *((_QWORD *)&v38 + 1);
  v35 = v38;
  v38 = xmmword_1BB8A1A10;
  v39 = 0;
  sub_1BA5834B4();
  sub_1BB874068();
  v36 = v13;
  v24 = *((_QWORD *)&v40 + 1);
  v34 = v40;
  v25 = v41;
  sub_1BA4AD288(0, &qword_1ED3A0808, (uint64_t)&type metadata for FormatAnimationNodeAnimation, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v40 = xmmword_1BB8D2D60;
  v41 = 0;
  sub_1BA533158();
  sub_1BB874068();
  v32 = v25;
  v33 = v24;
  v27 = v38;
  v40 = xmmword_1BB8D2D70;
  v41 = 0;
  sub_1BA5331D0();
  sub_1BB874068();
  (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v9, v14);
  v28 = v38;
  v29 = BYTE4(v38);
  *(_QWORD *)v10 = v35;
  *(_QWORD *)(v10 + 8) = v18;
  v30 = v33;
  *(_QWORD *)(v10 + 16) = v34;
  *(_QWORD *)(v10 + 24) = v30;
  *(_BYTE *)(v10 + 32) = v32;
  *(_QWORD *)(v10 + 40) = v27;
  *(_BYTE *)(v10 + 52) = v29;
  *(_DWORD *)(v10 + 48) = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4F25E0()
{
  unint64_t result;

  result = qword_1ED3A73A0;
  if (!qword_1ED3A73A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE130, &_s10CodingKeysON_187);
    atomic_store(result, (unint64_t *)&qword_1ED3A73A0);
  }
  return result;
}

uint64_t FeedRebuildPolicy.init(appConfigManager:groupLimitKeyPath:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t result;

  ObjectType = swift_getObjectType();
  v5 = FCNewsAppConfigurationManager.accessor(for:)(a1, ObjectType);
  swift_unknownObjectRelease();
  result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t FCNewsAppConfigurationManager.accessor(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_allocObject();
  v5[2] = a2;
  v5[3] = v2;
  v5[4] = a1;
  sub_1BA4F26FC();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1BB86EC44();
}

void sub_1BA4F26FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A25B0)
  {
    v0 = sub_1BB86EC2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A25B0);
  }
}

uint64_t LocationDetectionManager.addObserver(_:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observers);
  swift_beginAccess();
  v2 = *v1;
  v10 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v3 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_14;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v6 = MEMORY[0x1BCCE4630](i, v2);
    }
    else
    {
      v6 = *(_QWORD *)(v2 + 8 * i + 32);
      swift_retain();
    }
    v7 = MEMORY[0x1BCCE5D40](v6 + 16);
    swift_unknownObjectRelease();
    if (v7)
    {
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v8 = v10;
LABEL_15:
  *v1 = v8;
  swift_bridgeObjectRelease();
  type metadata accessor for LocationDetectionManagerObserverProxy();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v9 = swift_beginAccess();
  MEMORY[0x1BCCE36AC](v9);
  if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  sub_1BB872DCC();
  return swift_endAccess();
}

uint64_t type metadata accessor for LocationDetectionManagerObserverProxy()
{
  return objc_opt_self();
}

uint64_t sub_1BA4F29D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v29)(uint64_t, uint64_t, unint64_t);
  char *v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t *v54;
  char *v55;

  v54 = a1;
  sub_1BA5AA370(0, &qword_1ED3A3C78, &qword_1ED3A3C70, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4);
  MEMORY[0x1E0C80A78](v1);
  v53 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v52 = (char *)&v44 - v4;
  sub_1BA5AA528(0, (unint64_t *)&qword_1ED39A6C0, (uint64_t)&qword_1ED39A6B8, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_1BA5AA450);
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v49 = (char *)&v44 - v8;
  sub_1BA5AA370(0, &qword_1ED39A6B0, &qword_1ED39A6A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], sub_1BAA0A328);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v44 - v13;
  sub_1BA5AA528(0, (unint64_t *)&qword_1ED39A6D0, (uint64_t)&qword_1ED39A6C8, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_1BA5AA31C);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v44 - v19;
  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88];
  sub_1BA5AA31C(0, &qword_1ED39A6C8, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2C88]);
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v45 = v20;
  v24(v20, 1, 1, v22);
  v55 = v17;
  v24(v17, 1, 1, v23);
  sub_1BA5AA31C(0, &qword_1ED39A708, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA31C(0, &qword_1ED39A670, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v51 = sub_1BB86F058();
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BA5AA2AC(0, &qword_1ED39A6A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], sub_1BAA0A328, v21);
  v27 = v26;
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v28(v14, 1, 1, v26);
  v28(v11, 1, 1, v27);
  sub_1BA5AA2AC(0, &qword_1ED39A700, v25, sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  v29 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980];
  sub_1BA5AA2AC(0, &qword_1ED39A668, v25, sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v48 = sub_1BB86F058();
  v30 = v45;
  v46 = v24;
  v24(v45, 1, 1, v23);
  v24(v55, 1, 1, v23);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v47 = sub_1BB86F058();
  v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88];
  sub_1BA5AA450(0, (unint64_t *)&qword_1ED39A6B8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2C88]);
  v33 = v32;
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v34(v49, 1, 1, v32);
  v34(v50, 1, 1, v33);
  sub_1BA5AA450(0, (unint64_t *)&qword_1ED39A710, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA450(0, (unint64_t *)&qword_1ED39A678, v29);
  swift_allocObject();
  v50 = (char *)sub_1BB86F058();
  sub_1BA5AA2AC(0, &qword_1ED3A3C70, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, v31);
  v36 = v35;
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v37(v52, 1, 1, v35);
  v37(v53, 1, 1, v36);
  sub_1BA5AA2AC(0, &qword_1ED3A3CD0, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA2AC(0, &qword_1ED3A3BF8, (uint64_t (*)(uint64_t))sub_1BA5AA5E8, sub_1BA5AA6A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v38 = sub_1BB86F058();
  v39 = v46;
  v46(v30, 1, 1, v23);
  v39(v55, 1, 1, v23);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  result = sub_1BB86F058();
  v41 = v54;
  v42 = v48;
  *v54 = v51;
  v41[1] = v42;
  v43 = v50;
  v41[2] = v47;
  v41[3] = (uint64_t)v43;
  v41[4] = v38;
  v41[5] = result;
  return result;
}

uint64_t sub_1BA4F30F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatTagNavigate.init(from:)(a1, a2);
}

uint64_t FormatTagNavigate.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (**v8)(char *, _QWORD);
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(char *, _QWORD);
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  void (**v36)(char *, _QWORD);
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v34 = a2;
  sub_1BAEFBAC0(0, &qword_1ED3C4690, (void (*)(void))sub_1BA82CA18, (void (*)(void))sub_1BA82CA5C);
  v4 = v3;
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v31 - v5;
  sub_1BAEC3EAC();
  v35 = v7;
  v8 = *(void (***)(char *, _QWORD))(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC3F24();
  sub_1BA4A2870(&qword_1ED3D0CE0, (uint64_t (*)(uint64_t))sub_1BAEC3F24, (uint64_t)&unk_1BB8FFC6C);
  v11 = v36;
  sub_1BB87468C();
  if (v11)
  {
    v12 = v11;
LABEL_3:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v32 = v6;
  v36 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v35;
  if ((v14 & 1) != 0)
  {
    v31 = a1;
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_9;
      }
      v21 = v15;
      v22 = *((_QWORD *)v18 - 2);
      v23 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      v25 = v10;
      MEMORY[0x1E0C80A78](v24);
      *(&v31 - 4) = &_s10CodingKeysON_24;
      *(&v31 - 3) = (_QWORD *)sub_1BAEC3FA4();
      *(&v31 - 2) = (_QWORD *)sub_1BA544AFC();
      *(&v31 - 1) = (_QWORD *)sub_1BAEC3FE8();
      swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71130((uint64_t)&unk_1E726F040);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v27 = v22;
      *(_QWORD *)(v27 + 8) = v23;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      v36[1](v25, v21);
      a1 = v31;
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    a1 = v31;
  }
  v40 = 0;
  v41 = 0;
  v42 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    sub_1BAE7ED88();
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v19 = v32;
    sub_1BB8740D4();
    v20 = v34;
    v28 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v4);
    v29 = v36;
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9D8];
    v29 = v36;
    v20 = v34;
  }
  v29[1](v10, v15);
  *v20 = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA4F34DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void (**v9)(_BYTE *, _QWORD);
  uint64_t v10;
  _BYTE *v11;
  uint64_t KeyPath;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  _BYTE v51[4];
  int v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  int v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  _BYTE *v71;
  _QWORD *v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (**v78)(_BYTE *, _QWORD);
  __int128 v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 v95;
  uint64_t v96;

  sub_1BA6927D0();
  v75 = v2;
  v73 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v74 = &v51[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v76 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v51[-v6];
  sub_1BAEE8A4C();
  v77 = v8;
  v9 = *(void (***)(_BYTE *, _QWORD))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v51[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAECD9D4();
  sub_1BA4A2870(&qword_1ED3D0FF0, (uint64_t (*)(uint64_t))sub_1BAECD9D4, (uint64_t)&unk_1BB8FFC6C);
  v13 = v78;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v71 = v7;
  v70 = v5;
  v78 = v9;
  v15 = a1[3];
  v72 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v16 = sub_1BB872874();
  LOBYTE(v15) = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v17 = v77;
  v18 = v76;
  if ((v15 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v21 - 2);
      v25 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      sub_1BAECDA54();
      sub_1BA82AB78();
      sub_1BAECDA98();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7252488);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v29 = v26;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v25, 1);
      v78[1](v11, v17);
      a1 = v72;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEE8A4C);
  v24 = v23;
  v90 = xmmword_1BB8A1A10;
  LOBYTE(v91) = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v30 = v84;
  v90 = xmmword_1BB8D2D60;
  LOBYTE(v91) = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v32 = v84;
  v69 = xmmword_1BB8D2D70;
  v90 = xmmword_1BB8D2D70;
  LOBYTE(v91) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v68 = v32;
    v84 = v69;
    LOBYTE(v85) = 0;
    sub_1BAEB7D04();
    v33 = (uint64_t)v71;
    sub_1BB8740D4();
    *(_QWORD *)&v69 = v22;
    v34 = sub_1BB86DD08();
    v35 = v18;
    v36 = v34;
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v33, v35);
    v32 = v68;
  }
  else
  {
    *(_QWORD *)&v69 = v22;
    v36 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for FormatVideoPlayerNodeStyle();
  v90 = xmmword_1BB8D2D90;
  LOBYTE(v91) = 0;
  sub_1BA4A2870(&qword_1ED3CBAB8, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeStyle, (uint64_t)&protocol conformance descriptor for FormatVideoPlayerNodeStyle);
  sub_1BB874068();
  v76 = v30;
  v37 = v84;
  type metadata accessor for FormatAnimationNodeStyle();
  v90 = xmmword_1BB8D2D80;
  LOBYTE(v91) = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v68 = v32;
  v38 = v84;
  v90 = xmmword_1BB8D2DA0;
  LOBYTE(v91) = 0;
  sub_1BA8266F4();
  sub_1BB8740D4();
  v71 = (_BYTE *)v38;
  v39 = v84;
  v90 = xmmword_1BB8D2DB0;
  LOBYTE(v91) = 0;
  sub_1BA650F04();
  sub_1BB8740D4();
  v70 = v37;
  v40 = v84;
  type metadata accessor for FormatImageNodeStyle();
  v90 = xmmword_1BB8D2DD0;
  LOBYTE(v91) = 0;
  sub_1BA4A2870(&qword_1ED3C8E98, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNodeStyle, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
  sub_1BB874068();
  v67 = v84;
  v84 = xmmword_1BB8D2DE0;
  LOBYTE(v85) = 0;
  sub_1BA821624();
  sub_1BB874068();
  v66 = v24;
  v60 = v90;
  v61 = v91;
  v62 = v92;
  v63 = v93;
  v64 = v94;
  v65 = v95;
  v84 = xmmword_1BB8D2DF0;
  LOBYTE(v85) = 0;
  sub_1BA82AC48();
  v41 = v11;
  sub_1BB8740D4();
  v57 = v90;
  v58 = v91;
  v59 = v92;
  v56 = xmmword_1BB8D2E00;
  v90 = xmmword_1BB8D2E00;
  LOBYTE(v91) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v84 = v56;
    LOBYTE(v85) = 0;
    sub_1BB8740D4();
    v42 = v79;
  }
  else
  {
    v42 = 0;
  }
  v56 = xmmword_1BB8D2E10;
  v90 = xmmword_1BB8D2E10;
  LOBYTE(v91) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v84 = v56;
    LOBYTE(v85) = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v43 = v79;
  }
  else
  {
    v43 = 0x8000000000000000;
  }
  *(_QWORD *)&v56 = v43;
  v55 = xmmword_1BB8868A0;
  v90 = xmmword_1BB8868A0;
  LOBYTE(v91) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v84 = v55;
    LOBYTE(v85) = 0;
    sub_1BB8740D4();
    v44 = v79;
  }
  else
  {
    v44 = 1;
  }
  LODWORD(v55) = v44;
  v90 = xmmword_1BB8D2E20;
  LOBYTE(v91) = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  v53 = v84;
  v52 = BYTE8(v84);
  v54 = xmmword_1BB8D2DC0;
  v90 = xmmword_1BB8D2DC0;
  LOBYTE(v91) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v84 = v54;
    LOBYTE(v85) = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v45 = v75;
    v46 = v74;
    *(_QWORD *)&v54 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v73 + 8))(v46, v45);
  }
  else
  {
    *(_QWORD *)&v54 = MEMORY[0x1E0DEE9E8];
  }
  v90 = xmmword_1BB8D2E30;
  LOBYTE(v91) = 0;
  v75 = sub_1BB87402C();
  v48 = v47;
  v84 = xmmword_1BB8D2E40;
  LOBYTE(v85) = 0;
  sub_1BA7967E4();
  sub_1BB874068();
  v49 = v91;
  v50 = v90;
  v96 = v76;
  v88 = v39;
  v89 = v68;
  v87 = v40;
  v90 = v60;
  v91 = v61;
  v92 = v62;
  v93 = v63;
  v94 = v64;
  v95 = v65;
  v84 = v57;
  v85 = v58;
  v86 = v59;
  v83 = v56;
  v81 = v53;
  v82 = v52;
  v79 = v50;
  v80 = v49;
  type metadata accessor for FormatVideoPlayerNode();
  swift_allocObject();
  KeyPath = FormatVideoPlayerNode.init(identifier:size:resize:adjustments:style:animation:content:posterContent:posterStyle:overlayContent:isLive:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:allowsPrerollAds:)(v69, v66, &v96, &v89, v36, v70, (uint64_t)v71, &v88, &v87, v67, &v90, &v84, v42, &v83, v55, &v81, v54, v75, v48,
              (uint64_t *)&v79);
  v78[1](v41, v77);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  return KeyPath;
}

uint64_t sub_1BA4F49A8(uint64_t a1, int *a2)
{
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void (*v7)(uint64_t *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD);
  uint64_t v19;
  void (*v20)(uint64_t *);
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t);
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  void **v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  double v35;
  void (*v36)(uint64_t *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  char *v49;
  uint64_t v50;
  void *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  char *v67;
  uint64_t v68;
  void *v69;
  double v70;
  double v71;
  double v72;
  double v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  char *v85;
  uint64_t v86;
  void *v87;
  double v88;
  double v89;
  double v90;
  double v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t result;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  char *v104;
  uint64_t v105;
  void *v106;
  double v107;
  double v108;
  double v109;
  double v110;
  id v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t KeyPath;
  void (*v120)(uint64_t *, uint64_t);
  unint64_t v121;
  id v122;
  void (*v123)(char *, _QWORD, uint64_t);
  void (*v124)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int *v129;
  void (*v130)(uint64_t *);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unsigned int v135;
  void (*v136)(uint64_t, _QWORD, uint64_t);
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;

  v129 = a2;
  v133 = a1;
  v116 = sub_1BB86DA38();
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v118 = (char *)&v113 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_1BB86D93C();
  KeyPath = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v117 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (void (*)(uint64_t *))((char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for HeadlineViewLayout.Context(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v114 = (uint64_t)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39DE08, (uint64_t (*)(void))sub_1BA4F59E0, (uint64_t)&type metadata for A6_V4.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v113 - v14);
  v139 = a1;
  v16 = sub_1BB86D438();
  v17 = swift_allocBox();
  v18 = *(void (**)(_QWORD))(*(_QWORD *)(v16 - 8) + 104);
  v137 = *MEMORY[0x1E0DB5A38];
  v138 = v16;
  v136 = (void (*)(uint64_t, _QWORD, uint64_t))v18;
  v18(v19);
  *v15 = v17;
  v20 = *(void (**)(uint64_t *))(v13 + 104);
  v135 = *MEMORY[0x1E0DB6318];
  v20(v15);
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA4F5964(0, &qword_1ED39DDB8, MEMORY[0x1E0DB5A10]);
  v23 = v22;
  v131 = sub_1BA4F5924(&qword_1ED39DDB0, &qword_1ED39DDB8, v21, MEMORY[0x1E0DB5A18]);
  v132 = v23;
  sub_1BB86D4EC();
  v120 = *(void (**)(uint64_t *, uint64_t))(v13 + 8);
  v120(v15, v12);
  v139 = v133;
  swift_getKeyPath();
  ((void (*)(uint64_t *, _QWORD, uint64_t))v20)(v15, *MEMORY[0x1E0DB6410], v12);
  v134 = *((_QWORD *)v129 + 2);
  if (v134)
  {
    v130 = v20;
    v128 = v9;
    v127 = (uint64_t)v129 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v23 = v114;
    sub_1BA4C2DD8(v127, v114, type metadata accessor for HeadlineViewLayout.Context);
    v24 = (char *)v7 + v5[5];
    v25 = *MEMORY[0x1E0DB61C8];
    v26 = sub_1BB86DA20();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(void (**)(char *, _QWORD, uint64_t))(v27 + 104);
    v125 = v25;
    v123 = v28;
    v28(v24, v25, v26);
    v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
    v126 = v26;
    v124 = v29;
    v29(v24, 0, 1, v26);
    v30 = (void **)MEMORY[0x1E0DC4918];
    *(_QWORD *)v7 = 0;
    *(_QWORD *)((char *)v7 + v5[6]) = 0;
    v31 = *v30;
    v129 = v5;
    *(_QWORD *)((char *)v7 + v5[7]) = v31;
    v32 = qword_1ED3BC390;
    v122 = v31;
    v20 = v7;
    if (v32 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_retain();
  v33 = v117;
  sub_1BB86D2B8();
  v34 = swift_release();
  v35 = MEMORY[0x1E0C80A78](v34);
  *(&v113 - 4) = v23;
  *(&v113 - 3) = (uint64_t)v20;
  v112 = (unint64_t)v33;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v115 + 104))(v118, *MEMORY[0x1E0DB6208], v116, v35);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, unint64_t))(KeyPath + 8))(v33, v121);
  sub_1BA4A2E80((uint64_t)v20, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80(v23, type metadata accessor for HeadlineViewLayout.Context);
  v121 = sub_1BA595D14();
  v112 = v121;
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  v36 = v120;
  v120(v15, v12);
  v37 = v133;
  v139 = v133;
  v38 = v138;
  v39 = swift_allocBox();
  v136(v40, v137, v38);
  *v15 = v39;
  v41 = v130;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v130)(v15, v135, v12);
  sub_1BB86D4EC();
  v36(v15, v12);
  if (v134 >= 2)
  {
    v139 = v37;
    KeyPath = swift_getKeyPath();
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = 0x4060200000000000;
    *v15 = v42;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v41)(v15, *MEMORY[0x1E0DB6330], v12);
    sub_1BA4F58B0();
    sub_1BA4CDF6C(0, &qword_1ED39DDC8, (uint64_t (*)(void))sub_1BA4F59E0, (uint64_t)&type metadata for A6_V4.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v44 = *(_QWORD *)(v43 - 8);
    v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v46 + v45) = 0x4058C00000000000;
    (*(void (**)(void))(v44 + 104))();
    v47 = v127 + *(_QWORD *)(v128 + 72);
    v48 = v129;
    v49 = (char *)v20 + v129[5];
    v50 = v126;
    v123(v49, v125, v126);
    v124(v49, 0, 1, v50);
    *(_QWORD *)v20 = 0;
    *(_QWORD *)((char *)v20 + v48[6]) = 0;
    v51 = v122;
    *(_QWORD *)((char *)v20 + v48[7]) = v122;
    v52 = *MEMORY[0x1E0DC49E8];
    v53 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v54 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v55 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v56 = v51;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v47, (uint64_t)v20, v52, v53, v54, v55);
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for HeadlineViewLayout.Options);
    v112 = v121;
    sub_1BB86D4C8();
    v37 = v133;
    swift_release();
    v41 = v130;
    swift_bridgeObjectRelease();
    swift_release();
    v36(v15, v12);
  }
  v139 = v37;
  v57 = v138;
  v58 = swift_allocBox();
  v136(v59, v137, v57);
  *v15 = v58;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v41)(v15, v135, v12);
  sub_1BB86D4EC();
  v36(v15, v12);
  if (v134 >= 3)
  {
    v139 = v37;
    KeyPath = swift_getKeyPath();
    v60 = swift_allocObject();
    *(_QWORD *)(v60 + 16) = 0x4060200000000000;
    *v15 = v60;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v41)(v15, *MEMORY[0x1E0DB6330], v12);
    sub_1BA4F58B0();
    sub_1BA4CDF6C(0, &qword_1ED39DDC8, (uint64_t (*)(void))sub_1BA4F59E0, (uint64_t)&type metadata for A6_V4.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v62 = *(_QWORD *)(v61 - 8);
    v63 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v64 + v63) = 0x4058C00000000000;
    (*(void (**)(void))(v62 + 104))();
    v65 = v127 + 2 * *(_QWORD *)(v128 + 72);
    v66 = v129;
    v67 = (char *)v20 + v129[5];
    v68 = v126;
    v123(v67, v125, v126);
    v124(v67, 0, 1, v68);
    *(_QWORD *)v20 = 0;
    *(_QWORD *)((char *)v20 + v66[6]) = 0;
    v69 = v122;
    *(_QWORD *)((char *)v20 + v66[7]) = v122;
    v70 = *MEMORY[0x1E0DC49E8];
    v71 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v72 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v73 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v74 = v69;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v65, (uint64_t)v20, v70, v71, v72, v73);
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for HeadlineViewLayout.Options);
    v112 = v121;
    sub_1BB86D4C8();
    v37 = v133;
    swift_release();
    v41 = v130;
    swift_bridgeObjectRelease();
    swift_release();
    v36(v15, v12);
  }
  v139 = v37;
  v75 = v138;
  v76 = swift_allocBox();
  v136(v77, v137, v75);
  *v15 = v76;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v41)(v15, v135, v12);
  sub_1BB86D4EC();
  v36(v15, v12);
  if (v134 >= 4)
  {
    v139 = v37;
    KeyPath = swift_getKeyPath();
    v78 = swift_allocObject();
    *(_QWORD *)(v78 + 16) = 0x4060200000000000;
    *v15 = v78;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v41)(v15, *MEMORY[0x1E0DB6330], v12);
    sub_1BA4F58B0();
    sub_1BA4CDF6C(0, &qword_1ED39DDC8, (uint64_t (*)(void))sub_1BA4F59E0, (uint64_t)&type metadata for A6_V4.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v80 = *(_QWORD *)(v79 - 8);
    v81 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v82 + v81) = 0x4058C00000000000;
    (*(void (**)(void))(v80 + 104))();
    v83 = v127 + 3 * *(_QWORD *)(v128 + 72);
    v84 = v129;
    v85 = (char *)v20 + v129[5];
    v86 = v126;
    v123(v85, v125, v126);
    v124(v85, 0, 1, v86);
    *(_QWORD *)v20 = 0;
    *(_QWORD *)((char *)v20 + v84[6]) = 0;
    v87 = v122;
    *(_QWORD *)((char *)v20 + v84[7]) = v122;
    v88 = *MEMORY[0x1E0DC49E8];
    v89 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v90 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v91 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v92 = v87;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v83, (uint64_t)v20, v88, v89, v90, v91);
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for HeadlineViewLayout.Options);
    v112 = v121;
    sub_1BB86D4C8();
    v37 = v133;
    swift_release();
    v41 = v130;
    swift_bridgeObjectRelease();
    swift_release();
    v36(v15, v12);
  }
  v139 = v37;
  v93 = v138;
  v94 = swift_allocBox();
  v136(v95, v137, v93);
  *v15 = v94;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v41)(v15, v135, v12);
  sub_1BB86D4EC();
  result = ((uint64_t (*)(uint64_t *, uint64_t))v36)(v15, v12);
  if (v134 >= 5)
  {
    v139 = v37;
    swift_getKeyPath();
    v97 = swift_allocObject();
    *(_QWORD *)(v97 + 16) = 0x4060200000000000;
    *v15 = v97;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v41)(v15, *MEMORY[0x1E0DB6330], v12);
    sub_1BA4F58B0();
    sub_1BA4CDF6C(0, &qword_1ED39DDC8, (uint64_t (*)(void))sub_1BA4F59E0, (uint64_t)&type metadata for A6_V4.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v99 = *(_QWORD *)(v98 - 8);
    v100 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
    v101 = swift_allocObject();
    *(_OWORD *)(v101 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v101 + v100) = 0x4058C00000000000;
    (*(void (**)(void))(v99 + 104))();
    v102 = v127 + 4 * *(_QWORD *)(v128 + 72);
    v103 = v129;
    v104 = (char *)v20 + v129[5];
    v105 = v126;
    v123(v104, v125, v126);
    v124(v104, 0, 1, v105);
    *(_QWORD *)v20 = 0;
    *(_QWORD *)((char *)v20 + v103[6]) = 0;
    v106 = v122;
    *(_QWORD *)((char *)v20 + v103[7]) = v122;
    v107 = *MEMORY[0x1E0DC49E8];
    v108 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v109 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v110 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v111 = v106;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v102, (uint64_t)v20, v107, v108, v109, v110);
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for HeadlineViewLayout.Options);
    v112 = v121;
    sub_1BB86D4C8();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return ((uint64_t (*)(uint64_t *, uint64_t))v120)(v15, v12);
  }
  return result;
}

void sub_1BA4F58B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39DF68)
  {
    sub_1BA4CDF6C(255, &qword_1ED39DDC8, (uint64_t (*)(void))sub_1BA4F59E0, (uint64_t)&type metadata for A6_V4.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39DF68);
  }
}

uint64_t sub_1BA4F5924(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA4F5964(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA4F5964(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A6_V4.Layout;
    v8[1] = &type metadata for A6_V4.Layout.Attributes;
    v8[2] = sub_1BA4F59E0();
    v8[3] = sub_1BA4F5A24();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BA4F59E0()
{
  unint64_t result;

  result = qword_1ED39DF40;
  if (!qword_1ED39DF40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB910B78, &type metadata for A6_V4.Layout);
    atomic_store(result, (unint64_t *)&qword_1ED39DF40);
  }
  return result;
}

unint64_t sub_1BA4F5A24()
{
  unint64_t result;

  result = qword_1ED39DF28;
  if (!qword_1ED39DF28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB910B48, &type metadata for A6_V4.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39DF28);
  }
  return result;
}

uint64_t sub_1BA4F5A68@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA4F5A84(sub_1BA4F5ADC, a1);
}

uint64_t sub_1BA4F5A84@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = a1();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1BA4F5ABC()
{
  return sub_1BA4F5ADC();
}

uint64_t sub_1BA4F5ADC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BA4F5AFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 40))();
}

uint64_t FeedGroupEmitterType.name.getter()
{
  swift_getDynamicType();
  return sub_1BB874734();
}

uint64_t sub_1BA4F5B58@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FeedGroupFreezing.init(from:)(a1, a2);
}

uint64_t FeedGroupFreezing.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _BYTE *v9;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  char v14;
  char v15;

  v12 = a2;
  sub_1BA4CDF6C(0, &qword_1ED39DB38, (uint64_t (*)(void))sub_1BA4F5D10, (uint64_t)&type metadata for FeedGroupFreezing.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4F5D10();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v12;
    v15 = 0;
    sub_1BA4F5D98();
    sub_1BB8740D4();
    v13 = 1;
    sub_1BA4F5D54();
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = (v14 == 2) | v14 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4F5D10()
{
  unint64_t result;

  result = qword_1ED39C5B0;
  if (!qword_1ED39C5B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9116A8, &type metadata for FeedGroupFreezing.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39C5B0);
  }
  return result;
}

unint64_t sub_1BA4F5D54()
{
  unint64_t result;

  result = qword_1ED39C708;
  if (!qword_1ED39C708)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupFreezingDisallow, &type metadata for FeedGroupFreezingDisallow);
    atomic_store(result, (unint64_t *)&qword_1ED39C708);
  }
  return result;
}

unint64_t sub_1BA4F5D98()
{
  unint64_t result;

  result = qword_1ED39C5D0;
  if (!qword_1ED39C5D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB911680, &type metadata for FeedGroupFreezing.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39C5D0);
  }
  return result;
}

uint64_t sub_1BA4F5DDC(uint64_t a1)
{
  type metadata accessor for FormatServiceOptions();
  return sub_1BA4F5E38(a1);
}

uint64_t sub_1BA4F5E38(uint64_t a1)
{
  unint64_t v1;
  unint64_t *v2;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    type metadata accessor for FormatServiceError();
    sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
    swift_allocError();
    *v2 = v1;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  sub_1BA4F5FBC(0);
  swift_allocObject();
  swift_retain();
  return sub_1BB86E9E0();
}

void sub_1BA4F5FBC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B08A8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
}

uint64_t sub_1BA4F5FD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4F6004();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4F6004()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11)
    return 17;
  else
    return v0;
}

uint64_t sub_1BA4F6054@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA4F6080();
  *a1 = result;
  return result;
}

uint64_t sub_1BA4F6080()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

void FeedEditionConfig.fetchWindow(for:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  void (*v46)(char *, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  int v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  char *v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  _BYTE *v111;
  __int128 *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unsigned int v120;
  unsigned int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  int v128;
  void (*v129)(char *, _QWORD, uint64_t);
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _OWORD v135[4];
  char v136;
  __int128 v137;
  __int128 v138;
  _BYTE v139[25];
  char v140[8];
  char v141[8];
  uint64_t v142;
  char v143;
  uint64_t v144;
  char v145;

  v102 = sub_1BB86CA48();
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v100 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1BB86CA54();
  v108 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v98 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1BB86CA18();
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v97 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v6);
  v109 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v90 = (char *)&v87 - v9;
  MEMORY[0x1E0C80A78](v10);
  v89 = (char *)&v87 - v11;
  MEMORY[0x1E0C80A78](v12);
  v96 = (uint64_t)&v87 - v13;
  MEMORY[0x1E0C80A78](v14);
  v110 = (uint64_t)&v87 - v15;
  MEMORY[0x1E0C80A78](v16);
  v113 = (uint64_t)&v87 - v17;
  v18 = sub_1BB86C8B0();
  v115 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v95 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v94 = (char *)&v87 - v21;
  MEMORY[0x1E0C80A78](v22);
  v104 = (char *)&v87 - v23;
  v132 = sub_1BB86CAC0();
  v123 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v131 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1BB86CAD8();
  v122 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v105 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27.n128_f64[0] = MEMORY[0x1E0C80A78](v26);
  v130 = (char *)&v87 - v28;
  v29 = *v1;
  v118 = *(_QWORD *)(*v1 + 16);
  if (!v118)
    goto LABEL_39;
  v114 = v18;
  v117 = v29 + 32;
  v121 = *MEMORY[0x1E0CB1198];
  v120 = *MEMORY[0x1E0CB1140];
  v112 = (_OWORD *)((char *)v135 + 8);
  v111 = &v139[16];
  v103 = v139;
  v93 = *MEMORY[0x1E0CB0F90];
  v92 = *MEMORY[0x1E0CB1010];
  v91 = *MEMORY[0x1E0CB0FD8];
  swift_bridgeObjectRetain();
  v30 = 0;
  v134 = a1;
  v116 = v29;
  while (1)
  {
    if (v30 >= *(_QWORD *)(v29 + 16))
    {
      __break(1u);
      goto LABEL_47;
    }
    v31 = v117 + 72 * v30;
    v135[0] = *(_OWORD *)v31;
    v32 = *(_OWORD *)(v31 + 16);
    v33 = *(_OWORD *)(v31 + 32);
    v34 = *(_OWORD *)(v31 + 48);
    v136 = *(_BYTE *)(v31 + 64);
    v135[3] = v34;
    v135[2] = v33;
    v135[1] = v32;
    v35 = *(_QWORD *)(*(_QWORD *)&v135[0] + 16);
    if (v35)
      break;
LABEL_5:
    if (++v30 == v118)
    {
      swift_bridgeObjectRelease();
      v18 = v114;
LABEL_39:
      v75 = v115;
      v76 = v109;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v115 + 16))(v109, a1, v18, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v76, 0, 1, v18);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v76, 1, v18) == 1)
      {
        v77 = 0;
      }
      else
      {
        v78 = sub_1BB86C808();
        v79 = v18;
        v77 = (void *)v78;
        (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v79);
      }
      v80 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58AA0]), sel_initWithStartDate_timeInterval_, v77, 86400.0);

      if (v80)
        return;
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
  }
  v119 = v30;
  v36 = swift_bridgeObjectRetain() + 48;
  while (1)
  {
    v37 = *(_QWORD *)(v36 - 16);
    v127 = *(_QWORD *)v36;
    v38 = *(unsigned __int8 *)(v36 + 8);
    v125 = *(_QWORD *)(v36 + 16);
    v128 = *(unsigned __int8 *)(v36 + 24);
    v124 = *(_QWORD *)(v36 + 32);
    v126 = *(unsigned __int8 *)(v36 + 40);
    v39 = *(unsigned __int8 *)(v36 - 8);
    v40 = v130;
    sub_1BB86CA90();
    v41 = v123;
    v42 = v131;
    v43 = v132;
    v129 = *(void (**)(char *, _QWORD, uint64_t))(v123 + 104);
    v129(v131, v121, v132);
    v44 = sub_1BB86CACC();
    v45 = *(void (**)(char *, uint64_t))(v41 + 8);
    v45(v42, v43);
    v46 = *(void (**)(char *, uint64_t))(v122 + 8);
    v46(v40, v133);
    if (v39 == 1)
    {
      if (v44 < 1)
        goto LABEL_10;
    }
    else if (v44 < v37)
    {
      goto LABEL_10;
    }
    if (v38)
    {
      if (v44 > 7)
        goto LABEL_10;
    }
    else if (v127 < v44)
    {
      goto LABEL_10;
    }
    v47 = v130;
    sub_1BB86CA90();
    v48 = v131;
    v49 = v132;
    v129(v131, v120, v132);
    v50 = sub_1BB86CACC();
    v45(v48, v49);
    v46(v47, v133);
    if (v128)
    {
      if (v50 < 0)
        goto LABEL_10;
    }
    else if (v50 < v125)
    {
      goto LABEL_10;
    }
    if (!v126)
    {
      if (v124 >= v50)
        break;
      goto LABEL_10;
    }
    if (v50 <= 23)
      break;
LABEL_10:
    v36 += 64;
    --v35;
    a1 = v134;
    if (!v35)
    {
      sub_1BA4F6CCC((uint64_t)v135);
LABEL_4:
      v29 = v116;
      v30 = v119;
      goto LABEL_5;
    }
  }
  v51 = v112[1];
  v137 = *v112;
  v138 = v51;
  *(_OWORD *)v139 = v112[2];
  *(_OWORD *)&v139[9] = *(__int128 *)((char *)v112 + 41);
  sub_1BA4F6CF4((uint64_t)v111, (uint64_t)v141);
  sub_1BA4F6CF4((uint64_t)v141, (uint64_t)&v142);
  if ((v143 & 1) != 0)
  {
    v52 = v110;
    v53 = v134;
    sub_1BB84E928((uint64_t)v135, v134, v110);
    sub_1BA4F6CF4((uint64_t)v103, (uint64_t)v140);
    sub_1BA4F6CF4((uint64_t)v140, (uint64_t)&v144);
    if ((v145 & 1) != 0)
    {
      v54 = v113;
      sub_1BA50236C(v52, v113);
      goto LABEL_29;
    }
    sub_1BB86CA90();
    v60 = v52;
    v61 = v96;
    sub_1BA76D70C(v60, v96);
    v59 = v115;
    v62 = v95;
    v63 = v114;
    (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v95, v53, v114);
    v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v61, 1, v63);
    v65 = v94;
    v88 = v46;
    if (v64 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v94, v62, v63);
      sub_1BA76D750(v61);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v62, v63);
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v65, v61, v63);
    }
    v66 = v97;
    (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v97, v93, v107);
    v67 = v98;
    v68 = v99;
    (*(void (**)(char *, _QWORD, uint64_t))(v108 + 104))(v98, v92, v99);
    v69 = v101;
    v70 = v100;
    v71 = v102;
    (*(void (**)(char *, _QWORD, uint64_t))(v101 + 104))(v100, v91, v102);
    v54 = v113;
    v72 = v65;
    v73 = v105;
    sub_1BB86CA6C();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v67, v68);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v66, v107);
    v58 = v114;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v72, v114);
    v88(v73, v133);
    sub_1BA76D750(v110);
  }
  else
  {
    v55 = v130;
    sub_1BB86CA90();
    v56 = v131;
    v57 = v132;
    v129(v131, v120, v132);
    v54 = v113;
    sub_1BB86CA84();
    v45(v56, v57);
    v46(v55, v133);
LABEL_29:
    v58 = v114;
    v59 = v115;
  }
  sub_1BA4F6CCC((uint64_t)v135);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v54, 1, v58) == 1)
  {
    sub_1BA76D750(v54);
    a1 = v134;
    goto LABEL_4;
  }
  v74 = v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v104, v54, v58);
  a1 = v134;
  if ((sub_1BB86C820() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v74, v58);
    goto LABEL_4;
  }
  sub_1BA49C408();
  v81 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v82 = a1;
  v83 = (uint64_t)v89;
  v81(v89, v82, v114);
  v84 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56);
  v84(v83, 0, 1, v114);
  v85 = (uint64_t)v90;
  v81(v90, (uint64_t)v74, v114);
  v86 = v114;
  v84(v85, 0, 1, v114);
  if (sub_1BA4B8D08(v83, v85))
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v74, v86);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_48:
  __break(1u);
}

uint64_t sub_1BA4F6CCC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA4F6CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1ED3B9740, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA4F6D50(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 12)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB8D6100;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BA4F7000()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA4F702C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  v4 = sub_1BB870E88();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BA4F7074()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FeedScaling.scale(value:scaleValue:)()
{
  return sub_1BB86D930();
}

uint64_t sub_1BA4F70F8()
{
  sub_1BA4F71A0();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4F7144()
{
  sub_1BA4F71A0();
  return sub_1BB872D60();
}

unint64_t sub_1BA4F71A0()
{
  unint64_t result;

  result = qword_1ED3B7B80;
  if (!qword_1ED3B7B80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB95451C, &type metadata for FormatRepeatNodeIteration.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B7B80);
  }
  return result;
}

_QWORD *sub_1BA4F71E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *result;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7)
    v7 = *(_QWORD *)(v5 + 64);
  if (v7 <= 0x10)
    v8 = 16;
  else
    v8 = v7;
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8)
    v9 = v8;
  else
    v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  v10 = *(_DWORD *)(v5 + 80);
  if ((v10 & 0x1000F8) != 0 || v9 + 1 > 0x18)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((unsigned __int16)((v10 & 0xF8) + 23) & (unsigned __int16)~(v10 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v14 = v8 + 1;
    switch(*((_BYTE *)a2 + v9))
    {
      case 0:
        (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
        v15 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v16 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v17 = *(_QWORD *)(v16 + 24);
        if (v17 < 0xFFFFFFFF)
        {
          v28 = *(_OWORD *)(v16 + 16);
          *(_OWORD *)v15 = *(_OWORD *)v16;
          *(_OWORD *)(v15 + 16) = v28;
        }
        else
        {
          *(_QWORD *)(v15 + 24) = v17;
          (**(void (***)(void))(v17 - 8))();
        }
        *((_BYTE *)v4 + v9) = 0;
        return v4;
      case 1:
        (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
        v18 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v19 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        v20 = *(_QWORD *)(v19 + 24);
        if (v20 < 0xFFFFFFFF)
        {
          v29 = *(_OWORD *)(v19 + 16);
          *(_OWORD *)v18 = *(_OWORD *)v19;
          *(_OWORD *)(v18 + 16) = v29;
        }
        else
        {
          *(_QWORD *)(v18 + 24) = v20;
          (**(void (***)(void))(v20 - 8))();
        }
        v21 = 1;
        goto LABEL_47;
      case 2:
        (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
        v21 = 2;
        goto LABEL_47;
      case 3:
        v22 = a2[1];
        *v4 = *a2;
        v4[1] = v22;
        v23 = 3;
        goto LABEL_29;
      case 4:
        v24 = a2[1];
        *v4 = *a2;
        v4[1] = v24;
        v23 = 4;
        goto LABEL_29;
      case 5:
        v25 = a2[1];
        *v4 = *a2;
        v4[1] = v25;
        v23 = 5;
LABEL_29:
        *((_BYTE *)v4 + v9) = v23;
        swift_bridgeObjectRetain();
        break;
      case 6:
        v26 = *((unsigned __int8 *)a2 + v8);
        if (v26 >= 3)
        {
          if (v8 <= 3)
            v27 = v8;
          else
            v27 = 4;
          __asm { BR              X13 }
        }
        if (v26 == 2)
        {
          v30 = a2[1];
          *v4 = *a2;
          v4[1] = v30;
          *((_BYTE *)v4 + v8) = 2;
          swift_bridgeObjectRetain();
        }
        else if (v26 == 1)
        {
          (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
          *((_BYTE *)v4 + v8) = 1;
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
          v31 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          v32 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          v33 = *(_QWORD *)(v32 + 24);
          if (v33 < 0xFFFFFFFF)
          {
            v34 = *(_OWORD *)(v32 + 16);
            *(_OWORD *)v31 = *(_OWORD *)v32;
            *(_OWORD *)(v31 + 16) = v34;
          }
          else
          {
            *(_QWORD *)(v31 + 24) = v33;
            (**(void (***)(void))(v33 - 8))();
          }
          *((_BYTE *)v4 + v8) = 0;
        }
        v35 = ((unint64_t)v4 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
        v36 = ((unint64_t)a2 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
        v37 = *(_QWORD *)(v36 + 24);
        *(_QWORD *)(v35 + 24) = v37;
        *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
        (**(void (***)(void))(v37 - 8))();
        v21 = 6;
LABEL_47:
        *((_BYTE *)v4 + v9) = v21;
        break;
      default:
        if (v9 <= 3)
          v13 = v9;
        else
          v13 = 4;
        __asm { BR              X13 }
        return result;
    }
  }
  return v4;
}

__n128 FormatPrefetchContext.init(inventory:config:tag:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  __n128 result;
  __n128 v12;
  __int128 v13;
  __int128 v14;

  v7 = *a2;
  v8 = a2[1];
  v13 = *(_OWORD *)(a2 + 24);
  v14 = *(_OWORD *)(a2 + 8);
  v12 = *(__n128 *)(a2 + 40);
  v9 = *((_QWORD *)a2 + 7);
  sub_1BA4F762C();
  swift_retain();
  v10 = sub_1BB86DD98();
  *(_QWORD *)a4 = a1;
  *(_BYTE *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 9) = v8;
  *(_OWORD *)(a4 + 16) = v14;
  *(_OWORD *)(a4 + 32) = v13;
  result = v12;
  *(__n128 *)(a4 + 48) = v12;
  *(_QWORD *)(a4 + 64) = v9;
  *(_QWORD *)(a4 + 72) = a3;
  *(_QWORD *)(a4 + 80) = v10;
  return result;
}

void sub_1BA4F762C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBE40)
  {
    type metadata accessor for FormatContextLayoutOptions();
    v0 = sub_1BB86DDA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBE40);
  }
}

uint64_t sub_1BA4F7680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1 + 8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = v5 + *(int *)(v7 + 20);
  v9 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v5 + *(int *)(v7 + 24);
  if (*(_QWORD *)(v10 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v11 = v10 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v12 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v13 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4F77A0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unsigned __int8 v6;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  result = sub_1BA7C0D48(v3, v4);
  *a2 = -(uint64_t)v6;
  return result;
}

uint64_t FeedGroupBindingOptions.init(formatFeedGroup:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  char v25;
  uint64_t result;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v4 = (int *)type metadata accessor for FormatFeedGroup();
  v5 = v4[13];
  v6 = a1 + v4[12];
  v7 = *(_QWORD *)v6;
  v8 = *(unsigned __int8 *)(v6 + 8);
  v9 = v4[15];
  v10 = a1 + v4[14];
  v11 = *(_QWORD *)v10;
  if (v8)
    v12 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v12 = v7;
  v13 = *(_BYTE *)(v10 + 8);
  if (v12 < 0)
    v14 = 0;
  else
    v14 = v11;
  if (v12 < 0)
    v15 = 0;
  else
    v15 = v7;
  if (v12 < 0)
    v16 = 1;
  else
    v16 = v8;
  v17 = v12 < v11;
  if (v12 >= v11)
  {
    v18 = 0;
  }
  else
  {
    v11 = 0;
    LOBYTE(v8) = 1;
    v18 = 1;
  }
  if (v17)
    v7 = 0;
  if ((v13 & 1) != 0)
    v19 = v14;
  else
    v19 = v11;
  if ((v13 & 1) != 0)
    v20 = 1;
  else
    v20 = v18;
  if ((v13 & 1) != 0)
    v7 = v15;
  v29 = v7;
  if ((v13 & 1) != 0)
    v21 = v16;
  else
    v21 = v8;
  v22 = *(_QWORD *)(a1 + v5);
  v23 = *(unsigned __int8 *)(a1 + v5 + 8);
  v24 = *(_QWORD *)(a1 + v9);
  v25 = *(_BYTE *)(a1 + v9 + 8);
  result = sub_1BA4F7940(a1);
  if (v23)
    v27 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v27 = v22;
  if ((v25 & 1) == 0)
  {
    if (v27 >= v24)
    {
      v28 = 0;
      goto LABEL_38;
    }
    goto LABEL_36;
  }
  if (v27 < 0)
  {
LABEL_36:
    v24 = 0;
    v22 = 0;
    v28 = 1;
    LOBYTE(v23) = 1;
    goto LABEL_38;
  }
  v28 = 1;
LABEL_38:
  *(_QWORD *)a2 = v29;
  *(_BYTE *)(a2 + 8) = v21;
  *(_QWORD *)(a2 + 16) = v19;
  *(_BYTE *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v22;
  *(_BYTE *)(a2 + 40) = v23;
  *(_QWORD *)(a2 + 48) = v24;
  *(_BYTE *)(a2 + 56) = v28;
  return result;
}

uint64_t sub_1BA4F7940(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatIssueCoverNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t *v72;
  _BYTE v73[96];
  uint64_t v74;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v65 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v66 = (char *)&v64 - v8;
  MEMORY[0x1E0C80A78](v9);
  v67 = (char *)&v64 - v10;
  MEMORY[0x1E0C80A78](v11);
  v68 = (char *)&v64 - v12;
  MEMORY[0x1E0C80A78](v13);
  v69 = (char *)&v64 - v14;
  MEMORY[0x1E0C80A78](v15);
  v70 = (char *)&v64 - v16;
  MEMORY[0x1E0C80A78](v17);
  v71 = (char *)&v64 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v64 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v64 - v23;
  sub_1BAE79F7C(0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1[3];
  v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v29);
  v30 = sub_1BAE7A06C();
  v31 = sub_1BA4A2870(&qword_1ED3AD948, (uint64_t (*)(uint64_t))sub_1BAE7A06C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v32, v29, v4, v30, (uint64_t)&type metadata for FormatVersions.StarSky, v28, (uint64_t)v27, v31, (uint64_t)&off_1E734BDC0);
  swift_beginAccess();
  v33 = v2[2];
  v34 = v2[3];
  v72 = v2;
  v35 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v35 != -1)
    swift_once();
  v36 = sub_1BB86EB84();
  v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C08);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
  v38(v24, v37, v36);
  v39 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v40 = v74;
  sub_1BAD265E8(v33, v34, 0, 0, 0, (uint64_t)v24, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE456F4, (uint64_t (*)(uint64_t))sub_1BAE79FF4, &qword_1ED3AEE00);
  if (v40)
  {
    sub_1BA4A2E80((uint64_t)v24, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v24, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v41 = v72[4];
    v42 = v72[5];
    v38(v21, v37, v36);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD115A8(v41, v42, 1, 0, 0, (uint64_t)v21, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v43 = v72;
    swift_beginAccess();
    v44 = (uint64_t)v71;
    v38(v71, v37, v36);
    swift_storeEnumTagMultiPayload();
    v45 = swift_bridgeObjectRetain();
    sub_1BAD275F8(v45, 2, 0, 0);
    sub_1BA4A2E80(v44, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v46 = (uint64_t)v70;
    v38(v70, v37, v36);
    swift_storeEnumTagMultiPayload();
    v47 = swift_bridgeObjectRetain();
    sub_1BAD408C0(v47, 3, 0, 0, v46, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v48 = (uint64_t)v69;
    v38(v69, v37, v36);
    swift_storeEnumTagMultiPayload();
    v49 = swift_bridgeObjectRetain();
    sub_1BAD40AE0(v49, 4, 0, 0, v48, (uint64_t)sub_1BA90CF04, 0);
    v74 = v39;
    sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v51 = (char *)v37;
    v52 = v43;
    v54 = v43[9];
    v53 = v43[10];
    LOBYTE(v42) = *((_BYTE *)v52 + 88);
    v55 = (uint64_t)v68;
    v70 = v51;
    v71 = (char *)v36;
    ((void (*)(char *))v38)(v68);
    swift_storeEnumTagMultiPayload();
    sub_1BA6E6C54(v54, v53, v42);
    sub_1BAD40D10(v54, v53, v42, 5, 0, 0, v55, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v55, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v54, v53, v42);
    sub_1BA6A09F0((uint64_t)(v72 + 12), (uint64_t)v73, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
    v56 = (uint64_t)v67;
    v38(v67, (uint64_t)v70, (uint64_t)v71);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v73, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD40F44((uint64_t)v73, 6, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v73, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    v57 = (uint64_t)v71;
    v58 = v70;
    v59 = *((_BYTE *)v72 + 177);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v60 = __swift_project_value_buffer(v57, (uint64_t)qword_1ED476B78);
    v61 = (uint64_t)v66;
    v38(v66, v60, v57);
    swift_storeEnumTagMultiPayload();
    sub_1BAD4122C(v59, 7, 0, 0, v61, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v61, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    v62 = (uint64_t)v65;
    v38(v65, (uint64_t)v58, v57);
    swift_storeEnumTagMultiPayload();
    v63 = swift_bridgeObjectRetain();
    sub_1BAD27728(v63, 8, 0, 0);
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
  }
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BAE79F7C);
}

uint64_t sub_1BA4F81C0(_QWORD *a1)
{
  return FormatBindExpression.encode(to:)(a1);
}

uint64_t sub_1BA4F81D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCustomFont.init(from:)(a1, a2);
}

uint64_t FormatCustomFont.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  __int16 v32;
  uint64_t *v33;
  __int128 v34;
  _QWORD *v35;
  uint64_t *v36;
  double v37;
  __int16 v38;
  __int128 v39;
  char v40;
  __int128 v41;
  char v42;

  v3 = v2;
  v36 = a2;
  sub_1BAE7884C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE788C4();
  sub_1BA4A2870(&qword_1EF2B25F0, (uint64_t (*)(uint64_t))sub_1BAE788C4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v22 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v22);
  }
  v10 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v10 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v24 = v12;
      v25 = *((_QWORD *)v17 - 2);
      v26 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      *((_QWORD *)&v34 - 4) = &_s10CodingKeysON_221;
      *((_QWORD *)&v34 - 3) = sub_1BAE78944();
      *((_QWORD *)&v34 - 2) = sub_1BA7C0B78();
      *((_QWORD *)&v34 - 1) = sub_1BAE78988();
      swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7268440);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v29 = v25;
      *(_QWORD *)(v29 + 8) = v26;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v25, v26, 1);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v13);
      a1 = v35;
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v41 = 0uLL;
  v42 = 0;
  v18 = sub_1BB874098();
  v20 = v19;
  v34 = xmmword_1BB8A1A10;
  v41 = xmmword_1BB8A1A10;
  v42 = 0;
  v21 = 16.0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v39 = v34;
    v40 = 0;
    sub_1BA689CD8();
    sub_1BB8740D4();
    v21 = v37;
  }
  v34 = xmmword_1BB8D2D60;
  v41 = xmmword_1BB8D2D60;
  v42 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v39 = v34;
    v40 = 0;
    sub_1BA610304();
    sub_1BB8740D4();
    v30 = v12;
    v31 = v37;
    v32 = v38;
  }
  else
  {
    v30 = v12;
    v31 = 0.0;
    v32 = 3072;
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v6);
  v22 = (uint64_t)v35;
  v33 = v36;
  *v36 = v18;
  v33[1] = v20;
  *((double *)v33 + 2) = v21;
  *((double *)v33 + 3) = v31;
  *((_WORD *)v33 + 16) = v32;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t sub_1BA4F85DC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t FormatVideoPlayerNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *);
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  _BYTE v77[96];
  char *v78;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v68 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v67 - v8;
  MEMORY[0x1E0C80A78](v9);
  v70 = (char *)&v67 - v10;
  MEMORY[0x1E0C80A78](v11);
  v71 = (char *)&v67 - v12;
  MEMORY[0x1E0C80A78](v13);
  v72 = (char *)&v67 - v14;
  MEMORY[0x1E0C80A78](v15);
  v73 = (char *)&v67 - v16;
  MEMORY[0x1E0C80A78](v17);
  v74 = (char *)&v67 - v18;
  MEMORY[0x1E0C80A78](v19);
  v75 = (char *)&v67 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v67 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v67 - v25;
  sub_1BAECE28C(0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a1[3];
  v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v31);
  v32 = sub_1BAECE37C();
  v33 = sub_1BA4A2870(&qword_1ED3D1270, (uint64_t (*)(uint64_t))sub_1BAECE37C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v34, v31, v4, v32, (uint64_t)&type metadata for FormatVersions.StarSkyC, v30, (uint64_t)v29, v33, (uint64_t)&off_1E734BC40);
  swift_beginAccess();
  v35 = v2[2];
  v36 = v2[3];
  v37 = v2;
  v38 = qword_1ED3C6D70;
  swift_bridgeObjectRetain();
  if (v38 != -1)
    swift_once();
  v39 = sub_1BB86EB84();
  v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1ED476C50);
  v41 = *(void (**)(char *))(*(_QWORD *)(v39 - 8) + 16);
  v76 = v40;
  v41(v26);
  v42 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v43 = v78;
  sub_1BAD265E8(v35, v36, 0, 0, 0, (uint64_t)v26, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE44014, (uint64_t (*)(uint64_t))sub_1BAECE304, &qword_1ED3AEEE0);
  if (v43)
  {
    sub_1BA4A2E80((uint64_t)v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v78 = v29;
    v44 = v37;
    v45 = v37[4];
    v46 = v44[5];
    ((void (*)(char *, uint64_t, uint64_t))v41)(v23, v76, v39);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD0F4B0(v45, v46, 1, 0, 0, (uint64_t)v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v48 = (uint64_t)v75;
    ((void (*)(char *, uint64_t, uint64_t))v41)(v75, v76, v39);
    swift_storeEnumTagMultiPayload();
    v49 = swift_bridgeObjectRetain();
    sub_1BAD26DA8(v49, 2, 0, 0);
    v50 = (char *)v42;
    sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v51 = (uint64_t)v74;
    ((void (*)(char *, uint64_t, uint64_t))v41)(v74, v76, v39);
    swift_storeEnumTagMultiPayload();
    v52 = swift_bridgeObjectRetain();
    sub_1BAD3CFFC(v52, 3, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    v53 = v44;
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v54 = v44[8];
    v55 = (uint64_t)v73;
    ((void (*)(char *, uint64_t, uint64_t))v41)(v73, v76, v39);
    swift_storeEnumTagMultiPayload();
    sub_1BA6E6C68(v54);
    sub_1BAD3D21C(v54, 4, 0, 0, v55, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v55, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v54);
    v56 = (uint64_t)v72;
    ((void (*)(char *, uint64_t, uint64_t))v41)(v72, v76, v39);
    swift_storeEnumTagMultiPayload();
    v57 = swift_bridgeObjectRetain();
    sub_1BAD3D434(v57, 5, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v59 = v53[10];
    v58 = v53[11];
    LOBYTE(v56) = *((_BYTE *)v53 + 96);
    v60 = (uint64_t)v71;
    ((void (*)(char *, uint64_t, uint64_t))v41)(v71, v76, v39);
    v75 = v50;
    swift_storeEnumTagMultiPayload();
    sub_1BA6E6C54(v59, v58, v56);
    sub_1BAD3D664(v59, v58, v56, 6, 0, 0, v60, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v59, v58, v56);
    sub_1BA6A09F0((uint64_t)(v53 + 13), (uint64_t)v77, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
    v61 = (uint64_t)v70;
    ((void (*)(char *, uint64_t, uint64_t))v41)(v70, v76, v39);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD3D898((uint64_t)v77, 7, 0, 0, v61, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v61, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    v62 = v53[24];
    v63 = (uint64_t)v69;
    ((void (*)(char *, uint64_t, uint64_t))v41)(v69, v76, v39);
    swift_storeEnumTagMultiPayload();
    sub_1BA5E7FF4(v62);
    sub_1BAD3DB80(v62, 8, 0, 0, v63, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v63, type metadata accessor for FormatVersionRequirement);
    v29 = v78;
    sub_1BA5E800C(v62);
    v64 = *((_BYTE *)v53 + 200);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v65 = __swift_project_value_buffer(v39, (uint64_t)qword_1ED476B78);
    v66 = (uint64_t)v68;
    ((void (*)(char *, uint64_t, uint64_t))v41)(v68, v65, v39);
    swift_storeEnumTagMultiPayload();
    sub_1BAD3DD98(v64, 9, 0, 0, v66, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v66, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BAECE28C);
}

NewsFeed::FormatAccessibilityTrait_optional __swiftcall FormatAccessibilityTrait.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatAccessibilityTrait_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB87450C();
  result.value = swift_bridgeObjectRelease();
  v5 = 18;
  if (v3 < 0x12)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1BA4F8FC4(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD aBlock[6];

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if ((a1 & 1) != 0)
    {
      v6 = (void *)objc_opt_self();
      v7 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1BA81ACEC;
      aBlock[5] = v7;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BA81AC98;
      aBlock[3] = &block_descriptor_93;
      v8 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v6, sel_fetchMostFrequentLocationWithCompletion_, v8);
      _Block_release(v8);
    }
    else
    {
      if (qword_1ED3C2638 != -1)
        swift_once();
      v9 = (id)qword_1ED476978;
      v10 = sub_1BB87330C();
      sub_1BB86EF44("User did not authorize using location, removing any cached location", 67, 2, &dword_1BA493000, v9, v10, MEMORY[0x1E0DEE9D8]);

      swift_retain();
      sub_1BB86E878();
      swift_release();
      v11 = (void *)aBlock[0];
      if (aBlock[0])
      {
        v12 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v13 = swift_allocObject();
        *(_QWORD *)(v13 + 16) = 0;
        *(_QWORD *)(v13 + 24) = v12;
        swift_retain();
        sub_1BB86ED4C();

        swift_release();
        swift_release();
        v5 = v11;
      }
    }

  }
}

void sub_1BA4F91C8(_QWORD *a1)
{
  FormatIssueBinding.Text.encode(to:)(a1);
}

void FormatIssueBinding.Text.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[6];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v22[1] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v22[2] = (char *)v22 - v7;
  MEMORY[0x1E0C80A78](v8);
  v22[0] = (char *)v22 - v9;
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v2;
  v18 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v20 = sub_1BA6B8518();
  v22[5] = v16;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatIssueBinding.Text, v21, v18, (uint64_t)&type metadata for FormatIssueBinding.Text, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.AzdenE, v19, (uint64_t)v16, v20, (uint64_t)&off_1E734BD20);
  __asm { BR              X9 }
}

uint64_t sub_1BA4F939C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D40 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA4F97B4(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA4F97B4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF0E9C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA4F98D8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA4F98D8()
{
  unint64_t result;

  result = qword_1ED39FD48;
  if (!qword_1ED39FD48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FD720, &_s4TextO10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1ED39FD48);
  }
  return result;
}

uint64_t sub_1BA4F991C(_QWORD *a1)
{
  return FormatCustomItemBinding.URL.encode(to:)(a1);
}

uint64_t FormatCustomItemBinding.URL.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCustomItemBinding.URL, v11, v8, (uint64_t)&type metadata for FormatCustomItemBinding.URL, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.SydroF, v9, (uint64_t)v7, v10, (uint64_t)&off_1E734BD60);
  if (qword_1ED3C6D50 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476BF0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v4, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA4F9ACC((uint64_t)v4);
  sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA4F9ACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF9480;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA4F9BE0();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA4F9BE0()
{
  unint64_t result;

  result = qword_1ED3A7190;
  if (!qword_1ED3A7190)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8978F8, &_s3URLO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A7190);
  }
  return result;
}

uint64_t sub_1BA4F9C24()
{
  return sub_1BA4F9C44();
}

uint64_t sub_1BA4F9C44()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1BA4F9C64()
{
  return sub_1BB86E2FC();
}

uint64_t sub_1BA4F9C9C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  unsigned int v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  v12 = v11 - 1;
  if (!(_DWORD)v11)
    v12 = 0;
  if (v8 <= v12)
    v13 = v12;
  else
    v13 = v8;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v15 = *(_QWORD *)(v6 + 64);
  if (!(_DWORD)v7)
    ++v15;
  if ((_DWORD)v11)
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = *(_QWORD *)(v10 + 64) + 1;
  if (!a2)
    return 0;
  v17 = v9;
  v18 = *(unsigned __int8 *)(v6 + 80);
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = v19 + 16;
  if (a2 <= v14)
    goto LABEL_36;
  v21 = v16 + ((v20 + ((((v18 + 49) & ~v18) + v15) & 0xFFFFFFFFFFFFFFF8)) & ~v19);
  v22 = 8 * v21;
  if (v21 <= 3)
  {
    v24 = ((a2 - v14 + ~(-1 << v22)) >> v22) + 1;
    if (HIWORD(v24))
    {
      v23 = *(_DWORD *)(a1 + v21);
      if (!v23)
        goto LABEL_36;
      goto LABEL_27;
    }
    if (v24 > 0xFF)
    {
      v23 = *(unsigned __int16 *)(a1 + v21);
      if (!*(_WORD *)(a1 + v21))
        goto LABEL_36;
      goto LABEL_27;
    }
    if (v24 < 2)
    {
LABEL_36:
      if ((v13 & 0x80000000) == 0)
      {
        v27 = *(_QWORD *)(a1 + 8);
        if (v27 >= 0xFFFFFFFF)
          LODWORD(v27) = -1;
        return (v27 + 1);
      }
      v28 = (((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v18 + 17) & ~v18;
      if (v8 == v14)
      {
        if (v7 >= 2)
        {
          v29 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v28, v7, v5);
          goto LABEL_46;
        }
      }
      else if (v11 >= 2)
      {
        v29 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v20 + ((v28 + v15) & 0xFFFFFFFFFFFFFFF8)) & ~v19, v11, v17);
LABEL_46:
        if (v29 >= 2)
          return v29 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v23 = *(unsigned __int8 *)(a1 + v21);
  if (!*(_BYTE *)(a1 + v21))
    goto LABEL_36;
LABEL_27:
  v25 = (v23 - 1) << v22;
  if (v21 > 3)
    v25 = 0;
  if ((_DWORD)v21)
  {
    if (v21 <= 3)
      v26 = v21;
    else
      v26 = 4;
    __asm { BR              X12 }
  }
  return v14 + v25 + 1;
}

uint64_t Array<A>.articles.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (!*v4)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

void sub_1BA4F9F98(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  unsigned int v19;
  unsigned int v20;
  int v21;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = 0u;
  v11 = *(_QWORD *)(sub_1BB86E710() - 8);
  v12 = *(_DWORD *)(v11 + 84);
  v13 = v12 - 1;
  if (!v12)
    v13 = 0;
  if (v9 <= v13)
    v14 = v13;
  else
    v14 = v9;
  if (v14 <= 0x7FFFFFFF)
    v15 = 0x7FFFFFFF;
  else
    v15 = v14;
  v16 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v16;
  v17 = *(_QWORD *)(v11 + 64);
  if (!v12)
    ++v17;
  v18 = v17
      + ((*(unsigned __int8 *)(v11 + 80)
        + 16
        + ((((*(unsigned __int8 *)(v7 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v16) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  if (a3 > v15)
  {
    if (v18 > 3)
    {
      v10 = 1u;
      if (v15 >= a2)
LABEL_32:
        __asm { BR              X0 }
LABEL_25:
      v20 = ~v15 + a2;
      if (v18 < 4)
      {
        if ((_DWORD)v18)
        {
          v21 = v20 & ~(-1 << (8 * v18));
          bzero(a1, v18);
          if ((_DWORD)v18 == 3)
          {
            *(_WORD *)a1 = v21;
            a1[2] = BYTE2(v21);
          }
          else if ((_DWORD)v18 == 2)
          {
            *(_WORD *)a1 = v21;
          }
          else
          {
            *a1 = v21;
          }
        }
      }
      else
      {
        bzero(a1, v18);
        *(_DWORD *)a1 = v20;
      }
      __asm { BR              X10 }
    }
    v19 = ((a3 - v15 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
    if (HIWORD(v19))
    {
      v10 = 4u;
      if (v15 >= a2)
        goto LABEL_32;
      goto LABEL_25;
    }
    if (v19 >= 0x100)
      v10 = 2;
    else
      v10 = v19 > 1;
  }
  if (v15 >= a2)
    goto LABEL_32;
  goto LABEL_25;
}

void sub_1BA4FA22C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_1BA4FA234()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

uint64_t sub_1BA4FA260()
{
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F088();
  swift_allocObject();
  return sub_1BB86F0D0();
}

uint64_t *LazyFeedGroupEmitterCursor.init(promise:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  v2 = sub_1BA4FA308(a1, a2);
  swift_release();
  return v2;
}

uint64_t *sub_1BA4FA308(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3 = v2;
  v6 = *v3;
  v7 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v7);
  v8 = *(_QWORD *)(v6 + 80);
  sub_1BB86EAAC();
  sub_1BB86E74C();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  swift_retain();
  sub_1BA5D1A70();
  v3[2] = sub_1BB86E734();
  return v3;
}

uint64_t sub_1BA4FA3F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA4FA420 + 4 * byte_1BB8AE404[*v0]))(1701667182, 0xE400000000000000);
}

unint64_t sub_1BA4FA420()
{
  return 0xD000000000000010;
}

uint64_t sub_1BA4FA43C()
{
  return 1702521203;
}

uint64_t sub_1BA4FA448()
{
  return 1885433183;
}

uint64_t sub_1BA4FA454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_1BB86F10C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3A4198, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF5B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1BB872628();
    v7 = sub_1BB872664();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB2A18], v0);
    v8 = sub_1BB86F298();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1BA4FA5F8((uint64_t)v6);
    swift_release();
  }
  else
  {
    sub_1BA4D787C(0, (unint64_t *)&qword_1ED3B0900, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  return v8;
}

uint64_t sub_1BA4FA5F8(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3A4198, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF5B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA4FA64C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA4FA674(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA4FA674(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t KeyPath;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _BYTE *v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  uint64_t v36;
  uint64_t v38;
  int v39;
  char v40;
  uint64_t v41;
  _BYTE v42[12];
  int v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  __int128 v52;
  char v53;
  __int128 v54;
  char v55;

  sub_1BAEFBAC0(0, &qword_1ED3C4748, (void (*)(void))sub_1BA822F58, (void (*)(void))sub_1BA822F9C);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = (_QWORD *)v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = &v42[-v3];
  sub_1BAEEA894();
  v6 = v5;
  v7 = *((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = sub_1BAEC1B74();
  sub_1BA4A2870(&qword_1ED3D1310, (uint64_t (*)(uint64_t))sub_1BAEC1B74, (uint64_t)&unk_1BB8FFC6C);
  v11 = v51;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v47 = v4;
  v48 = v7;
  v51 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v16 = v49;
  v15 = (uint64_t)v50;
  if ((v14 & 1) != 0)
  {
    v17 = (uint64_t)v51;
    v18 = sub_1BB8740EC();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = (_BYTE *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19)
          goto LABEL_7;
      }
      v25 = *((_QWORD *)v20 - 2);
      v26 = *((_QWORD *)v20 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      v28 = v17;
      *(_QWORD *)&v42[-32] = &_s10CodingKeysON_35;
      *(_QWORD *)&v42[-24] = sub_1BAEC1BF4();
      *(_QWORD *)&v42[-16] = sub_1BA4FACD8();
      *(_QWORD *)&v42[-8] = sub_1BAEC1C38();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v29 = sub_1BAE71220((uint64_t)&unk_1E7253368);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v30 = v25;
      *(_QWORD *)(v30 + 8) = v26;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v25, v26, 1);
      (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v9, v28);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v21 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEEA894);
  v23 = v22;
  v54 = xmmword_1BB8A1A10;
  v55 = 0;
  v24 = v51;
  v45 = sub_1BB874098();
  v46 = v31;
  v54 = xmmword_1BB8D2D60;
  v55 = 0;
  v43 = sub_1BB874038();
  v44 = xmmword_1BB8D2D70;
  v54 = xmmword_1BB8D2D70;
  v55 = 0;
  v32 = sub_1BB8740F8();
  if ((v32 & 1) != 0)
  {
    v52 = v44;
    v53 = 0;
    sub_1BAEEA90C();
    sub_1BB8740D4();
    v33 = v47;
    v34 = sub_1BB86DD08();
    v35 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
    v36 = v34;
    v35(v33, v15);
  }
  else
  {
    v36 = MEMORY[0x1E0DEE9D8];
  }
  v54 = xmmword_1BB8D2D90;
  v55 = 0;
  sub_1BA551094();
  sub_1BB874068();
  v50 = a1;
  v38 = v52;
  v39 = WORD4(v52) | (BYTE10(v52) << 16);
  v54 = xmmword_1BB8D2D80;
  v55 = 0;
  sub_1BA4FAC94();
  sub_1BB874068();
  (*(void (**)(_BYTE *, void *))(v48 + 8))(v9, v24);
  v40 = v52;
  type metadata accessor for FormatSupplementaryNodeStyle();
  KeyPath = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 16) = v21;
  *(_QWORD *)(KeyPath + 24) = v23;
  v41 = v46;
  *(_QWORD *)(KeyPath + 32) = v45;
  *(_QWORD *)(KeyPath + 40) = v41;
  *(_BYTE *)(KeyPath + 48) = v43;
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 56) = v36;
  *(_QWORD *)(KeyPath + 64) = v38;
  *(_BYTE *)(KeyPath + 74) = BYTE2(v39);
  *(_WORD *)(KeyPath + 72) = v39;
  *(_BYTE *)(KeyPath + 75) = v40;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  return KeyPath;
}

unint64_t sub_1BA4FAC94()
{
  unint64_t result;

  result = qword_1ED3CEEF8;
  if (!qword_1ED3CEEF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodeRubberbandTrait, &type metadata for FormatSupplementaryNodeRubberbandTrait);
    atomic_store(result, (unint64_t *)&qword_1ED3CEEF8);
  }
  return result;
}

unint64_t sub_1BA4FACD8()
{
  unint64_t result;

  result = qword_1ED3CC6C8;
  if (!qword_1ED3CC6C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5BF0, &_s10CodingKeysON_35);
    atomic_store(result, (unint64_t *)&qword_1ED3CC6C8);
  }
  return result;
}

uint64_t FormatProgressViewNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  void (*v57)(char *);
  uint64_t v58;
  uint64_t v59;
  char *v60;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v52 - v8;
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v52 - v10;
  MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v52 - v12;
  MEMORY[0x1E0C80A78](v13);
  v56 = (char *)&v52 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v52 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v52 - v19;
  sub_1BAE7A3E4(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v26 = sub_1BAE7A4D4();
  v27 = sub_1BA4A2870(&qword_1ED3ABF08, (uint64_t (*)(uint64_t))sub_1BAE7A4D4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v28, v24, v4, v26, (uint64_t)&type metadata for FormatVersions.StarSkyC, v25, (uint64_t)v23, v27, (uint64_t)&off_1E734BC40);
  swift_beginAccess();
  v29 = v2[2];
  v30 = v2[3];
  v31 = qword_1ED3C6D70;
  swift_bridgeObjectRetain();
  if (v31 != -1)
    swift_once();
  v32 = sub_1BB86EB84();
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476C50);
  v57 = *(void (**)(char *))(*(_QWORD *)(v32 - 8) + 16);
  v58 = v33;
  v57(v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v34 = v59;
  sub_1BAD265E8(v29, v30, 0, 0, 0, (uint64_t)v20, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE432BC, (uint64_t (*)(uint64_t))sub_1BAE7A45C, &qword_1ED3AEF50);
  v60 = v23;
  if (v34)
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v39 = (uint64_t)v60;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v35 = v2[4];
    v36 = v2[5];
    ((void (*)(char *, uint64_t, uint64_t))v57)(v17, v58, v32);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD0EB2C(v35, v36, 1, 0, 0, (uint64_t)v17, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v37 = (uint64_t)v56;
    ((void (*)(char *, uint64_t, uint64_t))v57)(v56, v58, v32);
    swift_storeEnumTagMultiPayload();
    v38 = swift_bridgeObjectRetain();
    sub_1BAD26B48(v38, 2, 0, 0);
    sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v41 = (uint64_t)v55;
    v42 = (void (*)(char *, uint64_t, uint64_t))v57;
    ((void (*)(char *, uint64_t, uint64_t))v57)(v55, v58, v32);
    swift_storeEnumTagMultiPayload();
    v43 = swift_bridgeObjectRetain();
    sub_1BAD3A0A4(v43, 3, 0, 0, v41, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v41, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v44 = v2[8];
    v45 = (uint64_t)v54;
    v42(v54, v58, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BA5E7FF4(v44);
    sub_1BAD3A2C4(v44, 4, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    sub_1BA5E800C(v44);
    v46 = v2[9];
    v47 = (uint64_t)v53;
    v42(v53, v58, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BA5E7FF4(v46);
    sub_1BAD3A2C4(v46, 5, 0, 0, v47, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    sub_1BA5E800C(v46);
    v48 = *((_BYTE *)v2 + 80);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v49 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476B78);
    v50 = (uint64_t)v52;
    v42(v52, v49, v32);
    swift_storeEnumTagMultiPayload();
    v51 = (uint64_t)v60;
    sub_1BAD3A4DC(v48, 6, 0, 0, v50, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    v39 = v51;
  }
  return sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))sub_1BAE7A3E4);
}

uint64_t sub_1BA4FB37C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatStateViewNodeState.init(from:)(a1, a2);
}

uint64_t FormatStateViewNodeState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  char v39;

  v34 = a2;
  v3 = sub_1BB86C8E0();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA63C758();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4FB600(0, &qword_1ED3B9BB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v35 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4FB65C();
  v36 = v13;
  v14 = v37;
  sub_1BB87468C();
  if (v14)
  {
    v29 = (uint64_t)a1;
  }
  else
  {
    v15 = a1;
    v16 = v11;
    v39 = 0;
    v17 = v35;
    v30 = sub_1BB874098();
    v37 = v18;
    v38 = 1;
    sub_1BA4FB6A0();
    v19 = v9;
    sub_1BB8740D4();
    v21 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    v22 = v31;
    sub_1BB86C8D4();
    v23 = sub_1BB86C8C8();
    v24 = v17;
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v33);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v36, v24);
    v27 = v34;
    *v34 = v23;
    v27[1] = v26;
    v28 = v37;
    v27[2] = v30;
    v27[3] = v28;
    v27[4] = v21;
    v29 = (uint64_t)v15;
  }
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

void sub_1BA4FB600(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA4FB65C();
    v7 = a3(a1, &type metadata for FormatStateViewNodeState.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA4FB65C()
{
  unint64_t result;

  result = qword_1ED3B0CF8;
  if (!qword_1ED3B0CF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB906454, &type metadata for FormatStateViewNodeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B0CF8);
  }
  return result;
}

unint64_t sub_1BA4FB6A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C3FF8;
  if (!qword_1ED3C3FF8)
  {
    sub_1BAEFBAC0(255, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C3FF8);
  }
  return result;
}

void sub_1BA4FB708(_QWORD *a1)
{
  FormatTextNodeAlternativeLogic.encode(to:)(a1);
}

void FormatTextNodeAlternativeLogic.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextNodeAlternativeLogic, v14, v11, (uint64_t)&type metadata for FormatTextNodeAlternativeLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v12, (uint64_t)v9, v13, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA4FB878()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6 != -1)
    swift_once();
  v7 = sub_1BB86EB84();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v2, v8, v7);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACE2014(0, v3, v4, v5, v2);
  sub_1BA4A2E80(v2, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA4FBBF4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE9B38;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA4FBD5C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4FBDA0();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA4FBD5C()
{
  unint64_t result;

  result = qword_1ED3A8DC0[0];
  if (!qword_1ED3A8DC0[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2110, &_s10CodingTypeON_8);
    atomic_store(result, qword_1ED3A8DC0);
  }
  return result;
}

unint64_t sub_1BA4FBDA0()
{
  unint64_t result;

  result = qword_1ED39BD00;
  if (!qword_1ED39BD00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.TextLines, &type metadata for FormatTextNodeAlternativeLogic.TextLines);
    atomic_store(result, (unint64_t *)&qword_1ED39BD00);
  }
  return result;
}

uint64_t sub_1BA4FBDE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBlockExpression.init(from:)(a1, a2);
}

uint64_t FormatBlockExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[3];
  char v28;

  v3 = v2;
  v27[0] = a2;
  sub_1BAE86AC0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE86B38();
  sub_1BA4A2870(&qword_1ED3D0F60, (uint64_t (*)(uint64_t))sub_1BAE86B38, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)v27[0];
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v17 - 2);
      v22 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      v27[0] = v13;
      MEMORY[0x1E0C80A78](v23);
      v27[-4] = &_s10CodingKeysON_168;
      v27[-3] = sub_1BAE86BB8();
      v27[-2] = sub_1BA4FC0EC();
      v27[-1] = sub_1BAE86BFC();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71130((uint64_t)&unk_1E726AC50);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v27[0] + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v27[1] = 0;
  v27[2] = 0;
  v28 = 0;
  v18 = sub_1BB874098();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v18;
  v12[1] = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4FC0EC()
{
  unint64_t result;

  result = qword_1ED3C93E8;
  if (!qword_1ED3C93E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD158, &_s10CodingKeysON_168);
    atomic_store(result, (unint64_t *)&qword_1ED3C93E8);
  }
  return result;
}

uint64_t sub_1BA4FC130@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFlexibleExpression.init(from:)(a1, a2);
}

uint64_t FormatFlexibleExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;

  v3 = v2;
  v25 = a2;
  sub_1BAE90180();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE901F8();
  sub_1BA4A2870(&qword_1EF2B2D30, (uint64_t (*)(uint64_t))sub_1BAE901F8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_BYTE *)v25;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v17 - 2);
      v19 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v13;
      MEMORY[0x1E0C80A78](v20);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_140;
      *(&v24 - 3) = sub_1BAE90278();
      *(&v24 - 2) = sub_1BA4FC44C();
      *(&v24 - 1) = sub_1BAE902BC();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71130((uint64_t)&unk_1E726B848);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4FC490();
  v26 = 0;
  v27 = 0;
  v28 = 0;
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4FC44C()
{
  unint64_t result;

  result = qword_1ED3D2C00;
  if (!qword_1ED3D2C00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB788, &_s10CodingKeysON_140);
    atomic_store(result, (unint64_t *)&qword_1ED3D2C00);
  }
  return result;
}

unint64_t sub_1BA4FC490()
{
  unint64_t result;

  result = qword_1ED3B7750;
  if (!qword_1ED3B7750)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFlexibleExpression.Direction, &type metadata for FormatFlexibleExpression.Direction);
    atomic_store(result, (unint64_t *)&qword_1ED3B7750);
  }
  return result;
}

char *sub_1BA4FC4D4(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  void *v16;
  char *v17;
  id v18;
  objc_super v20;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_readingHistory] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_bundleSubscriptionManager] = a2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_paidAccessChecker] = a3;
  v9 = v4;
  v10 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v11 = objc_msgSend(v10, sel_allLikedArticleIDs);
  v12 = sub_1BB873030();

  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_allLikedArticleIDs] = v12;
  v13 = objc_msgSend(v10, sel_allDislikedArticleIDs);
  v14 = sub_1BB873030();

  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_allDislikedArticleIDs] = v14;
  v20.receiver = v9;
  v20.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v20, sel_init);
  v16 = *(void **)&v15[OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_readingHistory];
  v17 = v15;
  v18 = v16;
  objc_msgSend(v18, sel_addObserver_, v17);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_1BA4FC65C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  size_t v22;
  uint64_t isStackAllocationSafe;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  unsigned int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t result;
  char *v79;
  uint64_t *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101[7];
  uint64_t v102;

  v99 = a1;
  v101[6] = *MEMORY[0x1E0C80C00];
  v90 = *v1;
  swift_beginAccess();
  v82 = v1;
  v2 = v1[11];
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v84 = sub_1BA7F6B74(0, v3, 0, MEMORY[0x1E0DEE9D8]);
  v83 = sub_1BA81C4C0(0, v3, 0, v4);
  v5 = *(_QWORD *)(v2 + 16);
  v85 = v2;
  v89 = v5;
  if (!v5)
  {
LABEL_32:
    sub_1BA823378(0);
    v47 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v48 = *(_QWORD *)(v47 + 16);
    v96 = v47;
    if (v48)
    {
      v49 = v47 + 40;
      v50 = v84;
      do
      {
        v51 = *(_QWORD *)v49;
        v100 = *(char **)(v49 - 8);
        v99 = *(_QWORD *)(v49 + 8);
        v98 = *(_QWORD *)(v49 + 16);
        LODWORD(v97) = *(unsigned __int8 *)(v49 + 24);
        v52 = *(_QWORD *)(v49 + 32);
        v53 = *(unsigned __int8 *)(v49 + 44);
        v54 = *(unsigned int *)(v49 + 40);
        v55 = v50[2];
        v56 = v50[3];
        v57 = v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v55 >= v56 >> 1)
          v50 = sub_1BA7F6B74((_QWORD *)(v56 > 1), v55 + 1, 1, v57);
        else
          v50 = v57;
        v50[2] = v55 + 1;
        v58 = &v50[7 * v55];
        v58[4] = v100;
        v58[5] = v51;
        v59 = v98;
        v58[6] = v99;
        v58[7] = v59;
        *((_BYTE *)v58 + 64) = v97;
        v58[9] = v52;
        *((_BYTE *)v58 + 84) = (v54 | (unint64_t)(v53 << 32)) >> 32;
        *((_DWORD *)v58 + 20) = v54;
        v49 += 64;
        --v48;
      }
      while (v48);
    }
    else
    {
      v50 = v84;
    }
    v60 = v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v61 = (char *)v60[2];
    if (v61)
    {
      v62 = (uint64_t)v82;
      swift_retain();
      swift_bridgeObjectRetain();
      v84 = v60;
      v63 = (unsigned int *)(v60 + 10);
      do
      {
        v100 = v61;
        v65 = v62;
        v66 = *((_QWORD *)v63 - 4);
        v67 = *((_QWORD *)v63 - 3);
        v68 = *((unsigned __int8 *)v63 - 16);
        v69 = *((_QWORD *)v63 - 1);
        v99 = *((unsigned __int8 *)v63 + 4);
        v98 = *v63;
        v70 = swift_allocObject();
        *(_QWORD *)(v70 + 72) = 0;
        swift_beginAccess();
        v72 = *(_QWORD *)(v65 + 16);
        v71 = *(_QWORD *)(v65 + 24);
        swift_beginAccess();
        *(_QWORD *)(v70 + 16) = v72;
        *(_QWORD *)(v70 + 24) = v71;
        v97 = v71;
        v73 = *(_QWORD *)(v65 + 40);
        *(_QWORD *)(v70 + 32) = *(_QWORD *)(v65 + 32);
        *(_QWORD *)(v70 + 40) = v73;
        if (v68 == 1)
        {
          v66 = *(_QWORD *)(v65 + 48);
          v67 = *(_QWORD *)(v65 + 56);
          v74 = v65;
          v75 = *(_BYTE *)(v65 + 64);
        }
        else
        {
          v74 = v65;
          v75 = 0;
        }
        *(_QWORD *)(v70 + 48) = v66;
        *(_QWORD *)(v70 + 56) = v67;
        v76 = v69;
        *(_BYTE *)(v70 + 64) = v75;
        if (!v69)
        {
          swift_beginAccess();
          v76 = *(_QWORD *)(v74 + 72);
          swift_bridgeObjectRetain();
        }
        v77 = v98 | (v99 << 32);
        swift_beginAccess();
        *(_QWORD *)(v70 + 72) = v76;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (BYTE4(v77) == 255)
          v77 = *(unsigned int *)(v74 + 80) | ((unint64_t)*(unsigned __int8 *)(v74 + 84) << 32);
        *(_DWORD *)(v70 + 80) = v77;
        *(_BYTE *)(v70 + 84) = BYTE4(v77);
        swift_beginAccess();
        v64 = *(_QWORD *)(v74 + 88);
        swift_bridgeObjectRetain();
        swift_release();
        swift_beginAccess();
        *(_QWORD *)(v70 + 88) = v64;
        v63 += 14;
        v62 = v70;
        v61 = v100 - 1;
      }
      while (v100 != (char *)1);
      swift_bridgeObjectRelease();
    }
    else
    {
      v70 = (uint64_t)v82;
      swift_retain();
    }
    swift_bridgeObjectRelease();
    return v70;
  }
  v100 = 0;
  v87 = v2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
LABEL_5:
  if (v6 >= *(_QWORD *)(v2 + 16))
    goto LABEL_54;
  v7 = v87 + 56 * v6;
  v9 = *(_QWORD *)v7;
  v8 = *(_QWORD *)(v7 + 8);
  v91 = *(_QWORD *)(v7 + 16);
  v92 = *(_QWORD *)(v7 + 24);
  v93 = *(unsigned __int8 *)(v7 + 32);
  v10 = *(_QWORD *)(v7 + 40);
  v11 = *(unsigned __int8 *)(v7 + 52);
  v12 = *(unsigned int *)(v7 + 48);
  v13 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  v96 = v10;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  v101[0] = v9;
  v101[1] = v8;
  swift_bridgeObjectRetain();
  v14 = sub_1BA6E583C(v101);
  swift_bridgeObjectRelease();
  v98 = *(_QWORD *)(v14 + 16);
  if (!v98)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  v86 = v9;
  v94 = v8;
  v95 = v6;
  v15 = 0;
  v88 = v12 | (v11 << 32);
  v16 = (uint64_t *)(v14 + 64);
  while (1)
  {
    if (v15 >= *(_QWORD *)(v14 + 16))
    {
      __break(1u);
LABEL_54:
      __break(1u);
    }
    v97 = *(v16 - 2);
    v18 = *(v16 - 1);
    v17 = *v16;
    v19 = *(_BYTE *)(v18 + 32);
    v20 = v19 & 0x3F;
    v21 = (unint64_t)((1 << v19) + 63) >> 6;
    v22 = 8 * v21;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v20 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v24 = (char *)swift_slowAlloc();
    bzero(v24, v22);
    v28 = v21;
    v29 = v100;
    v27 = sub_1BA6EB5B4((uint64_t)v24, v28, v18, v99);
    swift_bridgeObjectRelease();
    v80 = &v102;
    v100 = v29;
    if (v29)
      goto LABEL_55;
    MEMORY[0x1BCCE5C38](v24, -1, -1);
LABEL_18:
    v30 = sub_1BA6EB330(v27, v18);
    swift_release();
    if ((v30 & 1) != 0 && (sub_1BA6EBD20(v99, v17) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v31 = HIDWORD(v88);
      v32 = v97;
      if (v97 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = v84[2];
        v42 = v84[3];
        v43 = v94;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v2 = v85;
        v6 = v95;
        if (v41 >= v42 >> 1)
          v44 = sub_1BA7F6B74((_QWORD *)(v42 > 1), v41 + 1, 1, v84);
        else
          v44 = v84;
        v44[2] = v41 + 1;
        v84 = v44;
        v45 = &v44[7 * v41];
        v45[4] = v86;
        v45[5] = v43;
        v46 = v92;
        v45[6] = v91;
        v45[7] = v46;
        *((_BYTE *)v45 + 64) = v93;
        v45[9] = v96;
        *((_BYTE *)v45 + 84) = v31;
        *((_DWORD *)v45 + 20) = v88;
      }
      else
      {
        v33 = v94;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v34 = v83;
        v36 = v83[2];
        v35 = v83[3];
        v2 = v85;
        v6 = v95;
        if (v36 >= v35 >> 1)
          v34 = sub_1BA81C4C0((_QWORD *)(v35 > 1), v36 + 1, 1, v83);
        v37 = v93;
        v38 = v92;
        v39 = v91;
        v34[2] = v36 + 1;
        v83 = v34;
        v40 = &v34[8 * v36];
        v40[4] = v86;
        v40[5] = v33;
        v40[6] = v39;
        v40[7] = v38;
        *((_BYTE *)v40 + 64) = v37;
        v40[9] = v96;
        *((_DWORD *)v40 + 20) = v88;
        *((_BYTE *)v40 + 84) = v31;
        v40[11] = v32;
      }
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v6 == v89)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      goto LABEL_5;
    }
    ++v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 += 5;
    if (v98 == v15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v85;
      v6 = v95;
      goto LABEL_4;
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v24 = (char *)&v81 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v24, v22);
  v25 = v21;
  v26 = v100;
  v27 = sub_1BA6EB5B4((uint64_t)v24, v25, v18, v99);
  swift_bridgeObjectRelease();
  v100 = v26;
  if (!v26)
    goto LABEL_18;
  v79 = v100;
  swift_willThrow();

  __break(1u);
LABEL_55:

  result = MEMORY[0x1BCCE5C38](v24, -1, -1);
  __break(1u);
  return result;
}

_QWORD *initializeWithCopy for FeedGroupEntity.ManifestEntity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void FCDateRange.init(dateInterval:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  void (*v8)(char *, uint64_t);
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_1BB86C8B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1BB86BE9C();
  v7 = (void *)sub_1BB86C808();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BB86BE78();
  v9 = (void *)sub_1BB86C808();
  v8(v5, v2);
  v10 = objc_msgSend(v6, sel_initWithEarlierDate_laterDate_, v7, v9);

  if (v10)
  {
    v11 = sub_1BB86BEC0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  else
  {
    __break(1u);
  }
}

unint64_t destroy for FormatPercentFillSizing(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BA4FD1E8()
{
  sub_1BA4FD290();
  return sub_1BB872D0C();
}

uint64_t sub_1BA4FD234()
{
  sub_1BA4FD290();
  return sub_1BB872D60();
}

unint64_t sub_1BA4FD290()
{
  unint64_t result;

  result = qword_1ED3CABA0;
  if (!qword_1ED3CABA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB310, &_s10CodingTypeON_74);
    atomic_store(result, (unint64_t *)&qword_1ED3CABA0);
  }
  return result;
}

uint64_t sub_1BA4FD2D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t destroy for FeedGroupEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t FormatNodeState.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA4FD45C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

void sub_1BA4FD4A4(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;

  v9 = sub_1BB86F850();
  v10 = *(_QWORD *)(v9 - 8);
  v11.n128_f64[0] = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (swift_beginAccess(), (Strong = swift_weakLoadStrong()) != 0))
  {
    v15 = Strong;
    v21 = a5;
    v16 = a1;
    if (a3)
      a3(2);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v15 + 32), *(_QWORD *)(v15 + 56));
    sub_1BB86F844();
    v17 = sub_1BB870894();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    if ((v17 & 1) != 0)
    {
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = a3;
      *(_QWORD *)(v18 + 24) = a4;
      v19 = a1;
      sub_1BA4BEB58((uint64_t)a3);
      sub_1BB871704();
      swift_release();

      swift_release();
    }
    else
    {
      v20 = a1;
      sub_1BB871710();
      if (a3)
        a3(4);
      swift_release();

    }
  }
  else if (a3)
  {
    ((void (*)(uint64_t, __n128))a3)(3, v11);
  }
}

void sub_1BA4FD66C()
{
  uint64_t v0;
  _QWORD v1[5];

  sub_1BA4FDEAC(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

unint64_t sub_1BA4FD6BC()
{
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v1);
  return 0xD00000000000001BLL;
}

uint64_t sub_1BA4FDEAC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for GroupLayoutFactoryError(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for GroupLayoutFactoryError(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  __int128 v5;
  void *v6;
  id v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 0xD)
    v3 = *(_DWORD *)a2 + 13;
  switch(v3)
  {
    case 0u:
      v4 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t))(v4 - 8))(a1);
      *(_BYTE *)(a1 + 40) = 0;
      return a1;
    case 1u:
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 1;
      v7 = v6;
      return a1;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 40) = 2;
      return a1;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 40) = 3;
      return a1;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 40) = 4;
      return a1;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 40) = 5;
      return a1;
    case 6u:
      v8 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v9 = 6;
      goto LABEL_13;
    case 7u:
      v10 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v10;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v9 = 7;
LABEL_13:
      *(_BYTE *)(a1 + 40) = v9;
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 8u:
      v11 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v11;
      v12 = 8;
      goto LABEL_19;
    case 9u:
      v13 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v13;
      v12 = 9;
      goto LABEL_19;
    case 0xAu:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v12 = 10;
      goto LABEL_19;
    case 0xBu:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v12 = 11;
      goto LABEL_19;
    case 0xCu:
      v14 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v14;
      v12 = 12;
LABEL_19:
      *(_BYTE *)(a1 + 40) = v12;
LABEL_20:
      swift_bridgeObjectRetain();
      break;
    default:
      v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      break;
  }
  return a1;
}

uint64_t sub_1BA4FE078@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCompilerProperty.init(from:)(a1, a2);
}

uint64_t sub_1BA4FE08C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x726F74617265706FLL;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x6E6F6974706FLL;
}

uint64_t _s5TeaUI8CommandsC8NewsFeedE6SportsV11ReportScoreV3allSayAA7CommandCyAD0fH7ConcernOGGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BB8882C0;
  if (qword_1ED3C4B80 != -1)
    swift_once();
  *(_QWORD *)(v0 + 32) = qword_1ED3C4B70;
  v1 = qword_1ED3C4BC8;
  swift_retain();
  if (v1 != -1)
    swift_once();
  *(_QWORD *)(v0 + 40) = qword_1ED3C4BB8;
  v2 = qword_1ED3C4C00;
  swift_retain();
  if (v2 != -1)
    swift_once();
  *(_QWORD *)(v0 + 48) = qword_1ED3C4BF0;
  v3 = qword_1ED3C4BE8;
  swift_retain();
  if (v3 != -1)
    swift_once();
  *(_QWORD *)(v0 + 56) = qword_1ED3C4BD8;
  v4 = qword_1ED3C4BB0;
  swift_retain();
  if (v4 != -1)
    swift_once();
  *(_QWORD *)(v0 + 64) = qword_1ED3C4BA0;
  v5 = qword_1ED3C4B98;
  swift_retain();
  if (v5 != -1)
    swift_once();
  *(_QWORD *)(v0 + 72) = qword_1ED3C4B88;
  sub_1BB872DCC();
  swift_retain();
  return v0;
}

uint64_t sub_1BA4FE2AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA64EEF0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA4FE2D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA64E350(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA4FE2FC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatMediaTiming.init(from:)(a1, a2);
}

uint64_t FormatMediaTiming.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _BYTE v50[7];
  _BYTE v51[7];
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  __int128 v56;
  char v57;
  _BYTE v58[7];

  v3 = v2;
  v49 = a2;
  sub_1BAEA1E58();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA1ED0();
  sub_1BA4A2870(&qword_1ED3AD838, (uint64_t (*)(uint64_t))sub_1BAEA1ED0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (!v2)
  {
    v48 = v7;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v10 = sub_1BB872874();
    v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
    swift_bridgeObjectRelease();
    v12 = v6;
    v13 = v9;
    if ((v11 & 1) != 0)
    {
      v14 = sub_1BB8740EC();
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        v16 = (_BYTE *)(v14 + 48);
        while (*v16 != 1)
        {
          v16 += 24;
          if (!--v15)
            goto LABEL_7;
        }
        v18 = *((_QWORD *)v16 - 2);
        v19 = *((_QWORD *)v16 - 1);
        swift_bridgeObjectRetain_n();
        v20 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v20);
        *((_QWORD *)&v37 - 4) = &_s14descr1E72CC509C10CodingKeysON;
        *((_QWORD *)&v37 - 3) = sub_1BAEA1F50();
        *((_QWORD *)&v37 - 2) = sub_1BA4FEC28();
        *((_QWORD *)&v37 - 1) = sub_1BAEA1F94();
        swift_getKeyPath();
        swift_retain();
        v21 = sub_1BAE71220((uint64_t)&unk_1E7251258);
        swift_release_n();
        sub_1BA98D1F0();
        v3 = (void *)swift_allocError();
        *(_QWORD *)v22 = v18;
        *(_QWORD *)(v22 + 8) = v19;
        *(_QWORD *)(v22 + 16) = v21;
        *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA69C828(v18, v19, 1);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v12);
        goto LABEL_10;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA69C018();
    v52 = 0uLL;
    LOBYTE(v53) = 0;
    sub_1BB874068();
    v17 = v56;
    v52 = xmmword_1BB8A1A10;
    LOBYTE(v53) = 0;
    sub_1BB874068();
    v23 = v56;
    v52 = xmmword_1BB8D2D60;
    LOBYTE(v53) = 0;
    sub_1BB874068();
    v24 = v56;
    v52 = xmmword_1BB8D2D70;
    LOBYTE(v53) = 0;
    sub_1BB874068();
    v47 = v24;
    v25 = v56;
    v52 = xmmword_1BB8D2D90;
    LOBYTE(v53) = 0;
    sub_1BA4FEBE4();
    sub_1BB874068();
    v46 = v25;
    LODWORD(v25) = v56;
    v52 = xmmword_1BB8D2D80;
    LOBYTE(v53) = 0;
    sub_1BB874068();
    v45 = v25;
    v26 = v56;
    v52 = xmmword_1BB8D2DA0;
    LOBYTE(v53) = 0;
    sub_1BB874068();
    v44 = v26;
    v27 = v56;
    v56 = xmmword_1BB8D2DB0;
    v57 = 0;
    sub_1BA7967E4();
    sub_1BB874068();
    v42 = v52;
    v43 = v53;
    v56 = xmmword_1BB8D2DD0;
    v57 = 0;
    sub_1BA4FEBA0();
    sub_1BB874068();
    v28 = v27;
    v41 = v23;
    v37 = v52;
    v38 = v53;
    v39 = v54;
    v40 = v55;
    v56 = xmmword_1BB8D2DE0;
    v57 = 0;
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v12);
    v29 = v53;
    v30 = v49;
    v31 = v41;
    *v49 = v17;
    v30[1] = v31;
    v32 = v46;
    v30[2] = v47;
    v30[3] = v32;
    *((_BYTE *)v30 + 32) = v45;
    *(_DWORD *)((char *)v30 + 33) = *(_DWORD *)v58;
    *((_DWORD *)v30 + 9) = *(_DWORD *)&v58[3];
    v30[5] = v44;
    v30[6] = v28;
    v33 = *((_QWORD *)&v42 + 1);
    v30[7] = v42;
    v30[8] = v33;
    *((_BYTE *)v30 + 72) = v43;
    *(_DWORD *)((char *)v30 + 73) = *(_DWORD *)v51;
    *((_DWORD *)v30 + 19) = *(_DWORD *)&v51[3];
    v34 = *((_QWORD *)&v37 + 1);
    v30[10] = v37;
    v30[11] = v34;
    v35 = v39;
    v30[12] = v38;
    v30[13] = v35;
    *((_BYTE *)v30 + 112) = v40;
    *(_DWORD *)((char *)v30 + 113) = *(_DWORD *)v50;
    *((_DWORD *)v30 + 29) = *(_DWORD *)&v50[3];
    *(_OWORD *)(v30 + 15) = v52;
    *((_BYTE *)v30 + 136) = v29;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA4FEBA0()
{
  unint64_t result;

  result = qword_1ED3A0420;
  if (!qword_1ED3A0420)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunction, &type metadata for FormatMediaTimingFunction);
    atomic_store(result, (unint64_t *)&qword_1ED3A0420);
  }
  return result;
}

unint64_t sub_1BA4FEBE4()
{
  unint64_t result;

  result = qword_1ED39E7F8;
  if (!qword_1ED39E7F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFillMode, &type metadata for FormatMediaTimingFillMode);
    atomic_store(result, (unint64_t *)&qword_1ED39E7F8);
  }
  return result;
}

unint64_t sub_1BA4FEC28()
{
  unint64_t result;

  result = qword_1ED3A5C48;
  if (!qword_1ED3A5C48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C92A8, &_s14descr1E72CC509C10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3A5C48);
  }
  return result;
}

int *sub_1BA4FEC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *, char *, uint64_t);
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t AssociatedTypeWitness;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  int *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[7];

  v66 = a4;
  v9 = type metadata accessor for FeedCursorTrackerGroup(255, a3, a4, a4);
  v55 = sub_1BB873A2C();
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v53 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v47 - v12;
  v14 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v15);
  v64 = (uint64_t *)((char *)&v47 - v16);
  v69 = MEMORY[0x1E0DEE9E8];
  v70 = MEMORY[0x1E0DEE9E8];
  result = (int *)sub_1BB87273C();
  v68 = result;
  v18 = *(_QWORD *)(a2 + 16);
  v65 = a3;
  if (v18)
  {
    v48 = a1;
    v49 = a5;
    v19 = 0;
    v61 = a2 + 32;
    v20 = v9;
    v63 = a2;
    v52 = v9;
    v51 = v13;
    v50 = v14;
    v62 = v18;
    while (v19 < *(_QWORD *)(a2 + 16))
    {
      v21 = (uint64_t *)(v61 + 48 * v19);
      v22 = v14;
      v24 = *v21;
      v23 = v21[1];
      v25 = v21[2];
      v26 = v21[3];
      v27 = v21[4];
      v28 = v21[5];
      v71[0] = *v21;
      v71[1] = v23;
      v71[2] = v25;
      v71[3] = v26;
      v71[4] = v27;
      v71[5] = v28;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      sub_1BA4EDC7C((uint64_t)v71, v65, v66, (uint64_t)v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v13, 1, v20) == 1)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        result = (int *)(*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v13, v55);
        a2 = v63;
        v14 = v22;
      }
      else
      {
        v57 = v26;
        v58 = v25;
        v59 = v23;
        v60 = v24;
        v29 = *(void (**)(uint64_t *, char *, uint64_t))(v22 + 32);
        v30 = v20;
        v31 = v64;
        v29(v64, v13, v30);
        v32 = *v31;
        v33 = v31[1];
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC(v67, v32, v33);
        swift_bridgeObjectRelease();
        v34 = *(uint64_t *)((char *)v31 + *(int *)(v30 + 48));
        v35 = *(_QWORD *)(v34 + 16);
        if (v35)
        {
          v56 = v32;
          swift_bridgeObjectRetain();
          v36 = (uint64_t *)(v34 + 40);
          do
          {
            v38 = *(v36 - 1);
            v37 = *v36;
            swift_bridgeObjectRetain();
            sub_1BA6EE5AC(v67, v38, v37);
            swift_bridgeObjectRelease();
            v36 += 2;
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
          v32 = v56;
        }
        v39 = v50;
        v40 = v53;
        v41 = v64;
        v20 = v52;
        (*(void (**)(char *, uint64_t *, uint64_t))(v50 + 16))(v53, v64, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v20);
        v67[0] = v32;
        v67[1] = v33;
        sub_1BB872814();
        v14 = v39;
        swift_bridgeObjectRetain();
        sub_1BB872838();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        result = (int *)(*(uint64_t (**)(uint64_t *, uint64_t))(v39 + 8))(v41, v20);
        a2 = v63;
        v13 = v51;
      }
      if (++v19 == v62)
      {
        swift_bridgeObjectRelease();
        a5 = v49;
        a1 = v48;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_14:
    v43 = v65;
    v42 = v66;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a5, a1, AssociatedTypeWitness);
    v45 = v70;
    result = (int *)type metadata accessor for FeedCursorTrackerSnapshot(0, v43, v42, v46);
    *(_QWORD *)(a5 + result[9]) = v45;
    *(_QWORD *)(a5 + result[11]) = v68;
    *(_QWORD *)(a5 + result[10]) = v69;
  }
  return result;
}

void sub_1BA4FF1A8()
{
  uint64_t v0;
  _BYTE v1[40];

  sub_1BA4FF8C0(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1BA4FF1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  __int128 v3;
  _OWORD v4[2];
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1BA4FF8FC(v5, v6, v7, v8, (uint64_t *)v4);
  if (!v0)
  {
    v3 = v4[1];
    *(_OWORD *)v1 = v4[0];
    *(_OWORD *)(v1 + 16) = v3;
    *(_BYTE *)(v1 + 32) = 0;
  }
  return result;
}

uint64_t sub_1BA4FF8C0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_1BA4FF8FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  double v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;

  sub_1BB86DD80();
  v11 = sub_1BA72BED4(v23, a1);
  result = swift_release();
  if (!v5)
  {
    v13 = swift_allocObject();
    *(double *)(v13 + 16) = v11;
    sub_1BA790480();
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v14 + 32) = v13;
    *(_BYTE *)(v14 + 40) = 0;
    sub_1BB86DD80();
    v15 = sub_1BA72BED4(v23, a2);
    swift_release();
    v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v17 + 32) = v16;
    *(_BYTE *)(v17 + 40) = 0;
    sub_1BB86DD80();
    v18 = sub_1BA72BED4(v23, a3);
    swift_release();
    v19 = swift_allocObject();
    *(double *)(v19 + 16) = v18;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v20 + 32) = v19;
    *(_BYTE *)(v20 + 40) = 0;
    sub_1BB86DD80();
    v21 = sub_1BA72BED4(v23, a4);
    swift_release();
    v22 = swift_allocObject();
    *(double *)(v22 + 16) = v21;
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(result + 32) = v22;
    *(_BYTE *)(result + 40) = 0;
    *a5 = v14;
    a5[1] = v17;
    a5[2] = v20;
    a5[3] = result;
  }
  return result;
}

uint64_t FeedDeferredCursor.__deallocating_deinit()
{
  FeedDeferredCursor.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedDeferredCursor.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  swift_bridgeObjectRelease();
  v1 = v0 + qword_1ED476458;
  v2 = sub_1BB86C8B0();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + qword_1ED476440, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(void **)(v0 + qword_1ED476448);
  v5 = *(_QWORD *)(v0 + qword_1ED476448 + 32);
  v6 = *(_QWORD *)(v0 + qword_1ED476448 + 40);
  v7 = *(void **)(v0 + qword_1ED476448 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1BA6DB13C(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

void sub_1BA4FFCE0(_QWORD *a1)
{
  FormatGroupNodeMaskPath.encode(to:)(a1);
}

void FormatGroupNodeMaskPath.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[7];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v17[2] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v17[4] = v1[1];
  v17[5] = v11;
  v17[3] = v1[2];
  v17[1] = v1[6];
  v12 = *((unsigned __int8 *)v1 + 64);
  v14 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v15 = sub_1BA6B8518();
  v17[6] = v10;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGroupNodeMaskPath, v16, v14, (uint64_t)&type metadata for FormatGroupNodeMaskPath, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v13, (uint64_t)v10, v15, (uint64_t)&off_1E734BDC0);
  __asm { BR              X9 }
}

uint64_t sub_1BA4FFE84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D58 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 176);
  sub_1BACE8E08(0, *(_QWORD *)(v1 - 184), *(_QWORD *)(v1 - 192), *(_QWORD *)(v1 - 200), v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA500148(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v22 = a1;
  v7 = a2[1];
  v18 = *a2;
  v19 = v7;
  v8 = a2[3];
  v20 = a2[2];
  v21 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF7F80;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5002B8();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5D6280();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5002B8()
{
  unint64_t result;

  result = qword_1ED3A71D0;
  if (!qword_1ED3A71D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3A58, &_s10CodingTypeON_150);
    atomic_store(result, (unint64_t *)&qword_1ED3A71D0);
  }
  return result;
}

uint64_t sub_1BA5002FC()
{
  sub_1BA5003A4();
  return sub_1BB872D0C();
}

uint64_t sub_1BA500348()
{
  sub_1BA5003A4();
  return sub_1BB872D60();
}

unint64_t sub_1BA5003A4()
{
  unint64_t result;

  result = qword_1ED3CA190;
  if (!qword_1ED3CA190)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0070, &_s10CodingTypeON_182);
    atomic_store(result, (unint64_t *)&qword_1ED3CA190);
  }
  return result;
}

uint64_t destroy for FormatIssueCoverNodeStyle.Selector(uint64_t a1)
{
  unsigned int v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 <= 0xFD)
    sub_1BA6F2B88(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v2);
  if (*(unsigned __int8 *)(a1 + 136) != 254)
    swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA50044C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;

  sub_1BA500BD8(0, (unint64_t *)&unk_1ED3C2628, (uint64_t (*)(uint64_t))type metadata accessor for FormatView, (uint64_t)&off_1E730D280);
  v1 = swift_allocObject();
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 24) = 2003134838;
  *(_OWORD *)(v1 + 56) = xmmword_1BB8D2D70;
  *(_QWORD *)(v1 + 32) = 0xE400000000000000;
  *(_QWORD *)(v1 + 40) = sub_1BA679FA4;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  sub_1BA500BD8(0, &qword_1ED3C9050, (uint64_t (*)(uint64_t))type metadata accessor for FormatButton, (uint64_t)&off_1E7339490);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 0x6E6F74747562;
  *(_OWORD *)(v3 + 56) = xmmword_1BB8D2D60;
  *(_QWORD *)(v3 + 32) = 0xE600000000000000;
  *(_QWORD *)(v3 + 40) = sub_1BA67A2DC;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v0 + 24) = v3;
  sub_1BA500BD8(0, &qword_1ED3C9078, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageView, (uint64_t)&off_1E72780F0);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = 0x6567616D69;
  *(_OWORD *)(v4 + 56) = xmmword_1BB8D2D70;
  *(_QWORD *)(v4 + 32) = 0xE500000000000000;
  *(_QWORD *)(v4 + 40) = sub_1BA679FB0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v0 + 32) = v4;
  sub_1BA500BD8(0, &qword_1ED3C9048, (uint64_t (*)(uint64_t))type metadata accessor for FormatLabel, (uint64_t)&off_1E730E480);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = 0x6C6562616CLL;
  *(_OWORD *)(v5 + 56) = xmmword_1BB8D2D70;
  *(_QWORD *)(v5 + 32) = 0xE500000000000000;
  *(_QWORD *)(v5 + 40) = sub_1BA679FBC;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v0 + 40) = v5;
  sub_1BA500BD8(0, &qword_1ED3C9098, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutView, (uint64_t)&off_1E7334890);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = 0x695674756F79616CLL;
  *(_OWORD *)(v6 + 56) = xmmword_1BB8D2D60;
  *(_QWORD *)(v6 + 32) = 0xEA00000000007765;
  *(_QWORD *)(v6 + 40) = sub_1BA67A2C4;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v0 + 48) = v6;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB8D2D60;
  sub_1BA500BD8(0, &qword_1ED3C9088, (uint64_t (*)(uint64_t))type metadata accessor for FormatStateView, (uint64_t)&off_1E7318D70);
  v8 = (_QWORD *)swift_allocObject();
  v8[7] = v7;
  v8[8] = 0;
  v8[2] = v2;
  v8[3] = 0x6569566574617473;
  v8[4] = 0xE900000000000077;
  v8[5] = sub_1BA67A2D0;
  v8[6] = 0;
  *(_QWORD *)(v0 + 56) = v8;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB8A1A10;
  sub_1BA500BD8(0, &qword_1ED3C9068, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaView, (uint64_t)&off_1E73335C8);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 56) = v9;
  *(_QWORD *)(v10 + 64) = 0;
  *(_QWORD *)(v10 + 16) = v2;
  strcpy((char *)(v10 + 24), "layeredMedia");
  *(_BYTE *)(v10 + 37) = 0;
  *(_WORD *)(v10 + 38) = -5120;
  *(_QWORD *)(v10 + 40) = sub_1BA67B150;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v0 + 64) = v10;
  sub_1BA500BD8(0, &qword_1ED3C9090, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoView, (uint64_t)&off_1E7322B80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v2;
  *(_QWORD *)(v11 + 24) = 0x6F65646976;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_QWORD *)(v11 + 32) = 0xE500000000000000;
  *(_QWORD *)(v11 + 40) = sub_1BB5F3C40;
  *(_QWORD *)(v11 + 48) = 0;
  *(_QWORD *)(v0 + 72) = v11;
  sub_1BA500BD8(0, &qword_1ED3C9030, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC5D8], (uint64_t)&off_1E73406F0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v2;
  *(_QWORD *)(v12 + 24) = 1633905005;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_QWORD *)(v12 + 32) = 0xE400000000000000;
  *(_QWORD *)(v12 + 40) = sub_1BB5F3C34;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v0 + 80) = v12;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB8A1A10;
  sub_1BA500BD8(0, &qword_1ED3C9058, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressBarView, (uint64_t)&off_1E728D8E8);
  v14 = (_QWORD *)swift_allocObject();
  v14[7] = v13;
  v14[8] = 0;
  v14[2] = v2;
  v14[3] = 0x73736572676F7270;
  v14[4] = 0xE800000000000000;
  v14[5] = sub_1BA67B168;
  v14[6] = 0;
  *(_QWORD *)(v0 + 88) = v14;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB8A1A10;
  sub_1BA500BD8(0, &qword_1ED3C9060, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressPieView, (uint64_t)&off_1E7331668);
  v16 = (_QWORD *)swift_allocObject();
  v16[7] = v15;
  v16[8] = 0;
  v16[2] = v2;
  v16[3] = 0x73736572676F7270;
  v16[4] = 0xEB00000000656950;
  v16[5] = sub_1BA67B15C;
  v16[6] = 0;
  *(_QWORD *)(v0 + 96) = v16;
  sub_1BA500BD8(0, &qword_1ED3C9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressCircleView, (uint64_t)&off_1E72E71D8);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v2;
  strcpy((char *)(v17 + 24), "progressCircle");
  *(_OWORD *)(v17 + 56) = 0u;
  *(_BYTE *)(v17 + 39) = -18;
  *(_QWORD *)(v17 + 40) = sub_1BB5F3C28;
  *(_QWORD *)(v17 + 48) = 0;
  *(_QWORD *)(v0 + 104) = v17;
  sub_1BA500BD8(0, &qword_1ED3C9080, (uint64_t (*)(uint64_t))type metadata accessor for FormatSplitView, (uint64_t)&off_1E73406E0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v2;
  *(_QWORD *)(v18 + 24) = 0x65695674696C7073;
  *(_OWORD *)(v18 + 56) = 0u;
  *(_QWORD *)(v18 + 32) = 0xE900000000000077;
  *(_QWORD *)(v18 + 40) = sub_1BB5F3C1C;
  *(_QWORD *)(v18 + 48) = 0;
  *(_QWORD *)(v0 + 112) = v18;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB8A1A10;
  sub_1BA500BD8(0, &qword_1ED3C9038, MEMORY[0x1E0DB6D48], (uint64_t)&off_1E7340700);
  v20 = (_QWORD *)swift_allocObject();
  v20[7] = v19;
  v20[8] = 0;
  v20[2] = v2;
  v20[3] = 0x746E656964617267;
  v20[4] = 0xE800000000000000;
  v20[5] = sub_1BA67B174;
  v20[6] = 0;
  *(_QWORD *)(v0 + 120) = v20;
  sub_1BA500BD8(0, &qword_1ED3C2180, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBanner, (uint64_t)&off_1E72E5968);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v2;
  *(_QWORD *)(v21 + 24) = 0x65726F736E6F7073;
  *(_OWORD *)(v21 + 56) = 0u;
  *(_QWORD *)(v21 + 32) = 0xEF72656E6E614264;
  *(_QWORD *)(v21 + 40) = sub_1BB5F3C10;
  *(_QWORD *)(v21 + 48) = 0;
  *(_QWORD *)(v0 + 128) = v21;
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BB8A1A10;
  sub_1BA500BD8(0, &qword_1ED3C9040, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverView, (uint64_t)&off_1E7340710);
  v23 = (_QWORD *)swift_allocObject();
  v23[7] = v22;
  v23[8] = 0;
  v23[2] = v2;
  v23[3] = 0xD000000000000010;
  v23[4] = 0x80000001BB9938F0;
  v23[5] = sub_1BA67A9F8;
  v23[6] = 0;
  *(_QWORD *)(v0 + 136) = v23;
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB8A1A10;
  v25 = (_QWORD *)swift_allocObject();
  v25[7] = v24;
  v25[8] = 0;
  v25[2] = v2;
  v25[3] = 0xD000000000000017;
  v25[4] = 0x80000001BB993910;
  v25[5] = sub_1BA67AB40;
  v25[6] = 0;
  *(_QWORD *)(v0 + 144) = v25;
  *(_BYTE *)(v0 + 152) = 1;
  v26 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v26, sel_addObserver_selector_name_object_, v0, sel_didReceiveMemoryWarning, *MEMORY[0x1E0DC4778], 0);

  return v0;
}

void sub_1BA500BD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3(255);
    v9 = type metadata accessor for FormatLayoutViewPool(a1, v7, a4, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t type metadata accessor for FormatLayoutViewPool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatLayoutViewPool);
}

uint64_t sub_1BA500C40()
{
  sub_1BA500C9C();
  return sub_1BB872D60();
}

unint64_t sub_1BA500C9C()
{
  unint64_t result;

  result = qword_1ED3B6B88;
  if (!qword_1ED3B6B88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionExpression.Exists.Operator, &type metadata for FormatOptionExpression.Exists.Operator);
    atomic_store(result, (unint64_t *)&qword_1ED3B6B88);
  }
  return result;
}

void sub_1BA500CE0(uint64_t a1, uint64_t a2)
{
  FormatSwitchValue.encode(to:)(a1, a2);
}

uint64_t sub_1BA500CF4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA500D1C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA500D1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  __int128 v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  int v43;
  unint64_t v44;
  __int128 v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  __int128 v56;
  char v57;
  __int128 v58;
  char v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;

  v2 = v1;
  sub_1BAEF698C();
  v66 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE80A98();
  sub_1BA4A2870(&qword_1ED3ADA58, (uint64_t (*)(uint64_t))sub_1BAE80A98, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v1)
  {
LABEL_10:
    sub_1BA7F8B78(a1, v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v2;
  }
  v8 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v9 = sub_1BB872874();
  LOBYTE(v8) = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  v10 = v5;
  v11 = v66;
  v12 = v7;
  if ((v8 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v20 = *((_QWORD *)v15 - 2);
      v21 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      v54 = v10;
      MEMORY[0x1E0C80A78](v22);
      *(&v39 - 4) = (uint64_t)&_s10CodingKeysON_189;
      *(&v39 - 3) = sub_1BAE80B18();
      *(&v39 - 2) = sub_1BA5015F8();
      *(&v39 - 1) = sub_1BAE80B5C();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E7250750);
      swift_release_n();
      sub_1BA98D1F0();
      v2 = swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v11);
      a1 = v55;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA501570();
  v56 = 0uLL;
  v57 = 0;
  sub_1BB8740D4();
  v54 = v10;
  v16 = v60;
  v17 = v61;
  v50 = *((_QWORD *)&v60 + 1);
  v51 = v62;
  v18 = v63;
  v53 = v64;
  v52 = v65;
  v56 = xmmword_1BB8A1A10;
  v57 = 0;
  sub_1BA7967E4();
  sub_1BB874068();
  v19 = (uint64_t)v55;
  v47 = v16;
  v48 = v18;
  v49 = v17;
  v26 = v60;
  v46 = v61;
  v56 = xmmword_1BB8D2D60;
  v57 = 0;
  sub_1BB874068();
  v45 = v26;
  v27 = v60;
  v28 = v61;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v60 = xmmword_1BB8D2D70;
  LOBYTE(v61) = 0;
  v44 = sub_1BA69C018();
  sub_1BB874068();
  v42 = v27;
  v43 = v28;
  v29 = v56;
  v60 = xmmword_1BB8D2D90;
  LOBYTE(v61) = 0;
  sub_1BB874068();
  v40 = v56;
  v41 = v29;
  v60 = xmmword_1BB8D2D80;
  LOBYTE(v61) = 0;
  sub_1BB874068();
  v30 = v56;
  v60 = xmmword_1BB8D2DA0;
  LOBYTE(v61) = 0;
  sub_1BB874068();
  v31 = v56;
  v58 = xmmword_1BB8D2DB0;
  v59 = 0;
  sub_1BA5015B4();
  sub_1BB874068();
  v32 = v45;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v11);
  sub_1BA6A09F0((uint64_t)&v60, (uint64_t)&v56, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  type metadata accessor for FormatAnimationNodeSpringAnimation();
  v2 = swift_allocObject();
  v33 = v50;
  *(_QWORD *)(v2 + 16) = v47;
  *(_QWORD *)(v2 + 24) = v33;
  v34 = v51;
  *(_QWORD *)(v2 + 32) = v49;
  *(_QWORD *)(v2 + 40) = v34;
  v35 = v53;
  *(_QWORD *)(v2 + 48) = v48;
  *(_QWORD *)(v2 + 56) = v35;
  *(_BYTE *)(v2 + 64) = v52;
  v36 = *((_QWORD *)&v45 + 1);
  *(_QWORD *)(v2 + 72) = v32;
  *(_QWORD *)(v2 + 80) = v36;
  *(_BYTE *)(v2 + 88) = v46;
  v37 = *((_QWORD *)&v42 + 1);
  *(_QWORD *)(v2 + 96) = v42;
  *(_QWORD *)(v2 + 104) = v37;
  *(_BYTE *)(v2 + 112) = v43;
  v38 = v40;
  *(_QWORD *)(v2 + 120) = v41;
  *(_QWORD *)(v2 + 128) = v38;
  *(_QWORD *)(v2 + 136) = v30;
  *(_QWORD *)(v2 + 144) = v31;
  sub_1BA6A09F0((uint64_t)&v56, v2 + 152, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  __swift_destroy_boxed_opaque_existential_1(v19);
  return v2;
}

uint64_t type metadata accessor for FormatAnimationNodeSpringAnimation()
{
  return objc_opt_self();
}

unint64_t sub_1BA501570()
{
  unint64_t result;

  result = qword_1ED3A04A0;
  if (!qword_1ED3A04A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnimationNodeKeyPath, &type metadata for FormatAnimationNodeKeyPath);
    atomic_store(result, (unint64_t *)&qword_1ED3A04A0);
  }
  return result;
}

unint64_t sub_1BA5015B4()
{
  unint64_t result;

  result = qword_1ED39E5B0;
  if (!qword_1ED39E5B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTiming, &type metadata for FormatMediaTiming);
    atomic_store(result, (unint64_t *)&qword_1ED39E5B0);
  }
  return result;
}

unint64_t sub_1BA5015F8()
{
  unint64_t result;

  result = qword_1ED3A4388;
  if (!qword_1ED3A4388)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE290, &_s10CodingKeysON_189);
    atomic_store(result, (unint64_t *)&qword_1ED3A4388);
  }
  return result;
}

uint64_t FormatGroupNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  _BYTE v69[96];
  uint64_t v70;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v61 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v62 = (char *)&v61 - v8;
  MEMORY[0x1E0C80A78](v9);
  v63 = (char *)&v61 - v10;
  MEMORY[0x1E0C80A78](v11);
  v64 = (char *)&v61 - v12;
  MEMORY[0x1E0C80A78](v13);
  v65 = (char *)&v61 - v14;
  MEMORY[0x1E0C80A78](v15);
  v66 = (char *)&v61 - v16;
  MEMORY[0x1E0C80A78](v17);
  v67 = (void (*)(char *, uint64_t, uint64_t))((char *)&v61 - v18);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v61 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v61 - v23;
  sub_1BAE76070(0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a1[3];
  v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  v30 = sub_1BAE76160();
  v31 = sub_1BA4A2870(&qword_1ED3D0EC0, (uint64_t (*)(uint64_t))sub_1BAE76160, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v32, v28, v4, v30, (uint64_t)&type metadata for FormatVersions.StarSky, v29, (uint64_t)v27, v31, (uint64_t)&off_1E734BDC0);
  swift_beginAccess();
  v33 = v2[2];
  v34 = v2[3];
  v35 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v35 != -1)
    swift_once();
  v36 = sub_1BB86EB84();
  v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C08);
  v38 = *(void (**)(char *))(*(_QWORD *)(v36 - 8) + 16);
  v68 = v37;
  v38(v24);
  v39 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v40 = v70;
  sub_1BAD265E8(v33, v34, 0, 0, 0, (uint64_t)v24, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE4D284, (uint64_t (*)(uint64_t))sub_1BAE760E8, &qword_1ED3AEA20);
  if (v40)
  {
    sub_1BA4A2E80((uint64_t)v24, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v24, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v41 = v2[4];
    v42 = v2[5];
    ((void (*)(char *, uint64_t, uint64_t))v38)(v21, v68, v36);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1A434(v41, v42, 1, 0, 0, (uint64_t)v21, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v43 = (uint64_t)v67;
    v70 = v36;
    ((void (*)(_QWORD, uint64_t, uint64_t))v38)(v67, v68, v36);
    swift_storeEnumTagMultiPayload();
    v44 = swift_bridgeObjectRetain();
    sub_1BAD298D0(v44, 2, 0, 0);
    sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v45 = (uint64_t)v66;
    v46 = v70;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v66, v68, v70);
    swift_storeEnumTagMultiPayload();
    v47 = swift_bridgeObjectRetain();
    sub_1BAD55E4C(v47, 3, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v49 = (uint64_t)v65;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v65, v68, v46);
    swift_storeEnumTagMultiPayload();
    v50 = swift_bridgeObjectRetain();
    sub_1BAD5606C(v50, 4, 0, 0, v49, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v49, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v51 = v2[9];
    v52 = v2[10];
    LOBYTE(v49) = *((_BYTE *)v2 + 88);
    v53 = (uint64_t)v64;
    v67 = (void (*)(char *, uint64_t, uint64_t))v38;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v64, v68, v70);
    v66 = (char *)v39;
    swift_storeEnumTagMultiPayload();
    sub_1BA6E6C54(v51, v52, v49);
    sub_1BAD5629C(v51, v52, v49, 5, 0, 0, v53, (uint64_t)sub_1BA90CF04);
    v54 = v70;
    sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v51, v52, v49);
    sub_1BA6A09F0((uint64_t)(v2 + 12), (uint64_t)v69, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
    v55 = (uint64_t)v63;
    v67(v63, v68, v54);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD564D0((uint64_t)v69, 6, 0, 0, v55, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v55, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    LOBYTE(v55) = *((_BYTE *)v2 + 177);
    v56 = (uint64_t)v62;
    v67(v62, v68, v54);
    swift_storeEnumTagMultiPayload();
    sub_1BAD567B8(v55, 7, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    v57 = v67;
    v58 = *((_BYTE *)v2 + 178);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v59 = __swift_project_value_buffer(v54, (uint64_t)qword_1ED476B78);
    v60 = (uint64_t)v61;
    v57(v61, v59, v54);
    swift_storeEnumTagMultiPayload();
    sub_1BAD567B8(v58, 8, 0, 0, v60, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BAE76070);
}

uint64_t sub_1BA501E50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedDateRange.init(from:)(a1, a2);
}

uint64_t FeedDateRange.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  char v30;

  v23 = a2;
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v4);
  v24 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  v26 = v7;
  MEMORY[0x1E0C80A78](v6);
  v27 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA502128(0, &qword_1ED39C080, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v28 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - v11;
  v13 = type metadata accessor for FeedDateRange();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA502328();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = v13;
  v22 = a1;
  v16 = v10;
  v17 = v26;
  v18 = (uint64_t)v24;
  v30 = 0;
  sub_1BA629A0C(&qword_1ED3B0528, MEMORY[0x1E0CB08C0]);
  v19 = v25;
  sub_1BB8740D4();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v27, v19);
  v29 = 1;
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v28);
  sub_1BA50236C(v18, (uint64_t)&v15[*(int *)(v21 + 20)]);
  sub_1BA4C2DD8((uint64_t)v15, v23, (uint64_t (*)(_QWORD))type metadata accessor for FeedDateRange);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_1BA5022B0((uint64_t)v15);
}

void sub_1BA502128(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA502328();
    v7 = a3(a1, &type metadata for FeedDateRange.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void FCDateRange.init(dateRange:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_1BB86C808();
  v6 = type metadata accessor for FeedDateRange();
  sub_1BA4C2DD8(a1 + *(int *)(v6 + 20), (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  v7 = sub_1BB86C8B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1)
  {
    v9 = (void *)sub_1BB86C808();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithStartDate_endDate_, v5, v9);

  if (v10)
    sub_1BA5022B0(a1);
  else
    __break(1u);
}

uint64_t sub_1BA5022B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedDateRange();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FeedDateRange()
{
  uint64_t result;

  result = qword_1ED39AF80;
  if (!qword_1ED39AF80)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA502328()
{
  unint64_t result;

  result = qword_1ED39AF68;
  if (!qword_1ED39AF68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F7178, &type metadata for FeedDateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39AF68);
  }
  return result;
}

uint64_t sub_1BA50236C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1BA5023C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BA5023F0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_1BA5023F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  char v55;
  __int128 v56;
  char v57;

  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v2;
  MEMORY[0x1E0C80A78](v2);
  v51 = (char *)&v41 - v3;
  sub_1BAEE91B8(0, (unint64_t *)&qword_1ED3BBEC0);
  v50 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v41 - v6;
  sub_1BAEF31AC();
  v52 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v12);
  sub_1BAE94498();
  sub_1BA4A2870(&qword_1ED3D0D10, (uint64_t (*)(uint64_t))sub_1BAE94498, (uint64_t)&unk_1BB8FFC6C);
  v13 = v53;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v12;
  }
  v53 = v7;
  v47 = v5;
  v15 = v50;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16 = sub_1BB872874();
  v17 = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v19 = v51;
  v18 = v52;
  if ((v17 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v26 = v11;
      v28 = *((_QWORD *)v22 - 2);
      v27 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v29 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v29);
      *(&v41 - 4) = (uint64_t)&_s10CodingKeysON_130;
      *(&v41 - 3) = sub_1BAE94518();
      *(&v41 - 2) = sub_1BA502A0C();
      *(&v41 - 1) = sub_1BAE9455C();
      swift_getKeyPath();
      swift_retain();
      v12 = (_QWORD *)sub_1BAE71220((uint64_t)&unk_1E726BAC8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v30 = v28;
      *(_QWORD *)(v30 + 8) = v27;
      *(_QWORD *)(v30 + 16) = v12;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v28, v27, 1);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v26, v52);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v23 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF31AC);
  v25 = v24;
  v46 = v23;
  v56 = xmmword_1BB8A1A10;
  v57 = 0;
  v42 = sub_1BB87402C();
  v44 = v31;
  v45 = v25;
  v43 = xmmword_1BB8D2D60;
  v56 = xmmword_1BB8D2D60;
  v57 = 0;
  v32 = sub_1BB8740F8();
  if ((v32 & 1) != 0)
  {
    v41 = v9;
    v54 = v43;
    v55 = 0;
    sub_1BAEE927C();
    v33 = v53;
    v34 = v15;
    sub_1BB8740D4();
    v35 = v49;
    *(_QWORD *)&v43 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v34);
    v9 = v41;
  }
  else
  {
    *(_QWORD *)&v43 = MEMORY[0x1E0DEE9D8];
    v35 = v49;
  }
  v56 = xmmword_1BB8D2D70;
  v57 = 0;
  sub_1BA4FB6A0();
  sub_1BB8740D4();
  v36 = v48;
  v38 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v35);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  type metadata accessor for FormatGeometryNode();
  v12 = (_QWORD *)swift_allocObject();
  swift_beginAccess();
  v39 = v45;
  v12[2] = v46;
  v12[3] = v39;
  v40 = v44;
  v12[4] = v42;
  v12[5] = v40;
  swift_beginAccess();
  v12[6] = v43;
  swift_beginAccess();
  v12[7] = v38;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v12;
}

uint64_t type metadata accessor for FormatGeometryNode()
{
  return objc_opt_self();
}

unint64_t sub_1BA502A0C()
{
  unint64_t result;

  result = qword_1ED3C7C40;
  if (!qword_1ED3C7C40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB030, &_s10CodingKeysON_130);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C40);
  }
  return result;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA502AD0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BA4A3FB4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BA502B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  sub_1BA4B07F0(0, &qword_1ED3BBFA8, (uint64_t (*)(uint64_t))sub_1BA7E84C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BC000, (uint64_t (*)(uint64_t))sub_1BA7E84C0, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBC3F8], v6);
  result = sub_1BB871458();
  *a4 = result;
  return result;
}

uint64_t sub_1BA502BF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD v42[2];
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD v48[4];
  uint64_t v49;

  v47 = a2;
  v3 = sub_1BB86C8B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v42 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = v49;
  result = sub_1BB874674();
  if (!v13)
  {
    v44 = v12;
    v45 = v4;
    v46 = v6;
    v43 = v9;
    v49 = v3;
    __swift_project_boxed_opaque_existential_1(v48, v48[3]);
    v15 = sub_1BB8743B0();
    v17 = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    v42[1] = 0;
    if (qword_1ED3BA928 != -1)
      swift_once();
    v18 = (void *)qword_1ED4767B8;
    v19 = (void *)sub_1BB872970();
    v20 = objc_msgSend(v18, sel_dateFromString_, v19);

    v21 = v45;
    v22 = a1;
    if (v20)
    {
      v23 = v46;
      sub_1BB86C874();

      v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      v25 = (uint64_t)v44;
      v26 = v23;
      v27 = v49;
      v24(v44, v26, v49);
      v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
      v28(v25, 0, 1, v27);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v25, 1, v27) != 1)
      {
        swift_bridgeObjectRelease();
        v29 = v47;
        v30 = v25;
        v31 = v27;
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v24)(v29, v30, v31);
      }
    }
    else
    {
      v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
      v25 = (uint64_t)v44;
      v28((uint64_t)v44, 1, 1, v49);
    }
    sub_1BA76D750(v25);
    if (qword_1ED39E050 != -1)
      swift_once();
    v32 = (void *)qword_1ED4763C8;
    v33 = (void *)sub_1BB872970();
    v34 = objc_msgSend(v32, sel_dateFromString_, v33);

    v35 = v47;
    v36 = (uint64_t)v43;
    if (v34)
    {
      v37 = v46;
      sub_1BB86C874();

      v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      v38 = v37;
      v39 = v49;
      v24((char *)v36, v38, v49);
      v28(v36, 0, 1, v39);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v36, 1, v39) != 1)
      {
        swift_bridgeObjectRelease();
        v29 = v35;
        v30 = v36;
        v31 = v39;
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v24)(v29, v30, v31);
      }
    }
    else
    {
      v28((uint64_t)v43, 1, 1, v49);
    }
    sub_1BA76D750(v36);
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    v40 = sub_1BB87465C();
    sub_1BB1EB318();
    swift_allocError();
    *v41 = v15;
    v41[1] = v17;
    v41[2] = v40;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BA502FB0(_QWORD *a1)
{
  return FormatLineCap.encode(to:)(a1);
}

uint64_t FormatLineCap.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;
  _BYTE v26[24];
  uint64_t v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v23 = (char *)&v21 - v6;
  MEMORY[0x1E0C80A78](v7);
  v22 = (char *)&v21 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  v25 = *v1;
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v14 = sub_1BB86EB84();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED476C20);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16(v11, v15, v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v17 = v28;
  sub_1BA69F160((uint64_t)v11, (uint64_t)sub_1BA90CF04, 0, v12, v13);
  result = sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  if (!v17)
  {
    v19 = a1[3];
    v28 = a1[4];
    if (v25)
    {
      __swift_project_boxed_opaque_existential_1(a1, v19);
      v20 = (uint64_t)v23;
      v16(v23, v15, v14);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(a1, v19);
      v20 = (uint64_t)v22;
      v16(v22, v15, v14);
    }
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v20, (uint64_t)sub_1BA90CF04, 0, v19, v28);
    sub_1BA4A2E80(v20, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    sub_1BB8743E0();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  return result;
}

uint64_t sub_1BA503388()
{
  sub_1BA5033AC();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA5033AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 144);
  v2 = sub_1BB871680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  v4 = sub_1BB86FAD8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
  v6 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 168);
  v8 = sub_1BB872034();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return v0;
}

uint64_t _s8NewsFeed0B23SectionPositionProviderC07sectionD03for2inSiSS_5TeaUI9BlueprintVyxq_Gt0I10Foundation12IdentifiableRzAG9ModelableR_r0_lF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v23 = a1;
  v24 = a2;
  v25 = a4;
  v26 = a5;
  v27 = a6;
  v28 = a7;
  v11 = sub_1BB86FD0C();
  v22 = sub_1BB873A2C();
  v12 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v14 = (char *)&v21 - v13;
  v15 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v21 - v17;
  v25 = a4;
  v26 = a5;
  v27 = a6;
  v28 = a7;
  v19 = sub_1BB871680();
  sub_1BB871698();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v14, v11);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DBC7C8], v19);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB7B88], v11);
  sub_1BB87318C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v11);
  if ((v26 & 1) != 0)
    return 0;
  return v25;
}

_QWORD *initializeWithCopy for FeedGroupEntity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void sub_1BA50370C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA50374C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA5037B8 + 4 * byte_1BB9510F3[a2]))(0x676E696461656CLL);
}

uint64_t sub_1BA5037B8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x676E696461656CLL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

_QWORD *initializeWithCopy for SportsConfigResourceParameter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FeedGroupEntity.ManifestEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

id sub_1BA5038E8(uint64_t a1, char *a2)
{
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD aBlock[6];
  objc_super v21;
  _QWORD v22[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_1BB86E50C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v7);
  v22[3] = type metadata accessor for SocialLayerSharedItemCenter();
  v22[4] = &protocol witness table for SocialLayerSharedItemCenter;
  v22[0] = a1;
  *(_QWORD *)&a2[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_limit] = 250;
  v8 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock;
  v9 = a2;
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  *(_QWORD *)&a2[v8] = sub_1BB86DD50();
  v10 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager_fetchDeduper;
  v11 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870(&qword_1ED3B07F0, v6, MEMORY[0x1E0DB41A8]);
  sub_1BA539E4C(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9250, (uint64_t (*)(uint64_t))sub_1BA539E4C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  sub_1BA8417FC();
  swift_allocObject();
  *(_QWORD *)&v9[v10] = sub_1BB86E0E0();
  v12 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs;
  *(_QWORD *)&v9[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E10]), sel_init);
  v13 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_itemsByArticleID] = MEMORY[0x1E0DEE9E0];
  sub_1BB86C7D8();
  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_observers] = v11;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_viewContextsByArticleID] = v13;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed17SharedItemManager____lazy_storage___initializingPromise] = 0;
  sub_1BA4C010C((uint64_t)v22, (uint64_t)&v9[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter]);

  v21.receiver = v9;
  v21.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v21, sel_init);
  v15 = (void *)objc_opt_self();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v14;
  aBlock[4] = sub_1BA830E58;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_33;
  v17 = _Block_copy(aBlock);
  v18 = v14;
  swift_release();
  objc_msgSend(v15, sel_scheduleLowPriorityBlockForMainThread_, v17);

  _Block_release(v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v18;
}

uint64_t sub_1BA503BF8(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  _QWORD *v3;
  __int128 v4;
  __int128 v5;
  CFTimeInterval v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CFTimeInterval *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  CFTimeInterval *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v3 = *(_QWORD **)v2;
  v4 = a2[3];
  v28 = a2[2];
  v29 = v4;
  v30 = a2[4];
  v5 = a2[1];
  v26 = *a2;
  v27 = v5;
  v6 = CACurrentMediaTime();
  sub_1BA4A7654(v2, &v24);
  v7 = *(void **)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144));
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_1BB873E34();
  v9 = v24;
  v10 = v25;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v10;
  v11 = sub_1BB87330C();
  sub_1BB86EF44("Service fetching feed pool with cachePolicy=%{public}@", 54, 2, &dword_1BA493000, v7, v11, v8);
  swift_bridgeObjectRelease();
  v12 = v3[12];
  v13 = v3[10];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1BB86EC14();
  v14 = (CFTimeInterval *)swift_allocObject();
  *((_QWORD *)v14 + 2) = v13;
  v15 = v3[11];
  *((_QWORD *)v14 + 3) = v15;
  *((_QWORD *)v14 + 4) = v12;
  v16 = v3[13];
  *((_QWORD *)v14 + 5) = v16;
  *((_QWORD *)v14 + 6) = v7;
  v14[7] = v6;
  v17 = v7;
  v18 = (void *)sub_1BB86E854();
  sub_1BB873A2C();
  sub_1BB86E974();
  swift_release();
  swift_release();

  v19 = (CFTimeInterval *)swift_allocObject();
  *((_QWORD *)v19 + 2) = v13;
  *((_QWORD *)v19 + 3) = v15;
  *((_QWORD *)v19 + 4) = v12;
  *((_QWORD *)v19 + 5) = v16;
  *((_QWORD *)v19 + 6) = v17;
  v19[7] = v6;
  v20 = v17;
  v21 = (void *)sub_1BB86E854();
  v22 = sub_1BB86EA1C();
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_1BA503EC4(uint64_t a1, void (*a2)(_QWORD, double))
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = sub_1BB86E7E8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0, v5);
  sub_1BB86E5D8();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E0DB4A00], v3);
  sub_1BB86DCD8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1BA503F9C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA503FD0 + 4 * byte_1BB8AE4C9[*v0]))(0x6E656E6F706D6F63, 0xE900000000000074);
}

uint64_t sub_1BA503FD0()
{
  return 0x726F74617265706FLL;
}

uint64_t sub_1BA503FE8()
{
  return 0x65756C6176;
}

uint64_t sub_1BA503FFC()
{
  return 1885433183;
}

uint64_t sub_1BA50400C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1BB86E008();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1BB86DFFC();
}

uint64_t FormatPrefetchResources.all.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  swift_bridgeObjectRetain();
  v1 = swift_bridgeObjectRetain();
  sub_1BA5040A8(v1);
  return v3;
}

uint64_t sub_1BA5040A8(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BA6D25A4, type metadata accessor for FormatResource);
}

uint64_t sub_1BA5040BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v8[2];

  sub_1BA4CDF6C(0, &qword_1ED3B0728, (uint64_t (*)(void))sub_1BA5043FC, (uint64_t)&type metadata for GapViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v8 - v5;
  v8[1] = a1;
  swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB63C0], v3);
  sub_1BA504340(&qword_1ED3B05B0, &qword_1ED3B05B8, MEMORY[0x1E0DB5A10], MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BA504208(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD v9[2];

  sub_1BA4CDF6C(0, &qword_1ED3B0728, (uint64_t (*)(void))sub_1BA5043FC, (uint64_t)&type metadata for GapViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (_QWORD *)((char *)v9 - v5);
  v9[1] = a1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0x405E000000000000;
  *v6 = v7;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB63F0], v3);
  sub_1BA504340(&qword_1ED3B0698, &qword_1ED3B06A0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0], MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BA504340(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA504380(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA504380(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for GapViewLayout;
    v8[1] = &type metadata for GapViewLayout.Attributes;
    v8[2] = sub_1BA5043FC();
    v8[3] = sub_1BA504440();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BA5043FC()
{
  unint64_t result;

  result = qword_1ED3B3D88;
  if (!qword_1ED3B3D88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapViewLayout, &type metadata for GapViewLayout);
    atomic_store(result, (unint64_t *)&qword_1ED3B3D88);
  }
  return result;
}

unint64_t sub_1BA504440()
{
  unint64_t result;

  result = qword_1ED3B3D70;
  if (!qword_1ED3B3D70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapViewLayout.Attributes, &type metadata for GapViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3B3D70);
  }
  return result;
}

uint64_t sub_1BA504484()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5044B4 + 4 * byte_1BB8AF347[*v0]))(0x726F7463656C6573, 0xE800000000000000);
}

uint64_t sub_1BA5044B4()
{
  return 0x615272656E726F63;
}

unint64_t sub_1BA5044D4()
{
  return 0xD000000000000011;
}

unint64_t sub_1BA5044F0()
{
  return 0xD000000000000018;
}

uint64_t sub_1BA504528()
{
  return 1885433183;
}

uint64_t sub_1BA504538(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA7AE8FC(0, &qword_1ED3B94F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA51E158((unint64_t *)&qword_1ED3AAEA8, &qword_1ED3A6868, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BA504614(_QWORD *a1)
{
  return FormatSupplementary.Kind.encode(to:)(a1);
}

uint64_t FormatSupplementary.Kind.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  _BYTE v22[24];
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v19 = (char *)&v19 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - v8;
  v21 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476C20);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v9, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v15 = v24;
  sub_1BA69F160((uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, v10, v11);
  result = sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v15)
  {
    v17 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    v18 = (uint64_t)v20;
    v14(v20, v13, v12);
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v18, (uint64_t)sub_1BA90CF04, 0, v17, v24);
    sub_1BA4A2E80(v18, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    sub_1BB8743E0();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  return result;
}

uint64_t sub_1BA504918(_QWORD *a1)
{
  return FormatResizeConstraint.Dimension.encode(to:)(a1);
}

uint64_t FormatResizeConstraint.Dimension.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  _BYTE v22[24];
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v19 = (char *)&v19 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - v8;
  v21 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476C20);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v9, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v15 = v24;
  sub_1BA69F160((uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, v10, v11);
  result = sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v15)
  {
    v17 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    v18 = (uint64_t)v20;
    v14(v20, v13, v12);
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v18, (uint64_t)sub_1BA90CF04, 0, v17, v24);
    sub_1BA4A2E80(v18, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    sub_1BB8743E0();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  return result;
}

uint64_t sub_1BA504C28@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return FormatTagIconStyle.init(from:)(a1, a2);
}

uint64_t FormatTagIconStyle.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  char v31;
  __int128 v32;
  char v33;
  uint64_t v34;

  v3 = v2;
  v29 = a2;
  sub_1BAEC3BF8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC3C70();
  sub_1BA4A2870(&qword_1ED3D0D60, (uint64_t (*)(uint64_t))sub_1BAEC3C70, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_18:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v28 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v6;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v15 - 2);
      v19 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v20);
      *((_QWORD *)&v27 - 4) = &_s10CodingKeysON_25;
      *((_QWORD *)&v27 - 3) = sub_1BAEC3CF0();
      *((_QWORD *)&v27 - 2) = sub_1BA5050A0();
      *((_QWORD *)&v27 - 1) = sub_1BAEC3D34();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E726F018);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v12);
      goto LABEL_18;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v30 = 0uLL;
  v31 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v32 = 0uLL;
    v33 = 0;
    sub_1BAEC3D78();
    sub_1BB8740D4();
    v16 = v34;
  }
  else
  {
    v16 = 1;
  }
  v27 = xmmword_1BB8A1A10;
  v32 = xmmword_1BB8A1A10;
  v33 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v30 = v27;
    v31 = 0;
    sub_1BA69C280();
    sub_1BB8740D4();
    v17 = v34;
  }
  else
  {
    if (qword_1ED3C1DD0 != -1)
      swift_once();
    swift_beginAccess();
    v17 = qword_1ED3CF380;
    swift_retain();
  }
  sub_1BAE0FE14((void (*)(_QWORD))sub_1BAEC3BF8, (uint64_t *)&v32);
  v24 = v32;
  sub_1BAE0FF40((uint64_t *)&v32);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v6);
  v25 = v32;
  v26 = v29;
  *v29 = v16;
  *((_QWORD *)v26 + 1) = v17;
  *((_QWORD *)v26 + 2) = v24;
  *((_QWORD *)v26 + 3) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5050A0()
{
  unint64_t result;

  result = qword_1ED3C7ED8;
  if (!qword_1ED3C7ED8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C51B0, &_s10CodingKeysON_25);
    atomic_store(result, (unint64_t *)&qword_1ED3C7ED8);
  }
  return result;
}

uint64_t sub_1BA5050E4()
{
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4C20);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4CF0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA840BB0();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D4C38);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for FormatLayoutResizingProvider();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  sub_1BB86E5CC();
  return swift_release();
}

uint64_t sub_1BA505288(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BA5052D4()
{
  sub_1BA50537C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA505320()
{
  sub_1BA50537C();
  return sub_1BB872D60();
}

unint64_t sub_1BA50537C()
{
  unint64_t result;

  result = qword_1ED3A6A58;
  if (!qword_1ED3A6A58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7690, &_s10CodingTypeON_114);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A58);
  }
  return result;
}

uint64_t sub_1BA5053C0(uint64_t a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  unsigned __int16 v53;
  uint64_t v54;
  int v55;
  char v56;
  char v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  _BOOL8 v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  char v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  _BOOL8 v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  unint64_t v104;
  unint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int v110;
  int v111;
  uint64_t v112;
  uint64_t result;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  int64_t v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  _QWORD *v134;
  char v135;
  _QWORD *v136;
  _QWORD *v137;
  _QWORD *v138;

  swift_beginAccess();
  v119 = v1;
  v3 = *(unsigned __int8 *)(v1 + 48);
  if (v3 == 2)
    LOBYTE(v3) = *(_BYTE *)(a1 + 48);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 40);
  v117 = *(_QWORD *)(v1 + 32);
  swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 56);
  swift_beginAccess();
  v116 = a1;
  v8 = *(_QWORD *)(a1 + 56);
  v138 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v9 = *(_QWORD *)(v7 + 16);
  if (__OFADD__(v9, *(_QWORD *)(v8 + 16)))
    goto LABEL_81;
  v126 = *(_QWORD *)(v8 + 16);
  v114 = v4;
  v115 = v3;
  sub_1BA81E574();
  v120 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB8727C0();
  v137 = sub_1BA6E6D30(0, v9, 0, MEMORY[0x1E0DEE9D8]);
  v10 = *(_QWORD *)(v7 + 16);
  v125 = v6;
  v118 = v8;
  if (!v10)
    goto LABEL_20;
  swift_bridgeObjectRetain();
  v11 = (char *)(v7 + 67);
  do
  {
    v132 = v10;
    v12 = *(_QWORD *)(v11 - 35);
    v13 = *(_QWORD *)(v11 - 27);
    v135 = *(v11 - 19);
    v14 = *(_QWORD *)(v11 - 11);
    v15 = *(unsigned __int16 *)(v11 - 3) | (*(v11 - 1) << 16);
    v16 = *v11;
    swift_bridgeObjectRetain();
    sub_1BA771834(v14, v15);
    swift_bridgeObjectRetain();
    sub_1BA771834(v14, v15);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = sub_1BA6E35A8(v12, v13);
    v20 = v138[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v23 = v18;
    if (v138[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C8590();
    }
    else
    {
      sub_1BB4B89D8(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_1BA6E35A8(v12, v13);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_82;
      v19 = v24;
    }
    if ((v23 & 1) != 0)
    {
      v26 = v138[7] + 40 * v19;
      v128 = *(_QWORD *)(v26 + 24);
      v27 = *(unsigned __int16 *)(v26 + 32) | (*(unsigned __int8 *)(v26 + 34) << 16);
      swift_bridgeObjectRelease();
      sub_1BA771864(v128, v27);
      *(_QWORD *)v26 = v12;
      *(_QWORD *)(v26 + 8) = v13;
      *(_BYTE *)(v26 + 16) = v135;
      *(_QWORD *)(v26 + 24) = v14;
      *(_BYTE *)(v26 + 34) = BYTE2(v15);
      *(_WORD *)(v26 + 32) = v15;
      *(_BYTE *)(v26 + 35) = v16;
    }
    else
    {
      v138[(v19 >> 6) + 8] |= 1 << v19;
      v28 = (uint64_t *)(v138[6] + 16 * v19);
      *v28 = v12;
      v28[1] = v13;
      v29 = v138[7] + 40 * v19;
      *(_QWORD *)v29 = v12;
      *(_QWORD *)(v29 + 8) = v13;
      *(_BYTE *)(v29 + 16) = v135;
      *(_QWORD *)(v29 + 24) = v14;
      *(_BYTE *)(v29 + 34) = BYTE2(v15);
      *(_WORD *)(v29 + 32) = v15;
      *(_BYTE *)(v29 + 35) = v16;
      v30 = v138[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_77;
      v138[2] = v32;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = v137[2];
    v34 = v137[3];
    swift_bridgeObjectRetain();
    if (v33 >= v34 >> 1)
      v137 = sub_1BA6E6D30((_QWORD *)(v34 > 1), v33 + 1, 1, v137);
    v137[2] = v33 + 1;
    v35 = &v137[2 * v33];
    v35[4] = v12;
    v35[5] = v13;
    swift_bridgeObjectRelease();
    sub_1BA771864(v14, v15);
    v11 += 40;
    --v10;
  }
  while (v132 != 1);
  swift_bridgeObjectRelease();
  v6 = v125;
  v8 = v118;
LABEL_20:
  v36 = sub_1BA6E6D30(0, v126, 0, MEMORY[0x1E0DEE9D8]);
  v37 = *(_QWORD *)(v8 + 16);
  if (!v37)
    goto LABEL_57;
  swift_bridgeObjectRetain();
  v38 = (char *)(v8 + 67);
  while (2)
  {
    v42 = *(_QWORD *)(v38 - 35);
    v43 = *(_QWORD *)(v38 - 27);
    v130 = *(v38 - 19);
    v44 = *(_QWORD *)(v38 - 11);
    v45 = *(unsigned __int16 *)(v38 - 3) | (*(v38 - 1) << 16);
    v46 = *v38;
    v47 = v138[2];
    swift_bridgeObjectRetain();
    sub_1BA771834(v44, v45);
    v136 = v36;
    v129 = v44;
    v133 = v46;
    if (!v47)
      goto LABEL_38;
    swift_bridgeObjectRetain();
    v48 = sub_1BA6E35A8(v42, v43);
    if ((v49 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_38:
      swift_bridgeObjectRetain();
      sub_1BA771834(v44, v45);
      swift_bridgeObjectRetain();
      v66 = swift_isUniquelyReferenced_nonNull_native();
      v68 = sub_1BA6E35A8(v42, v43);
      v69 = v138[2];
      v70 = (v67 & 1) == 0;
      v71 = v69 + v70;
      if (__OFADD__(v69, v70))
        goto LABEL_76;
      v72 = v67;
      if (v138[3] >= v71)
      {
        if ((v66 & 1) == 0)
          sub_1BB4C8590();
      }
      else
      {
        sub_1BB4B89D8(v71, v66);
        v73 = sub_1BA6E35A8(v42, v43);
        if ((v72 & 1) != (v74 & 1))
          goto LABEL_82;
        v68 = v73;
      }
      if ((v72 & 1) != 0)
      {
        v75 = v138[7] + 40 * v68;
        v76 = *(_QWORD *)(v75 + 24);
        v77 = *(unsigned __int16 *)(v75 + 32) | (*(unsigned __int8 *)(v75 + 34) << 16);
        swift_bridgeObjectRelease();
        sub_1BA771864(v76, v77);
        *(_QWORD *)v75 = v42;
        *(_QWORD *)(v75 + 8) = v43;
        *(_BYTE *)(v75 + 16) = v130;
        *(_QWORD *)(v75 + 24) = v44;
        v45 = v45;
        *(_BYTE *)(v75 + 34) = BYTE2(v45);
        *(_WORD *)(v75 + 32) = v45;
        *(_BYTE *)(v75 + 35) = v133;
      }
      else
      {
        v138[(v68 >> 6) + 8] |= 1 << v68;
        v78 = (uint64_t *)(v138[6] + 16 * v68);
        *v78 = v42;
        v78[1] = v43;
        v79 = v138[7] + 40 * v68;
        *(_QWORD *)v79 = v42;
        *(_QWORD *)(v79 + 8) = v43;
        *(_BYTE *)(v79 + 16) = v130;
        *(_QWORD *)(v79 + 24) = v44;
        *(_BYTE *)(v79 + 34) = BYTE2(v45);
        *(_WORD *)(v79 + 32) = v45;
        *(_BYTE *)(v79 + 35) = v133;
        v80 = v138[2];
        v31 = __OFADD__(v80, 1);
        v81 = v80 + 1;
        if (v31)
          goto LABEL_78;
        v138[2] = v81;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = v136;
      v82 = v136[2];
      v83 = v136[3];
      swift_bridgeObjectRetain();
      v6 = v125;
      if (v82 >= v83 >> 1)
        v36 = sub_1BA6E6D30((_QWORD *)(v83 > 1), v82 + 1, 1, v136);
      v36[2] = v82 + 1;
      v84 = &v36[2 * v82];
      v84[4] = v42;
      v84[5] = v43;
      swift_bridgeObjectRelease();
      sub_1BA771864(v129, v45);
      goto LABEL_24;
    }
    v127 = v45;
    v50 = v138[7] + 40 * v48;
    v124 = *(_QWORD *)v50;
    v51 = *(unsigned __int8 *)(v50 + 16);
    v52 = *(_QWORD *)(v50 + 24);
    v53 = *(unsigned __int8 *)(v50 + 34);
    v54 = *(unsigned __int16 *)(v50 + 32) | (*(unsigned __int8 *)(v50 + 34) << 16);
    v55 = *(unsigned __int8 *)(v50 + 35);
    v122 = *(_QWORD *)(v50 + 8);
    swift_bridgeObjectRetain();
    sub_1BA771834(v52, v54);
    swift_bridgeObjectRelease();
    v56 = v130;
    if (v51 != 2)
      v56 = v51;
    v121 = v56;
    v131 = v52;
    v123 = v54;
    if (v53 > 0xFEu)
    {
      LODWORD(v54) = v127;
      sub_1BA771834(v44, v127);
      v52 = v44;
    }
    if (v55 == 3)
      LOBYTE(v55) = v133;
    swift_bridgeObjectRetain_n();
    sub_1BA771834(v131, v123);
    v57 = swift_isUniquelyReferenced_nonNull_native();
    v59 = sub_1BA6E35A8(v124, v122);
    v60 = v138[2];
    v61 = (v58 & 1) == 0;
    v62 = v60 + v61;
    if (__OFADD__(v60, v61))
      goto LABEL_79;
    v63 = v58;
    if (v138[3] >= v62)
    {
      if ((v57 & 1) == 0)
        sub_1BB4C8590();
    }
    else
    {
      sub_1BB4B89D8(v62, v57);
      v64 = sub_1BA6E35A8(v124, v122);
      if ((v63 & 1) != (v65 & 1))
        goto LABEL_82;
      v59 = v64;
    }
    if ((v63 & 1) != 0)
    {
      v39 = v138[7] + 40 * v59;
      v40 = *(_QWORD *)(v39 + 24);
      v41 = *(unsigned __int16 *)(v39 + 32) | (*(unsigned __int8 *)(v39 + 34) << 16);
      swift_bridgeObjectRelease();
      sub_1BA771864(v40, v41);
      *(_QWORD *)v39 = v124;
      *(_QWORD *)(v39 + 8) = v122;
      *(_BYTE *)(v39 + 16) = v121;
      *(_QWORD *)(v39 + 24) = v52;
      *(_BYTE *)(v39 + 34) = BYTE2(v54);
      *(_WORD *)(v39 + 32) = v54;
      *(_BYTE *)(v39 + 35) = v55;
    }
    else
    {
      v138[(v59 >> 6) + 8] |= 1 << v59;
      v85 = (uint64_t *)(v138[6] + 16 * v59);
      *v85 = v124;
      v85[1] = v122;
      v86 = v138[7] + 40 * v59;
      *(_QWORD *)v86 = v124;
      *(_QWORD *)(v86 + 8) = v122;
      *(_BYTE *)(v86 + 16) = v121;
      *(_QWORD *)(v86 + 24) = v52;
      *(_BYTE *)(v86 + 34) = BYTE2(v54);
      *(_WORD *)(v86 + 32) = v54;
      *(_BYTE *)(v86 + 35) = v55;
      v87 = v138[2];
      v31 = __OFADD__(v87, 1);
      v88 = v87 + 1;
      if (v31)
        goto LABEL_80;
      v138[2] = v88;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1BA771864(v131, v123);
    swift_bridgeObjectRelease();
    sub_1BA771864(v129, v127);
    v6 = v125;
    v36 = v136;
LABEL_24:
    v38 += 40;
    if (--v37)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
LABEL_57:
  swift_bridgeObjectRetain();
  v89 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v89);
  v90 = v36[2];
  v91 = v120;
  if (v90)
  {
    swift_bridgeObjectRetain();
    v92 = v36 + 5;
    v134 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (v138[2])
      {
        v93 = *(v92 - 1);
        v94 = *v92;
        swift_bridgeObjectRetain_n();
        v95 = sub_1BA6E35A8(v93, v94);
        if ((v96 & 1) != 0)
        {
          v97 = v138[7] + 40 * v95;
          v99 = *(_QWORD *)v97;
          v98 = *(_QWORD *)(v97 + 8);
          v100 = *(_BYTE *)(v97 + 16);
          v101 = *(_QWORD *)(v97 + 24);
          v102 = *(unsigned __int16 *)(v97 + 32) | (*(unsigned __int8 *)(v97 + 34) << 16);
          v103 = *(_BYTE *)(v97 + 35);
          swift_bridgeObjectRetain();
          sub_1BA771834(v101, v102);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v134 = sub_1BA81C4AC(0, v134[2] + 1, 1, v134);
          v105 = v134[2];
          v104 = v134[3];
          if (v105 >= v104 >> 1)
            v134 = sub_1BA81C4AC((_QWORD *)(v104 > 1), v105 + 1, 1, v134);
          v134[2] = v105 + 1;
          v106 = &v134[5 * v105];
          v106[4] = v99;
          v106[5] = v98;
          *((_BYTE *)v106 + 48) = v100;
          v106[7] = v101;
          *((_BYTE *)v106 + 66) = BYTE2(v102);
          *((_WORD *)v106 + 32) = v102;
          *((_BYTE *)v106 + 67) = v103;
          v91 = v120;
          v6 = v125;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v92 += 2;
      --v90;
    }
    while (v90);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v134 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v107 = *(_QWORD *)(v119 + 64);
  v108 = *(unsigned __int16 *)(v119 + 72) | (*(unsigned __int8 *)(v119 + 74) << 16);
  v109 = v107;
  v110 = *(unsigned __int16 *)(v119 + 72) | (*(unsigned __int8 *)(v119 + 74) << 16);
  if (*(unsigned __int8 *)(v119 + 74) == 255)
  {
    v109 = *(_QWORD *)(v116 + 64);
    v110 = *(unsigned __int16 *)(v116 + 72) | (*(unsigned __int8 *)(v116 + 74) << 16);
    sub_1BA771834(v109, v110);
  }
  v111 = *(unsigned __int8 *)(v119 + 75);
  if (v111 == 3)
    LOBYTE(v111) = *(_BYTE *)(v116 + 75);
  v112 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v112 + 16) = v114;
  *(_QWORD *)(v112 + 24) = v91;
  *(_QWORD *)(v112 + 32) = v117;
  *(_QWORD *)(v112 + 40) = v6;
  *(_BYTE *)(v112 + 48) = v115;
  swift_beginAccess();
  *(_QWORD *)(v112 + 56) = v134;
  *(_QWORD *)(v112 + 64) = v109;
  *(_BYTE *)(v112 + 74) = BYTE2(v110);
  *(_WORD *)(v112 + 72) = v110;
  *(_BYTE *)(v112 + 75) = v111;
  sub_1BA771834(v107, v108);
  return v112;
}

uint64_t sub_1BA505F7C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t FeedGroupEmitterOutput.shortDescription.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  sub_1BA66E2AC(v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  v5 = sub_1BB86E320();
  a3[3] = v5;
  a3[4] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3C80], v5);
  __swift_allocate_boxed_opaque_existential_0(a3);
  return sub_1BB86E314();
}

NewsFeed::FormatSymbolWeight_optional __swiftcall FormatSymbolWeight.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatSymbolWeight_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

NewsFeed::FormatTextAlignment_optional __swiftcall FormatTextAlignment.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatTextAlignment_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA5060F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingTextExpressionLogic.init(from:)(a1, a2);
}

uint64_t FormatBindingTextExpressionLogic.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  __int128 v23;
  uint64_t v24;

  v24 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA5066B8();
    v23 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E7268A28;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5066B8()
{
  unint64_t result;

  result = qword_1ED3CDB90;
  if (!qword_1ED3CDB90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFCF0, &_s10CodingTypeON_156);
    atomic_store(result, (unint64_t *)&qword_1ED3CDB90);
  }
  return result;
}

unint64_t sub_1BA5066FC()
{
  unint64_t result;

  result = qword_1ED3BB500;
  if (!qword_1ED3BB500)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Compare, &type metadata for FormatBindingTextExpressionLogic.Compare);
    atomic_store(result, (unint64_t *)&qword_1ED3BB500);
  }
  return result;
}

uint64_t sub_1BA506740@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPropertyDefinition.init(from:)(a1, a2);
}

uint64_t sub_1BA506754()
{
  sub_1BA5067FC();
  return sub_1BB872D0C();
}

uint64_t sub_1BA5067A0()
{
  sub_1BA5067FC();
  return sub_1BB872D60();
}

unint64_t sub_1BA5067FC()
{
  unint64_t result;

  result = qword_1ED3C7EB0;
  if (!qword_1ED3C7EB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C17B0, &_s10CodingTypeON_13);
    atomic_store(result, (unint64_t *)&qword_1ED3C7EB0);
  }
  return result;
}

uint64_t FeedConfigDecoder.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BB86DC60();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1BB86DC90();
  *v3 = sub_1BA502BF0;
  v3[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB2FF8], v0);
  swift_retain();
  sub_1BB86DC6C();
  swift_release();
  return v4;
}

uint64_t sub_1BA5068E8()
{
  sub_1BA506944();
  return sub_1BB872D60();
}

unint64_t sub_1BA506944()
{
  unint64_t result;

  result = qword_1ED3CBEF0;
  if (!qword_1ED3CBEF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AC254, &type metadata for FormatContentSlotItemObject.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3CBEF0);
  }
  return result;
}

void FeedModel<>.init(model:context:namespace:metadata:)(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for FeedModel();
}

uint64_t (*sub_1BA506A34(int *a1))()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*result)();
  uint64_t (**v14)();
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v11 = v3 + a1[13];
  *(_QWORD *)v11 = v5;
  *(_BYTE *)(v11 + 8) = v6;
  *(_BYTE *)(v11 + 9) = v7;
  *(_BYTE *)(v11 + 10) = v15;
  *(_BYTE *)(v11 + 11) = v9;
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v11 + 32) = v19;
  *(_QWORD *)(v11 + 40) = v18;
  *(_BYTE *)(v11 + 48) = v17;
  *(_QWORD *)(v11 + 56) = v16;
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(v8 + 64);
  v12 = (_QWORD *)(v3 + a1[14]);
  *v12 = v20;
  v12[1] = v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v3 + a1[15], v23, v2);
  result = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)result + 2) = v4;
  *((_QWORD *)result + 3) = v2;
  *((_QWORD *)result + 4) = v21;
  *((_QWORD *)result + 5) = v1;
  *((_QWORD *)result + 6) = v24;
  v14 = (uint64_t (**)())(v3 + a1[16]);
  *v14 = sub_1BA6DB9A0;
  v14[1] = result;
  return result;
}

uint64_t sub_1BA506B0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSlotItem.init(from:)(a1, a2);
}

uint64_t sub_1BA506B20(_QWORD *a1)
{
  return FormatTextNode.encode(to:)(a1);
}

void sub_1BA506B40(_QWORD *a1)
{
  FormatBindingURLExpressionLogic.encode(to:)(a1);
}

void FormatBindingURLExpressionLogic.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingURLExpressionLogic, v14, v11, (uint64_t)&type metadata for FormatBindingURLExpressionLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.SydroF, v12, (uint64_t)v9, v13, (uint64_t)&off_1E734BD60);
  __asm { BR              X9 }
}

uint64_t sub_1BA506CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3C6D50 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476BF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA506F40(0, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA506F40(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF5714;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA507064();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA507064()
{
  unint64_t result;

  result = qword_1ED3A9010;
  if (!qword_1ED3A9010)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6A68, &_s10CodingTypeON_120);
    atomic_store(result, (unint64_t *)&qword_1ED3A9010);
  }
  return result;
}

uint64_t sub_1BA5070A8(_QWORD *a1)
{
  return FormatIssueBinding.Image.encode(to:)(a1);
}

uint64_t FormatIssueBinding.Image.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatIssueBinding.Image, v16, v13, (uint64_t)&type metadata for FormatIssueBinding.Image, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.AzdenE, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD20);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED3C6D40 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476BC0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA507318(1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D40 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476BC0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA507318(0, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA507318(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF0F2C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA50743C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA50743C()
{
  unint64_t result;

  result = qword_1ED39FD60;
  if (!qword_1ED39FD60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF474, &_s5ImageO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED39FD60);
  }
  return result;
}

uint64_t sub_1BA507480(_QWORD *a1)
{
  return FormatImageAdjustmentFilter.encode(to:)(a1);
}

uint64_t FormatImageAdjustmentFilter.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  double v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  _QWORD v51[14];
  char *v52;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v51[13] = (char *)v51 - v8;
  MEMORY[0x1E0C80A78](v9);
  v51[12] = (char *)v51 - v10;
  MEMORY[0x1E0C80A78](v11);
  v51[11] = (char *)v51 - v12;
  MEMORY[0x1E0C80A78](v13);
  v51[10] = (char *)v51 - v14;
  MEMORY[0x1E0C80A78](v15);
  v51[9] = (char *)v51 - v16;
  MEMORY[0x1E0C80A78](v17);
  v51[8] = (char *)v51 - v18;
  MEMORY[0x1E0C80A78](v19);
  v51[7] = (char *)v51 - v20;
  MEMORY[0x1E0C80A78](v21);
  v51[6] = (char *)v51 - v22;
  MEMORY[0x1E0C80A78](v23);
  v51[5] = (char *)v51 - v24;
  MEMORY[0x1E0C80A78](v25);
  v51[4] = (char *)v51 - v26;
  MEMORY[0x1E0C80A78](v27);
  v51[3] = (char *)v51 - v28;
  MEMORY[0x1E0C80A78](v29);
  MEMORY[0x1E0C80A78](v30);
  v51[2] = (char *)v51 - v31;
  MEMORY[0x1E0C80A78](v32);
  v51[1] = (char *)v51 - v33;
  MEMORY[0x1E0C80A78](v34);
  v51[0] = (char *)v51 - v35;
  MEMORY[0x1E0C80A78](v36);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)v51 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = *(double *)v2;
  v41 = *(unsigned __int8 *)(v2 + 8);
  v42 = a1[3];
  v43 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v42);
  v44 = sub_1BA6B8518();
  v52 = v39;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatImageAdjustmentFilter, v45, v42, (uint64_t)&type metadata for FormatImageAdjustmentFilter, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v43, (uint64_t)v39, v44, (uint64_t)&off_1E734BD00);
  if (v41 == 1)
    __asm { BR              X9 }
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v46 = sub_1BB86EB84();
  v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1ED476C08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v6, v47, v46);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v48 = v40;
  v49 = (uint64_t)v52;
  sub_1BACE3960(16, (uint64_t)v6, v48);
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA508110(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFB1EC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA508234();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA508234()
{
  unint64_t result;

  result = qword_1ED3A7F90;
  if (!qword_1ED3A7F90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0B08, &_s10CodingTypeON_175);
    atomic_store(result, (unint64_t *)&qword_1ED3A7F90);
  }
  return result;
}

uint64_t sub_1BA508278(_QWORD *a1)
{
  return FormatDateFormat.encode(to:)(a1);
}

uint64_t FormatDateFormat.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v1;
  v15 = v1[1];
  v18 = v1[2];
  v17 = v1[3];
  v36 = v1[4];
  v37 = v17;
  v19 = v1[5];
  v34 = v15;
  v35 = v19;
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v22 = sub_1BA6B8518();
  v38 = v14;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatDateFormat, v23, v20, (uint64_t)&type metadata for FormatDateFormat, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v14, v22, (uint64_t)&off_1E734BD80);
  if (v18 == 1)
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v28 = sub_1BB86EB84();
    v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v29, v28);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v26 = (uint64_t)v38;
    sub_1BA508604(0, (uint64_t)v11);
    v27 = (uint64_t)v11;
  }
  else if (v18 == 2)
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v24 = sub_1BB86EB84();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v26 = (uint64_t)v38;
    sub_1BA508604(1, (uint64_t)v8);
    v27 = (uint64_t)v8;
  }
  else
  {
    LOWORD(v39) = v16;
    *((_QWORD *)&v39 + 1) = v34;
    v40 = v18;
    v41 = v37;
    v42 = v36;
    v43 = v35;
    if (qword_1ED3C2478 != -1)
      swift_once();
    v30 = sub_1BB86EB84();
    v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v5, v31, v30);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v26 = (uint64_t)v38;
    sub_1BAD040DC(2, &v39, (uint64_t)v5);
    v27 = (uint64_t)v5;
  }
  sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA508604(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF4038;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA508728();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA508728()
{
  unint64_t result;

  result = qword_1ED3A41A0;
  if (!qword_1ED3A41A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8450, &_s10CodingTypeON_107);
    atomic_store(result, (unint64_t *)&qword_1ED3A41A0);
  }
  return result;
}

uint64_t sub_1BA50876C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCustomItemDefinition.init(from:)(a1, a2);
}

uint64_t FormatCustomItemDefinition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v25 = a2;
  sub_1BAE8E5DC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE8E654();
  sub_1BA4A2870(&qword_1ED3D1200, (uint64_t (*)(uint64_t))sub_1BAE8E654, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v17 - 2);
      v19 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v13;
      MEMORY[0x1E0C80A78](v20);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_147;
      *(&v24 - 3) = sub_1BAE8E6D4();
      *(&v24 - 2) = sub_1BA508AA8();
      *(&v24 - 1) = sub_1BAE8E718();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71130((uint64_t)&unk_1E726B470);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5542F4();
  v26 = 0;
  v27 = 0;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA508AA8()
{
  unint64_t result;

  result = qword_1ED3CB848[0];
  if (!qword_1ED3CB848[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBD98, &_s10CodingKeysON_147);
    atomic_store(result, qword_1ED3CB848);
  }
  return result;
}

uint64_t sub_1BA508AEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatBindingDateTimeExpressionLogic.init(from:)(a1, a2);
}

uint64_t FormatBindingDateTimeExpressionLogic.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v3 = v2;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v19 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v20 = v19;
      *(_QWORD *)(v20 + 8) = v16;
      *(_QWORD *)(v20 + 16) = &unk_1E72695B0;
      *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v19, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA508E3C();
  v24 = 0;
  v25 = 0;
  sub_1BB8740D4();
  if ((_BYTE)v23)
  {
    if (v23 == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      v17 = 0;
      v18 = 12;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      v17 = 0;
      v18 = 13;
    }
  }
  else
  {
    v23 = xmmword_1BB87FC90;
    sub_1BA508DF8();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = v24;
    v17 = v25;
  }
  v22 = v26;
  *v26 = v18;
  v22[1] = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA508DF8()
{
  unint64_t result;

  result = qword_1ED3CF448;
  if (!qword_1ED3CF448)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpressionLogicCompare, &type metadata for FormatBindingDateTimeExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1ED3CF448);
  }
  return result;
}

unint64_t sub_1BA508E3C()
{
  unint64_t result;

  result = qword_1ED3CE918;
  if (!qword_1ED3CE918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEC78, &_s10CodingTypeON_143);
    atomic_store(result, (unint64_t *)&qword_1ED3CE918);
  }
  return result;
}

uint64_t sub_1BA508E80@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatLayeredMediaNodeBinding.init(from:)(a1, a2);
}

uint64_t FormatLayeredMediaNodeBinding.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA508EC0(a1, (void (*)(uint64_t))sub_1BA5091DC, (uint64_t)&_s10CodingTypeON_173, (uint64_t)&unk_1E724F750, a2);
}

uint64_t sub_1BA508EC0@<X0>(_QWORD *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  __int128 v34;
  char v35;

  v31 = a3;
  v32 = a4;
  v30 = a2;
  v33 = a5;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v28 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v12 = v5;
  if (v5)
  {
LABEL_13:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  v13 = v32;
  v14 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v15 = sub_1BB872874();
  LOBYTE(v14) = Dictionary<>.errorOnUnknownKeys.getter(v15);
  v16 = swift_bridgeObjectRelease();
  v17 = v33;
  v18 = v11;
  if ((v14 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (unint64_t *)(v19 + 40);
      while (1)
      {
        v22 = *v21;
        if (*v21 >= 4)
          break;
        v21 += 2;
        if (!--v20)
          goto LABEL_7;
      }
      v24 = *(v21 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v25 = v24;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v13;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v24, v22);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
      a1 = v29;
      goto LABEL_13;
    }
LABEL_7:
    v16 = swift_bridgeObjectRelease();
  }
  v30(v16);
  v34 = 0uLL;
  sub_1BB8740D4();
  v23 = v35;
  v34 = xmmword_1BB87FC90;
  if ((v35 & 1) != 0)
    sub_1BAE72F00();
  else
    sub_1BA509198();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  *v17 = v23;
  v27 = (uint64_t)v29;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

unint64_t sub_1BA509198()
{
  unint64_t result;

  result = qword_1ED3B0120;
  if (!qword_1ED3B0120)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.LayeredMedia, &type metadata for FormatHeadlineBinding.LayeredMedia);
    atomic_store(result, (unint64_t *)&qword_1ED3B0120);
  }
  return result;
}

unint64_t sub_1BA5091DC()
{
  unint64_t result;

  result = qword_1ED3CCBA8;
  if (!qword_1ED3CCBA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1880, &_s10CodingTypeON_173);
    atomic_store(result, (unint64_t *)&qword_1ED3CCBA8);
  }
  return result;
}

uint64_t sub_1BA509220@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDateTimeBinding.init(from:)(a1, a2);
}

uint64_t FormatDateTimeBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  __int128 v23;
  uint64_t v24;

  v3 = v2;
  v24 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA509684();
    v23 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X9 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726B510;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  a1 = v21;
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA509640()
{
  unint64_t result;

  result = qword_1ED3C9950;
  if (!qword_1ED3C9950)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.DateTime, &type metadata for FormatHeadlineBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1ED3C9950);
  }
  return result;
}

unint64_t sub_1BA509684()
{
  unint64_t result;

  result = qword_1ED3C9840;
  if (!qword_1ED3C9840)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBC70, &_s10CodingTypeON_106);
    atomic_store(result, (unint64_t *)&qword_1ED3C9840);
  }
  return result;
}

uint64_t sub_1BA5096C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingDateTimeExpressionLogicCompare.init(from:)(a1, a2);
}

uint64_t FormatBindingDateTimeExpressionLogicCompare.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE7D3C8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7D440();
  sub_1BA4A2870(&qword_1ED3D1450, (uint64_t (*)(uint64_t))sub_1BAE7D440, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v26 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_197;
      *(&v26 - 3) = sub_1BAE7D4C0();
      *(&v26 - 2) = sub_1BA509A38();
      *(&v26 - 1) = sub_1BAE7D504();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E7269600);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA63BE34();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BA509E14();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  *(_BYTE *)v12 = v18;
  *(_QWORD *)(v12 + 8) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA509A38()
{
  unint64_t result;

  result = qword_1ED3CF430;
  if (!qword_1ED3CF430)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEBF0, &_s10CodingKeysON_197);
    atomic_store(result, (unint64_t *)&qword_1ED3CF430);
  }
  return result;
}

uint64_t sub_1BA509A7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingDateTimeExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingDateTimeExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  __int128 v34;
  char v35;

  v3 = v2;
  v29 = a2;
  sub_1BAE83AD4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE83B4C();
  sub_1BA4A2870(&qword_1ED3D1350, (uint64_t (*)(uint64_t))sub_1BAE83B4C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v29;
  v13 = v7;
  v14 = v6;
  v15 = v9;
  if ((v11 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v29 = v13;
      v20 = *((_QWORD *)v18 - 2);
      v21 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *((_QWORD *)&v28 - 4) = &_s10CodingKeysON_177;
      *((_QWORD *)&v28 - 3) = sub_1BAE83BCC();
      *((_QWORD *)&v28 - 2) = sub_1BA509E9C();
      *((_QWORD *)&v28 - 1) = sub_1BAE83C10();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726A980);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA509E14();
  v34 = 0uLL;
  v35 = 0;
  sub_1BB8740D4();
  v19 = v32;
  v28 = xmmword_1BB8A1A10;
  v34 = xmmword_1BB8A1A10;
  v35 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v32 = v28;
    v33 = 0;
    sub_1BA509E58();
    sub_1BB8740D4();
    v27 = v30;
    v26 = v31;
  }
  else
  {
    v26 = 0;
    v27 = 13;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v14);
  *v12 = v19;
  v12[1] = v27;
  v12[2] = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA509E14()
{
  unint64_t result;

  result = qword_1ED3C6B90;
  if (!qword_1ED3C6B90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateTime, &type metadata for FormatDateTime);
    atomic_store(result, (unint64_t *)&qword_1ED3C6B90);
  }
  return result;
}

unint64_t sub_1BA509E58()
{
  unint64_t result;

  result = qword_1ED3CE920;
  if (!qword_1ED3CE920)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpressionLogic, &type metadata for FormatBindingDateTimeExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1ED3CE920);
  }
  return result;
}

unint64_t sub_1BA509E9C()
{
  unint64_t result;

  result = qword_1ED3CD528;
  if (!qword_1ED3CD528)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD8D8, &_s10CodingKeysON_177);
    atomic_store(result, (unint64_t *)&qword_1ED3CD528);
  }
  return result;
}

uint64_t sub_1BA509EE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatButtonNodeBinding.init(from:)(a1, a2);
}

uint64_t FormatButtonNodeBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  __int128 v22;

  v3 = v2;
  v21[1] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v21[0] = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA50A2C4();
    v22 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E726AD90;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = (_QWORD *)v21[0];
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA50A2C4()
{
  unint64_t result;

  result = qword_1ED3CA3A0;
  if (!qword_1ED3CA3A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCEA8, &_s10CodingTypeON_117);
    atomic_store(result, (unint64_t *)&qword_1ED3CA3A0);
  }
  return result;
}

unint64_t sub_1BA50A308()
{
  unint64_t result;

  result = qword_1ED3BE968;
  if (!qword_1ED3BE968)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Action, &type metadata for FormatHeadlineBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1ED3BE968);
  }
  return result;
}

uint64_t sub_1BA50A34C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.Bool.init(from:)(a1, a2);
}

uint64_t FormatGroupBinding.Bool.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA50A934();
    v24 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E726BB90;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = v22;
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA50A934()
{
  unint64_t result;

  result = qword_1ED3C7C60;
  if (!qword_1ED3C7C60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAC70, &_s10CodingTypeON_96);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C60);
  }
  return result;
}

unint64_t sub_1BA50A978()
{
  unint64_t result;

  result = qword_1ED3B4A78;
  if (!qword_1ED3B4A78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Bool, &type metadata for FormatTagBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED3B4A78);
  }
  return result;
}

_QWORD *sub_1BA50A9BC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD v21[2];
  _QWORD *v22;
  uint64_t v23;

  v2 = v1;
  v21[1] = *v1;
  v22 = (_QWORD *)a1;
  v3 = sub_1BB873450();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB87342C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v9);
  sub_1BA81C3DC();
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 24) = 0;
  v11 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v1[2] = v10;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  sub_1BB872640();
  v23 = v11;
  sub_1BA50AD30((unint64_t *)&unk_1ED3B9840, 255, v8, MEMORY[0x1E0DEF828]);
  sub_1BA81D804(0, (unint64_t *)&unk_1ED3B9650, (void (*)(uint64_t))v8);
  sub_1BA81D7A4();
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v3);
  v1[8] = sub_1BB87348C();
  if (qword_1ED3CEAA0 != -1)
    swift_once();
  v12 = qword_1ED3CEA88;
  v13 = unk_1ED3CEA90;
  v14 = (void *)qword_1ED3CEA98;
  sub_1BA81C450();
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 40) = 0;
  *(_QWORD *)(v15 + 16) = v12;
  *(_QWORD *)(v15 + 24) = v13;
  *(_QWORD *)(v15 + 32) = v14;
  v2[9] = v15;
  v16 = v22;
  sub_1BA4C010C((uint64_t)v22, (uint64_t)(v2 + 3));
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_1BA50AD30(&qword_1ED3CEAA8, v17, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastoreManager, (uint64_t)&unk_1BB952284);
  swift_bridgeObjectRetain();
  sub_1BA6E9BC8(v13);
  v18 = v14;
  swift_retain();
  sub_1BB86EE6C();
  swift_release();
  if (objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
  {
    sub_1BB86D174();
    swift_allocObject();
    swift_weakInit();
    sub_1BA50AD30(&qword_1ED3CEAB0, v19, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastoreManager, (uint64_t)&unk_1BB952244);
    sub_1BB86D21C();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v2;
}

uint64_t sub_1BA50AD30(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for LiveActivityWebEmbedDatastoreManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedScaling()
{
  return objc_opt_self();
}

uint64_t FormatIssueCoverNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  unsigned __int8 v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t *v111;
  _QWORD *v112;
  __int128 v113;
  char v114;
  __int128 v115;
  char v116;
  __int128 v117;
  char v118;
  __int128 v119;
  char v120;
  uint64_t v121;

  v3 = v2;
  v4 = v1;
  v6 = *v1;
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v99 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v100 = (char *)&v95 - v10;
  MEMORY[0x1E0C80A78](v11);
  v101 = (char *)&v95 - v12;
  MEMORY[0x1E0C80A78](v13);
  v102 = (char *)&v95 - v14;
  MEMORY[0x1E0C80A78](v15);
  v103 = (char *)&v95 - v16;
  MEMORY[0x1E0C80A78](v17);
  v104 = (char *)&v95 - v18;
  MEMORY[0x1E0C80A78](v19);
  v105 = (char *)&v95 - v20;
  MEMORY[0x1E0C80A78](v21);
  v106 = (char *)&v95 - v22;
  MEMORY[0x1E0C80A78](v23);
  v107 = (char *)&v95 - v24;
  MEMORY[0x1E0C80A78](v25);
  v108 = (char *)&v95 - v26;
  MEMORY[0x1E0C80A78](v27);
  v109 = (char *)&v95 - v28;
  MEMORY[0x1E0C80A78](v29);
  v110 = (char *)&v95 - v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v95 - v32;
  sub_1BAE73BC0(0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v95 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1[3];
  v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v38);
  v39 = sub_1BAE73CB0();
  v40 = sub_1BA4A2870(&qword_1ED3AD888, (uint64_t (*)(uint64_t))sub_1BAE73CB0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v6, v41, v38, v6, v39, (uint64_t)&type metadata for FormatVersions.StarSky, v37, (uint64_t)v36, v40, (uint64_t)&off_1E734BDC0);
  swift_beginAccess();
  v42 = v4[2];
  v43 = v4[3];
  v111 = v4;
  v44 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v44 != -1)
    swift_once();
  v45 = sub_1BB86EB84();
  v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1ED476C08);
  v47 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
  v47(v33, v46, v45);
  v48 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v49 = v42;
  v50 = v36;
  sub_1BAD265E8(v49, v43, 0, 0, 0, (uint64_t)v33, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE4CCCC, (uint64_t (*)(uint64_t))sub_1BAE73C38, &qword_1ED3AEA50);
  if (v3)
  {
    sub_1BA4A2E80((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
LABEL_9:
    v59 = (uint64_t)v50;
    return sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))sub_1BAE73BC0);
  }
  sub_1BA4A2E80((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v51 = v111;
  v52 = v111[4];
  v53 = (uint64_t)v110;
  v47(v110, v46, v45);
  swift_storeEnumTagMultiPayload();
  sub_1BA71CA6C(v52);
  sub_1BAD19D6C(v52, 1, 0, 0, v53, (uint64_t)sub_1BA90CF04, 0);
  v96 = v46;
  v98 = v48;
  v97 = v47;
  sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
  sub_1BA719718(v52);
  v54 = v51[5];
  v55 = qword_1ED3C6D50;
  swift_retain();
  if (v55 != -1)
    swift_once();
  v56 = __swift_project_value_buffer(v45, (uint64_t)qword_1ED476BF0);
  v57 = (uint64_t)v109;
  v58 = v97;
  v97(v109, v56, v45);
  swift_storeEnumTagMultiPayload();
  sub_1BAD522AC(v54, 2, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
  swift_release();
  swift_beginAccess();
  v61 = (uint64_t)v108;
  v62 = v96;
  v58(v108, v96, v45);
  swift_storeEnumTagMultiPayload();
  v63 = swift_bridgeObjectRetain();
  sub_1BAD29670(v63, 3, 0, 0);
  sub_1BA4A2E80(v61, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v64 = (uint64_t)v107;
  v58(v107, v62, v45);
  swift_storeEnumTagMultiPayload();
  v65 = swift_retain();
  sub_1BAD524BC(v65, 4, 0, 0, v64, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
  swift_release();
  v66 = (uint64_t)v106;
  v58(v106, v62, v45);
  swift_storeEnumTagMultiPayload();
  v67 = swift_retain();
  sub_1BAD526D4(v67, 5, 0, 0, v66, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v66, type metadata accessor for FormatVersionRequirement);
  swift_release();
  v110 = 0;
  v68 = v51[9];
  v69 = (uint64_t)v105;
  v58(v105, v62, v45);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  v70 = v110;
  sub_1BAD19EC8(v68, 6, 0, 0, v69, (uint64_t)sub_1BA90CF04, 0);
  if (v70)
  {
    sub_1BA4A2E80(v69, type metadata accessor for FormatVersionRequirement);
    swift_release();
    goto LABEL_9;
  }
  sub_1BA4A2E80(v69, type metadata accessor for FormatVersionRequirement);
  swift_release();
  swift_beginAccess();
  v71 = v51[10];
  v72 = (uint64_t)v104;
  v58(v104, v62, v45);
  swift_storeEnumTagMultiPayload();
  if (v71)
  {
    v73 = sub_1BAE4CCCC(v72, 7, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v74 = (uint64_t)v103;
    if ((v73 & 1) != 0)
    {
      v119 = xmmword_1BB8D2DB0;
      v120 = 0;
      *(_QWORD *)&v117 = v71;
      sub_1BAE73C38();
      sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
  }
  else
  {
    v74 = (uint64_t)v103;
  }
  sub_1BA4A2E80((uint64_t)v104, type metadata accessor for FormatVersionRequirement);
  swift_beginAccess();
  v75 = v51[11];
  v58((char *)v74, v62, v45);
  swift_storeEnumTagMultiPayload();
  if (v75 != 0x8000000000000000)
  {
    sub_1BA67D3F4(v75);
    if ((sub_1BAE4CCCC(v74, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v110 = (char *)v45;
      v117 = xmmword_1BB8D2DD0;
      v118 = 0;
      *(_QWORD *)&v115 = v75;
      sub_1BAE73C38();
      sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
      sub_1BA84B088();
      sub_1BB874464();
      v51 = v111;
      v45 = (uint64_t)v110;
    }
    else
    {
      v51 = v111;
    }
    v58 = v97;
    v74 = (uint64_t)v103;
  }
  sub_1BA4A2E80(v74, type metadata accessor for FormatVersionRequirement);
  sub_1BA6EEDB4(v75);
  swift_beginAccess();
  v76 = *((_BYTE *)v51 + 96);
  if (qword_1ED3C6D70 != -1)
    swift_once();
  v77 = __swift_project_value_buffer(v45, (uint64_t)qword_1ED476C50);
  v78 = (uint64_t)v102;
  v58(v102, v77, v45);
  swift_storeEnumTagMultiPayload();
  if ((v76 & 1) != 0)
  {
    v110 = 0;
  }
  else
  {
    v79 = sub_1BAE4CCCC(v78, 9, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v110 = 0;
    if ((v79 & 1) != 0)
    {
      v115 = xmmword_1BB8D2DE0;
      v116 = 0;
      LOBYTE(v113) = 0;
      sub_1BAE73C38();
      sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
      v80 = v110;
      sub_1BB874464();
      v110 = v80;
      if (v80)
      {
        sub_1BA4A2E80((uint64_t)v102, type metadata accessor for FormatVersionRequirement);
        goto LABEL_9;
      }
    }
    v51 = v111;
    v58 = v97;
  }
  sub_1BA4A2E80((uint64_t)v102, type metadata accessor for FormatVersionRequirement);
  v81 = v51[13];
  v82 = *((_BYTE *)v51 + 112);
  v83 = (uint64_t)v101;
  v58(v101, v62, v45);
  swift_storeEnumTagMultiPayload();
  v84 = v110;
  sub_1BAD528EC(v81, v82, 10, 0, 0, v83, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v83, type metadata accessor for FormatVersionRequirement);
  if (v84)
    goto LABEL_9;
  swift_beginAccess();
  v85 = v51[15];
  v58(v100, v62, v45);
  swift_storeEnumTagMultiPayload();
  v86 = *(_QWORD *)(v85 + 16);
  swift_bridgeObjectRetain();
  if (v86)
  {
    v87 = (uint64_t)v50;
    v88 = sub_1BAE4CCCC((uint64_t)v100, 11, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    if ((v88 & 1) != 0)
    {
      v113 = xmmword_1BB8D2E00;
      v114 = 0;
      v89 = swift_bridgeObjectRetain();
      v90 = sub_1BA67F4CC(v89);
      swift_bridgeObjectRelease();
      v112 = v90;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v112, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v121 = (uint64_t)v112;
      sub_1BAE73C38();
      v110 = v91;
      sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
      v92 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v92, MEMORY[0x1E0DEA970]);
      sub_1BB874464();
      swift_release();
    }
  }
  else
  {
    v87 = (uint64_t)v50;
  }
  sub_1BA4A2E80((uint64_t)v100, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v93 = *((_BYTE *)v111 + 128);
  v94 = (uint64_t)v99;
  v97(v99, v96, v45);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1A024(v93, 12, 0, 0, v94, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v94, type metadata accessor for FormatVersionRequirement);
  v59 = v87;
  return sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))sub_1BAE73BC0);
}

uint64_t sub_1BA50BCE0(_QWORD *a1, unint64_t *a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(_BYTE *, uint64_t))
{
  uint64_t result;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, a2);
  result = sub_1BB86DF48();
  if (v11)
  {
    a4(0);
    v9 = swift_allocObject();
    a5(v10, v9 + 16);
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA50BD98(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA7B0CB8(0, (unint64_t *)&qword_1ED3B9420, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA51DF80(&qword_1ED39BE60, &qword_1ED39B170, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BA50BE74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t result;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v92;

  v87 = a1;
  sub_1BA50CAF0(0, &qword_1ED39A6E0, &qword_1ED39A6D8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0]);
  MEMORY[0x1E0C80A78](v1);
  v86 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v85 = (char *)&v74 - v4;
  sub_1BA50CAF0(0, &qword_1ED39A6F0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8]);
  MEMORY[0x1E0C80A78](v5);
  v83 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v81 = (char *)&v74 - v8;
  sub_1BA841114();
  MEMORY[0x1E0C80A78](v9);
  v78 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v77 = (char *)&v74 - v12;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED39A6C0, (void (*)(uint64_t))sub_1BA841074);
  MEMORY[0x1E0C80A78](v13);
  v76 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v74 - v16;
  sub_1BA4A3FB4(0, &qword_1ED39A6B0, sub_1BA841178);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v74 - v22;
  v24 = MEMORY[0x1E0DEA968];
  v25 = MEMORY[0x1E0DB2EC0];
  sub_1BA50CAF0(0, (unint64_t *)&qword_1ED39A6D0, &qword_1ED39A6C8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v74 - v30;
  sub_1BA50CAA8(0, &qword_1ED39A6C8, v24, v25, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v33 = v32;
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v90 = v32;
  v91 = v34;
  v88 = v31;
  v34(v31, 1, 1, v32);
  v89 = v28;
  v34(v28, 1, 1, v33);
  v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8];
  sub_1BA50CAA8(0, &qword_1ED39A708, v24, v25, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  v92 = v36;
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A670, v24, v25, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v84 = sub_1BB86F058();
  sub_1BA841178(0);
  v38 = v37;
  v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v39(v23, 1, 1, v37);
  v39(v20, 1, 1, v38);
  sub_1BA50CC40(0, &qword_1ED39A700, v35);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA84122C(0);
  swift_allocObject();
  v82 = sub_1BB86F058();
  v39(v23, 1, 1, v38);
  v39(v20, 1, 1, v38);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v80 = sub_1BB86F058();
  sub_1BA841074();
  v41 = v40;
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v42(v17, 1, 1, v40);
  v43 = v76;
  v42(v76, 1, 1, v41);
  sub_1BA5AA4C4(0, (unint64_t *)&qword_1ED39A710, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA84118C();
  swift_allocObject();
  v79 = sub_1BB86F058();
  v42(v17, 1, 1, v41);
  v42(v43, 1, 1, v41);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v76 = (char *)sub_1BB86F058();
  v45 = v90;
  v44 = v91;
  v91(v88, 1, 1, v90);
  v44(v89, 1, 1, v45);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v75 = sub_1BB86F058();
  sub_1BA50CB54(0, &qword_1ED3A3C40, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2C88]);
  v47 = v46;
  v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
  v49 = v77;
  v48(v77, 1, 1, v46);
  v50 = v78;
  v48(v78, 1, 1, v47);
  sub_1BA50CB54(0, &qword_1ED3A3CB0, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CB54(0, &qword_1ED3A3BD8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v74 = sub_1BB86F058();
  v48(v49, 1, 1, v47);
  v48(v50, 1, 1, v47);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v78 = (char *)sub_1BB86F058();
  v51 = MEMORY[0x1E0DEB418];
  v52 = MEMORY[0x1E0DB2EE8];
  sub_1BA50CAA8(0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v54 = v53;
  v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
  v56 = v81;
  v55(v81, 1, 1, v53);
  v57 = v83;
  v55(v83, 1, 1, v54);
  sub_1BA50CAA8(0, &qword_1ED39A720, v51, v52, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A688, v51, v52, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v58 = sub_1BB86F058();
  v55(v56, 1, 1, v54);
  v55(v57, 1, 1, v54);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v59 = sub_1BB86F058();
  v60 = MEMORY[0x1E0DEAFA0];
  v61 = MEMORY[0x1E0DB2ED0];
  sub_1BA50CAA8(0, &qword_1ED39A6D8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v63 = v62;
  v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56);
  v64(v85, 1, 1, v62);
  v64(v86, 1, 1, v63);
  sub_1BA50CAA8(0, &qword_1ED39A718, v60, v61, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A680, v60, v61, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v65 = sub_1BB86F058();
  v67 = v90;
  v66 = v91;
  v91(v88, 1, 1, v90);
  v66(v89, 1, 1, v67);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  result = sub_1BB86F058();
  v69 = v87;
  v70 = v82;
  *v87 = v84;
  v69[1] = v70;
  v71 = v79;
  v69[2] = v80;
  v69[3] = v71;
  v72 = v75;
  v69[4] = (uint64_t)v76;
  v69[5] = v72;
  v73 = v78;
  v69[6] = v74;
  v69[7] = (uint64_t)v73;
  v69[8] = v58;
  v69[9] = v59;
  v69[10] = v65;
  v69[11] = result;
  return result;
}

void sub_1BA50CAA8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BA50CAF0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA50CAA8(255, a3, a4, a5, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
    v6 = sub_1BB873A2C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BA50CB54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A10E8, (uint64_t (*)(void))sub_1BA5C6DD8, (uint64_t)&type metadata for FeedBlobEntity, MEMORY[0x1E0DB29F0]);
    v7 = v6;
    v8 = sub_1BA50CBD8();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BA50CBD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A3C18;
  if (!qword_1ED3A3C18)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A10E8, (uint64_t (*)(void))sub_1BA5C6DD8, (uint64_t)&type metadata for FeedBlobEntity, MEMORY[0x1E0DB29F0]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB2A00], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A3C18);
  }
  return result;
}

void sub_1BA50CC40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_1BB86C8B0();
    v7 = sub_1BA4A2870(&qword_1ED39A470, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0DB2910]);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BA50CCBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA50CCD0(a1, a2);
}

uint64_t sub_1BA50CCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v5 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_1BA50CDF0(a1, v2 + ((v5 + 32) & ~v5), a2);
}

uint64_t sub_1BA50CDF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;

  v16 = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_1BB873A2C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v15 - v8, a1, v6);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) == 1)
  {
    v12 = a3;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v12 = a3;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v16, AssociatedTypeWitness, AssociatedConformanceWitness);
    v11 = 0;
    v7 = v10;
    v6 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v12, v11, 1, AssociatedTypeWitness);
}

uint64_t sub_1BA50CFA0(_QWORD *a1)
{
  return FormatImageAdjustmentBlend.encode(to:)(a1);
}

uint64_t FormatImageAdjustmentBlend.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[136];
  __int128 v32[8];
  char v33;
  _BYTE v34[136];
  _BYTE v35[136];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v31[-v7 - 8];
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BA53BAD8(v1, (uint64_t)v34);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatImageAdjustmentBlend, v15, v12, (uint64_t)&type metadata for FormatImageAdjustmentBlend, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v13, (uint64_t)v11, v14, (uint64_t)&off_1E734BD00);
  sub_1BA53BAD8((uint64_t)v34, (uint64_t)v35);
  if (sub_1BA895ED8((uint64_t)v35) == 1)
  {
    v16 = sub_1BA895EE4((uint64_t)v35);
    v17 = *(_QWORD *)v16;
    v18 = *(_BYTE *)(v16 + 8);
    sub_1BA53BAD8((uint64_t)v34, (uint64_t)v31);
    sub_1BA895EE4((uint64_t)v31);
    v19 = qword_1ED3C6D70;
    swift_retain();
    if (v19 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C50);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA50D2E0(1, v17, v18, (uint64_t)v5);
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    return sub_1BAC68720((uint64_t)v34, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769654);
  }
  else
  {
    v23 = sub_1BA895EE4((uint64_t)v35);
    v24 = *(_OWORD *)(v23 + 112);
    v32[6] = *(_OWORD *)(v23 + 96);
    v32[7] = v24;
    v33 = *(_BYTE *)(v23 + 128);
    v25 = *(_OWORD *)(v23 + 48);
    v32[2] = *(_OWORD *)(v23 + 32);
    v32[3] = v25;
    v26 = *(_OWORD *)(v23 + 80);
    v32[4] = *(_OWORD *)(v23 + 64);
    v32[5] = v26;
    v27 = *(_OWORD *)(v23 + 16);
    v32[0] = *(_OWORD *)v23;
    v32[1] = v27;
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v28 = sub_1BB86EB84();
    v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C38);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v8, v29, v28);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACE3F08(0, v32, (uint64_t)v8);
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
}

uint64_t sub_1BA50D2E0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v7 = a1 & 1;
  v19 = a1 & 1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF1BAC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA50D48C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50D448();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA50D448()
{
  unint64_t result;

  result = qword_1ED3A04B8;
  if (!qword_1ED3A04B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend.ColorData, &type metadata for FormatImageAdjustmentBlend.ColorData);
    atomic_store(result, (unint64_t *)&qword_1ED3A04B8);
  }
  return result;
}

unint64_t sub_1BA50D48C()
{
  unint64_t result;

  result = qword_1ED3A7C58;
  if (!qword_1ED3A7C58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAAB8, &_s10CodingTypeON_78);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C58);
  }
  return result;
}

uint64_t sub_1BA50D4D0()
{
  sub_1BA50D578();
  return sub_1BB872D0C();
}

uint64_t sub_1BA50D51C()
{
  sub_1BA50D578();
  return sub_1BB872D60();
}

unint64_t sub_1BA50D578()
{
  unint64_t result;

  result = qword_1ED3C77A8;
  if (!qword_1ED3C77A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2550, &_s10CodingTypeON_162);
    atomic_store(result, (unint64_t *)&qword_1ED3C77A8);
  }
  return result;
}

uint64_t sub_1BA50D5BC()
{
  sub_1BA50D618();
  return sub_1BB872D60();
}

unint64_t sub_1BA50D618()
{
  unint64_t result;

  result = qword_1ED3BDD78;
  if (!qword_1ED3BDD78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorderInset, &type metadata for FormatBorderInset);
    atomic_store(result, (unint64_t *)&qword_1ED3BDD78);
  }
  return result;
}

uint64_t FormatNodeCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t initializeWithCopy for FormatCustomNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA50D6EC()
{
  sub_1BB8745CC();
  sub_1BA50D72C();
  return sub_1BB874608();
}

uint64_t sub_1BA50D72C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA50D7EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA50D81C + 4 * byte_1BB8AEDCC[*v0]))(0x676E69646E6962, 0xE700000000000000);
}

uint64_t sub_1BA50D81C()
{
  return 1702521203;
}

uint64_t sub_1BA50D82C()
{
  return 0x656C797473;
}

uint64_t sub_1BA50D840()
{
  return 1885433183;
}

uint64_t sub_1BA50D850()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA50D880 + 4 * byte_1BB8AEDC6[*v0]))(0x726F7463656C6573, 0xE800000000000000);
}

uint64_t sub_1BA50D880()
{
  return 0x6168706C61;
}

uint64_t sub_1BA50D894()
{
  return 0x73736572676F7270;
}

uint64_t sub_1BA50D8B8()
{
  return 0x6C6F436B63617274;
}

unint64_t sub_1BA50D8D4()
{
  return 0xD000000000000018;
}

uint64_t sub_1BA50D8F0()
{
  return 1885433183;
}

uint64_t sub_1BA50D900@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRegex.init(from:)(a1, a2);
}

uint64_t FormatRegex.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD v22[4];
  uint64_t v23;

  v23 = a2;
  sub_1BA4D82D0(0);
  v21 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatRegex();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (v2)
  {
    v16 = (uint64_t)a1;
  }
  else
  {
    v19 = v5;
    v20 = a1;
    v18 = (uint64_t *)v10;
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    v11 = sub_1BB8743B0();
    v13 = v12;
    swift_bridgeObjectRetain();
    sub_1BB86EE30();
    v15 = v18;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))((char *)v18 + *(int *)(v8 + 20), v7, v21);
    *v15 = v11;
    v15[1] = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    sub_1BA50DAFC((uint64_t)v15, v23);
    v16 = (uint64_t)v20;
  }
  return __swift_destroy_boxed_opaque_existential_1(v16);
}

uint64_t type metadata accessor for FormatRegex()
{
  uint64_t result;

  result = qword_1ED3C6698;
  if (!qword_1ED3C6698)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA50DAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatRegex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA50DB40(_QWORD *a1)
{
  FormatOptionsNodeStatementBinding.encode(to:)(a1);
}

void FormatOptionsNodeStatementBinding.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[18];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v21[3] = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v21[2] = (char *)v21 - v6;
  MEMORY[0x1E0C80A78](v7);
  v21[1] = (char *)v21 - v8;
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v21[6] = v1[1];
  v21[7] = v14;
  v15 = v1[3];
  v21[4] = v1[2];
  v21[5] = v15;
  v16 = *((unsigned __int16 *)v1 + 24);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BA6B8518();
  v21[17] = v13;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatOptionsNodeStatementBinding, v20, v17, (uint64_t)&type metadata for FormatOptionsNodeStatementBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Sydro, v18, (uint64_t)v13, v19, (uint64_t)&off_1E734BD40);
  __asm { BR              X10 }
}

uint64_t sub_1BA50DCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D20 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476B78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BACDFAC0(0, *(_QWORD *)(v1 - 152), *(_QWORD *)(v1 - 160), v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA50E068(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[56];

  v16[55] = a1;
  sub_1BAE79BFC(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEEC38;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA50E1D8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA634D18();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA50E1D8()
{
  unint64_t result;

  result = qword_1ED3A9930;
  if (!qword_1ED3A9930)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD310, &_s10CodingTypeON_54);
    atomic_store(result, (unint64_t *)&qword_1ED3A9930);
  }
  return result;
}

uint64_t sub_1BA50E21C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDateTimeOffset.init(from:)(a1, a2);
}

uint64_t FormatDateTimeOffset.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v25 = a2;
  sub_1BAE768C4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7693C();
  sub_1BA4A2870(&qword_1ED3D0EA0, (uint64_t (*)(uint64_t))sub_1BAE7693C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v16 - 2);
      v19 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v7;
      MEMORY[0x1E0C80A78](v20);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_230;
      *(&v25 - 3) = sub_1BAE769BC();
      *(&v25 - 2) = sub_1BA50E5B0();
      *(&v25 - 1) = sub_1BAE76A00();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E7254F48);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BA69C018();
  v26 = 0uLL;
  v27 = 0;
  sub_1BB8740D4();
  v17 = v28;
  v26 = xmmword_1BB8A1A10;
  v27 = 0;
  sub_1BA509E14();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = v28;
  *v12 = v17;
  v12[1] = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA50E5B0()
{
  unint64_t result;

  result = qword_1ED3C8C58;
  if (!qword_1ED3C8C58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D08F8, &_s10CodingKeysON_230);
    atomic_store(result, (unint64_t *)&qword_1ED3C8C58);
  }
  return result;
}

uint64_t sub_1BA50E5F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA50E61C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA50E61C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  char v55;
  __int128 v56;
  char v57;
  __int128 v58;
  char v59;
  _QWORD *v60;

  sub_1BA692844();
  v51 = v2;
  v49 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v50 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  *(_QWORD *)&v54 = v4;
  v47 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v48 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v53 = (char *)&v41 - v9;
  sub_1BAEF62A0();
  v52 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE82524();
  sub_1BA4A2870(&qword_1ED3D0DB0, (uint64_t (*)(uint64_t))sub_1BAE82524, (uint64_t)&unk_1BB8FFC6C);
  v15 = (uint64_t)v60;
  sub_1BB87468C();
  v16 = (void *)v15;
  if (v15)
  {
LABEL_17:
    sub_1BA7F8B78(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v14;
  }
  v45 = v8;
  v17 = v7;
  v46 = v11;
  v18 = a1[3];
  v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v19 = sub_1BB872874();
  LOBYTE(v18) = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  v20 = v52;
  v21 = v54;
  v22 = v53;
  if ((v18 & 1) != 0)
  {
    v23 = sub_1BB8740EC();
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v25 = (_BYTE *)(v23 + 48);
      while (*v25 != 1)
      {
        v25 += 24;
        if (!--v24)
          goto LABEL_7;
      }
      v34 = *((_QWORD *)v25 - 2);
      v35 = *((_QWORD *)v25 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v14 = sub_1BAE157DC();
      sub_1BA98D1F0();
      v16 = (void *)swift_allocError();
      *(_QWORD *)v36 = v34;
      *(_QWORD *)(v36 + 8) = v35;
      *(_QWORD *)(v36 + 16) = v14;
      *(_OWORD *)(v36 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v34, v35, 1);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v20);
      a1 = v60;
      goto LABEL_17;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v43 = sub_1BAE0F8F8((uint64_t)v13, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF62A0);
  v44 = v26;
  v58 = xmmword_1BB8A1A10;
  v59 = 0;
  sub_1BA4FB6A0();
  sub_1BB8740D4();
  v42 = sub_1BB86DD08();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v22, v17);
  v53 = xmmword_1BB8D2D60;
  v58 = xmmword_1BB8D2D60;
  v59 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v56 = v53;
    v57 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v27 = v48;
    sub_1BB8740D4();
    v28 = v51;
    v29 = v50;
    v30 = v49;
    v31 = sub_1BB86DD08();
    v32 = v21;
    v33 = v31;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v32);
  }
  else
  {
    v33 = MEMORY[0x1E0DEE9E8];
    v28 = v51;
    v29 = v50;
    v30 = v49;
  }
  v54 = xmmword_1BB8D2D70;
  v58 = xmmword_1BB8D2D70;
  v59 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v56 = v54;
    v57 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    sub_1BB8740D4();
    v37 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v28);
  }
  else
  {
    v37 = MEMORY[0x1E0DEE9D8];
  }
  v54 = xmmword_1BB8D2D90;
  v58 = xmmword_1BB8D2D90;
  v59 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v56 = v54;
    v57 = 0;
    sub_1BB8740D4();
    v39 = v55;
  }
  else
  {
    v39 = 1;
  }
  (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v20);
  type metadata accessor for FormatAuxiliaryNode();
  v14 = swift_allocObject();
  swift_beginAccess();
  v40 = v44;
  *(_QWORD *)(v14 + 16) = v43;
  *(_QWORD *)(v14 + 24) = v40;
  swift_beginAccess();
  *(_QWORD *)(v14 + 32) = v42;
  swift_beginAccess();
  *(_QWORD *)(v14 + 40) = v33;
  swift_beginAccess();
  *(_QWORD *)(v14 + 48) = v37;
  swift_beginAccess();
  *(_BYTE *)(v14 + 56) = v39;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  return v14;
}

uint64_t type metadata accessor for FormatAuxiliaryNode()
{
  return objc_opt_self();
}

unint64_t sub_1BA50ED24()
{
  unint64_t result;

  result = qword_1ED3C80E8;
  if (!qword_1ED3C80E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDDF8, &_s10CodingKeysON_184);
    atomic_store(result, (unint64_t *)&qword_1ED3C80E8);
  }
  return result;
}

uint64_t sub_1BA50ED68()
{
  sub_1BA50EE10();
  return sub_1BB872D0C();
}

uint64_t sub_1BA50EDB4()
{
  sub_1BA50EE10();
  return sub_1BB872D60();
}

unint64_t sub_1BA50EE10()
{
  unint64_t result;

  result = qword_1ED3B70D8;
  if (!qword_1ED3B70D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AD17C, &type metadata for FormatAccessibilityRole.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B70D8);
  }
  return result;
}

uint64_t sub_1BA50EE54(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[16];

  v7 = sub_1BB86D36C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1BB86D378();
  v12 = MEMORY[0x1E0C80A78](v11);
  (*(void (**)(_BYTE *, _QWORD, double))(v14 + 104))(&v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB57E0], v7);
  v16[15] = a2;
  sub_1BA50F0D4(0, (unint64_t *)&qword_1ED3D5FD0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  *a5 = result;
  return result;
}

uint64_t sub_1BA50EF94(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[16];

  v7 = sub_1BB86D378();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1BB86D36C();
  v12 = MEMORY[0x1E0C80A78](v11);
  (*(void (**)(_BYTE *, _QWORD, double))(v14 + 104))(&v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E8], v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB5800], v7);
  v16[15] = a2;
  sub_1BA50F0D4(0, (unint64_t *)&qword_1ED3D5FD0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  *a5 = result;
  return result;
}

void sub_1BA50F0D4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BB86D3CC();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BA50F11C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v11[3];
  uint64_t v12;
  uint64_t v13;

  v4 = sub_1BB871E78();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA81D06C();
  result = sub_1BB86DF3C();
  if (result)
  {
    v9 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    *(_QWORD *)(swift_allocObject() + 16) = v9;
    v12 = sub_1BB871F74();
    v13 = MEMORY[0x1E0D531E0];
    __swift_allocate_boxed_opaque_existential_0(v11);
    swift_unknownObjectRetain();
    sub_1BB871F68();
    sub_1BB8720B8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    *(_QWORD *)(swift_allocObject() + 16) = v9;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0D52F68], v4);
    v12 = sub_1BB871FEC();
    v13 = MEMORY[0x1E0D53380];
    __swift_allocate_boxed_opaque_existential_0(v11);
    swift_unknownObjectRetain();
    sub_1BB871FE0();
    sub_1BB8720B8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v12 = sub_1BB871CEC();
    v13 = MEMORY[0x1E0D52C98];
    __swift_allocate_boxed_opaque_existential_0(v11);
    sub_1BB871CE0();
    sub_1BB8720B8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v12 = sub_1BB872010();
    v13 = MEMORY[0x1E0D53418];
    __swift_allocate_boxed_opaque_existential_0(v11);
    sub_1BB872004();
    sub_1BB8720B8();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FeedItemTraits.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1BA78E0E8();
  sub_1BA6D249C();
  sub_1BA6A0BA4();
  sub_1BB872904();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  return 91;
}

uint64_t sub_1BA50F420@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA50F488();
  *a1 = result;
  return result;
}

uint64_t sub_1BA50F454@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA50F488();
  *a1 = result;
  return result;
}

uint64_t sub_1BA50F488()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t initializeWithCopy for FormatIssueCoverNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 <= 0xFD)
  {
    v7 = *(_QWORD *)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 40);
    sub_1BA6F2B04(v7, v8, v6);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  if (*(unsigned __int8 *)(a2 + 136) == 254)
  {
    v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    swift_retain();
  }
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA50F5EC()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA660);
  return sub_1BB872D60();
}

uint64_t sub_1BA50F650()
{
  sub_1BA50F6AC();
  return sub_1BB872D60();
}

unint64_t sub_1BA50F6AC()
{
  unint64_t result;

  result = qword_1ED3B44C0;
  if (!qword_1ED3B44C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemTrait, &type metadata for FormatItemTrait);
    atomic_store(result, (unint64_t *)&qword_1ED3B44C0);
  }
  return result;
}

char *LocationDetectionManager.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  id v6;
  Swift::String v7;
  void *v8;
  id v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  void **v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  _QWORD aBlock[6];
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observers] = MEMORY[0x1E0DEE9D8];
  v2 = OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_locationManager;
  v3 = objc_allocWithZone(MEMORY[0x1E0C9E3C8]);
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, sel_init);
  v5 = OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observableMostFrequentLocation;
  v6 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v7._object = (void *)0x80000001BB982330;
  v7._countAndFlagsBits = 0xD00000000000001ELL;
  v8 = (void *)NSUserDefaults.location(forKey:)(v7);

  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58D18]), sel_initWithValue_, v8);
  *(_QWORD *)&v4[v5] = v9;
  v10 = OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager__mostFrequentLocation;
  aBlock[0] = 0;
  sub_1BA4B07F0(0, &qword_1ED3C2220, (uint64_t (*)(uint64_t))sub_1BA81D3CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4AE8]);
  swift_allocObject();
  *(_QWORD *)&v4[v10] = sub_1BB86E86C();
  v11 = &v4[OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_onUserInteractedWithLocationAuthorizationTCC];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;

  v23.receiver = v4;
  v23.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v23, sel_init);
  v13 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_locationManager];
  v14 = v12;
  objc_msgSend(v13, sel_setDelegate_, v14);
  v15 = (void **)&v14[OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observableMostFrequentLocation];
  swift_beginAccess();
  v16 = *v15;
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1BB247994;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA81AC98;
  aBlock[3] = &block_descriptor_54;
  v18 = _Block_copy(aBlock);
  v19 = v16;
  swift_release();
  v20 = objc_msgSend(v19, sel_observe_, v18);

  _Block_release(v18);
  swift_unknownObjectRelease();

  return v14;
}

void sub_1BA50F95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  _QWORD *v20;
  void *v21;
  id v22;
  _QWORD v23[6];

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = *(void **)(a5 + 16);
  swift_retain();
  v16 = swift_bridgeObjectRetain();
  v17 = sub_1BA67F4CC(v16);
  swift_bridgeObjectRelease();
  sub_1BA57F420((uint64_t)v17);
  swift_release();
  v18 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v15, sel_fetchOperationForTagsWithIDs_, v18);

  if (v19)
  {
    objc_msgSend(v19, sel_setQualityOfService_, 25);
    objc_msgSend(v19, sel_setRelativePriority_, 1);
    objc_msgSend(v19, sel_setShouldFailOnMissingObjects_, 1);
    objc_msgSend(v19, sel_setCachePolicy_, a7);
    objc_msgSend(v19, sel_setMaximumCachedAge_, 1.79769313e308);
    objc_msgSend(v19, sel_setCanSendFetchCompletionSynchronously_, a7 == 3);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = a3;
    v20[3] = a4;
    v20[4] = a6;
    v20[5] = sub_1BA573ED8;
    v20[6] = v14;
    v23[4] = sub_1BA573F10;
    v23[5] = v20;
    v23[0] = MEMORY[0x1E0C809B0];
    v23[1] = 1107296256;
    v23[2] = sub_1BA573874;
    v23[3] = &block_descriptor_40;
    v21 = _Block_copy(v23);
    swift_bridgeObjectRetain();
    v22 = v19;
    swift_retain();
    swift_release();
    objc_msgSend(v22, sel_setFetchCompletionBlock_, v21);
    _Block_release(v21);

    objc_msgSend(v22, sel_start);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BA50FB94(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BA50FBB8(a1, v1 + 48, *(_QWORD *)(v1 + 144), *(uint64_t **)(v1 + 152), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BA50FBB8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v32 = a6;
  v33 = a8;
  v39 = a7;
  v31 = a5;
  v36 = a3;
  v10 = *a4;
  v11 = *(_QWORD *)(*a4 + 88);
  v30 = *(_QWORD *)(*a4 + 104);
  v34 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)&v28 - v14;
  v35 = *a1;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v37)
  {
    v17 = sub_1BB86F0F4();
    swift_release();
    v18 = v17;
    sub_1BB86F100();
    swift_release();
    if (v8)
      return v18;
    v29 = v13;
    sub_1BB86F064();
    swift_release();
    swift_release();
    swift_release();
    sub_1BB86F22C();
    result = swift_release();
    v19 = v38;
    if (v38 >> 60 != 15)
    {
      v20 = v37;
      v21 = v39;
      sub_1BB86E290();
      v36 = v20;
      v22 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 24))(v15, v34, v30);
      v23 = (_QWORD *)swift_allocObject();
      v24 = v34;
      v23[2] = *(_QWORD *)(v10 + 80);
      v23[3] = v24;
      v23[4] = *(_QWORD *)(v10 + 96);
      v23[5] = v22;
      v25 = v32;
      v23[6] = v31;
      v23[7] = v25;
      v26 = v33;
      v23[8] = v21;
      v23[9] = v26;
      v27 = (void *)sub_1BB86E854();
      v18 = sub_1BB86E974();
      swift_release();
      swift_release();

      sub_1BA69D490(v36, v19);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, AssociatedTypeWitness);
      return v18;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA50FE38()
{
  sub_1BA50FE5C();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA50FE5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 144);
  v2 = sub_1BB871680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  v4 = sub_1BB86FAD8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
  v6 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1BA50FF40()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

void sub_1BA50FF74(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  v41 = a5;
  v42 = v19;
  v20 = *(void **)(a5 + 16);
  swift_retain();
  v21 = objc_msgSend(a6, sel_fontURL);
  if (v21)
  {
    v22 = v21;
    sub_1BB86C5EC();

    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v15, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) != 1)
    {
      v23 = (void *)sub_1BB86C58C();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      v24 = objc_msgSend(v20, sel_assetHandleForURL_lifetimeHint_, v23, 1);

      if ((a7 & 1) == 0)
      {
        v25 = objc_msgSend(v24, sel_filePath);
        if (!v25)
        {
          v40 = swift_release();
          a1(v40);
LABEL_10:

          return;
        }

      }
      v26 = objc_msgSend(v24, sel_filePath);
      if (v26)
      {
        v27 = v26;
        v28 = sub_1BB8729A0();
        v30 = v29;

        v43 = v28;
        v44 = v30;
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED39C340, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        sub_1BB86E9E0();
      }
      else
      {
        MEMORY[0x1E0C80A78](0);
        *(&v41 - 2) = (uint64_t)v24;
        sub_1BA4AD288(v31, (unint64_t *)&qword_1ED39C340, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        sub_1BB86EA58();
      }
      v32 = v42;
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = a6;
      *(_QWORD *)(v33 + 24) = v24;
      v34 = a6;
      v35 = v24;
      v36 = (void *)sub_1BB86E854();
      type metadata accessor for FeedFontManager();
      sub_1BB86E98C();
      swift_release();
      swift_release();

      *(_QWORD *)(swift_allocObject() + 16) = v34;
      v37 = v34;
      v38 = (void *)sub_1BB86E854();
      sub_1BB86E9A4();
      swift_release();
      swift_release();

      v39 = swift_allocObject();
      *(_QWORD *)(v39 + 16) = sub_1BA4D7948;
      *(_QWORD *)(v39 + 24) = v32;
      v24 = (id)sub_1BB86E854();
      sub_1BB86E9EC();

      swift_release();
      swift_release();
      swift_release();
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v18, 1, 1, v12);
  }
  __break(1u);
}

uint64_t FeedItemSorter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA510394()
{
  sub_1BA51043C();
  return sub_1BB872D60();
}

uint64_t sub_1BA5103F0()
{
  sub_1BA51043C();
  return sub_1BB872D0C();
}

unint64_t sub_1BA51043C()
{
  unint64_t result;

  result = qword_1ED3C7C88;
  if (!qword_1ED3C7C88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4440, &_s10CodingTypeON_144);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C88);
  }
  return result;
}

uint64_t sub_1BA510480()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5104B4 + 4 * byte_1BB8AEF80[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA5104B4()
{
  return 1701667182;
}

uint64_t sub_1BA5104C4()
{
  return 0x7470697263736564;
}

uint64_t sub_1BA5104E4()
{
  return 0x736D657469;
}

uint64_t sub_1BA5104F8()
{
  return 0x726F66736E617274;
}

uint64_t sub_1BA510510()
{
  return 0x69747265706F7270;
}

unint64_t sub_1BA510528()
{
  return 0xD000000000000010;
}

uint64_t sub_1BA510544()
{
  return 1885433183;
}

uint64_t FormatWebEmbedBinding.URL.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BA5105B4(_QWORD *a1)
{
  return FormatRepeatNodeIteration.encode(to:)(a1);
}

uint64_t FormatRepeatNodeIteration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v12 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - v5;
  v7 = *(_QWORD *)v1;
  v8 = *(_BYTE *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB8746C8();
  if ((v8 & 1) != 0)
  {
    LOBYTE(v15) = 1;
    v14 = 0uLL;
    sub_1BA510844();
    swift_bridgeObjectRetain();
    v9 = v13;
    sub_1BB8741AC();
    if (v9)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
      return sub_1BA800BCC(v7, 1);
    }
    v15 = v7;
    v14 = xmmword_1BB87FC90;
    sub_1BA63658C(0);
    sub_1BB828F18(&qword_1ED39B060, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB8741AC();
    sub_1BA800BCC(v7, 1);
  }
  else
  {
    LOBYTE(v15) = 0;
    sub_1BA510844();
    v14 = 0uLL;
    v11 = v13;
    sub_1BB8741AC();
    if (!v11 && (v7 & 1) == 0)
    {
      LOBYTE(v15) = 0;
      v14 = xmmword_1BB87FC90;
      sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3C2450, (uint64_t (*)(void))sub_1BB828F58, (uint64_t)&type metadata for FormatRepeatNodeBindIteration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
      sub_1BB828F9C(&qword_1ED3A54A0, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
      sub_1BB8741AC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

unint64_t sub_1BA510844()
{
  unint64_t result;

  result = qword_1ED39BA18;
  if (!qword_1ED39BA18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9545BC, &type metadata for FormatRepeatNodeIteration.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39BA18);
  }
  return result;
}

void sub_1BA510888(_QWORD *a1)
{
  FormatItemNodeAction.encode(to:)(a1);
}

void FormatItemNodeAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v28[10];

  v2 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v2);
  v28[6] = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v28[5] = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v28[4] = (char *)v28 - v7;
  MEMORY[0x1E0C80A78](v8);
  v28[3] = (char *)v28 - v9;
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v28[2] = (char *)v28 - v12;
  MEMORY[0x1E0C80A78](v13);
  v28[1] = (char *)v28 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v17 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v25 = sub_1BA6B8518();
  v28[9] = v22;
  sub_1BA6EC1EC(v17, v26, v23, v17, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyE, v24, (uint64_t)v22, v25, (uint64_t)&off_1E734BDA0);
  sub_1BA4C2DD8(v28[7], (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
  v27 = (char *)sub_1BA510B08 + 4 * byte_1BB8AEA51[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA510B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(unsigned __int8 *)(v1 + 24);
  v7 = *(unsigned __int8 *)(v1 + 25);
  if (qword_1ED3C6D78 != -1)
    swift_once();
  v8 = sub_1BB86EB84();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED476C68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v0, v9, v8);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v10 = *(_QWORD *)(v2 - 88);
  sub_1BACF1564(1, v3, v4, v5, v6 | (v7 << 8), v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v10, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BAE70D80(v3, v4, v5, v6, v7, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
}

uint64_t sub_1BA51103C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF09B4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA511160();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA511160()
{
  unint64_t result;

  result = qword_1ED3A6830;
  if (!qword_1ED3A6830)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BBA10, &_s14descr1E72CC571C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6830);
  }
  return result;
}

uint64_t sub_1BA5111A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA5111CC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5111CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  __int128 v53;
  char v54;
  __int128 v55;
  char v56;

  sub_1BAEFBAC0(0, &qword_1ED3A3800, (void (*)(void))sub_1BA823B60, (void (*)(void))sub_1BA823BA4);
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v45 - v3;
  sub_1BAEF87DC();
  v6 = v5;
  v7 = *((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = sub_1BAE7A4D4();
  sub_1BA4A2870(&qword_1ED3ABF08, (uint64_t (*)(uint64_t))sub_1BAE7A4D4, (uint64_t)&unk_1BB8FFC6C);
  v11 = v52;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v48 = v4;
  v49 = v7;
  v13 = v51;
  v52 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v16 = v52;
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v24 = *((_QWORD *)v19 - 2);
      v25 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      v27 = a1;
      MEMORY[0x1E0C80A78](v26);
      *((_QWORD *)&v45 - 4) = &_s10CodingKeysON_211;
      *((_QWORD *)&v45 - 3) = sub_1BAE7A554();
      *((_QWORD *)&v45 - 2) = sub_1BA7F11C0();
      *((_QWORD *)&v45 - 1) = sub_1BAE7A598();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E72531C8);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v29 = v24;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      a1 = v27;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v24, v25, 1);
      (*(void (**)(char *, void *))(v49 + 8))(v9, v16);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v20 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF87DC);
  v22 = v21;
  v47 = a1;
  v55 = xmmword_1BB8A1A10;
  v56 = 0;
  v23 = v52;
  v30 = sub_1BB874098();
  v32 = v31;
  v45 = xmmword_1BB8D2D60;
  v55 = xmmword_1BB8D2D60;
  v56 = 0;
  v33 = sub_1BB8740F8();
  if ((v33 & 1) != 0)
  {
    v46 = v32;
    v53 = v45;
    v54 = 0;
    sub_1BAEF8854();
    v34 = v48;
    sub_1BB8740D4();
    *(_QWORD *)&v45 = v30;
    v35 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v13);
    v32 = v46;
  }
  else
  {
    *(_QWORD *)&v45 = v30;
    v35 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v55 = xmmword_1BB8D2D70;
  v56 = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v51 = v35;
  v46 = v32;
  v37 = v53;
  v55 = xmmword_1BB8D2D90;
  v56 = 0;
  sub_1BA62C9A0();
  sub_1BB874068();
  v38 = (char *)v53;
  v55 = xmmword_1BB8D2D80;
  v56 = 0;
  sub_1BB874068();
  v48 = v38;
  v50 = v37;
  v39 = v53;
  v55 = xmmword_1BB8D2DA0;
  v56 = 0;
  v40 = sub_1BB874038();
  v41 = v51;
  LOBYTE(v37) = v40;
  (*(void (**)(char *, void *))(v49 + 8))(v9, v23);
  type metadata accessor for FormatProgressViewNodeStyle();
  KeyPath = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 16) = v20;
  *(_QWORD *)(KeyPath + 24) = v22;
  v42 = v46;
  *(_QWORD *)(KeyPath + 32) = v45;
  *(_QWORD *)(KeyPath + 40) = v42;
  swift_beginAccess();
  v43 = v50;
  *(_QWORD *)(KeyPath + 48) = v41;
  *(_QWORD *)(KeyPath + 56) = v43;
  v44 = (uint64_t)v47;
  *(_QWORD *)(KeyPath + 64) = v48;
  *(_QWORD *)(KeyPath + 72) = v39;
  *(_BYTE *)(KeyPath + 80) = v37;
  __swift_destroy_boxed_opaque_existential_1(v44);
  return KeyPath;
}

uint64_t type metadata accessor for FormatProgressViewNodeStyle()
{
  return objc_opt_self();
}

uint64_t sub_1BA5118E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBundleImageSize.init(from:)(a1, a2);
}

uint64_t FormatBundleImageSize.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v3 = v2;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_13:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_7;
      }
      v21 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v21;
      *(_QWORD *)(v22 + 8) = v17;
      *(_QWORD *)(v22 + 16) = &unk_1E72698F8;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v21, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA511C30();
  v25 = 0uLL;
  sub_1BB8740D4();
  v18 = v24;
  if ((_BYTE)v24 && v24 != 1)
  {
    v24 = xmmword_1BB87FC90;
    sub_1BAB1DE40();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v19 = *((_QWORD *)&v25 + 1);
    v20 = v25;
  }
  else
  {
    sub_1BA655028(0);
    v25 = xmmword_1BB87FC90;
    sub_1BA4A2870(&qword_1ED3B3498, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v19 = 0;
    v20 = v24;
  }
  *(_QWORD *)v12 = v20;
  *(_QWORD *)(v12 + 8) = v19;
  *(_BYTE *)(v12 + 16) = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA511C30()
{
  unint64_t result;

  result = qword_1ED3C9410;
  if (!qword_1ED3C9410)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEA78, &_s10CodingTypeON_139);
    atomic_store(result, (unint64_t *)&qword_1ED3C9410);
  }
  return result;
}

uint64_t sub_1BA511C74(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  v4 = swift_allocObject();
  a2(a1);
  return v4;
}

uint64_t **FeedCursorTracker.init(context:)(uint64_t a1)
{
  uint64_t **v1;
  uint64_t **v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;

  v2 = v1;
  v4 = *v1;
  v5 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v5);
  v6 = (uint64_t *)MEMORY[0x1E0DEE9E8];
  *(uint64_t **)((char *)v1 + v4[13]) = (uint64_t *)MEMORY[0x1E0DEE9E8];
  *(uint64_t **)((char *)v1 + (*v1)[14]) = v6;
  v7 = (*v1)[15];
  type metadata accessor for FeedCursorTrackerGroup(0, v4[10], v4[11], v8);
  *(uint64_t **)((char *)v1 + v7) = (uint64_t *)sub_1BB87273C();
  v9 = (*v1)[16];
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  *(uint64_t **)((char *)v1 + v9) = (uint64_t *)sub_1BB86DD50();
  v10 = (uint64_t)v2 + (*v2)[12];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v10, a1, AssociatedTypeWitness);
  return v2;
}

uint64_t type metadata accessor for FeedCursorTrackerGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedCursorTrackerGroup);
}

void sub_1BA511E9C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BB86E1DC();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BA511EE0(uint64_t a1, uint64_t a2, void *a3, unint64_t *a4)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v5 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BA4EFE00(0, a4);
    v5 = sub_1BB87276C();
  }
  swift_retain();
  v7 = a3;
  v6(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA511F74(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  sub_1BA6F7A88(0, &qword_1ED3AB138, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1BA511FFC(a1, a2, v2 + v7, *(_QWORD *)v8, *(_BYTE *)(v8 + 8));
}

uint64_t sub_1BA511FFC(uint64_t a1, id a2, uint64_t a3, uint64_t a4, char a5)
{
  id v5;
  _BYTE *v10;
  char v11;

  if (a2)
  {
    v5 = a2;
LABEL_3:
    sub_1BA6F7A88(0, &qword_1ED3AB138, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
    return sub_1BB872F34();
  }
  v11 = 0;
  swift_bridgeObjectRetain();
  sub_1BA51212C(a4, a1, &v11, a5 & 1);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a4 + 16) == 1 && v11 == 1)
  {
    swift_bridgeObjectRelease();
    sub_1BA98176C();
    swift_allocError();
    *v10 = 5;
    goto LABEL_3;
  }
  sub_1BA6F7A88(0, &qword_1ED3AB138, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
  return sub_1BB872F40();
}

uint64_t sub_1BA51212C(uint64_t a1, uint64_t a2, _BYTE *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[2];
  uint64_t v17;

  v5 = v4;
  v7 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  v17 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    swift_bridgeObjectRetain();
    v12 = (uint64_t *)(a1 + 40);
    do
    {
      v13 = *v12;
      v16[0] = *(v12 - 1);
      v16[1] = v13;
      swift_bridgeObjectRetain();
      sub_1BA978640(v16, a2, a3, a4 & 1, &v15);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v14 = swift_bridgeObjectRelease();
      if (v15)
      {
        MEMORY[0x1BCCE36AC](v14);
        if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v12 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v17;
  }
  return result;
}

uint64_t FormatDecorationItem.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(unsigned __int16 *)(v0 + 120) | (*(unsigned __int8 *)(v0 + 122) << 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA771864(v1, v2);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FeedCursorContainer.shortDescription.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1 < 0)
  {
    swift_retain();
    FeedDeferredCursor.shortDescription.getter(a2);
  }
  else
  {
    swift_retain();
    FeedCursor.shortDescription.getter(a2);
  }
  return swift_release();
}

uint64_t FeedDeferredCursor.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *v1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FD0, (uint64_t (*)(uint64_t))sub_1BA81E0F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB8827B0;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  v5 = v1[3];
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v1[2];
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 1684957547;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  *(_BYTE *)(inited + 96) = *((_BYTE *)v1 + qword_1ED476480);
  *(_QWORD *)(inited + 120) = &type metadata for FeedCursorKind;
  *(_QWORD *)(inited + 128) = 0xD000000000000011;
  *(_QWORD *)(inited + 136) = 0x80000001BB962430;
  v7 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 144) = *(_QWORD *)((char *)v1 + qword_1ED476470);
  *(_QWORD *)(inited + 168) = v7;
  *(_QWORD *)(inited + 176) = 0xD000000000000012;
  *(_QWORD *)(inited + 184) = 0x80000001BB962450;
  v8 = *(_QWORD *)((char *)v1 + qword_1ED476460);
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(_QWORD *)(v3 + 88);
  v12 = type metadata accessor for FeedDeferredCursorGroup(0, v9, v10, v11);
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 192) = MEMORY[0x1BCCE37B4](v8, v12);
  v13 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 216) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 224) = 0xD000000000000013;
  *(_QWORD *)(inited + 232) = 0x80000001BB962470;
  v14 = *(_QWORD *)((char *)v1 + qword_1ED476468);
  v16 = type metadata accessor for FeedDatabaseGroup(0, v9, v10, v15);
  v17 = MEMORY[0x1BCCE37B4](v14, v16);
  *(_QWORD *)(inited + 264) = v13;
  *(_QWORD *)(inited + 240) = v17;
  sub_1BA76E994(inited);
  v18 = sub_1BB86E320();
  a1[3] = v18;
  a1[4] = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3C80], v18);
  __swift_allocate_boxed_opaque_existential_0(a1);
  return sub_1BB86E314();
}

uint64_t sub_1BA512590@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatEdgeInsets.init(from:)(a1, a2);
}

uint64_t FormatEdgeInsets.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char v29;
  uint64_t v30;

  v3 = v2;
  v27 = a2;
  sub_1BAE8F464();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE8F4DC();
  sub_1BA4A2870(&qword_1ED3D0C20, (uint64_t (*)(uint64_t))sub_1BAE8F4DC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_9:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v27;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v20 = *((_QWORD *)v16 - 2);
      v21 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      v27 = v7;
      MEMORY[0x1E0C80A78](v22);
      *(&v27 - 4) = (uint64_t)&_s10CodingKeysON_143;
      *(&v27 - 3) = sub_1BAE8F55C();
      *(&v27 - 2) = sub_1BA512988();
      *(&v27 - 1) = sub_1BAE8F5A0();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726B708);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v6);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA689CD8();
  v28 = 0uLL;
  v29 = 0;
  sub_1BB8740D4();
  v17 = v30;
  v28 = xmmword_1BB8A1A10;
  v29 = 0;
  sub_1BB8740D4();
  v18 = v30;
  v28 = xmmword_1BB8D2D60;
  v29 = 0;
  sub_1BB8740D4();
  v25 = v30;
  v28 = xmmword_1BB8D2D70;
  v29 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v26 = v30;
  *v12 = v17;
  v12[1] = v18;
  v12[2] = v25;
  v12[3] = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA512988()
{
  unint64_t result;

  result = qword_1ED3C7428;
  if (!qword_1ED3C7428)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB9E8, &_s10CodingKeysON_143);
    atomic_store(result, (unint64_t *)&qword_1ED3C7428);
  }
  return result;
}

uint64_t destroy for FormatPrefetchContext(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  return swift_release();
}

id Assembly.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_class *v26;
  uint64_t (*v27)(uint64_t);
  id v28;
  char *v29;
  id v30;
  objc_super v32;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR___NEAssembly_assemblies;
  sub_1BA81BCFC();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8F8740;
  v4 = type metadata accessor for AdsAssembly();
  v5 = swift_allocObject();
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = sub_1BA4A2870((unint64_t *)&unk_1ED3D5450, (uint64_t (*)(uint64_t))type metadata accessor for AdsAssembly, (uint64_t)&unk_1BB91C730);
  *(_QWORD *)(v3 + 32) = v5;
  v6 = type metadata accessor for CommandAssembly();
  v7 = swift_allocObject();
  *(_QWORD *)(v3 + 96) = v6;
  *(_QWORD *)(v3 + 104) = sub_1BA4A2870(&qword_1ED3D54F8, (uint64_t (*)(uint64_t))type metadata accessor for CommandAssembly, (uint64_t)&unk_1BB890A48);
  *(_QWORD *)(v3 + 72) = v7;
  v8 = type metadata accessor for DatabaseAssembly();
  v9 = swift_allocObject();
  *(_QWORD *)(v3 + 136) = v8;
  *(_QWORD *)(v3 + 144) = sub_1BA4A2870(&qword_1ED3D56B0, (uint64_t (*)(uint64_t))type metadata accessor for DatabaseAssembly, (uint64_t)&unk_1BB935CC4);
  *(_QWORD *)(v3 + 112) = v9;
  v10 = type metadata accessor for EngagementAssembly();
  v11 = swift_allocObject();
  *(_QWORD *)(v3 + 176) = v10;
  *(_QWORD *)(v3 + 184) = sub_1BA4A2870(&qword_1ED3D5798, (uint64_t (*)(uint64_t))type metadata accessor for EngagementAssembly, (uint64_t)&unk_1BB8E16F4);
  *(_QWORD *)(v3 + 152) = v11;
  v12 = type metadata accessor for FactoryAssembly();
  v13 = swift_allocObject();
  *(_QWORD *)(v3 + 216) = v12;
  *(_QWORD *)(v3 + 224) = sub_1BA4A2870(&qword_1ED3D5528, (uint64_t (*)(uint64_t))type metadata accessor for FactoryAssembly, (uint64_t)&unk_1BB946AF0);
  *(_QWORD *)(v3 + 192) = v13;
  v14 = type metadata accessor for FormatAssembly();
  v15 = swift_allocObject();
  *(_QWORD *)(v3 + 256) = v14;
  *(_QWORD *)(v3 + 264) = sub_1BA4A2870(&qword_1ED3D5488, (uint64_t (*)(uint64_t))type metadata accessor for FormatAssembly, (uint64_t)&unk_1BB8EAC90);
  *(_QWORD *)(v3 + 232) = v15;
  v16 = type metadata accessor for LayoutAssembly();
  v17 = swift_allocObject();
  *(_QWORD *)(v3 + 296) = v16;
  *(_QWORD *)(v3 + 304) = sub_1BA4A2870(&qword_1ED3D54C8, (uint64_t (*)(uint64_t))type metadata accessor for LayoutAssembly, (uint64_t)&unk_1BB936A38);
  *(_QWORD *)(v3 + 272) = v17;
  v18 = type metadata accessor for ManagerAssembly();
  v19 = swift_allocObject();
  *(_QWORD *)(v3 + 336) = v18;
  *(_QWORD *)(v3 + 344) = sub_1BA4A2870(&qword_1ED3D5558, (uint64_t (*)(uint64_t))type metadata accessor for ManagerAssembly, (uint64_t)&unk_1BB91A654);
  *(_QWORD *)(v3 + 312) = v19;
  v20 = type metadata accessor for OfflineAssembly();
  v21 = swift_allocObject();
  *(_QWORD *)(v3 + 376) = v20;
  *(_QWORD *)(v3 + 384) = sub_1BA4A2870((unint64_t *)&unk_1ED3C0A68, (uint64_t (*)(uint64_t))type metadata accessor for OfflineAssembly, (uint64_t)&unk_1BB905F78);
  *(_QWORD *)(v3 + 352) = v21;
  v22 = type metadata accessor for ServiceAssembly();
  v23 = swift_allocObject();
  *(_QWORD *)(v3 + 416) = v22;
  *(_QWORD *)(v3 + 424) = sub_1BA4A2870(&qword_1ED3D5588, (uint64_t (*)(uint64_t))type metadata accessor for ServiceAssembly, (uint64_t)&unk_1BB9242AC);
  *(_QWORD *)(v3 + 392) = v23;
  v24 = type metadata accessor for RendererAssembly();
  v25 = swift_allocObject();
  *(_QWORD *)(v3 + 456) = v24;
  *(_QWORD *)(v3 + 464) = sub_1BA4A2870((unint64_t *)&unk_1ED3D5750, (uint64_t (*)(uint64_t))type metadata accessor for RendererAssembly, (uint64_t)&unk_1BB87D804);
  *(_QWORD *)(v3 + 432) = v25;
  v26 = (objc_class *)sub_1BB86EF14();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D90];
  v28 = objc_allocWithZone(v26);
  v29 = v0;
  v30 = objc_msgSend(v28, sel_init);
  *(_QWORD *)(v3 + 496) = v26;
  *(_QWORD *)(v3 + 504) = sub_1BA4A2870(&qword_1ED3C2228, v27, MEMORY[0x1E0D60D88]);
  *(_QWORD *)(v3 + 472) = v30;
  *(_QWORD *)&v0[v2] = v3;

  v32.receiver = v29;
  v32.super_class = ObjectType;
  return objc_msgSendSuper2(&v32, sel_init);
}

uint64_t sub_1BA512E34()
{
  sub_1BB86F070();
  sub_1BB86F088();
  swift_allocObject();
  return sub_1BB86F0DC();
}

uint64_t _s8NewsFeed18FormatCornerRadiusO5ValueVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA512EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;

  v59 = a1;
  v4 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v4);
  v57 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v2;
  v7 = *(_QWORD *)(v2 + 80);
  v6 = *(_QWORD *)(v2 + 88);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v53 = (char *)&v35 - v9;
  v10 = swift_getAssociatedTypeWitness();
  v11 = sub_1BB873A2C();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - v12;
  v15 = MEMORY[0x1E0C80A78](v14);
  v56 = (uint64_t)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *(_QWORD *)a2;
  LODWORD(v45) = *(unsigned __int8 *)(a2 + 8);
  LODWORD(v44) = *(unsigned __int8 *)(a2 + 9);
  v43 = *(unsigned __int8 *)(a2 + 10);
  v42 = *(unsigned __int8 *)(a2 + 11);
  v17 = *(_QWORD *)(a2 + 24);
  v36 = *(_QWORD *)(a2 + 16);
  v18 = *(_QWORD *)(a2 + 32);
  v19 = *(_QWORD *)(a2 + 40);
  v41 = *(unsigned __int8 *)(a2 + 48);
  v38 = *(void **)(a2 + 56);
  v39 = *(_QWORD *)(a2 + 64);
  v40 = *(_QWORD *)(a2 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v20 + 16))(v56, v59, v7, v15);
  v55 = sub_1BB872E68();
  v54 = sub_1BB872E68();
  v35 = v6;
  type metadata accessor for FeedCursorGroup(0, v7, v6, v21);
  v52 = sub_1BB872E68();
  v51 = sub_1BB872E68();
  v50 = sub_1BB872E68();
  type metadata accessor for FeedDatabaseGroup(0, v7, v6, v22);
  v49 = sub_1BB872E68();
  v48 = sub_1BB872E68();
  v47 = sub_1BB872E68();
  sub_1BB86EAAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v13, 1, 1, v10);
  v46 = sub_1BB86E9D4();
  v23 = (void *)v37;
  v63 = v37;
  v64 = v45;
  v65 = (char)v44;
  v66 = v43;
  v67 = v42;
  v68 = v36;
  v69 = v17;
  v70 = v18;
  v71 = v19;
  v72 = v41;
  v24 = v38;
  v73 = v38;
  v74 = v39;
  v75 = v40;
  v61 = 0;
  v62 = 1;
  v60 = 0;
  v25 = v35;
  v45 = type metadata accessor for FeedCursorTracker(0, v7, v35, v26);
  v44 = *(void (**)(uint64_t, uint64_t))(v25 + 48);
  v27 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v18, v19);
  v28 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = (uint64_t)v53;
  v44(v7, v25);
  v30 = FeedCursorTracker.__allocating_init(context:)(v29);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v31 = sub_1BB86E9E0();
  v32 = (uint64_t)v57;
  sub_1BA83A734();
  v33 = swift_allocObject();
  FeedGroupEmitterCursor.init(serviceConfig:priorServiceConfigs:nextServiceConfigs:cursorGroups:priorGroups:nextGroups:databaseGroups:priorDatabaseGroups:nextDatabaseGroups:pool:cursor:context:cachePolicy:kind:tracker:currentDate:isLast:slots:gapPromise:sidecars:)(v56, v55, v54, v52, v51, v50, v49, v48, v47, v46, 0, &v63, &v61, &v60, v30, v32, 0, 0, v31,
    MEMORY[0x1E0DEE9D8]);
  return v33;
}

uint64_t FormatFileReference.url.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v6, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    type metadata accessor for FormatMetadata();
    v9 = (uint64_t)&v6[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    v10 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 1, 1, v10);
    sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    sub_1BA6BE23C();
    v13 = (uint64_t)&v6[*(int *)(v12 + 48)];
    v14 = sub_1BB86C67C();
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v6, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
    return sub_1BA4A2E80(v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  }
}

uint64_t type metadata accessor for HiddenContentPlacardViewRenderer()
{
  return objc_opt_self();
}

_QWORD *sub_1BA5135A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BA5135CC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_1BA5135CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  void (**v7)(char *, _QWORD *);
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  void (**v36)(char *, _QWORD *);
  __int128 v37;
  char v38;
  __int128 v39;
  char v40;
  unint64_t v41;

  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v35 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v29 - v4);
  sub_1BAEF2750();
  v34 = v6;
  v7 = (void (**)(char *, _QWORD *))*(v6 - 1);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE96C5C();
  sub_1BA4A2870(&qword_1ED3D0DD0, (uint64_t (*)(uint64_t))sub_1BAE96C5C, (uint64_t)&unk_1BB8FFC6C);
  v10 = v36;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
  {
LABEL_15:
    sub_1BA7F8B78(a1, (uint64_t)v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5;
  }
  v33 = v5;
  v36 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v5 = v34;
  v14 = v35;
  if ((v13 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v21);
      *(&v29 - 4) = (uint64_t)&_s10CodingKeysON_124;
      *(&v29 - 3) = sub_1BAE96CDC();
      *(&v29 - 2) = sub_1BA513B68();
      *(&v29 - 1) = sub_1BAE96D20();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726BE60);
      swift_release_n();
      sub_1BA98D1F0();
      v11 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      v36[1](v9, v5);
      goto LABEL_15;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  type metadata accessor for FormatGroupNodeMaskStyle();
  sub_1BA4A2870(&qword_1ED3CAAC8, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskStyle, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMaskStyle);
  v39 = 0uLL;
  v40 = 0;
  sub_1BB874068();
  v18 = v37;
  type metadata accessor for FormatAnimationNodeStyle();
  v39 = xmmword_1BB8A1A10;
  v40 = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v24 = v37;
  v32 = xmmword_1BB8D2D60;
  v39 = xmmword_1BB8D2D60;
  v40 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v37 = v32;
    v38 = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v25 = v41;
  }
  else
  {
    v25 = 0xB000000000000000;
  }
  *(_QWORD *)&v32 = v25;
  v31 = xmmword_1BB8D2D70;
  v39 = xmmword_1BB8D2D70;
  v40 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v30 = v24;
    v37 = v31;
    v38 = 0;
    sub_1BAEB7D04();
    v26 = v33;
    sub_1BB8740D4();
    v28 = sub_1BB86DD08();
    (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v26, v14);
    v24 = v30;
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9D8];
  }
  v36[1](v9, v5);
  type metadata accessor for FormatGroupNodeMask();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v18;
  v5[3] = v24;
  swift_beginAccess();
  v5[4] = v32;
  swift_beginAccess();
  v5[5] = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

unint64_t sub_1BA513B68()
{
  unint64_t result;

  result = qword_1ED3C82F8;
  if (!qword_1ED3C82F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA9F8, &_s10CodingKeysON_124);
    atomic_store(result, (unint64_t *)&qword_1ED3C82F8);
  }
  return result;
}

uint64_t sub_1BA513BAC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA513BE0 + 4 * byte_1BB8AE522[*v0]))(0x69747265706F7270, 0xEA00000000007365);
}

uint64_t sub_1BA513BE0()
{
  return 0x73746F6C73;
}

uint64_t sub_1BA513BF4()
{
  return 0x6D6F6F727377656ELL;
}

unint64_t sub_1BA513C0C()
{
  return 0xD000000000000010;
}

uint64_t sub_1BA513C28()
{
  return 0x72656C69706D6F63;
}

uint64_t sub_1BA513C4C()
{
  return 1885433183;
}

uint64_t FormatGroupNodeMaskStyle.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA7AF9E4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120));
  swift_bridgeObjectRelease();
  sub_1BA6E8A78(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_BYTE *)(v0 + 216));
  return swift_deallocClassInstance();
}

uint64_t sub_1BA513CE0(_QWORD *a1)
{
  return FormatAccessibilityNode.encode(to:)(a1);
}

uint64_t sub_1BA513D00()
{
  sub_1BA513DA8();
  return sub_1BB872D0C();
}

uint64_t sub_1BA513D4C()
{
  sub_1BA513DA8();
  return sub_1BB872D60();
}

unint64_t sub_1BA513DA8()
{
  unint64_t result;

  result = qword_1ED3B4A58;
  if (!qword_1ED3B4A58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A2040, &type metadata for FormatSymbolName.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B4A58);
  }
  return result;
}

uint64_t sub_1BA513DEC(uint64_t a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v23;
  void *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __int128 v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _OWORD *v49;
  __int128 *v50;
  __int128 v51;
  __int128 v52;
  uint64_t result;
  unint64_t v54;

  if ((_QWORD *)a1 != a2)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = AssociatedTypeWitness;
    v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8)
      v8 = *(_QWORD *)(v6 + 64);
    if (v8 <= 0x10)
      v9 = 16;
    else
      v9 = v8;
    if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v9)
      v10 = v9;
    else
      v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
    if ((((((((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8)
      v11 = 8;
    else
      v11 = (((((((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
          + 8;
    v12 = *(unsigned __int8 *)(a1 + v11);
    if (v12 >= 2 && (v11 & 0xFFFFFFF8) != 0)
      v12 = *(_DWORD *)a1 + 2;
    v14 = v9 + 1;
    v54 = v10 + 1;
    if (v12 == 1)
    {

    }
    else if (!v12)
    {
      switch(*(_BYTE *)(a1 + v10))
      {
        case 0:
        case 1:
          v16 = AssociatedTypeWitness;
          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          v17 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v17 + 24) < 0xFFFFFFFFuLL)
            goto LABEL_44;
          goto LABEL_43;
        case 2:
          v16 = AssociatedTypeWitness;
          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          goto LABEL_44;
        case 3:
        case 4:
        case 5:
          v16 = AssociatedTypeWitness;
          swift_bridgeObjectRelease();
          goto LABEL_44;
        case 6:
          v18 = *(unsigned __int8 *)(a1 + v9);
          if (v18 >= 3)
          {
            if (v9 <= 3)
              v19 = v9;
            else
              v19 = 4;
            __asm { BR              X12 }
          }
          if (v18 == 2)
          {
            swift_bridgeObjectRelease();
          }
          else if (v18 == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
            v20 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v20 + 24) >= 0xFFFFFFFFuLL)
              __swift_destroy_boxed_opaque_existential_1(v20);
          }
          v16 = v5;
          v17 = (a1 + v9 + 1 + 7) & 0xFFFFFFFFFFFFFFF8;
LABEL_43:
          __swift_destroy_boxed_opaque_existential_1(v17);
LABEL_44:
          swift_release();
          swift_bridgeObjectRelease();
          v5 = v16;
          v14 = v9 + 1;
          break;
        default:
          if (v10 <= 3)
            v15 = v10;
          else
            v15 = 4;
          __asm { BR              X12 }
          return result;
      }
    }
    v21 = *((unsigned __int8 *)a2 + v11);
    if ((v11 & 0xFFFFFFF8) != 0 && v21 >= 2)
      v21 = *(_DWORD *)a2 + 2;
    if (v21 == 1)
    {
      v24 = (void *)*a2;
      v25 = v24;
      *(_QWORD *)a1 = v24;
      *(_BYTE *)(a1 + v11) = 1;
    }
    else if (v21)
    {
      memcpy((void *)a1, a2, v11 | 1);
    }
    else
    {
      switch(*((_BYTE *)a2 + v10))
      {
        case 0:
          (*(void (**)(uint64_t, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
          v26 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
          v27 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
          v28 = *(_QWORD *)(v27 + 24);
          if (v28 < 0xFFFFFFFF)
          {
            v36 = *(_OWORD *)(v27 + 16);
            *(_OWORD *)v26 = *(_OWORD *)v27;
            *(_OWORD *)(v26 + 16) = v36;
          }
          else
          {
            *(_QWORD *)(v26 + 24) = v28;
            (**(void (***)(void))(v28 - 8))();
          }
          *(_BYTE *)(a1 + v10) = 0;
          break;
        case 1:
          (*(void (**)(uint64_t, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
          v29 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
          v30 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
          v31 = *(_QWORD *)(v30 + 24);
          if (v31 < 0xFFFFFFFF)
          {
            v37 = *(_OWORD *)(v30 + 16);
            *(_OWORD *)v29 = *(_OWORD *)v30;
            *(_OWORD *)(v29 + 16) = v37;
          }
          else
          {
            *(_QWORD *)(v29 + 24) = v31;
            (**(void (***)(void))(v31 - 8))();
          }
          v32 = 1;
          goto LABEL_88;
        case 2:
          (*(void (**)(uint64_t, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
          v32 = 2;
          goto LABEL_88;
        case 3:
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = a2[1];
          v33 = 3;
          goto LABEL_71;
        case 4:
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = a2[1];
          v33 = 4;
          goto LABEL_71;
        case 5:
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = a2[1];
          v33 = 5;
LABEL_71:
          *(_BYTE *)(a1 + v10) = v33;
          swift_bridgeObjectRetain();
          break;
        case 6:
          v34 = *((unsigned __int8 *)a2 + v9);
          if (v34 >= 3)
          {
            if (v9 <= 3)
              v35 = v9;
            else
              v35 = 4;
            __asm { BR              X12 }
          }
          if (v34 == 2)
          {
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            *(_BYTE *)(a1 + v9) = 2;
            swift_bridgeObjectRetain();
          }
          else if (v34 == 1)
          {
            (*(void (**)(uint64_t, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
            *(_BYTE *)(a1 + v9) = 1;
          }
          else
          {
            (*(void (**)(uint64_t, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
            v38 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
            v39 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
            v40 = *(_QWORD *)(v39 + 24);
            if (v40 < 0xFFFFFFFF)
            {
              v41 = *(_OWORD *)(v39 + 16);
              *(_OWORD *)v38 = *(_OWORD *)v39;
              *(_OWORD *)(v38 + 16) = v41;
            }
            else
            {
              *(_QWORD *)(v38 + 24) = v40;
              (**(void (***)(void))(v40 - 8))();
            }
            *(_BYTE *)(a1 + v9) = 0;
          }
          v42 = (a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
          v43 = ((unint64_t)a2 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
          v44 = *(_QWORD *)(v43 + 24);
          *(_QWORD *)(v42 + 24) = v44;
          *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
          (**(void (***)(void))(v44 - 8))();
          v32 = 6;
LABEL_88:
          *(_BYTE *)(a1 + v10) = v32;
          break;
        default:
          if (v10 <= 3)
            v23 = v10;
          else
            v23 = 4;
          __asm { BR              X12 }
          return result;
      }
      v45 = (_QWORD *)((a1 + v54 + 7) & 0xFFFFFFFFFFFFFFF8);
      v46 = (_QWORD *)(((unint64_t)a2 + v54 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v45 = *v46;
      v47 = (_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFF8);
      v48 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v47 = *v48;
      v49 = (_OWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
      v50 = (__int128 *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
      v51 = *v50;
      v52 = v50[1];
      *(_OWORD *)((char *)v49 + 26) = *(__int128 *)((char *)v50 + 26);
      *v49 = v51;
      v49[1] = v52;
      *(_QWORD *)(((unint64_t)v49 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v50 + 49) & 0xFFFFFFFFFFFFF8);
      *(_BYTE *)(a1 + v11) = 0;
      swift_retain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_1BA514564@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v12;
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, &qword_1ED3CF8C8);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3CF940);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3BA810);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0980);
  result = sub_1BB86DF48();
  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1ED3CF9E0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B9820);
  result = sub_1BB86DF3C();
  if (result)
  {
    v9 = result;
    v10 = type metadata accessor for ShortcutManager();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v5;
    v11[3] = v6;
    result = sub_1BA4CECCC(&v12, (uint64_t)(v11 + 5));
    v11[4] = v7;
    v11[10] = v8;
    v11[11] = v9;
    a2[3] = v10;
    a2[4] = &protocol witness table for ShortcutManager;
    *a2 = v11;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BA5147A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  void (**v50)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  CGFloat v88;
  CGFloat v89;
  CGFloat v90;
  CGFloat v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (**v124)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  double *v133;
  char *v134;
  uint64_t v135;
  _QWORD v136[8];
  unsigned __int8 v137;
  uint64_t v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;
  CGRect v142;

  v123 = a4;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v105 - v19;
  v125 = type metadata accessor for FormatNodeStateData.Data();
  v124 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD))(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v126 = (uint64_t *)((char *)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v22 = (double *)a1[2];
  if (v22)
  {
    v119 = v17;
    v120 = v20;
    v121 = a5;
    v122 = a6;
    v117 = a7;
    v118 = a8;
    v23 = a1[3];
    v128 = a1[4];
    v24 = a1[5];
    v130 = a1[6];
    v25 = a1[7];
    v131 = a1[8];
    v26 = a1[10];
    v132 = a1[9];
    v27 = a1[11];
    v28 = v22[2];
    v29 = v22[3];
    v30 = v22[4];
    v31 = v22[5];
    v127 = v23;
    swift_retain();
    swift_retain();
    v129 = v24;
    v133 = v22;
    sub_1BA67D3F4(v24);
    swift_retain();
    swift_retain();
    swift_retain();
    v139.origin.x = v28;
    v139.origin.y = v29;
    v139.size.width = v30;
    v139.size.height = v31;
    CGRectGetMinX(v139);
    sub_1BB8735A0();
    v140.origin.x = v28;
    v140.origin.y = v29;
    v140.size.width = v30;
    v140.size.height = v31;
    CGRectGetMinY(v140);
    sub_1BB8735AC();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v39 = v38;
    v40 = sub_1BA4E7358(v32, v34, v36, v38);
    v41 = (char *)sub_1BA70B0DC(v40);
    swift_bridgeObjectRelease();
    v42 = (uint64_t *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                    + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    v44 = *v42;
    v43 = v42[1];
    v45 = *(_QWORD *)(a3 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46 = v134;
    v47 = sub_1BA825EFC(v45, (uint64_t)v41, v44, v43);
    if (v46)
    {
      swift_release();
      sub_1BA67D410((uint64_t)v133, v127, v128, v129);
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      return swift_release();
    }
    v49 = a3;
    v50 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))v47;
    v109 = v49;
    v134 = v41;
    v113 = v27;
    v114 = v26;
    v115 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v50)
    {
      swift_retain();
      sub_1BA8271CC(v134, (uint64_t)v136, v33, v35, v37, v39);
      v106 = (uint64_t)v50;
      swift_release();
      v50 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))v136[0];
      v51 = v136[1];
      v52 = v136[2];
      v53 = v136[3];
      v55 = v136[4];
      v54 = (_QWORD *)v136[5];
      v57 = v136[6];
      v56 = v136[7];
      v58 = v137;
      v59 = v123;
      v108 = 0;
    }
    else
    {
      v106 = 0;
      v51 = 0;
      v52 = 0;
      v53 = 0;
      v55 = 0;
      v54 = 0;
      v57 = 0;
      v56 = 0;
      v58 = 3;
      v108 = 0;
      v59 = v123;
    }
    v110 = v53;
    v111 = v55;
    v112 = v56;
    v116 = v51;
    v123 = v52;
    v60 = v126;
    *v126 = v50;
    v60[1] = v51;
    v60[2] = v52;
    v60[3] = v53;
    v60[4] = v55;
    v60[5] = v54;
    v60[6] = v57;
    v60[7] = v56;
    *((_BYTE *)v60 + 64) = v58;
    v61 = v125;
    v62 = v54;
    v107 = v57;
    swift_storeEnumTagMultiPayload();
    v63 = *(_QWORD *)(v59 + 24);
    v64 = (uint64_t)v120;
    sub_1BA4C2DD8((uint64_t)v60, (uint64_t)v120, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    v124[7](v64, 0, 1, v61);
    v65 = (uint64_t)v119;
    sub_1BA82E954(v64, (uint64_t)v119);
    v105 = v63;
    swift_beginAccess();
    LODWORD(v125) = v58;
    v124 = v50;
    sub_1BA7F6D0C(v50, v116, v123, v110, v111, (uint64_t)v62, v57, v112, v58);
    v66 = v122;
    swift_bridgeObjectRetain();
    sub_1BA722740(v65, v121, v66);
    swift_endAccess();
    sub_1BA5C699C(v64, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BA4A2E80((uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    v67 = (uint64_t)v134;
    v68 = (uint64_t *)(*(_QWORD *)&v134[OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory]
                    + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    v69 = v116;
    v70 = v123;
    v71 = *v68;
    v72 = v68[1];
    v73 = *(_QWORD *)(v109 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v74 = v108;
    v75 = sub_1BA7250BC(v73, v67, v71, v72);
    if (v74)
    {
      swift_release();
      sub_1BA7F6D98(v124, v69, v70, v110, v111, (uint64_t)v62, v107, v112, v125);
      swift_release();
      sub_1BA67D410((uint64_t)v133, v127, v128, v129);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    v76 = v75;
    v77 = v122;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v76 && (swift_beginAccess(), (v78 = *(_QWORD *)(v76 + 72)) != 0))
    {
      if (*(_QWORD *)(v78 + 16))
      {
        v79 = *(_QWORD *)(v76 + 48);
        v80 = *(_QWORD *)(v76 + 56);
        v81 = *(unsigned __int8 *)(v76 + 64);
        swift_retain();
        v82 = (uint64_t)v134;
        swift_retain();
        v83 = swift_bridgeObjectRetain();
        v100 = sub_1BB67D220(v83, v82);
        v126 = v62;
        swift_bridgeObjectRelease();
        swift_release();
        if (v81)
          v101 = 0;
        else
          v101 = v80;
        if (v81)
          v79 = 0;
        type metadata accessor for FormatAnimationData();
        v102 = swift_allocObject();
        *(_QWORD *)(v102 + 16) = v76;
        *(_QWORD *)(v102 + 24) = v79;
        *(_QWORD *)(v102 + 32) = v101;
        *(_BYTE *)(v102 + 40) = v81;
        v103 = v105;
        *(_QWORD *)(v102 + 48) = v100;
        swift_beginAccess();
        swift_retain_n();
        v77 = v122;
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v138 = *(_QWORD *)(v103 + 32);
        *(_QWORD *)(v103 + 32) = 0x8000000000000000;
        v86 = v121;
        sub_1BA81C03C(v102, v121, v77, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(v103 + 32) = v138;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        v84 = v102;
        swift_release_n();
        v85 = v127;
      }
      else
      {
        v126 = v62;
        v84 = 0;
        v85 = v127;
        v86 = v121;
      }
    }
    else
    {
      v84 = 0;
      v85 = v127;
      v86 = v121;
      v126 = v62;
    }
    v87 = v125;
    sub_1BB873594();
    v92 = 1;
    v108 = 0;
    if (v87 >= 3 && !v84)
    {
      v142.origin.x = v88;
      v142.origin.y = v89;
      v142.size.width = v90;
      v142.size.height = v91;
      v141.origin.x = v33;
      v141.origin.y = v35;
      v141.size.width = v37;
      v141.size.height = v39;
      v92 = !CGRectEqualToRect(v141, v142);
    }
    v127 = sub_1BA4B6D98(v92, v86, v77, v106, v76, v33, v35, v37, v39);
    v93 = swift_allocObject();
    v94 = (uint64_t)v133;
    swift_retain();
    swift_retain();
    v95 = v129;
    sub_1BA67D3F4(v129);
    sub_1BB86DD80();
    swift_release();
    swift_release();
    swift_release();
    sub_1BA7F6D98(v124, v116, v123, v110, v111, (uint64_t)v126, v107, v112, v125);
    swift_release();
    v96 = v135;
    *(_QWORD *)(v93 + 16) = v94;
    *(_QWORD *)(v93 + 24) = v85;
    v97 = v128;
    *(_QWORD *)(v93 + 32) = v128;
    *(_QWORD *)(v93 + 40) = v95;
    *(_BYTE *)(v93 + 48) = v130 & 1;
    v98 = v131;
    *(_QWORD *)(v93 + 56) = v96;
    *(_QWORD *)(v93 + 64) = v98;
    *(_BYTE *)(v93 + 72) = v132;
    v99 = v117;
    *(_QWORD *)(v93 + 80) = v127;
    *(_QWORD *)(v93 + 88) = v99;
    swift_retain();
    result = sub_1BA67D410(v94, v85, v97, v95);
    *v118 = v93 | 0x1000000000000000;
  }
  else
  {
    type metadata accessor for FormatLayoutError();
    sub_1BA50AD30((unint64_t *)&qword_1ED3B4C10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BA5154E4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 6581861;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x7472617473;
}

uint64_t sub_1BA51552C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA515558 + 4 * byte_1BB8AF1C2[*v0]))(0x6567616D69, 0xE500000000000000);
}

uint64_t sub_1BA515558()
{
  return 0x6E656D6E67696C61;
}

uint64_t sub_1BA515574()
{
  return 0x64656C616373;
}

uint64_t sub_1BA515588()
{
  return 1885433183;
}

uint64_t sub_1BA515598@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingURLExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingURLExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  char v35;

  v3 = v2;
  v29 = a2;
  sub_1BAE85074();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE850EC();
  sub_1BA4A2870(&qword_1ED3D11E0, (uint64_t (*)(uint64_t))sub_1BAE850EC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v15 - 2);
      v20 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v29 = v7;
      MEMORY[0x1E0C80A78](v21);
      *((_QWORD *)&v28 - 4) = &_s10CodingKeysON_170;
      *((_QWORD *)&v28 - 3) = sub_1BAE8516C();
      *((_QWORD *)&v28 - 2) = sub_1BA515960();
      *((_QWORD *)&v28 - 1) = sub_1BAE851B0();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726ABB0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5E3C48();
  v30 = 0uLL;
  v31 = 0;
  sub_1BB8740D4();
  v16 = v32;
  v17 = v33;
  v18 = v34;
  v28 = xmmword_1BB8A1A10;
  v32 = xmmword_1BB8A1A10;
  LOBYTE(v33) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v30 = v28;
    v31 = 0;
    sub_1BA5159A4();
    sub_1BB8740D4();
    v25 = v12;
    v26 = v35;
  }
  else
  {
    v25 = v12;
    v26 = 1;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
  v27 = v29;
  *(_OWORD *)v29 = v16;
  *(_QWORD *)(v27 + 16) = v17;
  *(_BYTE *)(v27 + 24) = v18;
  *(_BYTE *)(v27 + 25) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA515960()
{
  unint64_t result;

  result = qword_1ED3CB6A8;
  if (!qword_1ED3CB6A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD2E0, &_s10CodingKeysON_170);
    atomic_store(result, (unint64_t *)&qword_1ED3CB6A8);
  }
  return result;
}

unint64_t sub_1BA5159A4()
{
  unint64_t result;

  result = qword_1ED3CD558[0];
  if (!qword_1ED3CD558[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingURLExpressionLogic, &type metadata for FormatBindingURLExpressionLogic);
    atomic_store(result, qword_1ED3CD558);
  }
  return result;
}

_QWORD *sub_1BA5159E8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a3;
  v19 = a2;
  v17 = a1;
  v22 = sub_1BB86DC60();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB873450();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB87342C();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v10);
  v12 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v12);
  sub_1BB86DC9C();
  swift_allocObject();
  a4[3] = sub_1BB86DC90();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  sub_1BB872640();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, v11, MEMORY[0x1E0DEF828]);
  sub_1BA81D850(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9660, (uint64_t (*)(uint64_t))sub_1BA81D850, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D0], v6);
  a4[14] = sub_1BB87348C();
  a4[2] = v17;
  v13 = v19;
  sub_1BA4C010C(v19, (uint64_t)(a4 + 4));
  v14 = v21;
  sub_1BA4C010C(v21, (uint64_t)(a4 + 9));
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v18, *MEMORY[0x1E0DB3000], v22);
  swift_unknownObjectRetain();
  sub_1BB86DC6C();
  __swift_destroy_boxed_opaque_existential_1(v14);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return a4;
}

id sub_1BA515C9C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  objc_class *ObjectType;
  id v18;
  id v19;
  uint64_t v20;
  void (*v21)(_QWORD *__return_ptr);
  id v22;
  _QWORD v24[5];
  objc_super v25;
  _QWORD v26[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v26[3] = type metadata accessor for PuzzleStatsProcessor();
  v26[4] = &off_1E7325818;
  v26[0] = a6;
  swift_defaultActor_initialize();
  *(_QWORD *)(a9 + 304) = 0;
  *(_WORD *)(a9 + 312) = 2048;
  *(_QWORD *)(a9 + 152) = a1;
  sub_1BA4C010C((uint64_t)a2, a9 + 112);
  sub_1BA4C010C(a3, a9 + 160);
  *(_QWORD *)(a9 + 240) = a4;
  *(_QWORD *)(a9 + 248) = a5;
  sub_1BA4C010C((uint64_t)v26, a9 + 200);
  sub_1BA4C010C(a7, a9 + 256);
  *(_QWORD *)(a9 + 296) = a8;
  v25.receiver = (id)a9;
  v25.super_class = ObjectType;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v18 = a8;
  v19 = objc_msgSendSuper2(&v25, sel_init);
  v20 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v21 = *(void (**)(_QWORD *__return_ptr))(v20 + 80);
  v22 = v19;
  v21(v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  objc_msgSend(v18, sel_addObserver_, v22);

  __swift_destroy_boxed_opaque_existential_1(a7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v22;
}

uint64_t sub_1BA515E28()
{
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D39F0);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4200);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D4128);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  sub_1BA505288(0, &qword_1ED3D3360);
  sub_1BB86E5E4();
  swift_release();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for FormatLayoutViewFactory();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  sub_1BB86E5CC();
  swift_release();
  sub_1BB86E104();
  type metadata accessor for FeedModelFactory();
  sub_1BB86E5D8();
  swift_release();
  swift_release();
  sub_1BB86E110();
  sub_1BB86E5CC();
  return swift_release();
}

uint64_t sub_1BA516040(_QWORD *a1)
{
  return FormatBlendMode.encode(to:)(a1);
}

uint64_t FormatBlendMode.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v45[18];
  uint64_t v46;
  uint64_t v47;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v45[16] = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v45[15] = (char *)v45 - v6;
  MEMORY[0x1E0C80A78](v7);
  v45[14] = (char *)v45 - v8;
  MEMORY[0x1E0C80A78](v9);
  v45[13] = (char *)v45 - v10;
  MEMORY[0x1E0C80A78](v11);
  v45[12] = (char *)v45 - v12;
  MEMORY[0x1E0C80A78](v13);
  v45[11] = (char *)v45 - v14;
  MEMORY[0x1E0C80A78](v15);
  v45[10] = (char *)v45 - v16;
  MEMORY[0x1E0C80A78](v17);
  v45[9] = (char *)v45 - v18;
  MEMORY[0x1E0C80A78](v19);
  v45[8] = (char *)v45 - v20;
  MEMORY[0x1E0C80A78](v21);
  v45[7] = (char *)v45 - v22;
  MEMORY[0x1E0C80A78](v23);
  v45[6] = (char *)v45 - v24;
  MEMORY[0x1E0C80A78](v25);
  v45[5] = (char *)v45 - v26;
  MEMORY[0x1E0C80A78](v27);
  v45[4] = (char *)v45 - v28;
  MEMORY[0x1E0C80A78](v29);
  v45[3] = (char *)v45 - v30;
  MEMORY[0x1E0C80A78](v31);
  v45[2] = (char *)v45 - v32;
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)v45 - v35;
  v37 = *v1;
  v45[17] = a1;
  v46 = v37;
  v39 = a1[3];
  v38 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v39);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v40 = sub_1BB86EB84();
  v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v36, v41, v40);
  v42 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v43 = v47;
  sub_1BA69F160((uint64_t)v36, (uint64_t)sub_1BA90CF04, 0, v39, v38);
  if (!v43)
  {
    v45[1] = v41;
    v47 = v42;
    sub_1BA4A2E80((uint64_t)v36, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v36, type metadata accessor for FormatVersionRequirement);
}

uint64_t FormatBlendMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5169DC + 4 * aZ[*v0]))(0x6C616D726F6ELL, 0xE600000000000000);
}

uint64_t sub_1BA5169DC()
{
  return 0x796C7069746C756DLL;
}

uint64_t sub_1BA5169F4()
{
  return 0x6E6565726373;
}

uint64_t sub_1BA516A04()
{
  return 0x79616C7265766FLL;
}

uint64_t sub_1BA516A1C()
{
  return 0x6E656B726164;
}

uint64_t sub_1BA516A2C()
{
  return 0x6E65746867696CLL;
}

uint64_t sub_1BA516A44()
{
  return 0x646F44726F6C6F63;
}

uint64_t sub_1BA516A64()
{
  return 0x727542726F6C6F63;
}

uint64_t sub_1BA516AE8()
{
  return 6649192;
}

uint64_t sub_1BA516AF8()
{
  return 0x6974617275746173;
}

uint64_t sub_1BA516B18()
{
  return 0x726F6C6F63;
}

uint64_t sub_1BA516B2C()
{
  return 0x69736F6E696D756CLL;
}

uint64_t sub_1BA516B48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSubgroup.ResolvedContainer.init(from:)(a1, a2);
}

uint64_t FormatContentSubgroup.ResolvedContainer.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  sub_1BA51717C(0, &qword_1ED3AB688, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v18 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - v5;
  v19 = *v1;
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v24 = v1[1];
  v25 = v8;
  v26 = v1[5];
  v10 = v1[6];
  v11 = v1[7];
  v21 = v7;
  v22 = v10;
  v12 = v1[9];
  v23 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA517138();
  sub_1BB8746C8();
  if (v9 < 0)
  {
    LOBYTE(v27) = 1;
    v37 = 0;
    sub_1BA5172A4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v20;
    sub_1BB8741AC();
    if (!v15)
    {
      v27 = v19;
      v28 = v24;
      v29 = v21;
      v30 = v25;
      v31 = v9 & 0x7FFFFFFFFFFFFFFFLL;
      v32 = v26;
      v33 = v22;
      v34 = v11;
      v35 = v23;
      v36 = v12;
      v37 = 1;
      sub_1BA517260();
      sub_1BB8741AC();
    }
  }
  else
  {
    LOBYTE(v27) = 0;
    v37 = 0;
    sub_1BA5172A4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v13 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v20;
    sub_1BB8741AC();
    if (!v14)
    {
      v27 = v19;
      v28 = v24;
      v29 = v21;
      v30 = v25;
      v31 = v9;
      v32 = v26;
      v33 = v13;
      v34 = v11;
      v35 = v23;
      v36 = v12;
      v37 = 1;
      sub_1BA517260();
      sub_1BB8741AC();
    }
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  return sub_1BA7F4208();
}

uint64_t FormatContentSubgroup.ResolvedContainer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;

  sub_1BA51717C(0, &qword_1ED3AB428, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA517138();
  sub_1BB87468C();
  if (!v2)
  {
    v27 = 0;
    sub_1BA51721C();
    sub_1BB8740D4();
    v27 = 1;
    if ((v19 & 1) != 0)
    {
      sub_1BA5171D8();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v11 = v19;
      v12 = v20;
      v13 = v21;
      v14 = v22;
      v15 = v24;
      v16 = v25;
      v17 = v26;
      v18 = v23 | 0x8000000000000000;
    }
    else
    {
      sub_1BA5171D8();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v11 = v19;
      v12 = v20;
      v13 = v21;
      v14 = v22;
      v18 = v23;
      v15 = v24;
      v16 = v25;
      v17 = v26;
    }
    *(_QWORD *)a2 = v11;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v13;
    *(_QWORD *)(a2 + 24) = v14;
    *(_QWORD *)(a2 + 32) = v18;
    *(_OWORD *)(a2 + 40) = v15;
    *(_OWORD *)(a2 + 56) = v16;
    *(_QWORD *)(a2 + 72) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA517138()
{
  unint64_t result;

  result = qword_1ED3A6A80;
  if (!qword_1ED3A6A80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91D1C4, &_s17ResolvedContainerO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A80);
  }
  return result;
}

void sub_1BA51717C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA517138();
    v7 = a3(a1, &_s17ResolvedContainerO10CodingKeysON, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA5171D8()
{
  unint64_t result;

  result = qword_1ED39B7B0;
  if (!qword_1ED39B7B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroup.Resolved, &type metadata for FormatContentSubgroup.Resolved);
    atomic_store(result, (unint64_t *)&qword_1ED39B7B0);
  }
  return result;
}

unint64_t sub_1BA51721C()
{
  unint64_t result;

  result = qword_1ED3A6AC8;
  if (!qword_1ED3A6AC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91D19C, &_s17ResolvedContainerO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6AC8);
  }
  return result;
}

unint64_t sub_1BA517260()
{
  unint64_t result;

  result = qword_1ED39B7A8;
  if (!qword_1ED39B7A8)
  {
    result = MEMORY[0x1BCCE5B24]("冟+<~\v", &type metadata for FormatContentSubgroup.Resolved);
    atomic_store(result, (unint64_t *)&qword_1ED39B7A8);
  }
  return result;
}

unint64_t sub_1BA5172A4()
{
  unint64_t result;

  result = qword_1ED3A6AA0;
  if (!qword_1ED3A6AA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91D174, &_s17ResolvedContainerO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6AA0);
  }
  return result;
}

uint64_t sub_1BA5172E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSlotItemCountLimit.init(from:)(a1, a2);
}

uint64_t FormatSlotItemCountLimit.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  _QWORD *v36;

  v31 = a2;
  v33 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v33);
  v30 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v32 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - v6;
  v8 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1E0C80A78](v8);
  v10 = (__int128 *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v11 = v36;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_9:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v21 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v21);
  }
  v29 = v10;
  v13 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_1BB872874();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v15 = v32;
  v16 = v7;
  if ((v13 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (unint64_t *)(v17 + 40);
      while (1)
      {
        v20 = *v19;
        if (*v19 >= 4)
          break;
        v19 += 2;
        if (!--v18)
          goto LABEL_7;
      }
      v25 = *(v19 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v26 = v25;
      *(_QWORD *)(v26 + 8) = v20;
      *(_QWORD *)(v26 + 16) = &unk_1E726E410;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v25, v20);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v15);
      a1 = v36;
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA517708();
  v35 = 0uLL;
  sub_1BB8740D4();
  if ((_BYTE)v34)
  {
    if (v34 == 1)
    {
      v34 = xmmword_1BB87FC90;
      sub_1BA51774C();
      sub_1BB8740D4();
      v23 = v31;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v15);
      v24 = v29;
      *v29 = v35;
    }
    else
    {
      v35 = xmmword_1BB87FC90;
      sub_1BA4A2870(&qword_1ED3B6288, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition);
      v27 = (uint64_t)v30;
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v15);
      v24 = v29;
      sub_1BA5193C4(v27, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v23 = v31;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v15);
    v23 = v31;
    v24 = v29;
  }
  swift_storeEnumTagMultiPayload();
  sub_1BA5193C4((uint64_t)v24, v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotItemCountLimit);
  v21 = (uint64_t)v36;
  return __swift_destroy_boxed_opaque_existential_1(v21);
}

unint64_t sub_1BA517708()
{
  unint64_t result;

  result = qword_1ED3CAD30;
  if (!qword_1ED3CAD30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6A58, &_s10CodingTypeON_28);
    atomic_store(result, (unint64_t *)&qword_1ED3CAD30);
  }
  return result;
}

unint64_t sub_1BA51774C()
{
  unint64_t result;

  result = qword_1ED3BDAC8;
  if (!qword_1ED3BDAC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCountLimit, &type metadata for FormatCountLimit);
    atomic_store(result, (unint64_t *)&qword_1ED3BDAC8);
  }
  return result;
}

uint64_t sub_1BA517790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v5;
  id v6;
  uint64_t result;

  v5 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (v6)
  {
    sub_1BB8729A0();

  }
  sub_1BA517860();
  result = sub_1BB873A14();
  *a4 = result;
  return result;
}

unint64_t sub_1BA517860()
{
  unint64_t result;

  result = qword_1ED3D4460;
  if (!qword_1ED3D4460)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3D4460);
  }
  return result;
}

uint64_t FormatLayoutSizeSnapshot.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA5178C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSubgroup.init(from:)(a1, a2);
}

uint64_t sub_1BA5178D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for GroupLayoutContext();
  v7 = v4 + *(int *)(v6 + 20);
  v8 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v4 + *(int *)(v6 + 24);
  if (*(_QWORD *)(v9 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  swift_release();
  swift_release();
  v13 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v13 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_release();
}

void *sub_1BA517A04@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _BYTE v31[24];
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  _UNKNOWN **v37;
  _BYTE v38[24];
  uint64_t v39;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D5E90);
  result = (void *)sub_1BB86DF48();
  if (!v39)
  {
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97D0);
  result = (void *)sub_1BB86DF3C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = result;
  v6 = objc_msgSend(result, sel_networkBehaviorMonitor);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58AF0]), sel_initWithNetworkBehaviorMonitor_, v6);
  result = (void *)swift_unknownObjectRelease();
  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39D0);
  result = (void *)sub_1BB86DF48();
  if (!v36)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D5180);
  result = (void *)sub_1BB86DF18();
  if (!v34)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = type metadata accessor for SportsDataServiceRequestFetcher();
  v9 = (_QWORD *)swift_allocObject();
  v10 = sub_1BA5159E8((uint64_t)v7, (uint64_t)v35, (uint64_t)&v33, v9);

  v36 = v8;
  v37 = &off_1E72DB4B8;
  v35[0] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D38C0);
  result = (void *)sub_1BB86DF48();
  if (!v34)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D5E70);
  result = (void *)sub_1BB86DF48();
  if (!v32)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = (void *)sub_1BB86DF3C();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D5A48);
  result = (void *)sub_1BB86DF48();
  if (v30)
  {
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
    v18 = MEMORY[0x1E0C80A78](v17);
    v20 = (uint64_t *)((char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
    v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
    v23 = MEMORY[0x1E0C80A78](v22);
    v25 = (uint64_t *)((char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
    v27 = sub_1BA4BFF2C(*v15, *v20, &v33, *v25, v11, &v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    result = (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    *a2 = v27;
    a2[1] = &off_1E72E3128;
    return result;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1BA517EA4()
{
  sub_1BA517F00();
  return sub_1BB872D60();
}

unint64_t sub_1BA517F00()
{
  unint64_t result;

  result = qword_1ED3B6AB8;
  if (!qword_1ED3B6AB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScalingStyle, &type metadata for FormatFontScalingStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3B6AB8);
  }
  return result;
}

uint64_t _s8NewsFeed14FormatItemKindO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5)
        goto LABEL_38;
      v3 = 0;
      v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1)
        goto LABEL_38;
      v3 = 1;
      v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2)
        goto LABEL_38;
      v6 = 1;
      v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3)
        goto LABEL_38;
      v6 = 1;
      v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4)
        goto LABEL_38;
      v6 = 1;
      v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5)
        goto LABEL_38;
      v6 = 1;
      v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6)
        goto LABEL_38;
      v6 = 1;
      v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7)
        goto LABEL_38;
      v6 = 1;
      v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8)
        goto LABEL_38;
      v6 = 1;
      v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9)
        goto LABEL_38;
      v6 = 1;
      v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10)
        goto LABEL_38;
      v6 = 1;
      v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11)
        goto LABEL_38;
      v6 = 1;
      v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12)
        goto LABEL_38;
      v6 = 1;
      v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13)
        goto LABEL_38;
      v6 = 1;
      v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14)
        goto LABEL_38;
      v6 = 1;
      v3 = 14;
      break;
    default:
      if (v5 < 0xF)
      {
LABEL_38:
        v6 = 0;
      }
      else if (v2 == v4 && v3 == v5)
      {
        v6 = 1;
      }
      else
      {
        v6 = sub_1BB874398();
      }
      sub_1BA682148(v4, v5);
      sub_1BA682148(v2, v3);
      break;
  }
  sub_1BA766C18(v2, v3);
  sub_1BA766C18(v4, v5);
  return v6 & 1;
}

uint64_t sub_1BA518130(_QWORD *a1)
{
  return FormatSystemFont.encode(to:)(a1);
}

uint64_t destroy for FormatButtonNodeStateMaskDataLayoutAttributes()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatColorNotExpression(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_1BA5181A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA5181E0 + 4 * byte_1BB8AED8A[*v0]))(0x756F72676B636162, 0xEF726F6C6F43646ELL);
}

uint64_t sub_1BA5181E0()
{
  return 0x65736E4965676465;
}

uint64_t sub_1BA5181FC()
{
  return 0x615272656E726F63;
}

uint64_t sub_1BA51821C()
{
  return 1885433183;
}

uint64_t sub_1BA51822C()
{
  unsigned __int8 *v0;

  return sub_1BAD9BCFC(*v0);
}

uint64_t sub_1BA518234(uint64_t a1, uint64_t a2)
{
  sub_1BA73B1B8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1BA518280()
{
  sub_1BA518328();
  return sub_1BB872D60();
}

uint64_t sub_1BA5182DC()
{
  sub_1BA518328();
  return sub_1BB872D0C();
}

unint64_t sub_1BA518328()
{
  unint64_t result;

  result = qword_1ED3B4A98;
  if (!qword_1ED3B4A98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DFFDC, &_s14descr1E72DA4C9V7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3B4A98);
  }
  return result;
}

uint64_t FormatDecorationProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  swift_bridgeObjectRelease();

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 64);
  swift_bridgeObjectRelease();
  sub_1BA70AB94(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA5183F8@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  type metadata accessor for FeedCursorGroup(0, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1);
  result = FeedCursorGroup.identifier.getter();
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t FeedCursorGroup.identifier.getter()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1BB86DEE8();
}

uint64_t sub_1BA518510@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA518540(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1BA518540@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v36 = a4;
  v29[0] = a2;
  v29[1] = a3;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)v29 - v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_1BB873A2C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v29 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x1E0C80A78](v10);
  v34 = (uint64_t)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v35 = (char *)v29 - v16;
  v33 = *a1;
  v17 = a1[2];
  v30 = a1[1];
  v31 = v17;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (!v40)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v37 = v39;
  v38 = v40;
  swift_getAssociatedConformanceWitness();
  sub_1BB872D00();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    result = 0;
LABEL_9:
    *v36 = result;
    return result;
  }
  v19 = v35;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v35, v12, AssociatedTypeWitness);
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v20 = v40;
  if (!v40)
    goto LABEL_11;
  v21 = v39;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v22 = v38;
  v23 = (uint64_t)v32;
  if (!v38)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v33 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v34, v19, AssociatedTypeWitness);
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  v24 = sub_1BB86C8B0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24);
  if ((_DWORD)result == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v30 = v22;
  v31 = v21;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v41)
  {
    v25 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedCursorManifestGroupEntry(0, v25, AssociatedConformanceWitness, v27);
    v28 = sub_1BB86F340();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v35, AssociatedTypeWitness);
    result = sub_1BA518930(v31, v20, v33, v30, v34, v23, v28);
    goto LABEL_9;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FeedCursorManifestGroupEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedCursorManifestGroupEntry);
}

uint64_t sub_1BA518930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  sub_1BA5189B4(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

_QWORD *sub_1BA5189B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedTypeWitness;
  char *v14;
  uint64_t v15;

  v11 = *v7;
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v7[5] = a4;
  v12 = (char *)v7 + *(_QWORD *)(v11 + 112);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v12, a5, AssociatedTypeWitness);
  v14 = (char *)v7 + *(_QWORD *)(*v7 + 120);
  v15 = sub_1BB86C8B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a6, v15);
  *(_QWORD *)((char *)v7 + *(_QWORD *)(*v7 + 128)) = a7;
  return v7;
}

uint64_t sub_1BA518B10@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FeedGroupRepooling.init(from:)(a1, a2);
}

uint64_t FeedGroupRepooling.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1BA518CA0(0, &qword_1ED39C078, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA518C5C();
  sub_1BB87468C();
  if (!v2)
  {
    sub_1BA518CFC();
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA518C5C()
{
  unint64_t result;

  result = qword_1ED39AB40;
  if (!qword_1ED39AB40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB912E78, &type metadata for FeedGroupRepooling.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39AB40);
  }
  return result;
}

void sub_1BA518CA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA518C5C();
    v7 = a3(a1, &type metadata for FeedGroupRepooling.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA518CFC()
{
  unint64_t result;

  result = qword_1ED39C5E8[0];
  if (!qword_1ED39C5E8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupFreezing, &type metadata for FeedGroupFreezing);
    atomic_store(result, qword_1ED39C5E8);
  }
  return result;
}

uint64_t sub_1BA518D40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v14;

  v2 = MEMORY[0x1E0DEA968];
  v3 = MEMORY[0x1E0DB2EC0];
  sub_1BA50CAF0(0, (unint64_t *)&qword_1ED39A6D0, &qword_1ED39A6C8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  sub_1BA50CAA8(0, &qword_1ED39A6C8, v2, v3, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v11 = v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v12(v9, 1, 1, v10);
  v12(v6, 1, 1, v11);
  sub_1BA50CAA8(0, &qword_1ED39A708, v2, v3, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A670, v2, v3, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  result = sub_1BB86F058();
  *a1 = result;
  return result;
}

uint64_t sub_1BA518EE8()
{
  sub_1BA518F44();
  return sub_1BB872D60();
}

unint64_t sub_1BA518F44()
{
  unint64_t result;

  result = qword_1ED3B5A98;
  if (!qword_1ED3B5A98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibility, &type metadata for FormatAccessibility);
    atomic_store(result, (unint64_t *)&qword_1ED3B5A98);
  }
  return result;
}

uint64_t sub_1BA518F88()
{
  unsigned __int8 *v0;

  return sub_1BADB6F38(*v0);
}

uint64_t sub_1BA518F90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCommandOpenURL.init(from:)(a1, a2);
}

uint64_t FormatCommandOpenURL.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  _OWORD v40[2];
  uint64_t v41;

  v37 = a2;
  v38 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1E0C80A78](v38);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v36 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - v7;
  v9 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v12 = v41;
  sub_1BB87468C();
  if (!v12)
  {
    v34 = v4;
    v35 = 0;
    v32 = v11;
    v33 = v9;
    v41 = v6;
    v13 = v37;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v14 = sub_1BB872874();
    v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
    swift_bridgeObjectRelease();
    v16 = v36;
    v17 = v8;
    if ((v15 & 1) != 0)
    {
      v18 = sub_1BB8740EC();
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v20 = (unint64_t *)(v18 + 40);
        while (1)
        {
          v21 = *v20;
          if (*v20 >= 4)
            break;
          v20 += 2;
          if (!--v19)
            goto LABEL_7;
        }
        v26 = *(v20 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1BA98D1F0();
        swift_allocError();
        *(_QWORD *)v27 = v26;
        *(_QWORD *)(v27 + 8) = v21;
        *(_QWORD *)(v27 + 16) = &unk_1E72502D8;
        *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA98D234(v26, v21);
        goto LABEL_12;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BA519408();
    v40[0] = 0uLL;
    v22 = v35;
    sub_1BB8740D4();
    if (v22)
    {
LABEL_12:
      (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v16);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    if (v39 < 2u)
    {
      v40[0] = xmmword_1BB87FC90;
      sub_1BA4A2870(&qword_1ED39E5A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAbsoluteURL, (uint64_t)&protocol conformance descriptor for FormatAbsoluteURL);
      v29 = (uint64_t)v34;
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v16);
      v30 = v29;
      v25 = v32;
      sub_1BA5193C4(v30, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    }
    else
    {
      v23 = v41;
      v39 = xmmword_1BB87FC90;
      sub_1BA64437C();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v16);
      v24 = *(_OWORD *)((char *)v40 + 8);
      v25 = v32;
      *v32 = *(_QWORD *)&v40[0];
      *(_OWORD *)(v25 + 1) = v24;
    }
    swift_storeEnumTagMultiPayload();
    sub_1BA5193C4((uint64_t)v25, v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA5193C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1BA519408()
{
  unint64_t result;

  result = qword_1ED3B60F8;
  if (!qword_1ED3B60F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB889F40, &type metadata for FormatCommandOpenURL.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3B60F8);
  }
  return result;
}

uint64_t FormatItemNodeLayoutAttributes.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 72));
  return swift_deallocClassInstance();
}

uint64_t sub_1BA519498(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t result;
  id v6;
  _BYTE v7[40];

  v3 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9790);
  sub_1BB872A9C();
  v4 = (void *)sub_1BB86DF0C();
  result = swift_bridgeObjectRelease();
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1BA505288(0, (unint64_t *)&unk_1ED3B09F0);
    *(_QWORD *)(swift_allocObject() + 16) = v4;
    v6 = v4;
    sub_1BB86DF30();
    swift_release();

    swift_beginAccess();
    sub_1BA51969C((uint64_t)v7, v3 + 16);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1BA519600(_QWORD *a1)
{
  return sub_1BA519618(a1);
}

uint64_t sub_1BA519618(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9790);
  sub_1BB872A9C();
  sub_1BB86DDE0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA51969C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4DD3F4(0, &qword_1ED3B0A00, (unint64_t *)&unk_1ED3B09F0, MEMORY[0x1E0DB9CB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA519700(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7, int a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, double);
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  __int128 v59;
  __int128 v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v76[2];
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;

  v86 = a8;
  v82 = a7;
  v83 = a6;
  v89 = a2;
  v90 = a5;
  v88 = a4;
  v91 = a3;
  v10 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v9 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v81 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v80 = *(_QWORD *)(v81 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v85 = (char *)v76 - v12;
  v92 = v9;
  v13 = v10;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedTypeWitness();
  v16 = sub_1BB873A2C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v76 - v18;
  v20 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v21);
  v78 = (char *)v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v23);
  v77 = (char *)v76 - v25;
  v26 = *(uint64_t (**)(uint64_t, uint64_t, double))(AssociatedConformanceWitness + 88);
  v84 = a1;
  v79 = AssociatedTypeWitness;
  if ((v26(AssociatedTypeWitness, AssociatedConformanceWitness, v24) & 1) != 0)
  {
    v93 = v91;
    v94 = v88;
    v95 = v90;
    swift_bridgeObjectRetain();
    sub_1BB86E7C4();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v15) != 1)
    {
      v68 = v77;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v77, v19, v15);
      sub_1BA7AA598();
      v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_1BB87CE70;
      v93 = v91;
      v94 = v88;
      v95 = v90;
      type metadata accessor for FeedPoolManager.Key(0, v13, v92, v70);
      v71 = sub_1BA4E48E4();
      v73 = v72;
      *(_QWORD *)(v69 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v69 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v69 + 32) = v71;
      *(_QWORD *)(v69 + 40) = v73;
      v74 = sub_1BB87330C();
      sub_1BB86EF44("feed pool exists in cache key=%{public}@", 40, 2, &dword_1BA493000, v83, v74, v69);
      swift_bridgeObjectRelease();
      sub_1BB86EAAC();
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v78, v68, v15);
      v67 = sub_1BB86E9D4();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v68, v15);
      return v67;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  sub_1BA7AA598();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BB87CE70;
  v28 = v91;
  v93 = v91;
  v76[1] = v15;
  v29 = v88;
  v94 = v88;
  v95 = v90;
  v87 = v13;
  type metadata accessor for FeedPoolManager.Key(0, v13, v92, v30);
  v31 = sub_1BA4E48E4();
  v33 = v32;
  *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v27 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v27 + 32) = v31;
  *(_QWORD *)(v27 + 40) = v33;
  v34 = sub_1BB87330C();
  v35 = (void *)v83;
  sub_1BB86EF44("Feed pool starting fetch for key=%{public}@", 43, 2, &dword_1BA493000, v83, v34, v27);
  v36 = swift_bridgeObjectRelease();
  LOBYTE(v27) = v28;
  MEMORY[0x1E0C80A78](v36);
  v37 = v84;
  v76[-4] = v89;
  v76[-3] = v37;
  v38 = v82;
  v76[-2] = v82;
  LOBYTE(v76[-1]) = v86;
  v76[0] = sub_1BB86EC14();
  v39 = v81;
  v78 = *(char **)(v81 + 16);
  v40 = v79;
  ((void (*)(char *, uint64_t, uint64_t))v78)(v85, v37, v79);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 64) & ~v41;
  v77 = (char *)(v41 | 7);
  v80 += 7;
  v43 = (v80 + v42) & 0xFFFFFFFFFFFFFFF8;
  v44 = swift_allocObject();
  v45 = v92;
  *(_QWORD *)(v44 + 16) = v87;
  *(_QWORD *)(v44 + 24) = v45;
  *(_QWORD *)(v44 + 32) = v35;
  *(_BYTE *)(v44 + 40) = v27;
  v46 = v90;
  *(_QWORD *)(v44 + 48) = v29;
  *(_QWORD *)(v44 + 56) = v46;
  v81 = *(_QWORD *)(v39 + 32);
  v47 = v85;
  ((void (*)(uint64_t, char *, uint64_t))v81)(v44 + v42, v85, v40);
  *(_QWORD *)(v44 + v43) = v89;
  swift_bridgeObjectRetain();
  v48 = v35;
  swift_retain();
  v49 = (void *)sub_1BB86E854();
  v83 = sub_1BB86E968();
  swift_release();

  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v78)(v47, v84, v40);
  v50 = (v41 + 80) & ~v41;
  v51 = (v80 + v50) & 0xFFFFFFFFFFFFFFF8;
  v52 = swift_allocObject();
  v53 = v88;
  v54 = v92;
  *(_QWORD *)(v52 + 16) = v87;
  *(_QWORD *)(v52 + 24) = v54;
  *(_BYTE *)(v52 + 32) = v86;
  v55 = v48;
  *(_QWORD *)(v52 + 40) = v48;
  *(_BYTE *)(v52 + 48) = v91;
  v56 = v89;
  v57 = v90;
  *(_QWORD *)(v52 + 56) = v53;
  *(_QWORD *)(v52 + 64) = v57;
  *(_QWORD *)(v52 + 72) = v56;
  ((void (*)(uint64_t, char *, uint64_t))v81)(v52 + v50, v47, v40);
  v58 = (_OWORD *)(v52 + v51);
  v59 = v38[3];
  v58[2] = v38[2];
  v58[3] = v59;
  v58[4] = v38[4];
  v60 = v38[1];
  *v58 = *v38;
  v58[1] = v60;
  swift_bridgeObjectRetain();
  v61 = v55;
  swift_retain();
  sub_1BA653910((uint64_t)v38);
  v62 = (void *)sub_1BB86E854();
  sub_1BB86EA10();
  swift_release();

  swift_release();
  v63 = swift_allocObject();
  v64 = v92;
  *(_QWORD *)(v63 + 16) = v87;
  *(_QWORD *)(v63 + 24) = v64;
  *(_QWORD *)(v63 + 32) = v61;
  *(_BYTE *)(v63 + 40) = v91;
  *(_QWORD *)(v63 + 48) = v53;
  *(_QWORD *)(v63 + 56) = v57;
  swift_bridgeObjectRetain();
  v65 = v61;
  v66 = (void *)sub_1BB86E854();
  v67 = sub_1BB86E9A4();
  swift_release();
  swift_release();

  return v67;
}

void sub_1BA519D98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  _QWORD *v60;
  void *v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  int v69;
  id v70;
  uint64_t v71;
  char v72;
  char v73;
  int v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  double v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  double v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  double v92;
  uint64_t v93;
  double v94;
  uint64_t inited;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153[3];
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;

  v2 = v1;
  v139 = a1;
  v3 = type metadata accessor for FormatVersionRequirement(0);
  v136 = *(_QWORD *)(v3 - 8);
  v137 = v3;
  MEMORY[0x1E0C80A78](v3);
  v135 = (uint64_t)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 56);
  v144 = *(_QWORD *)(v1 + 48);
  v145 = v5;
  v10 = *(unsigned __int8 *)(v1 + 64);
  *(_QWORD *)&v158 = v5;
  *((_QWORD *)&v158 + 1) = v6;
  v159 = v8;
  v160 = v7;
  v161 = v144;
  v162 = v9;
  v163 = v10;
  sub_1BA51AA88();
  v11 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v142 = objc_msgSend((id)objc_opt_self(), sel_animationWithKeyPath_, v11);

  v12 = v144;
  v13 = v145;
  *(_QWORD *)&v158 = v145;
  *((_QWORD *)&v158 + 1) = v6;
  v159 = v8;
  v160 = v7;
  v161 = v144;
  v162 = v9;
  v163 = v10;
  v138 = v142;
  v140 = v6;
  v141 = v8;
  LODWORD(v142) = v10;
  sub_1BA51A92C(v13, v6, v8, v7, v12, v9, v10);
  v14 = v143;
  sub_1BA4A4B58();
  v143 = v14;
  if (v14)
  {
    v16 = v144;
    v15 = v145;
    v17 = v140;
    v18 = v141;
    v19 = v7;
    v20 = v9;
LABEL_3:
    sub_1BA51A9E0(v15, v17, v18, v19, v16, v20, (char)v142);
    v21 = v138;

    return;
  }
  v22 = v138;
  v133 = v2;
  v23 = v144;
  v24 = v145;
  sub_1BA51A9E0(v145, v140, v141, v7, v144, v9, (char)v142);
  v25 = v154;
  if (v154)
  {
    v26 = __swift_project_boxed_opaque_existential_1(v153, v154);
    v134 = &v130;
    v27 = *(_QWORD *)(v25 - 8);
    v28 = MEMORY[0x1E0C80A78](v26);
    v30 = v7;
    v31 = (char *)&v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v27 + 16))(v31, v28);
    v32 = sub_1BB874380();
    v33 = *(void (**)(char *, uint64_t))(v27 + 8);
    v34 = v31;
    v35 = v9;
    v36 = v30;
    v24 = v145;
    v33(v34, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
  }
  else
  {
    v36 = v7;
    v32 = 0;
    v35 = v9;
  }
  objc_msgSend(v22, sel_setFromValue_, v32);

  swift_unknownObjectRelease();
  v38 = v140;
  v37 = v141;
  *(_QWORD *)&v158 = v24;
  *((_QWORD *)&v158 + 1) = v140;
  v159 = v141;
  v160 = v36;
  v161 = v23;
  v162 = v35;
  v39 = (char)v142;
  v163 = (char)v142;
  v40 = v22;
  sub_1BA51A92C(v24, v38, v37, v36, v23, v35, v39);
  v41 = v24;
  v42 = v143;
  sub_1BA4A49CC();
  v143 = v42;
  if (v42)
  {
    sub_1BA51A9E0(v24, v38, v141, v36, v23, v35, (char)v142);

    return;
  }
  v138 = v40;
  sub_1BA51A9E0(v24, v38, v141, v36, v23, v35, (char)v142);
  v43 = v154;
  v131 = v36;
  v132 = v35;
  if (v154)
  {
    v44 = __swift_project_boxed_opaque_existential_1(v153, v154);
    v45 = *(_QWORD *)(v43 - 8);
    v46 = MEMORY[0x1E0C80A78](v44);
    v48 = (char *)&v130 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v45 + 16))(v48, v46);
    v49 = sub_1BB874380();
    v41 = v145;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v43);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
  }
  else
  {
    v49 = 0;
  }
  v50 = v138;
  objc_msgSend(v138, sel_setToValue_, v49);

  swift_unknownObjectRelease();
  v52 = v140;
  v51 = v141;
  *(_QWORD *)&v158 = v41;
  *((_QWORD *)&v158 + 1) = v140;
  v54 = v131;
  v53 = v132;
  v159 = v141;
  v160 = v131;
  v55 = v144;
  v161 = v144;
  v162 = v132;
  v56 = (char)v142;
  v163 = (char)v142;
  v138 = v50;
  sub_1BA51A92C(v41, v52, v51, v54, v55, v53, v56);
  v57 = v143;
  sub_1BA825674();
  v143 = v57;
  if (v57)
  {
    v15 = v41;
    v17 = v140;
    v18 = v141;
    v19 = v131;
    v20 = v132;
    v16 = v144;
    goto LABEL_3;
  }
  v58 = v138;
  sub_1BA51A9E0(v41, v140, v141, v131, v144, v132, (char)v142);
  v59 = v154;
  if (v154)
  {
    v60 = __swift_project_boxed_opaque_existential_1(v153, v154);
    v61 = v58;
    v62 = *(_QWORD *)(v59 - 8);
    v63 = MEMORY[0x1E0C80A78](v60);
    v65 = (char *)&v130 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v62 + 16))(v65, v63);
    v66 = sub_1BB874380();
    v67 = *(void (**)(char *, uint64_t))(v62 + 8);
    v58 = v61;
    v67(v65, v59);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
  }
  else
  {
    v66 = 0;
  }
  v68 = v133;
  objc_msgSend(v58, sel_setByValue_, v66);

  swift_unknownObjectRelease();
  v69 = *(unsigned __int8 *)(v68 + 88);
  if (v69 != 255)
  {
    v158 = *(_OWORD *)(v68 + 72);
    LOBYTE(v159) = v69 & 1;
    v70 = v58;
    sub_1BB86DD80();
    v71 = v143;
    v72 = FormatBoolean.value(contextLayoutOptions:)(v153[0]);
    v143 = v71;
    if (v71)
    {
LABEL_22:

LABEL_36:
      swift_release();
      return;
    }
    v73 = v72;
    swift_release();
    objc_msgSend(v70, sel_setCumulative_, v73 & 1);

  }
  v74 = *(unsigned __int8 *)(v68 + 112);
  if (v74 != 255)
  {
    v158 = *(_OWORD *)(v68 + 96);
    LOBYTE(v159) = v74 & 1;
    v70 = v58;
    sub_1BB86DD80();
    v75 = v143;
    v76 = FormatBoolean.value(contextLayoutOptions:)(v153[0]);
    v143 = v75;
    if (v75)
      goto LABEL_22;
    v77 = v76;
    swift_release();
    objc_msgSend(v70, sel_setAdditive_, v77 & 1);

  }
  v78 = *(_QWORD *)(v68 + 120);
  if (v78)
  {
    sub_1BB86DD80();
    v79 = v143;
    v80 = sub_1BA72BED4(v158, v78);
    v143 = v79;
    if (v79)
      goto LABEL_35;
    v81 = v80;
    swift_release();
    objc_msgSend(v58, sel_setMass_, v81);
  }
  v82 = *(_QWORD *)(v68 + 128);
  if (v82)
  {
    sub_1BB86DD80();
    v83 = v143;
    v84 = sub_1BA72BED4(v158, v82);
    v143 = v83;
    if (v83)
      goto LABEL_35;
    v85 = v84;
    swift_release();
    objc_msgSend(v58, sel_setStiffness_, v85);
  }
  v86 = *(_QWORD *)(v68 + 136);
  if (!v86)
    goto LABEL_33;
  sub_1BB86DD80();
  v87 = v143;
  v88 = sub_1BA72BED4(v158, v86);
  v143 = v87;
  if (v87)
  {
LABEL_35:

    goto LABEL_36;
  }
  v89 = v88;
  swift_release();
  objc_msgSend(v58, sel_setDamping_, v89);
LABEL_33:
  v90 = *(_QWORD *)(v68 + 144);
  if (v90)
  {
    sub_1BB86DD80();
    v91 = v143;
    v92 = sub_1BA72BED4(v158, v90);
    v143 = v91;
    v93 = v137;
    if (v91)
      goto LABEL_35;
    v94 = v92;
    swift_release();
    objc_msgSend(v58, sel_setInitialVelocity_, v94);
  }
  else
  {
    v93 = v137;
  }
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9D90, (uint64_t (*)(uint64_t))sub_1BA76B9F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v96 = type metadata accessor for FormatOption();
  v137 = swift_allocBox();
  v98 = v97;
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v99 = sub_1BB86EB84();
  v100 = __swift_project_value_buffer(v99, (uint64_t)qword_1ED476C08);
  v101 = v135;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v135, v100, v99);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  objc_msgSend(v58, sel_settlingDuration);
  v103 = v102;
  v104 = swift_allocObject();
  *(_QWORD *)(v104 + 16) = v103;
  *(_QWORD *)(v104 + 24) = MEMORY[0x1E0DEE9D8];
  *v98 = 0xD000000000000010;
  v98[1] = 0x80000001BB96DF20;
  v98[2] = v104 | 0x3000000000000000;
  v98[3] = 1;
  v105 = (uint64_t)v98 + *(int *)(v96 + 28);
  sub_1BA5193C4(v101, v105, type metadata accessor for FormatVersionRequirement);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v136 + 56))(v105, 0, 1, v93);
  *(_QWORD *)(inited + 32) = v137;
  v137 = sub_1BA70B0DC(inited);
  swift_setDeallocating();
  sub_1BA76B9F0(0);
  swift_arrayDestroy();
  v106 = v144;
  v107 = v145;
  v109 = v140;
  v108 = v141;
  v153[0] = v145;
  v153[1] = v140;
  v110 = v131;
  v111 = v132;
  v153[2] = v141;
  v154 = v131;
  v155 = v144;
  v156 = v132;
  v112 = (char)v142;
  v157 = (char)v142;
  v135 = sub_1BA51AA88();
  v136 = v113;
  sub_1BA5193C4(v133 + 152, (uint64_t)&v158, (uint64_t (*)(_QWORD))sub_1BA89631C);
  sub_1BA5193C4((uint64_t)&v158, (uint64_t)v153, (uint64_t (*)(_QWORD))sub_1BA89631C);
  v146 = v107;
  v147 = v109;
  v148 = v108;
  v149 = v110;
  v150 = v106;
  v151 = v111;
  v152 = v112;
  sub_1BA51A92C(v107, v109, v108, v110, v106, v111, v112);
  sub_1BA8966F8((uint64_t)&v158, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
  v114 = v143;
  sub_1BA4AC5A4();
  v117 = v106;
  v143 = v114;
  if (v114)
  {

    swift_bridgeObjectRelease();
    swift_release();
    v118 = v107;
LABEL_45:
    sub_1BA51A9E0(v118, v109, v141, v110, v117, v132, (char)v142);
    sub_1BA8966F8((uint64_t)&v158, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
    return;
  }
  v133 = v115;
  v134 = (uint64_t *)v116;
  v119 = v107;
  v120 = v141;
  v121 = v106;
  v122 = v132;
  v123 = v107;
  v124 = (char)v142;
  sub_1BA51A9E0(v119, v109, v141, v110, v121, v132, (char)v142);
  v146 = v123;
  v147 = v109;
  v148 = v120;
  v149 = v110;
  v150 = v117;
  v151 = v122;
  v152 = v124;
  sub_1BA51A92C(v123, v109, v120, v110, v117, v122, v124);
  v125 = v143;
  sub_1BA4AEA6C();
  v143 = v125;
  if (v125)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA49EBE0(v133);

    v118 = v123;
    goto LABEL_45;
  }
  v128 = v126;
  v129 = v127;
  sub_1BA51A9E0(v123, v109, v141, v110, v117, v132, (char)v142);
  type metadata accessor for FormatAnimation();
  swift_allocObject();
  sub_1BA4BE8EC(v138, v135, v136, v137, (uint64_t)v153, v133, (uint64_t)v134, v128, v129);
}

uint64_t sub_1BA51A92C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      break;
    case 4:
      sub_1BA5DCC20(result);
      sub_1BA5DCC20(a3);
      result = sub_1BA5DCC20(a5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA51A9E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    case 4:
      sub_1BA5DCC4C(result);
      sub_1BA5DCC4C(a3);
      result = sub_1BA5DCC4C(a5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA51AA88()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA51AAC4
                                                            + 4 * byte_1BB8DEF80[*(unsigned __int8 *)(v0 + 48)]))(0x726F66736E617274, 0xEF656C6163732E6DLL);
}

unint64_t sub_1BA51AAC4()
{
  return 0xD000000000000011;
}

unint64_t sub_1BA51AAF8()
{
  return 0xD000000000000015;
}

uint64_t sub_1BA51ABC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCompilerEnumProperty.init(from:)(a1, a2);
}

uint64_t FormatCompilerEnumProperty.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (**v10)(_BYTE *, _QWORD);
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  void *v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[4];
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  __int128 v68;
  uint64_t v69;
  void (**v70)(_BYTE *, _QWORD);
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  char v74;
  __int128 v75;
  char v76;

  v66 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v67 = &v51[-v4];
  sub_1BA7607C8();
  v69 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAE8A10C();
  *(_QWORD *)&v68 = v9;
  v10 = *(void (***)(_BYTE *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE8A184();
  sub_1BA4A2870(&qword_1ED3D11F0, (uint64_t (*)(uint64_t))sub_1BAE8A184, (uint64_t)&unk_1BB8FFC6C);
  v13 = v70;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    v35 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  v64 = v6;
  v65 = v8;
  v15 = v67;
  v70 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16 = sub_1BB872874();
  v17 = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v18 = v68;
  v19 = v12;
  v20 = v69;
  if ((v17 & 1) != 0)
  {
    v21 = sub_1BB8740EC();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = (_BYTE *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22)
          goto LABEL_7;
      }
      v28 = *((_QWORD *)v23 - 2);
      v29 = *((_QWORD *)v23 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      *(_QWORD *)&v51[-32] = &_s10CodingKeysON_155;
      *(_QWORD *)&v51[-24] = sub_1BAE8A204();
      *(_QWORD *)&v51[-16] = sub_1BA51B49C();
      *(_QWORD *)&v51[-8] = sub_1BAE8A248();
      swift_getKeyPath();
      swift_retain();
      v31 = sub_1BAE71220((uint64_t)&unk_1E7252E78);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v32 = v28;
      *(_QWORD *)(v32 + 8) = v29;
      *(_QWORD *)(v32 + 16) = v31;
      *(_OWORD *)(v32 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v28, v29, 1);
      v70[1](v12, v18);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v75 = 0uLL;
  v76 = 0;
  v24 = sub_1BB874098();
  v26 = v25;
  v63 = v24;
  v75 = xmmword_1BB8A1A10;
  v76 = 0;
  v27 = sub_1BB874098();
  v34 = v33;
  v62 = v27;
  v75 = xmmword_1BB8D2D60;
  v76 = 0;
  v59 = sub_1BB874098();
  v61 = v37;
  v60 = xmmword_1BB8D2D70;
  v75 = xmmword_1BB8D2D70;
  v76 = 0;
  v38 = sub_1BB8740F8();
  if ((v38 & 1) != 0)
  {
    v73 = v60;
    v74 = 0;
    sub_1BB8740D4();
    v39 = v72;
    v58 = v71;
  }
  else
  {
    v58 = 0;
    v39 = 0xE000000000000000;
  }
  v60 = xmmword_1BB8D2D90;
  v75 = xmmword_1BB8D2D90;
  v76 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v73 = v60;
    v74 = 0;
    sub_1BB8740D4();
    v40 = v71;
  }
  else
  {
    v40 = 1;
  }
  LODWORD(v60) = v40;
  v75 = xmmword_1BB8D2D80;
  v76 = 0;
  v55 = sub_1BB87402C();
  v57 = v41;
  v56 = xmmword_1BB8D2DA0;
  v75 = xmmword_1BB8D2DA0;
  v76 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v73 = v56;
    v74 = 0;
    sub_1BB8740D4();
    *(_QWORD *)&v56 = v39;
    v52 = v71;
  }
  else
  {
    v52 = 0;
    *(_QWORD *)&v56 = v39;
  }
  v68 = xmmword_1BB8D2DB0;
  v75 = xmmword_1BB8D2DB0;
  v76 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v73 = v68;
    v74 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v42 = v65;
    sub_1BB8740D4();
    v54 = v26;
    *(_QWORD *)&v68 = a1;
    v43 = v19;
    v53 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v42, v20);
  }
  else
  {
    v54 = v26;
    *(_QWORD *)&v68 = a1;
    v43 = v19;
    v53 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v75 = xmmword_1BB8D2DD0;
  v76 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  v44 = (uint64_t)v15;
  sub_1BB874068();
  v45 = v56;
  v70[1](v43, v18);
  v46 = type metadata accessor for FormatCompilerEnumProperty(0);
  v47 = v66;
  sub_1BA646EFC(v44, v66 + *(int *)(v46 + 48), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  v48 = v54;
  *(_QWORD *)v47 = v63;
  *(_QWORD *)(v47 + 8) = v48;
  *(_QWORD *)(v47 + 16) = v62;
  *(_QWORD *)(v47 + 24) = v34;
  v49 = v61;
  *(_QWORD *)(v47 + 32) = v59;
  *(_QWORD *)(v47 + 40) = v49;
  *(_QWORD *)(v47 + 48) = v58;
  *(_QWORD *)(v47 + 56) = v45;
  *(_BYTE *)(v47 + 64) = v60;
  v50 = v57;
  *(_QWORD *)(v47 + 72) = v55;
  *(_QWORD *)(v47 + 80) = v50;
  *(_BYTE *)(v47 + 88) = v52;
  *(_QWORD *)(v47 + 96) = v53;
  v35 = v68;
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

unint64_t sub_1BA51B49C()
{
  unint64_t result;

  result = qword_1ED3CB760;
  if (!qword_1ED3CB760)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC440, &_s10CodingKeysON_155);
    atomic_store(result, (unint64_t *)&qword_1ED3CB760);
  }
  return result;
}

void sub_1BA51B4E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  v1 = v0[66];
  v2 = v0[63];
  v3 = v0[61];
  v4 = v0[62];
  v5 = v0[60];
  v6 = v0[50];
  v7 = v0[39];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[64] + 16))(v1, v0[75], v2);
  v8 = v1 + *(int *)(v2 + 44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v8, v5);
  v10 = type metadata accessor for FeedGroupEmitTask.Result(0, v7, v6, v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  v11 = (char *)&loc_1BA51B5C8 + dword_1BAAE423C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA51B5D8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int8x16_t *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int8x16_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int8 *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  void (*v111)(__int8 *, uint64_t, uint64_t);

  v107 = v2;
  v5 = *(_QWORD *)(v1 + 576);
  v6 = *(_QWORD *)(v1 + 536);
  v7 = *(_QWORD *)(v1 + 496);
  v8 = *(_QWORD *)(v1 + 464);
  sub_1BA4AD288(255, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = v7 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v7, v8);
  sub_1BA78DE64(v9, v105);
  v101 = *(_QWORD *)(v1 + 600);
  v94 = *(_QWORD *)(v1 + 536);
  v10 = *(_QWORD *)(v1 + 520);
  v68 = *(_QWORD *)(v1 + 504);
  v87 = *(_QWORD *)(v1 + 576);
  v69 = *(_QWORD *)(v1 + 464);
  v70 = *(_QWORD *)(v1 + 560);
  v83 = *(_QWORD *)(v1 + 584);
  v80 = *(_QWORD *)(v1 + 416);
  v81 = *(_QWORD *)(v1 + 424);
  v74 = *(_QWORD *)(v1 + 376);
  v72 = *(_QWORD *)(v1 + 408);
  v73 = *(_QWORD *)(v1 + 368);
  v76 = *(_QWORD *)(v1 + 360);
  v77 = *(_QWORD *)(v1 + 448);
  v78 = *(_QWORD *)(v1 + 352);
  v79 = *(_QWORD *)(v1 + 344);
  v96 = *(_QWORD *)(v1 + 336);
  v84 = *(_QWORD *)(v1 + 328);
  v85 = *(_QWORD *)(v1 + 320);
  v88 = *(_QWORD *)(v1 + 312);
  v90 = *(_QWORD *)(v1 + 400);
  v92 = *(_QWORD *)(v1 + 304);
  v103 = *(_QWORD *)(v1 + 296);
  v86 = *(_QWORD *)(v1 + 288);
  v71 = *(_QWORD *)(v1 + 264);
  v11 = *(_QWORD *)(v71 + qword_1ED4767D8);
  v82 = *(int8x16_t *)(v1 + 384);
  v3(v10);
  v12 = v10 + *(int *)(v110 + 44);
  swift_bridgeObjectRetain();
  swift_retain();
  v107(v12, v0);
  v13 = sub_1BA4D7950();
  v15 = v14;
  swift_release();
  sub_1BA78DE64(v105, v98);
  sub_1BA670B14();
  swift_allocObject();
  v16 = sub_1BB86E9E0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v4 - 240) = v11;
  sub_1BA653904(v16, v13, v15, isUniquelyReferenced_nonNull_native);
  v99 = *(_QWORD *)(v4 - 240);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16);
  v75(v70, v87, v69);
  ((void (*)(uint64_t, uint64_t, uint64_t))v3)(v10, v101, v68);
  v18 = v10 + *(int *)(v110 + 44);
  swift_retain();
  v107(v18, v0);
  sub_1BA5F1270();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v74, v71 + *(_QWORD *)(*(_QWORD *)v71 + 248), v88);
  sub_1BB86C8A4();
  FeedCursorGroup.init(createdDate:group:config:serviceConfig:)(v76, v70, v72, v74, v88, v90, v77);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v96, 1, 1, v88);
  *(_BYTE *)(v4 - 256) = 7;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56);
  v19(v92, 1, 1, v79);
  v19(v103, 1, 1, v79);
  v108 = *(_QWORD *)(v71 + qword_1ED4767E0);
  sub_1BB874218();
  swift_allocObject();
  v20 = sub_1BB872E2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v21, v77, v80);
  sub_1BA69C794(v20);
  v22 = sub_1BB872E5C();
  swift_bridgeObjectRelease();
  v75(v70, v87, v69);
  v23 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
  v24 = (int8x16_t *)swift_allocObject();
  v24[1] = vextq_s8(v82, v82, 8uLL);
  v111 = *(void (**)(__int8 *, uint64_t, uint64_t))(v94 + 32);
  v111(&v24->i8[v23], v70, v69);
  v25 = (void *)sub_1BB86E854();
  sub_1BB873A2C();
  v26 = sub_1BB86E974();
  swift_release();

  *(_OWORD *)(v4 - 192) = 0u;
  *(_OWORD *)(v4 - 176) = 0u;
  *(_OWORD *)(v4 - 224) = 0u;
  *(_OWORD *)(v4 - 208) = 0u;
  *(_OWORD *)(v4 - 240) = 0u;
  v27 = *(_QWORD *)(v71 + qword_1ED476790 + 16);
  *(_OWORD *)(v4 - 128) = *(_OWORD *)(v71 + qword_1ED476790);
  v28 = (uint64_t *)(v101 + *(int *)(v83 + 36));
  v29 = *v28;
  v30 = v28[1];
  v31 = v28[2];
  *(_QWORD *)(v4 - 112) = v27;
  *(_QWORD *)(v4 - 104) = v29;
  *(_QWORD *)(v4 - 96) = v30;
  *(_QWORD *)(v4 - 88) = v31;
  sub_1BA66AB08((_QWORD *)(v4 - 128), (uint64_t *)(v4 - 104), v88, v90, (_QWORD *)(v4 - 152));
  v32 = *(_QWORD *)(v4 - 144);
  v33 = *(_QWORD *)(v4 - 136);
  *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 152);
  *(_QWORD *)(v4 - 96) = v32;
  *(_QWORD *)(v4 - 88) = v33;
  *(_QWORD *)(v4 - 128) = 0;
  *(_WORD *)(v4 - 120) = 256;
  v34 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v96, 0, (unsigned __int8 *)(v4 - 256), v92, v103, 0, v108, 0, 0, v22, 0, 0, 1, 0, 1, 0, 1,
          v99,
          v26,
          v4 - 240,
          (uint64_t *)(v4 - 104),
          v4 - 128,
          0,
          0,
          0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA76D750(v103);
  sub_1BA76D750(v92);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 8))(v96, v85);
  v109 = v34;
  LOBYTE(v20) = FeedCursor.reachedEnd.getter(v35, v36, v37, v38);
  v102 = *(_QWORD *)(v86 + 40);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v39 = *(_QWORD *)(v1 + 600);
  v104 = *(_QWORD *)(v1 + 592);
  v106 = *(_QWORD *)(v1 + 584);
  v40 = *(_QWORD *)(v1 + 576);
  v41 = *(_QWORD *)(v1 + 464);
  v95 = *(_QWORD *)(v1 + 424);
  v97 = *(_QWORD *)(v1 + 416);
  v100 = *(_QWORD *)(v1 + 448);
  v42 = *(_QWORD *)(v1 + 400);
  v43 = *(_QWORD *)(v1 + 312);
  if ((v20 & 1) != 0)
  {
    v44 = *(__int8 **)(v1 + 248);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1BB87CE70;
    v46 = sub_1BB87420C();
    v48 = v47;
    *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v45 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v45 + 32) = v46;
    *(_QWORD *)(v45 + 40) = v48;
    v49 = sub_1BB87330C();
    sub_1BB86EF44("Service slotted emitters emitted the another group and we reached the end of the feed, group=%{public}@", 103, 2, &dword_1BA493000, v102, v49, v45);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v100, v97);
    (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v39, v106);
    type metadata accessor for FeedCursor(255, v43, v42, v50);
    v51 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v111(v44, v40, v41);
    *(_QWORD *)&v44[v51] = v109;
    type metadata accessor for FeedServiceFetchResult.Internal(0, v43, v42, v52);
  }
  else
  {
    v53 = *(_QWORD *)(v1 + 400);
    v54 = *(_QWORD *)(v1 + 264);
    v93 = *(__int8 **)(v1 + 248);
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1BB87A390;
    v56 = sub_1BB87420C();
    v58 = v57;
    v91 = v40;
    *(_QWORD *)(v55 + 56) = MEMORY[0x1E0DEA968];
    v89 = v39;
    v59 = sub_1BA6A2D8C();
    *(_QWORD *)(v55 + 64) = v59;
    *(_QWORD *)(v55 + 32) = v56;
    *(_QWORD *)(v55 + 40) = v58;
    *(_QWORD *)(v1 + 240) = v54;
    v61 = type metadata accessor for FeedCursor(0, v43, v53, v60);
    MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedCursor<A>, v61);
    v62 = sub_1BB86E308();
    *(_QWORD *)(v55 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v55 + 104) = v59;
    *(_QWORD *)(v55 + 72) = v62;
    *(_QWORD *)(v55 + 80) = v63;
    v64 = sub_1BB87330C();
    sub_1BB86EF44("Service slotted emitters emitted another group, group=%{public}@, cursor=%@", 75, 2, &dword_1BA493000, v102, v64, v55);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v100, v97);
    (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v89, v106);
    v65 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v111(v93, v91, v41);
    *(_QWORD *)&v93[v65] = v109;
    type metadata accessor for FeedServiceFetchResult.Internal(0, v43, v53, v66);
  }
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

NewsFeed::FormatTextNodeAttachmentAlignment_optional __swiftcall FormatTextNodeAttachmentAlignment.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatTextNodeAttachmentAlignment_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA51DE30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupCollection.init(from:)(a1, a2);
}

uint64_t FormatGroupCollection.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    sub_1BA7B0CB8(0, (unint64_t *)&qword_1ED3B9420, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA51DF80(&qword_1ED39BE68, &qword_1ED39B178, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF40]);
    sub_1BB8743D4();
    sub_1BA7AFE78(v10[6], &v8);
    v6 = v9;
    v7 = v8;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    *(_OWORD *)a2 = v7;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA51DF80(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA7B0CB8(255, (unint64_t *)&qword_1ED3B9420, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))sub_1BA7B06D8, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA51E010@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatSlotDefinitionCollection.init(from:)(a1, a2);
}

uint64_t FormatSlotDefinitionCollection.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v6;
  __int128 v7;
  _QWORD v8[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1BA7AE8FC(0, &qword_1ED3B94F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA51E158(&qword_1ED3B94F8, &qword_1ED3B6288, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition, MEMORY[0x1E0DEAF40]);
    sub_1BB8743D4();
    sub_1BA7AE148(v8[6], &v7);
    v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA51E158(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA7AE8FC(255, &qword_1ED3B94F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA51E1E8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA51E254()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_filePath);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BB8729A0();

  return v3;
}

uint64_t sub_1BA51E2B8(uint64_t *a1, uint64_t a2, double a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v4 + 144) = v3;
  *(double *)(v4 + 136) = a3;
  *(_QWORD *)(v4 + 128) = a2;
  v6 = *v3;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  *(_QWORD *)(v4 + 160) = swift_task_alloc();
  *(_QWORD *)(v4 + 168) = *(_QWORD *)(v6 + 88);
  *(_QWORD *)(v4 + 176) = *(_QWORD *)(v6 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v4 + 184) = AssociatedTypeWitness;
  v8 = sub_1BB873A2C();
  *(_QWORD *)(v4 + 192) = v8;
  *(_QWORD *)(v4 + 200) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 208) = swift_task_alloc();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v4 + 216) = AssociatedConformanceWitness;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v4 + 224) = v10;
  *(_QWORD *)(v4 + 232) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 240) = swift_task_alloc();
  *(_QWORD *)(v4 + 248) = swift_task_alloc();
  v12 = type metadata accessor for FeedServiceFetchResult.Internal(0, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  *(_QWORD *)(v4 + 256) = v12;
  *(_QWORD *)(v4 + 264) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v4 + 272) = swift_task_alloc();
  v13 = swift_task_alloc();
  v14 = *a1;
  *(_QWORD *)(v4 + 280) = v13;
  *(_QWORD *)(v4 + 288) = v14;
  return swift_task_switch();
}

uint64_t FormatOptionConverter.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA51E510@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA51E538(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA51E538(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  char v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;

  sub_1BAEFBAC0(0, &qword_1ED3C4670, (void (*)(void))sub_1BA82D454, (void (*)(void))sub_1BA82D498);
  v65 = *(_QWORD *)(v2 - 8);
  v66 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v47 - v3;
  sub_1BAEFA2B4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE76160();
  sub_1BA4A2870(&qword_1ED3D0EC0, (uint64_t (*)(uint64_t))sub_1BAE76160, (uint64_t)&unk_1BB8FFC6C);
  v10 = v67;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
    goto LABEL_12;
  v62 = v4;
  v63 = 0;
  v12 = v66;
  v64 = v7;
  v67 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    v15 = v67;
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v25 = *((_QWORD *)v18 - 2);
      v26 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      sub_1BAE761E0();
      sub_1BA7F13FC();
      sub_1BAE76224();
      swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7251E10);
      swift_release_n();
      sub_1BA98D1F0();
      v11 = swift_allocError();
      *(_QWORD *)v29 = v25;
      *(_QWORD *)(v29 + 8) = v26;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v25, v26, 1);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v9, v15);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v19 = v63;
  v20 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEFA2B4);
  v11 = v19;
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v9, v67);
LABEL_12:
    sub_1BA7F8B78(a1, v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v11;
  }
  v22 = v20;
  v23 = v21;
  v70 = xmmword_1BB8A1A10;
  LOBYTE(v71) = 0;
  v24 = v67;
  v31 = sub_1BB874098();
  v63 = v32;
  v61 = xmmword_1BB8D2D60;
  v70 = xmmword_1BB8D2D60;
  LOBYTE(v71) = 0;
  v33 = sub_1BB8740F8();
  if ((v33 & 1) != 0)
  {
    v60 = v23;
    v68 = v61;
    v69 = 0;
    sub_1BAEFA32C();
    v34 = v62;
    sub_1BB8740D4();
    v59 = v31;
    *(_QWORD *)&v61 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v34, v12);
    v23 = v60;
  }
  else
  {
    v59 = v31;
    *(_QWORD *)&v61 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v70 = xmmword_1BB8D2D70;
  LOBYTE(v71) = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v35 = v68;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v70 = xmmword_1BB8D2D90;
  LOBYTE(v71) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v66 = v35;
  v36 = v68;
  v68 = xmmword_1BB8D2D80;
  v69 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v65 = v36;
  v62 = (char *)*((_QWORD *)&v70 + 1);
  v60 = v70;
  LODWORD(v36) = v71;
  v68 = xmmword_1BB8D2DA0;
  v69 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v58 = v36;
  v51 = v70;
  v52 = v71;
  v53 = v72;
  v54 = v73;
  v55 = v74;
  v56 = v75;
  v57 = v76;
  v37 = v78;
  v50 = v77;
  LODWORD(v36) = v79;
  v70 = xmmword_1BB8D2DB0;
  LOBYTE(v71) = 0;
  v47 = sub_1BB874038();
  v48 = v36;
  v49 = v37;
  v70 = xmmword_1BB8D2DD0;
  LOBYTE(v71) = 0;
  v38 = sub_1BB874038();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v9, v24);
  type metadata accessor for FormatGroupNodeStyle();
  v11 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = v22;
  *(_QWORD *)(v11 + 24) = v23;
  v39 = v63;
  *(_QWORD *)(v11 + 32) = v59;
  *(_QWORD *)(v11 + 40) = v39;
  swift_beginAccess();
  v40 = v66;
  *(_QWORD *)(v11 + 48) = v61;
  *(_QWORD *)(v11 + 56) = v40;
  v41 = v60;
  *(_QWORD *)(v11 + 64) = v65;
  *(_QWORD *)(v11 + 72) = v41;
  *(_QWORD *)(v11 + 80) = v62;
  *(_BYTE *)(v11 + 88) = v58;
  v42 = *((_QWORD *)&v51 + 1);
  *(_QWORD *)(v11 + 96) = v51;
  *(_QWORD *)(v11 + 104) = v42;
  v43 = v53;
  *(_QWORD *)(v11 + 112) = v52;
  *(_QWORD *)(v11 + 120) = v43;
  v44 = v55;
  *(_QWORD *)(v11 + 128) = v54;
  *(_QWORD *)(v11 + 136) = v44;
  v45 = v57;
  *(_QWORD *)(v11 + 144) = v56;
  *(_QWORD *)(v11 + 152) = v45;
  v46 = v49;
  *(_QWORD *)(v11 + 160) = v50;
  *(_QWORD *)(v11 + 168) = v46;
  *(_BYTE *)(v11 + 176) = v48;
  *(_BYTE *)(v11 + 177) = v47;
  *(_BYTE *)(v11 + 178) = v38;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

uint64_t sub_1BA51EFDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
  return (*(uint64_t (**)(uint64_t))(v3 + *(int *)(v4 + 28)))(a1);
}

uint64_t sub_1BA51F030@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(sub_1BB871C80() - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  return sub_1BA51F09C(a1, v2 + ((v6 + 16) & ~v6), v2 + ((*(_QWORD *)(v5 + 64) + v6 + ((v6 + 16) & ~v6)) & ~v6), a2);
}

uint64_t sub_1BA51F09C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, char *, uint64_t);
  uint64_t (*v21)(uint64_t);
  _QWORD v23[4];

  v23[3] = a4;
  v7 = sub_1BB871C80();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v23 - v12;
  v14 = a1[3];
  v23[1] = a1[4];
  v23[2] = __swift_project_boxed_opaque_existential_1(a1, v14);
  v23[0] = sub_1BB8719B0();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15(v13, a2, v7);
  v15(v10, a3, v7);
  v16 = *(unsigned __int8 *)(v8 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = (v9 + v16 + v17) & ~v16;
  v19 = swift_allocObject();
  v20 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v20(v19 + v17, v13, v7);
  v20(v19 + v18, v10, v7);
  sub_1BB871ECC();
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53030];
  sub_1BB871EFC();
  sub_1BB871F5C();
  sub_1BA4A2870(&qword_1ED3D2EF0, v21, MEMORY[0x1E0D53028]);
  sub_1BB871ED8();
  swift_release();
  return swift_release();
}

uint64_t sub_1BA51F28C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatUnderline.init(from:)(a1, a2);
}

uint64_t FormatUnderline.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAEC8FDC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC9054();
  sub_1BA4A2870(&qword_1ED3D1630, (uint64_t (*)(uint64_t))sub_1BAEC9054, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v26 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_10;
      *(&v26 - 3) = sub_1BAEC90D4();
      *(&v26 - 2) = sub_1BA51F5FC();
      *(&v26 - 1) = sub_1BAEC9118();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726F360);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA51F640();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB874068();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BA62C9A0();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  *(_BYTE *)v12 = v18;
  *(_QWORD *)(v12 + 8) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA51F5FC()
{
  unint64_t result;

  result = qword_1ED3C7120;
  if (!qword_1ED3C7120)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4560, &_s10CodingKeysON_10);
    atomic_store(result, (unint64_t *)&qword_1ED3C7120);
  }
  return result;
}

unint64_t sub_1BA51F640()
{
  unint64_t result;

  result = qword_1ED3BE8B8;
  if (!qword_1ED3BE8B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnderlineStyle, &type metadata for FormatUnderlineStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3BE8B8);
  }
  return result;
}

uint64_t sub_1BA51F684@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatQueryParameter.init(from:)(a1, a2);
}

uint64_t FormatQueryParameter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  uint64_t v32;

  v3 = v2;
  v29 = a2;
  sub_1BAE742DC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE74354();
  sub_1BA4A2870(&qword_1ED3D0F10, (uint64_t (*)(uint64_t))sub_1BAE74354, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)v29;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v29 = v13;
      v22 = *((_QWORD *)v17 - 2);
      v23 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v24);
      *(&v29 - 4) = (uint64_t)&_s10CodingKeysON_242;
      *(&v29 - 3) = sub_1BAE743D4();
      *(&v29 - 2) = sub_1BA7A5B9C();
      *(&v29 - 1) = sub_1BAE74418();
      swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71220((uint64_t)&unk_1E72505B8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v26 = v22;
      *(_QWORD *)(v26 + 8) = v23;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v18 = v12;
  v30 = 0uLL;
  v31 = 0;
  v19 = sub_1BB874098();
  v21 = v20;
  v30 = xmmword_1BB8A1A10;
  v31 = 0;
  sub_1BA51F9EC();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v28 = v32;
  *v18 = v19;
  v18[1] = v21;
  v18[2] = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA51F9EC()
{
  unint64_t result;

  result = qword_1ED3B49B0;
  if (!qword_1ED3B49B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatQueryValue, &type metadata for FormatQueryValue);
    atomic_store(result, (unint64_t *)&qword_1ED3B49B0);
  }
  return result;
}

uint64_t sub_1BA51FA30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDateFormat.init(from:)(a1, a2);
}

uint64_t FormatDateFormat.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  unsigned __int8 v28;
  __int128 v29;
  uint64_t v30;

  v30 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v25 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v10 = sub_1BB872874();
    v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
    swift_bridgeObjectRelease();
    v12 = v8;
    if ((v11 & 1) != 0)
    {
      v13 = sub_1BB8740EC();
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v15 = (unint64_t *)(v13 + 40);
        while (1)
        {
          v16 = *v15;
          if (*v15 >= 4)
            break;
          v15 += 2;
          if (!--v14)
            goto LABEL_7;
        }
        v20 = *(v15 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1BA98D1F0();
        v9 = (void *)swift_allocError();
        *(_QWORD *)v21 = v20;
        *(_QWORD *)(v21 + 8) = v16;
        *(_QWORD *)(v21 + 16) = &unk_1E726B498;
        *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA98D234(v20, v16);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
        goto LABEL_12;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BA51FD68();
    v26 = 0;
    *(_QWORD *)&v27 = 0;
    sub_1BB8740D4();
    if ((_BYTE)v25)
    {
      if (v25 != 1)
      {
        v25 = xmmword_1BB87FC90;
        sub_1BAE8E84C();
        sub_1BB8740D4();
        v24 = v30;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
        v19 = v27;
        v18 = v28;
        v23 = v29;
        v17 = (unsigned __int16)v26;
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      v17 = 0;
      v18 = 0;
      v19 = xmmword_1BB886E80;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      v17 = 0;
      v18 = 0;
      v19 = xmmword_1BB87FC90;
    }
    v23 = 0uLL;
    v24 = v30;
LABEL_16:
    *(_QWORD *)v24 = v17;
    *(_OWORD *)(v24 + 8) = v19;
    *(_QWORD *)(v24 + 24) = v18;
    *(_OWORD *)(v24 + 32) = v23;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
LABEL_12:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA51FD68()
{
  unint64_t result;

  result = qword_1ED3C4CC0;
  if (!qword_1ED3C4CC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBD48, &_s10CodingTypeON_107);
    atomic_store(result, (unint64_t *)&qword_1ED3C4CC0);
  }
  return result;
}

uint64_t sub_1BA51FDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v5 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1BA51FEC4(_DWORD *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = 8;
  if (((*(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) != 0xFFFFFFFFFFFFFFF8)
    v4 = ((*(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v5 = *((unsigned __int8 *)a1 + v4);
  v6 = v4 & 0xFFFFFFF8;
  if (v5 >= 3 && v6 != 0)
    v5 = *a1 + 3;
  if (v5 <= 1)
    (*(void (**)(_DWORD *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  return swift_release();
}

uint64_t sub_1BA51FFB8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayoutView.blueprintViewportMonitor(_:willDisplayCellWith:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  int v36;
  char *v37;

  v3 = v2;
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers);
  swift_beginAccess();
  v6 = *v5;
  if ((unint64_t)*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v7 = result;
    if (result)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      if (v7 < 1)
        goto LABEL_45;
      for (i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0)
          v10 = (id)MEMORY[0x1BCCE4630](i, v6);
        else
          v10 = *(id *)(v6 + 8 * i + 32);
        v11 = v10;
        sub_1BB871014();

      }
    }
  }
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  v13 = *v12;
  v14 = *v12 + 64;
  v15 = 1 << *(_BYTE *)(*v12 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(*v12 + 64);
  v18 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  while (v17)
  {
    v22 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v23 = v22 | (v19 << 6);
LABEL_33:
    v27 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v23) + 56);
    switch((v27 >> 59) & 0x1E | (v27 >> 2) & 1)
    {
      case 4uLL:
        v20 = *(void **)((v27 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_retain();
        swift_retain();
        v21 = v20;
        FormatLayoutView.blueprintViewportMonitor(_:willDisplayCellWith:)(a1, a2);
        swift_release();

        goto LABEL_14;
      case 0xBuLL:
        v28 = *(char **)((v27 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v29 = *(_QWORD *)&v28[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView];
        if (!v29)
          continue;
        v30 = *(_QWORD *)(v29 + qword_1ED3AF858);
        goto LABEL_40;
      case 0xCuLL:
        v31 = *(char **)((v27 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v32 = *(_QWORD *)&v31[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
        result = swift_beginAccess();
        v33 = *(unsigned __int8 *)(v32 + 17);
        *(_BYTE *)(v32 + 17) = 1;
        if ((v33 & 0xFFFFFFC1) == 1)
          continue;
        swift_retain();
        swift_retain();
        v34 = v31;
        LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
        swift_release();

        goto LABEL_14;
      case 0xDuLL:
        v28 = *(char **)((v27 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v35 = *(_QWORD *)&v28[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
        if (!v35)
          continue;
        v30 = *(_QWORD *)(v35 + qword_1ED3AF858);
LABEL_40:
        result = swift_beginAccess();
        v36 = *(unsigned __int8 *)(v30 + 17);
        *(_BYTE *)(v30 + 17) = 1;
        if ((v36 & 0xFFFFFFC1) != 1)
        {
          swift_retain();
          swift_retain();
          v37 = v28;
          swift_retain();
          LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
          swift_release();

          swift_release();
LABEL_14:
          result = swift_release();
        }
        break;
      default:
        continue;
    }
  }
  v24 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v24 >= v18)
    return swift_release();
  v25 = *(_QWORD *)(v14 + 8 * v24);
  ++v19;
  if (v25)
    goto LABEL_32;
  v19 = v24 + 1;
  if (v24 + 1 >= v18)
    return swift_release();
  v25 = *(_QWORD *)(v14 + 8 * v19);
  if (v25)
    goto LABEL_32;
  v19 = v24 + 2;
  if (v24 + 2 >= v18)
    return swift_release();
  v25 = *(_QWORD *)(v14 + 8 * v19);
  if (v25)
    goto LABEL_32;
  v19 = v24 + 3;
  if (v24 + 3 >= v18)
    return swift_release();
  v25 = *(_QWORD *)(v14 + 8 * v19);
  if (v25)
  {
LABEL_32:
    v17 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v19 << 6);
    goto LABEL_33;
  }
  v26 = v24 + 4;
  if (v26 >= v18)
    return swift_release();
  v25 = *(_QWORD *)(v14 + 8 * v26);
  if (v25)
  {
    v19 = v26;
    goto LABEL_32;
  }
  while (1)
  {
    v19 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v19 >= v18)
      return swift_release();
    v25 = *(_QWORD *)(v14 + 8 * v19);
    ++v26;
    if (v25)
      goto LABEL_32;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1BA5203F4()
{
  sub_1BA52049C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA520440()
{
  sub_1BA52049C();
  return sub_1BB872D60();
}

unint64_t sub_1BA52049C()
{
  unint64_t result;

  result = qword_1ED3C9910;
  if (!qword_1ED3C9910)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA630, &_s10CodingTypeON_84);
    atomic_store(result, (unint64_t *)&qword_1ED3C9910);
  }
  return result;
}

uint64_t sub_1BA5204E0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA520514 + 4 * byte_1BB8AE851[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA520514()
{
  return 0x7373616C63;
}

uint64_t sub_1BA520528()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA520544()
{
  return 1752457584;
}

uint64_t sub_1BA520554()
{
  return 0x73726564726F62;
}

uint64_t sub_1BA52056C()
{
  return 0x776F64616873;
}

uint64_t sub_1BA520580()
{
  return 1885433183;
}

uint64_t sub_1BA520590@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v8[5];
  _BYTE v9[24];
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39D0);
  result = sub_1BB86DF48();
  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3B0800);
  result = sub_1BB86DF48();
  if (v8[3])
  {
    v6 = type metadata accessor for WebEmbedDataSourceService();
    swift_allocObject();
    v7 = sub_1BAF1FC90(v5, (uint64_t)v9, v8);
    result = swift_unknownObjectRelease();
    a2[3] = v6;
    a2[4] = &protocol witness table for WebEmbedDataSourceService;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WebEmbedDataSourceService()
{
  return objc_opt_self();
}

void sub_1BA520714()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4798)
  {
    sub_1BA81E3D0();
    v0 = sub_1BB86E0F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4798);
  }
}

uint64_t sub_1BA520778()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BA5207AC()
{
  unsigned __int8 *v0;

  return sub_1BAD95AA8(*v0);
}

uint64_t FormatAccessibilityLayoutValue.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA5207D8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA520848()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA52086C + 4 * byte_1BB8AE528[*v0]))(24945, 0xE200000000000000);
}

uint64_t sub_1BA52086C()
{
  return 0x676E6967617473;
}

uint64_t sub_1BA520884()
{
  return 0x69746375646F7270;
}

uint64_t sub_1BA5208A0()
{
  return 1885433183;
}

uint64_t FormatContentSubgroup.ResolvedContainer.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA6D78DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BA520968@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1BA52097C(char a1)
{
  if (!a1)
    return 0x6973736572707865;
  if (a1 == 1)
    return 0x7365756C6176;
  return 1885433183;
}

uint64_t sub_1BA5209CC()
{
  sub_1BA520A74();
  return sub_1BB872D0C();
}

uint64_t sub_1BA520A18()
{
  sub_1BA520A74();
  return sub_1BB872D60();
}

unint64_t sub_1BA520A74()
{
  unint64_t result;

  result = qword_1ED3C7BC0;
  if (!qword_1ED3C7BC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7B28, &_s10CodingTypeON_111);
    atomic_store(result, (unint64_t *)&qword_1ED3C7BC0);
  }
  return result;
}

uint64_t sub_1BA520AB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA520AE0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA520AE0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _BYTE v45[4];
  int v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  unint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  __int128 v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  char v69;
  unint64_t v70;

  sub_1BA6927D0();
  v59 = v2;
  v57 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v58 = &v45[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v61 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v45[-v6];
  sub_1BAEFACBC();
  v60 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE73CB0();
  sub_1BA4A2870(&qword_1ED3AD888, (uint64_t (*)(uint64_t))sub_1BAE73CB0, (uint64_t)&unk_1BB8FFC6C);
  v13 = (uint64_t)v62;
  sub_1BB87468C();
  v14 = (void *)v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v55 = (uint64_t)v7;
  v56 = v9;
  *(_QWORD *)&v54 = v5;
  v15 = a1[3];
  v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v16 = sub_1BB872874();
  LOBYTE(v15) = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v17 = v60;
  v18 = v61;
  if ((v15 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v21 - 2);
      v25 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      sub_1BAE73D30();
      sub_1BA7F13B8();
      sub_1BAE73D74();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7250128);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v29 = v26;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v25, 1);
      (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v11, v17);
      a1 = v62;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEFACBC);
  v24 = v23;
  v68 = xmmword_1BB8A1A10;
  v69 = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v30 = v63;
  v68 = xmmword_1BB8D2D60;
  v69 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v32 = v63;
  v53 = xmmword_1BB8D2D70;
  v68 = xmmword_1BB8D2D70;
  v69 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v52 = v32;
    v63 = v53;
    v64 = 0;
    sub_1BAEB7D04();
    v33 = v55;
    sub_1BB8740D4();
    *(_QWORD *)&v53 = v22;
    v34 = sub_1BB86DD08();
    v35 = v18;
    v36 = v34;
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v33, v35);
    v32 = v52;
  }
  else
  {
    *(_QWORD *)&v53 = v22;
    v36 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for FormatIssueCoverNodeStyle();
  v68 = xmmword_1BB8D2D90;
  v69 = 0;
  sub_1BA4A2870(qword_1ED3A76E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeStyle, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeStyle);
  sub_1BB874068();
  v37 = v63;
  type metadata accessor for FormatAnimationNodeStyle();
  v68 = xmmword_1BB8D2D80;
  v69 = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v61 = v37;
  v38 = v63;
  v68 = xmmword_1BB8D2DA0;
  v69 = 0;
  sub_1BA5216FC();
  sub_1BB8740D4();
  v55 = v63;
  v54 = xmmword_1BB8D2DB0;
  v68 = xmmword_1BB8D2DB0;
  v69 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v63 = v54;
    v64 = 0;
    sub_1BB8740D4();
    v52 = v70;
  }
  else
  {
    v52 = 0;
  }
  v54 = xmmword_1BB8D2DD0;
  v68 = xmmword_1BB8D2DD0;
  v69 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v63 = v54;
    v64 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v39 = v70;
  }
  else
  {
    v39 = 0x8000000000000000;
  }
  *(_QWORD *)&v54 = v39;
  v51 = xmmword_1BB8D2DE0;
  v68 = xmmword_1BB8D2DE0;
  v69 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v63 = v51;
    v64 = 0;
    sub_1BB8740D4();
    v40 = v70;
  }
  else
  {
    v40 = 1;
  }
  LODWORD(v51) = v40;
  v68 = xmmword_1BB8D2DF0;
  v69 = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  v49 = v38;
  v50 = v24;
  v47 = v63;
  v46 = BYTE8(v63);
  v48 = xmmword_1BB8D2E00;
  v68 = xmmword_1BB8D2E00;
  v69 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v63 = v48;
    v64 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v41 = v58;
    v42 = v59;
    v43 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v41, v42);
  }
  else
  {
    v43 = MEMORY[0x1E0DEE9E8];
  }
  v68 = xmmword_1BB8D2E10;
  v69 = 0;
  sub_1BA521740();
  sub_1BB8740D4();
  (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v11, v17);
  v44 = v63;
  *(_QWORD *)&v63 = v30;
  v70 = v32;
  v66 = v54;
  v67 = v55;
  *(_QWORD *)&v68 = v47;
  BYTE8(v68) = v46;
  v65 = v44;
  type metadata accessor for FormatIssueCoverNode();
  swift_allocObject();
  KeyPath = FormatIssueCoverNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:sizeConstraint:)(v53, v50, (uint64_t *)&v63, (uint64_t *)&v70, v36, v61, v49, &v67, v52, &v66, v51, (uint64_t *)&v68, v43, &v65);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  return KeyPath;
}

unint64_t sub_1BA5216FC()
{
  unint64_t result;

  result = qword_1ED3A0260;
  if (!qword_1ED3A0260)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverContent, &type metadata for FormatIssueCoverContent);
    atomic_store(result, (unint64_t *)&qword_1ED3A0260);
  }
  return result;
}

unint64_t sub_1BA521740()
{
  unint64_t result;

  result = qword_1ED3A0150;
  if (!qword_1ED3A0150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSizeConstraint, &type metadata for FormatSizeConstraint);
    atomic_store(result, (unint64_t *)&qword_1ED3A0150);
  }
  return result;
}

uint64_t FormatIssueCoverNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:sizeConstraint:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t *a10, char a11, uint64_t *a12, uint64_t a13, char *a14)
{
  uint64_t v14;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;

  v20 = *a3;
  v21 = *a4;
  v22 = *a8;
  v24 = *a10;
  v25 = *a12;
  v26 = *((_BYTE *)a12 + 8);
  v27 = *a14;
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = v20;
  *(_QWORD *)(v14 + 40) = v21;
  swift_beginAccess();
  *(_QWORD *)(v14 + 48) = a5;
  *(_QWORD *)(v14 + 56) = a6;
  *(_QWORD *)(v14 + 64) = a7;
  *(_QWORD *)(v14 + 72) = v22;
  swift_beginAccess();
  *(_QWORD *)(v14 + 80) = a9;
  swift_beginAccess();
  *(_QWORD *)(v14 + 88) = v24;
  swift_beginAccess();
  *(_BYTE *)(v14 + 96) = a11;
  *(_QWORD *)(v14 + 104) = v25;
  *(_BYTE *)(v14 + 112) = v26;
  swift_beginAccess();
  *(_QWORD *)(v14 + 120) = a13;
  *(_BYTE *)(v14 + 128) = v27;
  return v14;
}

uint64_t sub_1BA5218D8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FeedGroupGroupingRules.init(from:)(a1, a2);
}

uint64_t FeedGroupGroupingRules.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  sub_1BA521DC0(0, &qword_1ED3AB3C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA521EEC();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v36 = 0;
  sub_1BA5ECC44();
  LOBYTE(v48) = 0;
  sub_1BA4A2870(&qword_1ED3C5E50, (uint64_t (*)(uint64_t))sub_1BA5ECC44, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
  sub_1BB874020();
  if (*(_QWORD *)&v43[0])
  {
    v33 = *(_QWORD *)&v43[0];
  }
  else
  {
    v11 = swift_allocObject();
    v12 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v11 + 16) = 1000;
    *(_QWORD *)(v11 + 24) = v12;
    v33 = v11;
  }
  LOBYTE(v48) = 1;
  sub_1BB874020();
  if (*(_QWORD *)&v43[0])
  {
    v32 = *(_QWORD *)&v43[0];
  }
  else
  {
    v13 = swift_allocObject();
    v14 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v13 + 16) = 1000;
    *(_QWORD *)(v13 + 24) = v14;
    v32 = v13;
  }
  LOBYTE(v48) = 2;
  sub_1BB874020();
  if (*(_QWORD *)&v43[0])
  {
    v31 = *(_QWORD *)&v43[0];
  }
  else
  {
    v15 = swift_allocObject();
    v16 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v15 + 16) = 1000;
    *(_QWORD *)(v15 + 24) = v16;
    v31 = v15;
  }
  LOBYTE(v48) = 3;
  sub_1BB874020();
  v37 = v7;
  if (*(_QWORD *)&v43[0])
  {
    v30 = *(_QWORD *)&v43[0];
  }
  else
  {
    v17 = swift_allocObject();
    v18 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v17 + 16) = 1000;
    *(_QWORD *)(v17 + 24) = v18;
    v30 = v17;
  }
  sub_1BA839ECC();
  LOBYTE(v48) = 4;
  sub_1BA4A2870(&qword_1ED3A5040, (uint64_t (*)(uint64_t))sub_1BA839ECC, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
  sub_1BB874020();
  v19 = *(_QWORD *)&v43[0];
  v38 = a2;
  if (!*(_QWORD *)&v43[0])
  {
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = 0x3FF0000000000000;
    *(_BYTE *)(v19 + 24) = 0;
    *(_QWORD *)(v19 + 32) = 1;
    *(_BYTE *)(v19 + 40) = 0;
    v20 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v19 + 48) = MEMORY[0x1E0DEE9E8];
    *(_QWORD *)(v19 + 56) = v20;
  }
  sub_1BA5ECCB8();
  LOBYTE(v43[0]) = 5;
  sub_1BA4A2870(&qword_1ED3C5E40, (uint64_t (*)(uint64_t))sub_1BA5ECCB8, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
  sub_1BB874020();
  v35 = v48;
  sub_1BA521E1C();
  LOBYTE(v43[0]) = 6;
  sub_1BA4A2870(&qword_1ED3A28D0, (uint64_t (*)(uint64_t))sub_1BA521E1C, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
  sub_1BB874020();
  v34 = v42;
  LOBYTE(v43[0]) = 7;
  sub_1BB874020();
  v21 = v41;
  LOBYTE(v43[0]) = 8;
  sub_1BB874020();
  v22 = v40;
  LOBYTE(v43[0]) = 9;
  sub_1BB874020();
  sub_1BAA37D84(v33, v32, v31, v30, v19, v35, v34, v21, v43, v22, v39);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v6);
  v23 = v44;
  v24 = v45;
  v25 = v43[1];
  v26 = v46;
  v27 = v47;
  v28 = v38;
  *v38 = v43[0];
  v28[1] = v25;
  *((_QWORD *)v28 + 4) = v23;
  *((_QWORD *)v28 + 5) = v24;
  v28[3] = v26;
  v28[4] = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA521DC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA521EEC();
    v7 = a3(a1, &type metadata for FeedGroupGroupingRules.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA521E1C()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_1ED3A28D8;
  if (!qword_1ED3A28D8)
  {
    sub_1BB86D078();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA848];
    sub_1BA4A2870(&qword_1ED3A24F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA848], MEMORY[0x1E0DDA868]);
    sub_1BA4A2870(&qword_1ED3A24E8, v1, MEMORY[0x1E0DDA858]);
    sub_1BA4A2870(&qword_1ED3A24F0, v1, MEMORY[0x1E0DDA860]);
    type metadata accessor for FeedGroupKnobsRuleValue();
  }
  return result;
}

unint64_t sub_1BA521EEC()
{
  unint64_t result;

  result = qword_1ED3A4F00;
  if (!qword_1ED3A4F00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89244C, &type metadata for FeedGroupGroupingRules.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A4F00);
  }
  return result;
}

uint64_t sub_1BA521F30@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatTypeCollection.init(from:)(a1, a2);
}

uint64_t FormatTypeCollection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39C160, (uint64_t (*)(void))sub_1BA52239C, (uint64_t)&type metadata for FormatTypeCollection.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  v8 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA52239C();
  sub_1BB8746C8();
  v15 = v8;
  v14 = 0;
  sub_1BA5223E0(0, (unint64_t *)&qword_1ED3B9410, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA522458(&qword_1ED39BE50, &qword_1ED39B160, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  v9 = v13;
  sub_1BB8741AC();
  if (!v9)
  {
    v15 = v12;
    v14 = 1;
    sub_1BA522318();
    sub_1BA522558();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatTypeCollection.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v14;
  char v15;
  uint64_t v16;

  v14 = a2;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39C0B8, (uint64_t (*)(void))sub_1BA52239C, (uint64_t)&type metadata for FormatTypeCollection.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA52239C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v14;
  sub_1BA5223E0(0, (unint64_t *)&qword_1ED3B9410, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v15 = 0;
  sub_1BA522458(&qword_1ED39BE58, &qword_1ED39B168, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  v11 = v16;
  sub_1BA522318();
  v15 = 1;
  sub_1BA5224E0();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v12 = v16;
  *v10 = v11;
  v10[1] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA522318()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39BD90)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39BD90);
  }
}

unint64_t sub_1BA52239C()
{
  unint64_t result;

  result = qword_1ED39B670;
  if (!qword_1ED39B670)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9330B8, &type metadata for FormatTypeCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39B670);
  }
  return result;
}

void sub_1BA5223E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA522458(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA5223E0(255, (unint64_t *)&qword_1ED3B9410, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA5225D0(a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA5224E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED39BDA0;
  if (!qword_1ED39BDA0)
  {
    sub_1BA522318();
    v2 = v1;
    v3 = sub_1BA5225D0(&qword_1ED39B168, (uint64_t)&protocol conformance descriptor for FormatObject<A>);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED39BDA0);
  }
  return result;
}

unint64_t sub_1BA522558()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED39BD98;
  if (!qword_1ED39BD98)
  {
    sub_1BA522318();
    v2 = v1;
    v3 = sub_1BA5225D0(&qword_1ED39B160, (uint64_t)&protocol conformance descriptor for FormatObject<A>);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED39BD98);
  }
  return result;
}

uint64_t sub_1BA5225D0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA522630()
{
  sub_1BA522654();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA522654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 144);
  v2 = sub_1BB871680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  v4 = sub_1BB86FAD8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
  v6 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184));
  swift_bridgeObjectRelease();
  return v0;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatVideoPlayerContent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_1BA522788()
{
  sub_1BA522830();
  return sub_1BB872D0C();
}

uint64_t sub_1BA5227D4()
{
  sub_1BA522830();
  return sub_1BB872D60();
}

unint64_t sub_1BA522830()
{
  unint64_t result;

  result = qword_1ED3C9DC0;
  if (!qword_1ED3C9DC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7DA0, &_s10CodingTypeON_110);
    atomic_store(result, (unint64_t *)&qword_1ED3C9DC0);
  }
  return result;
}

void sub_1BA522874(uint64_t *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  unint64_t v35;
  void *v36;
  id v37;
  id v38;
  unint64_t v39;
  id v40[3];

  v37 = a4;
  v40[2] = *(id *)MEMORY[0x1E0C80C00];
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = *(void **)(a2 + 24);
  sub_1BB86C55C();
  v14 = (void *)sub_1BB86C58C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v38 = 0;
  LODWORD(v13) = objc_msgSend(v13, sel_registerFontWithURL_error_, v14, &v38);

  v15 = v38;
  if ((_DWORD)v13)
  {
    v16 = sub_1BB8732E8();
    sub_1BA7AA598();
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
    v18 = a3;
    v19 = objc_msgSend(v18, sel_description);
    v20 = sub_1BB8729A0();
    v22 = v21;

    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v17 + 32) = v20;
    *(_QWORD *)(v17 + 40) = v22;
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3D4460);
    v23 = (void *)sub_1BB873A08();
    sub_1BB86EF44("Font manager registered a downloaded font, font=%@", 50, 2, &dword_1BA493000, v23, v16, v17);
    swift_bridgeObjectRelease();

    sub_1BB86DD20();
    swift_beginAccess();
    v24 = v18;
    v25 = v37;
    v26 = v37;
    sub_1BA522BE4(v40, v24, v25);
    swift_endAccess();
    v27 = v40[1];

    sub_1BB86DD2C();
  }
  else
  {
    v28 = v15;
    v29 = (void *)sub_1BB86C484();

    swift_willThrow();
    v30 = sub_1BB8732F4();
    sub_1BA7AA598();
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BB87A390;
    v32 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
    v33 = sub_1BA6A2D8C();
    *(_QWORD *)(v31 + 64) = v33;
    *(_QWORD *)(v31 + 32) = v12;
    *(_QWORD *)(v31 + 40) = v11;
    v38 = 0;
    v39 = 0xE000000000000000;
    v40[0] = v29;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_bridgeObjectRetain();
    sub_1BB873E34();
    v34 = v38;
    v35 = v39;
    *(_QWORD *)(v31 + 96) = v32;
    *(_QWORD *)(v31 + 104) = v33;
    *(_QWORD *)(v31 + 72) = v34;
    *(_QWORD *)(v31 + 80) = v35;
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3D4460);
    v36 = (void *)sub_1BB873A08();
    sub_1BB86EF44("Failed to register font, url=%@, error=%{public}@", 49, 2, &dword_1BA493000, v36, v30, v31);
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1BA522BE4(_QWORD *a1, void *a2, void *a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  id v27;
  id v28;
  uint64_t v31;

  v5 = *v3;
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  sub_1BB8738D0();
  sub_1BB8745D8();
  v6 = sub_1BB874608();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
    v9 = *(_QWORD *)(v5 + 48) + 16 * v8;
    v10 = *(void **)v9;
    v11 = *(id *)(v9 + 8);
    v12 = v10;
    v13 = sub_1BB8738B8();

    if ((v13 & 1) != 0)
    {
LABEL_6:

      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(*v3 + 48) + 16 * v8;
      v22 = *(void **)v20;
      v21 = *(void **)(v20 + 8);
      *a1 = v22;
      a1[1] = v21;
      v23 = v21;
      v24 = v22;
      return 0;
    }
    v14 = ~v7;
    while (1)
    {
      v8 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        break;
      v15 = *(_QWORD *)(v5 + 48) + 16 * v8;
      v16 = *(void **)v15;
      v17 = *(id *)(v15 + 8);
      v18 = v16;
      v19 = sub_1BB8738B8();

      if ((v19 & 1) != 0)
        goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v31 = *v3;
  *v3 = 0x8000000000000000;
  v27 = a3;
  v28 = a2;
  sub_1BA522DCC((uint64_t)v28, (uint64_t)a3, v8, isUniquelyReferenced_nonNull_native);
  *v3 = v31;
  swift_bridgeObjectRelease();
  *a1 = v28;
  a1[1] = a3;
  return 1;
}

void sub_1BA522DCC(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v7 = *(_QWORD *)(*v4 + 16);
  v8 = *(_QWORD *)(*v4 + 24);
  if (v8 > v7 && (a4 & 1) != 0)
    goto LABEL_14;
  if ((a4 & 1) != 0)
  {
    sub_1BA4BC938();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1BA9E7CB4();
      goto LABEL_14;
    }
    sub_1BA49F1D4();
  }
  v9 = *v4;
  sub_1BB8745CC();
  sub_1BB8738D0();
  sub_1BB8745D8();
  v10 = sub_1BB874608();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a3 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
    v12 = *(_QWORD *)(v9 + 48) + 16 * a3;
    v13 = *(void **)v12;
    v14 = *(id *)(v12 + 8);
    v15 = v13;
    v16 = sub_1BB8738B8();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_1BB874554();
      __break(1u);
    }
    else
    {
      v17 = ~v11;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v9 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = *(_QWORD *)(v9 + 48) + 16 * a3;
        v19 = *(void **)v18;
        v20 = *(id *)(v18 + 8);
        v21 = v19;
        v22 = sub_1BB8738B8();

        if ((v22 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v23 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v24 = (_QWORD *)(*(_QWORD *)(v23 + 48) + 16 * a3);
  *v24 = a1;
  v24[1] = a2;
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
    __break(1u);
  else
    *(_QWORD *)(v23 + 16) = v27;
}

NewsFeed::FeedGroupEmitterPriority_optional __swiftcall FeedGroupEmitterPriority.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FeedGroupEmitterPriority_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA523000@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupNodeMaskPath.init(from:)(a1, a2);
}

uint64_t FormatGroupNodeMaskPath.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_9;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA5233FC();
    v23 = 0;
    v24 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v18 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v16;
  *(_QWORD *)(v19 + 16) = &unk_1E7268CD0;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = v21;
LABEL_9:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA5232FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)(v5 - 144) = xmmword_1BB87FC90;
  sub_1BAE7B9B4();
  sub_1BB8740D4();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v2);
    *(_QWORD *)v1 = *(_QWORD *)(v5 - 160);
    *(_QWORD *)(v1 + 8) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_BYTE *)(v1 + 64) = 1;
    JUMPOUT(0x1BA5231CCLL);
  }
  JUMPOUT(0x1BA523190);
}

void sub_1BA523388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 160) = xmmword_1BB87FC90;
  sub_1BA5FEA34();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BA5233E4);
  }
  JUMPOUT(0x1BA523190);
}

unint64_t sub_1BA5233FC()
{
  unint64_t result;

  result = qword_1ED3CA4A0;
  if (!qword_1ED3CA4A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF3C0, &_s10CodingTypeON_150);
    atomic_store(result, (unint64_t *)&qword_1ED3CA4A0);
  }
  return result;
}

uint64_t FeedNextCursor.__deallocating_deinit()
{
  swift_release();
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA523470(_QWORD *a1)
{
  return FormatArticleOverrides.encode(to:)(a1);
}

uint64_t FormatArticleOverrides.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];

  v3 = v1;
  sub_1BA62A2D0(0, &qword_1ED3AB6A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA62A28C();
  sub_1BB8746C8();
  v12[15] = 0;
  sub_1BB87411C();
  if (!v2)
  {
    v10 = type metadata accessor for FormatArticleOverrides();
    v12[14] = 1;
    sub_1BB86C8B0();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B0510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1BB87414C();
    v12[13] = *(_BYTE *)(v3 + *(int *)(v10 + 24));
    v12[12] = 2;
    sub_1BA523718();
    sub_1BB87414C();
    v12[11] = 3;
    sub_1BB87411C();
    v12[10] = 4;
    type metadata accessor for FormatArticleThumbnail();
    sub_1BA4A2870(&qword_1ED3A6DA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleThumbnail, (uint64_t)&protocol conformance descriptor for FormatArticleThumbnail);
    sub_1BB87414C();
    v12[9] = 5;
    sub_1BB86C67C();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BA523718()
{
  unint64_t result;

  result = qword_1ED3A6D98;
  if (!qword_1ED3A6D98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArticleStoryType, &type metadata for FormatArticleStoryType);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D98);
  }
  return result;
}

void sub_1BA52375C(_QWORD *a1)
{
  FormatHeadlineBinding.Command.encode(to:)(a1);
}

void FormatHeadlineBinding.Command.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD v44[18];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v44[14] = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v44[13] = (char *)v44 - v6;
  MEMORY[0x1E0C80A78](v7);
  v44[12] = (char *)v44 - v8;
  MEMORY[0x1E0C80A78](v9);
  v44[11] = (char *)v44 - v10;
  MEMORY[0x1E0C80A78](v11);
  v44[10] = (char *)v44 - v12;
  MEMORY[0x1E0C80A78](v13);
  v44[9] = (char *)v44 - v14;
  MEMORY[0x1E0C80A78](v15);
  v44[8] = (char *)v44 - v16;
  MEMORY[0x1E0C80A78](v17);
  v44[7] = (char *)v44 - v18;
  MEMORY[0x1E0C80A78](v19);
  v44[6] = (char *)v44 - v20;
  MEMORY[0x1E0C80A78](v21);
  v44[5] = (char *)v44 - v22;
  MEMORY[0x1E0C80A78](v23);
  v44[4] = (char *)v44 - v24;
  MEMORY[0x1E0C80A78](v25);
  v44[2] = (char *)v44 - v26;
  MEMORY[0x1E0C80A78](v27);
  v44[1] = (char *)v44 - v28;
  MEMORY[0x1E0C80A78](v29);
  v44[3] = (char *)v44 - v30;
  MEMORY[0x1E0C80A78](v31);
  v44[0] = (char *)v44 - v32;
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  MEMORY[0x1E0C80A78](v35);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v44 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = *v1;
  v40 = a1[3];
  v41 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v40);
  v42 = sub_1BA6B8518();
  v44[17] = v38;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatHeadlineBinding.Command, v43, v40, (uint64_t)&type metadata for FormatHeadlineBinding.Command, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v41, (uint64_t)v38, v42, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BA523A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D58 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA5244D8(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA5244D8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1F14;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5245FC();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5245FC()
{
  unint64_t result;

  result = qword_1ED39B7F0;
  if (!qword_1ED39B7F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9152A4, &_s14descr1E730C861C7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED39B7F0);
  }
  return result;
}

uint64_t sub_1BA524640@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorBlendProcessor.init(from:)(a1, a2);
}

uint64_t FormatColorBlendProcessor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  char v32;

  v3 = v2;
  v28 = a2;
  sub_1BAE88D10();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE88D88();
  sub_1BA4A2870(&qword_1ED3D11A0, (uint64_t (*)(uint64_t))sub_1BAE88D88, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v28;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v28 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v27 - 4) = (uint64_t)&_s10CodingKeysON_161;
      *(&v27 - 3) = sub_1BAE88E08();
      *(&v27 - 2) = sub_1BA5249BC();
      *(&v27 - 1) = sub_1BAE88E4C();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726AF98);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA62C9A0();
  v31 = 0uLL;
  v32 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v31 = xmmword_1BB8A1A10;
  v32 = 0;
  sub_1BA689CD8();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  v26 = v30;
  *(_QWORD *)v12 = v18;
  *(_QWORD *)(v12 + 8) = v25;
  *(_BYTE *)(v12 + 16) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5249BC()
{
  unint64_t result;

  result = qword_1ED3CB148;
  if (!qword_1ED3CB148)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCA60, &_s10CodingKeysON_161);
    atomic_store(result, (unint64_t *)&qword_1ED3CB148);
  }
  return result;
}

uint64_t sub_1BA524A00(_QWORD *a1)
{
  return FormatVBoxNode.encode(to:)(a1);
}

_QWORD *_s8NewsFeed27FeedReadStoryCommandContextVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA524A5C()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

_QWORD *sub_1BA524A9C@<X0>(unint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatContent.Resolved() - 8) + 80);
  return sub_1BA524AF8(a1, (_QWORD *)(v2 + 16), (uint64_t *)(v2 + ((v5 + 96) & ~v5)), a2);
}

_QWORD *sub_1BA524AF8@<X0>(unint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v7 = *a1;
  sub_1BA561D1C((uint64_t)a2, (uint64_t)&v42);
  if (v44 < 0)
  {
    v44 &= ~0x8000000000000000;
    v23 = v42;
    v8 = v43;
    v24 = v45;
    v25 = v48;
    v31 = v47;
    v33 = v46;
    v35 = v49;
    v39 = *a3;
    v41 = a3[1];
    sub_1BA8C8E10(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6D78DC);
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v26);
    swift_bridgeObjectRetain();
    v37 = v23;
    sub_1BB872AFC(v27);
    swift_bridgeObjectRelease();
    v14 = v41;
    v36 = v39;
    swift_retain();
    swift_bridgeObjectRetain();
    v28 = v7;
    v16 = v24;
    v18 = v31;
    v17 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = a2;
    v20 = v25;
    v21 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BA8C8E10(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA7F4208);
    v15 = v28 | 0x8000000000000000;
  }
  else
  {
    v9 = v42;
    v8 = v43;
    v10 = v45;
    v11 = v48;
    v30 = v47;
    v32 = v46;
    v34 = v49;
    v38 = *a3;
    v40 = a3[1];
    sub_1BA8C8E10(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6D78DC);
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v12);
    swift_bridgeObjectRetain();
    v37 = v9;
    sub_1BB872AFC(v13);
    swift_bridgeObjectRelease();
    v14 = v40;
    v36 = v38;
    swift_bridgeObjectRetain();
    v15 = v7;
    swift_retain();
    v16 = v10;
    v18 = v30;
    v17 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = a2;
    v20 = v11;
    v21 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BA8C8E10(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA7F4208);
  }
  *a4 = v36;
  a4[1] = v14;
  a4[2] = v37;
  a4[3] = v8;
  a4[4] = v15;
  a4[5] = v16;
  a4[6] = v17;
  a4[7] = v18;
  a4[8] = v20;
  a4[9] = v21;
  return result;
}

uint64_t sub_1BA524D38()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA524D68 + 4 * byte_1BB8AE858[*v0]))(0x726F7463656C6573, 0xE800000000000000);
}

uint64_t sub_1BA524D68()
{
  return 1752457584;
}

uint64_t sub_1BA524D78()
{
  return 0x73726564726F62;
}

uint64_t sub_1BA524D90()
{
  return 0x776F64616873;
}

uint64_t sub_1BA524DA4()
{
  return 1885433183;
}

uint64_t sub_1BA524DB4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatBundleImage.init(from:)(a1, a2);
}

uint64_t FormatBundleImage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __int128 v34;
  char v35;
  __int128 v36;
  char v37;

  v3 = v2;
  v33 = a2;
  sub_1BAE7C36C();
  v6 = v5;
  v7 = *(v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7C3E4();
  sub_1BA4A2870(&qword_1ED3D0C90, (uint64_t (*)(uint64_t))sub_1BAE7C3E4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v20 = *((_QWORD *)v15 - 2);
      v21 = *((_QWORD *)v15 - 1);
      v33 = v6;
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *(&v32 - 4) = (uint64_t)&_s10CodingKeysON_201;
      *(&v32 - 3) = sub_1BAE7C464();
      *(&v32 - 2) = sub_1BA525174();
      *(&v32 - 1) = sub_1BAE7C4A8();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E7268D98);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t *))(v7 + 8))(v12, v33);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v36 = 0uLL;
  v37 = 0;
  v16 = sub_1BB874098();
  v18 = v17;
  v36 = xmmword_1BB8A1A10;
  v37 = 0;
  v19 = sub_1BB87402C();
  v27 = v26;
  v32 = v19;
  v34 = xmmword_1BB8D2D60;
  v35 = 0;
  sub_1BA5251B8();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t *))(v7 + 8))(v9, v6);
  v28 = v37;
  v29 = v36;
  v31 = v32;
  v30 = v33;
  *v33 = v16;
  v30[1] = v18;
  v30[2] = v31;
  v30[3] = v27;
  *((_OWORD *)v30 + 2) = v29;
  *((_BYTE *)v30 + 48) = v28;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA525174()
{
  unint64_t result;

  result = qword_1ED3C7940;
  if (!qword_1ED3C7940)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF128, &_s10CodingKeysON_201);
    atomic_store(result, (unint64_t *)&qword_1ED3C7940);
  }
  return result;
}

unint64_t sub_1BA5251B8()
{
  unint64_t result;

  result = qword_1ED3B64D8;
  if (!qword_1ED3B64D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBundleImageSize, &type metadata for FormatBundleImageSize);
    atomic_store(result, (unint64_t *)&qword_1ED3B64D8);
  }
  return result;
}

uint64_t sub_1BA5251FC()
{
  sub_1BA5252A4();
  return sub_1BB872D60();
}

uint64_t sub_1BA525258()
{
  sub_1BA5252A4();
  return sub_1BB872D0C();
}

unint64_t sub_1BA5252A4()
{
  unint64_t result;

  result = qword_1ED3C8C48;
  if (!qword_1ED3C8C48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7A60, &_s10CodingTypeON_112);
    atomic_store(result, (unint64_t *)&qword_1ED3C8C48);
  }
  return result;
}

uint64_t sub_1BA5252E8()
{
  sub_1BA525390();
  return sub_1BB872D60();
}

uint64_t sub_1BA525344()
{
  sub_1BA525390();
  return sub_1BB872D0C();
}

unint64_t sub_1BA525390()
{
  unint64_t result;

  result = qword_1ED3C6988;
  if (!qword_1ED3C6988)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7998, &_s10CodingTypeON_113);
    atomic_store(result, (unint64_t *)&qword_1ED3C6988);
  }
  return result;
}

uint64_t FormatContent.Resolved.layouts.getter()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for FormatContent.Resolved();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BB140D4C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BA525430@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA525450(a1);
}

uint64_t sub_1BA525450@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = sub_1BB871A70();
  MEMORY[0x1E0C80A78](v2);
  v19 = sub_1BB871B6C();
  v3 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB8721C0();
  v20 = *(_QWORD *)(v6 - 8);
  v21 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C8E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C8D4();
  v13 = sub_1BB86C8C8();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1BB87210C();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0D527A8], v19);
  swift_bridgeObjectRetain();
  sub_1BB8720F4();
  sub_1BB872184();
  v16 = (int *)type metadata accessor for FeedBannerAd();
  *(uint64_t *)((char *)a1 + v16[6]) = 0x2000;
  v17 = (char *)a1 + v16[7];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  *(_OWORD *)((char *)a1 + v16[8]) = xmmword_1BB886E80;
  *a1 = v13;
  a1[1] = v15;
  return (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))((char *)a1 + v16[5], v8, v21);
}

uint64_t sub_1BA525650(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ReportScoreConcernCommandHandler();
  result = sub_1BB86DF3C();
  if (!result)
    goto LABEL_14;
  v3 = _s5TeaUI8CommandsC8NewsFeedE6SportsV11ReportScoreV3allSayAA7CommandCyAD0fH7ConcernOGGvgZ_0();
  if (v3 >> 62)
  {
    v4 = sub_1BB873F30();
    if (v4)
      goto LABEL_4;
LABEL_12:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    goto LABEL_12;
LABEL_4:
  result = swift_getObjectType();
  if (v4 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCE4630](v5, v3);
      else
        swift_retain();
      ++v5;
      sub_1BA4A2870(qword_1ED3CDE18, (uint64_t (*)(uint64_t))type metadata accessor for ReportScoreConcernCommandHandler, (uint64_t)&unk_1BB9013F4);
      sub_1BB86FF58();
      swift_release();
    }
    while (v4 != v5);
    goto LABEL_12;
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LiveActivityCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA52580C(_QWORD *a1)
{
  return FormatOptionBindingModifier.encode(to:)(a1);
}

uint64_t FormatOptionBindingModifier.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatOptionBindingModifier, v16, v13, (uint64_t)&type metadata for FormatOptionBindingModifier, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD00);
  if (v12)
  {
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA525A8C(0, v12, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  else
  {
    if (qword_1ED3C4170 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476998);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD7529C(1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA525A8C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF8230;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA525C34();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA525BF0();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA525BF0()
{
  unint64_t result;

  result = qword_1ED39BD30;
  if (!qword_1ED39BD30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatURLParameterOptionModifier, &type metadata for FormatURLParameterOptionModifier);
    atomic_store(result, (unint64_t *)&qword_1ED39BD30);
  }
  return result;
}

unint64_t sub_1BA525C34()
{
  unint64_t result;

  result = qword_1ED3A7FD8;
  if (!qword_1ED3A7FD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B37A8, &_s10CodingTypeON_152);
    atomic_store(result, (unint64_t *)&qword_1ED3A7FD8);
  }
  return result;
}

uint64_t sub_1BA525C78(_QWORD *a1)
{
  return FormatCellSelection.encode(to:)(a1);
}

uint64_t FormatCellSelection.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[7];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)v1;
  v15 = *(_QWORD *)(v1 + 8);
  v17 = *(_QWORD *)(v1 + 24);
  v37 = *(_QWORD *)(v1 + 16);
  v38 = v17;
  v18 = *(_QWORD *)(v1 + 40);
  v39 = *(_QWORD *)(v1 + 32);
  v40 = v18;
  v41 = *(_QWORD *)(v1 + 48);
  v42 = v15;
  v19 = *(unsigned __int8 *)(v1 + 56);
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v22 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCellSelection, v23, v20, (uint64_t)&type metadata for FormatCellSelection, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v14, v22, (uint64_t)&off_1E734BD80);
  if (v19)
  {
    if (v19 == 1)
    {
      sub_1BAC67F0C(v16);
      if (qword_1ED3C2478 != -1)
        swift_once();
      v24 = sub_1BB86EB84();
      v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, v25, v24);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BAD7F3D4(1, v16, (uint64_t)v8);
      sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
      return sub_1BA763860(v16, v42, v37, v38, v39, v40, v41, 1);
    }
    else
    {
      if (qword_1ED3C2478 != -1)
        swift_once();
      v34 = sub_1BB86EB84();
      v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v5, v35, v34);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA5260A4(2, (uint64_t)v5);
      sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
      return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    }
  }
  else
  {
    v27 = v41;
    v43[0] = v16;
    v43[1] = v42;
    v29 = v37;
    v28 = v38;
    v43[2] = v37;
    v43[3] = v38;
    v31 = v39;
    v30 = v40;
    v43[4] = v39;
    v43[5] = v40;
    v43[6] = v41;
    sub_1BA7638A4(v16, v42, v37, v38, v39, v40, v41, (void (*)(void))sub_1BA5E7FF4, sub_1BA6E6C68);
    if (qword_1ED3C2478 != -1)
      swift_once();
    v32 = sub_1BB86EB84();
    v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v11, v33, v32);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA52620C(0, (uint64_t)v43, (uint64_t)v11);
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    return sub_1BA763860(v16, v42, v29, v28, v31, v30, v27, 0);
  }
}

uint64_t sub_1BA5260A4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF512C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5261C8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5261C8()
{
  unint64_t result;

  result = qword_1ED3A65F8;
  if (!qword_1ED3A65F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCellSelection.CodingType, &type metadata for FormatCellSelection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A65F8);
  }
  return result;
}

uint64_t sub_1BA52620C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[64];

  v16[63] = a1;
  sub_1BA6A09F0(a2, (uint64_t)v16, &qword_1ED39FE60, (uint64_t)&type metadata for FormatCellSelection.Background);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF512C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5261C8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA52638C();
    sub_1BB874458();
  }
  return swift_release();
}

unint64_t sub_1BA52638C()
{
  unint64_t result;

  result = qword_1ED3A65F0;
  if (!qword_1ED3A65F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCellSelection.Background, &type metadata for FormatCellSelection.Background);
    atomic_store(result, (unint64_t *)&qword_1ED3A65F0);
  }
  return result;
}

uint64_t sub_1BA5263D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5263FC();
  *a1 = result;
  return result;
}

uint64_t sub_1BA5263FC()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_1BA526444()
{
  sub_1BA5264A0();
  return sub_1BB872D60();
}

unint64_t sub_1BA5264A0()
{
  unint64_t result;

  result = qword_1ED3B3688;
  if (!qword_1ED3B3688)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnchor, &type metadata for FormatAnchor);
    atomic_store(result, (unint64_t *)&qword_1ED3B3688);
  }
  return result;
}

void destroy for FeedScoredItem(uint64_t a1)
{
  swift_unknownObjectRelease();

}

uint64_t static Format.version.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3BB468 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3B8FC8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1BA526584()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v15;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v4 = *(void **)(v0 + 40);

  v5 = *(void **)(v0 + 64);
  v15 = *(void **)(v0 + 56);
  v6 = *(void **)(v0 + 72);
  v7 = *(void **)(v0 + 80);
  v8 = *(void **)(v0 + 88);
  v9 = *(void **)(v0 + 96);
  v10 = *(void **)(v0 + 104);
  v11 = *(void **)(v0 + 112);
  v13 = *(void **)(v0 + 120);
  v12 = *(void **)(v0 + 128);

  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA526644@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA52665C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_1BA52665C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;

  type metadata accessor for FeedCursorStore.WeakWrapper(255, a1, a2, a3);
  v5 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v5);
  result = sub_1BB873DA4();
  *a4 = result;
  return result;
}

void sub_1BA5266EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED39C228)
  {
    sub_1BA76D78C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED39C228);
  }
}

uint64_t sub_1BA52674C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[16];
  uint64_t *v12;
  uint64_t v13;

  v6 = result;
  if (!a2)
  {
    v9 = 0;
    if (a3)
      goto LABEL_4;
LABEL_7:
    v10 = 0;
    goto LABEL_8;
  }
  v13 = result;
  MEMORY[0x1E0C80A78](result);
  v12 = &v13;
  swift_bridgeObjectRetain();
  v9 = sub_1BA8A14AC((void (*)(__int128 *__return_ptr, _QWORD *, uint64_t *))sub_1BB684420, (uint64_t)v11, a2);
  result = swift_bridgeObjectRelease();
  if (v4)
    return result;
  if (!a3)
    goto LABEL_7;
LABEL_4:
  v13 = v6;
  MEMORY[0x1E0C80A78](result);
  v12 = &v13;
  swift_bridgeObjectRetain();
  v10 = sub_1BA8A14AC((void (*)(__int128 *__return_ptr, _QWORD *, uint64_t *))sub_1BA81DD8C, (uint64_t)v11, a3);
  result = swift_bridgeObjectRelease();
  if (v4)
    return swift_bridgeObjectRelease();
LABEL_8:
  *a4 = v9;
  a4[1] = v10;
  return result;
}

uint64_t sub_1BA52688C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D2>, double a4@<D3>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[4];
  BOOL v42;
  uint64_t v43;

  v43 = a1;
  v9 = *v4;
  v8 = v4[1];
  v10 = 0;
  if (v9)
  {
    v11 = *(_QWORD *)(v9 + 16);
    if (v11)
    {
      v39 = a2;
      swift_bridgeObjectRetain_n();
      v12 = (unsigned __int8 *)(v9 + 64);
      do
      {
        v13 = *((_QWORD *)v12 - 4);
        v14 = *((_QWORD *)v12 - 3);
        v16 = *((_QWORD *)v12 - 2);
        v15 = *((_QWORD *)v12 - 1);
        v17 = *v12;
        sub_1BA527164(v13, v14, v16, v15, *v12);
        sub_1BA526B48();
        if (v5)
        {
          sub_1BA5271D4(v13, v14, v16, v15, v17);
          return swift_bridgeObjectRelease_n();
        }
        v22 = v18;
        v23 = v19;
        a3 = v20;
        a4 = v21;
        v12 += 40;
        sub_1BA5271D4(v13, v14, v16, v15, v17);
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease_n();
      a2 = v39;
      if (v8)
        goto LABEL_9;
      goto LABEL_7;
    }
  }
  v22 = 0.0;
  v23 = 0.0;
  if (!v8)
  {
LABEL_7:
    v24 = 0;
    v25 = 0.0;
    v26 = 0.0;
LABEL_16:
    v41[0] = v10;
    v41[1] = v24;
    *(double *)&v41[2] = v25;
    *(double *)&v41[3] = v26;
    v42 = v8 == 0;
    return sub_1BA4BF07C((uint64_t)v41, a2, v22, v23, a3, a4);
  }
LABEL_9:
  v27 = *(_QWORD *)(v8 + 16);
  if (!v27)
  {
    v10 = 0;
    v24 = 0;
    v25 = a3;
    v26 = a4;
    goto LABEL_16;
  }
  v40 = a2;
  swift_bridgeObjectRetain_n();
  v28 = (unsigned __int8 *)(v8 + 64);
  while (1)
  {
    v29 = *((_QWORD *)v28 - 4);
    v30 = *((_QWORD *)v28 - 3);
    v31 = *((_QWORD *)v28 - 2);
    v32 = *((_QWORD *)v28 - 1);
    v33 = *v28;
    sub_1BA527164(v29, v30, v31, v32, *v28);
    sub_1BA526B48();
    if (v5)
      break;
    v10 = v34;
    v24 = v35;
    v25 = v36;
    v26 = v37;
    v28 += 40;
    sub_1BA5271D4(v29, v30, v31, v32, v33);
    if (!--v27)
    {
      swift_bridgeObjectRelease_n();
      a2 = v40;
      goto LABEL_16;
    }
  }
  sub_1BA5271D4(v29, v30, v31, v32, v33);
  return swift_bridgeObjectRelease_n();
}

void sub_1BA526B48()
{
  __asm { BR              X10 }
}

void sub_1BA526BA0()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v5 = sub_1BA72BD68();
  if (!v0)
    UIEdgeInsetsInsetRect(v4, v3, v2, v1, v5, v6);
}

void sub_1BA527020()
{
  CGFloat v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGRect v4;

  v4.origin.x = v3;
  v4.origin.y = v2;
  v4.size.width = v1;
  v4.size.height = v0;
  CGRectIntegral(v4);
  JUMPOUT(0x1BA526FF8);
}

uint64_t sub_1BA527060()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t result;

  v2 = *v0;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    for (i = (unsigned __int8 *)(v2 + 64); ; i += 40)
    {
      v5 = *((_QWORD *)i - 4);
      v6 = *((_QWORD *)i - 3);
      v7 = *((_QWORD *)i - 2);
      v8 = *((_QWORD *)i - 1);
      v9 = *i;
      sub_1BA527164(v5, v6, v7, v8, *i);
      FormatImageNodeRequestAdjustment.bind(binder:context:)();
      if (v1)
        break;
      sub_1BA5271D4(v5, v6, v7, v8, v9);
      if (!--v3)
        return swift_bridgeObjectRelease_n();
    }
    sub_1BA5271D4(v5, v6, v7, v8, v9);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1BA527164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 1 < 0xB)
    return swift_bridgeObjectRetain();
  if (!a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA5271D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 1 < 0xB)
    return swift_bridgeObjectRelease();
  if (!a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA527244(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA527270(a1, a2, a3, *v3, (unint64_t *)&unk_1ED3AB960, (uint64_t)&type metadata for FormatImageNodeRequestAdjustment);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA527270(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 40);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  v16 = 40 * v10;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void FormatImageNodeRequestAdjustment.bind(binder:context:)()
{
  __asm { BR              X10 }
}

void sub_1BA527448()
{
  FormatEdgeInsetsEquation.bind(binder:context:)();
}

uint64_t sub_1BA527B8C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA527BBC + 4 * byte_1BB8AE5D0[*v0]))(0x726F7463656C6573, 0xE800000000000000);
}

unint64_t sub_1BA527BBC()
{
  return 0xD000000000000018;
}

uint64_t sub_1BA527BD8()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BA527BF0()
{
  return 1885433183;
}

uint64_t sub_1BA527C00()
{
  unsigned __int8 *v0;

  return sub_1BADB5944(*v0);
}

uint64_t sub_1BA527C08()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA527C38 + 4 * byte_1BB8AEA20[*v0]))(0x726F7463656C6573, 0xE800000000000000);
}

uint64_t sub_1BA527C38()
{
  return 0x6168706C61;
}

uint64_t sub_1BA527C4C()
{
  return 0x73726564726F62;
}

uint64_t sub_1BA527C64()
{
  return 0x615272656E726F63;
}

uint64_t sub_1BA527C84()
{
  return 0x776F64616873;
}

unint64_t sub_1BA527C98()
{
  return 0xD000000000000018;
}

uint64_t sub_1BA527CB4()
{
  return 0x737469617274;
}

uint64_t sub_1BA527CC8()
{
  return 1885433183;
}

uint64_t sub_1BA527CD8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatLocalization.init(from:)(a1, a2);
}

uint64_t FormatLocalization.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  __int128 v40;
  char v41;
  uint64_t v42;

  v3 = v2;
  v39 = a2;
  sub_1BAE78E78();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE78EF0();
  sub_1BA4A2870(&qword_1ED3D0D30, (uint64_t (*)(uint64_t))sub_1BAE78EF0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v32 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  v10 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  if ((v10 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v20 = *((_QWORD *)v16 - 2);
      v21 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      v23 = v12;
      MEMORY[0x1E0C80A78](v22);
      *(&v35 - 4) = (uint64_t)&_s10CodingKeysON_219;
      *(&v35 - 3) = sub_1BAE78F70();
      *(&v35 - 2) = sub_1BA528128();
      *(&v35 - 1) = sub_1BAE78FB4();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E7268848);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v20;
      *(_QWORD *)(v25 + 8) = v21;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v13);
      a1 = v38;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v17 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAE78E78);
  v19 = v18;
  v40 = xmmword_1BB8A1A10;
  v41 = 0;
  v27 = sub_1BB87402C();
  v29 = v28;
  v40 = xmmword_1BB8D2D60;
  v41 = 0;
  v36 = sub_1BB87402C();
  v37 = v30;
  sub_1BA4AD288(0, &qword_1ED3B9570, (uint64_t)&type metadata for FormatLocalizationString, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v40 = xmmword_1BB8D2D70;
  v41 = 0;
  sub_1BA52816C();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v13);
  v31 = v42;
  v32 = (uint64_t)v38;
  v33 = v39;
  *v39 = v17;
  v33[1] = v19;
  v33[2] = v27;
  v33[3] = v29;
  v34 = v37;
  v33[4] = v36;
  v33[5] = v34;
  v33[6] = v31;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

unint64_t sub_1BA528128()
{
  unint64_t result;

  result = qword_1ED3C7E68;
  if (!qword_1ED3C7E68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0050, &_s10CodingKeysON_219);
    atomic_store(result, (unint64_t *)&qword_1ED3C7E68);
  }
  return result;
}

unint64_t sub_1BA52816C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B9578;
  if (!qword_1ED3B9578)
  {
    sub_1BA4AD288(255, &qword_1ED3B9570, (uint64_t)&type metadata for FormatLocalizationString, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA826BDC();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9578);
  }
  return result;
}

uint64_t sub_1BA5281E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextAdjustmentMetric.init(from:)(a1, a2);
}

uint64_t FormatTextAdjustmentMetric.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  uint64_t v31;

  v3 = v2;
  v28 = a2;
  sub_1BAE7406C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE740E4();
  sub_1BA4A2870(&qword_1ED3D1260, (uint64_t (*)(uint64_t))sub_1BAE740E4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_9:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v28;
  v13 = v7;
  v14 = v6;
  v15 = v9;
  if ((v11 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v28 = v13;
      v21 = *((_QWORD *)v18 - 2);
      v22 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v23);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_243;
      *(&v28 - 3) = sub_1BAE74164();
      *(&v28 - 2) = sub_1BA5285BC();
      *(&v28 - 1) = sub_1BAE741A8();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E72504F0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v6);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA528644();
  v29 = 0uLL;
  v30 = 0;
  sub_1BB8740D4();
  v19 = v31;
  type metadata accessor for FormatTextNodeStyle();
  v29 = xmmword_1BB8A1A10;
  v30 = 0;
  sub_1BA4A2870(&qword_1ED3C8748, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
  sub_1BB8740D4();
  v26 = v31;
  v29 = xmmword_1BB8D2D60;
  v30 = 0;
  sub_1BA528600();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v27 = v31;
  *(_BYTE *)v12 = v19;
  *(_QWORD *)(v12 + 8) = v26;
  *(_BYTE *)(v12 + 16) = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5285BC()
{
  unint64_t result;

  result = qword_1ED3CBA60;
  if (!qword_1ED3CBA60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1360, &_s10CodingKeysON_243);
    atomic_store(result, (unint64_t *)&qword_1ED3CBA60);
  }
  return result;
}

unint64_t sub_1BA528600()
{
  unint64_t result;

  result = qword_1ED3BF678;
  if (!qword_1ED3BF678)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontMetricAdjustment, &type metadata for FormatFontMetricAdjustment);
    atomic_store(result, (unint64_t *)&qword_1ED3BF678);
  }
  return result;
}

unint64_t sub_1BA528644()
{
  unint64_t result;

  result = qword_1ED3BDBC8;
  if (!qword_1ED3BDBC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontMetric, &type metadata for FormatFontMetric);
    atomic_store(result, (unint64_t *)&qword_1ED3BDBC8);
  }
  return result;
}

uint64_t FeedItemLayoutAttributes.resizingIdentifier.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0 >> 60;
  v2 = 0;
  if (((1 << v1) & 0x77F) == 0)
  {
    if ((_DWORD)v1 == 7)
    {
      sub_1BA641024();
      v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(swift_projectBox() + *(int *)(v4 + 48))
                                 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                     + 48);
      swift_bridgeObjectRetain();
    }
    else
    {
      return FeedItemLayoutAttributes.resizingIdentifier.getter();
    }
  }
  return v2;
}

uint64_t FeedItemLayoutAttributes.resizingGroupIdentifier.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0 >> 60;
  v2 = 0;
  if (((1 << v1) & 0x77F) == 0)
  {
    if ((_DWORD)v1 == 7)
    {
      sub_1BA641024();
      v2 = *(_QWORD *)(*(_QWORD *)(swift_projectBox() + *(int *)(v4 + 48)) + 48);
      swift_bridgeObjectRetain();
    }
    else
    {
      return FeedItemLayoutAttributes.resizingGroupIdentifier.getter();
    }
  }
  return v2;
}

void sub_1BA5287D8(_QWORD *a1)
{
  FormatShine.encode(to:)(a1);
}

void FormatShine.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[4];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v17[0] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  v17[3] = v11;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatShine, v16, v13, (uint64_t)&type metadata for FormatShine, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA528974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BA6F3F88();
  v4 = v1 + *(int *)(v3 + 48);
  v5 = (_QWORD *)(v1 + *(int *)(v3 + 64));
  v6 = v0;
  v7 = qword_1ED3C2478;
  swift_retain();
  if (v7 != -1)
    swift_once();
  v8 = sub_1BB86EB84();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED476C20);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10(v1, v9, v8);
  if (qword_1ED3C4170 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED476998);
  v10(v4, v11, v8);
  type metadata accessor for FormatVersionRequirement.Value(0);
  *v5 = 0;
  v5[1] = 0;
  swift_storeEnumTagMultiPayload();
  v12 = v0;
  v13 = *(_QWORD *)(v2 - 72);
  sub_1BA528F3C(0, v12, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v13, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA756FBC(v6);
}

uint64_t sub_1BA528F3C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEC75C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5290A0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA5290A0()
{
  unint64_t result;

  result = qword_1ED3A5488;
  if (!qword_1ED3A5488)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF798, &_s10CodingTypeON_32);
    atomic_store(result, (unint64_t *)&qword_1ED3A5488);
  }
  return result;
}

uint64_t sub_1BA5290E4()
{
  sub_1BA52918C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA529130()
{
  sub_1BA52918C();
  return sub_1BB872D60();
}

unint64_t sub_1BA52918C()
{
  unint64_t result;

  result = qword_1ED3C9E10;
  if (!qword_1ED3C9E10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAEB0, &_s10CodingTypeON_76);
    atomic_store(result, (unint64_t *)&qword_1ED3C9E10);
  }
  return result;
}

char *OfflineManager.init(offlineProvider:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  char *v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[qword_1EF2C4690];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  sub_1BA4C010C(a1, (uint64_t)&v1[qword_1EF2C4698]);
  v11.receiver = v1;
  v11.super_class = ObjectType;
  v5 = (char *)objc_msgSendSuper2(&v11, sel_init);
  v6 = *(_QWORD *)&v5[qword_1EF2C4698 + 24];
  v7 = *(_QWORD *)&v5[qword_1EF2C4698 + 32];
  __swift_project_boxed_opaque_existential_1(&v5[qword_1EF2C4698], v6);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v9 = v5;
  v8(v5, v6, v7);

  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

uint64_t sub_1BA52929C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA72E05C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA5292C4(char a1)
{
  if (!a1)
    return 0x6574617473;
  if (a1 == 1)
    return 0x65756C6176;
  return 1885433183;
}

_QWORD *_s8NewsFeed18FormatSizeEquationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA529340(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  int v25;

  v6 = *(_QWORD *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 64);
  v7 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v8 | 7;
  v10 = ((v8 | 7) + v6) & ~(v8 | 7);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = (v11 + v8 + ((v11 + v8 + ((v8 + 16) & ~v8)) & ~v8)) & ~v8;
  v13 = *(_DWORD *)(v7 + 84) == 0;
  v14 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + v9) & ~v9;
  if (v13)
    v15 = v11 + 1;
  else
    v15 = v11;
  v16 = ((((((((v15 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v17 = v16 + v14;
  if (v17 <= v16 + v10)
    v17 = v16 + v10;
  if (!a2)
    return 0;
  if ((a2 & 0x80000000) == 0)
    goto LABEL_8;
  v20 = v17 + 16;
  v21 = a2 - 2147483646;
  if ((v17 + 16) > 3)
    v21 = 2;
  if (v21 >= 0x10000)
    v22 = 4;
  else
    v22 = 2;
  if (v21 < 0x100)
    v23 = 1;
  else
    v23 = v22;
  if (v23 == 4)
  {
    v24 = *(_DWORD *)((char *)a1 + v20);
    if (!v24)
      goto LABEL_8;
  }
  else if (v23 == 2)
  {
    v24 = *(unsigned __int16 *)((char *)a1 + v20);
    if (!*(_WORD *)((char *)a1 + v20))
      goto LABEL_8;
  }
  else
  {
    v24 = *((unsigned __int8 *)a1 + v20);
    if (!*((_BYTE *)a1 + v20))
    {
LABEL_8:
      v18 = *(_QWORD *)(((unint64_t)a1 + v17 + 8) & 0xFFFFFFFFFFFFF8);
      if (v18 >= 0xFFFFFFFF)
        LODWORD(v18) = -1;
      return (v18 + 1);
    }
  }
  v25 = v24 - 1;
  if (v20 > 3)
    v25 = 0;
  if ((_DWORD)v20)
    LODWORD(v20) = *a1;
  return (v20 | v25) ^ 0x80000000;
}

void sub_1BA5294C0(unsigned int *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;

  v8 = *(_QWORD *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 64);
  v9 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v10 | 7;
  v12 = ((v10 | 7) + v8) & ~(v10 | 7);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = (v13 + v10 + ((v13 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
  v15 = *(_DWORD *)(v9 + 84) == 0;
  v16 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64) + v11) & ~v11;
  if (v15)
    v17 = v13 + 1;
  else
    v17 = v13;
  v18 = ((((((((v17 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v19 = v18 + v16;
  if (v19 <= v18 + v12)
    v19 = v18 + v12;
  v20 = v19 + 16;
  if (a3 < 0)
  {
    v22 = a3 - 2147483646;
    if (v20 > 3)
      v22 = 2;
    if (v22 >= 0x10000)
      v23 = 4;
    else
      v23 = 2;
    if (v22 < 0x100)
      v21 = 1;
    else
      v21 = v23;
    if ((a2 & 0x80000000) == 0)
LABEL_8:
      __asm { BR              X11 }
  }
  else
  {
    v21 = 0u;
    if ((a2 & 0x80000000) == 0)
      goto LABEL_8;
  }
  if ((_DWORD)v19 != -16)
  {
    if (v20 <= 3)
      v24 = 0;
    else
      v24 = a2 ^ 0x80000000;
    bzero(a1, v20);
    *a1 = v24;
  }
  __asm { BR              X10 }
}

void sub_1BA529674()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (!v1)
    JUMPOUT(0x1BA529660);
  JUMPOUT(0x1BA52964CLL);
}

void sub_1BA529680()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA529660);
}

void sub_1BA529688()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA529660);
}

uint64_t FormatPackageInventory.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_1BA5296C0@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  _OWORD v4[2];
  uint64_t v5;

  sub_1BA529700((uint64_t *)v4);
  result = *(double *)v4;
  v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1BA529700@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t *v41;

  v41 = a1;
  sub_1BA5AA370(0, &qword_1ED3A3C58, &qword_1ED3A3C50, (uint64_t (*)(uint64_t))sub_1BA5AA6C0, sub_1BA5AA7F8);
  MEMORY[0x1E0C80A78](v1);
  v40 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v34 - v4;
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BA5AA370(0, &qword_1ED39A6B0, &qword_1ED39A6A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], sub_1BAA0A328);
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - v9;
  sub_1BA5AA528(0, (unint64_t *)&qword_1ED39A6D0, (uint64_t)&qword_1ED39A6C8, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_1BA5AA31C);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v34 - v15;
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88];
  sub_1BA5AA31C(0, &qword_1ED39A6C8, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2C88]);
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v37 = v20;
  v20(v16, 1, 1, v18);
  v35 = v13;
  v20(v13, 1, 1, v19);
  sub_1BA5AA31C(0, &qword_1ED39A708, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA31C(0, &qword_1ED39A670, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v38 = sub_1BB86F058();
  sub_1BA5AA2AC(0, &qword_1ED39A6A8, v5, sub_1BAA0A328, v17);
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v23(v10, 1, 1, v21);
  v23(v36, 1, 1, v22);
  sub_1BA5AA2AC(0, &qword_1ED39A700, v5, sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA2AC(0, &qword_1ED39A668, v5, sub_1BAA0A328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v24 = sub_1BB86F058();
  v25 = v37;
  v37(v16, 1, 1, v19);
  v26 = v35;
  v25(v35, 1, 1, v19);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v27 = sub_1BB86F058();
  v25(v16, 1, 1, v19);
  v25(v26, 1, 1, v19);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v28 = sub_1BB86F058();
  sub_1BA5AA2AC(0, &qword_1ED3A3C50, (uint64_t (*)(uint64_t))sub_1BA5AA6C0, sub_1BA5AA7F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v30 = v29;
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v31(v39, 1, 1, v29);
  v31(v40, 1, 1, v30);
  sub_1BA5AA2AC(0, &qword_1ED3A3CC0, (uint64_t (*)(uint64_t))sub_1BA5AA6C0, sub_1BA5AA7F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA2AC(0, &qword_1ED3A3BE8, (uint64_t (*)(uint64_t))sub_1BA5AA6C0, sub_1BA5AA7F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  result = sub_1BB86F058();
  v33 = v41;
  *v41 = v38;
  v33[1] = v24;
  v33[2] = v27;
  v33[3] = v28;
  v33[4] = result;
  return result;
}

void sub_1BA529CC8(_QWORD *a1)
{
  FormatHeadlineBinding.Color.encode(to:)(a1);
}

void FormatHeadlineBinding.Color.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[4];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v17[0] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  v17[3] = v11;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatHeadlineBinding.Color, v16, v13, (uint64_t)&type metadata for FormatHeadlineBinding.Color, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BA529E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA52A1A0(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA52A1A0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF90DC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA52A2C4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA52A2C4()
{
  unint64_t result;

  result = qword_1ED3A6B68;
  if (!qword_1ED3A6B68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A7F0, &_s14descr1E728F061C5ColorO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B68);
  }
  return result;
}

void sub_1BA52A308(_QWORD *a1)
{
  FormatWebEmbedBinding.Bool.encode(to:)(a1);
}

void FormatWebEmbedBinding.Bool.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[10];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v28[6] = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v28[5] = (char *)v28 - v7;
  MEMORY[0x1E0C80A78](v8);
  v28[3] = (char *)v28 - v9;
  MEMORY[0x1E0C80A78](v10);
  v28[2] = (char *)v28 - v11;
  MEMORY[0x1E0C80A78](v12);
  v28[4] = (char *)v28 - v13;
  MEMORY[0x1E0C80A78](v14);
  v28[1] = (char *)v28 - v15;
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *v2;
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v26 = sub_1BA6B8518();
  v28[9] = v22;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatWebEmbedBinding.Bool, v27, v24, (uint64_t)&type metadata for FormatWebEmbedBinding.Bool, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v25, (uint64_t)v22, v26, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BA52A53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BA52AAD8(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA52AAD8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEE803C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA52ABFC();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA52ABFC()
{
  unint64_t result;

  result = qword_1ED3A6D28;
  if (!qword_1ED3A6D28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Bool.CodingType, &type metadata for FormatWebEmbedBinding.Bool.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D28);
  }
  return result;
}

uint64_t sub_1BA52AC40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatItemNodeAction.init(from:)(a1, a2);
}

uint64_t FormatItemNodeAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void (**v5)(char *, _QWORD);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  void (**v33)(char *, _QWORD);

  v29 = a2;
  v26 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v26);
  v27 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v28 = v4;
  v5 = *(void (***)(char *, _QWORD))(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v25 - v6;
  v8 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v11 = v33;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
    v13 = a1;
    goto LABEL_11;
  }
  v33 = v5;
  v25[0] = v8;
  v25[1] = v10;
  v13 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v16 = v28;
  v17 = v7;
  if ((v15 & 1) == 0)
  {
LABEL_9:
    sub_1BA52B154();
    v31 = 0;
    v32 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v18 = sub_1BB8740EC();
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v20 = (unint64_t *)(v18 + 40);
  while (1)
  {
    v21 = *v20;
    if (*v20 >= 4)
      break;
    v20 += 2;
    if (!--v19)
      goto LABEL_8;
  }
  v22 = *(v20 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v12 = (void *)swift_allocError();
  *(_QWORD *)v23 = v22;
  *(_QWORD *)(v23 + 8) = v21;
  *(_QWORD *)(v23 + 16) = &unk_1E726C950;
  *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v22, v21);
  v33[1](v17, v16);
LABEL_11:
  sub_1BA7F8B78(v13, (uint64_t)v12);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

void sub_1BA52AF70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;

  *(_OWORD *)(v4 - 128) = xmmword_1BB87FC90;
  sub_1BAAD69D4();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
    v5 = *(_QWORD *)(v4 - 96);
    v6 = *(_BYTE *)(v4 - 88);
    v7 = *(_BYTE *)(v4 - 87);
    v8 = *(_QWORD *)(v4 - 168);
    *(_OWORD *)v8 = *(_OWORD *)(v4 - 112);
    *(_QWORD *)(v8 + 16) = v5;
    *(_BYTE *)(v8 + 24) = v6;
    *(_BYTE *)(v8 + 25) = v7;
    JUMPOUT(0x1BA52B10CLL);
  }
  JUMPOUT(0x1BA52AE58);
}

void sub_1BA52B0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  v5 = *(_QWORD *)(v4 - 168);
  swift_storeEnumTagMultiPayload(v5, *(_QWORD *)(v4 - 176), 4);
  sub_1BA5193C4(v5, v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
  JUMPOUT(0x1BA52AF44);
}

void sub_1BA52B0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  v5 = *(_QWORD *)(v4 - 168);
  swift_storeEnumTagMultiPayload(v5, *(_QWORD *)(v4 - 176), 5);
  sub_1BA5193C4(v5, v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
  JUMPOUT(0x1BA52AF44);
}

void sub_1BA52B0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  v5 = *(_QWORD *)(v4 - 168);
  swift_storeEnumTagMultiPayload(v5, *(_QWORD *)(v4 - 176), 6);
  sub_1BA5193C4(v5, v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
  JUMPOUT(0x1BA52AF44);
}

void sub_1BA52B0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  JUMPOUT(0x1BA52B108);
}

unint64_t sub_1BA52B154()
{
  unint64_t result;

  result = qword_1ED3C8EF0;
  if (!qword_1ED3C8EF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9B88, &_s14descr1E72CC571C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C8EF0);
  }
  return result;
}

uint64_t sub_1BA52B198@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatResizeConstraint.init(from:)(a1, a2);
}

uint64_t FormatResizeConstraint.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  char v31;

  v3 = v2;
  v28 = a2;
  sub_1BAEB72E0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEB7358();
  sub_1BA4A2870(&qword_1ED3D1050, (uint64_t (*)(uint64_t))sub_1BAEB7358, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v28;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v28 = v13;
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v21);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_58;
      *(&v28 - 3) = sub_1BAEB73D8();
      *(&v28 - 2) = sub_1BA52B4F4();
      *(&v28 - 1) = sub_1BAEB741C();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726E000);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA52B538();
  v29 = 0uLL;
  v30 = 0;
  sub_1BB8740D4();
  v18 = v31;
  v29 = xmmword_1BB8A1A10;
  v30 = 0;
  v25 = sub_1BB874098();
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  *(_BYTE *)v12 = v18;
  *(_QWORD *)(v12 + 8) = v25;
  *(_QWORD *)(v12 + 16) = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA52B4F4()
{
  unint64_t result;

  result = qword_1ED3CA178;
  if (!qword_1ED3CA178)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7130, &_s10CodingKeysON_58);
    atomic_store(result, (unint64_t *)&qword_1ED3CA178);
  }
  return result;
}

unint64_t sub_1BA52B538()
{
  unint64_t result;

  result = qword_1ED3B6D00;
  if (!qword_1ED3B6D00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizeConstraint.Dimension, &type metadata for FormatResizeConstraint.Dimension);
    atomic_store(result, (unint64_t *)&qword_1ED3B6D00);
  }
  return result;
}

uint64_t sub_1BA52B57C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPlaceholder.init(from:)(a1, a2);
}

uint64_t FormatPlaceholder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;

  sub_1BA52B758(0, &qword_1ED3B9C20, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA52B7B4();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v11 = sub_1BB874098();
  v13 = v12;
  v19 = 1;
  swift_bridgeObjectRetain();
  v14 = sub_1BB8740F8();
  if ((v14 & 1) != 0)
  {
    v18 = 1;
    sub_1BB8740D4();
    v15 = v17;
  }
  else
  {
    v15 = 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v13;
  *(_BYTE *)(a2 + 16) = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1BA52B758(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA52B7B4();
    v7 = a3(a1, &type metadata for FormatPlaceholder.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA52B7B4()
{
  unint64_t result;

  result = qword_1ED3B4E30;
  if (!qword_1ED3B4E30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90BDE8, &type metadata for FormatPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B4E30);
  }
  return result;
}

uint64_t sub_1BA52B7F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA52B828()
{
  sub_1BA52B8D0();
  return sub_1BB872D0C();
}

uint64_t sub_1BA52B874()
{
  sub_1BA52B8D0();
  return sub_1BB872D60();
}

unint64_t sub_1BA52B8D0()
{
  unint64_t result;

  result = qword_1ED3C98D0;
  if (!qword_1ED3C98D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94E588, &_s14descr1E7342C99C4BoolO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3C98D0);
  }
  return result;
}

uint64_t sub_1BA52B914()
{
  sub_1BA52B9BC();
  return sub_1BB872D0C();
}

uint64_t sub_1BA52B960()
{
  sub_1BA52B9BC();
  return sub_1BB872D60();
}

unint64_t sub_1BA52B9BC()
{
  unint64_t result;

  result = qword_1ED3C6668;
  if (!qword_1ED3C6668)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEBE0, &_s10CodingTypeON_40);
    atomic_store(result, (unint64_t *)&qword_1ED3C6668);
  }
  return result;
}

NewsFeed::FormatFontTrait_optional __swiftcall FormatFontTrait.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatFontTrait_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1BB87450C();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 2;
  switch(v3)
  {
    case 0:
      goto LABEL_3;
    case 1:
      v5 = 1;
LABEL_3:
      v6 = v5;
      break;
    case 2:
      break;
    case 3:
      v6 = 3;
      break;
    case 4:
      v6 = 4;
      break;
    case 5:
      v6 = 5;
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    default:
      v6 = 20;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t sub_1BA52BB14@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatQueryValue.init(from:)(a1, a2);
}

uint64_t FormatQueryValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v3 = v2;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v18 = v17;
      *(_QWORD *)(v18 + 8) = v16;
      *(_QWORD *)(v18 + 16) = &unk_1E72693D0;
      *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v17, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA52BE18();
  v24 = 0;
  v25 = 0;
  sub_1BB8740D4();
  sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
  v23 = xmmword_1BB87FC90;
  sub_1BAE767F4();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = v24;
  v21 = v25;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v20;
  *(_QWORD *)(v22 + 24) = v21;
  *v12 = v22;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA52BE18()
{
  unint64_t result;

  result = qword_1ED3C7600;
  if (!qword_1ED3C7600)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEE78, &_s10CodingTypeON_147);
    atomic_store(result, (unint64_t *)&qword_1ED3C7600);
  }
  return result;
}

_BYTE *sub_1BA52BE5C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _BYTE *result;

  result = sub_1BA52BE84(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_BYTE *sub_1BA52BE84(_QWORD *a1)
{
  _BYTE *v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void *v32;
  char v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char v45;
  void *v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[12];
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  _BYTE *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  void *v79;
  __int128 v80;
  char v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 v91;

  sub_1BAEFBAC0(0, &qword_1ED3C4708, (void (*)(void))sub_1BA824A20, (void (*)(void))sub_1BA824A64);
  v77 = *((_QWORD *)v2 - 1);
  v78 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = &v55[-v3];
  sub_1BAEE87DC();
  v6 = v5;
  v7 = *((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v55[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAECE37C();
  sub_1BA4A2870(&qword_1ED3D1270, (uint64_t (*)(uint64_t))sub_1BAECE37C, (uint64_t)&unk_1BB8FFC6C);
  v10 = v79;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
    goto LABEL_12;
  v74 = v4;
  v75 = 0;
  v4 = v78;
  v76 = v7;
  v79 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    v14 = (uint64_t)v79;
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v24 = *((_QWORD *)v17 - 2);
      v25 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v26);
      v27 = v14;
      sub_1BAECE3FC();
      sub_1BA7F1204();
      sub_1BAECE440();
      swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7253068);
      swift_release_n();
      sub_1BA98D1F0();
      v11 = (void *)swift_allocError();
      *(_QWORD *)v29 = v24;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v24, v25, 1);
      (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v9, v27);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v18 = v75;
  v19 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEE87DC);
  v11 = v18;
  if (v18)
  {
    (*(void (**)(_BYTE *, void *))(v76 + 8))(v9, v79);
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v4;
  }
  v21 = v19;
  v22 = v20;
  v82 = xmmword_1BB8A1A10;
  LOBYTE(v83) = 0;
  v23 = v79;
  v31 = sub_1BB874098();
  v75 = v32;
  v73 = xmmword_1BB8D2D60;
  v82 = xmmword_1BB8D2D60;
  LOBYTE(v83) = 0;
  v33 = sub_1BB8740F8();
  if ((v33 & 1) != 0)
  {
    v72 = v22;
    v80 = v73;
    v81 = 0;
    sub_1BAEE8854();
    v34 = v74;
    sub_1BB8740D4();
    v71 = v31;
    *(_QWORD *)&v73 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, _BYTE *))(v77 + 8))(v34, v4);
    v22 = v72;
  }
  else
  {
    v71 = v31;
    *(_QWORD *)&v73 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v82 = xmmword_1BB8D2D70;
  LOBYTE(v83) = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v35 = (_BYTE *)v80;
  v82 = xmmword_1BB8D2D90;
  LOBYTE(v83) = 0;
  sub_1BA69A538();
  sub_1BB874068();
  v78 = v35;
  v36 = v80;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v82 = xmmword_1BB8D2D80;
  LOBYTE(v83) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v77 = v36;
  v37 = (_BYTE *)v80;
  v80 = xmmword_1BB8D2DA0;
  v81 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v74 = v37;
  v38 = *((_QWORD *)&v82 + 1);
  v70 = v82;
  LODWORD(v72) = v83;
  v80 = xmmword_1BB8D2DB0;
  v81 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v68 = v38;
  v69 = a1;
  v61 = *((_QWORD *)&v82 + 1);
  v39 = v82;
  v62 = v83;
  v63 = v84;
  v64 = v85;
  v65 = v86;
  v66 = v87;
  v40 = v89;
  v67 = v88;
  v41 = v9;
  v42 = v90;
  v43 = v91;
  v82 = xmmword_1BB8D2DD0;
  LOBYTE(v83) = 0;
  sub_1BA62C9A0();
  sub_1BB874068();
  v56 = v43;
  v57 = v42;
  v58 = v40;
  v59 = v39;
  v44 = v80;
  v82 = xmmword_1BB8D2DE0;
  LOBYTE(v83) = 0;
  v45 = sub_1BB874038();
  v60 = 0;
  LOBYTE(v42) = v45;
  (*(void (**)(_BYTE *, void *))(v76 + 8))(v41, v23);
  type metadata accessor for FormatVideoPlayerNodeStyle();
  v4 = (_BYTE *)swift_allocObject();
  swift_beginAccess();
  *((_QWORD *)v4 + 2) = v21;
  *((_QWORD *)v4 + 3) = v22;
  v46 = v75;
  *((_QWORD *)v4 + 4) = v71;
  *((_QWORD *)v4 + 5) = v46;
  swift_beginAccess();
  v47 = v78;
  *((_QWORD *)v4 + 6) = v73;
  *((_QWORD *)v4 + 7) = v47;
  v48 = v74;
  *((_QWORD *)v4 + 8) = v77;
  *((_QWORD *)v4 + 9) = v48;
  v49 = v68;
  *((_QWORD *)v4 + 10) = v70;
  *((_QWORD *)v4 + 11) = v49;
  v4[96] = v72;
  v50 = v61;
  *((_QWORD *)v4 + 13) = v59;
  *((_QWORD *)v4 + 14) = v50;
  v51 = v63;
  *((_QWORD *)v4 + 15) = v62;
  *((_QWORD *)v4 + 16) = v51;
  v52 = v65;
  *((_QWORD *)v4 + 17) = v64;
  *((_QWORD *)v4 + 18) = v52;
  v53 = v67;
  *((_QWORD *)v4 + 19) = v66;
  *((_QWORD *)v4 + 20) = v53;
  v54 = v57;
  *((_QWORD *)v4 + 21) = v58;
  *((_QWORD *)v4 + 22) = v54;
  v4[184] = v56;
  *((_QWORD *)v4 + 24) = v44;
  v4[200] = v42;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  return v4;
}

uint64_t type metadata accessor for FormatVideoPlayerNodeStyle()
{
  return objc_opt_self();
}

uint64_t sub_1BA52CA38()
{
  uint64_t v0;

  return sub_1BA52CA5C((_OWORD *)(v0 + 48), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BA52CA5C(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  uint64_t v20;
  unint64_t v21;

  sub_1BB86E2A8();
  swift_allocObject();
  v11 = sub_1BB86DC90();
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v20)
  {
    sub_1BB86F0F4();
    swift_release();
    sub_1BB86F100();
    swift_release();
    if (v6)
    {
      swift_release();
      return a2;
    }
    sub_1BB86F064();
    swift_release();
    swift_release();
    swift_release();
    sub_1BB86F22C();
    result = swift_release();
    if (v21 >> 60 != 15)
    {
      sub_1BB86E5B4();
      sub_1BA4A2870(&qword_1ED39A570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4370], MEMORY[0x1E0DB4380]);
      v13 = sub_1BB86DC78();
      MEMORY[0x1E0C80A78](v13);
      sub_1BB86E5A8();
      sub_1BB86EC14();
      v18 = (void *)sub_1BB86E6F8();
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = a3;
      *(_QWORD *)(v14 + 24) = a4;
      *(_QWORD *)(v14 + 32) = a5;
      *(_QWORD *)(v14 + 40) = a6;
      v15 = a1[3];
      *(_OWORD *)(v14 + 80) = a1[2];
      *(_OWORD *)(v14 + 96) = v15;
      v16 = a1[5];
      *(_OWORD *)(v14 + 112) = a1[4];
      *(_OWORD *)(v14 + 128) = v16;
      v17 = a1[1];
      *(_OWORD *)(v14 + 48) = *a1;
      *(_OWORD *)(v14 + 64) = v17;
      *(_QWORD *)(v14 + 144) = v11;
      *(_QWORD *)(v14 + 152) = a2;
      sub_1BA4C9ACC((uint64_t)a1);
      swift_getAssociatedTypeWitness();
      swift_retain();
      swift_retain();
      a2 = sub_1BB86E968();
      swift_release();
      swift_release();

      swift_release();
      sub_1BA69D490(v20, v21);
      swift_release();
      return a2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1BA52CD4C(_QWORD *a1)
{
  FormatDecorationContent.encode(to:)(a1);
}

void FormatDecorationContent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[60];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v27[5] = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v27[4] = (char *)v27 - v7;
  MEMORY[0x1E0C80A78](v8);
  v27[6] = (char *)v27 - v9;
  MEMORY[0x1E0C80A78](v10);
  v27[3] = (char *)v27 - v11;
  MEMORY[0x1E0C80A78](v12);
  v27[2] = (char *)v27 - v13;
  MEMORY[0x1E0C80A78](v14);
  v27[1] = (char *)v27 - v15;
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *v2;
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v25 = sub_1BA6B8518();
  v27[59] = v21;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatDecorationContent, v26, v23, (uint64_t)&type metadata for FormatDecorationContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v24, (uint64_t)v21, v25, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA52CF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = qword_1ED3C2478;
  swift_retain();
  if (v4 != -1)
    swift_once();
  v5 = sub_1BB86EB84();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v0, v6, v5);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v7 = v3;
  v8 = *(_QWORD *)(v2 - 72);
  sub_1BACE9268(1, v7, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80(v8, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return swift_release();
}

uint64_t sub_1BA52D718(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v22 = a1;
  v7 = a2[1];
  v18 = *a2;
  v19 = v7;
  v8 = a2[3];
  v20 = a2[2];
  v21 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF3CC4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA52D888();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5D6280();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA52D888()
{
  unint64_t result;

  result = qword_1ED3A71A0;
  if (!qword_1ED3A71A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B87C8, &_s10CodingTypeON_104);
    atomic_store(result, (unint64_t *)&qword_1ED3A71A0);
  }
  return result;
}

_QWORD *sub_1BA52D8CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BA52D8F4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_1BA52D8F4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (**v6)(_QWORD *, _QWORD);
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v22;
  uint64_t v23;
  __int128 v25;
  void (**v26)(_QWORD *, _QWORD);

  v2 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(void (***)(_QWORD *, _QWORD))(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v10 = v26;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
    goto LABEL_10;
  v22 = v4;
  v26 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v14 = v23;
  v9 = v8;
  if ((v13 & 1) == 0)
  {
LABEL_8:
    sub_1BA52DD5C();
    v25 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v15 = sub_1BB8740EC();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v17 = (unint64_t *)(v15 + 40);
  while (1)
  {
    v18 = *v17;
    if (*v17 >= 4)
      break;
    v17 += 2;
    if (!--v16)
      goto LABEL_7;
  }
  v19 = *(v17 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v11 = (void *)swift_allocError();
  *(_QWORD *)v20 = v19;
  *(_QWORD *)(v20 + 8) = v18;
  *(_QWORD *)(v20 + 16) = &unk_1E726CD88;
  *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v19, v18);
  v26[1](v9, v14);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v11);
  swift_willThrow();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1BA52DD5C()
{
  unint64_t result;

  result = qword_1ED3C90A8;
  if (!qword_1ED3C90A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2C38, &_s10CodingTypeON_189);
    atomic_store(result, (unint64_t *)&qword_1ED3C90A8);
  }
  return result;
}

unint64_t sub_1BA52DDA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B50B8;
  if (!qword_1ED3B50B8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B50C0, (uint64_t (*)(void))sub_1BA82CF34, (uint64_t)&type metadata for FormatMenuItemAction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B50B8);
  }
  return result;
}

uint64_t sub_1BA52DE08()
{
  sub_1BA52DE64();
  return sub_1BB872D60();
}

unint64_t sub_1BA52DE64()
{
  unint64_t result;

  result = qword_1ED3B49A0;
  if (!qword_1ED3B49A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionType, &type metadata for FormatOptionType);
    atomic_store(result, (unint64_t *)&qword_1ED3B49A0);
  }
  return result;
}

uint64_t FeedGroupDebug.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA52DED4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_BYTE *)(v0 + 88);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 32) = v3;
  *(_BYTE *)(v2 + 48) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  sub_1BA52E378(0, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
  *v4 = v0;
  v4[1] = sub_1BA8195A8;
  return sub_1BB874518();
}

uint64_t sub_1BA52DFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  void *v11;
  char v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;

  if (qword_1ED3A36B8 != -1)
    swift_once();
  if ((sub_1BB86D258() & 1) != 0)
  {
    if (qword_1EF2A73F8 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 1624);
    v3 = *(_QWORD *)(v0 + 1576);
    v4 = *(_BYTE *)(v0 + 1784);
    v5 = *(_QWORD *)(v0 + 1528);
    sub_1BA50AD30(&qword_1EF2AB9D0, v1, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleService, (uint64_t)&protocol conformance descriptor for PuzzleService);
    sub_1BB86D210();
    v6 = objc_msgSend((id)objc_opt_self(), sel_cachePolicyWithSoftMaxAge_, *(double *)(v0 + 1432));
    *(_QWORD *)(v0 + 1680) = v6;
    v7 = swift_task_alloc();
    *(_QWORD *)(v0 + 1688) = v7;
    *(_QWORD *)(v7 + 16) = v2;
    *(_QWORD *)(v7 + 24) = v5;
    *(_QWORD *)(v7 + 32) = v6;
    *(_QWORD *)(v7 + 40) = v3;
    *(_BYTE *)(v7 + 48) = v4;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1696) = v8;
    sub_1BA52E378(0, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
    *v8 = v0;
    v8[1] = sub_1BA977BDC;
    return sub_1BB874518();
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 1624);
    v11 = *(void **)(v0 + 1576);
    v12 = *(_BYTE *)(v0 + 1784);
    v13 = *(_QWORD *)(v0 + 1528);
    v14 = objc_msgSend(objc_msgSend(*(id *)(v10 + 160), sel_appConfiguration), sel_puzzlesConfig);
    *(_QWORD *)(v0 + 1712) = v14;
    swift_unknownObjectRelease();
    objc_msgSend(v14, sel_recentPuzzlesCacheLifetime);
    v16 = v15;
    v17 = (void *)objc_opt_self();
    v18 = objc_msgSend(v17, sel_cachePolicyWithSoftMaxAge_, v16);
    *(_QWORD *)(v0 + 1720) = v18;
    objc_msgSend(v14, sel_puzzlesCacheLifetime);
    v19 = objc_msgSend(v17, sel_cachePolicyWithSoftMaxAge_);
    *(_QWORD *)(v0 + 1728) = v19;
    v20 = sub_1BA52E3CC(v13);
    v22 = v21;
    v23 = swift_allocObject();
    *(_QWORD *)(v0 + 1736) = v23;
    *(_QWORD *)(v23 + 16) = v10;
    *(_QWORD *)(v23 + 24) = v20;
    *(_BYTE *)(v23 + 32) = v12;
    *(_QWORD *)(v23 + 40) = v18;
    *(_QWORD *)(v23 + 48) = v11;
    swift_retain();
    v24 = v18;
    v25 = v11;
    swift_retain();
    sub_1BA52E378(255, (unint64_t *)&unk_1ED3AB0B0, (unint64_t *)&qword_1ED3CF910);
    swift_asyncLet_begin();
    v26 = swift_allocObject();
    *(_QWORD *)(v0 + 1744) = v26;
    *(_QWORD *)(v26 + 16) = v10;
    *(_QWORD *)(v26 + 24) = v22;
    *(_BYTE *)(v26 + 32) = v12;
    *(_QWORD *)(v26 + 40) = v19;
    *(_QWORD *)(v26 + 48) = v25;
    swift_retain();
    v27 = v25;
    v28 = v19;
    swift_retain();
    swift_asyncLet_begin();
    return swift_asyncLet_get_throwing();
  }
}

void sub_1BA52E378(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA4EFE00(255, a3);
    v4 = sub_1BB872EE0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

_QWORD *sub_1BA52E3CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  double v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v45;
  unint64_t v46;
  _QWORD v48[2];
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;

  v3 = sub_1BB86C8B0();
  v55 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v54 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v48 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v49 = v11;
  v52 = *(id *)(v1 + 64);
  swift_bridgeObjectRetain();
  v48[1] = a1;
  v15 = (uint64_t *)(a1 + 40);
  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v50 = v9;
  v51 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v53 = v3;
  v18 = (uint64_t)v9;
  do
  {
    v21 = *(v15 - 1);
    v22 = *v15;
    swift_bridgeObjectRetain();
    v57 = v21;
    v23 = (void *)sub_1BB872970();
    v24 = objc_msgSend(v52, sel_slowCachedPuzzleForID_, v23);

    v58 = v22;
    v56 = v24;
    if (v24)
    {
      v25 = objc_msgSend(v24, sel_publishDate);
      if (v25)
      {
        v26 = v25;
        v27 = v16;
        v28 = v49;
        sub_1BB86C874();

        v29 = 0;
        v30 = v55;
      }
      else
      {
        v27 = v16;
        v29 = 1;
        v30 = v55;
        v28 = v49;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, v29, 1, v3);
      v32 = v28;
      v31 = (uint64_t)v13;
      v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
      sub_1BA760F3C(v32, (uint64_t)v13, (uint64_t)&qword_1ED3B0540, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
      v18 = (uint64_t)v50;
    }
    else
    {
      v27 = v16;
      v30 = v55;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v13, 1, 1, v3);
      v31 = (uint64_t)v13;
    }
    v33 = (char *)v31;
    sub_1BA5E01A4(v31, v18, (unint64_t *)&qword_1ED3B0540, v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v18, 1, v3) == 1)
    {
      sub_1BA5C699C(v18, (unint64_t *)&qword_1ED3B0540, v17);
      v16 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1BA6EA0D0(0, v27[2] + 1, 1, v27);
      v13 = v33;
      v34 = v58;
      v36 = v16[2];
      v35 = v16[3];
      if (v36 >= v35 >> 1)
        v16 = sub_1BA6EA0D0((_QWORD *)(v35 > 1), v36 + 1, 1, v16);
      v16[2] = v36 + 1;
      v37 = &v16[2 * v36];
      v37[4] = v57;
      v37[5] = v34;
      swift_unknownObjectRelease();
      v3 = v53;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v54, v18, v3);
      sub_1BB86C844();
      v16 = v27;
      if (fabs(v38) >= 86400.0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v13 = v33;
        v40 = v58;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          v45 = v51;
        else
          v45 = sub_1BA6EA0D0(0, v51[2] + 1, 1, v51);
        v42 = v45[2];
        v46 = v45[3];
        v43 = v42 + 1;
        if (v42 >= v46 >> 1)
        {
          v19 = sub_1BA6EA0D0((_QWORD *)(v46 > 1), v42 + 1, 1, v45);
          v51 = v19;
        }
        else
        {
          v51 = v45;
          v19 = v45;
        }
      }
      else
      {
        v39 = swift_isUniquelyReferenced_nonNull_native();
        v13 = v33;
        v40 = v58;
        if ((v39 & 1) == 0)
          v16 = sub_1BA6EA0D0(0, v16[2] + 1, 1, v16);
        v42 = v16[2];
        v41 = v16[3];
        v43 = v42 + 1;
        if (v42 >= v41 >> 1)
        {
          v19 = sub_1BA6EA0D0((_QWORD *)(v41 > 1), v42 + 1, 1, v16);
          v16 = v19;
        }
        else
        {
          v19 = v16;
        }
      }
      v19[2] = v43;
      v20 = &v19[2 * v42];
      v20[4] = v57;
      v20[5] = v40;
      swift_unknownObjectRelease();
      v3 = v53;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v53);
    }
    v15 += 2;
    sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3B0540, v17);
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BA52E88C(_QWORD *a1)
{
  return FormatSymbolWeight.encode(to:)(a1);
}

uint64_t FormatSymbolWeight.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[9];
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v31[8] = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v31[7] = (char *)v31 - v6;
  MEMORY[0x1E0C80A78](v7);
  v31[6] = (char *)v31 - v8;
  MEMORY[0x1E0C80A78](v9);
  v31[5] = (char *)v31 - v10;
  MEMORY[0x1E0C80A78](v11);
  v31[4] = (char *)v31 - v12;
  MEMORY[0x1E0C80A78](v13);
  v31[3] = (char *)v31 - v14;
  MEMORY[0x1E0C80A78](v15);
  v31[2] = (char *)v31 - v16;
  MEMORY[0x1E0C80A78](v17);
  v31[1] = (char *)v31 - v18;
  MEMORY[0x1E0C80A78](v19);
  v31[0] = (char *)v31 - v20;
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v31 - v23;
  v32 = *v1;
  v33 = a1;
  v25 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v27 = sub_1BB86EB84();
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v28, v27);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v29 = v34;
  sub_1BA69F160((uint64_t)v24, (uint64_t)sub_1BA90CF04, 0, v25, v26);
  if (!v29)
  {
    v34 = v28;
    sub_1BA4A2E80((uint64_t)v24, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v24, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA52F168(_QWORD *a1)
{
  return FormatGroupItemKind.encode(to:)(a1);
}

uint64_t FormatGroupItemKind.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[7];
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v25[6] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v25[5] = (char *)v25 - v6;
  MEMORY[0x1E0C80A78](v7);
  v25[4] = (char *)v25 - v8;
  MEMORY[0x1E0C80A78](v9);
  v25[3] = (char *)v25 - v10;
  MEMORY[0x1E0C80A78](v11);
  v25[2] = (char *)v25 - v12;
  MEMORY[0x1E0C80A78](v13);
  v25[1] = (char *)v25 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v25 - v17;
  v26 = *v1;
  v27 = a1;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  if (qword_1ED3C6D60 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C38);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v23 = v28;
  sub_1BA69F160((uint64_t)v18, (uint64_t)sub_1BA90CF04, 0, v19, v20);
  if (!v23)
  {
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA52F908(_QWORD *a1)
{
  return FormatSymbolScale.encode(to:)(a1);
}

uint64_t FormatSymbolScale.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD v22[6];
  uint64_t v23;
  _QWORD *v24;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v22[5] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v22[4] = (char *)v22 - v7;
  MEMORY[0x1E0C80A78](v8);
  v22[3] = (char *)v22 - v9;
  MEMORY[0x1E0C80A78](v10);
  v22[2] = (char *)v22 - v11;
  MEMORY[0x1E0C80A78](v12);
  v22[1] = (char *)v22 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v22 - v15;
  v23 = *v1;
  v17 = a1[3];
  v18 = a1[4];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA69F160((uint64_t)v16, (uint64_t)sub_1BA90CF04, 0, v17, v18);
  result = sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
  if (!v2)
    __asm { BR              X9 }
  return result;
}

uint64_t sub_1BA52FE44(_QWORD *a1)
{
  return FormatUnderlineStyle.encode(to:)(a1);
}

uint64_t FormatUnderlineStyle.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[7];
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v27[6] = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v27[5] = (char *)v27 - v6;
  MEMORY[0x1E0C80A78](v7);
  v27[4] = (char *)v27 - v8;
  MEMORY[0x1E0C80A78](v9);
  v27[3] = (char *)v27 - v10;
  MEMORY[0x1E0C80A78](v11);
  v27[2] = (char *)v27 - v12;
  MEMORY[0x1E0C80A78](v13);
  v27[1] = (char *)v27 - v14;
  MEMORY[0x1E0C80A78](v15);
  v27[0] = (char *)v27 - v16;
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v27 - v19;
  v28 = *v1;
  v29 = a1;
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  if (qword_1ED3C6D40 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476BC0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v25 = v30;
  sub_1BA69F160((uint64_t)v20, (uint64_t)sub_1BA90CF04, 0, v21, v22);
  if (!v25)
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA5305C0(_QWORD *a1)
{
  return FormatMenu.encode(to:)(a1);
}

uint64_t FormatMenu.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v33 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - v13;
  sub_1BA530B58(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v37 = v1[1];
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1BA531020();
  sub_1BA6EC090((uint64_t)&type metadata for FormatMenu.CodingKeys, v21, v19, (uint64_t)&type metadata for FormatVersions.Azden, v20, (uint64_t)&off_1E734BC80, (uint64_t)v17);
  v22 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v22 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C08);
  v25 = *(void (**)(char *))(*(_QWORD *)(v23 - 8) + 16);
  v35 = v24;
  v25(v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA530980(v18, 0, (uint64_t)v14, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    if (!v37)
    {
      ((void (*)(char *, uint64_t, uint64_t))v25)(v11, v35, v23);
      swift_storeEnumTagMultiPayload();
      sub_1BAE30C28((uint64_t)v11, 1, (uint64_t)sub_1BB66926C, 0);
      sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    }
    v26 = qword_1ED3C6D18;
    v27 = v37;
    swift_bridgeObjectRetain();
    if (v26 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476B60);
    v29 = (uint64_t)v36;
    ((void (*)(char *, uint64_t, uint64_t))v25)(v36, v28, v23);
    swift_storeEnumTagMultiPayload();
    sub_1BA530BD8(v27, 1, v29, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v30 = (uint64_t)v34;
    ((void (*)(char *, uint64_t, uint64_t))v25)(v34, v35, v23);
    swift_storeEnumTagMultiPayload();
    v31 = swift_bridgeObjectRetain();
    sub_1BA530980(v31, 0, v30, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v30, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA530B58);
}

uint64_t sub_1BA530980(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v19[6];
  uint64_t v20;
  uint64_t v21;
  char v22;

  v20 = a3;
  v22 = a2;
  sub_1BA530B58(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v13 = *v12;
  v14 = v12[1];
  v15 = swift_allocObject();
  v16 = v15;
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v13;
  *(_QWORD *)(v15 + 32) = v14;
  if (a1)
  {
    v21 = a1;
    MEMORY[0x1E0C80A78](v15);
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = sub_1BAEE4AFC;
    v19[5] = v16;
    swift_retain();
    swift_bridgeObjectRetain();
    v17 = sub_1BA530E28(v20, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v19);
    if (!v6 && (v17 & 1) != 0)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39C108, (uint64_t (*)(void))sub_1BA531020, (uint64_t)&type metadata for FormatMenu.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BA530FB8();
      sub_1BA4AD288(0, &qword_1ED3C03B8, (uint64_t)&type metadata for FormatMenuGroupable, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEE4B34();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    return swift_release();
  }
}

void sub_1BA530B58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3A9530)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED39C108, (uint64_t (*)(void))sub_1BA531020, (uint64_t)&type metadata for FormatMenu.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    v3 = v2;
    v4 = sub_1BA530FB8();
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3A9530);
  }
}

uint64_t sub_1BA530BD8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v19[6];
  uint64_t v20;
  uint64_t v21;
  char v22;

  v20 = a3;
  v22 = a2;
  sub_1BA530B58(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v13 = *v12;
  v14 = v12[1];
  v15 = swift_allocObject();
  v16 = v15;
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v13;
  *(_QWORD *)(v15 + 32) = v14;
  if (a1)
  {
    v21 = a1;
    MEMORY[0x1E0C80A78](v15);
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = sub_1BAEE4AFC;
    v19[5] = v16;
    swift_retain();
    swift_bridgeObjectRetain();
    v17 = sub_1BA530E28(v20, a2, (uint64_t)sub_1BAE76064, (uint64_t)v19);
    if (!v6 && (v17 & 1) != 0)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39C108, (uint64_t (*)(void))sub_1BA531020, (uint64_t)&type metadata for FormatMenu.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BA530FB8();
      sub_1BA4AD288(0, &qword_1ED3B9458, (uint64_t)&type metadata for FormatMenuItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA530DB0();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    return swift_release();
  }
}

unint64_t sub_1BA530DB0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BE88;
  if (!qword_1ED39BE88)
  {
    sub_1BA4AD288(255, &qword_1ED3B9458, (uint64_t)&type metadata for FormatMenuItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA8352D8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BE88);
  }
  return result;
}

uint64_t sub_1BA530E28(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  _BYTE v19[16];
  uint64_t (*v20)();
  uint64_t v21;
  _QWORD v22[4];

  sub_1BA530B58(0);
  v10 = v9;
  v11 = (uint64_t *)(v4 + *(int *)(v9 + 44));
  v12 = *v11;
  v13 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v12;
  *(_QWORD *)(v14 + 32) = v13;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39C108, (uint64_t (*)(void))sub_1BA531020, (uint64_t)&type metadata for FormatMenu.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BA530FB8();
  swift_retain();
  v15 = sub_1BB87444C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = a2;
  sub_1BA4C010C(v4 + *(int *)(v10 + 36), (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v20 = sub_1BAEE4B08;
  v21 = v16;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = sub_1BAEE4AFC;
  v18[5] = v14;
  LOBYTE(v15) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v19, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v15 & 1;
}

unint64_t sub_1BA530FB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB628;
  if (!qword_1ED3AB628)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED39C108, (uint64_t (*)(void))sub_1BA531020, (uint64_t)&type metadata for FormatMenu.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB628);
  }
  return result;
}

unint64_t sub_1BA531020()
{
  unint64_t result;

  result = qword_1ED3B3110;
  if (!qword_1ED3B3110)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93A5CC, &type metadata for FormatMenu.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B3110);
  }
  return result;
}

uint64_t sub_1BA531064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  _QWORD v33[11];
  _QWORD v34[3];
  uint64_t v35[3];
  uint64_t v36;
  __int16 v37;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 16))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 496));
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    v2 = *(_QWORD *)(v0 + 512);
    v4 = *(_QWORD *)(v0 + 480);
    v3 = *(_QWORD *)(v0 + 488);
    v5 = *(_QWORD *)(v0 + 472);
    type metadata accessor for FeedCursor(255, *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 424), v1);
    swift_getTupleTypeMetadata2();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v2, v5);
    *(_QWORD *)(v0 + 552) = sub_1BA631178();
    if ((sub_1BA532038() - 1) <= 2u)
    {
      v6 = *(_QWORD *)(v0 + 280);
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB8827B0;
      __asm { BR              X10 }
    }
    (*(void (**)(_QWORD *__return_ptr, _QWORD))(*(_QWORD *)(v0 + 432) + 80))(v33, *(_QWORD *)(v0 + 472));
    __asm { BR              X11 }
  }
  v7 = *(_QWORD *)(v0 + 528);
  v8 = *(uint64_t **)(v0 + 512);
  v9 = *v8;
  *(_QWORD *)(v0 + 664) = *v8;
  if (v7 >> 60 == 4)
  {
    v10 = *(_QWORD *)(v0 + 520);
    v11 = *(_QWORD *)(v0 + 496);
    v12 = *(_QWORD *)(v0 + 504);
    v13 = type metadata accessor for FeedServiceError(0, *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 424), v1);
    MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceError<A>, v13);
    swift_allocError();
    *(_QWORD *)v14 = 1;
    *(_QWORD *)(v14 + 8) = 0;
    *(_QWORD *)(v14 + 16) = 0;
    *(_QWORD *)(v14 + 24) = 0;
    *(_BYTE *)(v14 + 32) = 6;
    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 424);
    v17 = *(_QWORD *)(v0 + 360);
    *(_QWORD *)(v0 + 264) = *(_QWORD *)(v9 + qword_1ED476898);
    type metadata accessor for FeedGroupEmitter(255, v17, v16, v1);
    v18 = sub_1BB872EE0();
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v18);
    if ((sub_1BB873168() & 1) != 0)
    {
      *(_QWORD *)(v0 + 248) = *(_QWORD *)(v0 + 528);
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 672) = v19;
      *v19 = v0;
      v19[1] = sub_1BAAE10B0;
      return sub_1BA51E2B8((uint64_t *)(v0 + 248), *(_QWORD *)(v0 + 520), *(double *)(v0 + 296));
    }
    else
    {
      v20 = *(_QWORD *)(v0 + 384);
      v30 = *(_QWORD *)(v0 + 376);
      v31 = *(_QWORD *)(v0 + 368);
      v22 = *(_QWORD *)(v0 + 312);
      v21 = *(_QWORD *)(v0 + 320);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 360) - 8) + 56))(v20, 1, 1, *(_QWORD *)(v0 + 360));
      v32 = 7;
      v23 = sub_1BB86C8B0();
      v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
      v24(v21, 1, 1, v23);
      v24(v22, 1, 1, v23);
      memset(v33, 0, 80);
      v25 = swift_bridgeObjectRetain();
      FeedJournal.init(entries:)(v25, v34);
      v35[0] = v34[0];
      v35[1] = v34[1];
      v35[2] = v34[2];
      v36 = 0;
      v37 = 256;
      v26 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v20, 0, &v32, v21, v22, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
              0,
              0,
              (uint64_t)v33,
              v35,
              (uint64_t)&v36,
              0,
              0,
              0);
      *(_QWORD *)(v0 + 696) = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA76D750(v22);
      sub_1BA76D750(v21);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v20, v31);
      v27 = swift_allocObject();
      *(_QWORD *)(v0 + 704) = v27;
      *(_QWORD *)(v27 + 16) = v26;
      *(_QWORD *)(v0 + 272) = v27 | 0x5000000000000000;
      swift_retain();
      v28 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 712) = v28;
      *v28 = v0;
      v28[1] = sub_1BAAE123C;
      v29 = *(_QWORD **)(v0 + 304);
      v28[5] = v29;
      v28[6] = *v29;
      v28[7] = *(_QWORD *)(v0 + 272);
      return swift_task_switch();
    }
  }
}

void sub_1BA531734()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  unint64_t v17;
  const char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;

  v4 = *(_QWORD *)(v1 + 472);
  v5 = *(_QWORD *)(v1 + 440);
  v44 = *(_QWORD *)(v1 + 464);
  v45 = *(_QWORD *)(v1 + 448);
  v6 = *(_QWORD *)(v1 + 432);
  v7 = MEMORY[0x1E0DEA968];
  v2[7] = MEMORY[0x1E0DEA968];
  v8 = sub_1BA6A2D8C();
  v2[8] = v8;
  v2[4] = 0x6E657A6F7266;
  v2[5] = v0;
  v10 = *(_QWORD *)(v47 + 16);
  v9 = *(_QWORD *)(v47 + 24);
  v2[12] = v7;
  v2[13] = v8;
  v2[9] = v10;
  v2[10] = v9;
  v11 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 24);
  ((void (*)(void))swift_bridgeObjectRetain)();
  v12 = sub_1BB86DEE8(v4, v11);
  v2[17] = v7;
  v2[18] = v8;
  v2[14] = v12;
  v2[15] = v13;
  (*(void (**)(uint64_t, uint64_t))(v6 + 64))(v4, v6);
  v2[22] = v7;
  v2[23] = v8;
  v14 = v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, v4, v5, &protocol requirements base descriptor for FeedGroupType, &associated conformance descriptor for FeedGroupType.FeedGroupType.Kind: RawRepresentable);
  sub_1BB872CF4(v5, AssociatedConformanceWitness);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v44, v5);
  if (v49 == 1)
  {
    v19 = 0x80000001BB963CC0;
    v20 = v43;
    v17 = 0xD000000000000010;
  }
  else
  {
    if (v49 == 2)
    {
      v17 = 0xD00000000000001CLL;
      v18 = "dedupNextAsyncManifestGroups";
    }
    else
    {
      v17 = 0xD00000000000001BLL;
      v18 = "dedupNextSyncDatabaseGroups";
    }
    v19 = (unint64_t)(v18 - 32) | 0x8000000000000000;
    v20 = v43;
  }
  v50 = *(_QWORD *)(v1 + 528);
  v21 = *(_QWORD *)(v1 + 488);
  v40 = *(_QWORD *)(v1 + 480);
  v41 = *(_QWORD *)(v1 + 472);
  v42 = *(_QWORD *)(v1 + 424);
  v38 = *(_QWORD *)(v1 + 416);
  v22 = *(_QWORD *)(v1 + 400);
  v37 = *(_QWORD *)(v1 + 408);
  v39 = v22;
  v46 = *(_QWORD *)(v1 + 376);
  v23 = *(_QWORD *)(v1 + 360);
  v48 = *(_QWORD *)(v1 + 368);
  v25 = *(_QWORD *)(v1 + 344);
  v24 = *(_QWORD *)(v1 + 352);
  v2[27] = MEMORY[0x1E0DEA968];
  v2[28] = v14;
  v2[24] = v17;
  v2[25] = v19;
  v26 = sub_1BB87330C(v16);
  sub_1BB86EF44("Service attempting to emit group from %{public}@ cursor %{public}@ with a consumed identifier=%{public}@, kind=%{public}@, dedupResult=%{public}@", 145, 2, &dword_1BA493000, v20, v26, v2);
  swift_bridgeObjectRelease(v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(_BYTE *)(v1 + 737) = 7;
  v27 = sub_1BB86C8B0(0);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v28(v24, 1, 1, v27);
  v28(v25, 1, 1, v27);
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  v29 = *(_QWORD *)(v3 - 256);
  v30 = *(_QWORD *)(v29 + qword_1ED476790);
  v31 = (_QWORD *)swift_task_alloc(48);
  v31[2] = v38;
  v31[3] = v37;
  v31[4] = v21;
  swift_bridgeObjectRetain(v30);
  v32 = sub_1BB141E00(sub_1BAAECC4C, v31, v30);
  swift_bridgeObjectRelease(v30);
  swift_task_dealloc(v31);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v21, v41);
  FeedJournal.init(entries:)(v32, v23, v42);
  v33 = *(_QWORD *)(v1 + 176);
  v34 = *(_QWORD *)(v1 + 184);
  v35 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v3 - 240) = v33;
  *(_QWORD *)(v3 - 232) = v34;
  *(_QWORD *)(v3 - 224) = v35;
  *(_QWORD *)(v3 - 128) = 0;
  *(_WORD *)(v3 - 120) = 256;
  *(_QWORD *)(v1 + 560) = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v39, 0, v1 + 737, v24, v25, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
                            0,
                            0,
                            v1 + 96,
                            v3 - 240,
                            v3 - 128,
                            0,
                            0,
                            0);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v33);
  swift_release(v29);
  sub_1BA76D750(v25);
  sub_1BA76D750(v24);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v39, v48);
  *(_QWORD *)(v1 + 232) = v50;
  *(_QWORD *)(v1 + 568) = sub_1BB872E68(0, v41);
  v36 = (_QWORD *)swift_task_alloc(dword_1EF2AFE04);
  *(_QWORD *)(v1 + 576) = v36;
  *v36 = v1;
  v36[1] = sub_1BAAE0D60;
  JUMPOUT(0x1BA532014);
}

void sub_1BA531748()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  unint64_t v16;
  const char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v3 = *(_QWORD *)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 440);
  v43 = *(_QWORD *)(v0 + 464);
  v44 = *(_QWORD *)(v0 + 448);
  v5 = *(_QWORD *)(v0 + 432);
  v6 = MEMORY[0x1E0DEA968];
  v1[7] = MEMORY[0x1E0DEA968];
  v7 = sub_1BA6A2D8C();
  v1[8] = v7;
  v1[4] = 0x656546664F646E65;
  v1[5] = 0xE900000000000064;
  v9 = *(_QWORD *)(v46 + 16);
  v8 = *(_QWORD *)(v46 + 24);
  v1[12] = v6;
  v1[13] = v7;
  v1[9] = v9;
  v1[10] = v8;
  v10 = *(_QWORD *)(*(_QWORD *)(v5 + 8) + 24);
  swift_bridgeObjectRetain(v8);
  v11 = sub_1BB86DEE8(v3, v10);
  v1[17] = v6;
  v1[18] = v7;
  v1[14] = v11;
  v1[15] = v12;
  (*(void (**)(uint64_t, uint64_t))(v5 + 64))(v3, v5);
  v1[22] = v6;
  v1[23] = v7;
  v13 = v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v5, v3, v4, &protocol requirements base descriptor for FeedGroupType, &associated conformance descriptor for FeedGroupType.FeedGroupType.Kind: RawRepresentable);
  sub_1BB872CF4(v4, AssociatedConformanceWitness);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v4);
  if (v48 == 1)
  {
    v18 = 0x80000001BB963CC0;
    v19 = v42;
    v16 = 0xD000000000000010;
  }
  else
  {
    if (v48 == 2)
    {
      v16 = 0xD00000000000001CLL;
      v17 = "dedupNextAsyncManifestGroups";
    }
    else
    {
      v16 = 0xD00000000000001BLL;
      v17 = "dedupNextSyncDatabaseGroups";
    }
    v18 = (unint64_t)(v17 - 32) | 0x8000000000000000;
    v19 = v42;
  }
  v49 = *(_QWORD *)(v0 + 528);
  v20 = *(_QWORD *)(v0 + 488);
  v39 = *(_QWORD *)(v0 + 480);
  v40 = *(_QWORD *)(v0 + 472);
  v41 = *(_QWORD *)(v0 + 424);
  v37 = *(_QWORD *)(v0 + 416);
  v21 = *(_QWORD *)(v0 + 400);
  v36 = *(_QWORD *)(v0 + 408);
  v38 = v21;
  v45 = *(_QWORD *)(v0 + 376);
  v22 = *(_QWORD *)(v0 + 360);
  v47 = *(_QWORD *)(v0 + 368);
  v24 = *(_QWORD *)(v0 + 344);
  v23 = *(_QWORD *)(v0 + 352);
  v1[27] = MEMORY[0x1E0DEA968];
  v1[28] = v13;
  v1[24] = v16;
  v1[25] = v18;
  v25 = sub_1BB87330C(v15);
  sub_1BB86EF44("Service attempting to emit group from %{public}@ cursor %{public}@ with a consumed identifier=%{public}@, kind=%{public}@, dedupResult=%{public}@", 145, 2, &dword_1BA493000, v19, v25, v1);
  swift_bridgeObjectRelease(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(_BYTE *)(v0 + 737) = 7;
  v26 = sub_1BB86C8B0(0);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v27(v23, 1, 1, v26);
  v27(v24, 1, 1, v26);
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  v28 = *(_QWORD *)(v2 - 256);
  v29 = *(_QWORD *)(v28 + qword_1ED476790);
  v30 = (_QWORD *)swift_task_alloc(48);
  v30[2] = v37;
  v30[3] = v36;
  v30[4] = v20;
  swift_bridgeObjectRetain(v29);
  v31 = sub_1BB141E00(sub_1BAAECC4C, v30, v29);
  swift_bridgeObjectRelease(v29);
  swift_task_dealloc(v30);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v20, v40);
  FeedJournal.init(entries:)(v31, v22, v41);
  v32 = *(_QWORD *)(v0 + 176);
  v33 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v2 - 240) = v32;
  *(_QWORD *)(v2 - 232) = v33;
  *(_QWORD *)(v2 - 224) = v34;
  *(_QWORD *)(v2 - 128) = 0;
  *(_WORD *)(v2 - 120) = 256;
  *(_QWORD *)(v0 + 560) = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v38, 0, v0 + 737, v23, v24, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
                            0,
                            0,
                            v0 + 96,
                            v2 - 240,
                            v2 - 128,
                            0,
                            0,
                            0);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v32);
  swift_release(v28);
  sub_1BA76D750(v24);
  sub_1BA76D750(v23);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v38, v47);
  *(_QWORD *)(v0 + 232) = v49;
  *(_QWORD *)(v0 + 568) = sub_1BB872E68(0, v40);
  v35 = (_QWORD *)swift_task_alloc(dword_1EF2AFE04);
  *(_QWORD *)(v0 + 576) = v35;
  *v35 = v0;
  v35[1] = sub_1BAAE0D60;
  JUMPOUT(0x1BA532014);
}

void sub_1BA531764()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  unint64_t v17;
  const char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;

  v4 = *(_QWORD *)(v1 + 472);
  v5 = *(_QWORD *)(v1 + 440);
  v44 = *(_QWORD *)(v1 + 464);
  v45 = *(_QWORD *)(v1 + 448);
  v6 = *(_QWORD *)(v1 + 432);
  v7 = MEMORY[0x1E0DEA968];
  v2[7] = MEMORY[0x1E0DEA968];
  v8 = sub_1BA6A2D8C();
  v2[8] = v8;
  v2[4] = 0x646568636163;
  v2[5] = v0;
  v10 = *(_QWORD *)(v47 + 16);
  v9 = *(_QWORD *)(v47 + 24);
  v2[12] = v7;
  v2[13] = v8;
  v2[9] = v10;
  v2[10] = v9;
  v11 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 24);
  swift_bridgeObjectRetain(v9);
  v12 = sub_1BB86DEE8(v4, v11);
  v2[17] = v7;
  v2[18] = v8;
  v2[14] = v12;
  v2[15] = v13;
  (*(void (**)(uint64_t, uint64_t))(v6 + 64))(v4, v6);
  v2[22] = v7;
  v2[23] = v8;
  v14 = v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, v4, v5, &protocol requirements base descriptor for FeedGroupType, &associated conformance descriptor for FeedGroupType.FeedGroupType.Kind: RawRepresentable);
  sub_1BB872CF4(v5, AssociatedConformanceWitness);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v44, v5);
  if (v49 == 1)
  {
    v19 = 0x80000001BB963CC0;
    v20 = v43;
    v17 = 0xD000000000000010;
  }
  else
  {
    if (v49 == 2)
    {
      v17 = 0xD00000000000001CLL;
      v18 = "dedupNextAsyncManifestGroups";
    }
    else
    {
      v17 = 0xD00000000000001BLL;
      v18 = "dedupNextSyncDatabaseGroups";
    }
    v19 = (unint64_t)(v18 - 32) | 0x8000000000000000;
    v20 = v43;
  }
  v50 = *(_QWORD *)(v1 + 528);
  v21 = *(_QWORD *)(v1 + 488);
  v40 = *(_QWORD *)(v1 + 480);
  v41 = *(_QWORD *)(v1 + 472);
  v42 = *(_QWORD *)(v1 + 424);
  v38 = *(_QWORD *)(v1 + 416);
  v22 = *(_QWORD *)(v1 + 400);
  v37 = *(_QWORD *)(v1 + 408);
  v39 = v22;
  v46 = *(_QWORD *)(v1 + 376);
  v23 = *(_QWORD *)(v1 + 360);
  v48 = *(_QWORD *)(v1 + 368);
  v25 = *(_QWORD *)(v1 + 344);
  v24 = *(_QWORD *)(v1 + 352);
  v2[27] = MEMORY[0x1E0DEA968];
  v2[28] = v14;
  v2[24] = v17;
  v2[25] = v19;
  v26 = sub_1BB87330C(v16);
  sub_1BB86EF44("Service attempting to emit group from %{public}@ cursor %{public}@ with a consumed identifier=%{public}@, kind=%{public}@, dedupResult=%{public}@", 145, 2, &dword_1BA493000, v20, v26, v2);
  swift_bridgeObjectRelease(v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(_BYTE *)(v1 + 737) = 7;
  v27 = sub_1BB86C8B0(0);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v28(v24, 1, 1, v27);
  v28(v25, 1, 1, v27);
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  v29 = *(_QWORD *)(v3 - 256);
  v30 = *(_QWORD *)(v29 + qword_1ED476790);
  v31 = (_QWORD *)swift_task_alloc(48);
  v31[2] = v38;
  v31[3] = v37;
  v31[4] = v21;
  swift_bridgeObjectRetain(v30);
  v32 = sub_1BB141E00(sub_1BAAECC4C, v31, v30);
  swift_bridgeObjectRelease(v30);
  swift_task_dealloc(v31);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v21, v41);
  FeedJournal.init(entries:)(v32, v23, v42);
  v33 = *(_QWORD *)(v1 + 176);
  v34 = *(_QWORD *)(v1 + 184);
  v35 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v3 - 240) = v33;
  *(_QWORD *)(v3 - 232) = v34;
  *(_QWORD *)(v3 - 224) = v35;
  *(_QWORD *)(v3 - 128) = 0;
  *(_WORD *)(v3 - 120) = 256;
  *(_QWORD *)(v1 + 560) = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v39, 0, v1 + 737, v24, v25, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
                            0,
                            0,
                            v1 + 96,
                            v3 - 240,
                            v3 - 128,
                            0,
                            0,
                            0);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v33);
  swift_release(v29);
  sub_1BA76D750(v25);
  sub_1BA76D750(v24);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v39, v48);
  *(_QWORD *)(v1 + 232) = v50;
  *(_QWORD *)(v1 + 568) = sub_1BB872E68(0, v41);
  v36 = (_QWORD *)swift_task_alloc(dword_1EF2AFE04);
  *(_QWORD *)(v1 + 576) = v36;
  *v36 = v1;
  v36[1] = sub_1BAAE0D60;
  JUMPOUT(0x1BA532014);
}

void sub_1BA531778()
{
  JUMPOUT(0x1BA5317A0);
}

void sub_1BA531B9C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v4 = v1[59];
  v5 = v1[57];
  v13 = v1[56];
  v6 = v1[54];
  v7 = v1[55];
  v2[7] = MEMORY[0x1E0DEA968];
  v8 = sub_1BA6A2D8C();
  v2[8] = v8;
  v2[4] = 0x6E657A6F7246;
  v2[5] = v0;
  v9 = sub_1BB86DEE8(v4, *(_QWORD *)(*(_QWORD *)(v6 + 8) + 24));
  v10 = MEMORY[0x1E0DEA968];
  v2[12] = MEMORY[0x1E0DEA968];
  v2[13] = v8;
  v2[9] = v9;
  v2[10] = v11;
  (*(void (**)(uint64_t, uint64_t))(v6 + 64))(v4, v6);
  v2[17] = v10;
  v2[18] = v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, v4, v7, &protocol requirements base descriptor for FeedGroupType, &associated conformance descriptor for FeedGroupType.FeedGroupType.Kind: RawRepresentable);
  sub_1BB872CF4(v7, AssociatedConformanceWitness);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v5, v7);
  v14(v4, v6);
  __asm { BR              X12 }
}

void sub_1BA531BAC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  v3 = v0[59];
  v4 = v0[57];
  v12 = v0[56];
  v5 = v0[54];
  v6 = v0[55];
  v1[7] = MEMORY[0x1E0DEA968];
  v7 = sub_1BA6A2D8C();
  v1[8] = v7;
  v1[4] = 0x4620666F20646E45;
  v1[5] = 0xEB00000000646565;
  v8 = sub_1BB86DEE8(v3, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 24));
  v9 = MEMORY[0x1E0DEA968];
  v1[12] = MEMORY[0x1E0DEA968];
  v1[13] = v7;
  v1[9] = v8;
  v1[10] = v10;
  (*(void (**)(uint64_t, uint64_t))(v5 + 64))(v3, v5);
  v1[17] = v9;
  v1[18] = v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v5, v3, v6, &protocol requirements base descriptor for FeedGroupType, &associated conformance descriptor for FeedGroupType.FeedGroupType.Kind: RawRepresentable);
  sub_1BB872CF4(v6, AssociatedConformanceWitness);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v4, v6);
  v13(v3, v5);
  __asm { BR              X12 }
}

void sub_1BA531BCC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v4 = v1[59];
  v5 = v1[57];
  v13 = v1[56];
  v6 = v1[54];
  v7 = v1[55];
  v2[7] = MEMORY[0x1E0DEA968];
  v8 = sub_1BA6A2D8C();
  v2[8] = v8;
  v2[4] = 0x646568636143;
  v2[5] = v0;
  v9 = sub_1BB86DEE8(v4, *(_QWORD *)(*(_QWORD *)(v6 + 8) + 24));
  v10 = MEMORY[0x1E0DEA968];
  v2[12] = MEMORY[0x1E0DEA968];
  v2[13] = v8;
  v2[9] = v9;
  v2[10] = v11;
  (*(void (**)(uint64_t, uint64_t))(v6 + 64))(v4, v6);
  v2[17] = v10;
  v2[18] = v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, v4, v7, &protocol requirements base descriptor for FeedGroupType, &associated conformance descriptor for FeedGroupType.FeedGroupType.Kind: RawRepresentable);
  sub_1BB872CF4(v7, AssociatedConformanceWitness);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v5, v7);
  v14(v4, v6);
  __asm { BR              X12 }
}

void sub_1BA531BDC()
{
  JUMPOUT(0x1BA531C04);
}

#error "1BA531F78: call analysis failed (funcsize=180)"

uint64_t sub_1BA532038()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[2];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2 = sub_1BB86DEE8();
  LOBYTE(v1) = sub_1BA761FE4(v2, v3, v1);
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    return 1;
  v5 = v0[3];
  v6 = sub_1BB86DEE8();
  LOBYTE(v5) = sub_1BA761FE4(v6, v7, v5);
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    return 2;
  v8 = v0[4];
  v9 = sub_1BB86DEE8();
  LOBYTE(v8) = sub_1BA761FE4(v9, v10, v8);
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    return 3;
  else
    return 0;
}

uint64_t sub_1BA5321A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFontMetricSizing.init(from:)(a1, a2);
}

uint64_t FormatFontMetricSizing.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v25 = a2;
  sub_1BAE90C94();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE90D0C();
  sub_1BA4A2870(&qword_1ED3D1000, (uint64_t (*)(uint64_t))sub_1BAE90D0C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v25;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v16 - 2);
      v19 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v7;
      MEMORY[0x1E0C80A78](v20);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_136;
      *(&v25 - 3) = sub_1BAE90D8C();
      *(&v25 - 2) = sub_1BA532540();
      *(&v25 - 1) = sub_1BAE90DD0();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E726B988);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BA69C018();
  v26 = 0uLL;
  v27 = 0;
  sub_1BB8740D4();
  v17 = v28;
  v26 = xmmword_1BB8A1A10;
  v27 = 0;
  sub_1BA5B4E4C();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = v28;
  *(_QWORD *)v12 = v17;
  *(_BYTE *)(v12 + 8) = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA532540()
{
  unint64_t result;

  result = qword_1ED3C9DD8;
  if (!qword_1ED3C9DD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB478, &_s10CodingKeysON_136);
    atomic_store(result, (unint64_t *)&qword_1ED3C9DD8);
  }
  return result;
}

uint64_t sub_1BA532584@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return FormatCellSelection.init(from:)(a1, a2);
}

uint64_t FormatCellSelection.init(from:)@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 *v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 *v34;

  v34 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
  {
LABEL_9:
    sub_1BA7F8B78(a1, (uint64_t)v9);
    swift_willThrow();

    v17 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v17);
  }
  v10 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v22 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v9 = (void *)swift_allocError();
      *(_QWORD *)v23 = v22;
      *(_QWORD *)(v23 + 8) = v16;
      *(_QWORD *)(v23 + 16) = &unk_1E726AE08;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v22, v16);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      a1 = v28;
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5328F0();
  v30 = 0uLL;
  sub_1BB8740D4();
  v19 = v29;
  if ((_BYTE)v29)
  {
    if (v29 == 1)
    {
      v30 = xmmword_1BB87FC90;
      sub_1BAE87B78();
      sub_1BB874068();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      v20 = 0;
      *(_QWORD *)&v21 = v29;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      v20 = 0;
      v21 = 0uLL;
    }
    v24 = 0uLL;
    v25 = 0uLL;
  }
  else
  {
    v29 = xmmword_1BB87FC90;
    sub_1BA532934();
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    v21 = v30;
    v24 = v31;
    v25 = v32;
    v20 = v33;
  }
  v26 = v34;
  v17 = (uint64_t)v28;
  *v34 = v21;
  v26[1] = v24;
  v26[2] = v25;
  *((_QWORD *)v26 + 6) = v20;
  *((_BYTE *)v26 + 56) = v19;
  return __swift_destroy_boxed_opaque_existential_1(v17);
}

unint64_t sub_1BA5328F0()
{
  unint64_t result;

  result = qword_1ED3C81D8;
  if (!qword_1ED3C81D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCellSelection.CodingType, &type metadata for FormatCellSelection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3C81D8);
  }
  return result;
}

unint64_t sub_1BA532934()
{
  unint64_t result;

  result = qword_1ED3B5B28;
  if (!qword_1ED3B5B28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCellSelection.Background, &type metadata for FormatCellSelection.Background);
    atomic_store(result, (unint64_t *)&qword_1ED3B5B28);
  }
  return result;
}

uint64_t sub_1BA532978()
{
  sub_1BA532A20();
  return sub_1BB872D0C();
}

uint64_t sub_1BA5329C4()
{
  sub_1BA532A20();
  return sub_1BB872D60();
}

unint64_t sub_1BA532A20()
{
  unint64_t result;

  result = qword_1ED3C7958;
  if (!qword_1ED3C7958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9278, &_s10CodingTypeON_97);
    atomic_store(result, (unint64_t *)&qword_1ED3C7958);
  }
  return result;
}

uint64_t sub_1BA532A64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA697F1C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

char *sub_1BA532A8C@<X0>(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_1BA532AB4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

char *sub_1BA532AB4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  void (**v7)(char *, char *);
  uint64_t v8;
  char *v9;
  void (**v10)(char *, char *);
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void (**v54)(char *, char *);
  __int128 v55;
  char v56;
  __int128 v57;
  unsigned __int8 v58;

  sub_1BAEFBAC0(0, &qword_1ED39EE00, (void (*)(void))sub_1BA8281EC, (void (*)(void))sub_1BA828230);
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v40 - v3;
  sub_1BAEF67C0();
  v6 = v5;
  v7 = (void (**)(char *, char *))*((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE81070();
  sub_1BA4A2870(&qword_1ED3AD918, (uint64_t (*)(uint64_t))sub_1BAE81070, (uint64_t)&unk_1BB8FFC6C);
  v10 = v54;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v4;
  }
  v50 = v4;
  v51 = a1;
  v54 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v4 = v6;
  v14 = v52;
  v15 = v53;
  if ((v13 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v23 = *((_QWORD *)v18 - 2);
      v24 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v25 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v25);
      *(&v40 - 4) = (uint64_t)&_s10CodingKeysON_188;
      *(&v40 - 3) = sub_1BAE810F0();
      *(&v40 - 2) = sub_1BA533214();
      *(&v40 - 1) = sub_1BAE81134();
      swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71220((uint64_t)&unk_1E7252968);
      swift_release_n();
      sub_1BA98D1F0();
      v11 = (void *)swift_allocError();
      *(_QWORD *)v27 = v23;
      *(_QWORD *)(v27 + 8) = v24;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v23, v24, 1);
      v54[1](v9, v4);
      a1 = v51;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v19 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF67C0);
  v21 = v20;
  v49 = v19;
  v57 = xmmword_1BB8A1A10;
  v58 = 0;
  v22 = sub_1BB874098();
  v29 = v28;
  v48 = v22;
  v55 = xmmword_1BB8D2D60;
  v56 = 0;
  sub_1BA5834B4();
  sub_1BB874068();
  v46 = *((_QWORD *)&v57 + 1);
  v47 = v57;
  v45 = v58;
  sub_1BA4AD288(0, &qword_1ED3A0808, (uint64_t)&type metadata for FormatAnimationNodeAnimation, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v57 = xmmword_1BB8D2D70;
  v58 = 0;
  sub_1BA533158();
  sub_1BB874068();
  v44 = v29;
  v43 = v55;
  v57 = xmmword_1BB8D2D90;
  v58 = 0;
  sub_1BA5331D0();
  sub_1BB874068();
  v31 = v4;
  v32 = BYTE4(v55);
  v33 = v55;
  v42 = xmmword_1BB8D2D80;
  v57 = xmmword_1BB8D2D80;
  v58 = 0;
  v34 = sub_1BB8740F8();
  if ((v34 & 1) != 0)
  {
    v41 = v32;
    v55 = v42;
    v56 = 0;
    sub_1BAEF6838();
    v35 = v50;
    sub_1BB8740D4();
    *(_QWORD *)&v42 = v31;
    v36 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v35, v15);
    v32 = v41;
  }
  else
  {
    *(_QWORD *)&v42 = v31;
    v36 = MEMORY[0x1E0DEE9D8];
  }
  v37 = v33 | (v32 << 32);
  type metadata accessor for FormatAnimationNodeStyle();
  v4 = (char *)swift_allocObject();
  *((_QWORD *)v4 + 9) = 0;
  swift_beginAccess();
  *((_QWORD *)v4 + 2) = v49;
  *((_QWORD *)v4 + 3) = v21;
  v38 = v44;
  *((_QWORD *)v4 + 4) = v48;
  *((_QWORD *)v4 + 5) = v38;
  v39 = v46;
  *((_QWORD *)v4 + 6) = v47;
  *((_QWORD *)v4 + 7) = v39;
  v4[64] = v45;
  swift_beginAccess();
  *((_QWORD *)v4 + 9) = v43;
  swift_bridgeObjectRelease();
  v4[84] = BYTE4(v37);
  *((_DWORD *)v4 + 20) = v37;
  swift_beginAccess();
  *((_QWORD *)v4 + 11) = v36;
  v54[1](v9, (char *)v42);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return v4;
}

unint64_t sub_1BA533158()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A0818;
  if (!qword_1ED3A0818)
  {
    sub_1BA4AD288(255, &qword_1ED3A0808, (uint64_t)&type metadata for FormatAnimationNodeAnimation, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA83F0C8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A0818);
  }
  return result;
}

unint64_t sub_1BA5331D0()
{
  unint64_t result;

  result = qword_1ED39F918;
  if (!qword_1ED39F918)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRunMode, &type metadata for FormatRunMode);
    atomic_store(result, (unint64_t *)&qword_1ED39F918);
  }
  return result;
}

unint64_t sub_1BA533214()
{
  unint64_t result;

  result = qword_1ED3A7388;
  if (!qword_1ED3A7388)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE1E0, &_s10CodingKeysON_188);
    atomic_store(result, (unint64_t *)&qword_1ED3A7388);
  }
  return result;
}

uint64_t sub_1BA533258()
{
  return sub_1BA533274((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA5332AC);
}

uint64_t sub_1BA533274(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[10], v1[11], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1BA5332AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;

  v4 = type metadata accessor for FeedCursorTrackerSnapshot(255, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 88), a4);
  v5 = sub_1BB873A2C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - v7;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BA5333AC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v8, 1, 1, v4);
    sub_1BA5334C4((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA5333AC()
{
  sub_1BB86F1FC();
  sub_1BB86F25C();
  swift_release();
  sub_1BB86F1FC();
  sub_1BB86F25C();
  swift_release();
  sub_1BB86F1FC();
  sub_1BB86F25C();
  swift_release();
  sub_1BB86F1FC();
  sub_1BB86F25C();
  swift_release();
  sub_1BB86F1FC();
  sub_1BB86F25C();
  swift_release();
  sub_1BB86F1FC();
  sub_1BB86F25C();
  return swift_release();
}

uint64_t sub_1BA5334C4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedCursorTrackerSnapshot(255, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v5 = sub_1BB873A2C();
  v6 = MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, double))(v7 + 16))((char *)&v10 - v8, a1, v6);
  swift_retain();
  sub_1BB86E884();
  return swift_release();
}

uint64_t sub_1BA5335C4()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA5335F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA533618(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA533618(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (**v9)(char *, _QWORD);
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  void (**v62)(char *, _QWORD);
  __int128 v63;
  char v64;
  __int128 v65;
  char v66;
  unint64_t v67;

  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  *(_QWORD *)&v61 = v2;
  v57 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v60 = (char *)&v45 - v3;
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v58 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v45 - v6;
  sub_1BAEF2120();
  v59 = v8;
  v9 = *(void (***)(char *, _QWORD))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE98448();
  sub_1BA4A2870(&qword_1ED3D1550, (uint64_t (*)(uint64_t))sub_1BAE98448, (uint64_t)&unk_1BB8FFC6C);
  v13 = v62;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v54 = v5;
  v55 = v7;
  v15 = v58;
  v62 = v9;
  v16 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v17 = sub_1BB872874();
  LOBYTE(v16) = Dictionary<>.errorOnUnknownKeys.getter(v17);
  swift_bridgeObjectRelease();
  v19 = v59;
  v18 = v60;
  v20 = v61;
  if ((v16 & 1) != 0)
  {
    v21 = sub_1BB8740EC();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = (_BYTE *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v23 - 2);
      v27 = *((_QWORD *)v23 - 1);
      swift_bridgeObjectRetain_n();
      v28 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v28);
      sub_1BAE984C8();
      sub_1BA71CAA8();
      sub_1BAE9850C();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v29 = sub_1BAE71220((uint64_t)&unk_1E7250AD0);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v30 = v26;
      *(_QWORD *)(v30 + 8) = v27;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v27, 1);
      v62[1](v11, v19);
      a1 = v56;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v52 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF2120);
  v53 = v24;
  v65 = xmmword_1BB8A1A10;
  v66 = 0;
  v25 = sub_1BB87402C();
  v33 = v32;
  v51 = v25;
  v65 = xmmword_1BB8D2D60;
  v66 = 0;
  v48 = sub_1BB87402C();
  v50 = v34;
  v49 = xmmword_1BB8D2D70;
  v65 = xmmword_1BB8D2D70;
  v66 = 0;
  v35 = sub_1BB8740F8();
  if ((v35 & 1) != 0)
  {
    v63 = v49;
    v64 = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v36 = v67;
  }
  else
  {
    v36 = 0xB000000000000008;
  }
  *(_QWORD *)&v49 = v36;
  v65 = xmmword_1BB8D2D90;
  v66 = 0;
  sub_1BA719774();
  sub_1BB874068();
  v37 = *((_QWORD *)&v63 + 1);
  v46 = v63;
  v47 = xmmword_1BB8D2D80;
  v65 = xmmword_1BB8D2D80;
  v66 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v45 = v37;
    v63 = v47;
    v64 = 0;
    sub_1BAEB7D04();
    sub_1BB8740D4();
    v38 = v15;
    *(_QWORD *)&v47 = v33;
    v39 = v55;
    v40 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v38);
    v37 = v45;
  }
  else
  {
    *(_QWORD *)&v47 = v33;
    v40 = MEMORY[0x1E0DEE9D8];
  }
  v65 = xmmword_1BB8D2DA0;
  v66 = 0;
  sub_1BA4FB6A0();
  sub_1BB8740D4();
  v41 = sub_1BB86DD08();
  v42 = v18;
  v43 = v41;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v20);
  v61 = xmmword_1BB8D2DB0;
  v65 = xmmword_1BB8D2DB0;
  v66 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v63 = v61;
    v64 = 0;
    sub_1BB8740D4();
    v44 = v67;
  }
  else
  {
    v44 = 0;
  }
  *(_QWORD *)&v63 = v49;
  *(_QWORD *)&v65 = v46;
  *((_QWORD *)&v65 + 1) = v37;
  type metadata accessor for FormatHBoxNode();
  swift_allocObject();
  KeyPath = FormatHBoxNode.init(identifier:name:description:size:resize:adjustments:children:reversed:)(v52, v53, v51, v47, v48, v50, (uint64_t *)&v63, (uint64_t *)&v65, v40, v43, v44);
  v62[1](v11, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  return KeyPath;
}

uint64_t sub_1BA533E58(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA533E8C + 4 * byte_1BB8AE514[a1]))(0x646E616D6D6F63, 0xE700000000000000);
}

uint64_t sub_1BA533E8C()
{
  return 0x7365736163;
}

uint64_t sub_1BA533EA0()
{
  return 0x746C7561666564;
}

uint64_t sub_1BA533EB4()
{
  return 1885433183;
}

uint64_t sub_1BA533EC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BA533EEC();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1BA533EEC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  sub_1BA534294();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - v4;
  sub_1BA534230();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  sub_1BA5AA31C(0, &qword_1ED39A6C8, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2C88]);
  v13 = v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v14(v11, 1, 1, v12);
  v14(v8, 1, 1, v13);
  sub_1BA5AA31C(0, &qword_1ED39A708, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA31C(0, &qword_1ED39A670, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v15 = sub_1BB86F058();
  v14(v11, 1, 1, v13);
  v14(v8, 1, 1, v13);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  sub_1BB86F058();
  v16 = MEMORY[0x1E0CB0338];
  sub_1BA4CDF6C(0, &qword_1ED39A698, (uint64_t (*)(void))sub_1BA534308, MEMORY[0x1E0CB0338], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v19(v5, 1, 1, v17);
  v19(v2, 1, 1, v18);
  sub_1BA4CDF6C(0, &qword_1ED39A6F8, (uint64_t (*)(void))sub_1BA534308, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA4CDF6C(0, &qword_1ED39A660, (uint64_t (*)(void))sub_1BA534308, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  sub_1BB86F058();
  return v15;
}

void sub_1BA534230()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39A6D0)
  {
    sub_1BA5AA31C(255, &qword_1ED39A6C8, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2C88]);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39A6D0);
  }
}

void sub_1BA534294()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39A6A0)
  {
    sub_1BA4CDF6C(255, &qword_1ED39A698, (uint64_t (*)(void))sub_1BA534308, MEMORY[0x1E0CB0338], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39A6A0);
  }
}

unint64_t sub_1BA534308()
{
  unint64_t result;

  result = qword_1ED39A468;
  if (!qword_1ED39A468)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB2908], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED39A468);
  }
  return result;
}

uint64_t sub_1BA53434C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageAdjustmentBlend.ColorData.init(from:)(a1, a2);
}

uint64_t FormatImageAdjustmentBlend.ColorData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE99374();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE993EC();
  sub_1BA4A2870(&qword_1ED3D1210, (uint64_t (*)(uint64_t))sub_1BAE993EC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v26 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_119;
      *(&v26 - 3) = sub_1BAE9946C();
      *(&v26 - 2) = sub_1BA5346C4();
      *(&v26 - 1) = sub_1BAE994B0();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726C3B0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA62C9A0();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BA534708();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  *(_QWORD *)v12 = v18;
  *(_BYTE *)(v12 + 8) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5346C4()
{
  unint64_t result;

  result = qword_1ED3CB918;
  if (!qword_1ED3CB918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA4F8, &_s10CodingKeysON_119);
    atomic_store(result, (unint64_t *)&qword_1ED3CB918);
  }
  return result;
}

unint64_t sub_1BA534708()
{
  unint64_t result;

  result = qword_1ED3BD458[0];
  if (!qword_1ED3BD458[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlendMode, &type metadata for FormatBlendMode);
    atomic_store(result, qword_1ED3BD458);
  }
  return result;
}

uint64_t sub_1BA53474C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorAndExpression.init(from:)(a1, a2);
}

uint64_t FormatColorAndExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE88764();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE887DC();
  sub_1BA4A2870(&qword_1ED3ABEE8, (uint64_t (*)(uint64_t))sub_1BAE887DC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v26 = v13;
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_162;
      *(&v26 - 3) = sub_1BAE8885C();
      *(&v26 - 2) = sub_1BA534AC0();
      *(&v26 - 1) = sub_1BAE888A0();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726AEF8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA5820C4();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v25 = v29;
  *v12 = v18;
  v12[1] = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA534AC0()
{
  unint64_t result;

  result = qword_1ED3A73B8;
  if (!qword_1ED3A73B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCBE8, &_s10CodingKeysON_162);
    atomic_store(result, (unint64_t *)&qword_1ED3A73B8);
  }
  return result;
}

uint64_t sub_1BA534B04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageAdjustmentBlend.init(from:)(a1, a2);
}

uint64_t FormatImageAdjustmentBlend.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[8];
  char v30;
  __int128 v31;
  _OWORD v32[8];
  char v33;
  _BYTE v34[136];
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v3 = v2;
  v28 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v38 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v9 = a1;
LABEL_13:
    sub_1BA7F8B78(v9, (uint64_t)v3);
    swift_willThrow();

    v23 = (uint64_t)v9;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26 = a1;
  v27 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v38;
  v13 = v8;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_8;
      }
      v21 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v21;
      *(_QWORD *)(v22 + 8) = v17;
      *(_QWORD *)(v22 + 16) = &unk_1E726C360;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v21, v17);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v12);
      v9 = v26;
      goto LABEL_13;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BA534EE0();
  v35 = 0;
  v36 = 0;
  sub_1BB8740D4();
  v18 = v27;
  if ((v37 & 1) != 0)
  {
    v29[0] = xmmword_1BB87FC90;
    sub_1BA534E9C();
    sub_1BB8740D4();
    v19 = v28;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v12);
    *(_QWORD *)&v32[0] = v31;
    BYTE8(v32[0]) = BYTE8(v31);
    sub_1BAE992F4((uint64_t)v32);
    v20 = v32;
  }
  else
  {
    v31 = xmmword_1BB87FC90;
    sub_1BAE99314();
    sub_1BB8740D4();
    v19 = v28;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v12);
    v29[6] = v32[6];
    v29[7] = v32[7];
    v30 = v33;
    v29[2] = v32[2];
    v29[3] = v32[3];
    v29[4] = v32[4];
    v29[5] = v32[5];
    v29[0] = v32[0];
    v29[1] = v32[1];
    sub_1BAE99358((uint64_t)v29);
    v20 = v29;
  }
  sub_1BA53BAD8((uint64_t)v20, (uint64_t)v34);
  sub_1BA53BAD8((uint64_t)v34, v19);
  v23 = (uint64_t)v26;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

unint64_t sub_1BA534E9C()
{
  unint64_t result;

  result = qword_1ED3BF680;
  if (!qword_1ED3BF680)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend.ColorData, &type metadata for FormatImageAdjustmentBlend.ColorData);
    atomic_store(result, (unint64_t *)&qword_1ED3BF680);
  }
  return result;
}

unint64_t sub_1BA534EE0()
{
  unint64_t result;

  result = qword_1ED3CB910;
  if (!qword_1ED3CB910)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA580, &_s10CodingTypeON_78);
    atomic_store(result, (unint64_t *)&qword_1ED3CB910);
  }
  return result;
}

uint64_t initializeWithCopy for Feed(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  v6 = v4;
  v7 = v5;
  return a1;
}

uint64_t sub_1BA534F70()
{
  sub_1BA535018();
  return sub_1BB872D0C();
}

uint64_t sub_1BA534FBC()
{
  sub_1BA535018();
  return sub_1BB872D60();
}

unint64_t sub_1BA535018()
{
  unint64_t result;

  result = qword_1ED3CF5F8;
  if (!qword_1ED3CF5F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B26E0, &_s10CodingTypeON_160);
    atomic_store(result, (unint64_t *)&qword_1ED3CF5F8);
  }
  return result;
}

BOOL sub_1BA53505C()
{
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  if (Strong)
    swift_release();
  return Strong != 0;
}

uint64_t sub_1BA5350A0(_QWORD *a1)
{
  return FormatStateMachineInput.encode(to:)(a1);
}

uint64_t FormatStateMachineInput.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v30 = (char *)&v29 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)v1;
  v11 = *(_QWORD *)(v1 + 8);
  v13 = *(_QWORD *)(v1 + 24);
  v32 = *(_QWORD *)(v1 + 16);
  v14 = *(_BYTE *)(v1 + 32);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BA6B8518();
  v31 = v10;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatStateMachineInput, v18, v15, (uint64_t)&type metadata for FormatStateMachineInput, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v16, (uint64_t)v10, v17, (uint64_t)&off_1E734BD00);
  if ((v14 & 1) != 0)
  {
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v19 = sub_1BB86EB84();
    v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v5, v20, v19);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v21 = (uint64_t)v31;
    sub_1BACE83FC(1, v12, v11, v32 & 1, (uint64_t)v5);
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80(v21, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  else
  {
    v23 = qword_1ED3C6D60;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23 != -1)
      swift_once();
    v24 = sub_1BB86EB84();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476C38);
    v26 = (uint64_t)v30;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v30, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    v27 = (uint64_t)v31;
    v28 = v32;
    sub_1BA53539C(0, v12, v11, v32, v13, v26);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80(v27, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    return sub_1BA6C1F54(v12, v11, v28, v13, 0);
  }
}

uint64_t sub_1BA53539C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v9 = a1 & 1;
  v23 = a1 & 1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEEAE94;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA53552C();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA55B8C4(0, &qword_1ED3B5548, (uint64_t (*)(void))sub_1BA823170, (uint64_t)&type metadata for FormatStateMachineEventValue, (uint64_t)&type metadata for FormatStateMachineEvent);
    sub_1BA535570();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA53552C()
{
  unint64_t result;

  result = qword_1ED3A72D8;
  if (!qword_1ED3A72D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0D70, &_s10CodingTypeON_18);
    atomic_store(result, (unint64_t *)&qword_1ED3A72D8);
  }
  return result;
}

unint64_t sub_1BA535570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B4A8;
  if (!qword_1ED39B4A8)
  {
    sub_1BA55B8C4(255, &qword_1ED3B5548, (uint64_t (*)(void))sub_1BA823170, (uint64_t)&type metadata for FormatStateMachineEventValue, (uint64_t)&type metadata for FormatStateMachineEvent);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B4A8);
  }
  return result;
}

uint64_t sub_1BA5355D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA67D154(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_1BA5355F4(_QWORD *a1)
{
  return FormatMetadata.encode(to:)(a1);
}

uint64_t FormatMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  char v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v2 = sub_1BB86EB84();
  v33 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v34 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - v5;
  sub_1BA4CDF6C(0, &qword_1ED39DBD0, (uint64_t (*)(void))sub_1BA637DB4, (uint64_t)&type metadata for FormatMetadata.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v28 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA637DB4();
  v12 = v36;
  sub_1BB8746C8();
  LOBYTE(v38) = 0;
  v13 = v35;
  sub_1BB87411C();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v30 = v9;
  v35 = v11;
  v32 = v8;
  v31 = type metadata accessor for FormatMetadata();
  v15 = v12 + *(int *)(v31 + 20);
  v16 = v33;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  v29(v6, v15, v2);
  v17 = v34;
  sub_1BB86EB54();
  sub_1BA4A2870(&qword_1ED39C378, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE8]);
  v18 = sub_1BB872958();
  v19 = *(void (**)(char *, uint64_t))(v16 + 8);
  v19(v17, v2);
  v19(v6, v2);
  if ((v18 & 1) == 0)
  {
    LOBYTE(v38) = 2;
    sub_1BA4A2870(&qword_1ED39C370, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DD8]);
    sub_1BB8741AC();
  }
  v20 = v34;
  v29(v6, v36 + *(int *)(v31 + 24), v2);
  sub_1BB86EB48();
  v21 = sub_1BB872958();
  v22 = v20;
  LOBYTE(v20) = v21;
  v19(v22, v2);
  v19(v6, v2);
  if ((v20 & 1) != 0)
  {
    v23 = v32;
    v24 = v35;
  }
  else
  {
    LOBYTE(v38) = 3;
    sub_1BA4A2870(&qword_1ED39C370, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DD8]);
    v23 = v32;
    v24 = v35;
    sub_1BB8741AC();
  }
  v25 = v36;
  v26 = (int *)v31;
  LOBYTE(v38) = 1;
  sub_1BA4A2870(&qword_1ED39C370, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DD8]);
  sub_1BB87414C();
  if (*(_QWORD *)(*(_QWORD *)(v25 + v26[8]) + 16))
  {
    v38 = *(_QWORD *)(v25 + v26[8]);
    v37 = 4;
    sub_1BA637C70();
    sub_1BA637E54((unint64_t *)&unk_1ED39BFC0, MEMORY[0x1E0DEDBD0], MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
    v25 = v36;
  }
  v27 = v30;
  if (*(_QWORD *)(*(_QWORD *)(v25 + v26[9]) + 16))
  {
    v38 = *(_QWORD *)(v25 + v26[9]);
    v37 = 5;
    sub_1BA637C70();
    sub_1BA637E54((unint64_t *)&unk_1ED39BFC0, MEMORY[0x1E0DEDBD0], MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
    v25 = v36;
  }
  if (*(_QWORD *)(*(_QWORD *)(v25 + v26[10]) + 16))
  {
    v38 = *(_QWORD *)(v25 + v26[10]);
    v37 = 6;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3CF880, (uint64_t (*)(void))sub_1BA837F80, (uint64_t)&type metadata for FeedPlatform, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA637D30(&qword_1ED3AB168, (uint64_t (*)(void))sub_1BA837FC4, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
    v25 = v36;
  }
  if (*(_QWORD *)(*(_QWORD *)(v25 + v26[11]) + 16))
  {
    v38 = *(_QWORD *)(v25 + v26[11]);
    v37 = 7;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3CF880, (uint64_t (*)(void))sub_1BA837F80, (uint64_t)&type metadata for FeedPlatform, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA637D30(&qword_1ED3AB168, (uint64_t (*)(void))sub_1BA837FC4, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v24, v23);
}

uint64_t destroy for FormatLayeredMediaNodeStyle.Selector(uint64_t a1)
{
  unsigned int v2;
  int v3;
  int v4;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) != 0)
    swift_release();
  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 <= 0xFD)
    sub_1BA6F2B88(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v2);
  if (*(unsigned __int8 *)(a1 + 144) != 254)
    swift_release();
  v3 = *(unsigned __int8 *)(a1 + 168);
  if (v3 != 255)
    sub_1BA69C828(*(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), v3 & 1);
  v4 = *(unsigned __int8 *)(a1 + 192);
  if (v4 != 255)
    sub_1BA69C828(*(_QWORD *)(a1 + 176), *(_QWORD *)(a1 + 184), v4 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA535C54(_QWORD *a1)
{
  return FormatTextNodeStyle.Selector.encode(to:)(a1);
}

uint64_t sub_1BA535C68@<X0>(__int128 *a1@<X0>, __int128 *a2@<X8>)
{
  return FormatVideoPlayerNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatVideoPlayerNodeStyle.Selector.init(from:)@<X0>(__int128 *a1@<X0>, __int128 *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  __int128 *v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  __int128 v70;
  char v71;
  _BYTE v72[7];

  v3 = v2;
  v59 = a2;
  sub_1BAECE484();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, *((_QWORD *)a1 + 3));
  sub_1BAECE4FC();
  sub_1BA4A2870(&qword_1ED3D1280, (uint64_t (*)(uint64_t))sub_1BAECE4FC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
LABEL_11:
    sub_1BA7F8B78(v10, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  __swift_project_boxed_opaque_existential_1(a1, *((_QWORD *)a1 + 3));
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v7;
  v14 = v6;
  v15 = v9;
  v10 = a1;
  if ((v12 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_8;
      }
      v59 = a1;
      v20 = *((_QWORD *)v18 - 2);
      v21 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      v23 = v13;
      MEMORY[0x1E0C80A78](v22);
      sub_1BAECE57C();
      sub_1BA536548();
      sub_1BAECE5C0();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E7253098);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v20;
      *(_QWORD *)(v25 + 8) = v21;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      v26 = v21;
      v10 = v59;
      sub_1BA69C828(v20, v26, 1);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v14);
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v60 = 0uLL;
  LOBYTE(v61) = 0;
  sub_1BB8740D4();
  v19 = v70;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v60 = xmmword_1BB8A1A10;
  LOBYTE(v61) = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v28 = v70;
  v60 = xmmword_1BB8D2D60;
  LOBYTE(v61) = 0;
  sub_1BA69A538();
  sub_1BB874068();
  v58 = v28;
  v29 = v70;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v60 = xmmword_1BB8D2D70;
  LOBYTE(v61) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v30 = v29;
  v31 = v70;
  v70 = xmmword_1BB8D2D90;
  v71 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v57 = v31;
  v55 = *((_QWORD *)&v60 + 1);
  v32 = v60;
  v56 = v61;
  v70 = xmmword_1BB8D2D80;
  v71 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v54 = v32;
  v47 = v60;
  v48 = v61;
  v49 = v62;
  v50 = v63;
  v51 = v64;
  v52 = v65;
  v53 = v66;
  v46 = v67;
  v45 = v68;
  LODWORD(v32) = v69;
  v60 = xmmword_1BB8D2DA0;
  LOBYTE(v61) = 0;
  sub_1BA62C9A0();
  sub_1BB874068();
  v44 = v32;
  v43 = v70;
  v60 = xmmword_1BB8D2DB0;
  LOBYTE(v61) = 0;
  v33 = sub_1BB874038();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v6);
  v34 = v58;
  v35 = v59;
  *v59 = v19;
  *((_QWORD *)v35 + 2) = v34;
  *((_QWORD *)v35 + 3) = v30;
  v36 = v54;
  *((_QWORD *)v35 + 4) = v57;
  *((_QWORD *)v35 + 5) = v36;
  *((_QWORD *)v35 + 6) = v55;
  *((_BYTE *)v35 + 56) = v56;
  *(_DWORD *)((char *)v35 + 57) = v70;
  *((_DWORD *)v35 + 15) = *(_DWORD *)((char *)&v70 + 3);
  v37 = *((_QWORD *)&v47 + 1);
  *((_QWORD *)v35 + 8) = v47;
  *((_QWORD *)v35 + 9) = v37;
  v38 = v49;
  *((_QWORD *)v35 + 10) = v48;
  *((_QWORD *)v35 + 11) = v38;
  v39 = v51;
  *((_QWORD *)v35 + 12) = v50;
  *((_QWORD *)v35 + 13) = v39;
  v40 = v53;
  *((_QWORD *)v35 + 14) = v52;
  *((_QWORD *)v35 + 15) = v40;
  v41 = v45;
  *((_QWORD *)v35 + 16) = v46;
  *((_QWORD *)v35 + 17) = v41;
  *((_BYTE *)v35 + 144) = v44;
  *((_DWORD *)v35 + 37) = *(_DWORD *)&v72[3];
  *(_DWORD *)((char *)v35 + 145) = *(_DWORD *)v72;
  *((_QWORD *)v35 + 19) = v43;
  *((_BYTE *)v35 + 160) = v33;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA536548()
{
  unint64_t result;

  result = qword_1ED3CBA90;
  if (!qword_1ED3CBA90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3DE0, &_s10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_1ED3CBA90);
  }
  return result;
}

void sub_1BA53658C()
{
  FeedGroupKnobsRuleList.__allocating_init(from:)();
}

uint64_t sub_1BA5365A0(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

void FeedGroupKnobsRuleList.__allocating_init(from:)()
{
  swift_allocObject();
  FeedGroupKnobsRuleList.init(from:)();
}

uint64_t sub_1BA5365EC()
{
  uint64_t v0;

  return v0;
}

void FeedGroupKnobsRuleList.init(from:)()
{
  type metadata accessor for FeedGroupKnobsRuleList.Selector();
}

void sub_1BA536658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupKnobsRuleList<A>.Selector<A1>, a1);
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupKnobsRuleList<A>.Selector<A1>, a1);
  *(_QWORD *)(v13 - 168) = a1;
  *(_QWORD *)(v13 - 192) = sub_1BB86DF60();
  v15 = sub_1BB873A2C();
  *(_QWORD *)(v13 - 248) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v13 - 240) = v15;
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v13 - 200) = (char *)&a9 - v16;
  sub_1BB86DF60();
  v17 = sub_1BB873A2C();
  *(_QWORD *)(v13 - 224) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v13 - 216) = v17;
  MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)(v13 - 232) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  *(_QWORD *)(v13 - 184) = (char *)&a9 - v20;
  *(_QWORD *)(v13 - 208) = v11;
  *(_QWORD *)(v13 - 152) = v11;
  *(_QWORD *)(v13 - 144) = v9;
  *(_QWORD *)(v13 - 136) = v12;
  *(_QWORD *)(v13 - 128) = v10;
  type metadata accessor for FeedGroupKnobsRuleList.CodingKeys();
}

uint64_t sub_1BA536768(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  MEMORY[0x1BCCE5B24](&unk_1BB919C28, a1);
  v4 = sub_1BB874104();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - v6;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v8 = *(void **)(v3 - 72);
  sub_1BB87468C();
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    sub_1BB874674();
    v9 = (uint64_t)v2;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 - 152), *(_QWORD *)(v3 - 128));
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    v16 = *(_QWORD *)(v3 - 232);
    sub_1BB8743A4();
    v17 = *(_QWORD *)(v1 - 8);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v16, 1, v1);
    if (v18 == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 224) + 8))(v16, *(_QWORD *)(v3 - 216));
      v19 = sub_1BB872E68();
    }
    else
    {
      v19 = sub_1BB86DD08();
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v1);
    }
    v20 = *(_QWORD *)(v3 - 160);
    *(_QWORD *)(v20 + 16) = v19;
    v26 = sub_1BB872E68();

    *(_QWORD *)(v20 + 24) = v26;
    __swift_destroy_boxed_opaque_existential_1(v3 - 152);
  }
  else
  {
    *(_QWORD *)(v3 - 176) = v5;
    v10 = v2;
    *(_BYTE *)(v3 - 152) = 0;
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    v11 = *(_QWORD *)(v3 - 184);
    v12 = v7;
    sub_1BB874020();
    v13 = *(_QWORD *)(v1 - 8);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v1);
    *(_QWORD *)(v3 - 72) = v4;
    *(_QWORD *)(v3 - 256) = v10;
    if (v14 == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 224) + 8))(v11, *(_QWORD *)(v3 - 216));
      v15 = sub_1BB872E68();
    }
    else
    {
      v15 = sub_1BB86DD08();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v1);
    }
    v20 = *(_QWORD *)(v3 - 160);
    v22 = *(_QWORD *)(v3 - 200);
    v21 = *(_QWORD *)(v3 - 192);
    v23 = v12;
    *(_QWORD *)(v20 + 16) = v15;
    *(_BYTE *)(v3 - 152) = 1;
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v21);
    sub_1BB874020();
    v24 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v21) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 248) + 8))(v22, *(_QWORD *)(v3 - 240));
      v25 = sub_1BB872E68();
    }
    else
    {
      v25 = sub_1BB86DD08();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v21);
    }
    v9 = *(_QWORD *)(v3 - 256);
    (*(void (**)(char *, _QWORD))(*(_QWORD *)(v3 - 176) + 8))(v23, *(_QWORD *)(v3 - 72));
    *(_QWORD *)(v20 + 24) = v25;
  }
  __swift_destroy_boxed_opaque_existential_1(v9);
  return v20;
}

void type metadata accessor for FeedGroupKnobsRuleList.Selector()
{
  JUMPOUT(0x1BCCE5A70);
}

void type metadata accessor for FeedGroupKnobsRuleList.CodingKeys()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA536AFC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA7C2538(*(id *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_1BA536B2C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x736E656B6F74;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x74616D726F66;
}

NewsFeed::NewsEnvironment_optional __swiftcall NewsEnvironment.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::NewsEnvironment_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedItemLayoutAttributes.isPrefetchable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  _QWORD v17[2];

  v1 = sub_1BB871B6C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - v6;
  v8 = type metadata accessor for FeedBannerAdViewLayout.Context(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)v0 >> 60;
  v13 = 0;
  if (((1 << v12) & 0x7F7) == 0)
  {
    if ((_DWORD)v12 == 3)
    {
      sub_1BA64109C();
      v15 = swift_projectBox();
      sub_1BA4C2DD8(v15, (uint64_t)v11, type metadata accessor for FeedBannerAdViewLayout.Context);
      type metadata accessor for FeedBannerAd();
      sub_1BB8721A8();
      (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0D527B0], v1);
      v13 = MEMORY[0x1BCCE2470](v7, v4);
      v16 = *(void (**)(char *, uint64_t))(v2 + 8);
      v16(v4, v1);
      v16(v7, v1);
      sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FeedBannerAdViewLayout.Context);
    }
    else
    {
      v17[1] = *(_QWORD *)(*(_QWORD *)v0 + 16);
      v13 = FeedItemLayoutAttributes.isPrefetchable.getter(v9);
    }
  }
  return v13 & 1;
}

uint64_t sub_1BA536D6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatShine.init(from:)(a1, a2);
}

uint64_t FormatShine.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  __int128 v22;

  v3 = v2;
  v21[1] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v21[0] = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA5371C4();
    v22 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E726E258;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = (_QWORD *)v21[0];
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA5371C4()
{
  unint64_t result;

  result = qword_1ED3A5498;
  if (!qword_1ED3A5498)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6DE0, &_s10CodingTypeON_32);
    atomic_store(result, (unint64_t *)&qword_1ED3A5498);
  }
  return result;
}

uint64_t sub_1BA537208@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatCompilerOptions.Newsroom.Environments.init(from:)(a1, a2);
}

uint64_t FormatCompilerOptions.Newsroom.Environments.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _OWORD *v34;
  __int128 v35;
  char v36;
  __int128 v37;

  v3 = v2;
  v34 = a2;
  sub_1BAE74B54();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE74BCC();
  sub_1BA4A2870(&qword_1ED3D0FA0, (uint64_t (*)(uint64_t))sub_1BAE74BCC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v29 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v29);
  }
  v10 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v6;
  if ((v10 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v18 = v7;
      v19 = v12;
      v20 = *((_QWORD *)v15 - 2);
      v21 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *(&v31 - 4) = (uint64_t)&_s10CodingKeysON_239;
      *(&v31 - 3) = sub_1BAE74C4C();
      *(&v31 - 2) = sub_1BA537600();
      *(&v31 - 1) = sub_1BAE74C90();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E7253CE0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
      a1 = v33;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA537644();
  v35 = 0uLL;
  v36 = 0;
  sub_1BB874068();
  v16 = v6;
  v17 = v37;
  v35 = xmmword_1BB8A1A10;
  v36 = 0;
  sub_1BB874068();
  v25 = *((_QWORD *)&v37 + 1);
  v32 = v37;
  v35 = xmmword_1BB8D2D60;
  v36 = 0;
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  v27 = v37;
  v28 = v25;
  v29 = (uint64_t)v33;
  v30 = v34;
  *v34 = v17;
  *((_QWORD *)v30 + 2) = v32;
  *((_QWORD *)v30 + 3) = v28;
  v30[2] = v27;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

unint64_t sub_1BA537600()
{
  unint64_t result;

  result = qword_1ED3C9460;
  if (!qword_1ED3C9460)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0F78, &_s10CodingKeysON_239);
    atomic_store(result, (unint64_t *)&qword_1ED3C9460);
  }
  return result;
}

unint64_t sub_1BA537644()
{
  unint64_t result;

  result = qword_1ED3B6500;
  if (!qword_1ED3B6500)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerOptions.Newsroom.Environment, &type metadata for FormatCompilerOptions.Newsroom.Environment);
    atomic_store(result, (unint64_t *)&qword_1ED3B6500);
  }
  return result;
}

uint64_t sub_1BA537688@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorColorExpression.init(from:)(a1, a2);
}

uint64_t FormatColorColorExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE88F80();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE88FF8();
  sub_1BA4A2870(&qword_1ED3ABF88, (uint64_t (*)(uint64_t))sub_1BAE88FF8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v26 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_160;
      *(&v26 - 3) = sub_1BAE89078();
      *(&v26 - 2) = sub_1BA5379FC();
      *(&v26 - 1) = sub_1BAE890BC();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726AFC0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA62C9A0();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BA5820C4();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  *v12 = v18;
  v12[1] = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA5379FC()
{
  unint64_t result;

  result = qword_1ED3A41E8;
  if (!qword_1ED3A41E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC9B0, &_s10CodingKeysON_160);
    atomic_store(result, (unint64_t *)&qword_1ED3A41E8);
  }
  return result;
}

uint64_t sub_1BA537A40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatProgressViewNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatProgressViewNodeStyle.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v3 = v2;
  v36 = a2;
  sub_1BAE7A5DC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7A654();
  sub_1BA4A2870(&qword_1ED3ABF18, (uint64_t (*)(uint64_t))sub_1BAE7A654, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v29 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v29);
  }
  v10 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v10 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v22 = sub_1BAE1562C();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v21;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v20, 1);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v6);
      a1 = v31;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v32 = 0uLL;
  v33 = 0;
  sub_1BB8740D4();
  v18 = v34;
  v19 = v35;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v32 = xmmword_1BB8A1A10;
  v33 = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v25 = v34;
  v32 = xmmword_1BB8D2D60;
  v33 = 0;
  sub_1BA62C9A0();
  sub_1BB874068();
  v26 = v34;
  v32 = xmmword_1BB8D2D70;
  v33 = 0;
  sub_1BB874068();
  v30 = v34;
  v32 = xmmword_1BB8D2D90;
  v33 = 0;
  v27 = sub_1BB874038();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v13);
  v28 = v36;
  *v36 = v18;
  v28[1] = v19;
  v28[2] = v25;
  v28[3] = v26;
  v29 = (uint64_t)v31;
  v28[4] = v30;
  *((_BYTE *)v28 + 40) = v27;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

unint64_t sub_1BA537E90()
{
  unint64_t result;

  result = qword_1ED3A7FF8;
  if (!qword_1ED3A7FF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF980, &_s10CodingKeysON_210);
    atomic_store(result, (unint64_t *)&qword_1ED3A7FF8);
  }
  return result;
}

_QWORD *_s8NewsFeed14FeedScoredItemVwCP_0(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_unknownObjectRetain();
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t sub_1BA537F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_1BA73B1CC(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 16))((*(unsigned __int8 *)(v9 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), (*(unsigned __int8 *)(v9 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatSelector(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatSyncImageContent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for SportsDataVisualizationEventStatus(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for FormatBorder()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA538068(_QWORD *a1)
{
  return FormatCommandOpenURL.encode(to:)(a1);
}

uint64_t FormatCommandOpenURL.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];

  v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v2);
  v37[0] = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v37 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v37 - v8;
  v10 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1BA6B8518();
  sub_1BA6EC090((uint64_t)&type metadata for FormatCodingKeys, v21, v20, (uint64_t)&type metadata for FormatVersions.JazzkonC, v19, (uint64_t)&off_1E734BD80, (uint64_t)v18);
  sub_1BA4C2DD8(v37[3], (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v23 = *v15;
      v24 = v15[1];
      v25 = v15[2];
      if (qword_1ED3C6D60 != -1)
        swift_once();
      v26 = sub_1BB86EB84();
      v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C38);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v6, v27, v26);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BACF1B54(2, v23, v24, v25, (uint64_t)v6);
      sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
      swift_bridgeObjectRelease();
    }
    else
    {
      v31 = *v15;
      v32 = v15[1];
      v33 = v15[2];
      if (qword_1ED3C2478 != -1)
        swift_once();
      v34 = sub_1BB86EB84();
      v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED476C20);
      v36 = v37[0];
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v37[0], v35, v34);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA5384C0(3, v31, v32, v33, v36);
      sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA5193C4((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    if (qword_1ED3C2478 != -1)
      swift_once();
    v28 = sub_1BB86EB84();
    v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v9, v29, v28);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACF19C8(0, (uint64_t)v12, (uint64_t)v9);
    sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    return sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
}

uint64_t sub_1BA5384C0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEFAB68;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA538628();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA538628()
{
  unint64_t result;

  result = qword_1ED39B648;
  if (!qword_1ED39B648)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB889E78, &type metadata for FormatCommandOpenURL.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39B648);
  }
  return result;
}

uint64_t sub_1BA53866C()
{
  sub_1BA53868C();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA53868C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA5386F4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BA5386F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result;

  if (a9 != 1)
  {
    if (a9)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA5387A0(_QWORD *a1)
{
  return FormatTextNodeAttachmentAlignment.encode(to:)(a1);
}

uint64_t FormatTextNodeAttachmentAlignment.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  _BYTE v22[24];
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v19 = (char *)&v19 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - v8;
  v21 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476C20);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v9, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v15 = v24;
  sub_1BA69F160((uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, v10, v11);
  result = sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v15)
  {
    v17 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    v18 = (uint64_t)v20;
    v14(v20, v13, v12);
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v18, (uint64_t)sub_1BA90CF04, 0, v17, v24);
    sub_1BA4A2E80(v18, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    sub_1BB8743E0();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  return result;
}

uint64_t sub_1BA538AC4(_QWORD *a1)
{
  return FormatContentMode.encode(to:)(a1);
}

uint64_t FormatContentMode.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[9];
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v29[8] = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v29[7] = (char *)v29 - v6;
  MEMORY[0x1E0C80A78](v7);
  v29[6] = (char *)v29 - v8;
  MEMORY[0x1E0C80A78](v9);
  v29[5] = (char *)v29 - v10;
  MEMORY[0x1E0C80A78](v11);
  v29[4] = (char *)v29 - v12;
  MEMORY[0x1E0C80A78](v13);
  v29[3] = (char *)v29 - v14;
  MEMORY[0x1E0C80A78](v15);
  v29[2] = (char *)v29 - v16;
  MEMORY[0x1E0C80A78](v17);
  v29[1] = (char *)v29 - v18;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v29 - v21;
  v30 = *v1;
  v31 = a1;
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v26, v25);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v27 = v32;
  sub_1BA69F160((uint64_t)v22, (uint64_t)sub_1BA90CF04, 0, v23, v24);
  if (!v27)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA5392EC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t FormatNodeBinder.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA752890(v0 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA53941C()
{
  sub_1BA539478();
  return sub_1BB872D60();
}

unint64_t sub_1BA539478()
{
  unint64_t result;

  result = qword_1ED3B4878;
  if (!qword_1ED3B4878)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontWeight, &type metadata for FormatFontWeight);
    atomic_store(result, (unint64_t *)&qword_1ED3B4878);
  }
  return result;
}

uint64_t destroy for FormatTextNodeFormat.Token()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA5394F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatCustomNodeStyle.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t FormatCustomNodeStyle.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;

  v53 = *v1;
  v3 = type metadata accessor for FormatOption();
  v49 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v48 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA539B10(0);
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86C8E0();
  v8 = *(char **)(v7 - 8);
  v51 = v7;
  v52 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3CFB08, (uint64_t (*)(void))sub_1BA539ACC, (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v48 - v14;
  v16 = a1[3];
  v54 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1BA539ACC();
  v17 = v56;
  sub_1BB87468C();
  if (v17)
  {
    v21 = v55;
    v22 = (uint64_t)v54;
    swift_deallocPartialClassInstance();
  }
  else
  {
    v18 = v52;
    v56 = v13;
    v59 = 0;
    v19 = sub_1BB87402C();
    v25 = v20;
    v21 = v55;
    if (v20)
    {
      v26 = v19;
    }
    else
    {
      sub_1BB86C8D4();
      v26 = sub_1BB86C8C8();
      v25 = v27;
      (*((void (**)(char *, uint64_t))v18 + 1))(v10, v51);
    }
    swift_beginAccess();
    *(_QWORD *)(v21 + 16) = v26;
    *(_QWORD *)(v21 + 24) = v25;
    LOBYTE(v58) = 1;
    v28 = sub_1BB874098();
    v29 = v56;
    *(_QWORD *)(v21 + 32) = v28;
    *(_QWORD *)(v21 + 40) = v30;
    LOBYTE(v58) = 2;
    *(_BYTE *)(v21 + 48) = sub_1BB874038();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    LOBYTE(v57) = 3;
    sub_1BA56E250();
    sub_1BB874068();
    *(_QWORD *)(v21 + 56) = v58;
    sub_1BA539B2C();
    v31 = v12;
    v33 = v32;
    LOBYTE(v58) = 4;
    sub_1BA50AD30(&qword_1ED3C4698, 255, (uint64_t (*)(uint64_t))sub_1BA539B2C, MEMORY[0x1E0DB3610]);
    v34 = (uint64_t)v50;
    sub_1BB874068();
    v53 = v31;
    v35 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v34, 1, v33) == 1)
    {
      sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))sub_1BA539B10);
      v36 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v36 = sub_1BB86DD08();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v33);
    }
    v37 = v49;
    swift_beginAccess();
    *(_QWORD *)(v21 + 64) = v36;
    v38 = *(_QWORD *)(v21 + 56);
    if (!v38 || (v39 = *(_QWORD *)(v38 + 16)) == 0)
    {
LABEL_18:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v53);
      v23 = (uint64_t)v54;
      goto LABEL_5;
    }
    v52 = v15;
    v40 = v38 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    v41 = *(_QWORD *)(v37 + 72);
    swift_bridgeObjectRetain();
    v42 = (uint64_t *)v48;
    while (1)
    {
      sub_1BA900B30(v40, (uint64_t)v42);
      v57 = v42[2];
      FormatOptionValue.type.getter();
      if (v60 == 2)
        break;
      sub_1BA4A2E80((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v40 += v41;
      if (!--v39)
      {
        swift_bridgeObjectRelease();
        v15 = v52;
        v29 = v56;
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
    v44 = *v42;
    v43 = v42[1];
    v46 = *(_QWORD *)(v21 + 32);
    v45 = *(_QWORD *)(v21 + 40);
    sub_1BA98D1F0();
    swift_allocError();
    *v47 = v44;
    v47[1] = v43;
    v47[2] = v46;
    v47[3] = v45;
    v47[4] = 0x2000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1BA4A2E80((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v53);
    swift_release();
    v22 = (uint64_t)v54;
  }
  v23 = v22;
LABEL_5:
  __swift_destroy_boxed_opaque_existential_1(v23);
  return v21;
}

unint64_t sub_1BA539ACC()
{
  unint64_t result;

  result = qword_1ED3C9738;
  if (!qword_1ED3C9738)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89C8AC, &type metadata for FormatCustomNodeStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3C9738);
  }
  return result;
}

void sub_1BA539B10(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C46A8, (uint64_t (*)(uint64_t))sub_1BA539B2C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA539B2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C46A0)
  {
    sub_1BA82B1F8();
    sub_1BA82B23C();
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C46A0);
  }
}

uint64_t type metadata accessor for FormatItemNodeLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t FeedPoolManager.init(feed:service:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  char v15;
  uint64_t v16;

  v3 = v2;
  v5 = *(_QWORD **)v3;
  v6 = sub_1BB86E50C();
  MEMORY[0x1E0C80A78](v6);
  v7 = *a1;
  v16 = a1[3];
  v15 = *((_BYTE *)a1 + 32);
  v8 = v5[14];
  v9 = v5[10];
  v11 = type metadata accessor for FeedPoolManager.Key(255, v9, v5[11], v10);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  MEMORY[0x1BCCE5B24](&unk_1BB8F66F0, v11);
  sub_1BB86E7B8();
  v14 = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v3 + v8) = sub_1BB86E7A0();
  v12 = *(_QWORD *)(*(_QWORD *)v3 + 120);
  sub_1BB86E0F8();
  sub_1BA539DA4();
  *(_QWORD *)(v3 + v12) = sub_1BB86E0D4();
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 128)) = 0x4072C00000000000;
  *(_QWORD *)(v3 + 16) = v7;
  *(_OWORD *)(v3 + 24) = v14;
  *(_QWORD *)(v3 + 40) = v16;
  *(_BYTE *)(v3 + 48) = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 104), a2, v9);
  return v3;
}

uint64_t type metadata accessor for FeedPoolManager.Key(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedPoolManager.Key);
}

uint64_t sub_1BA539DA4()
{
  sub_1BB86E50C();
  sub_1BA4A2870(&qword_1ED3B07F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], MEMORY[0x1E0DB41A8]);
  sub_1BA539E4C(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9250, (uint64_t (*)(uint64_t))sub_1BA539E4C, MEMORY[0x1E0DEAF38]);
  return sub_1BB873BC4();
}

void sub_1BA539E4C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B9248, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BA539E68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeAlternativeLogic.init(from:)(a1, a2);
}

uint64_t FormatTextNodeAlternativeLogic.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  _QWORD *v24;
  __int128 v25;
  uint64_t v27;

  v3 = v2;
  v27 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v7;
  v14 = v6;
  v15 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA53A2DC();
    v25 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v16 = sub_1BB8740EC();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v18 = (unint64_t *)(v16 + 40);
  while (1)
  {
    v19 = *v18;
    if (*v18 >= 4)
      break;
    v18 += 2;
    if (!--v17)
      goto LABEL_8;
  }
  v20 = *(v18 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v21 = v20;
  *(_QWORD *)(v21 + 8) = v19;
  *(_QWORD *)(v21 + 16) = &unk_1E726F108;
  *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v20, v19);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v14);
  v10 = v24;
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA53A2DC()
{
  unint64_t result;

  result = qword_1ED3CCFE0;
  if (!qword_1ED3CCFE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4F28, &_s10CodingTypeON_8);
    atomic_store(result, (unint64_t *)&qword_1ED3CCFE0);
  }
  return result;
}

unint64_t sub_1BA53A320()
{
  unint64_t result;

  result = qword_1ED3B8588;
  if (!qword_1ED3B8588)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.TextLines, &type metadata for FormatTextNodeAlternativeLogic.TextLines);
    atomic_store(result, (unint64_t *)&qword_1ED3B8588);
  }
  return result;
}

uint64_t sub_1BA53A364@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeAlternative.init(from:)(a1, a2);
}

uint64_t FormatTextNodeAlternative.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  uint64_t v31;

  v3 = v2;
  v28 = a2;
  sub_1BAE738B0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE73928();
  sub_1BA4A2870(&qword_1ED3D11D0, (uint64_t (*)(uint64_t))sub_1BAE73928, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v28 = v7;
      v19 = *((_QWORD *)v15 - 2);
      v20 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v21);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_246;
      *(&v28 - 3) = sub_1BAE739A8();
      *(&v28 - 2) = sub_1BA53A734();
      *(&v28 - 1) = sub_1BAE739EC();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E724FF30);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v29 = 0uLL;
  v30 = 0;
  v16 = sub_1BB874098();
  v18 = v17;
  v29 = xmmword_1BB8A1A10;
  v30 = 0;
  sub_1BA650B5C();
  sub_1BB8740D4();
  v25 = v31;
  v29 = xmmword_1BB8D2D60;
  v30 = 0;
  sub_1BA53A778();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v26 = v31;
  v27 = (_QWORD *)v28;
  *(_QWORD *)v28 = v16;
  v27[1] = v18;
  v27[2] = v25;
  v27[3] = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA53A734()
{
  unint64_t result;

  result = qword_1ED3CB268;
  if (!qword_1ED3CB268)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1598, &_s10CodingKeysON_246);
    atomic_store(result, (unint64_t *)&qword_1ED3CB268);
  }
  return result;
}

unint64_t sub_1BA53A778()
{
  unint64_t result;

  result = qword_1ED3B8590;
  if (!qword_1ED3B8590)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic, &type metadata for FormatTextNodeAlternativeLogic);
    atomic_store(result, (unint64_t *)&qword_1ED3B8590);
  }
  return result;
}

uint64_t sub_1BA53A7BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA53A7E8();
  *a1 = result;
  return result;
}

uint64_t sub_1BA53A7E8()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1BA53A830@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA53A844(a1);
}

uint64_t sub_1BA53A844@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v1 + 24) + 16))(*(_QWORD *)(v1 + 16));
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA53A888(uint64_t a1, uint64_t a2)
{
  return BlueprintItem<>.feedContextIdentifier.getter(a1, *(_QWORD *)(a2 - 8));
}

uint64_t BlueprintItem<>.feedContextIdentifier.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86F76C();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(v3, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t sub_1BA53A92C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA53A960 + 4 * byte_1BB8AEFEB[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA53A960()
{
  return 0x746174536D6F7266;
}

uint64_t sub_1BA53A97C()
{
  return 0x65746174536F74;
}

uint64_t sub_1BA53A994()
{
  return 1885433183;
}

uint64_t sub_1BA53A9A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA699264(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA53A9CC(char a1)
{
  if (!a1)
    return 0x65756C6176;
  if (a1 == 1)
    return 0x69724F6E67696C61;
  return 1885433183;
}

uint64_t FeedItemLayoutAttributes.formatImageRequests(options:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  v3 = type metadata accessor for FormatItemNodeLayoutContext();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)v1 >> 60;
  v8 = 0;
  if (((1 << v7) & 0x77F) == 0)
  {
    if ((_DWORD)v7 == 7)
    {
      sub_1BA641024();
      v10 = swift_projectBox();
      sub_1BA4C2DD8(v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
      v11 = *((_QWORD *)v6 + 1);
      swift_retain();
      v8 = sub_1BA65B3C8(a1, v11);
      swift_release();
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
    }
    else
    {
      v12[1] = *(_QWORD *)(*(_QWORD *)v1 + 16);
      return FeedItemLayoutAttributes.formatImageRequests(options:)(a1, v4);
    }
  }
  return v8;
}

uint64_t sub_1BA53AB48@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA53AB74();
  *a1 = result;
  return result;
}

uint64_t sub_1BA53AB74()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1BA53ABBC(_QWORD *a1)
{
  return FormatColorBlendProcessor.encode(to:)(a1);
}

uint64_t FormatColorBlendProcessor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[12];
  int v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v27 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v24[-v6];
  sub_1BAE88E90(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)v1;
  v26 = *(_QWORD *)(v1 + 8);
  v25 = *(unsigned __int8 *)(v1 + 16);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BAE88D88();
  v15 = sub_1BA4A2870(&qword_1ED3D11A0, (uint64_t (*)(uint64_t))sub_1BAE88D88, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatColorBlendProcessor, v16, v12, (uint64_t)&type metadata for FormatColorBlendProcessor, v14, (uint64_t)&type metadata for FormatVersions.StarSkyC, v13, (uint64_t)v10, v15, (uint64_t)&off_1E734BC40);
  v17 = qword_1ED3C6D70;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C50);
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v28;
  sub_1BAD1185C(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v21)
  {
    v22 = (uint64_t)v27;
    v20(v27, v19, v18);
    swift_storeEnumTagMultiPayload();
    sub_1BAD42158(v26, v25, 1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE88E90);
}

uint64_t sub_1BA53AE78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageAdjustmentFilter.init(from:)(a1, a2);
}

uint64_t FormatImageAdjustmentFilter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];

  v20[1] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v20[0] = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA53B348();
    v20[2] = 0;
    v20[3] = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E724F6B0;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = (_QWORD *)v20[0];
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA53B118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BA53B12CLL);
}

void sub_1BA53B134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 2;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 3;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 4;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 5;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 6;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 7;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B1DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 8;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 9;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 10;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 11;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 12;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 13;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 14;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B2A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)v4 = 15;
  *(_BYTE *)(v4 + 8) = 1;
  JUMPOUT(0x1BA53B0F0);
}

void sub_1BA53B2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA4CDF6C(0, &qword_1ED39F7E8, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BAE72E54();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BA53B338);
  }
  JUMPOUT(0x1BA53B004);
}

unint64_t sub_1BA53B348()
{
  unint64_t result;

  result = qword_1ED3CC098;
  if (!qword_1ED3CC098)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D18D0, &_s10CodingTypeON_175);
    atomic_store(result, (unint64_t *)&qword_1ED3CC098);
  }
  return result;
}

uint64_t sub_1BA53B38C(_QWORD *a1)
{
  return FormatImageAdjustment.encode(to:)(a1);
}

uint64_t FormatImageAdjustment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v36[136];
  __int128 v37[8];
  _BYTE v38[136];
  _BYTE v39[136];
  _BYTE v40[144];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v36[-v8 - 8];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v36[-v11 - 8];
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BA895BCC(v2, (uint64_t)v39);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatImageAdjustment, v19, v16, (uint64_t)&type metadata for FormatImageAdjustment, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v17, (uint64_t)v15, v18, (uint64_t)&off_1E734BD00);
  sub_1BA895BCC((uint64_t)v39, (uint64_t)v40);
  v20 = sub_1BA895C08((uint64_t)v40);
  if (!v20)
  {
    v26 = (__int128 *)sub_1BA895E68((uint64_t)v40);
    sub_1BA896178(v26, (uint64_t)v37);
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v27 = sub_1BB86EB84();
    v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C38);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v12, v28, v27);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACEF768(0, v37, (uint64_t)v12);
    v29 = (uint64_t)v12;
    goto LABEL_12;
  }
  if (v20 != 1)
  {
    v30 = sub_1BA895E68((uint64_t)v40);
    v31 = *(_QWORD *)v30;
    v32 = *(_BYTE *)(v30 + 8);
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v33 = sub_1BB86EB84();
    v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476C38);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v6, v34, v33);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA53B774(2, v31, v32, (uint64_t)v6);
    v29 = (uint64_t)v6;
LABEL_12:
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  v21 = sub_1BA895E68((uint64_t)v40);
  sub_1BA53BAD8(v21, (uint64_t)v38);
  sub_1BA895BCC((uint64_t)v39, (uint64_t)v36);
  v22 = sub_1BA895E68((uint64_t)v36);
  sub_1BAC68720(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
  if (qword_1ED3C6D60 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C38);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v9, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA53B8E0(1, (uint64_t)v38, (uint64_t)v9);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BAC68720((uint64_t)v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BAC686C8);
}

uint64_t sub_1BA53B774(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3 & 1;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFAD34;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA53BA50();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA53BA94();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA53B8E0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  _BYTE v16[136];

  v16[135] = a1;
  sub_1BA53BAD8(a2, (uint64_t)v16);
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFAD34;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA53BA50();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA53BB14();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA53BA50()
{
  unint64_t result;

  result = qword_1ED3A6BB8;
  if (!qword_1ED3A6BB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1130, &_s10CodingTypeON_171);
    atomic_store(result, (unint64_t *)&qword_1ED3A6BB8);
  }
  return result;
}

unint64_t sub_1BA53BA94()
{
  unint64_t result;

  result = qword_1ED3A04D8;
  if (!qword_1ED3A04D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentFilter, &type metadata for FormatImageAdjustmentFilter);
    atomic_store(result, (unint64_t *)&qword_1ED3A04D8);
  }
  return result;
}

uint64_t sub_1BA53BAD8(uint64_t a1, uint64_t a2)
{
  __swift_memcpy129_8(a2, a1);
  return a2;
}

unint64_t sub_1BA53BB14()
{
  unint64_t result;

  result = qword_1ED3A04C0;
  if (!qword_1ED3A04C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend, &type metadata for FormatImageAdjustmentBlend);
    atomic_store(result, (unint64_t *)&qword_1ED3A04C0);
  }
  return result;
}

uint64_t sub_1BA53BB58@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatHeadlineBinding.Command.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.Command.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v3 = v2;
  v21 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v21;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v18 = v17;
      *(_QWORD *)(v18 + 8) = v16;
      *(_QWORD *)(v18 + 16) = &unk_1E726BFF0;
      *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v17, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA53BDE8();
  v22 = 0;
  v23 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *v12 = byte_1BB8D2D28[v24];
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA53BDE8()
{
  unint64_t result;

  result = qword_1ED3B66B8;
  if (!qword_1ED3B66B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91536C, &_s14descr1E730C861C7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3B66B8);
  }
  return result;
}

uint64_t sub_1BA53BE2C@<X0>(uint64_t a1@<X2>, void **a2@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA53BE60(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BA53BE60(uint64_t a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *a2;
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3C4A40, (uint64_t)&type metadata for LikingCommandContext, MEMORY[0x1E0DBC428]);
  if (qword_1ED3BA858 != -1)
    swift_once();
  if ((sub_1BB87144C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_allLikedArticleIDs);
    swift_bridgeObjectRetain();
    v5 = objc_msgSend(v3, sel_identifier);
  }
  else
  {
    if (qword_1ED3BA8C0 != -1)
      swift_once();
    if ((sub_1BB87144C() & 1) == 0)
    {
      v10 = 0;
      return v10 & 1;
    }
    v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20LikingCommandHandler_allDislikedArticleIDs);
    swift_bridgeObjectRetain();
    v5 = objc_msgSend(v3, sel_identifier);
  }
  v6 = v5;
  v7 = sub_1BB8729A0();
  v9 = v8;

  v10 = sub_1BA761FE4(v7, v9, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_1BA53BFC4()
{
  sub_1BA53C06C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA53C010()
{
  sub_1BA53C06C();
  return sub_1BB872D60();
}

unint64_t sub_1BA53C06C()
{
  unint64_t result;

  result = qword_1ED3C7880;
  if (!qword_1ED3C7880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6D08, &_s10CodingTypeON_119);
    atomic_store(result, (unint64_t *)&qword_1ED3C7880);
  }
  return result;
}

_QWORD *_s8NewsFeed45FormatButtonNodeStateMaskDataLayoutAttributesVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BA53C0FC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unsigned int EnumCaseMultiPayload;
  uint64_t (*v5)();
  uint64_t v7;

  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6A81A0(v3, (uint64_t)v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload == 2)
      v5 = type metadata accessor for FeedItemSupplementaryAttributes;
    else
      v5 = type metadata accessor for InternalErrorViewLayout.Context;
    sub_1BA4A2E80((uint64_t)v2, (uint64_t (*)(_QWORD))v5);
  }
  return 0;
}

uint64_t sub_1BA53C190(_QWORD *a1)
{
  return FormatWebEmbedBinding.URL.encode(to:)(a1);
}

uint64_t FormatWebEmbedBinding.URL.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatWebEmbedBinding.URL, v16, v13, (uint64_t)&type metadata for FormatWebEmbedBinding.URL, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD80);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED3C6D50 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476BF0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA53C40C(1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA53C40C(0, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA53C40C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFB5A0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA53C530();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA53C530()
{
  unint64_t result;

  result = qword_1ED3A6D20;
  if (!qword_1ED3A6D20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.URL.CodingType, &type metadata for FormatWebEmbedBinding.URL.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D20);
  }
  return result;
}

uint64_t FormatContentSubgroup.ResolvedContainer.layout.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32) & 0x7FFFFFFFFFFFFFFFLL;
  sub_1BA6D78DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BA53C61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, _QWORD *);
  id v23;
  _QWORD v24[2];

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v24 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 36));
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6340], v5);
    sub_1BA656FEC();
    sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v21 + v20) = 1;
    (*(void (**)(void))(v19 + 104))();
    v22 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
    sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v22, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v23 = v17;
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA53C8DC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1BA53CDBC(0, qword_1ED3CA7A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - v4;
  swift_retain();
  sub_1BB86E878();
  swift_release();
  sub_1BA53CD68((uint64_t)v5, (uint64_t)v2);
  swift_retain();
  sub_1BB86E884();
  swift_release();
  sub_1BA53CD1C((uint64_t)v5);
  v6 = type metadata accessor for SportsDataConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1BA53CD68((uint64_t)v5, (uint64_t)v2);
  swift_retain();
  sub_1BB86E884();
  swift_release();
  return sub_1BA53CD1C((uint64_t)v5);
}

_QWORD *sub_1BA53CA04(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _UNKNOWN **v15;

  v4 = sub_1BB873450();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB87342C();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v9);
  v14 = type metadata accessor for WebEmbedDataVisualizationDataService(0);
  v15 = &off_1E727BD98;
  *(_QWORD *)&v13 = a1;
  v10 = MEMORY[0x1E0DEE9D8];
  a2[7] = sub_1BA4A4E38(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for WebEmbedDataSourceCache();
  swift_allocObject();
  a2[8] = sub_1BB44BB48();
  sub_1BB46CB44();
  swift_allocObject();
  a2[9] = sub_1BB86E7AC();
  type metadata accessor for SportsRecordFactory();
  a2[10] = swift_allocObject();
  a2[11] = 30;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  sub_1BB872658();
  v12 = v10;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1BA81D850(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9660, (uint64_t (*)(uint64_t))sub_1BA81D850, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D0], v4);
  a2[12] = sub_1BB87348C();
  sub_1BA4CECCC(&v13, (uint64_t)(a2 + 2));
  *(_QWORD *)(a2[8] + 24) = &off_1E729D650;
  swift_unknownObjectWeakAssign();
  return a2;
}

void sub_1BA53CC84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BB86C67C();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    a3(255);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v5, MEMORY[0x1E0CB0018]);
    v6 = sub_1BB86E7B8();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BA53CD1C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA53CDBC(0, qword_1ED3CA7A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA53CD68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA53CDBC(0, qword_1ED3CA7A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BA53CDBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for SportsDataConfiguration();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA53CE14()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

NewsFeed::FormatBorderEdge_optional __swiftcall FormatBorderEdge.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatBorderEdge_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA53CE78@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatWebEmbedNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatWebEmbedNodeStyle.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  unsigned __int8 v23;
  int v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 v35;
  char v36;
  __int128 v37;
  unsigned __int8 v38;
  _QWORD *v39;

  v3 = v2;
  v39 = a2;
  sub_1BAE7B700();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7B778();
  sub_1BA4A2870(&qword_1ED3D1100, (uint64_t (*)(uint64_t))sub_1BAE7B778, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  v10 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v10 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v15 - 2);
      v17 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v19 = sub_1BAE156BC();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v20 = v18;
      *(_QWORD *)(v20 + 8) = v17;
      *(_QWORD *)(v20 + 16) = v19;
      *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      a1 = v34;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v37 = 0uLL;
  v38 = 0;
  sub_1BB8740D4();
  v16 = v35;
  v35 = xmmword_1BB8A1A10;
  v36 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v33 = v16;
  v22 = v37;
  v23 = v38;
  v35 = xmmword_1BB8D2D60;
  v36 = 0;
  sub_1BB874068();
  v32 = v37;
  v24 = v38;
  v37 = xmmword_1BB8D2D70;
  v38 = 0;
  v30 = sub_1BB874038();
  v31 = v24;
  v37 = xmmword_1BB8D2D90;
  v38 = 0;
  v25 = sub_1BB874038();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v26 = v39;
  v27 = (uint64_t)v34;
  *v39 = v33;
  v26[1] = *((_QWORD *)&v16 + 1);
  *((_OWORD *)v26 + 1) = v22;
  *((_BYTE *)v26 + 32) = v23;
  v28 = *((_QWORD *)&v32 + 1);
  v26[5] = v32;
  v26[6] = v28;
  *((_BYTE *)v26 + 56) = v31;
  *((_BYTE *)v26 + 57) = v30;
  *((_BYTE *)v26 + 58) = v25;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

unint64_t sub_1BA53D2DC()
{
  unint64_t result;

  result = qword_1ED3CA638;
  if (!qword_1ED3CA638)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF438, &_s10CodingKeysON_205);
    atomic_store(result, (unint64_t *)&qword_1ED3CA638);
  }
  return result;
}

uint64_t sub_1BA53D320@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatStyleImage.init(from:)(a1, a2);
}

uint64_t FormatStyleImage.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  __int128 v44;
  __int128 v45;
  char v46;
  __int128 v47;
  char v48;

  v43 = a2;
  sub_1BA6927D0();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEC05C0();
  v41 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC0638();
  sub_1BA4A2870(&qword_1ED3D0C60, (uint64_t (*)(uint64_t))sub_1BAEC0638, (uint64_t)&unk_1BB8FFC6C);
  v11 = (void *)v44;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
    goto LABEL_13;
  *(_QWORD *)&v44 = 0;
  v38 = v5;
  v39 = v7;
  v13 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_1BB872874();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v16 = v41;
  v15 = v42;
  v17 = v43;
  if ((v13 & 1) != 0)
  {
    v18 = sub_1BB8740EC();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = (_BYTE *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19)
          goto LABEL_7;
      }
      v23 = *((_QWORD *)v20 - 2);
      v24 = *((_QWORD *)v20 - 1);
      swift_bridgeObjectRetain_n();
      v25 = swift_bridgeObjectRelease();
      v26 = v10;
      MEMORY[0x1E0C80A78](v25);
      *(&v36 - 4) = (uint64_t)&_s10CodingKeysON_36;
      *(&v36 - 3) = sub_1BAEC06B8();
      *(&v36 - 2) = sub_1BA53D7E4();
      *(&v36 - 1) = sub_1BAEC06FC();
      swift_getKeyPath();
      swift_retain();
      v27 = sub_1BAE71220((uint64_t)&unk_1E726EB18);
      swift_release_n();
      sub_1BA98D1F0();
      v28 = swift_allocError();
      *(_QWORD *)v29 = v23;
      *(_QWORD *)(v29 + 8) = v24;
      *(_QWORD *)(v29 + 16) = v27;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      v30 = v23;
      v12 = (void *)v28;
      sub_1BA69C828(v30, v24, 1);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v26, v15);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA650F04();
  v47 = 0uLL;
  v48 = 0;
  v21 = (void *)v44;
  sub_1BB8740D4();
  v12 = v21;
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v15);
LABEL_12:
    a1 = v40;
LABEL_13:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    v31 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  v22 = v45;
  type metadata accessor for FormatImageNodeStyle();
  v47 = xmmword_1BB8A1A10;
  v48 = 0;
  sub_1BA4A2870(&qword_1ED3C8E98, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNodeStyle, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
  sub_1BB8740D4();
  v33 = v45;
  v44 = xmmword_1BB8D2D60;
  v47 = xmmword_1BB8D2D60;
  v48 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v37 = v33;
    v45 = v44;
    v46 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v34 = v39;
    sub_1BB8740D4();
    v35 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v4);
    v33 = v37;
  }
  else
  {
    v35 = MEMORY[0x1E0DEE9E8];
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v15);
  *v17 = v22;
  v17[1] = v33;
  v17[2] = v35;
  v31 = (uint64_t)v40;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

unint64_t sub_1BA53D7E4()
{
  unint64_t result;

  result = qword_1ED3C76E8;
  if (!qword_1ED3C76E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5D18, &_s10CodingKeysON_36);
    atomic_store(result, (unint64_t *)&qword_1ED3C76E8);
  }
  return result;
}

uint64_t sub_1BA53D828(_QWORD *a1)
{
  return FormatResizeConstraint.encode(to:)(a1);
}

uint64_t FormatResizeConstraint.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  sub_1BAEB7460(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE *)v1;
  v13 = *(_QWORD *)(v1 + 16);
  v25 = *(_QWORD *)(v1 + 8);
  v26 = v13;
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAEB7358();
  v17 = sub_1BA4A2870(&qword_1ED3D1050, (uint64_t (*)(uint64_t))sub_1BAEB7358, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatResizeConstraint, v18, v14, (uint64_t)&type metadata for FormatResizeConstraint, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v11, v17, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v8, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD15F34(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v22 = (uint64_t)v27;
    v21(v27, v20, v19);
    swift_storeEnumTagMultiPayload();
    v23 = v26;
    swift_bridgeObjectRetain();
    sub_1BAD16094(v25, v23, 1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAEB7460);
}

unint64_t sub_1BA53DAE4()
{
  unint64_t result;

  result = qword_1ED39B888;
  if (!qword_1ED39B888)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizeConstraint.Dimension, &type metadata for FormatResizeConstraint.Dimension);
    atomic_store(result, (unint64_t *)&qword_1ED39B888);
  }
  return result;
}

uint64_t sub_1BA53DB28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.Text.init(from:)(a1, a2);
}

uint64_t FormatGroupBinding.Text.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
    goto LABEL_11;
  }
  v11 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BA53E1F8();
    v24 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v14 = sub_1BB8740EC();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (unint64_t *)(v14 + 40);
  while (1)
  {
    v17 = *v16;
    if (*v16 >= 4)
      break;
    v16 += 2;
    if (!--v15)
      goto LABEL_8;
  }
  v18 = *(v16 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = &unk_1E7267E50;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v10 = v22;
LABEL_11:
  sub_1BA7F8B78(v10, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BA53E1F8()
{
  unint64_t result;

  result = qword_1ED3C7C70;
  if (!qword_1ED3C7C70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0670, &_s10CodingTypeON_164);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C70);
  }
  return result;
}

unint64_t sub_1BA53E23C()
{
  unint64_t result;

  result = qword_1ED3B4A80;
  if (!qword_1ED3B4A80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Text, &type metadata for FormatTagBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3B4A80);
  }
  return result;
}

uint64_t sub_1BA53E280@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeAlternativeLogic.TextLines.init(from:)(a1, a2);
}

uint64_t FormatTextNodeAlternativeLogic.TextLines.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v25 = a2;
  sub_1BAEC4F6C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEC4FE4();
  sub_1BA4A2870(&qword_1ED3D1340, (uint64_t (*)(uint64_t))sub_1BAEC4FE4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v25;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v16 - 2);
      v19 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v7;
      MEMORY[0x1E0C80A78](v20);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_19;
      *(&v25 - 3) = sub_1BAEC5064();
      *(&v25 - 2) = sub_1BA53E618();
      *(&v25 - 1) = sub_1BAEC50A8();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E726F1A8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BA69C018();
  v26 = 0uLL;
  v27 = 0;
  sub_1BB8740D4();
  v17 = v28;
  v26 = xmmword_1BB8A1A10;
  v27 = 0;
  sub_1BA63BE34();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = v28;
  *(_QWORD *)v12 = v17;
  *(_BYTE *)(v12 + 8) = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA53E618()
{
  unint64_t result;

  result = qword_1ED3CCFC0;
  if (!qword_1ED3CCFC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4D40, &_s10CodingKeysON_19);
    atomic_store(result, (unint64_t *)&qword_1ED3CCFC0);
  }
  return result;
}

void sub_1BA53E65C(unint64_t a1, uint64_t a2)
{
  sub_1BA53E670(a1, a2);
}

void sub_1BA53E670(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BA71D254(a1, a2, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1BA53E690()
{
  unsigned __int8 *v0;

  return sub_1BAD81DBC(*v0);
}

uint64_t sub_1BA53E698(_QWORD *a1)
{
  return FormatColorModifyComponentProcessor.encode(to:)(a1);
}

uint64_t FormatColorModifyComponentProcessor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v24;
  char *v25;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  sub_1BAE896D0(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE *)v1;
  v13 = *(double *)(v1 + 8);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE895C8();
  v17 = sub_1BA4A2870(&qword_1ED3ABF68, (uint64_t (*)(uint64_t))sub_1BAE895C8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatColorModifyComponentProcessor, v18, v14, (uint64_t)&type metadata for FormatColorModifyComponentProcessor, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v11, v17, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v8, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0A50C(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v22 = (uint64_t)v25;
    v21(v25, v20, v19);
    swift_storeEnumTagMultiPayload();
    sub_1BAD0A668(1, 0, 0, v22, (uint64_t)sub_1BA90CF04, 0, v13);
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAE896D0);
}

uint64_t sub_1BA53E93C(_QWORD *a1)
{
  return FormatWebEmbedNodeBinding.encode(to:)(a1);
}

uint64_t FormatWebEmbedNodeBinding.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 8);
  v26 = *(_QWORD *)v1;
  v13 = *(_QWORD *)(v1 + 16);
  v14 = *(_BYTE *)(v1 + 24);
  v16 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v17 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatWebEmbedNodeBinding, v18, v16, (uint64_t)&type metadata for FormatWebEmbedNodeBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v11, v17, (uint64_t)&off_1E734BD80);
  if ((v14 & 1) != 0)
  {
    if (qword_1ED3C6D50 != -1)
      swift_once();
    v19 = sub_1BB86EB84();
    v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476BF0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v5, v20, v19);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACE50C0(1, v26, v12, v13, (uint64_t)v5);
    v21 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v22 = sub_1BB86EB84();
    v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v8, v23, v22);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA53EBE4(0, v26 & 1, (uint64_t)v8);
    v21 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA53EBE4(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE7DB0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA53ED4C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA53ED90();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA53ED4C()
{
  unint64_t result;

  result = qword_1ED3A78A8;
  if (!qword_1ED3A78A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C38A0, &_s10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3A78A8);
  }
  return result;
}

unint64_t sub_1BA53ED90()
{
  unint64_t result;

  result = qword_1ED39B818;
  if (!qword_1ED39B818)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.URL, &type metadata for FormatWebEmbedBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1ED39B818);
  }
  return result;
}

uint64_t sub_1BA53EDD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCornerRadius.RoundedValue.init(from:)(a1, a2);
}

uint64_t FormatCornerRadius.RoundedValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  char v26;

  v3 = v2;
  v25[0] = a2;
  sub_1BAE8E0B8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE8E130();
  sub_1BA4A2870(&qword_1ED3D0CF0, (uint64_t (*)(uint64_t))sub_1BAE8E130, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_BYTE *)v25[0];
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v25[0] = v13;
      MEMORY[0x1E0C80A78](v21);
      v25[-4] = &_s10CodingKeysON_149;
      v25[-3] = sub_1BAE8E1B0();
      v25[-2] = sub_1BA53F0DC();
      v25[-1] = sub_1BAE8E1F4();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71130((uint64_t)&unk_1E726B3A8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v25[0] + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v25[1] = 0;
  v25[2] = 0;
  v26 = 0;
  v18 = sub_1BB8740A4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v18 & 1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA53F0DC()
{
  unint64_t result;

  result = qword_1ED3C7C10;
  if (!qword_1ED3C7C10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBEF8, &_s10CodingKeysON_149);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C10);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatColorProcessor(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1BA74444C(*a2);
  *a1 = v3;
  return a1;
}

uint64_t sub_1BA53F150(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_retain();
  sub_1BA53F1E0(a1, v3);
  swift_release();
  sub_1BA4B07F0(0, &qword_1ED39A590, (uint64_t (*)(uint64_t))sub_1BA81DD70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BA53F1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3490], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - v6;
  v41 = sub_1BB86DEAC();
  v38 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v37 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v33 = (char *)&v33 - v10;
  v11 = *(_QWORD *)(a1 + 56);
  v35 = a1 + 56;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v36 = (unint64_t)(v12 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  v17 = MEMORY[0x1E0DEE9D8];
  v34 = a1;
  if (v14)
    goto LABEL_6;
LABEL_7:
  if (__OFADD__(v16++, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v16 >= v36)
    goto LABEL_33;
  v21 = *(_QWORD *)(v35 + 8 * v16);
  if (v21)
    goto LABEL_19;
  v22 = v16 + 1;
  if (v16 + 1 >= v36)
    goto LABEL_33;
  v21 = *(_QWORD *)(v35 + 8 * v22);
  if (v21)
  {
LABEL_18:
    v16 = v22;
LABEL_19:
    v14 = (v21 - 1) & v21;
    for (i = __clz(__rbit64(v21)) + (v16 << 6); ; i = v18 | (v16 << 6))
    {
      v23 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
      v24 = v23[1];
      v39 = *v23;
      v40 = v24;
      swift_bridgeObjectRetain();
      sub_1BA53F590(a2, (uint64_t)v7);
      if (v2)
        break;
      v25 = a1;
      swift_bridgeObjectRelease();
      v26 = v38;
      v27 = v41;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v7, 1, v41) == 1)
      {
        result = sub_1BB526BD4((uint64_t)v7);
        a1 = v25;
        if (!v14)
          goto LABEL_7;
      }
      else
      {
        v28 = a2;
        v29 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
        v30 = v33;
        v29(v33, v7, v27);
        v29(v37, v30, v27);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_1BA53F57C(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
        v32 = *(_QWORD *)(v17 + 16);
        v31 = *(_QWORD *)(v17 + 24);
        if (v32 >= v31 >> 1)
          v17 = sub_1BA53F57C(v31 > 1, v32 + 1, 1, v17);
        *(_QWORD *)(v17 + 16) = v32 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v29)(v17+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v32, v37, v41);
        a1 = v34;
        a2 = v28;
        if (!v14)
          goto LABEL_7;
      }
LABEL_6:
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return v17;
  }
  v22 = v16 + 2;
  if (v16 + 2 >= v36)
  {
LABEL_33:
    swift_release();
    return v17;
  }
  v21 = *(_QWORD *)(v35 + 8 * v22);
  if (v21)
    goto LABEL_18;
  v22 = v16 + 3;
  if (v16 + 3 >= v36)
    goto LABEL_33;
  v21 = *(_QWORD *)(v35 + 8 * v22);
  if (v21)
    goto LABEL_18;
  v22 = v16 + 4;
  if (v16 + 4 >= v36)
    goto LABEL_33;
  v21 = *(_QWORD *)(v35 + 8 * v22);
  if (v21)
    goto LABEL_18;
  while (1)
  {
    v16 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v16 >= v36)
      goto LABEL_33;
    v21 = *(_QWORD *)(v35 + 8 * v16);
    ++v22;
    if (v21)
      goto LABEL_19;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1BA53F57C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED39C1A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3490]);
}

id sub_1BA53F590@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v26 = a2;
  sub_1BA53FA70(0, &qword_1ED39A658, (unint64_t *)&qword_1ED39DAA0);
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4B07F0(0, &qword_1ED39A640, (uint64_t (*)(uint64_t))sub_1BA53FAC4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1BB86E008();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA53FA70(0, (unint64_t *)&unk_1ED39A648, (unint64_t *)&unk_1ED3B98D0);
  MEMORY[0x1E0C80A78](v9);
  swift_bridgeObjectRetain();
  v10 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v10 == 2)
  {
    v16 = objc_msgSend(objc_msgSend(*(id *)(a1 + 16), sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
    swift_unknownObjectRelease();
    if ((objc_msgSend(v16, sel_respondsToSelector_, sel_paidBundleConfig) & 1) != 0)
    {
      v17 = objc_msgSend(v16, sel_paidBundleConfig);
      swift_unknownObjectRelease();
      v27 = v17;
      v18 = qword_1ED39E300;
      v19 = v17;
      if (v18 != -1)
        swift_once();
      v20 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED39A4B0);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v20, v5);
      sub_1BA49A224(0, (unint64_t *)&qword_1ED39DAA0);
      sub_1BB86ECF8();
      v15 = v26;
      sub_1BB86DEA0();

      goto LABEL_16;
    }
    swift_unknownObjectRelease();
LABEL_18:
    v25 = sub_1BB86DEAC();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v26, 1, 1, v25);
  }
  if (v10 == 1)
  {
    v21 = objc_msgSend(objc_msgSend(*(id *)(a1 + 16), sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
    swift_unknownObjectRelease();
    v27 = v21;
    v22 = qword_1ED39E300;
    swift_unknownObjectRetain();
    if (v22 != -1)
      swift_once();
    v23 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED39A4B0);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v23, v5);
    sub_1BA53FAC4();
    sub_1BB86ECF8();
    swift_unknownObjectRelease();
    v15 = v26;
    goto LABEL_15;
  }
  if (v10)
    goto LABEL_18;
  result = objc_msgSend(*(id *)(a1 + 16), sel_subscriptionController);
  if (result)
  {
    v27 = result;
    v12 = qword_1ED39E300;
    v13 = result;
    if (v12 != -1)
      swift_once();
    v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED39A4B0);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
    sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98D0);
    sub_1BB86ECF8();

    v15 = v26;
LABEL_15:
    sub_1BB86DEA0();
LABEL_16:
    v24 = sub_1BB86DEAC();
    return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 0, 1, v24);
  }
  __break(1u);
  return result;
}

void sub_1BA53FA70(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA49A224(255, a3);
    v4 = sub_1BB86ED40();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BA53FAC4()
{
  unint64_t result;

  result = qword_1ED39C030;
  if (!qword_1ED39C030)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED39C030);
  }
  return result;
}

uint64_t sub_1BA53FB18()
{
  sub_1BA53FBC0();
  return sub_1BB872D0C();
}

uint64_t sub_1BA53FB64()
{
  sub_1BA53FBC0();
  return sub_1BB872D60();
}

unint64_t sub_1BA53FBC0()
{
  unint64_t result;

  result = qword_1ED3C92F0;
  if (!qword_1ED3C92F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C27D8, &_s10CodingTypeON_6);
    atomic_store(result, (unint64_t *)&qword_1ED3C92F0);
  }
  return result;
}

uint64_t initializeWithCopy for FormatLayeredMediaNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0)
    swift_retain();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(unsigned __int8 *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v7 <= 0xFD)
  {
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    sub_1BA6F2B04(v8, v9, v7);
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 56) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  }
  if (*(unsigned __int8 *)(a2 + 144) == 254)
  {
    v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    swift_retain();
  }
  v12 = *(unsigned __int8 *)(a2 + 168);
  if (v12 == 255)
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  }
  else
  {
    v13 = v12 & 1;
    v14 = *(_QWORD *)(a2 + 152);
    v15 = *(_QWORD *)(a2 + 160);
    sub_1BA69C808(v14, v15, v12 & 1);
    *(_QWORD *)(a1 + 152) = v14;
    *(_QWORD *)(a1 + 160) = v15;
    *(_BYTE *)(a1 + 168) = v13;
  }
  v16 = *(unsigned __int8 *)(a2 + 192);
  if (v16 == 255)
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  }
  else
  {
    v17 = v16 & 1;
    v18 = *(_QWORD *)(a2 + 176);
    v19 = *(_QWORD *)(a2 + 184);
    sub_1BA69C808(v18, v19, v16 & 1);
    *(_QWORD *)(a1 + 176) = v18;
    *(_QWORD *)(a1 + 184) = v19;
    *(_BYTE *)(a1 + 192) = v17;
  }
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA53FDD8(_QWORD *a1)
{
  return FormatTypeDefinition.Case.encode(to:)(a1);
}

uint64_t sub_1BA53FDEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatOptionsNodeStatement.init(from:)(a1, a2);
}

uint64_t FormatOptionsNodeStatement.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (**v9)(char *, _QWORD);
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  void (**v31)(char *, _QWORD);
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  void (**v47)(char *, _QWORD);
  __int128 v48;
  char v49;
  __int128 v50;
  char v51;

  v44 = a2;
  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4760, (void (*)(void))sub_1BA82089C, (void (*)(void))sub_1BA8208E0);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v37 - v4;
  v46 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1E0C80A78](v46);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEA9930();
  v45 = v8;
  v9 = *(void (***)(char *, _QWORD))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA99A8();
  sub_1BA4A2870(&qword_1ED3D1240, (uint64_t (*)(uint64_t))sub_1BAEA99A8, (uint64_t)&unk_1BB8FFC6C);
  v12 = v47;
  sub_1BB87468C();
  v13 = v12;
  if (v12)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v13);
    swift_willThrow();

    v28 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  v41 = v5;
  v47 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v16 = v45;
  if ((v15 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v24 = *((_QWORD *)v19 - 2);
      v23 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v25 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v25);
      *(&v37 - 4) = (uint64_t)&_s10CodingKeysON_85;
      *(&v37 - 3) = sub_1BAEA9A28();
      *(&v37 - 2) = sub_1BA540300();
      *(&v37 - 1) = sub_1BAEA9A6C();
      swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71220((uint64_t)&unk_1E726D238);
      swift_release_n();
      sub_1BA98D1F0();
      v13 = (void *)swift_allocError();
      *(_QWORD *)v27 = v24;
      *(_QWORD *)(v27 + 8) = v23;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v24, v23, 1);
      v47[1](v11, v16);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v50 = 0uLL;
  v51 = 0;
  v20 = sub_1BB874098();
  v22 = v21;
  v50 = xmmword_1BB8A1A10;
  v51 = 0;
  sub_1BA4A2870(&qword_1ED3B8788, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatementValue);
  sub_1BB8740D4();
  v40 = v20;
  v46 = (uint64_t)a1;
  v39 = xmmword_1BB8D2D60;
  v50 = xmmword_1BB8D2D60;
  v51 = 0;
  v30 = sub_1BB8740F8();
  v31 = v47;
  if ((v30 & 1) != 0)
  {
    v38 = v22;
    v48 = v39;
    v49 = 0;
    sub_1BAEA9AB0();
    v32 = v41;
    v33 = v43;
    sub_1BB8740D4();
    v34 = v44;
    v35 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v33);
    v22 = v38;
  }
  else
  {
    v35 = MEMORY[0x1E0DEE9D8];
    v34 = v44;
  }
  v31[1](v11, v16);
  v36 = type metadata accessor for FormatOptionsNodeStatement();
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v34 + *(int *)(v36 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
  *v34 = v40;
  v34[1] = v22;
  *(uint64_t *)((char *)v34 + *(int *)(v36 + 24)) = v35;
  v28 = v46;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

unint64_t sub_1BA540300()
{
  unint64_t result;

  result = qword_1ED3CB980;
  if (!qword_1ED3CB980)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8878, &_s10CodingKeysON_85);
    atomic_store(result, (unint64_t *)&qword_1ED3CB980);
  }
  return result;
}

void sub_1BA540344()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4760)
  {
    sub_1BA82089C();
    sub_1BA8208E0();
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4760);
  }
}

uint64_t FormatContentSubgroup.ResolvedContainer.sections.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  sub_1BA6D78DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BA540450(_QWORD *a1)
{
  return FormatTextNodeAlternativeLogic.TextLines.encode(to:)(a1);
}

uint64_t FormatTextNodeAlternativeLogic.TextLines.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  _BYTE v25[12];
  int v26;
  _BYTE *v27;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v27 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v25[-v8];
  sub_1BAEC50EC(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(_QWORD *)v1;
  v26 = *(unsigned __int8 *)(v1 + 8);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAEC4FE4();
  v17 = sub_1BA4A2870(&qword_1ED3D1340, (uint64_t (*)(uint64_t))sub_1BAEC4FE4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextNodeAlternativeLogic.TextLines, v18, v14, (uint64_t)&type metadata for FormatTextNodeAlternativeLogic.TextLines, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v12, v17, (uint64_t)&off_1E734BD80);
  v19 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0CA24(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v23 = (uint64_t)v27;
    v22(v27, v21, v20);
    swift_storeEnumTagMultiPayload();
    sub_1BAD0CBA8(v26, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAEC50EC);
}

uint64_t sub_1BA540700(_QWORD *a1)
{
  return FormatPublisherLogoSizing.encode(to:)(a1);
}

uint64_t FormatPublisherLogoSizing.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v34 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v34 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - v13;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatPublisherLogoSizing, v22, v19, (uint64_t)&type metadata for FormatPublisherLogoSizing, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v20, (uint64_t)v17, v21, (uint64_t)&off_1E734BD80);
  switch(v18)
  {
    case 0uLL:
      if (qword_1ED3C6D58 != -1)
        swift_once();
      v26 = sub_1BB86EB84();
      v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v14, v27, v26);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA540B0C(0, (uint64_t)v14);
      v25 = (uint64_t)v14;
      goto LABEL_13;
    case 1uLL:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v28 = sub_1BB86EB84();
      v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v29, v28);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA540B0C(1, (uint64_t)v11);
      v25 = (uint64_t)v11;
      goto LABEL_13;
    case 2uLL:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v23 = sub_1BB86EB84();
      v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v8, v24, v23);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BA540B0C(2, (uint64_t)v8);
      v25 = (uint64_t)v8;
LABEL_13:
      sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
      return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  v30 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v30 != -1)
    swift_once();
  v31 = sub_1BB86EB84();
  v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v5, v32, v31);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACE5AE4(3, v18, (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BA738D54(v18);
  return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA540B0C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEDC68;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA540C30();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA540C30()
{
  unint64_t result;

  result = qword_1ED3A77D8;
  if (!qword_1ED3A77D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE250, &_s10CodingTypeON_47);
    atomic_store(result, (unint64_t *)&qword_1ED3A77D8);
  }
  return result;
}

void sub_1BA540C74(_QWORD *a1)
{
  FormatPublisherLogoSizeBinding.encode(to:)(a1);
}

void FormatPublisherLogoSizeBinding.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatPublisherLogoSizeBinding, v14, v11, (uint64_t)&type metadata for FormatPublisherLogoSizeBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v12, (uint64_t)v9, v13, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BA540DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA541074(0, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BA541074(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEDC74;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA541198();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA541198()
{
  unint64_t result;

  result = qword_1ED3A8DB8;
  if (!qword_1ED3A8DB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE188, &_s10CodingTypeON_48);
    atomic_store(result, (unint64_t *)&qword_1ED3A8DB8);
  }
  return result;
}

uint64_t initializeWithCopy for FormatBorder(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA541248()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA54127C + 4 * byte_1BB8AE3B5[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA54127C()
{
  return 0x6564496B636F6C62;
}

uint64_t sub_1BA5412A0()
{
  return 0x73776F726874;
}

uint64_t sub_1BA5412B4()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BA5412CC()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA5412E8()
{
  return 1885433183;
}

uint64_t sub_1BA5412F8(_QWORD *a1)
{
  return FormatTextAdjustmentOtherBaseline.encode(to:)(a1);
}

uint64_t FormatTextAdjustmentOtherBaseline.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - v6;
  sub_1BAEC4550(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v12 = v1[1];
  v26 = v1[2];
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAEC4448();
  v16 = sub_1BA4A2870(&qword_1ED3D13F0, (uint64_t (*)(uint64_t))sub_1BAEC4448, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextAdjustmentOtherBaseline, v17, v13, (uint64_t)&type metadata for FormatTextAdjustmentOtherBaseline, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v10, v16, (uint64_t)&off_1E734BD80);
  v18 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v28;
  sub_1BAD0AE94(v11, v12, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v23 = (uint64_t)v27;
    v21(v27, v20, v19);
    swift_storeEnumTagMultiPayload();
    v24 = swift_retain();
    sub_1BAD0AFEC(v24, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAEC4550);
}

